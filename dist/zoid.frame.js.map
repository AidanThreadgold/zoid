{"version":3,"sources":["webpack://zoid/webpack/universalModuleDefinition","webpack://zoid/webpack/bootstrap","webpack://zoid/./node_modules/belter/src/index.js","webpack://zoid/./node_modules/zalgo-promise/src/utils.js","webpack://zoid/./node_modules/zalgo-promise/src/global.js","webpack://zoid/./node_modules/zalgo-promise/src/promise.js","webpack://zoid/./node_modules/zalgo-promise/src/exceptions.js","webpack://zoid/./node_modules/zalgo-promise/src/index.js","webpack://zoid/./node_modules/cross-domain-utils/src/index.js","webpack://zoid/./node_modules/belter/src/util.js","webpack://zoid/./node_modules/@babel/runtime/helpers/esm/extends.js","webpack://zoid/./node_modules/cross-domain-utils/src/constants.js","webpack://zoid/./node_modules/cross-domain-safe-weakmap/src/util.js","webpack://zoid/./node_modules/cross-domain-safe-weakmap/src/weakmap.js","webpack://zoid/./node_modules/cross-domain-safe-weakmap/src/native.js","webpack://zoid/./node_modules/cross-domain-safe-weakmap/src/index.js","webpack://zoid/./node_modules/belter/src/device.js","webpack://zoid/./node_modules/belter/src/storage.js","webpack://zoid/./node_modules/belter/src/dom.js","webpack://zoid/./node_modules/belter/src/experiment.js","webpack://zoid/./node_modules/belter/src/global.js","webpack://zoid/./node_modules/belter/src/http.js","webpack://zoid/./node_modules/belter/src/decorators.js","webpack://zoid/./node_modules/belter/src/css.js","webpack://zoid/./node_modules/belter/src/test.js","webpack://zoid/./node_modules/cross-domain-utils/src/util.js","webpack://zoid/./node_modules/cross-domain-utils/src/utils.js","webpack://zoid/./node_modules/@babel/runtime/helpers/esm/applyDecoratedDescriptor.js","webpack://zoid/./node_modules/post-robot/src/conf/constants.js","webpack://zoid/./node_modules/post-robot/src/conf/config.js","webpack://zoid/./node_modules/post-robot/src/global.js","webpack://zoid/./node_modules/post-robot/src/lib/hello.js","webpack://zoid/./node_modules/post-robot/src/lib/windows.js","webpack://zoid/./node_modules/universal-serialize/src/constants.js","webpack://zoid/./node_modules/universal-serialize/src/common.js","webpack://zoid/./node_modules/universal-serialize/src/serialize.js","webpack://zoid/./node_modules/universal-serialize/src/serializers/function.js","webpack://zoid/./node_modules/universal-serialize/src/serializers/error.js","webpack://zoid/./node_modules/universal-serialize/src/serializers/promise.js","webpack://zoid/./node_modules/universal-serialize/src/serializers/regex.js","webpack://zoid/./node_modules/universal-serialize/src/serializers/date.js","webpack://zoid/./node_modules/universal-serialize/src/serializers/array.js","webpack://zoid/./node_modules/universal-serialize/src/serializers/object.js","webpack://zoid/./node_modules/universal-serialize/src/serializers/string.js","webpack://zoid/./node_modules/universal-serialize/src/serializers/number.js","webpack://zoid/./node_modules/universal-serialize/src/serializers/boolean.js","webpack://zoid/./node_modules/universal-serialize/src/serializers/null.js","webpack://zoid/./node_modules/universal-serialize/src/deserialize.js","webpack://zoid/./node_modules/post-robot/src/serialize/window.js","webpack://zoid/./node_modules/post-robot/src/serialize/function.js","webpack://zoid/./node_modules/post-robot/src/serialize/serialize.js","webpack://zoid/./node_modules/post-robot/src/serialize/promise.js","webpack://zoid/./node_modules/post-robot/src/drivers/send/strategies.js","webpack://zoid/./node_modules/post-robot/src/lib/compat.js","webpack://zoid/./node_modules/post-robot/src/drivers/send/index.js","webpack://zoid/./node_modules/post-robot/src/drivers/listeners.js","webpack://zoid/./node_modules/post-robot/src/drivers/receive/types.js","webpack://zoid/./node_modules/post-robot/src/drivers/receive/index.js","webpack://zoid/./node_modules/post-robot/src/public/client.js","webpack://zoid/./node_modules/post-robot/src/public/server.js","webpack://zoid/./node_modules/post-robot/src/public/config.js","webpack://zoid/./node_modules/post-robot/src/public/index.js","webpack://zoid/./node_modules/post-robot/src/clean.js","webpack://zoid/./node_modules/post-robot/src/interface.js","webpack://zoid/./node_modules/post-robot/src/index.js","webpack://zoid/./src/constants.js","webpack://zoid/./src/lib/global.js","webpack://zoid/./src/lib/window.js","webpack://zoid/./src/child/props.js","webpack://zoid/./src/child/index.js","webpack://zoid/./src/parent/drivers.js","webpack://zoid/./src/parent/index.js","webpack://zoid/./src/parent/props.js","webpack://zoid/./src/delegate/index.js","webpack://zoid/./node_modules/@babel/runtime/helpers/esm/inheritsLoose.js","webpack://zoid/./node_modules/jsx-pragmatic/src/node.js","webpack://zoid/./node_modules/jsx-pragmatic/src/renderers/dom.js","webpack://zoid/./src/component/templates/container.jsx","webpack://zoid/./src/component/templates/component.jsx","webpack://zoid/./src/component/component.js","webpack://zoid/./src/component/validate.js","webpack://zoid/./src/component/props.js","webpack://zoid/./src/index.js"],"names":["root","factory","exports","module","define","amd","self","this","installedModules","__webpack_require__","moduleId","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","_dom__WEBPACK_IMPORTED_MODULE_1__","__webpack_exports__","_util__WEBPACK_IMPORTED_MODULE_5__","_types__WEBPACK_IMPORTED_MODULE_7__","_decorators__WEBPACK_IMPORTED_MODULE_8__","_css__WEBPACK_IMPORTED_MODULE_9__","isPromise","item","Promise","window","Window","constructor","toString","then","err","getGlobal","glob","global","TypeError","zalgoGlobal","__zalgopromise__","flushPromises","activeCount","possiblyUnhandledPromiseHandlers","dispatchedErrors","ZalgoPromise","handler","_this","resolved","rejected","errorHandled","error","handlers","dispatching","stack","result","isAsync","res","resolve","reject","_proto","Error","dispatch","_this2","setTimeout","promise","indexOf","push","j","length","dispatchPossiblyUnhandledError","asyncReject","_this3","_loop","_handlers$i","onSuccess","onError","flushQueue","catch","undefined","finally","onFinally","try","timeout","time","_this4","clearTimeout","toPromise","all","promises","count","results","_loop2","prom","hash","keys","map","items","method","onPossiblyUnhandledException","cancel","splice","context","args","apply","delay","flush","promisesToFlush","_i2","promise_ZalgoPromise","_utils__WEBPACK_IMPORTED_MODULE_0__","_types__WEBPACK_IMPORTED_MODULE_1__","_constants__WEBPACK_IMPORTED_MODULE_2__","base64encode","base64decode","uniqueID","memoize","memoizePromise","promisify","inlineMemoize","noop","once","stringifyError","stringify","extend","values","safeInterval","dotify","capitalizeFirstLetter","isDefined","isRegex","weakMapMemoizePromise","getOrSet","cleanup","tryCatch","removeFromArray","objectIDs","zalgo_promise_src__WEBPACK_IMPORTED_MODULE_0__","cross_domain_safe_weakmap_src__WEBPACK_IMPORTED_MODULE_1__","str","btoa","Buffer","from","atob","chars","replace","charAt","Math","floor","random","Date","toISOString","slice","toLowerCase","__GLOBAL__","serializeArgs","JSON","Array","subkey","val","obj","WeakMap","uid","set","getObjectID","options","cacheMap","memoizedFunction","_len","arguments","_key","cache","thisNamespace","cacheTime","now","reset","delete","displayName","memoizedPromiseFunction","_len2","_key2","promisifiedFunction","logic","__inline_memoize_cache__","called","level","message","newErr","source","assign","loop","prefix","newobj","isArray","every","join","string","toUpperCase","weakmap","arg","_this5","tasks","cleaned","register","task","pop","fn","arr","index","_extends","target","PROTOCOL","WILDCARD","WINDOW_TYPE","MOCK","FILE","ABOUT","IFRAME","POPUP","safeIndexOf","collection","counter","CrossDomainSafeWeakMap","freeze","testWeakMap","testKey","hasNativeWeakMap","_cleanupClosedWindows","isWindow","isWindowClosed","isSafeToReadWrite","entry","writable","has","weakmap_CrossDomainSafeWeakMap","isDevice","navigator","mockUserAgent","userAgent","match","getStorage","_util__WEBPACK_IMPORTED_MODULE_0__","_ref","_ref$version","version","_ref$lifetime","lifetime","accessedStorage","STORAGE_KEY","getState","storage","localStorageEnabled","isLocalStorageEnabled","rawStorage","localStorage","getItem","parse","id","setItem","getSession","session","__session__","created","guid","getID","getSessionState","state","getSessionID","awaitFrameLoadPromises","isDocumentReady","Boolean","document","body","readyState","urlEncode","waitForDocumentReady","interval","setInterval","clearInterval","waitForDocumentBody","parseQuery","queryString","params","_queryString$split2","split","pair","decodeURIComponent","extendQuery","originalQuery","props","filter","formatQuery","esm_extends","extendUrl","url","originalUrl","originalHash","query","_url$split","_originalUrl$split","hashString","removeItem","appendChild","container","child","isElement","element","Element","nodeType","style","ownerDocument","getElementSafe","doc","querySelector","getElement","elementReady","el","PopupOpenError","writeElementToWindow","win","tag","tagName","documentElement","children","removeChild","awaitFrameLoad","frame","addEventListener","linkFrameWindow","contentWindow","awaitFrameWindow","loadedFrame","createElement","class","className","attributes","_i6","_Object$keys2","setAttribute","styleSheet","styleText","cssText","createTextNode","setStyle","html","open","write","close","location","err2","writeToWindow","innerHTML","iframe","attempts","frameBorder","allowTransparency","backgroundColor","event","removeEventListener","destroyElement","parentNode","addClass","classList","add","removeClass","remove","isElementClosed","watchElementForClose","onResize","_temp","_ref2","_ref2$width","width","_ref2$height","height","_ref2$interval","_ref2$win","currentWidth","offsetWidth","currentHeight","offsetHeight","observer","check","newWidth","newHeight","ResizeObserver","observe","MutationObserver","childList","subtree","characterData","disconnect","memoized","descriptor","isPerc","isPx","toCSS","test","toPx","parseInt","toNum","getParent","getOpener","getActualDomain","getDomain","isBlankDomain","isActuallySameDomain","isSameDomain","assertSameDomain","getTop","getAllFramesInWindow","isTop","getUserAgent","getAncestor","isAncestor","getDistanceFromTop","getNthParentFromTop","isSameTopWindow","matchDomain","stringifyDomainPattern","getDomainFromUrl","onCloseWindow","normalizeMockUrl","IE_WIN_ACCESS_ERROR","isAboutProtocol","protocol","parent","opener","canReadFromWindow","href","host","domain","mockDomain","desc","getOwnPropertyDescriptor","isAncestorParent","childParent","getParents","getFrames","frames","len","getAllChildFrames","_i3","_getFrames2","_i5","_getAllChildFrames2","childFrame","top","_i7","_getAllChildFrames4","concat","iframeWindows","iframeFrames","allowMock","closed","mockclosed","iframeIndex","contains","isFrameWindowClosed","cleanIframes","actualParent","_i15","_getFrames8","anyMatch","collection1","collection2","_i17","item1","_i19","distance","getNthParent","win1","win2","top1","top2","allFrames1","allFrames2","opener1","opener2","pattern","origin","some","subpattern","callback","maxtime","Infinity","__cross_domain_utils_window_check__","_applyDecoratedDescriptor","decorators","forEach","configurable","initializer","reverse","reduce","decorator","MESSAGE_TYPE","REQUEST","RESPONSE","ACK","MESSAGE_NAME","METHOD","HELLO","OPEN_TUNNEL","WINDOW_PROP","POSTROBOT","SERIALIZATION_TYPE","CROSS_DOMAIN_ZALGO_PROMISE","CROSS_DOMAIN_FUNCTION","CROSS_DOMAIN_WINDOW","CONFIG","BRIDGE_TIMEOUT","CHILD_WINDOW_TIMEOUT","ACK_TIMEOUT","ACK_TIMEOUT_KNOWN","RES_TIMEOUT","ALLOWED_POST_MESSAGE_METHODS","_ALLOWED_POST_MESSAGE","winStore","windowStore","getObj","defStore","getStore","defVal","store","del","globalStore","storeKey","instanceID","helloPromises","getHelloPromise","listenForHello","on","sayHello","send","data","getWindowInstanceID","_ref3","knownWindows","markWindowKnown","TYPE","FUNCTION","ERROR","PROMISE","REGEX","DATE","ARRAY","OBJECT","STRING","NUMBER","BOOLEAN","NULL","UNDEFINED","isSerializedType","__type__","determineType","serializeType","type","__val__","SERIALIZER","_SERIALIZER","code","toJSON","defaultSerializers","DESERIALIZER","_DESERIALIZER","RegExp","defaultDeserializers","winToProxyWindow","idToProxyWindow","cleanupProxyWindows","_idToProxyWindow$keys2","shouldClean","ProxyWindow","serializedWindow","actualWindow","isProxyWindow","actualWindowPromise","setWindow","getInstanceID","getType","isPopup","isIframe","setLocation","setName","frameElement","focus","isClosed","matchWindow","_this6","unwrap","awaitWindow","serialize","toProxyWindow","deserialize","methodStore","proxyWindowMethods","listeningForFunctions","listenForFunctionCalls","meth","proxy","serializeFunction","destination","serializeMessage","_serialize","serializers","serializer","serializePromise","deserializeMessage","_deserialize","deserializers","deserializer","serializedPromise","serializedFunction","innerWrapper","opts","crossDomainFunctionWrapper","fireAndForget","__name__","__xdomain__","deserializeFunction","SEND_MESSAGE_STRATEGIES","serializedMessage","dom","postMessage","foreignGlobal","receiveMessage","sendMessage","_serializeMessage","messages","strategyName","success","status","responseListeners","requestListeners","erroredResponseListeners","WINDOW_WILDCARD","__DOMAIN_REGEX__","getResponseListener","deleteResponseListener","isResponseListenerErrored","getRequestListener","winQualifier","nameListeners","domainListeners","_i4","_domainListeners$__DO2","_domainListeners$__DO3","regex","listener","RECEIVE_MESSAGE_TYPES","_RECEIVE_MESSAGE_TYPE","sendResponse","pathname","ack","handleError","respond","receivedMessages","parsedMessage","parseMessage","messageListener","messageEvent","sourceElement","originalEvent","requestPromises","request","targetWindow","getElementById","HTMLIFrameElement","hasResult","reqPromises","requestPromise","awaitWindowHello","_temp2","actualDomain","responseListener","addResponseListener","totalAckTimeout","isWindowKnown","totalResTimeout","ackTimeout","resTimeout","cycleTime","cycle","max","min","markResponseListenerErrored","sendToParent","client","listen","listenerOptions","errorHandler","requestListener","addRequestListener","_ref4","listenersCollection","_win2","_i8","_i10","_domain2","_i12","existingListener","regexListeners","regexListener","strDomain","onceFunction","errorOnClose","onceListener","disable","cleanUpWindow","_requestPromises$get2","bridge","initialized","openTunnelToOpener","initHello","INTERFACE","PROP_TYPE","PROP_SERIALIZATION","DOTIFY","BASE64","CONTEXT","CLASS","OUTLET","ZOID","COMPONENT_FRAME","PRERENDER_FRAME","VISIBLE","INVISIBLE","globalFor","localGlobal","parseChildWindowName","_window$name$split","zoidcomp","encodedPayload","isZoidComponentWindow","normalizeChildProp","component","helpers","prop","getPropDefinition","resize","onPropsChange","childDecorate","ChildComponent","_class","parentComponentWindow","onPropHandlers","autoResize","_parseChildWindowName","getWindowByRef","checkParentDomain","initialProps","getPropsByRef","setProps","watchForClose","init","buildExports","watchForResize","getHelpers","allowedParentDomains","ref","ancestor","_getAllFramesInWindow2","windows","getProps","isUpdate","existingProps","normalizedProps","sameDomain","alias","_component$getPropNam2","getPropNames","normalizeChildProps","_this$onPropHandlers2","checkClose","destroy","enableAutoResize","_ref3$width","_ref3$height","_ref3$element","getAutoResize","_ref4$width","_ref4$height","_ref4$element","_this4$getAutoResize","_ref5","updateProps","_ref6","RENDER_DRIVERS","renderedIntoContainer","callChildToClose","title","clean","detectClose","iframeWatcher","elementWatcher","openPrerender","prerenderIframe","prerenderFrameWindow","switchPrerender","delegate","ParentComponent","parent_class","driver","initPromise","errored","proxyWin","registerActiveComponent","destroyActiveComponent","render","log","initialDomain","getInitialDomain","checkAllowRender","buildUrl","onRender","watchForUnload","renderContainer","buildWindowName","setWindowName","windowName","prerender","onDisplay","openBridge","loadUrl","runTimeout","onRendered","childPayload","buildChildPayload","getPropsRef","getPropsForChild","propRef","_ref5$target","getWindowRef","buildParentExports","validate","instance","propNames","aliases","propDef","default","_Object$keys4","decorate","normalizeProps","_this$component$getPr2","required","propsDef","builtinProps","queryParam","getQueryParam","queryValue","getQueryValue","serialization","_Object$keys6","dotkey","getUrl","sendToChild","windowProp","_this7","_this8","_this9","_this$component$getPr4","propName","allowDelegate","overridesPromise","POST_MESSAGE","overrides","_ref7","_this$driver$delegate2","_this10","_arguments","_this11","closeWindowListener","onClose","_this12","unloadWindowListener","_this13","initChild","_this14","_this15","_ref8","_ref9","_this16","_this17","secondClosed","_this18","_ref10","_this19","prerenderWindow","renderTemplate","prerenderTemplate","_ref11","_ref11$width","_ref11$height","_ref11$element","_ref12","renderer","_ref13","_this20","outlet","dimensions","_ref14","_this21","containerTemplate","_this22","_this23","DelegateComponent","watchForSourceClose","getDelegate","getOverrides","closeSourceWindowListener","_inheritsLoose","subClass","superClass","__proto__","Node","isElementNode","isTextNode","isFragmentNode","ElementNode","_Node","_proto2","getTag","isTag","getText","TextNode","_Node2","text","_proto3","FragmentNode","_Node3","_proto4","normalizeChild","normalizeChildren","normalizedChild","_normalizedChild$chil2","subchild","node","DOM_EVENT","onBlur","onCancel","onClick","onContextMenu","onCopy","onCut","onAuxClick","onDoubleClick","onDragEnd","onDragStart","onDrop","onFocus","onInput","onInvalid","onKeyDown","onKeyPress","onKeyUp","onMouseDown","onMouseUp","onPaste","onPause","onPlay","onPointerCancel","onPointerDown","onPointerUp","onRateChange","onReset","onSeeked","onSubmit","onTouchCancel","onTouchEnd","onTouchStart","onVolumeChange","onAbort","onAnimationEnd","onAnimationIteration","onAnimationStart","onCanPlay","onCanPlayThrough","onDrag","onDragEnter","onDragExit","onDragLeave","onDragOver","onDurationChange","onEmptied","onEncrypted","onEnded","onGotPointerCapture","onLoad","onLoadedData","onLoadedMetadata","onLoadStart","onLostPointerCapture","onMouseMove","onMouseOut","onMouseOver","onPlaying","onPointerMove","onPointerOut","onPointerOver","onProgress","onScroll","onSeeking","onStalled","onSuspend","onTimeUpdate","onToggle","onTouchMove","onTransitionEnd","onWaiting","onWheel","CREATE_ELEMENT","_CREATE_ELEMENT","ADD_CHILDREN","_ADD_CHILDREN","firstChild","docElement","domRenderer","_ref9$doc","addProps","ELEMENT_PROP","_el$querySelectorAll2","querySelectorAll","script","newScript","textContent","replaceChild","fixScripts","addChildren","defaultContainerTemplate","_ref$dimensions","defaultPrerenderTemplate","drivers","Component","component_class","component_temp","_class2","bridgeUrl","defaultContext","driverCache","xprops","logger","PROP_TYPE_LIST","validatePropDefinitions","components","onChange","_ref$width","_ref$height","popup","debug","info","warn","registerChild","listenDelegate","dep","isChild","_ref2$data","canRenderTo","getBridgeUrl","getDefaultElement","getDefaultContext","renderTo","payload","activeComponents","destroyAll","destroyBridges","src","component_destroyAll","component_Component"],"mappings":"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","file":"zoid.frame.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"zoid\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"zoid\"] = factory();\n\telse\n\t\troot[\"zoid\"] = factory();\n})((typeof self !== 'undefined' ? self : this), function() {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 19);\n","/* @flow */\n\nexport * from './device';\nexport * from './dom';\nexport * from './experiment';\nexport * from './global';\nexport * from './storage';\nexport * from './util';\nexport * from './http';\nexport * from './types';\nexport * from './decorators';\nexport * from './css';\nexport * from './test';\n","/* @flow */\n\nexport function isPromise(item : mixed) : boolean {\n    try {\n        if (!item) {\n            return false;\n        }\n\n        if (typeof Promise !== 'undefined' && item instanceof Promise) {\n            return true;\n        }\n\n        if (typeof window !== 'undefined' && window.Window && item instanceof window.Window) {\n            return false;\n        }\n\n        if (typeof window !== 'undefined' && window.constructor && item instanceof window.constructor) {\n            return false;\n        }\n\n        let toString = ({}).toString;\n\n        if (toString) {\n            let name = toString.call(item);\n\n            if (name === '[object Window]' || name === '[object global]' || name === '[object DOMWindow]') {\n                return false;\n            }\n        }\n\n        if (typeof item.then === 'function') {\n            return true;\n        }\n    } catch (err) {\n        return false;\n    }\n\n    return false;\n}\n","/* @flow */\n\nimport type { ZalgoPromise } from './promise';\n\ntype ZalgoGlobalType = {\n    flushPromises : Array<ZalgoPromise<mixed>>,\n    activeCount : number,\n    possiblyUnhandledPromiseHandlers : Array<<T>(mixed, ZalgoPromise<T>) => void>, // eslint-disable-line no-undef\n    dispatchedErrors : Array<mixed>\n};\n\nexport function getGlobal() : ZalgoGlobalType {\n\n    let glob;\n\n    if (typeof window !== 'undefined') {\n        glob = window;\n    } else if (typeof global !== 'undefined') {\n        glob = global;\n    } else {\n        throw new TypeError(`Can not find global`);\n    }\n\n    let zalgoGlobal = glob.__zalgopromise__ = glob.__zalgopromise__ || {};\n    zalgoGlobal.flushPromises = zalgoGlobal.flushPromises || [];\n    zalgoGlobal.activeCount = zalgoGlobal.activeCount || 0;\n    zalgoGlobal.possiblyUnhandledPromiseHandlers = zalgoGlobal.possiblyUnhandledPromiseHandlers || [];\n    zalgoGlobal.dispatchedErrors = zalgoGlobal.dispatchedErrors || [];\n\n    return zalgoGlobal;\n}\n","/* @flow */\n\nimport { isPromise } from './utils';\nimport { onPossiblyUnhandledException, dispatchPossiblyUnhandledError } from './exceptions';\nimport { getGlobal } from './global';\n\nexport class ZalgoPromise<R : mixed> {\n\n    resolved : boolean\n    rejected : boolean\n    errorHandled : boolean\n    value : R\n    error : mixed\n    handlers : Array<{\n        promise : ZalgoPromise<*>,\n        onSuccess : void | (result : R) => mixed,\n        onError : void | (error : mixed) => mixed\n    }>\n    dispatching : boolean\n    stack : string\n\n    constructor(handler : ?(resolve : (result : R) => void, reject : (error : mixed) => void) => void) {\n\n        this.resolved = false;\n        this.rejected = false;\n        this.errorHandled = false;\n\n        this.handlers = [];\n\n        if (handler) {\n\n            let result;\n            let error;\n            let resolved = false;\n            let rejected = false;\n            let isAsync = false;\n\n            try {\n                handler(res => {\n                    if (isAsync) {\n                        this.resolve(res);\n                    } else {\n                        resolved = true;\n                        result = res;\n                    }\n\n                }, err => {\n                    if (isAsync) {\n                        this.reject(err);\n                    } else {\n                        rejected = true;\n                        error = err;\n                    }\n                });\n\n            } catch (err) {\n                this.reject(err);\n                return;\n            }\n\n            isAsync = true;\n\n            if (resolved) {\n                // $FlowFixMe\n                this.resolve(result);\n            } else if (rejected) {\n                this.reject(error);\n            }\n        }\n\n        if (__DEBUG__) {\n            try {\n                throw new Error(`ZalgoPromise`);\n            } catch (err) {\n                this.stack = err.stack;\n            }\n        }\n    }\n\n    resolve(result : R) : ZalgoPromise<R> {\n        if (this.resolved || this.rejected) {\n            return this;\n        }\n\n        if (isPromise(result)) {\n            throw new Error('Can not resolve promise with another promise');\n        }\n\n        this.resolved = true;\n        this.value = result;\n        this.dispatch();\n\n        return this;\n    }\n\n    reject(error : mixed) : ZalgoPromise<R> {\n        if (this.resolved || this.rejected) {\n            return this;\n        }\n\n        if (isPromise(error)) {\n            throw new Error('Can not reject promise with another promise');\n        }\n\n        if (!error) {\n            let err = (error && typeof error.toString === 'function' ? error.toString() : Object.prototype.toString.call(error));\n            error = new Error(`Expected reject to be called with Error, got ${ err }`);\n        }\n\n        this.rejected = true;\n        this.error = error;\n\n        if (!this.errorHandled) {\n            setTimeout(() => {\n                if (!this.errorHandled) {\n                    dispatchPossiblyUnhandledError(error, this);\n                }\n            }, 1);\n        }\n\n        this.dispatch();\n\n        return this;\n    }\n\n    asyncReject(error : mixed) : ZalgoPromise<R> {\n        this.errorHandled = true;\n        this.reject(error);\n        return this;\n    }\n\n    // eslint-disable-next-line complexity\n    dispatch() {\n\n        let { dispatching, resolved, rejected, handlers } = this;\n\n        if (dispatching) {\n            return;\n        }\n\n        if (!resolved && !rejected) {\n            return;\n        }\n\n        this.dispatching = true;\n        getGlobal().activeCount += 1;\n\n        for (let i = 0; i < handlers.length; i++) {\n\n            let { onSuccess, onError, promise } = handlers[i];\n\n            let result;\n\n            if (resolved) {\n\n                try {\n                    result = onSuccess ? onSuccess(this.value) : this.value;\n                } catch (err) {\n                    promise.reject(err);\n                    continue;\n                }\n\n            } else if (rejected) {\n\n                if (!onError) {\n                    promise.reject(this.error);\n                    continue;\n                }\n\n                try {\n                    result = onError(this.error);\n                } catch (err) {\n                    promise.reject(err);\n                    continue;\n                }\n            }\n\n            if (result instanceof ZalgoPromise && (result.resolved || result.rejected)) {\n\n                if (result.resolved) {\n                    promise.resolve(result.value);\n                } else {\n                    promise.reject(result.error);\n                }\n\n                result.errorHandled = true;\n\n            } else if (isPromise(result)) {\n\n                if (result instanceof ZalgoPromise && (result.resolved || result.rejected)) {\n                    if (result.resolved) {\n                        promise.resolve(result.value);\n                    } else {\n                        promise.reject(result.error);\n                    }\n\n                } else {\n                    // $FlowFixMe\n                    result.then(res => {\n                        promise.resolve(res);\n                    }, err => {\n                        promise.reject(err);\n                    });\n                }\n\n            } else {\n\n                promise.resolve(result);\n            }\n        }\n\n        handlers.length = 0;\n        this.dispatching = false;\n        getGlobal().activeCount -= 1;\n\n        if (getGlobal().activeCount === 0) {\n            ZalgoPromise.flushQueue();\n        }\n    }\n\n    then<X : mixed, Y : mixed>(onSuccess : void | (result : R) => (ZalgoPromise<X> | Y), onError : void | (error : mixed) => (ZalgoPromise<X> | Y)) : ZalgoPromise<X | Y> {\n\n        if (onSuccess && typeof onSuccess !== 'function' && !onSuccess.call) {\n            throw new Error('Promise.then expected a function for success handler');\n        }\n\n        if (onError && typeof onError !== 'function' && !onError.call) {\n            throw new Error('Promise.then expected a function for error handler');\n        }\n\n        let promise : ZalgoPromise<X | Y> = new ZalgoPromise();\n\n        this.handlers.push({\n            promise,\n            onSuccess,\n            onError\n        });\n\n        this.errorHandled = true;\n\n        this.dispatch();\n\n        return promise;\n    }\n\n    catch<X : mixed, Y : mixed>(onError : (error : mixed) => ZalgoPromise<X> | Y) : ZalgoPromise<X | Y> {\n        return this.then(undefined, onError);\n    }\n\n    finally(onFinally : () => mixed) : ZalgoPromise<R> {\n\n        if (onFinally && typeof onFinally !== 'function' && !onFinally.call) {\n            throw new Error('Promise.finally expected a function');\n        }\n\n        return this.then((result) => {\n            return ZalgoPromise.try(onFinally)\n                .then(() => {\n                    return result;\n                });\n        }, (err) => {\n            return ZalgoPromise.try(onFinally)\n                .then(() => {\n                    throw err;\n                });\n        });\n    }\n\n    timeout(time : number, err : ?Error) : ZalgoPromise<R> {\n\n        if (this.resolved || this.rejected) {\n            return this;\n        }\n\n        let timeout = setTimeout(() => {\n\n            if (this.resolved || this.rejected) {\n                return;\n            }\n\n            this.reject(err || new Error(`Promise timed out after ${ time }ms`));\n\n        }, time);\n\n        return this.then(result => {\n            clearTimeout(timeout);\n            return result;\n        });\n    }\n\n    // $FlowFixMe\n    toPromise() : Promise<R> {\n        // $FlowFixMe\n        if (typeof Promise === 'undefined') {\n            throw new TypeError(`Could not find Promise`);\n        }\n        // $FlowFixMe\n        return Promise.resolve(this); // eslint-disable-line compat/compat\n    }\n\n    static resolve<X : mixed>(value : X | ZalgoPromise<X>) : ZalgoPromise<X> {\n\n        if (value instanceof ZalgoPromise) {\n            return value;\n        }\n\n        if (isPromise(value)) {\n            // $FlowFixMe\n            return new ZalgoPromise((resolve, reject) => value.then(resolve, reject));\n        }\n\n        return new ZalgoPromise().resolve(value);\n    }\n\n    static reject(error : mixed) : ZalgoPromise<R> {\n        return new ZalgoPromise().reject(error);\n    }\n\n    static asyncReject(error : mixed) : ZalgoPromise<R> {\n        return new ZalgoPromise().asyncReject(error);\n    }\n\n    static all<X : [*] | [*, *] | [*, *, *] | [*, *, *, *] | [*, *, *, *, *] | [*, *, *, *, *, *] | [*, *, *, *, *, *, *] | [*, *, *, *, *, *, *, *] | [*, *, *, *, *, *, *, *, *] | Array<mixed>>(promises : X) : ZalgoPromise<$TupleMap<X, <Y>(ZalgoPromise<Y> | Y) => Y>> { // eslint-disable-line no-undef\n\n        let promise = new ZalgoPromise();\n        let count = promises.length;\n        let results = [];\n\n        if (!count) {\n            promise.resolve(results);\n            return promise;\n        }\n\n        for (let i = 0; i < promises.length; i++) {\n            let prom = promises[i];\n\n            if (prom instanceof ZalgoPromise) {\n                if (prom.resolved) {\n                    results[i] = prom.value;\n                    count -= 1;\n                    continue;\n                }\n            } else if (!isPromise(prom)) {\n                results[i] = prom;\n                count -= 1;\n                continue;\n            }\n\n            ZalgoPromise.resolve(prom).then(result => {\n                results[i] = result;\n                count -= 1;\n                if (count === 0) {\n                    promise.resolve(results);\n                }\n            }, err => {\n                promise.reject(err);\n            });\n        }\n\n        if (count === 0) {\n            promise.resolve(results);\n        }\n\n        return promise;\n    }\n\n    static hash<O : { [string] : * }>(promises : O) : ZalgoPromise<$ObjMap<O, <Y>(ZalgoPromise<Y> | Y) => Y>> { // eslint-disable-line no-undef\n        let result = {};\n        \n        return ZalgoPromise.all(Object.keys(promises).map(key => {\n            return ZalgoPromise.resolve(promises[key]).then(value => {\n                result[key] = value;\n            });\n        })).then(() => {\n            return result;\n        });\n    }\n\n    static map<T, X>(items : Array<T>, method : (T) => (ZalgoPromise<X> | X)) : ZalgoPromise<Array<X>> {\n        // $FlowFixMe\n        return ZalgoPromise.all(items.map(method));\n    }\n\n    static onPossiblyUnhandledException(handler : (err : mixed) => void) : { cancel : () => void } {\n        return onPossiblyUnhandledException(handler);\n    }\n\n    static try<X : mixed, Y : mixed, C : mixed, A : Array<mixed>>(method : (...args : A) => (ZalgoPromise<X> | Y), context : ?C, args : ?A) : ZalgoPromise<X | Y> {\n\n        if (method && typeof method !== 'function' && !method.call) {\n            throw new Error('Promise.try expected a function');\n        }\n\n        let result;\n        \n        try {\n            // $FlowFixMe\n            result = method.apply(context, args || []);\n        } catch (err) {\n            return ZalgoPromise.reject(err);\n        }\n\n        return ZalgoPromise.resolve(result);\n    }\n\n    static delay(delay : number) : ZalgoPromise<void> {\n        return new ZalgoPromise(resolve => {\n            setTimeout(resolve, delay);\n        });\n    }\n\n    static isPromise(value : mixed) : boolean {\n\n        if (value && value instanceof ZalgoPromise) {\n            return true;\n        }\n\n        return isPromise(value);\n    }\n\n    static flush() : ZalgoPromise<void> {\n        let promise = new ZalgoPromise();\n        getGlobal().flushPromises.push(promise);\n\n        if (getGlobal().activeCount === 0) {\n            ZalgoPromise.flushQueue();\n        }\n\n        return promise;\n    }\n\n    static flushQueue() {\n        let promisesToFlush = getGlobal().flushPromises;\n        getGlobal().flushPromises = [];\n\n        for (let promise of promisesToFlush) {\n            promise.resolve();\n        }\n    }\n}\n","/* @flow */\n\nimport { getGlobal } from './global';\nimport type { ZalgoPromise } from './promise';\n\nexport function dispatchPossiblyUnhandledError<T>(err : mixed, promise : ZalgoPromise<T>) {\n\n    if (getGlobal().dispatchedErrors.indexOf(err) !== -1) {\n        return;\n    }\n\n    getGlobal().dispatchedErrors.push(err);\n\n    setTimeout(() => {\n        if (__DEBUG__) {\n            // $FlowFixMe\n            throw new Error(`${ err.stack || err.toString() }\\n\\nFrom promise:\\n\\n${ promise.stack }`);\n        }\n\n        throw err;\n    }, 1);\n\n    for (let j = 0; j < getGlobal().possiblyUnhandledPromiseHandlers.length; j++) {\n        getGlobal().possiblyUnhandledPromiseHandlers[j](err, promise);\n    }\n}\n\nexport function onPossiblyUnhandledException(handler : (mixed) => void) : { cancel : () => void } {\n    getGlobal().possiblyUnhandledPromiseHandlers.push(handler);\n\n    return {\n        cancel() {\n            getGlobal().possiblyUnhandledPromiseHandlers.splice(getGlobal().possiblyUnhandledPromiseHandlers.indexOf(handler), 1);\n        }\n    };\n}\n","/* @flow */\n\nexport { ZalgoPromise } from './promise';\n","/* @flow */\n\nexport * from './utils';\nexport * from './types';\nexport * from './constants';\n","/* @flow */\n/* eslint max-lines: 0 */\n\nimport { ZalgoPromise } from 'zalgo-promise/src';\nimport { WeakMap } from 'cross-domain-safe-weakmap/src';\n\nimport type { CancelableType } from './types';\n\nexport function base64encode(str : string) : string {\n    if (typeof btoa === 'function') {\n        return btoa(str);\n    } else if (typeof Buffer !== 'undefined') {\n        return Buffer.from(str, 'utf8').toString('base64');\n    }\n\n    throw new Error(`Can not find window.btoa or Buffer`);\n}\n\nexport function base64decode(str : string) : string {\n    if (typeof window !== 'undefined' && typeof window.atob === 'function') {\n        return window.atob(str);\n    }\n\n    if (typeof Buffer !== 'undefined') {\n        return Buffer.from(str, 'base64').toString('utf8');\n    }\n\n    throw new Error(`Can not find window.atob or Buffer`);\n}\n\nexport function uniqueID() : string {\n\n    let chars = '0123456789abcdef';\n\n    let randomID = 'xxxxxxxxxx'.replace(/./g, () => {\n        return chars.charAt(Math.floor(Math.random() * chars.length));\n    });\n\n    let timeID = base64encode(\n        new Date().toISOString().slice(11, 19).replace('T', '.')\n    ).replace(/[^a-zA-Z0-9]/g, '').toLowerCase();\n\n    return `${ randomID }_${ timeID }`;\n}\n\nexport function getGlobal() : Object {\n    if (typeof window !== 'undefined') {\n        return window;\n    }\n    if (typeof global !== 'undefined') {\n        return global;\n    }\n    if (typeof __GLOBAL__ !== 'undefined') {\n        return __GLOBAL__;\n    }\n    throw new Error(`No global found`);\n}\n\nlet objectIDs;\n\nexport function getObjectID(obj : Object) : string {\n\n    objectIDs = objectIDs || new WeakMap();\n\n    if (obj === null || obj === undefined || (typeof obj !== 'object' && typeof obj !== 'function')) {\n        throw new Error(`Invalid object`);\n    }\n\n    let uid = objectIDs.get(obj);\n\n    if (!uid) {\n        uid = `${ typeof obj }:${ uniqueID() }`;\n        objectIDs.set(obj, uid);\n    }\n\n    return uid;\n}\n\nfunction serializeArgs(args : Array<mixed>) : string {\n    try {\n        return JSON.stringify(Array.prototype.slice.call(args), (subkey, val) => {\n            if (typeof val === 'function') {\n                return `memoize[${ getObjectID(val) }]`;\n            }\n            return val;\n        });\n    } catch (err) {\n        throw new Error(`Arguments not serializable -- can not be used to memoize`);\n    }\n}\n\n// eslint-disable-next-line flowtype/no-weak-types\nexport function memoize<R>(method : (...args : Array<any>) => R, options : { time? : number, name? : string, thisNamespace? : boolean } = {}) : ((...args : Array<any>) => R) {\n    let cacheMap = new WeakMap();\n\n    // eslint-disable-next-line flowtype/no-weak-types\n    function memoizedFunction(...args : Array<any>) : R {\n        let cache = cacheMap.getOrSet(options.thisNamespace ? this : method, () => ({}));\n\n        let key : string = serializeArgs(args);\n\n        let cacheTime = options.time;\n        if (cache[key] && cacheTime && (Date.now() - cache[key].time) < cacheTime) {\n            delete cache[key];\n        }\n\n        if (cache[key]) {\n            return cache[key].value;\n        }\n\n        let time  = Date.now();\n        let value = method.apply(this, arguments);\n\n        cache[key] = { time, value };\n\n        return cache[key].value;\n    }\n\n    memoizedFunction.reset = () => {\n        cacheMap.delete(options.thisNamespace ? this : method);\n    };\n\n    if (options.name) {\n        memoizedFunction.displayName = `${ options.name }:memoized`;\n    }\n\n    return memoizedFunction;\n}\n\n// eslint-disable-next-line flowtype/no-weak-types\nexport function memoizePromise<R>(method : (...args : Array<any>) => ZalgoPromise<R>) : ((...args : Array<any>) => ZalgoPromise<R>) {\n    let cache = {};\n\n    // eslint-disable-next-line flowtype/no-weak-types\n    function memoizedPromiseFunction(...args : Array<any>) : ZalgoPromise<R> {\n        let key : string = serializeArgs(args);\n\n        if (cache.hasOwnProperty(key)) {\n            return cache[key];\n        }\n\n        cache[key] = method.apply(this, arguments)\n            .finally(() => {\n                delete cache[key];\n            });\n\n        return cache[key];\n    }\n\n    memoizedPromiseFunction.reset = () => {\n        cache = {};\n    };\n\n    return memoizedPromiseFunction;\n}\n\n// eslint-disable-next-line flowtype/no-weak-types\nexport function promisify<R>(method : (...args : Array<any>) => R, options : { name? : string } = {}) : ((...args : Array<any>) => ZalgoPromise<R>) {\n    function promisifiedFunction() : ZalgoPromise<R> {\n        return ZalgoPromise.try(method, this, arguments);\n    }\n\n    if (options.name) {\n        promisifiedFunction.displayName = `${ options.name }:promisified`;\n    }\n\n    return promisifiedFunction;\n}\n\n// eslint-disable-next-line flowtype/no-weak-types\nexport function inlineMemoize<R>(method : (...args : Array<any>) => R, logic : (...args : Array<any>) => R, args : Array<any> = []) : R {\n    let cache = method.__inline_memoize_cache__ = method.__inline_memoize_cache__ || {};\n    let key = serializeArgs(args);\n\n    if (cache.hasOwnProperty(key)) {\n        return cache[key];\n    }\n    \n    let result = cache[key] = logic(...args);\n    return result;\n}\n\n// eslint-disable-next-line no-unused-vars\nexport function noop(...args : Array<mixed>) {\n    // pass\n}\n\nexport function once(method : Function) : Function {\n    let called = false;\n\n    return function onceFunction() : mixed {\n        if (!called) {\n            called = true;\n            return method.apply(this, arguments);\n        }\n    };\n}\n\nexport function hashStr(str : string) : number {\n    let hash = 0;\n    for (let i = 0; i < str.length; i++) {\n        hash += str[i].charCodeAt(0) * Math.pow((i % 10) + 1, 5);\n    }\n    return Math.floor(Math.pow(Math.sqrt(hash), 5));\n}\n\nexport function strHashStr(str : string) : string {\n    let hash = '';\n\n    for (let i = 0; i < str.length; i++) {\n        let total = (str[i].charCodeAt(0) * i);\n\n        if (str[i + 1]) {\n            total += (str[i + 1].charCodeAt(0) * (i - 1));\n        }\n\n        hash += String.fromCharCode(97 + (Math.abs(total) % 26));\n    }\n\n    return hash;\n}\n\nexport function match(str : string, pattern : RegExp) : ?string {\n    let regmatch = str.match(pattern);\n    if (regmatch) {\n        return regmatch[1];\n    }\n}\n\nexport function awaitKey<T: mixed>(obj : Object, key : string) : ZalgoPromise<T> {\n    return new ZalgoPromise(resolve => {\n\n        let value = obj[key];\n\n        if (value) {\n            return resolve(value);\n        }\n\n        delete obj[key];\n\n        Object.defineProperty(obj, key, {\n\n            configurable: true,\n\n            set(item) {\n                value = item;\n\n                if (value) {\n                    resolve(value);\n                }\n            },\n\n            get() : mixed {\n                return value;\n            }\n        });\n    });\n}\n\nexport function stringifyError(err : mixed, level : number = 1) : string {\n\n    if (level >= 3) {\n        return 'stringifyError stack overflow';\n    }\n\n    try {\n        if (!err) {\n            return `<unknown error: ${ Object.prototype.toString.call(err) }>`;\n        }\n\n        if (typeof err === 'string') {\n            return err;\n        }\n\n        if (err instanceof Error) {\n            let stack = err && err.stack;\n            let message = err && err.message;\n\n            if (stack && message) {\n                if (stack.indexOf(message) !== -1) {\n                    return stack;\n                } else {\n                    return `${ message }\\n${ stack }`;\n                }\n            } else if (stack) {\n                return stack;\n            } else if (message) {\n                return message;\n            }\n        }\n\n        if (typeof err.toString === 'function') {\n            return err.toString();\n        }\n\n        return Object.prototype.toString.call(err);\n\n    } catch (newErr) { // eslint-disable-line unicorn/catch-error-name\n        return `Error while stringifying error: ${ stringifyError(newErr, level + 1) }`;\n    }\n}\n\nexport function stringifyErrorMessage(err : mixed) : string {\n\n    let defaultMessage = `<unknown error: ${ Object.prototype.toString.call(err) }>`;\n\n    if (!err) {\n        return defaultMessage;\n    }\n\n    if (err instanceof Error) {\n        return err.message || defaultMessage;\n    }\n\n    if (typeof err.message === 'string') {\n        return err.message || defaultMessage;\n    }\n\n    return defaultMessage;\n}\n\nexport function stringify(item : mixed) : string {\n    if (typeof item === 'string') {\n        return item;\n    }\n\n    if (item && typeof item.toString === 'function') {\n        return item.toString();\n    }\n\n    return Object.prototype.toString.call(item);\n}\n\nexport function domainMatches(hostname : string, domain : string) : boolean {\n    hostname = hostname.split('://')[1];\n    let index = hostname.indexOf(domain);\n    return (index !== -1 && hostname.slice(index) === domain);\n}\n\nexport function patchMethod(obj : Object, name : string, handler : Function) {\n    let original = obj[name];\n\n    obj[name] = function patchedMethod() : mixed {\n        return handler({\n            context:      this,\n            args:         Array.prototype.slice.call(arguments),\n            original,\n            callOriginal: () => original.apply(this, arguments)\n        });\n    };\n}\n\nexport function extend<T : Object | Function>(obj : T, source : Object) : T {\n    if (!source) {\n        return obj;\n    }\n\n    if (Object.assign) {\n        return Object.assign(obj, source);\n    }\n\n    for (let key in source) {\n        if (source.hasOwnProperty(key)) {\n            obj[key] = source[key];\n        }\n    }\n\n    return obj;\n}\n\nexport function values<T>(obj : { [string] : T }) : Array<T> {\n    let result = [];\n    for (let key in obj) {\n        if (obj.hasOwnProperty(key)) {\n            result.push(obj[key]);\n        }\n    }\n    return result;\n}\n\nexport function perc(pixels : number, percentage : number) : number {\n    return Math.round((pixels * percentage) / 100);\n}\n\nexport function min(...args : Array<number>) : number {\n    return Math.min(...args);\n}\n\nexport function max(...args : Array<number>) : number {\n    return Math.max(...args);\n}\n\nexport function regexMap<T>(str : string, regexp : RegExp, handler : () => T) : Array<T> {\n    let results = [];\n\n    // $FlowFixMe\n    str.replace(regexp, function regexMapMatcher(item) {\n        results.push(handler ? handler.apply(null, arguments) : item);\n    });\n\n    // $FlowFixMe\n    return results;\n}\n\nexport function svgToBase64(svg : string) : string {\n    return `data:image/svg+xml;base64,${ base64encode(svg) }`;\n}\n\nexport function objFilter<T, R>(obj : { [string] : T }, filter? : (T, ?string) => mixed = Boolean) : { [string] : R } {\n    let result = {};\n\n    for (let key in obj) {\n        if (!obj.hasOwnProperty(key) || !filter(obj[key], key)) {\n            continue;\n        }\n\n        result[key] = obj[key];\n    }\n\n    return result;\n}\n\nexport function identity <T>(item : T) : T {\n    return item;\n}\n\nexport function regexTokenize(text : string, regexp : RegExp) : Array<string> {\n    let result = [];\n    text.replace(regexp, token => {\n        result.push(token);\n        return '';\n    });\n    return result;\n}\n\nexport function promiseDebounce<T>(method : () => ZalgoPromise<T> | T, delay : number = 50) : () => ZalgoPromise<T> {\n\n    let promise;\n    let timeout;\n\n    return function promiseDebouncedMethod() : ZalgoPromise<T> {\n        if (timeout) {\n            clearTimeout(timeout);\n        }\n\n        let localPromise = promise = promise || new ZalgoPromise();\n\n        timeout = setTimeout(() => {\n            promise = null;\n            timeout = null;\n\n            ZalgoPromise.try(method).then(\n                result => { localPromise.resolve(result); },\n                err => { localPromise.reject(err); }\n            );\n        }, delay);\n\n        return localPromise;\n    };\n}\n\nexport function safeInterval(method : Function, time : number) : { cancel : () => void } {\n\n    let timeout;\n\n    function loop() {\n        timeout = setTimeout(() => {\n            method();\n            loop();\n        }, time);\n    }\n\n    loop();\n\n    return {\n        cancel() {\n            clearTimeout(timeout);\n        }\n    };\n}\n\nexport function isInteger(str : string) : boolean {\n    return Boolean(str.match(/^[0-9]+$/));\n}\n\nexport function isFloat(str : string) : boolean {\n    return Boolean(str.match(/^[0-9]+\\.[0-9]+$/));\n}\n\nexport function serializePrimitive(value : string | number | boolean) : string {\n    return value.toString();\n}\n\nexport function deserializePrimitive(value : string) : string | number | boolean {\n    if (value === 'true') {\n        return true;\n    } else if (value === 'false') {\n        return false;\n    } else if (isInteger(value)) {\n        return parseInt(value, 10);\n    } else if (isFloat(value)) {\n        return parseFloat(value);\n    } else {\n        return value;\n    }\n}\n\nexport function dotify(obj : Object, prefix : string = '', newobj : Object = {}) : { [string] : string } {\n    prefix = prefix ? `${ prefix }.` : prefix;\n    for (let key in obj) {\n        if (!obj.hasOwnProperty(key) || obj[key] === undefined || obj[key] === null || typeof obj[key] === 'function') {\n            continue;\n        } else if (obj[key] && Array.isArray(obj[key]) && obj[key].length && obj[key].every(val => typeof val !== 'object')) {\n            newobj[`${ prefix }${ key }[]`] = obj[key].join(',');\n        } else if (obj[key] && typeof obj[key] === 'object') {\n            newobj = dotify(obj[key], `${ prefix }${ key }`, newobj);\n        } else {\n            newobj[`${ prefix }${ key }`] = serializePrimitive(obj[key]);\n        }\n    }\n    return newobj;\n}\n\nexport function undotify(obj : { [string] : string }) : Object {\n    \n    let result = {};\n\n    for (let key in obj) {\n        if (!obj.hasOwnProperty(key) || typeof obj[key] !== 'string') {\n            continue;\n        }\n\n        let value = obj[key];\n\n        if (key.match(/^.+\\[\\]$/)) {\n            key = key.slice(0, key.length - 2);\n            value = value.split(',').map(deserializePrimitive);\n        } else {\n            value = deserializePrimitive(value);\n        }\n\n        let keyResult = result;\n        let parts = key.split('.');\n        for (let i = 0; i < parts.length; i++) {\n            let part = parts[i];\n            let isLast = (i + 1 === parts.length);\n            let isIndex = !isLast && isInteger(parts[i + 1]);\n\n            if (isLast) {\n                // $FlowFixMe\n                keyResult[part] = value;\n            } else {\n                // $FlowFixMe\n                keyResult = keyResult[part] = keyResult[part] || (isIndex ? [] : {});\n            }\n        }\n    }\n\n    return result;\n}\n\nexport type EventEmitterType = {\n    on : (eventName : string, handler : Function) => CancelableType,\n    once : (eventName : string, handler : Function) => CancelableType,\n    trigger : (eventName : string) => void,\n    triggerOnce : (eventName : string) => void\n};\n\nexport function eventEmitter() : EventEmitterType {\n\n    let triggered = {};\n    let handlers = {};\n\n    return {\n\n        on(eventName : string, handler : Function) : CancelableType {\n\n            let handlerList = handlers[eventName] = handlers[eventName] || [];\n\n            handlerList.push(handler);\n\n            let cancelled = false;\n\n            return {\n                cancel() {\n                    if (!cancelled) {\n                        cancelled = true;\n                        handlerList.splice(handlerList.indexOf(handler), 1);\n                    }\n\n                }\n            };\n        },\n\n        once(eventName : string, handler : Function) : CancelableType {\n\n            let listener = this.on(eventName, () => {\n                listener.cancel();\n                handler();\n            });\n\n            return listener;\n        },\n\n        trigger(eventName : string) {\n\n            let handlerList = handlers[eventName];\n\n            if (handlerList) {\n                for (let handler of handlerList) {\n                    handler();\n                }\n            }\n        },\n\n        triggerOnce(eventName : string) {\n\n            if (triggered[eventName]) {\n                return;\n            }\n\n            triggered[eventName] = true;\n            this.trigger(eventName);\n        }\n    };\n}\n\nexport function camelToDasherize(string : string) : string {\n    return string.replace(/([A-Z])/g, (g) => {\n        return `-${ g.toLowerCase() }`;\n    });\n}\n\nexport function dasherizeToCamel(string : string) : string {\n    return string.replace(/-([a-z])/g, (g) => {\n        return g[1].toUpperCase();\n    });\n}\n\nexport function capitalizeFirstLetter(string : string) : string {\n    return string.charAt(0).toUpperCase() + string.slice(1).toLowerCase();\n}\n\nexport function get(item : Object, path : string, def : mixed) : mixed {\n\n    if (!path) {\n        return def;\n    }\n\n    let pathParts = path.split('.');\n\n    // Loop through each section of our key path\n\n    for (let i = 0; i < pathParts.length; i++) {\n\n        // If we have an object, we can get the key\n        if (typeof item === 'object' && item !== null) {\n            item = item[pathParts[i]];\n\n        // Otherwise, we should return the default (undefined if not provided)\n        } else {\n            return def;\n        }\n    }\n\n    // If our final result is undefined, we should return the default\n\n    return item === undefined ? def : item;\n}\n\nexport function safeTimeout(method : Function, time : number) {\n\n    let interval = safeInterval(() => {\n        time -= 100;\n        if (time <= 0) {\n            interval.cancel();\n            method();\n        }\n    }, 100);\n}\n\nexport function defineLazyProp<T>(obj : Object | Array<mixed>, key : string | number, getter : () => T) {\n    if (Array.isArray(obj)) {\n        if (typeof key !== 'number') {\n            throw new TypeError(`Array key must be number`);\n        }\n    } else if (typeof obj === 'object' && obj !== null) {\n        if (typeof key !== 'string') {\n            throw new TypeError(`Object key must be string`);\n        }\n    }\n    \n    Object.defineProperty(obj, key, {\n        configurable: true,\n        enumerable:   true,\n        get:          () => {\n            // $FlowFixMe\n            delete obj[key];\n            let value = getter();\n            // $FlowFixMe\n            obj[key] = value;\n            return value;\n        },\n        set: (value : T) => {\n            // $FlowFixMe\n            delete obj[key];\n            // $FlowFixMe\n            obj[key] = value;\n        }\n    });\n}\n\nexport function isObject(item : mixed) : boolean {\n    return (typeof item === 'object' && item !== null);\n}\n\nexport function isObjectObject(obj : mixed) : boolean {\n    return isObject(obj) && Object.prototype.toString.call(obj) === '[object Object]';\n}\n\nexport function isPlainObject(obj : mixed) : boolean {\n    if (!isObjectObject(obj)) {\n        return false;\n    }\n\n    // $FlowFixMe\n    let constructor = obj.constructor;\n\n    if (typeof constructor !== 'function') {\n        return false;\n    }\n\n    let prototype = constructor.prototype;\n\n    if (!isObjectObject(prototype)) {\n        return false;\n    }\n\n    if (!prototype.hasOwnProperty('isPrototypeOf')) {\n        return false;\n    }\n\n    return true;\n}\n\nexport function replaceObject<T : Object | Array<mixed>> (item : T, replacer : (mixed, string | number, string) => mixed, fullKey : string = '') : T {\n\n    if (Array.isArray(item)) {\n        let length = item.length;\n        let result = [];\n\n        for (let i = 0; i < length; i++) {\n\n            \n            defineLazyProp(result, i, () => {\n                let itemKey = fullKey ? `${ fullKey }.${ i }` : `${ i }`;\n                let el = item[i];\n\n                let child = replacer(el, i, itemKey);\n\n                if (isPlainObject(child) || Array.isArray(child)) {\n                    // $FlowFixMe\n                    child = replaceObject(child, replacer, itemKey);\n                }\n\n                return child;\n            });\n        }\n\n        // $FlowFixMe\n        return result;\n    } else if (isPlainObject(item)) {\n        let result = {};\n\n        for (let key in item) {\n            if (!item.hasOwnProperty(key)) {\n                continue;\n            }\n\n            defineLazyProp(result, key, () => {\n                let itemKey = fullKey ? `${ fullKey }.${ key }` : `${ key }`;\n                // $FlowFixMe\n                let el = item[key];\n\n                let child = replacer(el, key, itemKey);\n\n                if (isPlainObject(child) || Array.isArray(child)) {\n                    // $FlowFixMe\n                    child = replaceObject(child, replacer, itemKey);\n                }\n\n                return child;\n            });\n        }\n\n        // $FlowFixMe\n        return result;\n    } else {\n        throw new Error(`Pass an object or array`);\n    }\n}\n\n\nexport function copyProp(source : Object, target : Object, name : string, def : mixed) {\n    if (source.hasOwnProperty(name)) {\n        let descriptor = Object.getOwnPropertyDescriptor(source, name);\n        // $FlowFixMe\n        Object.defineProperty(target, name, descriptor);\n\n    } else {\n        target[name] = def;\n    }\n}\n\ntype RegexResultType = {\n    text : string,\n    groups : Array<string>,\n    start : number,\n    end : number,\n    length : number,\n    replace : (text : string) => string\n};\n\nexport function regex(pattern : string | RegExp, string : string, start : number = 0) : ?RegexResultType {\n\n    if (typeof pattern === 'string') {\n        // eslint-disable-next-line security/detect-non-literal-regexp\n        pattern = new RegExp(pattern);\n    }\n\n    let result = string.slice(start).match(pattern);\n\n    if (!result) {\n        return;\n    }\n\n    // $FlowFixMe\n    let index : number = result.index;\n    let regmatch = result[0];\n\n    return {\n        text:   regmatch,\n        groups: result.slice(1),\n        start:  start + index,\n        end:    start + index + regmatch.length,\n        length: regmatch.length,\n\n        replace(text : string) : string {\n\n            if (!regmatch) {\n                return '';\n            }\n\n            return `${ regmatch.slice(0, start + index) }${ text }${ regmatch.slice(index + regmatch.length) }`;\n        }\n    };\n}\n\nexport function regexAll(pattern : string | RegExp, string : string) : Array<RegexResultType> {\n\n    let matches = [];\n    let start = 0;\n\n    // eslint-disable-next-line no-constant-condition\n    while (true) {\n        let regmatch = regex(pattern, string, start);\n\n        if (!regmatch) {\n            break;\n        }\n\n        matches.push(regmatch);\n        start = match.end;\n    }\n\n    return matches;\n}\n\nexport function isDefined(value : ?mixed) : boolean {\n    return value !== null && value !== undefined;\n}\n\nexport function cycle(method : Function) : ZalgoPromise<void> {\n    return ZalgoPromise.try(method).then(() => cycle(method));\n}\n\nexport function debounce<T>(method : (...args : Array<mixed>) => T, time : number = 100) : (...args : Array<mixed>) => void {\n\n    let timeout;\n\n    return function debounceWrapper() {\n        clearTimeout(timeout);\n\n        timeout = setTimeout(() => {\n            return method.apply(this, arguments);\n        }, time);\n    };\n}\n\nexport function isRegex(item : mixed) : boolean {\n    return Object.prototype.toString.call(item) === '[object RegExp]';\n}\n\ntype FunctionProxy<T : Function> = (method : T) => T;\n\n// eslint-disable-next-line flowtype/no-weak-types\nexport let weakMapMemoize : FunctionProxy<*> = <R : mixed>(method : (arg : any) => R) : ((...args : Array<any>) => R) => {\n\n    let weakmap = new WeakMap();\n\n    // eslint-disable-next-line flowtype/no-weak-types\n    return function weakmapMemoized(arg : any) : R {\n        return weakmap.getOrSet(arg, () => method.call(this, arg));\n    };\n};\n\ntype FunctionPromiseProxy<R : mixed, T : (...args : $ReadOnlyArray<mixed>) => ZalgoPromise<R>> = (T) => T;\n\n// eslint-disable-next-line flowtype/no-weak-types\nexport let weakMapMemoizePromise : FunctionPromiseProxy<*, *> = <R : mixed>(method : (arg : any) => ZalgoPromise<R>) : ((...args : Array<any>) => ZalgoPromise<R>) => {\n\n    let weakmap = new WeakMap();\n\n    // eslint-disable-next-line flowtype/no-weak-types\n    return function weakmapMemoizedPromise(arg : any) : ZalgoPromise<R> {\n        return weakmap.getOrSet(arg, () =>\n            method.call(this, arg).finally(() => {\n                weakmap.delete(arg);\n            })\n        );\n    };\n};\n\nexport function getOrSet<O : Object, T : mixed>(obj : O, key : string, getter : () => T) : T {\n    if (obj.hasOwnProperty(key)) {\n        return obj[key];\n    }\n\n    const val = getter();\n    obj[key] = val;\n    return val;\n}\n\nexport type CleanupType = {|\n    set : <T : mixed>(string, T) => T, // eslint-disable-line no-undef\n    register : (Function) => void,\n    all : () => ZalgoPromise<void>\n|};\n\nexport function cleanup(obj : Object) : CleanupType {\n\n    const tasks = [];\n    let cleaned = false;\n\n    return {\n        set<T : mixed>(name : string, item : T) : T {\n            if (!cleaned) {\n                obj[name] = item;\n                this.register(() => {\n                    delete obj[name];\n                });\n            }\n            return item;\n        },\n\n        register(method : Function) {\n            if (cleaned) {\n                method();\n            } else {\n                tasks.push(once(method));\n            }\n        },\n\n        all() : ZalgoPromise<void> {\n            const results = [];\n            cleaned = true;\n\n            while (tasks.length) {\n                const task = tasks.pop();\n                results.push(task());\n            }\n\n            return ZalgoPromise.all(results).then(noop);\n        }\n    };\n}\n\nexport function tryCatch<T>(fn : () => T) : {| result : T, error : void |} | {| result : void, error : mixed |} {\n    let result;\n    let error;\n\n    try {\n        result = fn();\n    } catch (err) {\n        error = err;\n    }\n    \n    // $FlowFixMe\n    return { result, error };\n}\n\nexport function removeFromArray<X, T : Array<X>>(arr : T, item : X) {\n    const index = arr.indexOf(item);\n    if (index !== -1) {\n        arr.splice(index, 1);\n    }\n}\n","export default function _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}","/* @flow */\n\nexport const PROTOCOL = {\n    MOCK:  ('mock:' : 'mock:'),\n    FILE:  ('file:' : 'file:'),\n    ABOUT: ('about:' : 'about:')\n};\n\nexport const WILDCARD = '*';\n\nexport const WINDOW_TYPE = {\n    IFRAME: ('iframe' : 'iframe'),\n    POPUP:  ('popup' : 'popup')\n};\n","/* @flow */\n\nexport function safeIndexOf<T>(collection : Array<T>, item : T) : number {\n    for (let i = 0; i < collection.length; i++) {\n\n        try {\n            if (collection[i] === item) {\n                return i;\n            }\n        } catch (err) {\n            // pass\n        }\n    }\n\n    return -1;\n}\n\n// eslint-disable-next-line no-unused-vars\nexport function noop(...args : Array<mixed>) {\n    // pass\n}\n","/* @flow */\n\nimport { isWindow, isWindowClosed } from 'cross-domain-utils/src';\n\nimport { hasNativeWeakMap } from './native';\nimport { noop, safeIndexOf } from './util';\n\nlet defineProperty = Object.defineProperty;\nlet counter = Date.now() % 1e9;\n\nexport class CrossDomainSafeWeakMap<K : Object, V : mixed> {\n\n    name : string\n    weakmap : WeakMap<K, V>\n    keys : Array<K>\n    values : Array<V>\n\n    constructor() {\n        counter += 1;\n\n        // eslint-disable-next-line no-bitwise\n        this.name = `__weakmap_${ Math.random() * 1e9 >>> 0 }__${ counter }`;\n\n        if (hasNativeWeakMap()) {\n            try {\n                this.weakmap = new WeakMap();\n            } catch (err) {\n                // pass\n            }\n        }\n\n        this.keys  = [];\n        this.values = [];\n    }\n\n    _cleanupClosedWindows() {\n\n        let weakmap = this.weakmap;\n        let keys = this.keys;\n\n        for (let i = 0; i < keys.length; i++) {\n            let value = keys[i];\n\n            if (isWindow(value) && isWindowClosed(value)) {\n\n                if (weakmap) {\n                    try {\n                        weakmap.delete(value);\n                    } catch (err) {\n                        // pass\n                    }\n                }\n\n                keys.splice(i, 1);\n                this.values.splice(i, 1);\n\n                i -= 1;\n            }\n        }\n    }\n\n    isSafeToReadWrite(key : K) : boolean {\n\n        if (isWindow(key)) {\n            return false;\n        }\n\n        try {\n            noop(key && key.self);\n            noop(key && key[this.name]);\n        } catch (err) {\n            return false;\n        }\n\n        return true;\n    }\n\n    set(key : K, value : V) {\n\n        if (!key) {\n            throw new Error(`WeakMap expected key`);\n        }\n\n        let weakmap = this.weakmap;\n\n        if (weakmap) {\n            try {\n                weakmap.set(key, value);\n            } catch (err) {\n                delete this.weakmap;\n            }\n        }\n\n        if (!this.isSafeToReadWrite(key)) {\n\n            this._cleanupClosedWindows();\n\n            let keys = this.keys;\n            let values = this.values;\n            let index = safeIndexOf(keys, key);\n\n            if (index === -1) {\n                keys.push(key);\n                values.push(value);\n            } else {\n                values[index] = value;\n            }\n\n        } else {\n\n            let name = this.name;\n            let entry = key[name];\n\n            if (entry && entry[0] === key) {\n                entry[1] = value;\n            } else {\n                defineProperty(key, name, {\n                    value:    [ key, value ],\n                    writable: true\n                });\n            }\n        }\n    }\n\n    get(key : K) : V | void {\n\n        if (!key) {\n            throw new Error(`WeakMap expected key`);\n        }\n\n        let weakmap = this.weakmap;\n\n        if (weakmap) {\n            try {\n                if (weakmap.has(key)) {\n                    return weakmap.get(key);\n                }\n            } catch (err) {\n                delete this.weakmap;\n            }\n        }\n\n        if (!this.isSafeToReadWrite(key)) {\n\n            this._cleanupClosedWindows();\n\n            let keys = this.keys;\n            let index = safeIndexOf(keys, key);\n\n            if (index === -1) {\n                return;\n            }\n\n            return this.values[index];\n\n        } else {\n\n            let entry = key[this.name];\n\n            if (entry && entry[0] === key) {\n                return entry[1];\n            }\n        }\n    }\n\n    delete(key : K) {\n\n        if (!key) {\n            throw new Error(`WeakMap expected key`);\n        }\n\n        let weakmap = this.weakmap;\n\n        if (weakmap) {\n            try {\n                weakmap.delete(key);\n            } catch (err) {\n                delete this.weakmap;\n            }\n        }\n\n        if (!this.isSafeToReadWrite(key)) {\n\n            this._cleanupClosedWindows();\n\n            let keys = this.keys;\n            let index = safeIndexOf(keys, key);\n\n            if (index !== -1) {\n                keys.splice(index, 1);\n                this.values.splice(index, 1);\n            }\n\n        } else {\n\n            let entry = key[this.name];\n\n            if (entry && entry[0] === key) {\n                entry[0] = entry[1] = undefined;\n            }\n        }\n    }\n\n    has(key : K) : boolean {\n\n        if (!key) {\n            throw new Error(`WeakMap expected key`);\n        }\n\n        let weakmap = this.weakmap;\n\n        if (weakmap) {\n            try {\n                if (weakmap.has(key)) {\n                    return true;\n                }\n            } catch (err) {\n                delete this.weakmap;\n            }\n        }\n\n        if (!this.isSafeToReadWrite(key)) {\n\n            this._cleanupClosedWindows();\n\n            let index = safeIndexOf(this.keys, key);\n            return index !== -1;\n\n        } else {\n\n            let entry = key[this.name];\n\n            if (entry && entry[0] === key) {\n                return true;\n            }\n\n            return false;\n        }\n    }\n\n    getOrSet(key : K, getter : () => V) : V {\n        if (this.has(key)) {\n            // $FlowFixMe\n            return this.get(key);\n        }\n\n        let value = getter();\n        this.set(key, value);\n        return value;\n    }\n}\n","/* @flow */\n\nexport function hasNativeWeakMap() : boolean {\n\n    if (typeof WeakMap === 'undefined') {\n        return false;\n    }\n\n    if (typeof Object.freeze === 'undefined') {\n        return false;\n    }\n\n    try {\n\n        let testWeakMap = new WeakMap();\n        let testKey = {};\n        let testValue = '__testvalue__';\n\n        Object.freeze(testKey);\n\n        testWeakMap.set(testKey, testValue);\n\n        if (testWeakMap.get(testKey) === testValue) {\n            return true;\n        }\n\n        return false;\n\n    } catch (err) {\n\n        return false;\n    }\n}\n","/* @flow */\n\n// eslint-disable-next-line import/no-namespace\nimport * as INTERFACE from './interface';\n\nexport * from './interface';\nexport default INTERFACE;\n","/* @flow */\n\nexport function getUserAgent() : string {\n    return window.navigator.mockUserAgent || window.navigator.userAgent;\n}\n\nexport function isDevice() : boolean {\n    let userAgent = getUserAgent();\n    if (userAgent.match(/Android|webOS|iPhone|iPad|iPod|bada|Symbian|Palm|CriOS|BlackBerry|IEMobile|WindowsMobile|Opera Mini/i)) {\n        return true;\n    }\n\n    return false;\n}\n\nexport function isWebView() : boolean {\n    let userAgent = getUserAgent();\n    return (/(iPhone|iPod|iPad|Macintosh).*AppleWebKit(?!.*Safari)/i).test(userAgent) ||\n        (/\\bwv\\b/).test(userAgent) ||\n    (/Android.*Version\\/(\\d)\\.(\\d)/i).test(userAgent);\n}\n\nexport function isStandAlone() : boolean {\n    return (window.navigator.standalone === true || window.matchMedia('(display-mode: standalone)').matches);\n}\n\nexport function isFacebookWebView(ua? : string = getUserAgent()) : boolean {\n    return (ua.indexOf('FBAN') !== -1) || (ua.indexOf('FBAV') !== -1);\n}\n\nexport function isFirefoxIOS(ua? : string = getUserAgent()) : boolean {\n    return (/FxiOS/i).test(ua);\n}\n\nexport function isEdgeIOS(ua? : string = getUserAgent()) : boolean {\n    return (/EdgiOS/i).test(ua);\n}\n\nexport function isOperaMini(ua? : string = getUserAgent()) : boolean {\n    return ua.indexOf('Opera Mini') > -1;\n}\n\nexport function isAndroid(ua? : string = getUserAgent()) : boolean {\n    return (/Android/).test(ua);\n}\n\nexport function isIos(ua? : string = getUserAgent()) : boolean {\n    return (/iPhone|iPod|iPad/).test(ua);\n}\n\nexport function isGoogleSearchApp(ua? : string = getUserAgent()) : boolean {\n    return (/\\bGSA\\b/).test(ua);\n}\n\nexport function isQQBrowser(ua? : string = getUserAgent()) : boolean {\n    return (/QQBrowser/).test(ua);\n}\n\nexport function isIosWebview(ua? : string = getUserAgent()) : boolean {\n    if (isIos(ua)) {\n        if (isGoogleSearchApp(ua)) {\n            return true;\n        }\n        return (/.+AppleWebKit(?!.*Safari)/).test(ua);\n    }\n    return false;\n}\n\nexport function isAndroidWebview(ua? : string = getUserAgent()) : boolean {\n    if (isAndroid(ua)) {\n        return (/Version\\/[\\d.]+/).test(ua) && !isOperaMini(ua);\n    }\n    return false;\n}\n\nexport function isIE() : boolean {\n\n    if (window.document.documentMode) {\n        return true;\n    }\n\n    return Boolean(\n        window.navigator &&\n        window.navigator.userAgent &&\n        (/Edge|MSIE|rv:11/i).test(window.navigator.userAgent)\n    );\n}\n\nexport function isIECompHeader() : boolean {\n    let mHttp = window.document.querySelector('meta[http-equiv=\"X-UA-Compatible\"]');\n    let mContent = window.document.querySelector('meta[content=\"IE=edge\"]');\n    if (mHttp && mContent) {\n        return true;\n    }\n    return false;\n}\n\nexport function isElectron() : boolean {\n    if (typeof process !== 'undefined' && process.versions && process.versions.electron) {\n        return true;\n    }\n    return false;\n}\n\nexport function isIEIntranet() : boolean {\n\n    // This status check only works for older versions of IE with document.documentMode set\n\n    if (window.document.documentMode) {\n        try {\n            let status = window.status;\n\n            window.status = 'testIntranetMode';\n\n            if (window.status === 'testIntranetMode') {\n                window.status = status;\n\n                return true;\n            }\n\n            return false;\n\n        } catch (err) {\n\n            return false;\n        }\n    }\n\n    return false;\n}\n\nexport function isMacOsCna() : boolean {\n    let userAgent = getUserAgent();\n    return (/Macintosh.*AppleWebKit(?!.*Safari)/i).test(userAgent);\n}\n\nexport function supportsPopups(ua? : string = getUserAgent()) : boolean {\n    return !(isIosWebview(ua) || isAndroidWebview(ua) || isOperaMini(ua) ||\n        isFirefoxIOS(ua) || isEdgeIOS(ua) || isFacebookWebView(ua) || isQQBrowser(ua) || isElectron() || isMacOsCna() || isStandAlone());\n}\n","/* @flow */\n\nimport { uniqueID, getGlobal, inlineMemoize } from './util';\nimport { isLocalStorageEnabled } from './dom';\n\ntype Getter<T> = <T>(handler : (Object) => T) => T;\n\nexport type Storage = {\n    getState : Getter<*>,\n    getID : () => string,\n    getSessionState : Getter<*>,\n    getSessionID : () => string\n};\n\nexport function getStorage({ name, version = 'latest', lifetime = (5 * 60 * 1000) } : { name : string, version? : string, lifetime? : number }) : Storage {\n    return inlineMemoize(getStorage, () => {\n        const STORAGE_KEY = `__${ name }_${ version }_storage__`;\n\n        let accessedStorage;\n\n        function getState<T>(handler : (storage : Object) => T) : T {\n\n            let localStorageEnabled = isLocalStorageEnabled();\n            let storage;\n\n            if (accessedStorage) {\n                storage = accessedStorage;\n            }\n\n            if (!storage && localStorageEnabled) {\n                let rawStorage = window.localStorage.getItem(STORAGE_KEY);\n\n                if (rawStorage) {\n                    storage = JSON.parse(rawStorage);\n                }\n            }\n\n            if (!storage) {\n                storage = getGlobal()[STORAGE_KEY];\n            }\n\n            if (!storage) {\n                storage = {\n                    id: uniqueID()\n                };\n            }\n\n            if (!storage.id) {\n                storage.id = uniqueID();\n            }\n\n            accessedStorage = storage;\n\n            let result = handler(storage);\n\n            if (localStorageEnabled) {\n                window.localStorage.setItem(STORAGE_KEY, JSON.stringify(storage));\n            } else {\n                getGlobal()[STORAGE_KEY] = storage;\n            }\n\n            accessedStorage = null;\n\n            return result;\n        }\n\n        function getID() : string {\n            return getState(storage => storage.id);\n        }\n\n        function getSession<T>(handler : (state : Object) => T) : T {\n            return getState(storage => {\n\n                let session = storage.__session__;\n                let now = Date.now();\n\n                if (session && ((now - session.created) > lifetime)) {\n                    session = null;\n                }\n\n                if (!session) {\n                    session = {\n                        guid:    uniqueID(),\n                        created: now\n                    };\n                }\n\n                storage.__session__ = session;\n\n                return handler(session);\n            });\n        }\n\n        function getSessionState<T>(handler : (state : Object) => T) : T {\n            return getSession(session => {\n                session.state = session.state || {};\n                return handler(session.state);\n            });\n        }\n\n        function getSessionID() : string {\n            return getSession(session => session.guid);\n        }\n\n        return {\n            getState,\n            getID,\n            getSessionState,\n            getSessionID\n        };\n    }, [ { name, version, lifetime } ]);\n}\n","/* @flow */\n/* eslint max-lines: off */\n\nimport { ZalgoPromise } from 'zalgo-promise/src';\nimport { linkFrameWindow, isWindowClosed,\n    type SameDomainWindowType, type CrossDomainWindowType } from 'cross-domain-utils/src';\nimport { WeakMap } from 'cross-domain-safe-weakmap/src';\n\nimport { inlineMemoize, noop, stringify, capitalizeFirstLetter,\n    once, extend, safeInterval } from './util';\nimport { isDevice } from './device';\nimport { KEY_CODES } from './constants';\nimport type { CancelableType } from './types';\n\ntype ElementRefType = string | HTMLElement;\n\nexport function isDocumentReady() : boolean {\n    return Boolean(document.body) && document.readyState === 'complete';\n}\n\nexport function urlEncode(str : string) : string {\n    return str.replace(/\\?/g, '%3F').replace(/&/g, '%26').replace(/#/g, '%23').replace(/\\+/g, '%2B');\n}\n\nexport function waitForWindowReady() : ZalgoPromise<void> {\n    return inlineMemoize(waitForWindowReady, () : ZalgoPromise<void> => {\n        return new ZalgoPromise(resolve => {\n            if (isDocumentReady()) {\n                resolve();\n            }\n\n            window.addEventListener('load', () => resolve());\n        });\n    });\n}\n\nexport function waitForDocumentReady() : ZalgoPromise<void> {\n    return inlineMemoize(waitForDocumentReady, () : ZalgoPromise<void> => {\n        return new ZalgoPromise(resolve => {\n\n            if (isDocumentReady()) {\n                return resolve();\n            }\n\n            let interval = setInterval(() => {\n                if (isDocumentReady()) {\n                    clearInterval(interval);\n                    return resolve();\n                }\n            }, 10);\n        });\n    });\n}\n\nexport function waitForDocumentBody() : ZalgoPromise<HTMLBodyElement> {\n    return waitForDocumentReady().then(() => {\n        if (document.body) {\n            return document.body;\n        }\n\n        throw new Error('Document ready but document.body not present');\n    });\n}\n\nexport function parseQuery(queryString : string) : Object {\n    return inlineMemoize(parseQuery, () : Object => {\n        let params = {};\n\n        if (!queryString) {\n            return params;\n        }\n\n        if (queryString.indexOf('=') === -1) {\n            return params;\n        }\n\n        for (let pair of queryString.split('&')) {\n            pair = pair.split('=');\n\n            if (pair[0] && pair[1]) {\n                params[decodeURIComponent(pair[0])] = decodeURIComponent(pair[1]);\n            }\n        }\n\n        return params;\n    }, [ queryString ]);\n}\n\n\nexport function getQueryParam(name : string) : string {\n    return parseQuery(window.location.search.slice(1))[name];\n}\n\nexport function urlWillRedirectPage(url : string) : boolean {\n\n    if (url.indexOf('#') === -1) {\n        return true;\n    }\n\n    if (url.indexOf('#') === 0) {\n        return false;\n    }\n\n    if (url.split('#')[0] === window.location.href.split('#')[0]) {\n        return false;\n    }\n\n    return true;\n}\n\nexport function formatQuery(obj : { [ string ] : string } = {}) : string {\n\n    return Object.keys(obj).filter(key => {\n        return typeof obj[key] === 'string';\n    }).map(key => {\n        return `${ urlEncode(key) }=${ urlEncode(obj[key]) }`;\n    }).join('&');\n}\n\nexport function extendQuery(originalQuery : string, props : { [ string ] : string } = {}) : string {\n\n    if (!props || !Object.keys(props).length) {\n        return originalQuery;\n    }\n\n    return formatQuery({\n        ...parseQuery(originalQuery),\n        ...props\n    });\n}\n\nexport function extendUrl(url : string, options : { query? : { [string] : string }, hash? : { [string] : string } } = {}) : string {\n\n    let query = options.query || {};\n    let hash = options.hash || {};\n\n    let originalUrl;\n    let originalQuery;\n    let originalHash;\n\n    [ originalUrl, originalHash ] = url.split('#');\n    [ originalUrl, originalQuery ] = originalUrl.split('?');\n\n    let queryString = extendQuery(originalQuery, query);\n    let hashString = extendQuery(originalHash, hash);\n\n    if (queryString) {\n        originalUrl = `${ originalUrl }?${ queryString }`;\n    }\n\n    if (hashString) {\n        originalUrl = `${ originalUrl }#${ hashString }`;\n    }\n\n    return originalUrl;\n}\n\nexport function redirect(url : string, win : CrossDomainWindowType = window) : ZalgoPromise<void> {\n    return new ZalgoPromise(resolve => {\n        win.location = url;\n        if (!urlWillRedirectPage(url)) {\n            resolve();\n        }\n    });\n}\n\nexport function hasMetaViewPort() : boolean {\n    let meta = document.querySelector('meta[name=viewport]');\n\n    if (isDevice() && window.screen.width < 660 && !meta) {\n        return false;\n    }\n\n    return true;\n}\n\nexport function isElementVisible(el : HTMLElement) : boolean {\n    return Boolean(el.offsetWidth || el.offsetHeight || el.getClientRects().length);\n}\n\nexport function enablePerformance() : boolean {\n    return inlineMemoize(enablePerformance, () : boolean => {\n        /* eslint-disable compat/compat */\n        return Boolean(\n            window.performance &&\n            performance.now &&\n            performance.timing &&\n            performance.timing.connectEnd &&\n            performance.timing.navigationStart &&\n            (Math.abs(performance.now() - Date.now()) > 1000) &&\n            (performance.now() - (performance.timing.connectEnd - performance.timing.navigationStart)) > 0\n        );\n        /* eslint-enable compat/compat */\n    });\n}\n\nexport function getPageRenderTime() : ZalgoPromise<?number> {\n    return waitForDocumentReady().then(() => {\n\n        if (!enablePerformance()) {\n            return;\n        }\n\n        let timing = window.performance.timing;\n\n        if (timing.connectEnd && timing.domInteractive) {\n            return timing.domInteractive - timing.connectEnd;\n        }\n    });\n}\n\nexport function htmlEncode(html : string = '') : string {\n    return html.toString()\n        .replace(/&/g, '&amp;')\n        .replace(/</g, '&lt;')\n        .replace(/>/g, '&gt;')\n        .replace(/\"/g, '&quot;')\n        .replace(/'/g, '&#39;')\n        .replace(/\\//g, '&#x2F;');\n}\n\nexport function isBrowser() : boolean {\n    return (typeof window !== 'undefined');\n}\n\nexport function querySelectorAll(selector : string, doc : HTMLElement = window.document) : Array<Element> {\n    return Array.prototype.slice.call(doc.querySelectorAll(selector));\n}\n\nexport function onClick(element : Element, handler : (Event) => void) {\n    element.addEventListener('touchstart', noop);\n    element.addEventListener('click', handler);\n    element.addEventListener('keypress', (event : Event) => {\n        // $FlowFixMe\n        if (event.keyCode === KEY_CODES.ENTER) {\n            return handler(event);\n        }\n    });\n}\n\nexport function getScript({ host = window.location.host, path } : { host? : string, path : string }) : ?HTMLScriptElement {\n    return inlineMemoize(getScript, () : ?HTMLScriptElement => {\n\n        let url = `${ host }${ path }`;\n        let scripts = Array.prototype.slice.call(document.getElementsByTagName('script'));\n\n        for (let script of scripts) {\n            if (!script.src) {\n                continue;\n            }\n\n            let src = script.src.replace(/^https?:\\/\\//, '').split('?')[0];\n\n            if (src === url) {\n                return script;\n            }\n        }\n    }, [ path ]);\n}\n\nexport function isLocalStorageEnabled() : boolean {\n    return inlineMemoize(isLocalStorageEnabled, () => {\n        try {\n            if (typeof window === 'undefined') {\n                return false;\n            }\n\n            if (window.localStorage) {\n                let value = Math.random().toString();\n                window.localStorage.setItem('__test__localStorage__', value);\n                let result = window.localStorage.getItem('__test__localStorage__');\n                window.localStorage.removeItem('__test__localStorage__');\n                if (value === result) {\n                    return true;\n                }\n            }\n        } catch (err) {\n            // pass\n        }\n        return false;\n    });\n}\n\nexport function getBrowserLocales() : Array<{ country? : string, lang : string }> {\n    let nav = window.navigator;\n\n    let locales = nav.languages\n        ? Array.prototype.slice.apply(nav.languages)\n        : [];\n\n    if (nav.language) {\n        locales.push(nav.language);\n    }\n\n    if (nav.userLanguage) {\n        locales.push(nav.userLanguage);\n    }\n\n    return locales.map(locale => {\n\n        if (locale && locale.match(/^[a-z]{2}[-_][A-Z]{2}$/)) {\n            let [ lang, country ] = locale.split(/[-_]/);\n            return { country, lang };\n        }\n\n        if (locale && locale.match(/^[a-z]{2}$/)) {\n            return { lang: locale };\n        }\n\n        return null;\n\n    }).filter(Boolean);\n}\n\n\nexport function appendChild(container : HTMLElement, child : HTMLElement | Text) {\n    container.appendChild(child);\n}\n\nexport function isElement(element : mixed) : boolean {\n\n    if (element instanceof window.Element) {\n        return true;\n    }\n\n    if (element !== null && typeof element === 'object' && element.nodeType === 1 && typeof element.style === 'object' && typeof element.ownerDocument === 'object') {\n        return true;\n    }\n\n    return false;\n}\n\nexport function getElementSafe(id : ElementRefType, doc : Document | HTMLElement = document) : ?HTMLElement {\n\n    if (isElement(id)) {\n        // $FlowFixMe\n        return id;\n    }\n\n    if (typeof id === 'string') {\n        return doc.querySelector(id);\n    }\n}\n\nexport function getElement(id : ElementRefType, doc : Document | HTMLElement = document) : HTMLElement {\n\n    let element = getElementSafe(id, doc);\n\n    if (element) {\n        return element;\n    }\n\n    throw new Error(`Can not find element: ${ stringify(id) }`);\n}\n\nexport function elementReady(id : ElementRefType) : ZalgoPromise<window.HTMLElement> {\n    return new ZalgoPromise((resolve, reject) => {\n\n        let name = stringify(id);\n        let el = getElementSafe(id);\n\n        if (el) {\n            return resolve(el);\n        }\n\n        if (isDocumentReady()) {\n            return reject(new Error(`Document is ready and element ${ name } does not exist`));\n        }\n\n        let interval = setInterval(() => {\n\n            el = getElementSafe(id);\n\n            if (el) {\n                clearInterval(interval);\n                return resolve(el);\n            }\n\n            if (isDocumentReady()) {\n                clearInterval(interval);\n                return reject(new Error(`Document is ready and element ${ name } does not exist`));\n            }\n        }, 10);\n    });\n}\n\nexport function PopupOpenError(message : string) {\n    this.message = message;\n}\n\nPopupOpenError.prototype = Object.create(Error.prototype);\n\ntype PopupOptions = {|\n    name? : string,\n    width? : number,\n    height? : number,\n    top? : number,\n    left? : number,\n    status? : 0 | 1,\n    resizable? : 0 | 1,\n    toolbar? : 0 | 1,\n    menubar? : 0 | 1,\n    scrollbars? : 0 | 1\n|};\n\nexport function popup(url : string, options? : PopupOptions) : CrossDomainWindowType {\n\n    // $FlowFixMe\n    options = options || {};\n\n    let { width, height } = options;\n\n    let top = 0;\n    let left = 0;\n\n    if (width) {\n        if (window.outerWidth) {\n            left = Math.round((window.outerWidth - width) / 2) + window.screenX;\n        } else if (window.screen.width) {\n            left = Math.round((window.screen.width - width) / 2);\n        }\n    }\n\n    if (height) {\n        if (window.outerHeight) {\n            top = Math.round((window.outerHeight - height) / 2) + window.screenY;\n        } else if (window.screen.height) {\n            top = Math.round((window.screen.height - height) / 2);\n        }\n    }\n\n    options = {\n        top,\n        left,\n        width,\n        height,\n        status:     1,\n        toolbar:    0,\n        menubar:    0,\n        resizable:  1,\n        scrollbars: 1,\n        ...options\n    };\n\n    let name = options.name || '';\n    delete options.name;\n\n    // eslint-disable-next-line array-callback-return\n    let params = Object.keys(options).map(key => {\n        // $FlowFixMe\n        if (options[key]) {\n            return `${ key }=${ stringify(options[key]) }`;\n        }\n    }).filter(Boolean).join(',');\n\n    let win;\n\n    try {\n        win = window.open(url, name, params, true);\n    } catch (err) {\n        throw new PopupOpenError(`Can not open popup window - ${ err.stack || err.message }`);\n    }\n\n    if (isWindowClosed(win)) {\n        let err = new PopupOpenError(`Can not open popup window - blocked`);\n        throw err;\n    }\n\n    window.addEventListener('unload', () => win.close());\n\n    return win;\n}\n\n\nexport function writeToWindow(win : SameDomainWindowType, html : string) {\n    try {\n        win.document.open();\n        win.document.write(html);\n        win.document.close();\n    } catch (err) {\n        try {\n            win.location = `javascript: document.open(); document.write(${ JSON.stringify(html) }); document.close();`;\n        } catch (err2) {\n            // pass\n        }\n    }\n}\n\nexport function writeElementToWindow(win : SameDomainWindowType, el : HTMLElement) {\n\n    let tag = el.tagName.toLowerCase();\n\n    if (tag !== 'html') {\n        throw new Error(`Expected element to be html, got ${ tag }`);\n    }\n\n    let documentElement = win.document.documentElement;\n\n    while (documentElement.children && documentElement.children.length) {\n        documentElement.removeChild(documentElement.children[0]);\n    }\n\n    while (el.children.length) {\n        documentElement.appendChild(el.children[0]);\n    }\n}\n\nexport function setStyle(el : HTMLElement, styleText : string, doc : Document = window.document) {\n    // $FlowFixMe\n    if (el.styleSheet) {\n        // $FlowFixMe\n        el.styleSheet.cssText = styleText;\n    } else {\n        el.appendChild(doc.createTextNode(styleText));\n    }\n}\n\nexport type ElementOptionsType = {\n    style? : { [ string ] : string },\n    class? : ?Array<string>,\n    attributes? : { [ string ] : string },\n    styleSheet? : ?string,\n    html? : ?string\n};\n\nlet awaitFrameLoadPromises : WeakMap<HTMLIFrameElement, ZalgoPromise<HTMLIFrameElement>>;\n\nexport function awaitFrameLoad(frame : HTMLIFrameElement) : ZalgoPromise<HTMLIFrameElement> {\n    awaitFrameLoadPromises = awaitFrameLoadPromises || new WeakMap();\n\n    if (awaitFrameLoadPromises.has(frame)) {\n        let promise = awaitFrameLoadPromises.get(frame);\n        if (promise) {\n            return promise;\n        }\n    }\n\n    let promise = new ZalgoPromise((resolve, reject) => {\n        frame.addEventListener('load', () => {\n            linkFrameWindow(frame);\n            resolve(frame);\n        });\n\n        frame.addEventListener('error', (err : Event) => {\n            if (frame.contentWindow) {\n                resolve(frame);\n            } else {\n                reject(err);\n            }\n        });\n    });\n\n    awaitFrameLoadPromises.set(frame, promise);\n\n    return promise;\n}\n\nexport function awaitFrameWindow(frame : HTMLIFrameElement) : ZalgoPromise<CrossDomainWindowType> {\n\n    if (frame.contentWindow) {\n        return ZalgoPromise.resolve(frame.contentWindow);\n    }\n\n    return awaitFrameLoad(frame).then(loadedFrame => {\n\n        if (!loadedFrame.contentWindow) {\n            throw new Error(`Could not find window in iframe`);\n        }\n\n        return loadedFrame.contentWindow;\n    });\n}\n\nexport function createElement(tag : string = 'div', options : ElementOptionsType = {}, container : ?HTMLElement) : HTMLElement {\n\n    tag = tag.toLowerCase();\n    let element = document.createElement(tag);\n\n    if (options.style) {\n        extend(element.style, options.style);\n    }\n\n    if (options.class) {\n        element.className = options.class.join(' ');\n    }\n\n    if (options.attributes) {\n        for (let key of Object.keys(options.attributes)) {\n            element.setAttribute(key, options.attributes[key]);\n        }\n    }\n\n    if (options.styleSheet) {\n        setStyle(element, options.styleSheet);\n    }\n\n    if (container) {\n        appendChild(container, element);\n    }\n\n    if (options.html) {\n        if (tag === 'iframe') {\n            // $FlowFixMe\n            if (!container || !element.contentWindow) {\n                throw new Error(`Iframe html can not be written unless container provided and iframe in DOM`);\n            }\n\n            // $FlowFixMe\n            writeToWindow(element.contentWindow, options.html);\n\n        } else {\n            element.innerHTML = options.html;\n        }\n    }\n\n    return element;\n}\n\n\nexport type IframeElementOptionsType = {\n    style? : { [ string ] : string },\n    class? : ?Array<string>,\n    attributes? : { [ string ] : string },\n    styleSheet? : ?string,\n    html? : ?string,\n    url? : ?string\n};\n\nexport function iframe(options : IframeElementOptionsType = {}, container : HTMLElement, attempts : number = 3) : HTMLIFrameElement {\n\n    let el = getElement(container);\n\n    let attributes = options.attributes || {};\n    let style = options.style || {};\n\n    let frame = createElement('iframe', {\n        attributes: {\n            frameBorder:       '0',\n            allowTransparency: 'true',\n            ...attributes\n        },\n        style: {\n            backgroundColor: 'transparent',\n            ...style\n        },\n        html:  options.html,\n        class: options.class\n    });\n\n    // $FlowFixMe\n    awaitFrameLoad(frame);\n\n    el.appendChild(frame);\n\n    // $FlowFixMe\n    let win = frame.contentWindow;\n\n    if (win) {\n        try {\n            // $FlowFixMe\n            noop(win.name);\n        } catch (err) {\n            el.removeChild(frame);\n\n            if (!attempts) {\n                throw new Error(`Frame is cross-domain: ${ err.stack }`);\n            }\n\n            return iframe(options, container, attempts - 1);\n        }\n    }\n\n    if (options.url || window.navigator.userAgent.match(/MSIE|Edge/i)) {\n        frame.setAttribute('src', options.url || 'about:blank');\n    }\n\n    // $FlowFixMe\n    return frame;\n}\n\nexport function addEventListener(obj : HTMLElement, event : string, handler : (event : Event) => void) : CancelableType {\n    obj.addEventListener(event, handler);\n    return {\n        cancel() {\n            obj.removeEventListener(event, handler);\n        }\n    };\n}\n\nexport function bindEvents(element : HTMLElement, eventNames : Array<string>, handler : (event : Event) => void) : CancelableType {\n\n    handler = once(handler);\n\n    for (let eventName of eventNames) {\n        element.addEventListener(eventName, handler);\n    }\n\n    return {\n        cancel: once(() => {\n            for (let eventName of eventNames) {\n                element.removeEventListener(eventName, handler);\n            }\n        })\n    };\n}\n\nconst VENDOR_PREFIXES = [ 'webkit', 'moz', 'ms', 'o' ];\n\nexport function setVendorCSS(element : HTMLElement, name : string, value : string) {\n\n    // $FlowFixMe\n    element.style[name] = value;\n\n    let capitalizedName = capitalizeFirstLetter(name);\n\n    for (let prefix of VENDOR_PREFIXES) {\n        // $FlowFixMe\n        element.style[`${ prefix }${ capitalizedName }`] = value;\n    }\n}\n\nfunction isValidAnimation(element : HTMLElement, name : string) : boolean {\n\n    let CSSRule = window.CSSRule;\n\n    const KEYFRAMES_RULE = CSSRule.KEYFRAMES_RULE || CSSRule.WEBKIT_KEYFRAMES_RULE || CSSRule.MOZ_KEYFRAMES_RULE ||\n        CSSRule.O_KEYFRAMES_RULE || CSSRule.MS_KEYFRAMES_RULE;\n\n    let stylesheets = element.ownerDocument.styleSheets;\n\n    try {\n        for (let i = 0; i < stylesheets.length; i++) {\n\n            // $FlowFixMe\n            let cssRules = stylesheets[i].cssRules;\n\n            if (!cssRules) {\n                continue;\n            }\n\n            for (let j = 0; j < cssRules.length; j++) {\n\n                let cssRule = cssRules[j];\n\n                if (!cssRule) {\n                    continue;\n                }\n\n                if (cssRule.type === KEYFRAMES_RULE && cssRule.name === name) {\n                    return true;\n                }\n            }\n        }\n    } catch (err) {\n\n        return false;\n    }\n\n\n    return false;\n}\n\n\nconst ANIMATION_START_EVENTS = [ 'animationstart', 'webkitAnimationStart', 'oAnimationStart', 'MSAnimationStart' ];\nconst ANIMATION_END_EVENTS   = [ 'animationend', 'webkitAnimationEnd', 'oAnimationEnd', 'MSAnimationEnd' ];\n\nexport function animate(element : ElementRefType, name : string, clean : (Function) => void, timeout : number = 1000) : ZalgoPromise<void> {\n    return new ZalgoPromise((resolve, reject) => {\n\n        let el = getElement(element);\n\n        if (!el || !isValidAnimation(el, name)) {\n            return resolve();\n        }\n\n        let hasStarted = false;\n\n        let startTimeout;\n        let endTimeout;\n        let startEvent;\n        let endEvent;\n\n        function cleanUp() {\n            setVendorCSS(el, 'animationName', '');\n            clearTimeout(startTimeout);\n            clearTimeout(endTimeout);\n            startEvent.cancel();\n            endEvent.cancel();\n        }\n\n        startEvent = bindEvents(el, ANIMATION_START_EVENTS, event => {\n\n            // $FlowFixMe\n            if (event.target !== el || event.animationName !== name) {\n                return;\n            }\n\n            clearTimeout(startTimeout);\n\n            event.stopPropagation();\n\n            startEvent.cancel();\n            hasStarted = true;\n\n            endTimeout = setTimeout(() => {\n                cleanUp();\n                resolve();\n            }, timeout);\n        });\n\n        endEvent = bindEvents(el, ANIMATION_END_EVENTS, event => {\n\n            // $FlowFixMe\n            if (event.target !== el || event.animationName !== name) {\n                return;\n            }\n\n            cleanUp();\n\n            // $FlowFixMe\n            if (typeof event.animationName === 'string' && event.animationName !== name) {\n                return reject(`Expected animation name to be ${ name }, found ${ event.animationName }`);\n            }\n\n            return resolve();\n        });\n\n        setVendorCSS(el, 'animationName', name);\n\n        startTimeout = setTimeout(() => {\n            if (!hasStarted) {\n                cleanUp();\n                return resolve();\n            }\n        }, 200);\n\n        if (clean) {\n            clean(cleanUp);\n        }\n    });\n}\n\nconst STYLE = {\n\n    DISPLAY: {\n        NONE:  'none',\n        BLOCK: 'block'\n    },\n\n    VISIBILITY: {\n        VISIBLE: 'visible',\n        HIDDEN:  'hidden'\n    },\n\n    IMPORTANT: 'important'\n};\n\nexport function makeElementVisible(element : HTMLElement) {\n    element.style.setProperty('visibility', '');\n}\n\nexport function makeElementInvisible(element : HTMLElement) {\n    element.style.setProperty('visibility', STYLE.VISIBILITY.HIDDEN, STYLE.IMPORTANT);\n}\n\n\nexport function showElement(element : HTMLElement) {\n    element.style.setProperty('display', '');\n}\n\nexport function hideElement(element : HTMLElement) {\n    element.style.setProperty('display', STYLE.DISPLAY.NONE, STYLE.IMPORTANT);\n}\n\nexport function destroyElement(element : HTMLElement) {\n    if (element && element.parentNode) {\n        element.parentNode.removeChild(element);\n    }\n}\n\nexport function showAndAnimate(element : HTMLElement, name : string, clean : (Function) => void) : ZalgoPromise<void> {\n    let animation = animate(element, name, clean);\n    showElement(element);\n    return animation;\n}\n\nexport function animateAndHide(element : HTMLElement, name : string, clean : (Function) => void) : ZalgoPromise<void> {\n    return animate(element, name, clean).then(() => {\n        hideElement(element);\n    });\n}\n\nexport function addClass(element : HTMLElement, name : string) {\n    element.classList.add(name);\n}\n\nexport function removeClass(element : HTMLElement, name : string) {\n    element.classList.remove(name);\n}\n\nexport function isElementClosed(el : HTMLElement) : boolean {\n    if (!el || !el.parentNode) {\n        return true;\n    }\n    return false;\n}\n\nexport function watchElementForClose(element : HTMLElement, handler : () => mixed) : CancelableType {\n    handler = once(handler);\n\n    let interval;\n\n    if (isElementClosed(element)) {\n        handler();\n    } else {\n        interval = safeInterval(() => {\n            if (isElementClosed(element)) {\n                interval.cancel();\n                handler();\n            }\n        }, 50);\n    }\n\n    return {\n        cancel() {\n            if (interval) {\n                interval.cancel();\n            }\n        }\n    };\n}\n\nexport function fixScripts(el : HTMLElement, doc : Document = window.document) {\n    for (let script of querySelectorAll('script', el)) {\n        let parentNode = script.parentNode;\n\n        if (!parentNode) {\n            continue;\n        }\n\n        let newScript = doc.createElement('script');\n        newScript.text = script.textContent;\n        parentNode.replaceChild(newScript, script);\n    }\n}\n\ntype OnResizeOptions = {|\n    width? : boolean,\n    height? : boolean,\n    interval? : number,\n    win? : SameDomainWindowType\n|};\n\nexport function onResize(el : HTMLElement, handler : ({ width : number, height : number }) => void, { width = true, height = true, interval = 100, win = window } : OnResizeOptions = {}) : {} {\n    let currentWidth = el.offsetWidth;\n    let currentHeight = el.offsetHeight;\n\n    handler({ width: currentWidth, height: currentHeight });\n\n    let check = () => {\n        let newWidth = el.offsetWidth;\n        let newHeight = el.offsetHeight;\n\n        if ((width && newWidth !== currentWidth) || (height && newHeight !== currentHeight)) {\n            handler({ width: newWidth, height: newHeight });\n        }\n\n        currentWidth = newWidth;\n        currentHeight = newHeight;\n    };\n\n    let observer;\n    let timeout;\n\n    if (typeof win.ResizeObserver !== 'undefined') {\n        observer = new win.ResizeObserver(check);\n        observer.observe(el);\n\n    } else if (typeof win.MutationObserver !== 'undefined') {\n        observer = new win.MutationObserver(check);\n        observer.observe(el, {\n            attributes:    true,\n            childList:     true,\n            subtree:       true,\n            characterData: false\n        });\n        win.addEventListener('resize', check);\n    } else {\n        let loop = () => {\n            check();\n            timeout = setTimeout(loop, interval);\n        };\n        loop();\n    }\n\n    return {\n        cancel: () => {\n            observer.disconnect();\n            window.removeEventListener('resize', check);\n            clearTimeout(timeout);\n        }\n    };\n}\n","/* @flow */\n\nimport { noop } from './util';\nimport { getStorage } from './storage';\n\nfunction getBelterExperimentStorage() : Object {\n    return getStorage({ name: 'belter_experiment' });\n}\n\nfunction isEventUnique(name : string) : boolean {\n    return getBelterExperimentStorage().getSessionState(state => {\n        state.loggedBeacons = state.loggedBeacons || [];\n\n        if (state.loggedBeacons.indexOf(name) === -1) {\n            state.loggedBeacons.push(name);\n            return true;\n        }\n\n        return false;\n    });\n}\n\nexport type Experiment = {\n    isEnabled : () => boolean,\n    isDisabled : () => boolean,\n    getTreatment : () => string,\n    log : (string, payload? : { [string] : ?string }) => Experiment,\n    logStart : (payload? : { [string] : ?string }) => Experiment,\n    logComplete : (payload? : { [string] : ?string }) => Experiment\n};\n\nfunction getThrottlePercentile(name : string) : number {\n    return getBelterExperimentStorage().getState(state => {\n        state.throttlePercentiles = state.throttlePercentiles || {};\n        state.throttlePercentiles[name] = state.throttlePercentiles[name] || Math.floor(Math.random() * 100);\n        return state.throttlePercentiles[name];\n    });\n}\n\nconst THROTTLE_GROUP = {\n    TEST:     'test',\n    CONTROL:  'control',\n    THROTTLE: 'throttle'\n};\n\ntype ExperimentOptions = {\n    name : string,\n    sample? : number,\n    logTreatment? : ({ name : string, treatment : string }) => void,\n    logCheckpoint? : ({ name : string, treatment : string, checkpoint : string, payload? : { [string] : ?string } }) => void\n};\n\nexport function experiment({ name, sample = 50, logTreatment = noop, logCheckpoint = noop } : ExperimentOptions) : Experiment {\n\n    let throttle = getThrottlePercentile(name);\n\n    let group;\n\n    if (throttle < sample) {\n        group = THROTTLE_GROUP.TEST;\n    } else if ((sample >= 50) || ((sample <= throttle) && (throttle < (sample * 2)))) {\n        group = THROTTLE_GROUP.CONTROL;\n    } else {\n        group = THROTTLE_GROUP.THROTTLE;\n    }\n\n    let treatment = `${ name }_${ group }`;\n\n    let started = false;\n    let forced = false;\n\n    try {\n        if (window.localStorage && window.localStorage.getItem(name)) {\n            forced = true;\n        }\n    } catch (err) {\n        // pass\n    }\n\n    return {\n\n        isEnabled() : boolean {\n            return (group === THROTTLE_GROUP.TEST) || forced;\n        },\n\n        isDisabled() : boolean {\n            return (group !== THROTTLE_GROUP.TEST) && !forced;\n        },\n\n        getTreatment() : string {\n            return treatment;\n        },\n\n        log(checkpoint : string, payload? : { [string] : ?string } = {}) : Experiment {\n            if (!started) {\n                return this;\n            }\n\n            if (isEventUnique(`${ name }_${ treatment }`)) {\n                logTreatment({ name, treatment });\n            }\n\n            if (isEventUnique(`${ name }_${ treatment }_${ checkpoint }`)) {\n                logCheckpoint({ name, treatment, checkpoint, payload });\n            }\n\n            return this;\n        },\n\n        logStart(payload? : { [string] : ?string } = {}) : Experiment {\n            started = true;\n            return this.log(`start`, payload);\n        },\n\n        logComplete(payload? : { [string] : ?string } = {}) : Experiment {\n            return this.log(`complete`, payload);\n        }\n    };\n}\n","/* @flow */\n\nimport { getGlobal } from './util';\n\nexport function getGlobalNameSpace<T : Object>({ name, version = 'latest' } : { name : string, version? : string }) : { get : (string, defValue? : T) => T } {\n\n    let global = getGlobal();\n    let globalKey = `__${ name }__${ version }_global__`;\n\n    let namespace = global[globalKey] = global[globalKey] || {};\n\n    return {\n        get: (key : string, defValue? : T) : T => {\n            // $FlowFixMe\n            defValue = defValue || {};\n            let item = namespace[key] = namespace[key] || defValue;\n            return item;\n        }\n    };\n}\n","/* @flow */\n\nimport { ZalgoPromise } from 'zalgo-promise/src';\nimport { type SameDomainWindowType } from 'cross-domain-utils/src';\n\ntype RequestOptionsType = {\n    url : string,\n    method? : string,\n    headers? : { [key : string] : string },\n    json? : Object,\n    data? : { [key : string] : string },\n    body? : string,\n    win? : SameDomainWindowType,\n    timeout? : number\n};\n\ntype ResponseType = {\n    status : number,\n    headers : { [string] : string },\n    body : Object\n};\n\nconst HEADERS = {\n    CONTENT_TYPE: 'content-type',\n    ACCEPT:       'accept'\n};\n\nlet headerBuilders = [];\n\nfunction parseHeaders(rawHeaders : string = '') : { [string] : string } {\n    let result = {};\n    for (let line of rawHeaders.trim().split('\\n')) {\n        let [ key, ...values ] = line.split(':');\n        result[key.toLowerCase()] = values.join(':').trim();\n    }\n    return result;\n}\n\nexport function request({ url, method = 'get', headers = {}, json, data, body, win = window, timeout = 0 } : RequestOptionsType) : ZalgoPromise<ResponseType> {\n    return new ZalgoPromise((resolve, reject) => {\n\n        if ((json && data) || (json && body) || (data && json)) {\n            throw new Error(`Only options.json or options.data or options.body should be passed`);\n        }\n\n        let normalizedHeaders = {};\n\n        for (let key of Object.keys(headers)) {\n            normalizedHeaders[key.toLowerCase()] = headers[key];\n        }\n\n        if (json) {\n            normalizedHeaders[HEADERS.CONTENT_TYPE] = normalizedHeaders[HEADERS.CONTENT_TYPE] || 'application/json';\n        } else if (data || body) {\n            normalizedHeaders[HEADERS.CONTENT_TYPE] = normalizedHeaders[HEADERS.CONTENT_TYPE] || 'application/x-www-form-urlencoded; charset=utf-8';\n        }\n\n        normalizedHeaders[HEADERS.ACCEPT] = normalizedHeaders[HEADERS.ACCEPT] || 'application/json';\n\n        for (let headerBuilder of headerBuilders) {\n            let builtHeaders = headerBuilder();\n\n            for (let key of Object.keys(builtHeaders)) {\n                normalizedHeaders[key.toLowerCase()] = builtHeaders[key];\n            }\n        }\n\n        let xhr = new win.XMLHttpRequest();\n\n        xhr.addEventListener('load', function xhrLoad() : void {\n\n            let responseHeaders = parseHeaders(this.getAllResponseHeaders());\n\n            if (!this.status) {\n                return reject(new Error(`Request to ${ method.toLowerCase() } ${ url } failed: no response status code.`));\n            }\n            \n            let contentType = responseHeaders['content-type'];\n            let isJSON = contentType && (contentType.indexOf('application/json') === 0 || contentType.indexOf('text/json') === 0);\n            let responseBody = this.responseText;\n\n            try {\n                responseBody = JSON.parse(responseBody);\n            } catch (err) {\n                if (isJSON) {\n                    return reject(new Error(`Invalid json: ${ this.responseText }.`));\n                }\n            }\n\n            let res = {\n                status:  this.status,\n                headers: responseHeaders,\n                body:    responseBody\n            };\n\n            return resolve(res);\n\n        }, false);\n\n        xhr.addEventListener('error', (evt) => {\n            reject(new Error(`Request to ${ method.toLowerCase() } ${ url } failed: ${ evt.toString() }.`));\n        }, false);\n\n        xhr.open(method, url, true);\n\n        for (let key in normalizedHeaders) {\n            if (normalizedHeaders.hasOwnProperty(key)) {\n                xhr.setRequestHeader(key, normalizedHeaders[key]);\n            }\n        }\n\n        if (json) {\n            body = JSON.stringify(json);\n        } else if (data) {\n            body = Object.keys(data).map(key => {\n                return `${ encodeURIComponent(key) }=${ data ? encodeURIComponent(data[key]) : '' }`;\n            }).join('&');\n        }\n\n        xhr.timeout = timeout;\n        xhr.ontimeout = function xhrTimeout() {\n            reject(new Error(`Request to ${ method.toLowerCase() } ${ url } has timed out`));\n        };\n\n        xhr.send(body);\n    });\n}\n\nexport function addHeaderBuilder(method : () => { [string] : string }) {\n    headerBuilders.push(method);\n}\n","/* @flow */\n\nimport { memoize, promisify } from './util';\n\nexport function memoized(target : Object, name : string, descriptor : Object) {\n    descriptor.value = memoize(descriptor.value, { name, thisNamespace: true });\n}\n\nexport function promise(target : Object, name : string, descriptor : Object) {\n    descriptor.value = promisify(descriptor.value, { name });\n}\n","/* @flow */\n\nexport function isPerc(str : string) : boolean {\n    return typeof str === 'string' && (/^[0-9]+%$/).test(str);\n}\n\nexport function isPx(str : string) : boolean {\n    return typeof str === 'string' && (/^[0-9]+px$/).test(str);\n}\n\nexport function toNum(val : string | number) : number {\n\n    if (typeof val === 'number') {\n        return val;\n    }\n\n    let match = val.match(/^([0-9]+)(px|%)$/);\n\n    if (!match) {\n        throw new Error(`Could not match css value from ${ val }`);\n    }\n\n    return parseInt(match[1], 10);\n}\n\nexport function toPx(val : number | string) : string {\n    return `${ toNum(val) }px`;\n}\n\nexport function toCSS(val : number | string) : string {\n\n    if (typeof val === 'number') {\n        return toPx(val);\n    }\n\n    return isPerc(val) ? val : toPx(val);\n}\n\nexport function percOf(num : number, perc : string) : number {\n    return parseInt(num * toNum(perc)  / 100, 10);\n}\n\nexport function normalizeDimension(dim : string | number, max : number) : number {\n    if (typeof dim === 'number') {\n        return dim;\n    } else if (isPerc(dim)) {\n        return percOf(max, dim);\n    } else if (isPx(dim)) {\n        return toNum(dim);\n    } else {\n        throw new Error(`Can not normalize dimension: ${ dim }`);\n    }\n}\n","/* @flow */\n\nimport { ZalgoPromise } from 'zalgo-promise/src';\n\nimport { noop, tryCatch, removeFromArray } from './util';\n\ntype Handler = <T, A : $ReadOnlyArray<mixed>>(name : string, fn? : (...args : A) => T) => (...args : A) => T; // eslint-disable-line no-undef\ntype Wrapper<T> = ({ expect : Handler, avoid : Handler, expectError : Handler, error : Handler }) => (ZalgoPromise<T> | void);\n\nexport function wrapPromise<T>(method : Wrapper<T>, { timeout = 5000 } : { timeout? : number } = {}) : ZalgoPromise<void> {\n    let expected : Array<string> = [];\n    let promises : Array<ZalgoPromise<*>> = [];\n\n    let timeoutPromise = ZalgoPromise.delay(timeout);\n\n    let expect : Handler = (name, fn = noop) => {\n        expected.push(name);\n        \n        // $FlowFixMe\n        return function expectWrapper(...args) : * {\n            removeFromArray(expected, name);\n\n            // $FlowFixMe\n            let { result, error } = tryCatch(() => fn.call(this, ...args));\n\n            if (error) {\n                promises.push(ZalgoPromise.asyncReject(error));\n                throw error;\n            }\n\n            promises.push(ZalgoPromise.resolve(result));\n            return result;\n        };\n    };\n\n    let avoid : Handler = (name : string, fn = noop) => {\n\n        // $FlowFixMe\n        return function avoidWrapper(...args) : * {\n            promises.push(ZalgoPromise.asyncReject(new Error(`Expected ${ name } to not be called`)));\n            // $FlowFixMe\n            return fn.call(this, ...args);\n        };\n    };\n\n    let expectError : Handler = (name, fn = noop) => {\n        expected.push(name);\n\n        // $FlowFixMe\n        return function expectErrorWrapper(...args) : * {\n            removeFromArray(expected, name);\n\n            // $FlowFixMe\n            let { result, error } = tryCatch(() => fn.call(this, ...args));\n\n            if (error) {\n                throw error;\n            }\n\n            promises.push(ZalgoPromise.resolve(result).then(() => {\n                throw new Error(`Expected ${ name } to throw an error`);\n            }, noop));\n            return result;\n        };\n    };\n\n    promises.push(ZalgoPromise.try(() => method({ expect, avoid, expectError, error: avoid })));\n\n    let drain = () => {\n        return ZalgoPromise.try(() => {\n            if (promises.length) {\n                return promises.pop();\n            }\n        }).then(() => {\n            if (promises.length) {\n                return drain();\n            }\n        });\n    };\n\n    return drain().then(() => {\n        if (expected.length) {\n            return timeoutPromise.then(drain);\n        }\n    }).then(() => {\n        if (expected.length) {\n            throw new Error(`Expected ${ expected[0] } to be called`);\n        }\n    });\n}\n","/* @flow */\n\nexport function isRegex(item : mixed) : boolean {\n    return Object.prototype.toString.call(item) === '[object RegExp]';\n}\n\n// eslint-disable-next-line no-unused-vars\nexport function noop(...args : Array<mixed>) {\n    // pass\n}\n","/* @flow */\n/* eslint max-lines: 0 */\n\nimport { isRegex, noop } from './util';\nimport type { CrossDomainWindowType, SameDomainWindowType, DomainMatcher } from './types';\nimport { PROTOCOL, WILDCARD } from './constants';\n\nlet IE_WIN_ACCESS_ERROR = 'Call was rejected by callee.\\r\\n';\n\nexport function isFileProtocol(win : SameDomainWindowType = window) : boolean {\n    return win.location.protocol === PROTOCOL.FILE;\n}\n\nexport function isAboutProtocol(win : SameDomainWindowType = window) : boolean {\n    return win.location.protocol === PROTOCOL.ABOUT;\n}\n\nexport function getParent(win : ?CrossDomainWindowType) : ?CrossDomainWindowType {\n\n    if (!win) {\n        return;\n    }\n\n    try {\n        if (win.parent && win.parent !== win) {\n            return win.parent;\n        }\n    } catch (err) {\n        // pass\n    }\n}\n\nexport function getOpener(win : ?CrossDomainWindowType) : ?CrossDomainWindowType {\n\n    if (!win) {\n        return;\n    }\n\n    // Make sure we're not actually an iframe which has had window.open() called on us\n    if (getParent(win)) {\n        return;\n    }\n\n    try {\n        return win.opener;\n    } catch (err) {\n        // pass\n    }\n}\n\nexport function canReadFromWindow(win : CrossDomainWindowType | SameDomainWindowType) : boolean {\n    try {\n        // $FlowFixMe\n        noop(win && win.location && win.location.href);\n        return true;\n    } catch (err) {\n        // pass\n    }\n\n    return false;\n}\n\nexport function getActualDomain(win : ?SameDomainWindowType) : string {\n\n    win = win || window;\n\n    let location = win.location;\n\n    if (!location) {\n        throw new Error(`Can not read window location`);\n    }\n\n    let protocol = location.protocol;\n\n    if (!protocol) {\n        throw new Error(`Can not read window protocol`);\n    }\n\n    if (protocol === PROTOCOL.FILE) {\n        return `${ PROTOCOL.FILE }//`;\n    }\n\n    if (protocol === PROTOCOL.ABOUT) {\n\n        let parent = getParent(win);\n        if (parent && canReadFromWindow(parent)) {\n            // $FlowFixMe\n            return getActualDomain(parent);\n        }\n\n        return `${ PROTOCOL.ABOUT }//`;\n    }\n\n    let host = location.host;\n\n    if (!host) {\n        throw new Error(`Can not read window host`);\n    }\n\n    return `${ protocol }//${ host }`;\n}\n\nexport function getDomain(win : ?SameDomainWindowType) : string {\n\n    win = win || window;\n\n    let domain = getActualDomain(win);\n\n    if (domain && win.mockDomain && win.mockDomain.indexOf(PROTOCOL.MOCK) === 0) {\n        return win.mockDomain;\n    }\n\n    return domain;\n}\n\nexport function isBlankDomain(win : CrossDomainWindowType) : boolean {\n    try {\n        // $FlowFixMe\n        if (!win.location.href) {\n            return true;\n        }\n\n        if (win.location.href === 'about:blank') {\n            return true;\n        }\n    } catch (err) {\n        // pass\n    }\n\n    return false;\n}\n\nexport function isActuallySameDomain(win : CrossDomainWindowType) : boolean {\n\n    try {\n        if (win === window) {\n            return true;\n        }\n\n    } catch (err) {\n        // pass\n    }\n\n    try {\n        let desc = Object.getOwnPropertyDescriptor(win, 'location');\n\n        if (desc && desc.enumerable === false) {\n            return false;\n        }\n\n    } catch (err) {\n        // pass\n    }\n\n    try {\n        // $FlowFixMe\n        if (isAboutProtocol(win) && canReadFromWindow(win)) {\n            return true;\n        }\n    } catch (err) {\n        // pass\n    }\n\n    try {\n        // $FlowFixMe\n        if (getActualDomain(win) === getActualDomain(window)) {\n            return true;\n        }\n\n    } catch (err) {\n        // pass\n    }\n\n    return false;\n}\n\nexport function isSameDomain(win : CrossDomainWindowType | SameDomainWindowType) : boolean {\n\n    if (!isActuallySameDomain(win)) {\n        return false;\n    }\n\n    try {\n\n        if (win === window) {\n            return true;\n        }\n\n        // $FlowFixMe\n        if (isAboutProtocol(win) && canReadFromWindow(win)) {\n            return true;\n        }\n\n        // $FlowFixMe\n        if (getDomain(window) === getDomain(win)) {\n            return true;\n        }\n\n    } catch (err) {\n        // pass\n    }\n\n    return false;\n}\n\n\nexport function assertSameDomain(win : CrossDomainWindowType | SameDomainWindowType) : SameDomainWindowType {\n    if (!isSameDomain(win)) {\n        throw new Error(`Expected window to be same domain`);\n    }\n\n    // $FlowFixMe\n    return win;\n}\n\nexport function getParents(win : CrossDomainWindowType) : Array<CrossDomainWindowType> {\n\n    let result = [];\n\n    try {\n\n        while (win.parent !== win) {\n            result.push(win.parent);\n            win = win.parent;\n        }\n\n    } catch (err) {\n        // pass\n    }\n\n    return result;\n}\n\nexport function isAncestorParent(parent : CrossDomainWindowType, child : CrossDomainWindowType) : boolean {\n\n    if (!parent || !child) {\n        return false;\n    }\n\n    let childParent = getParent(child);\n\n    if (childParent) {\n        return childParent === parent;\n    }\n\n    if (getParents(child).indexOf(parent) !== -1) {\n        return true;\n    }\n\n    return false;\n}\n\nexport function getFrames(win : CrossDomainWindowType) : Array<CrossDomainWindowType> {\n\n    let result = [];\n\n    let frames;\n\n    try {\n        frames = win.frames;\n    } catch (err) {\n        frames = win;\n    }\n\n    let len;\n\n    try {\n        len = frames.length;\n    } catch (err) {\n        // pass\n    }\n\n    if (len === 0) {\n        return result;\n    }\n\n    if (len) {\n        for (let i = 0; i < len; i++) {\n\n            let frame;\n\n            try {\n                frame = frames[i];\n            } catch (err) {\n                continue;\n            }\n\n            result.push(frame);\n        }\n\n        return result;\n    }\n\n    for (let i = 0; i < 100; i++) {\n        let frame;\n\n        try {\n            frame = frames[i];\n        } catch (err) {\n            return result;\n        }\n\n        if (!frame) {\n            return result;\n        }\n\n        result.push(frame);\n    }\n\n    return result;\n}\n\n\nexport function getAllChildFrames(win : CrossDomainWindowType) : Array<CrossDomainWindowType> {\n\n    let result = [];\n\n    for (let frame of getFrames(win)) {\n        result.push(frame);\n\n        for (let childFrame of getAllChildFrames(frame)) {\n            result.push(childFrame);\n        }\n    }\n\n    return result;\n}\n\nexport function getTop(win : CrossDomainWindowType) : ?CrossDomainWindowType {\n\n    if (!win) {\n        return;\n    }\n\n    try {\n        if (win.top) {\n            return win.top;\n        }\n    } catch (err) {\n        // pass\n    }\n\n    if (getParent(win) === win) {\n        return win;\n    }\n\n    try {\n        if (isAncestorParent(window, win) && window.top) {\n            return window.top;\n        }\n    } catch (err) {\n        // pass\n    }\n\n    try {\n        if (isAncestorParent(win, window) && window.top) {\n            return window.top;\n        }\n    } catch (err) {\n        // pass\n    }\n\n    for (let frame of getAllChildFrames(win)) {\n        try {\n            if (frame.top) {\n                return frame.top;\n            }\n        } catch (err) {\n            // pass\n        }\n\n        if (getParent(frame) === frame) {\n            return frame;\n        }\n    }\n}\n\nexport function getNextOpener(win? : CrossDomainWindowType = window) : ?CrossDomainWindowType {\n    return getOpener(getTop(win) || win);\n}\n\nexport function getUltimateTop(win? : CrossDomainWindowType = window) : CrossDomainWindowType {\n    let opener = getNextOpener(win);\n\n    if (opener) {\n        return getUltimateTop(opener);\n    }\n\n    return top;\n}\n\nexport function getAllFramesInWindow(win : CrossDomainWindowType) : Array<CrossDomainWindowType> {\n    let top = getTop(win);\n\n    if (!top) {\n        throw new Error(`Can not determine top window`);\n    }\n\n    return [ ...getAllChildFrames(top), top ];\n}\n\nexport function getAllWindows(win? : CrossDomainWindowType = window) : $ReadOnlyArray<CrossDomainWindowType> {\n    let frames = getAllFramesInWindow(win);\n    let opener = getNextOpener(win);\n\n    if (opener) {\n        return [ ...getAllWindows(opener), ...frames ];\n    } else {\n        return frames;\n    }\n}\n\nexport function isTop(win : CrossDomainWindowType) : boolean {\n    return win === getTop(win);\n}\n\nexport function isFrameWindowClosed(frame : HTMLIFrameElement) : boolean {\n\n    if (!frame.contentWindow) {\n        return true;\n    }\n\n    if (!frame.parentNode) {\n        return true;\n    }\n\n    let doc = frame.ownerDocument;\n\n    if (doc && doc.documentElement && !doc.documentElement.contains(frame)) {\n        return true;\n    }\n\n    return false;\n}\n\nfunction safeIndexOf<T>(collection : Array<T>, item : T) : number {\n    for (let i = 0; i < collection.length; i++) {\n\n        try {\n            if (collection[i] === item) {\n                return i;\n            }\n        } catch (err) {\n            // pass\n        }\n    }\n\n    return -1;\n}\n\nlet iframeWindows = [];\nlet iframeFrames = [];\n\nexport function isWindowClosed(win : CrossDomainWindowType, allowMock : boolean = true) : boolean {\n\n    try {\n        if (win === window) {\n            return false;\n        }\n    } catch (err) {\n        return true;\n    }\n\n    try {\n        if (!win) {\n            return true;\n        }\n\n    } catch (err) {\n        return true;\n    }\n\n    try {\n        if (win.closed) {\n            return true;\n        }\n\n    } catch (err) {\n\n        // I love you so much IE\n\n        if (err && err.message === IE_WIN_ACCESS_ERROR) {\n            return false;\n        }\n\n        return true;\n    }\n\n\n    if (allowMock && isSameDomain(win)) {\n        try {\n            // $FlowFixMe\n            if (win.mockclosed) {\n                return true;\n            }\n        } catch (err) {\n            // pass\n        }\n    }\n\n    // Mobile safari\n\n    try {\n        if (!win.parent || !win.top) {\n            return true;\n        }\n    } catch (err) {\n        // pass\n    }\n\n    // Yes, this actually happens in IE. win === win errors out when the window\n    // is from an iframe, and the iframe was removed from the page.\n\n    try {\n        noop(win === win); // eslint-disable-line no-self-compare\n    } catch (err) {\n        return true;\n    }\n\n    // IE orphaned frame\n\n    let iframeIndex = safeIndexOf(iframeWindows, win);\n\n    if (iframeIndex !== -1) {\n        let frame = iframeFrames[iframeIndex];\n\n        if (frame && isFrameWindowClosed(frame)) {\n            return true;\n        }\n    }\n\n    return false;\n}\n\nfunction cleanIframes() {\n    for (let i = 0; i < iframeWindows.length; i++) {\n        let closed = false;\n\n        try {\n            closed = iframeWindows[i].closed;\n        } catch (err) {\n            // pass\n        }\n\n        if (closed) {\n            iframeFrames.splice(i, 1);\n            iframeWindows.splice(i, 1);\n        }\n    }\n}\n\nexport function linkFrameWindow(frame : HTMLIFrameElement) {\n\n    cleanIframes();\n\n    if (frame && frame.contentWindow) {\n        try {\n            iframeWindows.push(frame.contentWindow);\n            iframeFrames.push(frame);\n        } catch (err) {\n            // pass\n        }\n    }\n}\n\nexport function getUserAgent(win : ?SameDomainWindowType) : string {\n    win = win || window;\n    return win.navigator.mockUserAgent || win.navigator.userAgent;\n}\n\n\nexport function getFrameByName(win : CrossDomainWindowType, name : string) : ?CrossDomainWindowType {\n\n    let winFrames = getFrames(win);\n\n    for (let childFrame of winFrames) {\n        try {\n            // $FlowFixMe\n            if (isSameDomain(childFrame) && childFrame.name === name && winFrames.indexOf(childFrame) !== -1) {\n                return childFrame;\n            }\n        } catch (err) {\n            // pass\n        }\n    }\n\n    try {\n        // $FlowFixMe\n        if (winFrames.indexOf(win.frames[name]) !== -1) {\n            // $FlowFixMe\n            return win.frames[name];\n        }\n    } catch (err) {\n        // pass\n    }\n\n    try {\n        if (winFrames.indexOf(win[name]) !== -1) {\n            return win[name];\n        }\n    } catch (err) {\n        // pass\n    }\n}\n\nexport function findChildFrameByName(win : CrossDomainWindowType, name : string) : ?CrossDomainWindowType {\n\n    let frame = getFrameByName(win, name);\n\n    if (frame) {\n        return frame;\n    }\n\n    for (let childFrame of getFrames(win)) {\n        let namedFrame = findChildFrameByName(childFrame, name);\n\n        if (namedFrame) {\n            return namedFrame;\n        }\n    }\n}\n\nexport function findFrameByName(win : CrossDomainWindowType, name : string) : ?CrossDomainWindowType {\n\n    let frame;\n\n    frame = getFrameByName(win, name);\n\n    if (frame) {\n        return frame;\n    }\n\n    let top = getTop(win) || win;\n\n    return findChildFrameByName(top, name);\n}\n\nexport function isParent(win : CrossDomainWindowType, frame : CrossDomainWindowType) : boolean {\n\n    let frameParent = getParent(frame);\n\n    if (frameParent) {\n        return frameParent === win;\n    }\n\n    for (let childFrame of getFrames(win)) {\n        if (childFrame === frame) {\n            return true;\n        }\n    }\n\n    return false;\n}\n\nexport function isOpener(parent : CrossDomainWindowType, child : CrossDomainWindowType) : boolean {\n\n    return parent === getOpener(child);\n}\n\nexport function getAncestor(win : ?CrossDomainWindowType) : ?CrossDomainWindowType {\n    win = win || window;\n\n    let opener = getOpener(win);\n\n    if (opener) {\n        return opener;\n    }\n\n    let parent = getParent(win);\n\n    if (parent) {\n        return parent;\n    }\n}\n\nexport function getAncestors(win : CrossDomainWindowType) : Array<CrossDomainWindowType> {\n\n    let results = [];\n\n    let ancestor = win;\n\n    while (ancestor) {\n        ancestor = getAncestor(ancestor);\n        if (ancestor) {\n            results.push(ancestor);\n        }\n    }\n\n    return results;\n}\n\n\nexport function isAncestor(parent : CrossDomainWindowType, child : CrossDomainWindowType) : boolean {\n\n    let actualParent = getAncestor(child);\n\n    if (actualParent) {\n        if (actualParent === parent) {\n            return true;\n        }\n\n        return false;\n    }\n\n    if (child === parent) {\n        return false;\n    }\n\n    if (getTop(child) === child) {\n        return false;\n    }\n\n    for (let frame of getFrames(parent)) {\n        if (frame === child) {\n            return true;\n        }\n    }\n\n    return false;\n}\n\nexport function isPopup() : boolean {\n    return Boolean(getOpener(window));\n}\n\nexport function isIframe() : boolean {\n    return Boolean(getParent(window));\n}\n\nexport function isFullpage() : boolean {\n    return Boolean(!isIframe() && !isPopup());\n}\n\nfunction anyMatch(collection1, collection2) : boolean {\n\n    for (let item1 of collection1) {\n        for (let item2 of collection2) {\n            if (item1 === item2) {\n                return true;\n            }\n        }\n    }\n\n    return false;\n}\n\nexport function getDistanceFromTop(win : CrossDomainWindowType = window) : number {\n    let distance = 0;\n    let parent = win;\n\n    while (parent) {\n        parent = getParent(parent);\n        if (parent) {\n            distance += 1;\n        }\n    }\n\n    return distance;\n}\n\nexport function getNthParent(win : CrossDomainWindowType, n : number = 1) : ?CrossDomainWindowType {\n    let parent = win;\n\n    for (let i = 0; i < n; i++) {\n        if (!parent) {\n            return;\n        }\n\n        parent = getParent(parent);\n    }\n\n    return parent;\n}\n\nexport function getNthParentFromTop(win : CrossDomainWindowType, n : number = 1) : ?CrossDomainWindowType {\n    return getNthParent(win, getDistanceFromTop(win) - n);\n}\n\nexport function isSameTopWindow(win1 : CrossDomainWindowType, win2 : CrossDomainWindowType) : boolean {\n\n    let top1 = getTop(win1) || win1;\n    let top2 = getTop(win2) || win2;\n\n    try {\n        if (top1 && top2) {\n            if (top1 === top2) {\n                return true;\n            }\n\n            return false;\n        }\n    } catch (err) {\n        // pass\n    }\n\n    let allFrames1 = getAllFramesInWindow(win1);\n    let allFrames2 = getAllFramesInWindow(win2);\n\n    if (anyMatch(allFrames1, allFrames2)) {\n        return true;\n    }\n\n    let opener1 = getOpener(top1);\n    let opener2 = getOpener(top2);\n\n    if (opener1 && anyMatch(getAllFramesInWindow(opener1), allFrames2)) {\n        return false;\n    }\n\n    if (opener2 && anyMatch(getAllFramesInWindow(opener2), allFrames1)) {\n        return false;\n    }\n\n    return false;\n}\n\nexport function matchDomain(pattern : DomainMatcher, origin : DomainMatcher) : boolean {\n\n    if (typeof pattern === 'string') {\n\n        if (typeof origin === 'string') {\n            return pattern === WILDCARD || origin === pattern;\n        }\n\n        if (isRegex(origin)) {\n            return false;\n        }\n\n        if (Array.isArray(origin)) {\n            return false;\n        }\n    }\n\n    if (isRegex(pattern)) {\n\n        if (isRegex(origin)) {\n            return pattern.toString() === origin.toString();\n        }\n\n        if (Array.isArray(origin)) {\n            return false;\n        }\n\n        // $FlowFixMe\n        return Boolean(origin.match(pattern));\n    }\n\n    if (Array.isArray(pattern)) {\n\n        if (Array.isArray(origin)) {\n            return JSON.stringify(pattern) === JSON.stringify(origin);\n        }\n\n        if (isRegex(origin)) {\n            return false;\n        }\n\n        return pattern.some(subpattern => matchDomain(subpattern, origin));\n    }\n\n    return false;\n}\n\nexport function stringifyDomainPattern(pattern : DomainMatcher) : string {\n    if (Array.isArray(pattern)) {\n        return `(${ pattern.join(' | ') })`;\n    } else if (isRegex(pattern)) {\n        return `RegExp(${ pattern.toString() }`;\n    } else {\n        return pattern.toString();\n    }\n}\n\nexport function getDomainFromUrl(url : string) : string {\n\n    let domain;\n\n    if (url.match(/^(https?|mock|file):\\/\\//)) {\n        domain = url;\n    } else {\n        return getDomain();\n    }\n\n    domain = domain.split('/').slice(0, 3).join('/');\n\n    return domain;\n}\n\nexport function onCloseWindow(win : CrossDomainWindowType, callback : Function, delay : number = 1000, maxtime : number = Infinity) : { cancel : () => void } {\n\n    let timeout;\n\n    let check = () => {\n\n        if (isWindowClosed(win)) {\n\n            if (timeout) {\n                clearTimeout(timeout);\n            }\n\n            return callback();\n        }\n\n        if (maxtime <= 0) {\n            clearTimeout(timeout);\n        } else {\n            maxtime -= delay;\n            timeout = setTimeout(check, delay);\n        }\n    };\n\n    check();\n\n    return {\n        cancel() {\n            if (timeout) {\n                clearTimeout(timeout);\n            }\n        }\n    };\n}\n\n// eslint-disable-next-line complexity\nexport function isWindow(obj : Object) : boolean {\n\n    try {\n        if (obj === window) {\n            return true;\n        }\n    } catch (err) {\n        if (err && err.message === IE_WIN_ACCESS_ERROR) {\n            return true;\n        }\n    }\n\n    try {\n        if (Object.prototype.toString.call(obj) === '[object Window]') {\n            return true;\n        }\n    } catch (err) {\n        if (err && err.message === IE_WIN_ACCESS_ERROR) {\n            return true;\n        }\n    }\n\n    try {\n        if (window.Window && obj instanceof window.Window) {\n            return true;\n        }\n    } catch (err) {\n        if (err && err.message === IE_WIN_ACCESS_ERROR) {\n            return true;\n        }\n    }\n\n    try {\n        if (obj && obj.self === obj) {\n            return true;\n        }\n    } catch (err) {\n        if (err && err.message === IE_WIN_ACCESS_ERROR) {\n            return true;\n        }\n    }\n\n    try {\n        if (obj && obj.parent === obj) {\n            return true;\n        }\n    } catch (err) {\n        if (err && err.message === IE_WIN_ACCESS_ERROR) {\n            return true;\n        }\n    }\n\n    try {\n        if (obj && obj.top === obj) {\n            return true;\n        }\n    } catch (err) {\n        if (err && err.message === IE_WIN_ACCESS_ERROR) {\n            return true;\n        }\n    }\n\n    try {\n        noop(obj === obj);  // eslint-disable-line no-self-compare\n\n    } catch (err) {\n        return true;\n    }\n\n    try {\n        noop(obj && obj.__cross_domain_utils_window_check__);\n\n    } catch (err) {\n        return true;\n    }\n\n    return false;\n}\n\nexport function isBrowser() : boolean {\n    return (typeof window !== 'undefined' && typeof window.location !== 'undefined');\n}\n\nexport function isCurrentDomain(domain : string) : boolean {\n    if (!isBrowser()) {\n        return false;\n    }\n\n    return (getDomain() === domain);\n}\n\nexport function isMockDomain(domain : string) : boolean {\n    return domain.indexOf(PROTOCOL.MOCK) === 0;\n}\n\nexport function normalizeMockUrl(url : string) : string {\n    if (!isMockDomain(getDomainFromUrl(url))) {\n        return url;\n    }\n\n    if (!__TEST__) {\n        throw new Error(`Mock urls not supported out of test mode`);\n    }\n\n    return url.replace(/^mock:\\/\\/[^/]+/, getActualDomain(window));\n}\n","export default function _applyDecoratedDescriptor(target, property, decorators, descriptor, context) {\n  var desc = {};\n  Object['ke' + 'ys'](descriptor).forEach(function (key) {\n    desc[key] = descriptor[key];\n  });\n  desc.enumerable = !!desc.enumerable;\n  desc.configurable = !!desc.configurable;\n\n  if ('value' in desc || desc.initializer) {\n    desc.writable = true;\n  }\n\n  desc = decorators.slice().reverse().reduce(function (desc, decorator) {\n    return decorator(target, property, desc) || desc;\n  }, desc);\n\n  if (context && desc.initializer !== void 0) {\n    desc.value = desc.initializer ? desc.initializer.call(context) : void 0;\n    desc.initializer = undefined;\n  }\n\n  if (desc.initializer === void 0) {\n    Object['define' + 'Property'](target, property, desc);\n    desc = null;\n  }\n\n  return desc;\n}","/* @flow */\n\nexport const MESSAGE_TYPE = {\n    REQUEST:  ('postrobot_message_request' : 'postrobot_message_request'),\n    RESPONSE: ('postrobot_message_response' : 'postrobot_message_response'),\n    ACK:      ('postrobot_message_ack' : 'postrobot_message_ack')\n};\n\nexport const MESSAGE_ACK = {\n    SUCCESS: ('success' : 'success'),\n    ERROR:   ('error' : 'error')\n};\n\nexport const MESSAGE_NAME = {\n    METHOD:      ('postrobot_method' : 'postrobot_method'),\n    HELLO:       ('postrobot_hello' : 'postrobot_hello'),\n    OPEN_TUNNEL: ('postrobot_open_tunnel' : 'postrobot_open_tunnel')\n};\n\nexport const WINDOW_PROP = {\n    POSTROBOT: ('__postRobot__' : '__postRobot__')\n};\n\nexport const SEND_STRATEGY = {\n    POST_MESSAGE: ('postrobot_post_message' : 'postrobot_post_message'),\n    BRIDGE:       ('postrobot_bridge' : 'postrobot_bridge'),\n    GLOBAL:       ('postrobot_global' : 'postrobot_global')\n};\n\nexport const PROTOCOL = {\n    MOCK: ('mock:' : 'mock:'),\n    FILE: ('file:' : 'file:')\n};\n\nexport const BRIDGE_NAME_PREFIX = '__postrobot_bridge__';\nexport const POSTROBOT_PROXY =    '__postrobot_proxy__';\n\nexport const WILDCARD = '*';\n\nexport const SERIALIZATION_TYPE = {\n    CROSS_DOMAIN_ZALGO_PROMISE: ('cross_domain_zalgo_promise' : 'cross_domain_zalgo_promise'),\n    CROSS_DOMAIN_FUNCTION:      ('cross_domain_function' : 'cross_domain_function'),\n    CROSS_DOMAIN_WINDOW:        ('cross_domain_window' : 'cross_domain_window')\n};\n","/* @flow */\n\nimport { SEND_STRATEGY } from './constants';\n\nexport let CONFIG : Object = {\n    BRIDGE_TIMEOUT:       5000,\n    CHILD_WINDOW_TIMEOUT: 5000,\n\n    ACK_TIMEOUT:       2000,\n    ACK_TIMEOUT_KNOWN: 10000,\n    RES_TIMEOUT:       __TEST__ ? 2000 : -1,\n    \n    ALLOWED_POST_MESSAGE_METHODS: {\n        [ SEND_STRATEGY.POST_MESSAGE ]: true,\n        [ SEND_STRATEGY.BRIDGE ]:       true,\n        [ SEND_STRATEGY.GLOBAL ]:       true\n    }\n};\n","/* @flow */\n\nimport { type CrossDomainWindowType } from 'cross-domain-utils/src';\nimport { WeakMap } from 'cross-domain-safe-weakmap/src';\nimport { getOrSet } from 'belter/src';\n\nimport { WINDOW_PROP } from './conf';\n\nexport let global : Object = window[WINDOW_PROP.POSTROBOT] = window[WINDOW_PROP.POSTROBOT] || {};\nlet winStore = global.windowStore = global.windowStore || new WeakMap();\n\ntype WindowStore<T> = {|\n    get : ((CrossDomainWindowType, T) => T) & ((CrossDomainWindowType, void) => T | void),\n    set : (CrossDomainWindowType, T) => T,\n    has : (CrossDomainWindowType) => boolean,\n    del : (CrossDomainWindowType) => void,\n    getOrSet : (CrossDomainWindowType, () => T) => T\n|};\n\ntype ObjectGetter = () => Object;\n\nlet getObj : ObjectGetter = () => ({});\n\n// $FlowFixMe\nexport function windowStore<T>(key : string, defStore? : ObjectGetter = getObj) : WindowStore<T> {\n\n    function getStore(win : CrossDomainWindowType) : ObjectGetter {\n        return winStore.getOrSet(win, defStore);\n    }\n\n    return {\n        has: (win) => {\n            let store = getStore(win);\n            return store.hasOwnProperty(key);\n        },\n        get: (win, defVal) => {\n            let store = getStore(win);\n            // $FlowFixMe\n            return store.hasOwnProperty(key) ? store[key] : defVal;\n        },\n        set: (win, val) => {\n            let store = getStore(win);\n            store[key] = val;\n            return val;\n        },\n        del: (win) => {\n            let store = getStore(win);\n            delete store[key];\n        },\n        getOrSet: (win, getter) => {\n            let store = getStore(win);\n            if (store.hasOwnProperty(key)) {\n                return store[key];\n            }\n            let val = getter();\n            store[key] = val;\n            return val;\n        }\n    };\n}\n\ntype GlobalStore<T> = {|\n    get : ((string, T) => T) & ((string, void) => T | void),\n    set : (string, T) => T,\n    has : (string) => boolean,\n    del : (string) => void,\n    getOrSet : (string, () => T) => T,\n    reset : () => void,\n    keys : () => $ReadOnlyArray<string>\n|};\n\n// $FlowFixMe\nexport function globalStore<T : mixed>(key : string, defStore? : ObjectGetter = getObj) : GlobalStore<T> {\n    let store = getOrSet(global, key, defStore);\n\n    return {\n        has: (storeKey) => {\n            return store.hasOwnProperty(storeKey);\n        },\n        get: (storeKey, defVal) => {\n            // $FlowFixMe\n            return store.hasOwnProperty(storeKey) ? store[storeKey] : defVal;\n        },\n        set: (storeKey, val) => {\n            store[storeKey] = val;\n            return val;\n        },\n        del: (storeKey) => {\n            delete store[storeKey];\n        },\n        getOrSet: (storeKey, getter) => {\n            if (store.hasOwnProperty(storeKey)) {\n                return store[storeKey];\n            }\n            let val = getter();\n            store[storeKey] = val;\n            return val;\n        },\n        reset: () => {\n            store = defStore();\n        },\n        keys: () => {\n            return Object.keys(store);\n        }\n    };\n}\n","/* @flow */\n\nimport { getAncestor, type CrossDomainWindowType } from 'cross-domain-utils/src';\nimport { ZalgoPromise } from 'zalgo-promise/src';\nimport { noop, uniqueID, once, weakMapMemoizePromise } from 'belter/src';\n\nimport { MESSAGE_NAME, WILDCARD } from '../conf';\nimport { global, windowStore } from '../global';\n\nglobal.instanceID = global.instanceID || uniqueID();\nlet helloPromises = windowStore('helloPromises');\n\nfunction getHelloPromise(win : CrossDomainWindowType) : ZalgoPromise<{ win : CrossDomainWindowType, domain : string }> {\n    return helloPromises.getOrSet(win, () => new ZalgoPromise());\n}\n\nconst listenForHello = once(() => {\n    global.on(MESSAGE_NAME.HELLO, { domain: WILDCARD }, ({ source, origin }) => {\n        getHelloPromise(source).resolve({ win: source, domain: origin });\n        return { instanceID: global.instanceID };\n    });\n});\n\nexport function sayHello(win : CrossDomainWindowType) : ZalgoPromise<{ win : CrossDomainWindowType, domain : string, instanceID : string }> {\n    return global.send(win, MESSAGE_NAME.HELLO, { instanceID: global.instanceID }, { domain: WILDCARD, timeout: -1 })\n        .then(({ origin, data: { instanceID } }) => {\n            getHelloPromise(win).resolve({ win, domain: origin });\n            return { win, domain: origin, instanceID };\n        });\n}\n\nexport let getWindowInstanceID = weakMapMemoizePromise((win : CrossDomainWindowType) : ZalgoPromise<string> => {\n    return sayHello(win).then(({ instanceID }) => instanceID);\n});\n\nexport function initHello() {\n    listenForHello();\n\n    let parent = getAncestor();\n    if (parent) {\n        sayHello(parent).catch(noop);\n    }\n}\n\nexport function awaitWindowHello(win : CrossDomainWindowType, timeout : number = 5000, name : string = 'Window') : ZalgoPromise<{ win : CrossDomainWindowType, domain : string }> {\n    let promise = getHelloPromise(win);\n\n    if (timeout !== -1) {\n        promise = promise.timeout(timeout, new Error(`${ name } did not load after ${ timeout }ms`));\n    }\n\n    return promise;\n}\n","/* @flow */\n\nimport { type CrossDomainWindowType } from 'cross-domain-utils/src';\n\nimport { windowStore } from '../global';\n\nlet knownWindows = windowStore('knownWindows');\n\nexport function markWindowKnown(win : CrossDomainWindowType) {\n    knownWindows.set(win, true);\n}\n\nexport function isWindowKnown(win : CrossDomainWindowType) : boolean {\n    return knownWindows.get(win, false);\n}\n","/* @flow */\n\nexport const TYPE = {\n    FUNCTION:  ('function' : 'function'),\n    ERROR:     ('error' : 'error'),\n    PROMISE:   ('promise' : 'promise'),\n    REGEX:     ('regex' : 'regex'),\n    DATE:      ('date' : 'date'),\n    ARRAY:     ('array' : 'array'),\n    OBJECT:    ('object' : 'object'),\n    STRING:    ('string' : 'string'),\n    NUMBER:    ('number' : 'number'),\n    BOOLEAN:   ('boolean' : 'boolean'),\n    NULL:      ('null' : 'null'),\n    UNDEFINED: ('undefined' : 'undefined')\n};\n","/* @flow */\n\nimport { TYPE } from './constants';\nimport type { CustomSerializedType } from './types';\n\nexport function isSerializedType(item : mixed) : boolean {\n    return (typeof item === 'object' && item !== null && typeof item.__type__ === 'string');\n}\n\nexport function determineType(val : mixed) : $Values<typeof TYPE> | void {\n    if (typeof val === 'undefined') {\n        return TYPE.UNDEFINED;\n    }\n\n    if (val === null) {\n        return TYPE.NULL;\n    }\n\n    if (Array.isArray(val)) {\n        return TYPE.ARRAY;\n    }\n\n    if (typeof val === 'function') {\n        return TYPE.FUNCTION;\n    }\n\n    if (typeof val === 'object') {\n\n        if (val instanceof Error) {\n            return TYPE.ERROR;\n        }\n\n        if (typeof val.then === 'function') {\n            return TYPE.PROMISE;\n        }\n\n        if (Object.prototype.toString.call(val) === '[object RegExp]') {\n            return TYPE.REGEX;\n        }\n\n        if (Object.prototype.toString.call(val) === '[object Date]') {\n            return TYPE.DATE;\n        }\n\n        return TYPE.OBJECT;\n    }\n\n    if (typeof val === 'string') {\n        return TYPE.STRING;\n    }\n\n    if (typeof val === 'number') {\n        return TYPE.NUMBER;\n    }\n\n    if (typeof val === 'boolean') {\n        return TYPE.BOOLEAN;\n    }\n}\n\nexport function serializeType<T : string, V : mixed>(type : T, val : V) : CustomSerializedType<T, V> {\n    return {\n        __type__: type,\n        __val__:  val\n    };\n}\n","/* @flow */\n\nimport { TYPE } from './constants';\nimport type { Thenable, CustomSerializedType, NativeSerializedType } from './types';\nimport { determineType, isSerializedType } from './common';\nimport {\n    serializeFunction,\n    serializeError, type SerializedError,\n    serializePromise,\n    serializeRegex, type SerializedRegex,\n    serializeDate, type SerializedDate,\n    serializeArray,\n    serializeObject,\n    serializeString,\n    serializeNumber,\n    serializeBoolean,\n    serializeNull\n} from './serializers';\n\ntype NativeSerializer<V : mixed, S : mixed, T : $Values<typeof TYPE>> = (value : V, key : string) => NativeSerializedType<T, S>;\ntype CustomSerializer<V : mixed, S : mixed, T : string> = (value : V, key : string) => CustomSerializedType<T, S>;\ntype PrimitiveSerializer<V : mixed, S : mixed> = (value : V, key : string) => S;\ntype CustomOrPrimitiveSerializer<V : mixed, T : string> = CustomSerializer<V, *, T> | PrimitiveSerializer<V, *>;\ntype NativeOrCustomOrPrimitiveSerializer<V : mixed, S : mixed, T : string> = NativeSerializer<V, S, T> | CustomOrPrimitiveSerializer<V, T>;\n\ntype Serializers = {|\n    function? : CustomOrPrimitiveSerializer<Function, typeof TYPE.FUNCTION>,\n    error? : NativeOrCustomOrPrimitiveSerializer<Error, SerializedError, typeof TYPE.ERROR>,\n    promise? : CustomOrPrimitiveSerializer<Thenable, typeof TYPE.PROMISE>,\n    regex? : NativeOrCustomOrPrimitiveSerializer<RegExp, SerializedRegex, typeof TYPE.REGEX>,\n    date? : NativeOrCustomOrPrimitiveSerializer<Date, SerializedDate, typeof TYPE.DATE>,\n    array? : CustomOrPrimitiveSerializer<$ReadOnlyArray<mixed>, typeof TYPE.ARRAY>,\n    object? : CustomOrPrimitiveSerializer<Object, typeof TYPE.OBJECT>,\n    string? : CustomOrPrimitiveSerializer<string, typeof TYPE.STRING>,\n    number? : CustomOrPrimitiveSerializer<number, typeof TYPE.NUMBER>,\n    boolean? : CustomOrPrimitiveSerializer<boolean, typeof TYPE.BOOLEAN>,\n    null? : CustomOrPrimitiveSerializer<null, typeof TYPE.NULL>\n|};\n\nconst SERIALIZER : Serializers = {\n    [ TYPE.FUNCTION ]:  serializeFunction,\n    [ TYPE.ERROR ]:     serializeError,\n    [ TYPE.PROMISE ]:   serializePromise,\n    [ TYPE.REGEX ]:     serializeRegex,\n    [ TYPE.DATE ]:      serializeDate,\n    [ TYPE.ARRAY ]:     serializeArray,\n    [ TYPE.OBJECT ]:    serializeObject,\n    [ TYPE.STRING ]:    serializeString,\n    [ TYPE.NUMBER ]:    serializeNumber,\n    [ TYPE.BOOLEAN ]:   serializeBoolean,\n    [ TYPE.NULL ]:      serializeNull\n};\n\n// $FlowFixMe\nconst defaultSerializers : Serializers = {};\n\nexport function serialize<T : mixed>(obj : T, serializers : Serializers = defaultSerializers) : string {\n\n    function replacer(key) : ?mixed {\n        const val = this[key];\n\n        if (isSerializedType(this)) {\n            return val;\n        }\n        \n        const type = determineType(val);\n\n        if (!type) {\n            return val;\n        }\n\n        // $FlowFixMe\n        const serializer = serializers[type] || SERIALIZER[type];\n\n        if (!serializer) {\n            return val;\n        }\n\n        return serializer(val, key);\n    }\n\n    const result = JSON.stringify(obj, replacer);\n\n    if (typeof result === 'undefined') {\n        return TYPE.UNDEFINED;\n    }\n\n    return result;\n}\n","/* @flow */\n\nexport type SerializedFunction = void;\n\nexport function serializeFunction() : SerializedFunction {\n    // pass\n}\n\nexport function deserializeFunction() {\n    throw new Error(`Function serialization is not implemented; nothing to deserialize`);\n}\n","/* @flow */\n\nimport { serializeType } from '../common';\nimport { TYPE } from '../constants';\nimport type { NativeSerializedType } from '../types';\n\nexport type SerializedError = {|\n    message : string,\n    stack : string,\n    code : string | number | void\n|};\n\n// $FlowFixMe\nexport function serializeError({ message, stack, code } : Error) : NativeSerializedType<typeof TYPE.ERROR, SerializedError> {\n    return serializeType(TYPE.ERROR, { message, stack, code });\n}\n\nexport function deserializeError({ message, stack, code } : SerializedError) : Error {\n    const error = new Error(message);\n    // $FlowFixMe\n    error.code = code;\n    error.stack = `${ stack }\\n\\n${ error.stack }`;\n    return error;\n}\n","/* @flow */\n\nexport type SerializedPromise = void;\n\nexport function serializePromise() : SerializedPromise {\n    // pass\n}\n\nexport function deserializePromise() {\n    throw new Error(`Promise serialization is not implemented; nothing to deserialize`);\n}\n","/* @flow */\n\nimport { serializeType } from '../common';\nimport { TYPE } from '../constants';\nimport type { NativeSerializedType } from '../types';\n\nexport type SerializedRegex = string;\n\nexport function serializeRegex(val : RegExp) : NativeSerializedType<typeof TYPE.REGEX, SerializedRegex> {\n    return serializeType(TYPE.REGEX, val.source);\n}\n\nexport function deserializeRegex(val : string) : RegExp {\n    // eslint-disable-next-line security/detect-non-literal-regexp\n    return new RegExp(val);\n}\n","/* @flow */\n\nimport { serializeType } from '../common';\nimport { TYPE } from '../constants';\nimport type { NativeSerializedType } from '../types';\n\nexport type SerializedDate = string;\n\nexport function serializeDate(val : Date) : NativeSerializedType<typeof TYPE.DATE, SerializedDate> {\n    return serializeType(TYPE.DATE, val.toJSON());\n}\n\nexport function deserializeDate(val : string) : Date {\n    return new Date(val);\n}\n","/* @flow */\n\nexport type SerializedArray<T : mixed = mixed> = $ReadOnlyArray<T>;\n\nexport function serializeArray<T : mixed>(val : $ReadOnlyArray<T>) : SerializedArray<T> {\n    return val;\n}\n\nexport function deserializeArray<T : mixed>(val : SerializedArray<T>) : $ReadOnlyArray<T> {\n    return val;\n}\n","/* @flow */\n\nexport type SerializedObject = Object;\n\nexport function serializeObject(val : Object) : SerializedObject {\n    return val;\n}\n\nexport function deserializeObject(val : SerializedObject) : Object {\n    return val;\n}\n","/* @flow */\n\nexport type SerializedString = string;\n\nexport function serializeString(val : string) : SerializedString {\n    return val;\n}\n\nexport function deserializeString(val : SerializedString) : string {\n    return val;\n}\n","/* @flow */\n\nexport type SerializedNumber = number;\n\nexport function serializeNumber(val : number) : SerializedNumber {\n    return val;\n}\n\nexport function deserializeNumber(val : SerializedNumber) : number {\n    return val;\n}\n","/* @flow */\n\nexport type SerializedBoolean = boolean;\n\nexport function serializeBoolean(val : boolean) : SerializedBoolean {\n    return val;\n}\n\nexport function deserializeBoolean(val : SerializedBoolean) : boolean {\n    return val;\n}\n","/* @flow */\n\nexport type SerializedNull = null;\n\nexport function serializeNull(val : null) : SerializedNull {\n    return val;\n}\n\nexport function deserializeNull(val : SerializedNull) : null {\n    return val;\n}\n","/* @flow */\n\nimport type { Thenable } from './types';\nimport { TYPE } from './constants';\nimport { determineType, isSerializedType } from './common';\nimport {\n    deserializeFunction,\n    deserializeError, type SerializedError,\n    deserializePromise,\n    deserializeRegex, type SerializedRegex,\n    deserializeDate, type SerializedDate,\n    deserializeArray,\n    deserializeObject,\n    deserializeString,\n    deserializeNumber,\n    deserializeBoolean,\n    deserializeNull\n} from './serializers';\n\ntype Deserializer<V : mixed, S : mixed> = (serializedValue : S, key : string) => V;\ntype PrimitiveDeserializer<V, S = V> = (serializedValue : S, key : string) => V;\n\ntype Deserializers = {\n    function? : Deserializer<Function, *>,\n    error? : Deserializer<Error, SerializedError>,\n    promise? : Deserializer<Thenable, *>,\n    regex? : Deserializer<RegExp, SerializedRegex>,\n    date? : Deserializer<Date, SerializedDate>,\n    array? : PrimitiveDeserializer<$ReadOnlyArray<mixed>>,\n    object? : PrimitiveDeserializer<Object>,\n    string? : PrimitiveDeserializer<string>,\n    number? : PrimitiveDeserializer<number>,\n    boolean? : PrimitiveDeserializer<boolean>,\n    null? : PrimitiveDeserializer<null>,\n    [string] : Deserializer<mixed, *>\n};\n\n// $FlowFixMe\nconst DESERIALIZER : Deserializers = {\n    [ TYPE.FUNCTION ]:  deserializeFunction,\n    [ TYPE.ERROR ]:     deserializeError,\n    [ TYPE.PROMISE ]:   deserializePromise,\n    [ TYPE.REGEX ]:     deserializeRegex,\n    [ TYPE.DATE ]:      deserializeDate,\n    [ TYPE.ARRAY ]:     deserializeArray,\n    [ TYPE.OBJECT ]:    deserializeObject,\n    [ TYPE.STRING ]:    deserializeString,\n    [ TYPE.NUMBER ]:    deserializeNumber,\n    [ TYPE.BOOLEAN ]:   deserializeBoolean,\n    [ TYPE.NULL ]:      deserializeNull\n};\n\n// $FlowFixMe\nconst defaultDeserializers : Deserializers = {};\n\nexport function deserialize<T : mixed | null | void>(str : string, deserializers : Deserializers = defaultDeserializers) : T {\n    if (str === TYPE.UNDEFINED) {\n        // $FlowFixMe\n        return;\n    }\n\n    function replacer(key, val) : ?mixed {\n        if (isSerializedType(this)) {\n            return val;\n        }\n\n        let type;\n        let value;\n\n        if (isSerializedType(val)) {\n            type = val.__type__;\n            value = val.__val__;\n        } else {\n            type = determineType(val);\n            value = val;\n        }\n\n        if (!type) {\n            return value;\n        }\n\n        // $FlowFixMe\n        const deserializer = deserializers[type] || DESERIALIZER[type];\n\n        if (!deserializer) {\n            return value;\n        }\n\n        return deserializer(value, key);\n    }\n\n    return JSON.parse(str, replacer);\n}\n","/* @flow */\n\nimport { isSameDomain, isWindowClosed, type CrossDomainWindowType, type DomainMatcher, getOpener, WINDOW_TYPE } from 'cross-domain-utils/src';\nimport { ZalgoPromise } from 'zalgo-promise/src';\nimport { uniqueID, memoizePromise } from 'belter/src';\nimport { serializeType, type CustomSerializedType } from 'universal-serialize/src';\n\nimport { SERIALIZATION_TYPE } from '../conf';\nimport { windowStore, globalStore } from '../global';\nimport { getWindowInstanceID } from '../lib';\n\nlet winToProxyWindow = windowStore('winToProxyWindow');\nlet idToProxyWindow = globalStore('idToProxyWindow');\n\nfunction cleanupProxyWindows() {\n    for (let id of idToProxyWindow.keys()) {\n        // $FlowFixMe\n        if (idToProxyWindow.get(id).shouldClean()) {\n            idToProxyWindow.del(id);\n        }\n    }\n}\n\ntype SerializedProxyWindow = {|\n    id : string,\n    type : $Values<typeof WINDOW_TYPE>,\n    close : () => ZalgoPromise<void>,\n    focus : () => ZalgoPromise<void>,\n    isClosed : () => ZalgoPromise<boolean>,\n    setLocation : (string) => ZalgoPromise<void>,\n    setName : (string) => ZalgoPromise<void>,\n    getInstanceID : () => ZalgoPromise<string>\n|};\n\nexport class ProxyWindow {\n\n    isProxyWindow : true = true\n    serializedWindow : SerializedProxyWindow\n    actualWindow : CrossDomainWindowType\n    actualWindowPromise : ZalgoPromise<CrossDomainWindowType>\n\n    constructor(serializedWindow : SerializedProxyWindow, actualWindow? : CrossDomainWindowType) {\n        this.serializedWindow = serializedWindow;\n        this.actualWindowPromise = new ZalgoPromise();\n        if (actualWindow) {\n            this.setWindow(actualWindow);\n        }\n        this.serializedWindow.getInstanceID = memoizePromise(this.serializedWindow.getInstanceID);\n    }\n\n    getType() : $Values<typeof WINDOW_TYPE> {\n        return this.serializedWindow.type;\n    }\n\n    isPopup() : boolean {\n        return this.getType() === WINDOW_TYPE.POPUP;\n    }\n\n    isIframe() : boolean {\n        return this.getType() === WINDOW_TYPE.IFRAME;\n    }\n\n    setLocation(href : string) : ZalgoPromise<ProxyWindow> {\n        return ZalgoPromise.try(() => {\n            if (this.actualWindow) {\n                this.actualWindow.location = href;\n            } else {\n                return this.serializedWindow.setLocation(href);\n            }\n        }).then(() => this);\n    }\n\n    setName(name : string) : ZalgoPromise<ProxyWindow> {\n        return ZalgoPromise.try(() => {\n            if (this.actualWindow) {\n                if (!isSameDomain(this.actualWindow)) {\n                    throw new Error(`Can not set name for window on different domain`);\n                }\n                // $FlowFixMe\n                this.actualWindow.name = name;\n                // $FlowFixMe\n                if (this.actualWindow.frameElement) {\n                    // $FlowFixMe\n                    this.actualWindow.frameElement.setAttribute('name', name);\n                }\n\n                if (__POST_ROBOT__.__IE_POPUP_SUPPORT__) {\n                    const { linkWindow } = require('../bridge');\n                    linkWindow({ win: this.actualWindow, name });\n                }\n\n            } else {\n                return this.serializedWindow.setName(name);\n            }\n        }).then(() => this);\n    }\n\n    close() : ZalgoPromise<ProxyWindow> {\n        return ZalgoPromise.try(() => {\n            if (this.actualWindow) {\n                this.actualWindow.close();\n            } else {\n                return this.serializedWindow.close();\n            }\n        }).then(() => this);\n    }\n\n    focus() : ZalgoPromise<ProxyWindow> {\n        return ZalgoPromise.try(() => {\n            if (this.actualWindow) {\n                this.actualWindow.focus();\n            }\n            return this.serializedWindow.focus();\n        }).then(() => this);\n    }\n\n    isClosed() : ZalgoPromise<boolean> {\n        return ZalgoPromise.try(() => {\n            if (this.actualWindow) {\n                return isWindowClosed(this.actualWindow);\n            } else {\n                return this.serializedWindow.isClosed();\n            }\n        });\n    }\n\n    setWindow(win : CrossDomainWindowType) {\n        this.actualWindow = win;\n        this.actualWindowPromise.resolve(win);\n    }\n\n    matchWindow(win : CrossDomainWindowType) : ZalgoPromise<boolean> {\n        return ZalgoPromise.try(() => {\n            if (this.actualWindow) {\n                return win === this.actualWindow;\n            }\n            \n            return ZalgoPromise.all([\n                this.getInstanceID(),\n                getWindowInstanceID(win)\n            ]).then(([ proxyInstanceID, knownWindowInstanceID ]) => {\n                let match = proxyInstanceID === knownWindowInstanceID;\n\n                if (match) {\n                    this.setWindow(win);\n                }\n\n                return match;\n            });\n        });\n    }\n\n    unwrap() : CrossDomainWindowType | ProxyWindow {\n        return this.actualWindow || this;\n    }\n\n    awaitWindow() : ZalgoPromise<CrossDomainWindowType> {\n        return this.actualWindowPromise;\n    }\n\n    getInstanceID() : ZalgoPromise<string> {\n        if (this.actualWindow) {\n            return getWindowInstanceID(this.actualWindow);\n        } else {\n            return this.serializedWindow.getInstanceID();\n        }\n    }\n\n    serialize() : SerializedProxyWindow {\n        return this.serializedWindow;\n    }\n\n    shouldClean() : boolean {\n        return this.actualWindow && isWindowClosed(this.actualWindow);\n    }\n\n    static unwrap(win : CrossDomainWindowType | ProxyWindow) : CrossDomainWindowType | ProxyWindow {\n        return ProxyWindow.isProxyWindow(win)\n            // $FlowFixMe\n            ? win.unwrap()\n            : win;\n    }\n\n    static serialize(win : CrossDomainWindowType | ProxyWindow) : SerializedProxyWindow {\n        cleanupProxyWindows();\n\n        return ProxyWindow.toProxyWindow(win).serialize();\n    }\n\n    static deserialize(serializedWindow : SerializedProxyWindow) : ProxyWindow {\n        cleanupProxyWindows();\n        \n        return idToProxyWindow.getOrSet(serializedWindow.id, () => {\n            return new ProxyWindow(serializedWindow);\n        });\n    }\n\n    static isProxyWindow(obj : mixed) : boolean {\n        // $FlowFixMe\n        return Boolean(obj && obj.isProxyWindow);\n    }\n\n    static toProxyWindow(win : CrossDomainWindowType | ProxyWindow) : ProxyWindow {\n        cleanupProxyWindows();\n\n        if (ProxyWindow.isProxyWindow(win)) {\n            // $FlowFixMe\n            return win;\n        }\n\n        // $FlowFixMe\n        return winToProxyWindow.getOrSet(win, () => {\n            let id = uniqueID();\n\n            return idToProxyWindow.set(id, new ProxyWindow({\n                id,\n                // $FlowFixMe\n                type:          getOpener(win) ? WINDOW_TYPE.POPUP : WINDOW_TYPE.IFRAME,\n                getInstanceID: () => getWindowInstanceID(win),\n                close:         () => ZalgoPromise.try(() => {\n                    win.close();\n                }),\n                focus:         () => ZalgoPromise.try(() => {\n                    win.focus();\n                }),\n                isClosed:      () => ZalgoPromise.try(() => {\n                    // $FlowFixMe\n                    return isWindowClosed(win);\n                }),\n                setLocation:   (href) => ZalgoPromise.try(() => {\n                    // $FlowFixMe\n                    if (isSameDomain(win)) {\n                        try {\n                            if (win.location && typeof win.location.replace === 'function') {\n                                // $FlowFixMe\n                                win.location.replace(href);\n                                return;\n                            }\n                        } catch (err) {\n                            // pass\n                        }\n                    }\n    \n                    // $FlowFixMe\n                    win.location = href;\n                }),\n                setName:       (name) => ZalgoPromise.try(() => {\n                    if (__POST_ROBOT__.__IE_POPUP_SUPPORT__) {\n                        const { linkWindow } = require('../bridge');\n                        // $FlowFixMe\n                        linkWindow({ win, name });\n                    }\n                    // $FlowFixMe\n                    win.name = name;\n                })\n            // $FlowFixMe\n            }, win));\n        });\n    }\n}\n\nexport type SerializedWindow = CustomSerializedType<typeof SERIALIZATION_TYPE.CROSS_DOMAIN_WINDOW, SerializedProxyWindow>;\n\nexport function serializeWindow(destination : CrossDomainWindowType | ProxyWindow, domain : DomainMatcher, win : CrossDomainWindowType) : SerializedWindow {\n    return serializeType(SERIALIZATION_TYPE.CROSS_DOMAIN_WINDOW, ProxyWindow.serialize(win));\n}\n\nexport function deserializeWindow(source : CrossDomainWindowType | ProxyWindow, origin : string, win : SerializedProxyWindow) : ProxyWindow {\n    return ProxyWindow.deserialize(win);\n}\n","/* @flow */\n\nimport { matchDomain, getDomain, type CrossDomainWindowType, type DomainMatcher } from 'cross-domain-utils/src';\nimport { ZalgoPromise } from 'zalgo-promise/src';\nimport { once, uniqueID, isRegex } from 'belter/src';\nimport { serializeType, type CustomSerializedType } from 'universal-serialize/src';\n\nimport { MESSAGE_NAME, WILDCARD, SERIALIZATION_TYPE } from '../conf';\nimport { global, windowStore, globalStore } from '../global';\n\nimport { ProxyWindow } from './window';\n\nlet methodStore = windowStore('methodStore');\nlet proxyWindowMethods = globalStore('proxyWindowMethods');\nglobal.listeningForFunctions = global.listeningForFunctions || false;\n\nconst listenForFunctionCalls = once(() => {\n    if (global.listeningForFunctions) {\n        return;\n    }\n\n    global.listeningForFunctions = true;\n\n    global.on(MESSAGE_NAME.METHOD, { origin: WILDCARD }, ({ source, origin, data } : { source : CrossDomainWindowType, origin : string, data : Object }) => {\n        let { id, name } = data;\n        \n        return ZalgoPromise.try(() => {\n            let methods = methodStore.getOrSet(source, () => ({}));\n            let meth = methods[data.id] || proxyWindowMethods.get(id);\n\n            if (!meth) {\n                throw new Error(`Could not find method '${ data.name }' with id: ${ data.id } in ${ getDomain(window) }`);\n            }\n\n            let { proxy, domain, val } = meth;\n\n            return ZalgoPromise.try(() => {\n                if (!matchDomain(domain, origin)) {\n                    // $FlowFixMe\n                    throw new Error(`Method '${ data.name }' domain ${ JSON.stringify(isRegex(meth.domain) ? meth.domain.source : meth.domain) } does not match origin ${ origin } in ${ getDomain(window) }`);\n                }\n                \n                if (proxy) {\n                    // $FlowFixMe\n                    return proxy.matchWindow(source).then(match => { // eslint-disable-line max-nested-callbacks\n                        if (!match) {\n                            throw new Error(`Method call '${ data.name }' failed - proxy window does not match source in ${ getDomain(window) }`);\n                        }\n                    });\n                }\n            }).then(() => {\n                return val.apply({ source, origin, data }, data.args);\n            }, err => {\n                return ZalgoPromise.try(() => { // eslint-disable-line max-nested-callbacks\n                    if (val.onError) {\n                        return val.onError(err);\n                    }\n                }).then(() => { // eslint-disable-line max-nested-callbacks\n                    throw err;\n                });\n            }).then(result => {\n                return { result, id, name };\n            });\n        });\n    });\n});\n\nexport type SerializedFunction = CustomSerializedType<typeof SERIALIZATION_TYPE.CROSS_DOMAIN_FUNCTION, {\n    id : string,\n    name : string\n}>;\n\nexport function serializeFunction<T>(destination : CrossDomainWindowType | ProxyWindow, domain : DomainMatcher, val : () => ZalgoPromise<T> | T, key : string) : SerializedFunction {\n    listenForFunctionCalls();\n    \n    let id = uniqueID();\n    destination = ProxyWindow.unwrap(destination);\n\n    if (ProxyWindow.isProxyWindow(destination)) {\n        proxyWindowMethods.set(id, { proxy: destination, domain, val });\n        // $FlowFixMe\n        destination.awaitWindow().then(win => {\n            proxyWindowMethods.del(id);\n            let methods = methodStore.getOrSet(win, () => ({}));\n            methods[id] = { domain, val };\n        });\n    } else {\n        // $FlowFixMe\n        let methods = methodStore.getOrSet(destination, () => ({}));\n        methods[id] = { domain, val };\n    }\n\n    return serializeType(SERIALIZATION_TYPE.CROSS_DOMAIN_FUNCTION, { id, name: val.name || key });\n}\n\nexport function deserializeFunction<T>(source : CrossDomainWindowType | ProxyWindow, origin : string, { id, name } : { id : string, name : string }) : (...args : $ReadOnlyArray<mixed>) => ZalgoPromise<T> {\n    function innerWrapper<X : mixed>(args : $ReadOnlyArray<mixed>, opts? : Object = {}) : ZalgoPromise<X> {\n        let originalStack;\n\n        if (__DEBUG__) {\n            originalStack = (new Error(`Original call to ${ name }():`)).stack;\n        }\n\n        return ZalgoPromise.try(() => {\n            // $FlowFixMe\n            return ProxyWindow.isProxyWindow(source) ? source.awaitWindow() : source;\n        }).then(win => {\n            return global.send(win, MESSAGE_NAME.METHOD, { id, name, args }, { domain: origin, ...opts });\n        }).catch(err => {\n            // $FlowFixMe\n            if (__DEBUG__ && originalStack && err.stack) {\n                // $FlowFixMe\n                err.stack = `${ err.stack }\\n\\n${ originalStack }`;\n            }\n            throw err;\n        });\n    }\n\n    function crossDomainFunctionWrapper<X : mixed>() : ZalgoPromise<X> {\n        return innerWrapper(Array.prototype.slice.call(arguments))\n            .then(({ data }) => data.result);\n    }\n\n    crossDomainFunctionWrapper.fireAndForget = function crossDomainFireAndForgetFunctionWrapper<X : mixed>() : ZalgoPromise<X> {\n        return innerWrapper(Array.prototype.slice.call(arguments), { fireAndForget: true });\n    };\n\n    crossDomainFunctionWrapper.__name__ = name;\n    crossDomainFunctionWrapper.__xdomain__ = true;\n    crossDomainFunctionWrapper.origin = origin;\n\n    return crossDomainFunctionWrapper;\n}\n","/* @flow */\n\nimport { type CrossDomainWindowType, isWindow, type DomainMatcher } from 'cross-domain-utils/src';\nimport { TYPE, serialize, deserialize, type Thenable } from 'universal-serialize/src';\n\nimport { SERIALIZATION_TYPE } from '../conf';\n\nimport { serializeFunction, deserializeFunction, type SerializedFunction } from './function';\nimport { serializePromise, deserializePromise, type SerializedPromise } from './promise';\nimport { serializeWindow, deserializeWindow, type SerializedWindow, ProxyWindow } from './window';\n\nexport function serializeMessage<T : mixed>(destination : CrossDomainWindowType | ProxyWindow, domain : DomainMatcher, obj : T) : string {\n    return serialize(obj, {\n        [ TYPE.PROMISE ]:  (val : Thenable, key : string) : SerializedPromise => serializePromise(destination, domain, val, key),\n        [ TYPE.FUNCTION ]: (val : Function, key : string) : SerializedFunction => serializeFunction(destination, domain, val, key),\n        [ TYPE.OBJECT ]:   (val : CrossDomainWindowType) : Object | SerializedWindow => {\n            return (isWindow(val) || ProxyWindow.isProxyWindow(val)) ? serializeWindow(destination, domain, val) : val;\n        }\n    });\n}\n\nexport function deserializeMessage<T : mixed>(source : CrossDomainWindowType | ProxyWindow, origin : string, message : string) : T {\n    return deserialize(message, {\n        [ SERIALIZATION_TYPE.CROSS_DOMAIN_ZALGO_PROMISE ]: (serializedPromise)  => deserializePromise(source, origin, serializedPromise),\n        [ SERIALIZATION_TYPE.CROSS_DOMAIN_FUNCTION ]:      (serializedFunction) => deserializeFunction(source, origin, serializedFunction),\n        [ SERIALIZATION_TYPE.CROSS_DOMAIN_WINDOW ]:        (serializedWindow)   => deserializeWindow(source, origin, serializedWindow)\n    });\n}\n","/* @flow */\n\nimport { type CrossDomainWindowType, type DomainMatcher } from 'cross-domain-utils/src';\nimport { ZalgoPromise } from 'zalgo-promise/src';\nimport { serializeType, type CustomSerializedType, type Thenable } from 'universal-serialize/src';\n\nimport { SERIALIZATION_TYPE } from '../conf';\n\nimport { serializeFunction, type SerializedFunction } from './function';\nimport { ProxyWindow } from './window';\n\nexport type SerializedPromise = CustomSerializedType<typeof SERIALIZATION_TYPE.CROSS_DOMAIN_ZALGO_PROMISE, {\n    then : SerializedFunction\n}>;\n\nexport function serializePromise(destination : CrossDomainWindowType | ProxyWindow, domain : DomainMatcher, val : Thenable, key : string) : SerializedPromise {\n    return serializeType(SERIALIZATION_TYPE.CROSS_DOMAIN_ZALGO_PROMISE, {\n        then: serializeFunction(destination, domain, (resolve, reject) => val.then(resolve, reject), key)\n    });\n}\n\nexport function deserializePromise<T>(source : CrossDomainWindowType | ProxyWindow, origin : string, { then } : { then : Function }) : ZalgoPromise<T> {\n    return new ZalgoPromise(then);\n}\n","/* @flow */\n\nimport { isSameDomain, isSameTopWindow, isActuallySameDomain, getActualDomain, getDomain, type CrossDomainWindowType, type DomainMatcher } from 'cross-domain-utils/src';\n\nimport { SEND_STRATEGY, PROTOCOL, WILDCARD, WINDOW_PROP } from '../../conf';\nimport { needsGlobalMessagingForBrowser } from '../../lib';\n\nexport let SEND_MESSAGE_STRATEGIES = {};\n\n\nSEND_MESSAGE_STRATEGIES[SEND_STRATEGY.POST_MESSAGE] = (win : CrossDomainWindowType, serializedMessage : string, domain : DomainMatcher) => {\n\n    if (__TEST__) {\n        if (needsGlobalMessagingForBrowser() && isSameTopWindow(window, win) === false) {\n            return;\n        }\n    }\n\n    let domains;\n\n    if (Array.isArray(domain)) {\n        domains = domain;\n    } else if (typeof domain === 'string') {\n        domains = [ domain ];\n    } else {\n        domains = [ WILDCARD ];\n    }\n\n    domains = domains.map(dom => {\n\n        if (dom.indexOf(PROTOCOL.MOCK) === 0) {\n\n            if (window.location.protocol === PROTOCOL.FILE) {\n                return WILDCARD;\n            }\n\n            if (!isActuallySameDomain(win)) {\n                throw new Error(`Attempting to send messsage to mock domain ${ dom }, but window is actually cross-domain`);\n            }\n\n            // $FlowFixMe\n            return getActualDomain(win);\n        }\n\n        if (dom.indexOf(PROTOCOL.FILE) === 0) {\n            return WILDCARD;\n        }\n\n        return dom;\n    });\n\n    domains.forEach(dom => {\n        return win.postMessage(serializedMessage, dom);\n    });\n};\n\nif (__POST_ROBOT__.__IE_POPUP_SUPPORT__) {\n\n    let { sendBridgeMessage, needsBridgeForBrowser, isBridge } = require('../../bridge');\n\n    SEND_MESSAGE_STRATEGIES[SEND_STRATEGY.BRIDGE] = (win : CrossDomainWindowType, serializedMessage : string, domain : string) => {\n\n        if (!needsBridgeForBrowser() && !isBridge()) {\n            return;\n        }\n\n        if (isSameDomain(win)) {\n            throw new Error(`Post message through bridge disabled between same domain windows`);\n        }\n\n        if (isSameTopWindow(window, win) !== false) {\n            throw new Error(`Can only use bridge to communicate between two different windows, not between frames`);\n        }\n\n        return sendBridgeMessage(win, domain, serializedMessage);\n    };\n}\n\nif (__POST_ROBOT__.__IE_POPUP_SUPPORT__ || __POST_ROBOT__.__GLOBAL_MESSAGE_SUPPORT__) {\n    \n    SEND_MESSAGE_STRATEGIES[SEND_STRATEGY.GLOBAL] = (win : CrossDomainWindowType, serializedMessage : string) => {\n\n        if (!needsGlobalMessagingForBrowser()) {\n            return;\n        }\n\n        if (!isSameDomain(win)) {\n            throw new Error(`Post message through global disabled between different domain windows`);\n        }\n\n        if (isSameTopWindow(window, win) !== false) {\n            throw new Error(`Can only use global to communicate between two different windows, not between frames`);\n        }\n\n        // $FlowFixMe\n        let foreignGlobal = win[WINDOW_PROP.POSTROBOT];\n\n        if (!foreignGlobal) {\n            throw new Error(`Can not find postRobot global on foreign window`);\n        }\n\n        return foreignGlobal.receiveMessage({\n            source: window,\n            origin: getDomain(),\n            data:   serializedMessage\n        });\n    };\n}\n","/* @flow */\n\nimport { getUserAgent } from 'cross-domain-utils/src';\n\nexport function needsGlobalMessagingForBrowser() : boolean {\n\n    if (getUserAgent(window).match(/MSIE|rv:11|trident|edge\\/12|edge\\/13/i)) {\n        return true;\n    }\n\n    return false;\n}\n","/* @flow */\n\nimport { isWindowClosed, type CrossDomainWindowType } from 'cross-domain-utils/src';\nimport { ZalgoPromise } from 'zalgo-promise/src';\nimport { uniqueID, stringifyError } from 'belter/src';\n\nimport { MESSAGE_TYPE, CONFIG, MESSAGE_NAME, WILDCARD, WINDOW_PROP } from '../../conf';\nimport { serializeMessage } from '../../serialize';\nimport type { Message } from '../types';\n\nimport { SEND_MESSAGE_STRATEGIES } from './strategies';\n\nfunction logMessage(domain : string | $ReadOnlyArray<string>, message : Message) {\n    if (__DEBUG__) {\n        let level;\n\n        if (Object.keys(MESSAGE_NAME).map(key => MESSAGE_NAME[key]).indexOf(message.name) !== -1 || message.type === MESSAGE_TYPE.ACK) {\n            level = 'debug';\n        } else if (message.ack === 'error') {\n            level = 'error';\n        } else {\n            level = 'info';\n        }\n\n        // eslint-disable-next-line no-console\n        if (typeof console !== 'undefined' && typeof console[level] === 'function') {\n            // eslint-disable-next-line no-console\n            console[level]('postrobot_send', message.type.replace(/^postrobot_message_/, ''), '::', message.name, '::', domain || WILDCARD, '\\n\\n', message);\n        }\n    }\n}\n\nexport function sendMessage(win : CrossDomainWindowType, domain : string | $ReadOnlyArray<string>, message : Message) : ZalgoPromise<void> {\n    return ZalgoPromise.try(() => {\n\n        if (isWindowClosed(win)) {\n            throw new Error('Window is closed');\n        }\n\n        logMessage(domain, message);\n\n        const serializedMessage = serializeMessage(win, domain, {\n            [ WINDOW_PROP.POSTROBOT ]: {\n                id: uniqueID(),\n                ...message\n            }\n        });\n\n\n        let messages = [];\n\n        return ZalgoPromise.map(Object.keys(SEND_MESSAGE_STRATEGIES), strategyName => {\n\n            return ZalgoPromise.try(() => {\n\n                if (!CONFIG.ALLOWED_POST_MESSAGE_METHODS[strategyName]) {\n                    throw new Error(`Strategy disallowed: ${ strategyName }`);\n                }\n\n                return SEND_MESSAGE_STRATEGIES[strategyName](win, serializedMessage, domain);\n\n            }).then(() => {\n                messages.push(`${ strategyName }: success`);\n                return true;\n            }, err => {\n                messages.push(`${ strategyName }: ${ stringifyError(err) }\\n`);\n                return false;\n            });\n\n        }).then(results => {\n\n            let success = results.some(Boolean);\n            let status = `${ message.type } ${ message.name } ${ success ? 'success' : 'error' }:\\n  - ${ messages.join('\\n  - ') }\\n`;\n\n            if (!success) {\n                throw new Error(status);\n            }\n        });\n    });\n}\n","/* @flow */\n\nimport { type ZalgoPromise } from 'zalgo-promise/src';\nimport { matchDomain, type CrossDomainWindowType, type DomainMatcher } from 'cross-domain-utils/src';\nimport { isRegex, getOrSet } from 'belter/src';\n\nimport { global, globalStore, windowStore } from '../global';\nimport { WILDCARD } from '../conf';\n\nlet responseListeners = globalStore('responseListeners');\nlet requestListeners = windowStore('requestListeners');\nlet erroredResponseListeners = globalStore('erroredResponseListeners');\n\nexport function resetListeners() {\n    responseListeners.reset();\n    erroredResponseListeners.reset();\n}\n\nglobal.WINDOW_WILDCARD = global.WINDOW_WILDCARD || new (function WindowWildcard() { /* pass */ })();\n\nconst __DOMAIN_REGEX__ = '__domain_regex__';\n\nexport type RequestListenerType = {\n    handler : ({ source : CrossDomainWindowType, origin : string, data : mixed }) => (mixed | ZalgoPromise<mixed>),\n    handleError : (err : mixed) => void,\n    window : ?CrossDomainWindowType,\n    name : string,\n    domain : DomainMatcher\n};\n\nexport type ResponseListenerType = {\n    name : string,\n    window : CrossDomainWindowType,\n    domain : DomainMatcher,\n    respond : (err : ?mixed, result : ?mixed) => void,\n    ack? : ?boolean\n};\n\nexport function addResponseListener(hash : string, listener : ResponseListenerType) {\n    responseListeners.set(hash, listener);\n}\n\nexport function getResponseListener(hash : string) : ?ResponseListenerType {\n    return responseListeners.get(hash);\n}\n\nexport function deleteResponseListener(hash : string) {\n    responseListeners.del(hash);\n}\n\nexport function markResponseListenerErrored(hash : string) {\n    erroredResponseListeners.set(hash, true);\n}\n\nexport function isResponseListenerErrored(hash : string) : boolean {\n    return erroredResponseListeners.has(hash);\n}\n\nexport function getRequestListener({ name, win, domain } : { name : string, win : ?CrossDomainWindowType, domain : ?(string | RegExp) }) : ?RequestListenerType {\n\n    if (win === WILDCARD) {\n        win = null;\n    }\n\n    if (domain === WILDCARD) {\n        domain = null;\n    }\n\n    if (!name) {\n        throw new Error(`Name required to get request listener`);\n    }\n\n    for (let winQualifier of [ win, global.WINDOW_WILDCARD ]) {\n        if (!winQualifier) {\n            continue;\n        }\n\n        let nameListeners = requestListeners.get(winQualifier);\n\n        if (!nameListeners) {\n            continue;\n        }\n\n        let domainListeners = nameListeners[name];\n\n        if (!domainListeners) {\n            continue;\n        }\n\n        if (domain && typeof domain === 'string') {\n            if (domainListeners[domain]) {\n                return domainListeners[domain];\n            }\n\n            if (domainListeners[__DOMAIN_REGEX__]) {\n                for (let { regex, listener } of domainListeners[__DOMAIN_REGEX__]) {\n                    if (matchDomain(regex, domain)) {\n                        return listener;\n                    }\n                }\n            }\n        }\n\n        if (domainListeners[WILDCARD]) {\n            return domainListeners[WILDCARD];\n        }\n    }\n}\n\nexport function addRequestListener({ name, win, domain } : { name : string, win : ?CrossDomainWindowType, domain : ?DomainMatcher }, listener : RequestListenerType) : { cancel : () => void } {\n\n    if (!name || typeof name !== 'string') {\n        throw new Error(`Name required to add request listener`);\n    }\n\n    if (Array.isArray(win)) {\n        let listenersCollection = [];\n\n        for (let item of win) {\n            listenersCollection.push(addRequestListener({ name, domain, win: item }, listener));\n        }\n\n        return {\n            cancel() {\n                for (let cancelListener of listenersCollection) {\n                    cancelListener.cancel();\n                }\n            }\n        };\n    }\n\n    if (Array.isArray(domain)) {\n        let listenersCollection = [];\n\n        for (let item of domain) {\n            listenersCollection.push(addRequestListener({ name, win, domain: item }, listener));\n        }\n\n        return {\n            cancel() {\n                for (let cancelListener of listenersCollection) {\n                    cancelListener.cancel();\n                }\n            }\n        };\n    }\n\n    let existingListener = getRequestListener({ name, win, domain });\n\n    if (!win || win === WILDCARD) {\n        win = global.WINDOW_WILDCARD;\n    }\n\n    domain = domain || WILDCARD;\n\n    if (existingListener) {\n        if (win && domain) {\n            throw new Error(`Request listener already exists for ${ name } on domain ${ domain.toString() } for ${ win === global.WINDOW_WILDCARD ? 'wildcard' : 'specified' } window`);\n        } else if (win) {\n            throw new Error(`Request listener already exists for ${ name } for ${ win === global.WINDOW_WILDCARD ? 'wildcard' : 'specified' } window`);\n        } else if (domain) {\n            throw new Error(`Request listener already exists for ${ name } on domain ${ domain.toString() }`);\n        } else {\n            throw new Error(`Request listener already exists for ${ name }`);\n        }\n    }\n\n    let nameListeners = requestListeners.getOrSet(win, () => ({}));\n    // $FlowFixMe\n    let domainListeners = getOrSet(nameListeners, name, () => ({}));\n\n    let strDomain = domain.toString();\n\n    let regexListeners;\n    let regexListener;\n\n    if (isRegex(domain)) {\n        regexListeners = getOrSet(domainListeners, __DOMAIN_REGEX__, () => []);\n        regexListener = { regex: domain, listener };\n        regexListeners.push(regexListener);\n    } else {\n        domainListeners[strDomain] = listener;\n    }\n\n    return {\n        cancel() {\n            delete domainListeners[strDomain];\n\n            if (regexListener) {\n                regexListeners.splice(regexListeners.indexOf(regexListener, 1));\n\n                if (!regexListeners.length) {\n                    delete domainListeners[__DOMAIN_REGEX__];\n                }\n            }\n\n            if (!Object.keys(domainListeners).length) {\n                // $FlowFixMe\n                delete nameListeners[name];\n            }\n\n            // $FlowFixMe\n            if (win && !Object.keys(nameListeners).length) {\n                requestListeners.del(win);\n            }\n        }\n    };\n}\n","/* @flow */\n\nimport { ZalgoPromise } from 'zalgo-promise/src';\nimport { isWindowClosed, matchDomain, stringifyDomainPattern, type CrossDomainWindowType } from 'cross-domain-utils/src';\nimport { noop } from 'belter/src';\n\nimport { MESSAGE_TYPE, MESSAGE_ACK } from '../../conf';\nimport { sendMessage } from '../send';\nimport { getRequestListener, getResponseListener, deleteResponseListener, isResponseListenerErrored } from '../listeners';\nimport type { RequestMessage, AckResponseMessage, SuccessResponseMessage, ErrorResponseMessage } from '../types';\n\nexport let RECEIVE_MESSAGE_TYPES = {\n\n    [ MESSAGE_TYPE.REQUEST ](source : CrossDomainWindowType, origin : string, message : RequestMessage) : ZalgoPromise<void> {\n\n        let options = getRequestListener({ name: message.name, win: source, domain: origin });\n\n        function sendResponse(type : $Values<typeof MESSAGE_TYPE>, data = {}) : ZalgoPromise<void> {\n\n            if (message.fireAndForget || isWindowClosed(source)) {\n                return ZalgoPromise.resolve();\n            }\n\n            // $FlowFixMe\n            return sendMessage(source, origin, {\n                type,\n                hash:   message.hash,\n                name:   message.name,\n                ...data\n            });\n        }\n\n        return ZalgoPromise.all([\n\n            sendResponse(MESSAGE_TYPE.ACK),\n\n            ZalgoPromise.try(() => {\n\n                if (!options) {\n                    throw new Error(`No handler found for post message: ${ message.name } from ${ origin } in ${ window.location.protocol }//${ window.location.host }${ window.location.pathname }`);\n                }\n\n                if (!matchDomain(options.domain, origin)) {\n                    throw new Error(`Request origin ${ origin } does not match domain ${ options.domain.toString() }`);\n                }\n\n                let data = message.data;\n\n                return options.handler({ source, origin, data });\n\n            }).then(data => {\n                return sendResponse(MESSAGE_TYPE.RESPONSE, {\n                    ack:  MESSAGE_ACK.SUCCESS,\n                    data\n                });\n\n            }, error => {\n                return sendResponse(MESSAGE_TYPE.RESPONSE, {\n                    ack:  MESSAGE_ACK.ERROR,\n                    error\n                });\n            })\n\n        ]).then(noop).catch(err => {\n            if (options && options.handleError) {\n                return options.handleError(err);\n            } else {\n                throw err;\n            }\n        });\n    },\n\n    [ MESSAGE_TYPE.ACK ](source : CrossDomainWindowType, origin : string, message : AckResponseMessage) {\n\n        if (isResponseListenerErrored(message.hash)) {\n            return;\n        }\n\n        let options = getResponseListener(message.hash);\n\n        if (!options) {\n            throw new Error(`No handler found for post message ack for message: ${ message.name } from ${ origin } in ${ window.location.protocol }//${ window.location.host }${ window.location.pathname }`);\n        }\n\n        if (!matchDomain(options.domain, origin)) {\n            throw new Error(`Ack origin ${ origin } does not match domain ${ options.domain.toString() }`);\n        }\n\n        options.ack = true;\n    },\n\n    [ MESSAGE_TYPE.RESPONSE ](source : CrossDomainWindowType, origin : string, message : SuccessResponseMessage | ErrorResponseMessage) : void | ZalgoPromise<void> {\n\n        if (isResponseListenerErrored(message.hash)) {\n            return;\n        }\n\n        let options = getResponseListener(message.hash);\n\n        if (!options) {\n            throw new Error(`No handler found for post message response for message: ${ message.name } from ${ origin } in ${ window.location.protocol }//${ window.location.host }${ window.location.pathname }`);\n        }\n\n        if (!matchDomain(options.domain, origin)) {\n            throw new Error(`Response origin ${ origin } does not match domain ${ stringifyDomainPattern(options.domain) }`);\n        }\n\n        deleteResponseListener(message.hash);\n\n        if (message.ack === MESSAGE_ACK.ERROR) {\n            return options.respond(message.error, null);\n        } else if (message.ack === MESSAGE_ACK.SUCCESS) {\n            let data = message.data;\n            return options.respond(null, { source, origin, data });\n        }\n    }\n};\n","/* @flow */\n\nimport { isWindowClosed, type CrossDomainWindowType, getDomain, isSameTopWindow } from 'cross-domain-utils/src';\nimport { addEventListener, noop } from 'belter/src';\n\nimport { MESSAGE_NAME, WINDOW_PROP, MESSAGE_TYPE } from '../../conf';\nimport { markWindowKnown, needsGlobalMessagingForBrowser } from '../../lib';\nimport { deserializeMessage } from '../../serialize';\nimport { global, globalStore } from '../../global';\n\nimport { RECEIVE_MESSAGE_TYPES } from './types';\n\nlet receivedMessages = globalStore('receivedMessages');\n\ntype MessageEvent = {\n    source : CrossDomainWindowType,\n    origin : string,\n    data : string\n};\n\nfunction parseMessage(message : string, source : CrossDomainWindowType, origin : string) : ?Object {\n\n    let parsedMessage;\n\n    try {\n        parsedMessage = deserializeMessage(source, origin, message);\n    } catch (err) {\n        return;\n    }\n\n    if (!parsedMessage) {\n        return;\n    }\n\n    if (typeof parsedMessage !== 'object' || parsedMessage === null) {\n        return;\n    }\n\n    parsedMessage = parsedMessage[WINDOW_PROP.POSTROBOT];\n\n    if (!parsedMessage || typeof parsedMessage !== 'object' || parsedMessage === null) {\n        return;\n    }\n\n    if (!parsedMessage.type || typeof parsedMessage.type !== 'string') {\n        return;\n    }\n\n    if (!RECEIVE_MESSAGE_TYPES[parsedMessage.type]) {\n        return;\n    }\n\n    return parsedMessage;\n}\n\n\nexport function receiveMessage(event : MessageEvent) {\n\n    if (!window || window.closed) {\n        throw new Error(`Message recieved in closed window`);\n    }\n\n    try {\n        if (!event.source) {\n            return;\n        }\n    } catch (err) {\n        return;\n    }\n\n    let { source, origin, data } = event;\n\n    if (__TEST__) {\n        // $FlowFixMe\n        origin = getDomain(source);\n    }\n\n    let message = parseMessage(data, source, origin);\n\n    if (!message) {\n        return;\n    }\n\n    markWindowKnown(source);\n\n    if (receivedMessages.has(message.id)) {\n        return;\n    }\n\n    receivedMessages.set(message.id, true);\n\n    if (__DEBUG__) {\n        let level;\n\n        if (Object.keys(MESSAGE_NAME).map(key => MESSAGE_NAME[key]).indexOf(message.name) !== -1 || message.type === MESSAGE_TYPE.ACK) {\n            level = 'debug';\n        } else if (message.ack === 'error') {\n            level = 'error';\n        } else {\n            level = 'info';\n        }\n\n        // eslint-disable-next-line no-console\n        if (typeof console !== 'undefined' && typeof console[level] === 'function') {\n            // eslint-disable-next-line no-console\n            console[level]('postrobot_receive', message.type.replace(/^postrobot_message_/, ''), '::', message.name, '::', origin, '\\n\\n', message);\n        }\n    }\n\n    if (isWindowClosed(source) && !message.fireAndForget) {\n        return;\n    }\n\n    RECEIVE_MESSAGE_TYPES[message.type](source, origin, message);\n}\n\nexport function messageListener(event : { source : CrossDomainWindowType, origin : string, data : string, sourceElement : CrossDomainWindowType, originalEvent? : { origin : string } }) {\n\n    try {\n        noop(event.source);\n    } catch (err) {\n        return;\n    }\n\n    // $FlowFixMe\n    let messageEvent : MessageEvent = {\n        source: event.source || event.sourceElement,\n        origin: event.origin || (event.originalEvent && event.originalEvent.origin),\n        data:   event.data\n    };\n\n    if (!messageEvent.source) {\n        return;\n    }\n\n    if (!messageEvent.origin) {\n        throw new Error(`Post message did not have origin domain`);\n    }\n\n    if (__TEST__) {\n        if (needsGlobalMessagingForBrowser() && isSameTopWindow(messageEvent.source, window) === false) {\n            return;\n        }\n    }\n\n    receiveMessage(messageEvent);\n}\n\nexport function listenForMessages() {\n    // $FlowFixMe\n    addEventListener(window, 'message', messageListener);\n}\n\nglobal.receiveMessage = receiveMessage;\n","/* @flow */\n\nimport { ZalgoPromise } from 'zalgo-promise/src';\nimport { getAncestor, isAncestor, isWindowClosed, getDomain, matchDomain, type CrossDomainWindowType, type DomainMatcher } from 'cross-domain-utils/src';\nimport { uniqueID, isRegex } from 'belter/src';\n\n\nimport { CONFIG, MESSAGE_TYPE, WILDCARD } from '../conf';\nimport { sendMessage, addResponseListener, deleteResponseListener, markResponseListenerErrored, type ResponseListenerType } from '../drivers';\nimport { awaitWindowHello, sayHello, isWindowKnown } from '../lib';\nimport { global, windowStore } from '../global';\n\nexport let requestPromises = windowStore('requestPromises');\n\ntype WindowResolverType = CrossDomainWindowType | string | HTMLIFrameElement;\n\ntype RequestOptionsType = {\n    window? : ?WindowResolverType,\n    domain? : ?DomainMatcher,\n    name? : ?string,\n    data? : ?Object,\n    fireAndForget? : ?boolean,\n    timeout? : ?number\n};\n\ntype ResponseMessageEvent = {\n    source : CrossDomainWindowType,\n    origin : string,\n    data : Object\n};\n\nexport function request(options : RequestOptionsType) : ZalgoPromise<ResponseMessageEvent> {\n\n    let prom = ZalgoPromise.try(() => {\n\n        if (!options.name) {\n            throw new Error('Expected options.name');\n        }\n\n        let name = options.name;\n        let targetWindow : ?CrossDomainWindowType;\n        let domain : DomainMatcher;\n\n        if (typeof options.window === 'string') {\n            let el = document.getElementById(options.window);\n\n            if (!el) {\n                throw new Error(`Expected options.window ${ Object.prototype.toString.call(options.window) } to be a valid element id`);\n            }\n\n            if (el.tagName.toLowerCase() !== 'iframe') {\n                throw new Error(`Expected options.window ${ Object.prototype.toString.call(options.window) } to be an iframe`);\n            }\n\n            // $FlowFixMe\n            if (!el.contentWindow) {\n                throw new Error('Iframe must have contentWindow.  Make sure it has a src attribute and is in the DOM.');\n            }\n\n            // $FlowFixMe\n            targetWindow = el.contentWindow;\n\n        } else if (options.window instanceof HTMLIFrameElement) {\n\n            if (options.window.tagName.toLowerCase() !== 'iframe') {\n                throw new Error(`Expected options.window ${ Object.prototype.toString.call(options.window) } to be an iframe`);\n            }\n\n            if (options.window && !options.window.contentWindow) {\n                throw new Error('Iframe must have contentWindow.  Make sure it has a src attribute and is in the DOM.');\n            }\n\n            if (options.window && options.window.contentWindow) {\n                // $FlowFixMe\n                targetWindow = options.window.contentWindow;\n            }\n        } else {\n            targetWindow = options.window;\n        }\n\n        if (!targetWindow) {\n            throw new Error('Expected options.window to be a window object, iframe, or iframe element id.');\n        }\n\n        const win = targetWindow;\n\n        domain = options.domain || WILDCARD;\n\n        let hash = `${ options.name }_${ uniqueID() }`;\n\n        if (isWindowClosed(win)) {\n            throw new Error('Target window is closed');\n        }\n\n        let hasResult = false;\n\n        let reqPromises = requestPromises.getOrSet(win, () => []);\n\n        let requestPromise = ZalgoPromise.try(() => {\n\n            if (isAncestor(window, win)) {\n                return awaitWindowHello(win, options.timeout || CONFIG.CHILD_WINDOW_TIMEOUT);\n            }\n\n        }).then(({ domain: origin } = {}) => {\n\n            if (isRegex(domain) && !origin) {\n                return sayHello(win);\n            }\n\n        }).then(({ domain: origin } = {}) => {\n\n            if (isRegex(domain)) {\n                if (!matchDomain(domain, origin)) {\n                    throw new Error(`Remote window domain ${ origin } does not match regex: ${ domain.toString() }`);\n                }\n\n                domain = origin;\n            }\n\n            if (typeof domain !== 'string' && !Array.isArray(domain)) {\n                throw new TypeError(`Expected domain to be a string or array`);\n            }\n\n            const actualDomain = domain;\n\n            return new ZalgoPromise((resolve, reject) => {\n\n                let responseListener : ResponseListenerType;\n\n                if (!options.fireAndForget) {\n                    responseListener = {\n                        name,\n                        window: win,\n                        domain: actualDomain,\n                        respond(err, result) {\n                            if (!err) {\n                                hasResult = true;\n                                reqPromises.splice(reqPromises.indexOf(requestPromise, 1));\n                            }\n\n                            if (err) {\n                                reject(err);\n                            } else {\n                                resolve(result);\n                            }\n                        }\n                    };\n\n                    addResponseListener(hash, responseListener);\n                }\n\n                sendMessage(win, actualDomain, {\n                    type:          MESSAGE_TYPE.REQUEST,\n                    hash,\n                    name,\n                    data:          options.data,\n                    fireAndForget: Boolean(options.fireAndForget)\n                }).catch(reject);\n\n                if (options.fireAndForget) {\n                    return resolve();\n                }\n\n                let totalAckTimeout = isWindowKnown(win) ? CONFIG.ACK_TIMEOUT_KNOWN : CONFIG.ACK_TIMEOUT;\n                let totalResTimeout = options.timeout || CONFIG.RES_TIMEOUT;\n\n                let ackTimeout = totalAckTimeout;\n                let resTimeout = totalResTimeout;\n\n                let cycleTime = 100;\n\n                let cycle = () => {\n\n                    if (hasResult) {\n                        return;\n                    }\n\n                    if (isWindowClosed(win)) {\n\n                        if (!responseListener.ack) {\n                            return reject(new Error(`Window closed for ${ name } before ack`));\n                        }\n\n                        return reject(new Error(`Window closed for ${ name } before response`));\n                    }\n\n                    ackTimeout = Math.max(ackTimeout - cycleTime, 0);\n                    if (resTimeout !== -1) {\n                        resTimeout = Math.max(resTimeout - cycleTime, 0);\n                    }\n\n                    let hasAck = responseListener.ack;\n\n                    if (hasAck) {\n\n                        if (resTimeout === -1) {\n                            return;\n                        }\n\n                        cycleTime = Math.min(resTimeout, 2000);\n\n                    } else if (ackTimeout === 0) {\n                        return reject(new Error(`No ack for postMessage ${ name } in ${ getDomain() } in ${ totalAckTimeout }ms`));\n\n                    } else if (resTimeout === 0) {\n                        return reject(new Error(`No response for postMessage ${ name } in ${ getDomain() } in ${ totalResTimeout }ms`));\n                    }\n\n                    setTimeout(cycle, cycleTime);\n                };\n\n                setTimeout(cycle, cycleTime);\n            });\n        });\n\n        requestPromise.catch(() => {\n            markResponseListenerErrored(hash);\n            deleteResponseListener(hash);\n        });\n\n        reqPromises.push(requestPromise);\n\n        return requestPromise;\n    });\n\n    return prom;\n}\n\nexport function send(window : WindowResolverType, name : string, data : ?Object, options : ?RequestOptionsType) : ZalgoPromise<ResponseMessageEvent> {\n\n    options = options || {};\n    options.window = window;\n    options.name = name;\n    options.data = data;\n\n    return request(options);\n}\n\nexport function sendToParent(name : string, data : ?Object, options : ?RequestOptionsType) : ZalgoPromise<ResponseMessageEvent> {\n\n    let win = getAncestor();\n\n    if (!win) {\n        return new ZalgoPromise((resolve, reject) => reject(new Error('Window does not have a parent')));\n    }\n\n    return send(win, name, data, options);\n}\n\nexport function client(options : RequestOptionsType = {}) : { send : (string, ?Object) => ZalgoPromise<ResponseMessageEvent> } {\n\n    if (!options.window) {\n        throw new Error(`Expected options.window`);\n    }\n\n    const win = options.window;\n\n    return {\n        send(name : string, data : ?Object) : ZalgoPromise<ResponseMessageEvent> {\n            return send(win, name, data, options);\n        }\n    };\n}\n\nglobal.send = send;\n","/* @flow */\n\nimport { isWindowClosed, type CrossDomainWindowType, type DomainMatcher } from 'cross-domain-utils/src';\nimport { ZalgoPromise } from 'zalgo-promise/src';\nimport { once as onceFunction, safeInterval } from 'belter/src';\n\nimport { addRequestListener, type RequestListenerType } from '../drivers';\nimport { WILDCARD } from '../conf';\nimport { global } from '../global';\n\ntype ErrorHandlerType = (err : mixed) => void;\ntype HandlerType = ({ source : CrossDomainWindowType, origin : string, data : mixed }) => (void | mixed | ZalgoPromise<mixed>);\n\ntype ServerOptionsType = {\n    handler? : ?HandlerType,\n    errorHandler? : ?ErrorHandlerType,\n    window? : CrossDomainWindowType,\n    name? : ?string,\n    domain? : ?DomainMatcher,\n    once? : ?boolean,\n    errorOnClose? : ?boolean\n};\n\nexport function listen(options : ServerOptionsType) : { cancel : () => void } {\n\n    if (!options.name) {\n        throw new Error('Expected options.name');\n    }\n\n    if (!options.handler) {\n        throw new Error('Expected options.handler');\n    }\n\n    const name = options.name;\n    const win = options.window;\n    const domain = options.domain;\n\n    let listenerOptions : RequestListenerType = {\n        handler:     options.handler,\n        handleError: options.errorHandler || (err => {\n            throw err;\n        }),\n        window: win,\n        domain: domain || WILDCARD,\n        name\n    };\n\n    let requestListener = addRequestListener({ name, win, domain }, listenerOptions);\n\n    if (options.once) {\n        let handler = listenerOptions.handler;\n        listenerOptions.handler = onceFunction(function listenOnce() : mixed | ZalgoPromise<mixed> {\n            requestListener.cancel();\n            return handler.apply(this, arguments);\n        });\n    }\n\n    if (listenerOptions.window && options.errorOnClose) {\n        let interval = safeInterval(() => {\n            if (win && typeof win === 'object' && isWindowClosed(win)) {\n                interval.cancel();\n                listenerOptions.handleError(new Error('Post message target window is closed'));\n            }\n        }, 50);\n    }\n\n    return {\n        cancel() {\n            requestListener.cancel();\n        }\n    };\n}\n\nexport function on(name : string, options : ServerOptionsType | HandlerType, handler : ?HandlerType) : { cancel : () => void } {\n\n    if (typeof options === 'function') {\n        handler = options;\n        options = {};\n    }\n\n    options = options || {};\n\n    options.name = name;\n    options.handler = handler || options.handler;\n\n    return listen(options);\n}\n\nexport function once(name : string, options : ?(ServerOptionsType | HandlerType) = {}, handler : ?HandlerType) : ZalgoPromise<{ source : mixed, origin : string, data : Object }> {\n\n    if (typeof options === 'function') {\n        handler = options;\n        options = {};\n    }\n\n    options = options || {};\n    handler = handler || options.handler;\n    let errorHandler = options.errorHandler;\n\n    let promise = new ZalgoPromise((resolve, reject) => {\n\n        options = options || {};\n\n        options.name = name;\n        options.once = true;\n\n        options.handler = (event) => {\n            resolve(event);\n            if (handler) {\n                return handler(event);\n            }\n        };\n\n        options.errorHandler = (err) => {\n            reject(err);\n            if (errorHandler) {\n                return errorHandler(err);\n            }\n        };\n    });\n\n    let onceListener = listen(options);\n    promise.cancel = onceListener.cancel;\n\n    return promise;\n}\n\nexport function listener(options : ServerOptionsType = {}) : { on : (name : string, handler : HandlerType) => { cancel : () => void } } {\n\n    return {\n        on(name : string, handler : HandlerType) : { cancel : () => void } {\n            return on(name, options, handler);\n        }\n    };\n}\n\nglobal.on = on;\n","/* @flow */\n\nimport { WINDOW_PROP } from '../conf';\nimport { messageListener } from '../drivers';\n\nexport { CONFIG } from '../conf';\n\nexport function disable() {\n    delete window[WINDOW_PROP.POSTROBOT];\n    window.removeEventListener('message', messageListener);\n}\n","/* @flow */\n\nimport { getAncestor } from 'cross-domain-utils/src';\n\nexport * from './client';\nexport * from './server';\nexport * from './config';\n\nexport let parent = getAncestor();\n","/* @flow */\n\nimport { type CrossDomainWindowType } from 'cross-domain-utils/src';\nimport { noop } from 'belter/src';\n\nimport { requestPromises } from './public';\n\nexport function cleanUpWindow(win : CrossDomainWindowType) {\n    for (let promise of requestPromises.get(win, [])) {\n        promise.reject(new Error(`Window cleaned up before response`)).catch(noop);\n    }\n}\n","/* @flow */\n\nimport { initHello } from './lib';\nimport { listenForMessages } from './drivers';\nimport { global } from './global';\n\nexport * from './public';\nexport { markWindowKnown } from './lib';\nexport { serializeMessage, deserializeMessage, ProxyWindow } from './serialize';\nexport { cleanUpWindow } from './clean';\nexport { ZalgoPromise as Promise } from 'zalgo-promise/src';\nexport let bridge = __POST_ROBOT__.__IE_POPUP_SUPPORT__ ? require('./bridge/interface') : null;\n\nif (!global.initialized) {\n    global.initialized = true;\n\n    listenForMessages();\n\n    if (bridge) {\n        bridge.openTunnelToOpener();\n    }\n\n    initHello();\n}\n","/* @flow */\n\n// eslint-disable-next-line import/no-namespace\nimport * as INTERFACE from './interface';\n\nexport * from './interface';\nexport default INTERFACE;\n","/* @flow */\n\nimport { WINDOW_TYPE } from 'cross-domain-utils/src';\n\nexport const ZOID = `zoid`;\n\nexport const __ZOID__ = `__${ ZOID }__`;\n\nexport const POST_MESSAGE = {\n    DELEGATE:       `${ ZOID }_delegate`,\n    ALLOW_DELEGATE: `${ ZOID }_allow_delegate`\n};\n\nexport const PROP_TYPE = {\n    STRING:   `string`,\n    OBJECT:   `object`,\n    FUNCTION: `function`,\n    BOOLEAN:  `boolean`,\n    NUMBER:   `number`,\n    ARRAY:    `array`\n};\n\nexport const INITIAL_PROPS = {\n    RAW: 'raw',\n    UID: 'uid'\n};\n\nexport const WINDOW_REFERENCES = {\n    OPENER: `opener`,\n    TOP:    `top`,\n    PARENT: `parent`,\n    GLOBAL: `global`\n};\n\nexport const PROP_SERIALIZATION = {\n    JSON:   ('json' : 'json'),\n    DOTIFY: ('dotify' : 'dotify'),\n    BASE64: ('base64' : 'base64')\n};\n\nexport const CONTEXT = WINDOW_TYPE;\n\nexport const CLASS = {\n    OUTLET:            `${ ZOID }-outlet`,\n    COMPONENT_FRAME:   `${ ZOID }-component-frame`,\n    PRERENDER_FRAME:   `${ ZOID }-prerender-frame`,\n    VISIBLE:           `${ ZOID }-visible`,\n    INVISIBLE:         `${ ZOID }-invisible`\n};\n\nexport const WILDCARD = '*';\n\nexport const DEFAULT_DIMENSIONS = {\n    WIDTH:  '300px',\n    HEIGHT: '150px'\n};\n","/* @flow */\n\nimport { isSameDomain, type CrossDomainWindowType } from 'cross-domain-utils/src';\n\nimport { __ZOID__ } from '../constants';\n\nexport function globalFor(win : CrossDomainWindowType) : ?Object {\n\n    if (!isSameDomain(win)) {\n        return;\n    }\n\n    if (!win[__ZOID__]) {\n        win[__ZOID__] = {};\n    }\n\n    return win[__ZOID__];\n}\n\nexport function localGlobal() : Object {\n    const global = globalFor(window);\n\n    if (!global) {\n        throw new Error(`Could not get local global`);\n    }\n\n    return global;\n}\n\nexport const global = localGlobal();\n","/* @flow */\n\nimport { memoize, stringifyError, base64encode, base64decode } from 'belter/src';\n\nimport { ZOID } from '../constants';\nimport type { ChildPayload } from '../parent';\n\nexport function buildChildWindowName(name : string, childPayload : ChildPayload) : string {\n    return `__${ ZOID }__${ name }__${ base64encode(JSON.stringify(childPayload)) }__`;\n}\n\nexport const parseChildWindowName = memoize(() : ChildPayload => {\n    if (!window.name) {\n        throw new Error(`No window name`);\n    }\n\n    const [ , zoidcomp, name, encodedPayload ] = window.name.split('__');\n\n    if (zoidcomp !== ZOID) {\n        throw new Error(`Window not rendered by zoid - got ${ zoidcomp }`);\n    }\n\n    if (!name) {\n        throw new Error(`Expected component name`);\n    }\n\n    if (!encodedPayload) {\n        throw new Error(`Expected encoded payload`);\n    }\n\n    try {\n        return JSON.parse(base64decode(encodedPayload));\n    } catch (err) {\n        throw new Error(`Can not decode window name payload: ${ encodedPayload }: ${ stringifyError(err) }`);\n    }\n});\n\nexport const isZoidComponentWindow = memoize(() => {\n    try {\n        parseChildWindowName();\n    } catch (err) {\n        return false;\n    }\n\n    return true;\n});\n","/* @flow */\n\nimport { getDomain, isSameDomain, type CrossDomainWindowType } from 'cross-domain-utils/src';\n\nimport type { Component } from '../component';\nimport type { PropsType, MixedPropDefinitionType } from '../component/props';\n\nimport type { ChildHelpers } from './index';\n\nexport function normalizeChildProp<T, P>(component : Component<P>, props : (PropsType<P>), key : string, value : T, helpers : ChildHelpers<P>) : ?T  {\n\n    // $FlowFixMe\n    const prop : MixedPropDefinitionType<P> = component.getPropDefinition(key);\n\n    if (!prop) {\n        return value;\n    }\n\n    const { focus, close, resize, onError, onPropsChange } = helpers;\n\n    if (typeof prop.childDecorate === 'function') {\n        return prop.childDecorate({ value, focus, close, resize, onError, onPropsChange });\n    }\n\n    return value;\n}\n\n// eslint-disable-next-line max-params\nexport function normalizeChildProps<P>(parentComponentWindow : CrossDomainWindowType, component : Component<P>, props : (PropsType<P>), origin : string, helpers : ChildHelpers<P>, isUpdate : boolean = false) : (PropsType<P>) {\n\n    const result = {};\n\n    // $FlowFixMe\n    for (const key of Object.keys(props)) {\n        const prop = component.getPropDefinition(key);\n\n        if (prop && prop.sameDomain && (origin !== getDomain(window) || !isSameDomain(parentComponentWindow))) {\n            continue;\n        }\n\n        const value = normalizeChildProp(component, props, key, props[key], helpers);\n\n        result[key] = value;\n        if (prop && prop.alias && !result[prop.alias]) {\n            result[prop.alias] = value;\n        }\n    }\n\n    if (!isUpdate) {\n        for (const key of component.getPropNames()) {\n            if (!props.hasOwnProperty(key)) {\n                result[key] = normalizeChildProp(component, props, key, props[key], helpers);\n            }\n        }\n    }\n\n    // $FlowFixMe\n    return result;\n}\n","/* @flow */\n/* eslint max-lines: 0 */\n\nimport { isSameDomain, matchDomain, getDomain, getOpener, getTop, getParent,\n    getNthParentFromTop, getAncestor, getAllFramesInWindow, type CrossDomainWindowType, onCloseWindow } from 'cross-domain-utils/src';\nimport { markWindowKnown, deserializeMessage } from 'post-robot/src';\nimport { ZalgoPromise } from 'zalgo-promise/src';\nimport { extend, noop, memoized, waitForDocumentBody, onResize, getElementSafe } from 'belter/src';\n\nimport { parseChildWindowName, globalFor } from '../lib';\nimport { CONTEXT, INITIAL_PROPS, WINDOW_REFERENCES } from '../constants';\nimport type { Component } from '../component';\nimport type { PropsType } from '../component/props';\nimport type { WindowRef, PropRef, ParentExportsType } from '../parent';\n\nimport { normalizeChildProps } from './props';\n\nexport type ChildExportsType<P> = {|\n    updateProps : (props : (PropsType<P>)) => ZalgoPromise<void>,\n    close : () => ZalgoPromise<void>\n|};\n\nexport type ChildHelpers<P> = {|\n    close : () => ZalgoPromise<void>,\n    focus : () => ZalgoPromise<void>,\n    resize : ({ width : ?number, height : ?number }) => ZalgoPromise<void>,\n    onError : (mixed) => ZalgoPromise<void>,\n    onPropsChange : ((PropsType<P>) => void) => void\n|};\n\n/*  Child Component\n    ---------------\n\n    This is the portion of code which runs inside the frame or popup window containing the component's implementation.\n\n    When the component author calls myComponent.attach(), it creates a new instance of ChildComponent, which is then\n    responsible for managing the state and messaging back up to the parent, and providing props for the component to\n    utilize.\n*/\n\nexport class ChildComponent<P> {\n\n    component : Component<P>\n    props : PropsType<P>\n    context : string\n    parent : ParentExportsType<P>\n    parentComponentWindow : CrossDomainWindowType\n\n    onPropHandlers : Array<(PropsType<P>) => void> // eslint-disable-line flowtype/no-mutable-array\n    autoResize : { width : boolean, height : boolean, element? : string }\n\n    constructor(component : Component<P>) {\n        ZalgoPromise.try(() => {\n            this.component = component;\n            this.onPropHandlers = [];\n            \n            const { parent, domain, exports, context, props } = parseChildWindowName();\n\n            this.context = context;\n            this.parentComponentWindow = this.getWindowByRef(parent);\n            this.parent = deserializeMessage(this.parentComponentWindow, domain, exports);\n\n            this.checkParentDomain(domain);\n\n            const initialProps = this.getPropsByRef(this.parentComponentWindow, domain, props);\n            this.setProps(initialProps, domain);\n            markWindowKnown(this.parentComponentWindow);\n            \n            this.watchForClose();\n\n            return this.parent.init(this.buildExports());\n\n        }).then(() => {\n            return this.watchForResize();\n\n        }).catch(err => {\n            this.onError(err);\n        });\n    }\n\n    getHelpers() : ChildHelpers<P> {\n        return {\n            focus:         () => this.focus(),\n            close:         () => this.close(),\n            resize:        ({ width, height }) => this.resize({ width, height }),\n            onError:       (err) => this.onError(err),\n            onPropsChange: (handler) => this.onPropsChange(handler)\n        };\n    }\n\n    checkParentDomain(domain : string) {\n        if (!matchDomain(this.component.allowedParentDomains, domain)) {\n            throw new Error(`Can not be rendered by domain: ${ domain }`);\n        }\n    }\n\n    onPropsChange(handler : Function) {\n        this.onPropHandlers.push(handler);\n    }\n\n    getPropsByRef(parentComponentWindow : CrossDomainWindowType, domain : string, { type, value, uid } : PropRef) : (PropsType<P>) {\n        let props;\n\n        if (type === INITIAL_PROPS.RAW) {\n            props = value;\n        } else if (type === INITIAL_PROPS.UID) {\n\n            if (!isSameDomain(parentComponentWindow)) {\n                if (window.location.protocol === 'file:') {\n                    throw new Error(`Can not get props from file:// domain`);\n                }\n\n                throw new Error(`Parent component window is on a different domain - expected ${ getDomain() } - can not retrieve props`);\n            }\n\n            const global = globalFor(parentComponentWindow);\n\n            if (!global) {\n                throw new Error(`Can not find global for parent component - can not retrieve props`);\n            }\n\n            props = global.props[uid];\n        }\n\n        if (!props) {\n            throw new Error(`Initial props not found`);\n        }\n\n        return deserializeMessage(parentComponentWindow, domain, props);\n    }\n\n    getWindowByRef(ref : WindowRef) : CrossDomainWindowType {\n        const { type } = ref;\n        let result;\n    \n        if (type === WINDOW_REFERENCES.OPENER) {\n            result = getOpener(window);\n    \n        } else if (type === WINDOW_REFERENCES.TOP) {\n            result = getTop(window);\n    \n        } else if (type === WINDOW_REFERENCES.PARENT) {\n            // $FlowFixMe\n            const { distance } = ref;\n    \n            if (distance) {\n                result = getNthParentFromTop(window, distance);\n            } else {\n                result = getParent(window);\n            }\n        }\n    \n        if (type === WINDOW_REFERENCES.GLOBAL) {\n            // $FlowFixMe\n            const { uid } = ref;\n            const ancestor = getAncestor(window);\n    \n            if (ancestor) {\n                for (const frame of getAllFramesInWindow(ancestor)) {\n                    const global = globalFor(frame);\n    \n                    if (global && global.windows && global.windows[uid]) {\n                        result = global.windows[uid];\n                        break;\n                    }\n                }\n            }\n        }\n    \n        if (!result) {\n            throw new Error(`Unable to find ${ type } window`);\n        }\n    \n        return result;\n    }\n\n    getProps() : PropsType<P> {\n        // $FlowFixMe\n        this.props = this.props || {};\n        return this.props;\n    }\n\n\n    setProps(props : PropsType<P>, origin : string, isUpdate : boolean = false) {\n        const helpers = this.getHelpers();\n        const existingProps = this.getProps();\n        const normalizedProps = normalizeChildProps(this.parentComponentWindow, this.component, props, origin, helpers, isUpdate);\n\n        extend(existingProps, normalizedProps);\n\n        for (const handler of this.onPropHandlers) {\n            handler.call(this, existingProps);\n        }\n    }\n\n    watchForClose() {\n        window.addEventListener('beforeunload', () => {\n            return this.parent.checkClose.fireAndForget();\n        });\n\n        window.addEventListener('unload', () => {\n            return this.parent.checkClose.fireAndForget();\n        });\n\n        onCloseWindow(this.parentComponentWindow, () => {\n            this.destroy();\n        });\n    }\n\n    enableAutoResize({ width = false, height = true, element = 'body' } : { width : boolean, height : boolean, element : string } = {}) {\n        this.autoResize = { width, height, element };\n        this.watchForResize();\n    }\n\n    getAutoResize() : { width : boolean, height : boolean, element : ?HTMLElement } {\n        let { width = false, height = false, element = 'body' } = this.autoResize || this.component.autoResize || {};\n        element = getElementSafe(element);\n        return { width, height, element };\n    }\n\n    @memoized\n    watchForResize() : ?ZalgoPromise<void> {\n        return waitForDocumentBody().then(() => {\n            const { width, height, element } = this.getAutoResize();\n\n            if (!element) {\n                return;\n            }\n\n            if (!width && !height) {\n                return;\n            }\n    \n            if (this.context === CONTEXT.POPUP) {\n                return;\n            }\n\n            onResize(element, ({ width: newWidth, height: newHeight }) => {\n                this.resize({\n                    width:  width ? newWidth : undefined,\n                    height: height ? newHeight : undefined\n                });\n            }, { width, height });\n        });\n    }\n\n    buildExports() : ChildExportsType<P> {\n\n        const self = this;\n\n        return {\n            updateProps(props : (PropsType<P>)) : ZalgoPromise<void> {\n                return ZalgoPromise.try(() => self.setProps(props, this.origin, true));\n            },\n\n            close() : ZalgoPromise<void> {\n                return ZalgoPromise.try(() => self.destroy());\n            }\n        };\n    }\n\n    resize({ width, height } : { width : ?number, height : ?number }) : ZalgoPromise<void> {\n        return this.parent.resize.fireAndForget({ width, height });\n    }\n\n    close() : ZalgoPromise<void> {\n        return this.parent.close();\n    }\n    \n    destroy() : ZalgoPromise<void> {\n        return ZalgoPromise.try(() => {\n            window.close();\n        });\n    }\n\n    focus() : ZalgoPromise<void> {\n        return ZalgoPromise.try(() => {\n            window.focus();\n        });\n    }\n\n    onError(err : mixed) : ZalgoPromise<void> {\n        // eslint-disable-next-line promise/no-promise-in-callback\n        return ZalgoPromise.try(() => {\n            if (this.parent && this.parent.onError) {\n                return this.parent.onError(err);\n            }\n        }).catch(noop).then(() => {\n            throw err;\n        });\n    }\n}\n","/* @flow */\n\nimport { ZalgoPromise } from 'zalgo-promise/src';\nimport { cleanUpWindow, ProxyWindow } from 'post-robot/src';\nimport { type CrossDomainWindowType, type SameDomainWindowType, assertSameDomain, isSameDomain } from 'cross-domain-utils/src';\nimport { iframe, popup, toCSS,\n    destroyElement, normalizeDimension, watchElementForClose,\n    awaitFrameWindow, addClass, removeClass, uniqueID } from 'belter/src';\n\nimport { CONTEXT, CLASS } from '../constants';\n\n\nexport type ContextDriverType = {|\n\n    renderedIntoContainer : boolean,\n    callChildToClose : boolean,\n\n    open : () => ZalgoPromise<ProxyWindow>,\n    resize? : ({ width : ?number, height : ?number }) => void,\n\n    openPrerender : (CrossDomainWindowType) => ZalgoPromise<?SameDomainWindowType>,\n    switchPrerender? : () => void,\n\n    delegate : $ReadOnlyArray<string>\n|};\n\n/*  Render Drivers\n    --------------\n\n    There are various differences in how we treat:\n\n    - Opening frames and windows\n    - Rendering up to the parent\n    - Resizing\n    - etc.\n\n    based on the context we're rendering to.\n\n    These render drivers split this functionality out in a driver pattern, so our component code doesn't bunch up into a\n    series of if-popup-then-else-if-iframe code.\n*/\n\nexport const RENDER_DRIVERS : { [string] : ContextDriverType } = {};\n\n// Iframe context is rendered inline on the page, without any kind of parent template. It's the one context that is designed\n// to feel like a native element on the page.\n\nRENDER_DRIVERS[CONTEXT.IFRAME] = {\n\n    renderedIntoContainer: true,\n    callChildToClose:      false,\n\n    open() : ZalgoPromise<ProxyWindow> {\n\n        const frame = iframe({\n            attributes: {\n                title: this.component.name,\n                ...this.component.attributes.iframe\n            },\n            class: [\n                CLASS.COMPONENT_FRAME,\n                CLASS.INVISIBLE\n            ]\n        }, this.element);\n\n        this.clean.set('iframe', frame);\n\n        return awaitFrameWindow(frame).then(win => {\n            const detectClose = () => {\n                return this.close();\n            };\n\n            const iframeWatcher = watchElementForClose(frame, detectClose);\n            const elementWatcher = watchElementForClose(this.element, detectClose);\n\n            this.clean.register(() => {\n                iframeWatcher.cancel();\n                elementWatcher.cancel();\n                cleanUpWindow(win);\n                destroyElement(frame);\n            });\n\n            return ProxyWindow.toProxyWindow(win);\n        });\n    },\n\n    openPrerender() : ZalgoPromise<?SameDomainWindowType> {\n\n        const prerenderIframe = iframe({\n            attributes: {\n                name: `__zoid_prerender_frame__${ this.component.name }_${ uniqueID() }__`,\n                ...this.component.attributes.iframe\n            },\n            class: [\n                CLASS.PRERENDER_FRAME,\n                CLASS.VISIBLE\n            ]\n        }, this.element);\n\n        this.clean.set('prerenderIframe', prerenderIframe);\n\n        return awaitFrameWindow(prerenderIframe).then(prerenderFrameWindow => {\n            this.clean.register(() => destroyElement(prerenderIframe));\n            return assertSameDomain(prerenderFrameWindow);\n        });\n    },\n\n    switchPrerender() {\n        addClass(this.prerenderIframe, CLASS.INVISIBLE);\n        removeClass(this.prerenderIframe, CLASS.VISIBLE);\n\n        if (this.iframe) {\n            addClass(this.iframe, CLASS.VISIBLE);\n            removeClass(this.iframe, CLASS.INVISIBLE);\n        }\n\n        setTimeout(() => destroyElement(this.prerenderIframe), 1);\n    },\n\n    delegate: [\n        'renderContainer',\n        'prerender',\n        'resize',\n        'openPrerender',\n        'switchPrerender',\n        'open'\n    ],\n\n    resize({ width, height } : { width : ?number, height : ?number }) {\n\n        if (typeof width === 'number') {\n            this.element.style.width   = toCSS(width);\n        }\n\n        if (typeof height === 'number') {\n            this.element.style.height = toCSS(height);\n        }\n    }\n};\n\nif (__ZOID__.__POPUP_SUPPORT__) {\n    RENDER_DRIVERS[CONTEXT.POPUP] = {\n        \n        renderedIntoContainer: false,\n        callChildToClose:      true,\n\n        open() : ZalgoPromise<ProxyWindow> {\n            return ZalgoPromise.try(() => {\n                let { width, height } = this.component.dimensions;\n\n                width = normalizeDimension(width, window.outerWidth);\n                height = normalizeDimension(height, window.outerWidth);\n\n                const win = popup('', {\n                    width,\n                    height,\n                    ...this.component.attributes.popup\n                });\n\n                this.clean.register(() => {\n                    win.close();\n                    cleanUpWindow(win);\n                });\n\n                return ProxyWindow.toProxyWindow(win);\n            });\n        },\n\n        openPrerender(win : CrossDomainWindowType) : ZalgoPromise<?SameDomainWindowType> {\n            return ZalgoPromise.try(() => {\n                if (isSameDomain(win)) {\n                    return assertSameDomain(win);\n                }\n            });\n        },\n\n        delegate: [\n            'renderContainer'\n        ]\n    };\n}\n","/* @flow */\n/* eslint max-lines: 0 */\n\nimport { send, bridge, serializeMessage, ProxyWindow } from 'post-robot/src';\nimport { isSameDomain, matchDomain, getDomainFromUrl, isBlankDomain,\n    onCloseWindow, getDomain, type CrossDomainWindowType, getDistanceFromTop, isTop, normalizeMockUrl } from 'cross-domain-utils/src';\nimport { ZalgoPromise } from 'zalgo-promise/src';\nimport { addEventListener, uniqueID, elementReady, writeElementToWindow,\n    noop, onResize,\n    extend, extendUrl, getElement, memoized, appendChild, cleanup, type CleanupType,\n    once, stringifyError, type EventEmitterType, destroyElement, isDefined, createElement, getElementSafe } from 'belter/src';\n\nimport { POST_MESSAGE, CONTEXT, CLASS,\n    INITIAL_PROPS, WINDOW_REFERENCES } from '../constants';\nimport type { Component, onErrorPropType } from '../component';\nimport { global, buildChildWindowName } from '../lib';\nimport type { PropsInputType, PropsType } from '../component/props';\nimport type { ChildExportsType } from '../child';\nimport type { DimensionsType, ElementRefType } from '../types';\n\nimport { RENDER_DRIVERS, type ContextDriverType } from './drivers';\nimport { propsToQuery, normalizeProps } from './props';\n\nglobal.props = global.props || {};\nglobal.windows = global.windows || {};\n\nexport type RenderOptionsType<P> = {|\n    uid : string,\n    props : PropsInputType<P>,\n    tag : string,\n    context : string,\n    outlet : HTMLElement,\n    close : (?string) => ZalgoPromise<void>,\n    focus : () => ZalgoPromise<ProxyWindow>,\n    doc : Document,\n    container? : HTMLElement,\n    dimensions : DimensionsType,\n    state : Object\n|};\n\nexport type ParentExportsType<P> = {|\n    init : (ChildExportsType<P>) => ZalgoPromise<void>,\n    close : () => ZalgoPromise<void>,\n    checkClose : () => ZalgoPromise<void>,\n    resize : ({ width? : ?number, height? : ?number }) => ZalgoPromise<void>,\n    onError : (mixed) => ZalgoPromise<void>\n|};\n\nexport type PropRef =\n    {| type : typeof INITIAL_PROPS.RAW, uid? : string, value? : string |};\n\nexport type WindowRef =\n    {| type : typeof WINDOW_REFERENCES.OPENER |} |\n    {| type : typeof WINDOW_REFERENCES.TOP |} |\n    {| type : typeof WINDOW_REFERENCES.PARENT, distance : number |} |\n    {| type : typeof WINDOW_REFERENCES.GLOBAL, uid : string |};\n\nexport type ChildPayload = {|\n    uid : string,\n    tag : string,\n    context : $Values<typeof CONTEXT>,\n    domain : string,\n    parent : WindowRef,\n    props : PropRef,\n    exports : string\n|};\n\nexport type StateType = Object;\n\nexport type ParentHelpers<P> = {|\n    state : StateType,\n    close : () => ZalgoPromise<void>,\n    focus : () => ZalgoPromise<void>,\n    resize : ({ width : ?number, height : ?number }) => ZalgoPromise<void>,\n    onError : (mixed) => ZalgoPromise<void>,\n    updateProps : PropsInputType<P> => ZalgoPromise<void>\n|};\n\nexport class ParentComponent<P> {\n\n    component : Component<P>\n    driver : ContextDriverType\n    props : PropsType<P>\n    initPromise : ZalgoPromise<ParentComponent<P>>\n    errored : boolean\n    event : EventEmitterType\n    clean : CleanupType\n    state : StateType\n    proxyWin : ProxyWindow\n\n    container : HTMLElement\n    element : HTMLElement\n    iframe : HTMLIFrameElement\n    prerenderIframe : HTMLIFrameElement\n\n    child : ?ChildExportsType<P>\n\n    constructor(component : Component<P>, props : PropsInputType<P>) {\n        try {\n            this.initPromise = new ZalgoPromise();\n            this.clean = cleanup(this);\n            this.state = {};\n\n            this.component = component;\n    \n            this.setProps(props);\n            this.component.registerActiveComponent(this);\n            this.clean.register(() => this.component.destroyActiveComponent(this));\n\n        } catch (err) {\n            this.onError(err, props.onError).catch(noop);\n            throw err;\n        }\n    }\n\n    render(target : CrossDomainWindowType, element : ElementRefType, context : $Values<typeof CONTEXT>) : ZalgoPromise<void> {\n        return ZalgoPromise.try(() => {\n            this.component.log(`render`);\n\n            this.driver = RENDER_DRIVERS[context];\n            const uid = `${ this.component.tag }-${ uniqueID() }`;\n            const domain = this.getDomain();\n            const initialDomain = this.getInitialDomain();\n\n            this.component.checkAllowRender(target, domain, element);\n\n            if (target !== window) {\n                this.delegate(context, target);\n            }\n\n            const tasks = {};\n\n            tasks.init = this.initPromise;\n            tasks.buildUrl = this.buildUrl();\n            tasks.onRender = this.props.onRender();\n            this.watchForUnload();\n\n            tasks.renderContainer = ZalgoPromise.try(() => {\n                return this.renderContainer(element, { context, uid });\n            });\n\n            tasks.open = this.driver.renderedIntoContainer\n                ? tasks.renderContainer.then(() => this.open())\n                : this.open();\n\n            tasks.buildWindowName = tasks.open.then(proxyWin => {\n                return this.buildWindowName({ proxyWin, initialDomain, domain, target, context, uid });\n            });\n\n            tasks.setWindowName =  ZalgoPromise.all([ tasks.open, tasks.buildWindowName ]).then(([ proxyWin, windowName ]) => {\n                return proxyWin.setName(windowName);\n            });\n\n            tasks.watchForClose = tasks.open.then(proxyWin => {\n                return this.watchForClose(proxyWin);\n            });\n\n            tasks.prerender = ZalgoPromise.all([ tasks.open, tasks.renderContainer ]).then(([ proxyWin ]) => {\n                return this.prerender(proxyWin, { context, uid });\n            });\n\n            tasks.onDisplay = tasks.prerender.then(() => {\n                return this.props.onDisplay();\n            });\n\n            tasks.openBridge = tasks.open.then(proxyWin => {\n                return this.openBridge(proxyWin, initialDomain, context);\n            });\n\n            tasks.loadUrl = ZalgoPromise.all([ tasks.open, tasks.buildUrl, tasks.setWindowName ]).then(([ proxyWin, url ]) => {\n                return proxyWin.setLocation(url);\n            });\n\n            tasks.switchPrerender = ZalgoPromise.all([ tasks.prerender, tasks.init ]).then(() => {\n                return this.switchPrerender();\n            });\n\n            tasks.runTimeout = tasks.loadUrl.then(() => {\n                return this.runTimeout();\n            });\n\n            tasks.onRender = tasks.init.then(() => {\n                return this.props.onRendered();\n            });\n\n            return ZalgoPromise.hash(tasks);\n            \n        }).catch(err => {\n            return ZalgoPromise.all([\n                this.onError(err),\n                this.destroy(err)\n            ]);\n        }).then(noop);\n    }\n\n    buildWindowName({ proxyWin, initialDomain, domain, target, uid, context } : { proxyWin : ProxyWindow, initialDomain : string, domain : string | RegExp, target : CrossDomainWindowType, context : $Values<typeof CONTEXT>, uid : string }) : string {\n        return buildChildWindowName(this.component.name, this.buildChildPayload({ proxyWin, initialDomain, domain, target, context, uid }));\n    }\n\n    getPropsRef(proxyWin : ProxyWindow, target : CrossDomainWindowType, domain : string | RegExp, uid : string) : PropRef {\n        const value = serializeMessage(proxyWin, domain, this.getPropsForChild(domain));\n\n        const propRef = isSameDomain(target)\n            ? { type: INITIAL_PROPS.RAW, value }\n            : { type: INITIAL_PROPS.UID, uid };\n\n        if (propRef.type === INITIAL_PROPS.UID) {\n            global.props[uid] = value;\n\n            this.clean.register(() => {\n                delete global.props[uid];\n            });\n        }\n\n        return propRef;\n    }\n\n    buildChildPayload({ proxyWin, initialDomain, domain, target = window, context, uid } : { proxyWin : ProxyWindow, initialDomain : string, domain : string | RegExp, target : CrossDomainWindowType, context : $Values<typeof CONTEXT>, uid : string } = {}) : ChildPayload {\n        return {\n            uid,\n            context,\n            domain:  getDomain(window),\n            tag:     this.component.tag,\n            parent:  this.getWindowRef(target, initialDomain, uid, context),\n            props:   this.getPropsRef(proxyWin, target, domain, uid),\n            exports: serializeMessage(proxyWin, domain, this.buildParentExports(proxyWin))\n        };\n    }\n\n    getHelpers() : ParentHelpers<P> {\n        return {\n            state:       this.state,\n            close:       () => this.close(),\n            focus:       () => this.focus(),\n            resize:      ({ width, height }) => this.resize({ width, height }),\n            onError:     (err) => this.onError(err),\n            updateProps: (props) => this.updateProps(props)\n        };\n    }\n\n    setProps(props : PropsInputType<P>, isUpdate : boolean = false) {\n        if (this.component.validate) {\n            this.component.validate({ props });\n        }\n\n        const helpers = this.getHelpers();\n\n        // $FlowFixMe\n        this.props = this.props || {};\n        extend(this.props, normalizeProps(this.component, this, props, helpers, isUpdate));\n\n        for (const key of this.component.getPropNames()) {\n            const propDef = this.component.getPropDefinition(key);\n            if (propDef.required !== false && !isDefined(this.props[key])) {\n                throw new Error(`Expected prop \"${ key }\" to be defined`);\n            }\n        }\n    }\n\n    buildUrl() : ZalgoPromise<string> {\n        return propsToQuery({ ...this.component.props, ...this.component.builtinProps }, this.props).then(query => {\n            return extendUrl(normalizeMockUrl(this.component.getUrl(this.props)), { query });\n        });\n    }\n\n    getDomain() : string | RegExp {\n        return this.component.getDomain(this.props);\n    }\n\n    getInitialDomain() : string {\n        return this.component.getInitialDomain(this.props);\n    }\n\n    getPropsForChild(domain : string | RegExp) : (PropsType<P>) {\n        const result = {};\n\n        for (const key of Object.keys(this.props)) {\n            const prop = this.component.getPropDefinition(key);\n\n            if (prop && prop.sendToChild === false) {\n                continue;\n            }\n\n            if (prop && prop.sameDomain && !matchDomain(domain, getDomain(window))) {\n                continue;\n            }\n\n            // $FlowFixMe\n            result[key] = this.props[key];\n        }\n\n        // $FlowFixMe\n        return result;\n    }\n\n    updateProps(props : PropsInputType<P>) : ZalgoPromise<void> {\n        this.setProps(props, true);\n\n        return this.initPromise.then(() => {\n            if (this.child) {\n                return this.child.updateProps(this.getPropsForChild(this.getDomain()));\n            }\n        });\n    }\n    \n    open() : ZalgoPromise<ProxyWindow> {\n        return ZalgoPromise.try(() => {\n            this.component.log(`open`);\n\n            const windowProp = this.props.window;\n\n            if (windowProp) {\n                this.clean.register(() => windowProp.close());\n                // $FlowFixMe\n                return windowProp;\n            }\n\n            return this.driver.open.call(this);\n\n        }).then(proxyWin => {\n            this.proxyWin = proxyWin;\n            return proxyWin;\n        });\n    }\n\n    focus() : ZalgoPromise<void> {\n        return ZalgoPromise.try(() => {\n            if (this.proxyWin) {\n                return this.proxyWin.focus().then(noop);\n            }\n        });\n    }\n\n    switchPrerender() : ZalgoPromise<void> {\n        return ZalgoPromise.try(() => {\n            if (this.driver.switchPrerender) {\n                return this.driver.switchPrerender.call(this);\n            }\n        });\n    }\n\n    delegate(context : $Values<typeof CONTEXT>, target : CrossDomainWindowType) {\n        this.component.log(`delegate`);\n\n        const props = {};\n        for (const propName of this.component.getPropNames()) {\n            if (this.component.getPropDefinition(propName).allowDelegate) {\n                props[propName] = this.props[propName];\n            }\n        }\n\n        const overridesPromise = send(target, `${ POST_MESSAGE.DELEGATE }_${ this.component.name }`, {\n            context,\n            props,\n            overrides: {\n                focus:     () => this.focus(),\n                close:     () => this.close(),\n                onError:   (err) => this.onError(err)\n            }\n\n        }).then(({ data }) => {\n            this.clean.register(data.destroy);\n            return data.overrides;\n\n        }).catch(err => {\n            throw new Error(`Unable to delegate rendering. Possibly the component is not loaded in the target window.\\n\\n${ stringifyError(err) }`);\n        });\n\n        for (const key of this.driver.delegate) {\n            // $FlowFixMe\n            this[key] = function overriddenFunction() : ZalgoPromise<mixed> {\n                return overridesPromise.then(overrides => {\n                    return overrides[key].apply(this, arguments);\n                });\n            };\n        }\n    }\n\n    getWindowRef(target : CrossDomainWindowType, domain : string, uid : string, context : $Values<typeof CONTEXT>) : WindowRef {\n        \n        if (domain === getDomain(window)) {\n            global.windows[uid] = window;\n            this.clean.register(() => {\n                delete global.windows[uid];\n            });\n    \n            return { type: WINDOW_REFERENCES.GLOBAL, uid };\n        }\n\n        if (context === CONTEXT.POPUP) {\n            return { type: WINDOW_REFERENCES.OPENER };\n        }\n\n        if (isTop(window)) {\n            return { type: WINDOW_REFERENCES.TOP };\n        }\n\n        return { type: WINDOW_REFERENCES.PARENT, distance: getDistanceFromTop(window) };\n    }\n\n    watchForClose(proxyWin : ProxyWindow) : ZalgoPromise<void> {\n        return proxyWin.awaitWindow().then(win => {\n            const closeWindowListener = onCloseWindow(win, () => {\n                this.component.log(`detect_close_child`);\n\n                return ZalgoPromise.all([\n                    this.props.onClose(),\n                    this.destroy(new Error(`Window close detected`))\n                ]);\n            }, 2000);\n\n            this.clean.register(closeWindowListener.cancel);\n        });\n    }\n\n    watchForUnload() {\n        const unloadWindowListener = addEventListener(window, 'unload', once(() => {\n            this.component.log(`navigate_away`);\n            this.destroy(new Error(`Window navigated away`));\n        }));\n\n        this.clean.register(unloadWindowListener.cancel);\n    }\n\n    runTimeout() : ZalgoPromise<void> {\n        return ZalgoPromise.try(() => {\n            const timeout = this.props.timeout;\n\n            if (timeout) {\n                return this.initPromise.timeout(timeout, new Error(`Loading component timed out after ${ timeout } milliseconds`)).then(noop);\n            }\n        });\n    }\n\n    initChild(child : ChildExportsType<P>) : ZalgoPromise<void> {\n        return ZalgoPromise.try(() => {\n            this.clean.set('child', child);\n            this.initPromise.resolve(this);\n        });\n    }\n\n    buildParentExports(win : ProxyWindow) : ParentExportsType<P> {\n        const onError    = (err) => this.onError(err);\n        const init       = (child) => this.initChild(child);\n        const close      = () => this.close();\n        const checkClose = () => this.checkClose(win);\n        const resize     = ({ width, height }) => this.resize({ width, height });\n\n        init.onError = onError;\n\n        return { init, close, checkClose, resize, onError };\n    }\n\n    resize({ width, height } : { width? : ?number, height? : ?number }) : ZalgoPromise<void> {\n        return ZalgoPromise.try(() => {\n            if (this.driver.resize) {\n                return this.driver.resize.call(this, { width, height });\n            }\n        });\n    }\n\n    checkClose(win : ProxyWindow) : ZalgoPromise<void> {\n        return win.isClosed().then(closed => {\n            if (closed) {\n                return this.close();\n            }\n\n            return ZalgoPromise.delay(200)\n                .then(() => win.isClosed())\n                .then(secondClosed => {\n                    if (secondClosed) {\n                        return this.close();\n                    }\n                });\n        });\n    }\n\n    @memoized\n    close() : ZalgoPromise<void> {\n        return ZalgoPromise.try(() => {\n            this.component.log(`close`);\n            return this.props.onClose();\n\n        }).then(() => {\n            if (this.child && this.driver.callChildToClose) {\n                this.child.close.fireAndForget().catch(noop);\n            }\n\n            return this.destroy(new Error(`Window closed`));\n        });\n    }\n\n    prerender(proxyWin : ProxyWindow, { context, uid } : { context : $Values<typeof CONTEXT>, uid : string }) : ZalgoPromise<void> {\n        return ZalgoPromise.try(() => {\n            return proxyWin.awaitWindow();\n\n        }).then(win => {\n            return this.driver.openPrerender.call(this, win);\n            \n        }).then(prerenderWindow => {\n            if (!prerenderWindow || !isSameDomain(prerenderWindow) || !isBlankDomain(prerenderWindow)) {\n                return;\n            }\n    \n            const doc = prerenderWindow.document;\n            const el = this.renderTemplate(this.component.prerenderTemplate, { context, uid, document: doc });\n\n            if (el.ownerDocument !== doc) {\n                throw new Error(`Expected prerender template to have been created with document from child window`);\n            }\n\n            writeElementToWindow(prerenderWindow, el);\n\n            let { width = false, height = false, element = 'body' } = this.component.autoResize || {};\n            element = getElementSafe(element, doc);\n            \n            if (element && (width || height)) {\n                onResize(element, ({ width: newWidth, height: newHeight }) => {\n                    this.resize({\n                        width:  width ? newWidth : undefined,\n                        height: height ? newHeight : undefined\n                    });\n                }, { width, height, win: prerenderWindow });\n            }\n        });\n    }\n\n    renderTemplate(renderer : (RenderOptionsType<P>) => HTMLElement, { context, uid, container, document, outlet } : { context : $Values<typeof CONTEXT>, uid : string, container? : HTMLElement, document? : Document, outlet? : HTMLElement }) : HTMLElement {\n        // $FlowFixMe\n        return renderer.call(this, {\n            container,\n            outlet,\n            context,\n            uid,\n            focus:      () => this.focus(),\n            close:      () => this.close(),\n            state:      this.state,\n            props:      this.props,\n            tag:        this.component.tag,\n            doc:        document,\n            dimensions: this.component.dimensions\n        });\n    }\n\n    renderContainer(element : HTMLElement, { context, uid } : { context : $Values<typeof CONTEXT>, uid : string }) : ZalgoPromise<void> {\n        return ZalgoPromise.try(() => {\n            return elementReady(element);\n\n        }).then(() => {\n            const container = getElement(element);\n            this.element = createElement('div', {\n                class: [ CLASS.OUTLET ]\n            });\n\n            this.container = this.renderTemplate(this.component.containerTemplate, { context, uid, container, outlet: this.element });\n            appendChild(container, this.container);\n\n            this.clean.register(() => destroyElement(this.element));\n            this.clean.register(() => destroyElement(this.container));\n        });\n    }\n\n    destroy(err? : mixed = new Error(`Component destroyed before render complete`)) : ZalgoPromise<void> {\n        return ZalgoPromise.try(() => {\n            this.component.log(`destroy`);\n            this.initPromise.asyncReject(err);\n            return this.clean.all();\n        });\n    }\n\n    onError(err : mixed, onError? : onErrorPropType) : ZalgoPromise<void> {\n        // eslint-disable-next-line promise/no-promise-in-callback\n        return ZalgoPromise.try(() => {\n            this.initPromise.asyncReject(err);\n\n            if (!onError && this.props && this.props.onError) {\n                onError = this.props.onError;\n            }\n    \n            if (onError) {\n                return onError(err);\n            }\n\n        }).then(() => {\n            return this.initPromise;\n            \n        }).then(() => {\n            throw err;\n        });\n    }\n\n    openBridge(proxyWin : ProxyWindow, domain : string, context : $Values<typeof CONTEXT>) : ?ZalgoPromise<?CrossDomainWindowType> {\n        if (__POST_ROBOT__.__IE_POPUP_SUPPORT__) {\n            return ZalgoPromise.try(() => {\n                return proxyWin.awaitWindow();\n                \n            }).then(win => {\n                if (!bridge || !bridge.needsBridge({ win, domain }) || bridge.hasBridge(domain, domain)) {\n                    return;\n                }\n\n                const bridgeUrl = this.component.getBridgeUrl();\n\n                if (!bridgeUrl) {\n                    throw new Error(`Bridge needed to render ${ context }`);\n                }\n\n                const bridgeDomain = getDomainFromUrl(bridgeUrl);\n                bridge.linkUrl(win, domain);\n                return bridge.openBridge(normalizeMockUrl(bridgeUrl), bridgeDomain);\n            });\n        }\n    }\n}\n","/* @flow */\n\nimport { ZalgoPromise } from 'zalgo-promise/src';\nimport { dotify, isDefined } from 'belter/src';\n\nimport type { Component } from '../component';\nimport type { BuiltInPropsDefinitionType, PropsInputType, PropsType, MixedPropDefinitionType } from '../component/props';\nimport { PROP_SERIALIZATION } from '../constants';\n\nimport type { ParentComponent, ParentHelpers } from './index';\n\n/*  Normalize Props\n    ---------------\n\n    Turn props into normalized values, using defaults, function options, etc.\n*/\n\nexport function normalizeProps<P>(component : Component<P>, instance : ParentComponent<P>, props : PropsInputType<P>, helpers : ParentHelpers<P>, isUpdate : boolean = false) : (PropsType<P>) { // eslint-disable-line complexity\n\n    // $FlowFixMe\n    props = props || {};\n    const result : $Shape<P> = { ...props }; // eslint-disable-line no-undef\n\n    const propNames = isUpdate\n        ? []\n        : [ ...component.getPropNames() ];\n\n    // $FlowFixMe\n    for (const key of Object.keys(props)) {\n        if (propNames.indexOf(key) === -1) {\n            propNames.push(key);\n        }\n    }\n\n    const aliases = [];\n\n    const { state, close, focus, onError } = helpers;\n\n    for (const key of propNames) {\n        const propDef = component.getPropDefinition(key);\n        // $FlowFixMe\n        let value = props[key];\n\n        if (!propDef) {\n            continue;\n        }\n\n        const alias = propDef.alias;\n        if (alias) {\n            if (!isDefined(value) && isDefined(props[alias])) {\n                value = props[alias];\n            }\n            aliases.push(alias);\n        }\n\n        if (propDef.value) {\n            value = propDef.value({ props: result, state, close, focus, onError });\n        }\n\n        if (!isDefined(value) && propDef.default) {\n            value = propDef.default({ props: result, state, close, focus, onError });\n        }\n\n        if (isDefined(value)) {\n            if (propDef.type === 'array' ? !Array.isArray(value) : (typeof value !== propDef.type)) {\n                throw new TypeError(`Prop is not of type ${ propDef.type }: ${ key }`);\n            }\n        }\n        \n        // $FlowFixMe\n        result[key] = value;\n    }\n\n    for (const alias of aliases) {\n        // $FlowFixMe\n        delete result[alias];\n    }\n\n    // $FlowFixMe\n    for (const key of Object.keys(result)) {\n        const propDef = component.getPropDefinition(key);\n        // $FlowFixMe\n        const value = result[key];\n\n        if (!propDef) {\n            continue;\n        }\n\n        if (isDefined(value) && propDef.validate) {\n            // $FlowFixMe\n            propDef.validate({ value, props: result });\n        }\n\n        if (isDefined(value) && propDef.decorate) {\n            // $FlowFixMe\n            result[key] = propDef.decorate({ value, props: result, state, close, focus, onError });\n        }\n    }\n\n    // $FlowFixMe\n    return result;\n}\n\n// $FlowFixMe\nfunction getQueryParam<T, P>(prop : MixedPropDefinitionType<P>, key : string, value : T) : ZalgoPromise<string> {\n    return ZalgoPromise.try(() => {\n        if (typeof prop.queryParam === 'function') {\n            return prop.queryParam({ value });\n        } else if (typeof prop.queryParam === 'string') {\n            return prop.queryParam;\n        } else {\n            return key;\n        }\n    });\n}\n\n// $FlowFixMe\nfunction getQueryValue<T, P>(prop : MixedPropDefinitionType<P>, key : string, value : T) : ZalgoPromise<mixed> {\n    return ZalgoPromise.try(() => {\n        if (typeof prop.queryValue === 'function' && isDefined(value)) {\n            return prop.queryValue({ value });\n        } else {\n            return value;\n        }\n    });\n}\n\nexport function propsToQuery<P>(propsDef : BuiltInPropsDefinitionType<P>, props : (PropsType<P>)) : ZalgoPromise<{ [string] : string }> {\n\n    const params = {};\n\n    return ZalgoPromise.all(Object.keys(props).map(key => {\n\n        const prop = propsDef[key];\n\n        if (!prop) {\n            return; // eslint-disable-line array-callback-return\n        }\n\n        return ZalgoPromise.resolve().then(() => {\n\n            const value = props[key];\n\n            if (!value) {\n                return;\n            }\n\n            if (!prop.queryParam) {\n                return;\n            }\n\n            return value;\n\n        }).then(value => {\n\n            if (value === null || typeof value === 'undefined') {\n                return;\n            }\n\n            return ZalgoPromise.all([\n                // $FlowFixMe\n                getQueryParam(prop, key, value),\n                // $FlowFixMe\n                getQueryValue(prop, key, value)\n            ]).then(([ queryParam, queryValue ]) => {\n\n                let result;\n\n                if (typeof queryValue === 'boolean') {\n                    result = queryValue.toString();\n                } else if (typeof queryValue === 'string') {\n                    result = queryValue.toString();\n                } else if (typeof queryValue === 'object' && queryValue !== null) {\n\n                    if (prop.serialization === PROP_SERIALIZATION.JSON) {\n                        result = JSON.stringify(queryValue);\n                    } else if (prop.serialization === PROP_SERIALIZATION.BASE64) {\n                        result = btoa(JSON.stringify(queryValue));\n                    } else if (prop.serialization === PROP_SERIALIZATION.DOTIFY || !prop.serialization) {\n                        result = dotify(queryValue, key);\n\n                        for (const dotkey of Object.keys(result)) {\n                            params[dotkey] = result[dotkey];\n                        }\n\n                        return;\n                    }\n\n                } else if (typeof queryValue === 'number') {\n                    result = queryValue.toString();\n                }\n\n                params[queryParam] = result;\n            });\n        });\n\n    })).then(() => {\n        return params;\n    });\n}\n","/* @flow */\n\nimport { onCloseWindow, type CrossDomainWindowType } from 'cross-domain-utils/src';\nimport { ZalgoPromise } from 'zalgo-promise/src';\nimport { ProxyWindow } from 'post-robot/src';\nimport { cleanup, type CleanupType } from 'belter/src';\n\nimport { ParentComponent } from '../parent';\nimport { RENDER_DRIVERS, type ContextDriverType } from '../parent/drivers';\nimport type { Component } from '../component';\n\nexport type DelegatePropsType = {|\n    onClose : () => ?ZalgoPromise<void>,\n    onDisplay : () => ?ZalgoPromise<void>,\n    window : ?ProxyWindow\n|};\n\nexport type DelegateOptionsType = {|\n    context : string,\n    props : DelegatePropsType,\n    overrides : {\n        close : () => ZalgoPromise<void>,\n        onError : (mixed) => ZalgoPromise<void>,\n        focus : () => ZalgoPromise<void>\n    }\n|};\n\nexport type DelegateReturnType = {|\n    overrides : Object,\n    destroy : () => ZalgoPromise<void>\n|};\n\nexport class DelegateComponent<P>  {\n\n    component : Component<P>\n    source : CrossDomainWindowType\n    context : string\n    driver : ContextDriverType\n    props : DelegatePropsType\n    clean : CleanupType\n\n    close : () => ZalgoPromise<void>\n    onError : (mixed) => ZalgoPromise<void>\n    focus : () => ZalgoPromise<void>\n\n    constructor(component : Component<P>, source : CrossDomainWindowType, options : DelegateOptionsType) {\n        this.component = component;\n        this.context = options.context;\n        this.driver = RENDER_DRIVERS[options.context];\n        this.clean = cleanup(this);\n\n        // $FlowFixMe\n        this.close = ParentComponent.prototype.close;\n        // $FlowFixMe\n        this.resize = ParentComponent.prototype.resize;\n        // $FlowFixMe\n        this.renderTemplate = ParentComponent.prototype.renderTemplate;\n\n        // $FlowFixMe\n        this.props = {};\n        for (const propName of Object.keys(options.props)) {\n            if (options.props[propName] && this.component.getPropDefinition(propName) && this.component.getPropDefinition(propName).allowDelegate) {\n                this.props[propName] = options.props[propName];\n            }\n        }\n\n        this.close     = options.overrides.close;\n        this.onError   = options.overrides.onError;\n        this.focus     = options.overrides.focus;\n        \n        this.component.registerActiveComponent(this);\n        this.clean.register(() => this.component.destroyActiveComponent(this));\n\n        this.watchForSourceClose(source);\n    }\n\n    getDelegate() : DelegateReturnType {\n        return {\n            overrides: this.getOverrides(),\n            destroy:   () => this.destroy()\n        };\n    }\n\n    watchForSourceClose(source : CrossDomainWindowType) {\n        const closeSourceWindowListener = onCloseWindow(source, () => this.destroy(), 3000);\n        this.clean.register(closeSourceWindowListener.cancel);\n    }\n\n    getOverrides() : { [string] : mixed } {\n        const overrides = {};\n        const self = this;\n\n        for (const key of this.driver.delegate) {\n            overrides[key] = function delegateOverride() : mixed {\n                // $FlowFixMe\n                return ParentComponent.prototype[key].apply(self, arguments);\n            };\n        }\n\n        return overrides;\n    }\n\n    destroy() : ZalgoPromise<void> {\n        return this.clean.all();\n    }\n}\n","export default function _inheritsLoose(subClass, superClass) {\n  subClass.prototype = Object.create(superClass.prototype);\n  subClass.prototype.constructor = subClass;\n  subClass.__proto__ = superClass;\n}","/* @flow */\n\nexport type NodePropsType = { [string] : mixed };\n// eslint-disable-next-line no-use-before-define\nexport type NodeType = ElementNode | TextNode | FragmentNode;\n// eslint-disable-next-line no-use-before-define\nexport type NodeChildrenType = $ReadOnlyArray<ElementNode | TextNode>;\nexport type NodeRenderer<T> = (string, NodePropsType, NodeChildrenType) => T;\nexport type NodeRendererFactory<T, O = Object> = (O | void) => NodeRenderer<T>;\n\nclass Node {\n    isElementNode() : boolean {\n        return false;\n    }\n\n    isTextNode() : boolean {\n        return false;\n    }\n\n    isFragmentNode() : boolean {\n        return false;\n    }\n}\n\nexport class ElementNode extends Node {\n    name : string\n    props : NodePropsType\n    children : NodeChildrenType\n    onRender : ?<T>(T) => void // eslint-disable-line no-undef\n\n    constructor(name : string, props : NodePropsType, children : NodeChildrenType) {\n        super();\n        this.name = name;\n        this.props = props;\n        this.children = children;\n\n        if (typeof props.onRender === 'function') {\n            this.onRender = props.onRender;\n            delete props.onRender;\n        }\n    }\n\n    getTag() : string {\n        return this.name;\n    }\n\n    isTag(name : string) : boolean {\n        return name === this.name;\n    }\n\n    isElementNode() : boolean {\n        return true;\n    }\n\n    render<T>(renderer : NodeRenderer<T>) : T {\n        const element = renderer(this.name, this.props, this.children);\n        if (this.onRender) {\n            this.onRender(element);\n        }\n        return element;\n    }\n\n    getText() : string {\n        throw new Error(`Can not get text of an element node`);\n    }\n}\n\nexport class TextNode extends Node {\n    text : string\n\n    constructor(text : string) {\n        super();\n        this.text = text;\n    }\n\n    getTag() : string {\n        throw new Error(`Can not get tag of text node`);\n    }\n\n    isTag(name : string) : boolean { // eslint-disable-line no-unused-vars\n        throw new Error(`Can not check tag of text node`);\n    }\n\n    isTextNode() : boolean {\n        return true;\n    }\n\n    render<T>(renderer : NodeRenderer<T>) : T { // eslint-disable-line no-unused-vars\n        throw new Error(`Can not render a text node`);\n    }\n\n    getText() : string {\n        return this.text;\n    }\n}\n\nexport class FragmentNode extends Node {\n    children : NodeChildrenType\n\n    constructor(children : NodeChildrenType) {\n        super();\n        this.children = children;\n    }\n\n    getTag() : string {\n        throw new Error(`Can not get tag of fragment node`);\n    }\n\n    isTag(name : string) : boolean { // eslint-disable-line no-unused-vars\n        throw new Error(`Can not check tag of fragment node`);\n    }\n\n    isFragmentNode() : boolean {\n        return true;\n    }\n\n    render<T>(renderer : NodeRenderer<T>) : $ReadOnlyArray<T> { // eslint-disable-line no-unused-vars\n        throw new Error(`Can not render a fragment node`);\n    }\n\n    getText() : string {\n        throw new Error(`Can not get text of a fragment node`);\n    }\n}\n\ntype JsxChildType = $ReadOnlyArray<JsxChildType> | NodeType | string;\ntype NullableJsxChildType = $ReadOnlyArray<NullableJsxChildType> | NodeType | string | null | void;\n\nfunction normalizeChild(child : NullableJsxChildType) : NodeType | void {\n    if (typeof child === 'string') {\n        return new TextNode(child);\n\n    } else if (child instanceof ElementNode || child instanceof TextNode || child instanceof FragmentNode) {\n        return child;\n\n    } else if (Array.isArray(child)) {\n        return new FragmentNode(normalizeChildren(child)); // eslint-disable-line no-use-before-define\n\n    } else if (child === null || typeof child === 'undefined') {\n        return; // eslint-disable-line no-useless-return\n\n    } else {\n        throw new Error(`Child node must be string or instance of jsx-pragmatic node; got ${ typeof child }`);\n    }\n}\n\nfunction normalizeChildren(children : $ReadOnlyArray<NullableJsxChildType>) : NodeChildrenType {\n    const result = [];\n\n    for (const child of children) {\n        const normalizedChild = normalizeChild(child);\n\n        if (!normalizedChild) {\n            continue;\n        }\n\n        if (normalizedChild instanceof FragmentNode) {\n            for (const subchild of normalizedChild.children) {\n                result.push(subchild);\n            }\n        } else {\n            result.push(normalizedChild);\n        }\n    }\n\n    return result;\n}\n\ntype JSXElementBuilder<P : NodePropsType> = (\n    element : string,\n    props : P | null,\n    ...children : $ReadOnlyArray<NullableJsxChildType>\n) => ElementNode;\n\ntype JSXElementFunctionBuilder<P : NodePropsType> = (\n    element : (P, $ReadOnlyArray<JsxChildType>) => ElementNode,\n    props : P | null,\n    ...children : $ReadOnlyArray<NullableJsxChildType>\n) => ElementNode;\n\ntype JSXTextFunctionBuilder<P : NodePropsType> = (\n    element : (P, $ReadOnlyArray<JsxChildType>) => string | TextNode,\n    props : P | null,\n    ...children : $ReadOnlyArray<NullableJsxChildType>\n) => TextNode;\n\ntype JSXFragmentFunctionBuilder<P : NodePropsType> = (\n    element : (P, $ReadOnlyArray<JsxChildType>) => FragmentNode | $ReadOnlyArray<NullableJsxChildType>,\n    props : P | null,\n    ...children : $ReadOnlyArray<NullableJsxChildType>\n) => FragmentNode;\n\ntype JSXEmptyFunctionBuilder<P : NodePropsType> = (\n    element : (P, $ReadOnlyArray<JsxChildType>) => null | void,\n    props : P | null,\n    ...children : $ReadOnlyArray<NullableJsxChildType>\n) => void;\n\ntype JSXBuilder<P : NodePropsType> = JSXElementBuilder<P> & JSXElementFunctionBuilder<P> & JSXTextFunctionBuilder<P> & JSXFragmentFunctionBuilder<P> & JSXEmptyFunctionBuilder<P>;\n\nexport const node : JSXBuilder<*> = <P : NodePropsType>(element, props : P | null, ...children) => {\n    if (typeof element === 'string') {\n        return new ElementNode(element, props || {}, normalizeChildren(children));\n    }\n\n    if (typeof element === 'function') {\n        // $FlowFixMe\n        return normalizeChild(element(props || {}, normalizeChildren(children)));\n    }\n    \n    throw new TypeError(`Expected jsx Element to be a string or a function`);\n};\n\nexport function Fragment(props : NodePropsType, ...children : $ReadOnlyArray<JsxChildType>) : FragmentNode {\n    \n    if (props && Object.keys(props).length) {\n        throw new Error(`Do not pass props to Fragment`);\n    }\n\n    return new FragmentNode(normalizeChildren(children));\n}\n","/* @flow */\n\nimport type { NodeChildrenType, NodePropsType, NodeRendererFactory, NodeRenderer } from '../node';\n\nconst ELEMENT_TAG = {\n    HTML:    'html',\n    IFRAME:  'iframe',\n    SCRIPT:  'script',\n    NODE:    'node',\n    DEFAULT: 'default'\n};\n\nconst ELEMENT_PROP = {\n    INNER_HTML: 'innerHTML',\n    EL:         'el'\n};\n\nconst DOM_EVENT = {\n    onBlur:               'blur',\n    onCancel:             'cancel',\n    onClick:              'click',\n    onClose:              'close',\n    onContextMenu:        'contextMenu',\n    onCopy:               'copy',\n    onCut:                'cut',\n    onAuxClick:           'auxClick',\n    onDoubleClick:        'doubleClick',\n    onDragEnd:            'dragEnd',\n    onDragStart:          'dragStart',\n    onDrop:               'drop',\n    onFocus:              'focus',\n    onInput:              'input',\n    onInvalid:            'invalid',\n    onKeyDown:            'keyDown',\n    onKeyPress:           'keyPress',\n    onKeyUp:              'keyUp',\n    onMouseDown:          'mouseDown',\n    onMouseUp:            'mouseUp',\n    onPaste:              'paste',\n    onPause:              'pause',\n    onPlay:               'play',\n    onPointerCancel:      'pointerCancel',\n    onPointerDown:        'pointerDown',\n    onPointerUp:          'pointerUp',\n    onRateChange:         'rateChange',\n    onReset:              'reset',\n    onSeeked:             'seeked',\n    onSubmit:             'submit',\n    onTouchCancel:        'touchCancel',\n    onTouchEnd:           'touchEnd',\n    onTouchStart:         'touchStart',\n    onVolumeChange:       'volumeChange',\n    onAbort:              'abort',\n    onAnimationEnd:       'animationEnd',\n    onAnimationIteration: 'animationIteration',\n    onAnimationStart:     'animationStart',\n    onCanPlay:            'canPlay',\n    onCanPlayThrough:     'canPlayThrough',\n    onDrag:               'drag',\n    onDragEnter:          'dragEnter',\n    onDragExit:           'dragExit',\n    onDragLeave:          'dragLeave',\n    onDragOver:           'dragOver',\n    onDurationChange:     'durationChange',\n    onEmptied:            'emptied',\n    onEncrypted:          'encrypted',\n    onEnded:              'ended',\n    onError:              'error',\n    onGotPointerCapture:  'gotPointerCapture',\n    onLoad:               'load',\n    onLoadedData:         'loadedData',\n    onLoadedMetadata:     'loadedMetadata',\n    onLoadStart:          'loadStart',\n    onLostPointerCapture: 'lostPointerCapture',\n    onMouseMove:          'mouseMove',\n    onMouseOut:           'mouseOut',\n    onMouseOver:          'mouseOver',\n    onPlaying:            'playing',\n    onPointerMove:        'pointerMove',\n    onPointerOut:         'pointerOut',\n    onPointerOver:        'pointerOver',\n    onProgress:           'progress',\n    onScroll:             'scroll',\n    onSeeking:            'seeking',\n    onStalled:            'stalled',\n    onSuspend:            'suspend',\n    onTimeUpdate:         'timeUpdate',\n    onToggle:             'toggle',\n    onTouchMove:          'touchMove',\n    onTransitionEnd:      'transitionEnd',\n    onWaiting:            'waiting',\n    onWheel:              'wheel'\n};\n\nfunction fixScripts(el : HTMLElement, doc : Document = window.document) {\n    for (const script of el.querySelectorAll('script')) {\n        const parentNode = script.parentNode;\n\n        if (!parentNode) {\n            continue;\n        }\n\n        const newScript = doc.createElement('script');\n        // $FlowFixMe\n        newScript.text = script.textContent;\n        parentNode.replaceChild(newScript, script);\n    }\n}\n\ntype CreateElementOptions = {|\n    doc : Document,\n    name : string,\n    props : NodePropsType\n|};\n\nconst CREATE_ELEMENT : { [string] : (CreateElementOptions) => HTMLElement } = {\n\n    [ ELEMENT_TAG.NODE ]: ({ props } : CreateElementOptions) => {\n        if (!props[ELEMENT_PROP.EL]) {\n            throw new Error(`Must pass ${ ELEMENT_PROP.EL } prop to ${ ELEMENT_TAG.NODE } element`);\n        }\n\n        if (Object.keys(props).length > 1) {\n            throw new Error(`Must not pass any prop other than ${ ELEMENT_PROP.EL } to ${ ELEMENT_TAG.NODE } element`);\n        }\n\n        // $FlowFixMe\n        return props[ELEMENT_PROP.EL];\n    },\n\n    [ ELEMENT_TAG.DEFAULT ]: ({ name, doc } : CreateElementOptions) => {\n        return doc.createElement(name);\n    }\n};\n\nfunction createElement({ doc, name, props } : CreateElementOptions) : HTMLElement {\n    const elementCreator = CREATE_ELEMENT[name] || CREATE_ELEMENT[ELEMENT_TAG.DEFAULT];\n    return elementCreator({ name, props, doc });\n}\n\ntype AddPropsOptions = {|\n    el : HTMLElement,\n    props : NodePropsType\n|};\n\nfunction addProps({ el, props } : AddPropsOptions) {\n    for (const prop of Object.keys(props)) {\n        const val = props[prop];\n\n        if (val === null || typeof val === 'undefined' || prop === ELEMENT_PROP.EL || prop === ELEMENT_PROP.INNER_HTML) {\n            continue;\n        }\n\n        if (DOM_EVENT.hasOwnProperty(prop)) {\n            if (typeof val !== 'undefined' && typeof val !== 'function') {\n                throw new TypeError(`Prop ${ prop } must be function`);\n            }\n\n            el.addEventListener(DOM_EVENT[prop], val);\n\n        } else if (typeof val === 'string' || typeof val === 'number') {\n            el.setAttribute(prop, val.toString());\n\n        } else if (typeof val === 'boolean') {\n            if (val === true) {\n                el.setAttribute(prop, '');\n            }\n\n        } else {\n            throw new TypeError(`Can not render prop ${ prop } of type ${ typeof val }`);\n        }\n    }\n}\n\ntype AddChildrenOptions = {|\n    el : HTMLElement,\n    name : string,\n    children : NodeChildrenType,\n    doc : Document,\n    props : NodePropsType,\n    domRenderer : NodeRenderer<HTMLElement>\n|};\n\nconst ADD_CHILDREN : { [string] : (AddChildrenOptions) => void } = {\n\n    [ ELEMENT_TAG.IFRAME ]: ({ el, children } : AddChildrenOptions) => {\n        const firstChild = children[0];\n\n        if (children.length > 1 || !firstChild.isElementNode()) {\n            throw new Error(`Expected only single element node as child of ${ ELEMENT_TAG.IFRAME } element`);\n        }\n\n        if (!firstChild.isTag(ELEMENT_TAG.HTML)) {\n            throw new Error(`Expected element to be inserted into frame to be html, got ${ firstChild.getTag() }`);\n        }\n    \n        el.addEventListener('load', () => {\n\n            // $FlowFixMe\n            const win = el.contentWindow;\n    \n            if (!win) {\n                throw new Error(`Expected frame to have contentWindow`);\n            }\n\n            const doc = win.document;\n            const docElement = doc.documentElement;\n\n            while (docElement.children && docElement.children.length) {\n                docElement.removeChild(docElement.children[0]);\n            }\n\n            // eslint-disable-next-line no-use-before-define\n            const child = firstChild.render(dom({ doc }));\n        \n            while (child.children.length) {\n                docElement.appendChild(child.children[0]);\n            }\n        });\n    },\n\n    [ ELEMENT_TAG.SCRIPT ]: ({ el, children } : AddChildrenOptions) => {\n        const firstChild = children[0];\n\n        if (children.length !== 1 || !firstChild.isTextNode()) {\n            throw new Error(`Expected only single text node as child of ${ ELEMENT_TAG.SCRIPT } element`);\n        }\n        \n        // $FlowFixMe\n        el.text = firstChild.getText();\n    },\n\n    [ ELEMENT_TAG.DEFAULT ]: ({ el, children, doc, domRenderer } : AddChildrenOptions) => {\n        for (const child of children) {\n            if (child.isTextNode()) {\n                el.appendChild(doc.createTextNode(child.getText()));\n            } else {\n                el.appendChild(child.render(domRenderer));\n            }\n        }\n    }\n};\n\nfunction addChildren({ el, name, props, children, doc, domRenderer } : AddChildrenOptions) {\n    if (props.hasOwnProperty(ELEMENT_PROP.INNER_HTML)) {\n\n        if (children.length >= 1) {\n            throw new Error(`Expected no children to be passed when ${ ELEMENT_PROP.INNER_HTML } prop is set`);\n        }\n\n        const html = props[ELEMENT_PROP.INNER_HTML];\n\n        if (typeof html !== 'string') {\n            throw new TypeError(`${ ELEMENT_PROP.INNER_HTML } prop must be string`);\n        }\n\n        if (name === ELEMENT_TAG.SCRIPT) {\n            // $FlowFixMe\n            el.text = html;\n        } else {\n            el.innerHTML = html;\n            fixScripts(el, doc);\n        }\n\n    } else {\n        const addChildrenToElement = ADD_CHILDREN[name] || ADD_CHILDREN[ELEMENT_TAG.DEFAULT];\n        addChildrenToElement({ el, name, props, children, doc, domRenderer });\n    }\n}\n\n\nexport const dom : NodeRendererFactory<HTMLElement> = ({ doc = document } : { doc? : Document } = {}) => {\n    const domRenderer = (name, props, children) => {\n        const el = createElement({ name, props, doc });\n        addProps({ el, props });\n        addChildren({ el, name, props, children, doc, domRenderer });\n        return el;\n    };\n\n    return domRenderer;\n};\n","/* @flow */\n/* @jsx node */\n/* eslint react/react-in-jsx-scope: off */\n\nimport { node, dom } from 'jsx-pragmatic/src';\n\nimport { type RenderOptionsType } from '../../parent';\nimport { CLASS } from '../../constants';\n\nexport function defaultContainerTemplate<P>({ uid, outlet, doc, dimensions : { width, height } } : RenderOptionsType<P>) : HTMLElement {\n\n    return (\n        <div id={ uid }>\n            <style>\n                {`\n                    #${ uid }, #${ uid } > .${ CLASS.OUTLET } {\n                        width: ${ width };\n                        height: ${ height };\n                    }\n\n                    #${ uid } > .${ CLASS.OUTLET } {\n                        display: inline-block;\n                        position: relative;\n                    }\n\n                    #${ uid } > .${ CLASS.OUTLET } > iframe {\n                        height: 100%;\n                        width: 100%;\n                        position: absolute;\n                        top: 0;\n                        left: 0;\n                        transition: opacity .2s ease-in-out;\n                    }\n\n                    #${ uid } > .${ CLASS.OUTLET } > iframe.${ CLASS.VISIBLE } {\n                        opacity: 1;\n                    }\n\n                    #${ uid } > .${ CLASS.OUTLET } > iframe.${ CLASS.INVISIBLE } {\n                        opacity: 0;\n                    }\n                `}\n            </style>\n\n            <node el={ outlet } />\n        </div>\n    ).render(dom({ doc }));\n}\n","/* @flow */\n/** @jsx node */\n/* eslint react/react-in-jsx-scope: off */\n\nimport { node, dom } from 'jsx-pragmatic/src';\n\nimport { type RenderOptionsType } from '../../parent';\n\nexport function defaultPrerenderTemplate<P>({ doc } : RenderOptionsType<P>) : HTMLElement {\n    return (\n        <html>\n            <head>\n                <style>\n                    {`\n                        html, body {\n                            width: 100%;\n                            height: 100%;\n                            overflow: hidden;\n                            top: 0;\n                            left: 0;\n                            margin: 0;\n                            text-align: center;\n                        }\n\n                        .spinner {\n                            position: absolute;\n                            max-height: 60vmin;\n                            max-width: 60vmin;\n                            height: 40px;\n                            width: 40px;\n                            top: 50%;\n                            left: 50%;\n                            transform: translateX(-50%) translateY(-50%);\n                            z-index: 10;\n                        }\n\n                        .spinner .loader {\n                            height: 100%;\n                            width: 100%;\n                            box-sizing: border-box;\n                            border: 3px solid rgba(0, 0, 0, .2);\n                            border-top-color: rgba(33, 128, 192, 0.8);\n                            border-radius: 100%;\n                            animation: rotation .7s infinite linear;\n\n                        }\n\n                        @keyframes rotation {\n                            from {\n                                transform: rotate(0deg)\n                            }\n                            to {\n                                transform: rotate(359deg)\n                            }\n                        }\n                    `}\n                </style>\n            </head>\n            <body>\n                <div class=\"spinner\">\n                    <div id=\"loader\" class=\"loader\" />\n                </div>\n            </body>\n        </html>\n    ).render(dom({ doc }));\n}\n","/* @flow */\n/* eslint max-lines: 0 */\n\nimport { on, send, ProxyWindow, bridge } from 'post-robot/src';\nimport { ZalgoPromise } from 'zalgo-promise/src';\nimport { isWindow, getDomainFromUrl, type CrossDomainWindowType, isSameTopWindow, getDomain, matchDomain, isSameDomain } from 'cross-domain-utils/src';\nimport { memoize, isRegex, noop, isElement } from 'belter/src';\n\nimport { ChildComponent } from '../child';\nimport { ParentComponent, type RenderOptionsType, type ParentHelpers } from '../parent';\nimport { DelegateComponent } from '../delegate';\nimport { CONTEXT, POST_MESSAGE, WILDCARD, DEFAULT_DIMENSIONS } from '../constants';\nimport { isZoidComponentWindow, parseChildWindowName } from '../lib';\nimport type { CssDimensionsType, StringMatcherType, ElementRefType } from '../types';\n\nimport { validate } from './validate';\nimport { defaultContainerTemplate, defaultPrerenderTemplate } from './templates';\nimport { getInternalProps, type UserPropsDefinitionType, type BuiltInPropsDefinitionType, type PropsInputType, type PropsType, type MixedPropDefinitionType } from './props';\n\nconst drivers = __ZOID__.__FRAMEWORK_SUPPORT__\n    ? require('../drivers')\n    : {};\n\ntype LoggerPayload = { [string] : ?string };\n\n// eslint-disable-next-line flowtype/require-exact-type\ntype Logger = {\n    debug : (event : string, payload? : LoggerPayload) => void,\n    info : (event : string, payload? : LoggerPayload) => void,\n    warn : (event : string, payload? : LoggerPayload) => void,\n    error : (event : string, payload? : LoggerPayload) => void\n};\n\n/*  Component\n    ---------\n\n    This is the spec for the component. The idea is, when I call zoid.create(), it will create a new instance\n    of Component with the blueprint needed to set up ParentComponents and ChildComponents.\n\n    This is the one portion of code which is required by -- and shared to -- both the parent and child windows, and\n    contains all of the configuration needed for them to set themselves up.\n*/\n\nexport type ComponentOptionsType<P> = {|\n\n    tag : string,\n\n    url : string | ({ props : PropsType<P> }) => string,\n    domain? : string | RegExp,\n    bridgeUrl? : string,\n\n    props? : UserPropsDefinitionType<P>,\n\n    dimensions? : CssDimensionsType,\n    autoResize? : { width? : boolean, height? : boolean, element? : string },\n\n    allowedParentDomains? : StringMatcherType,\n\n    attributes? : {\n        iframe? : { [string] : string },\n        popup? : { [string] : string }\n    },\n\n    defaultContext? : $Values<typeof CONTEXT>,\n\n    containerTemplate? : (RenderOptionsType<P>) => HTMLElement,\n    prerenderTemplate? : (RenderOptionsType<P>) => HTMLElement,\n\n    validate? : ({ props : PropsInputType<P> }) => void,\n\n    logger? : Logger\n|};\n\ntype ZoidRenderer = {|\n    render : (element? : ElementRefType, context? : $Values<typeof CONTEXT>) => ZalgoPromise<void>,\n    renderTo : (target : CrossDomainWindowType, element? : ElementRefType, context? : $Values<typeof CONTEXT>) => ZalgoPromise<void>\n|};\n\nexport type ZoidComponentInstance<P> = {| ...ParentHelpers<P>, ...ZoidRenderer |};\n\nexport type ZoidComponent<P> = {|\n    (PropsInputType<P>) : ZoidComponentInstance<P>,\n    driver : (string, mixed) => mixed,\n    isChild : () => boolean,\n    xprops? : PropsType<P>,\n    canRenderTo : (CrossDomainWindowType) => ZalgoPromise<boolean>\n|};\n\nexport class Component<P> {\n\n    tag : string\n    name : string\n    \n    url : string | ({ props : PropsType<P> }) => string\n    domain : void | string | RegExp\n    bridgeUrl : void | string\n\n    props : UserPropsDefinitionType<P>\n    builtinProps : BuiltInPropsDefinitionType<P>\n\n    dimensions : CssDimensionsType\n    autoResize : void | { width? : boolean, height? : boolean, element? : string }\n\n    allowedParentDomains : StringMatcherType\n\n    defaultContext : $Values<typeof CONTEXT>\n    \n    attributes : {\n        iframe? : { [string] : string },\n        popup? : { [string] : string }\n    }\n\n    containerTemplate : (RenderOptionsType<P>) => HTMLElement\n    prerenderTemplate : (RenderOptionsType<P>) => HTMLElement\n\n    validate : void | ({ props : PropsInputType<P> }) => void\n\n    driverCache : { [string] : mixed }\n\n    xprops : ?PropsType<P>\n\n    logger : Logger\n\n    constructor(options : ComponentOptionsType<P>) {\n        validate(options);\n\n        // The tag name of the component. Used by some drivers (e.g. angular) to turn the component into an html element,\n        // e.g. <my-component>\n\n        this.tag = options.tag;\n        this.name = this.tag.replace(/-/g, '_');\n\n        this.allowedParentDomains = options.allowedParentDomains || WILDCARD;\n\n        if (Component.components[this.tag]) {\n            throw new Error(`Can not register multiple components with the same tag: ${ this.tag }`);\n        }\n\n        // A json based spec describing what kind of props the component accepts. This is used to validate any props before\n        // they are passed down to the child.\n\n        this.builtinProps = getInternalProps();\n        this.props = options.props || {};\n\n        // The dimensions of the component, e.g. { width: '300px', height: '150px' }\n\n        const { width = DEFAULT_DIMENSIONS.WIDTH, height = DEFAULT_DIMENSIONS.HEIGHT } = options.dimensions || {};\n        this.dimensions = { width, height };\n\n        this.url = options.url;\n        this.domain = options.domain;\n        this.bridgeUrl = options.bridgeUrl;\n\n        this.attributes = options.attributes || {};\n        this.attributes.iframe = this.attributes.iframe || {};\n        this.attributes.popup = this.attributes.popup || {};\n\n        this.defaultContext = options.defaultContext || CONTEXT.IFRAME;\n\n        this.autoResize = options.autoResize;\n\n        this.containerTemplate = options.containerTemplate || defaultContainerTemplate;\n        this.prerenderTemplate = options.prerenderTemplate || defaultPrerenderTemplate;\n\n        this.validate = options.validate;\n\n        this.logger = options.logger || {\n            debug: noop,\n            info:  noop,\n            warn:  noop,\n            error: noop\n        };\n\n        this.registerChild();\n        this.listenDelegate();\n\n        Component.components[this.tag] = this;\n    }\n\n    @memoize\n    getPropNames() : $ReadOnlyArray<string> {\n        const props = Object.keys(this.props);\n\n        for (const key of Object.keys(this.builtinProps)) {\n            if (props.indexOf(key) === -1) {\n                props.push(key);\n            }\n        }\n\n        return props;\n    }\n\n    // $FlowFixMe\n    getPropDefinition(name : string) : MixedPropDefinitionType<P> {\n        // $FlowFixMe\n        return this.props[name] || this.builtinProps[name];\n    }\n\n    driver(name : string, dep : mixed) : mixed {\n        if (!drivers[name]) {\n            throw new Error(`Could not find driver for framework: ${ name }`);\n        }\n\n        this.driverCache = this.driverCache || {};\n\n        if (!this.driverCache[name]) {\n            this.driverCache[name] = drivers[name].register(this, dep);\n        }\n\n        return this.driverCache[name];\n    }\n\n    registerChild() {\n        if (this.isChild()) {\n            if (window.xprops) {\n                throw new Error(`Can not register ${ this.name } as child - can not attach multiple components to the same window`);\n            }\n\n            const child = new ChildComponent(this);\n            window.xprops = this.xprops = child.getProps();\n        }\n    }\n\n    listenDelegate() {\n        on(`${ POST_MESSAGE.ALLOW_DELEGATE }_${ this.name }`, () => {\n            return true;\n        });\n\n        on(`${ POST_MESSAGE.DELEGATE }_${ this.name }`, ({ source, data: { context, props, overrides } }) => {\n            const delegate = new DelegateComponent(this, source, { context, props, overrides });\n            return delegate.getDelegate();\n        });\n    }\n\n    canRenderTo(win : CrossDomainWindowType) : ZalgoPromise<boolean> {\n        return send(win, `${ POST_MESSAGE.ALLOW_DELEGATE }_${ this.name }`).then(({ data }) => {\n            return data;\n        }).catch(() => {\n            return false;\n        });\n    }\n\n    getUrl(props : PropsType<P>) : string {\n        if (typeof this.url === 'function') {\n            return this.url({ props });\n        }\n\n        return this.url;\n    }\n\n    getInitialDomain(props : PropsType<P>) : string {\n        if (this.domain && typeof this.domain === 'string') {\n            return this.domain;\n        }\n\n        return getDomainFromUrl(this.getUrl(props));\n    }\n\n    getDomain(props : PropsType<P>) : string | RegExp {\n        if (isRegex(this.domain)) {\n            // $FlowFixMe\n            return this.domain;\n        }\n\n        return this.getInitialDomain(props);\n    }\n\n    getBridgeUrl() : ?string {\n        if (this.bridgeUrl) {\n            return this.bridgeUrl;\n        }\n    }\n\n    isChild() : boolean {\n        return isZoidComponentWindow() && parseChildWindowName().tag === this.tag;\n    }\n\n    getDefaultElement(context : $Values<typeof CONTEXT>, element : ?ElementRefType) : ElementRefType {\n        if (element) {\n            if (!isElement(element) && typeof element !== 'string') {\n                throw new Error(`Expected element to be passed`);\n            }\n\n            return element;\n        }\n\n        if (context === CONTEXT.POPUP) {\n            return 'body';\n        }\n\n        throw new Error(`Expected element to be passed to render iframe`);\n    }\n\n    getDefaultContext(context : ?$Values<typeof CONTEXT>, props : PropsInputType<P>) : $Values<typeof CONTEXT> {\n        if (props.window) {\n            return ProxyWindow.toProxyWindow(props.window).getType();\n        }\n\n        if (context) {\n            if (context !== CONTEXT.IFRAME && context !== CONTEXT.POPUP) {\n                throw new Error(`Unrecognized context: ${ context }`);\n            }\n            \n            return context;\n        }\n\n        return this.defaultContext;\n    }\n\n    init(props : PropsInputType<P>) : ZoidComponentInstance<P> {\n\n        // $FlowFixMe\n        props = props || {};\n        \n        const parent = new ParentComponent(this, props);\n\n        const render = (target, element, context) => ZalgoPromise.try(() => {\n            if (!isWindow(target)) {\n                throw new Error(`Must pass window to renderTo`);\n            }\n\n            context = this.getDefaultContext(context, props);\n            element = this.getDefaultElement(context, element);\n            return parent.render(target, element, context);\n        });\n\n        return {\n            ...parent.getHelpers(),\n            render:   (element, context) => render(window, element, context),\n            renderTo: (target, element, context) => render(target, element, context)\n        };\n    }\n\n    checkAllowRender(target : CrossDomainWindowType, domain : string | RegExp, element : ElementRefType) {\n        if (target === window) {\n            return;\n        }\n\n        if (!isSameTopWindow(window, target)) {\n            throw new Error(`Can only renderTo an adjacent frame`);\n        }\n\n        const origin = getDomain();\n\n        if (!matchDomain(domain, origin) && !isSameDomain(target)) {\n            throw new Error(`Can not render remotely to ${ domain.toString() } - can only render to ${ origin }`);\n        }\n\n        if (element && typeof element !== 'string') {\n            throw new Error(`Element passed to renderTo must be a string selector, got ${ typeof element } ${ element }`);\n        }\n    }\n\n    log(event : string, payload? : LoggerPayload) {\n        this.logger.info(`${ this.name }_${ event }`, payload);\n    }\n\n    static components : { [string] : Component<*> } = {}\n    static activeComponents : Array<ParentComponent<*> | DelegateComponent<*>> = [] // eslint-disable-line flowtype/no-mutable-array\n\n    registerActiveComponent<Q>(instance : ParentComponent<Q> | DelegateComponent<Q>) {\n        Component.activeComponents.push(instance);\n    }\n\n    destroyActiveComponent<Q>(instance : ParentComponent<Q> | DelegateComponent<Q>) {\n        Component.activeComponents.splice(Component.activeComponents.indexOf(instance), 1);\n    }\n\n    static destroyAll() : ZalgoPromise<void> {\n        if (bridge) {\n            bridge.destroyBridges();\n        }\n\n        const results = [];\n\n        while (Component.activeComponents.length) {\n            results.push(Component.activeComponents[0].destroy());\n        }\n\n        return ZalgoPromise.all(results).then(noop);\n    }\n}\n\nexport type ComponentDriverType<P, T : mixed> = {|\n    register : (Component<P>, T) => mixed\n|};\n\nexport function create<P>(options : ComponentOptionsType<P>) : ZoidComponent<P> {\n    const component : Component<P> = new Component(options);\n\n    const init = (props) => component.init(props);\n    init.driver = (name, dep) => component.driver(name, dep);\n    init.isChild = () => component.isChild();\n    init.canRenderTo = (win) => component.canRenderTo(win);\n    init.xprops = component.xprops;\n\n    // $FlowFixMe\n    return init;\n}\n\nexport function destroyAll() : ZalgoPromise<void> {\n    return Component.destroyAll();\n}\n","/* @flow */\n\nimport { isPerc, isPx, values } from 'belter/src';\n\nimport { CONTEXT, PROP_TYPE } from '../constants';\n\nimport type { ComponentOptionsType } from './index';\n\nfunction validatePropDefinitions<P>(options : ComponentOptionsType<P>) {\n\n    if (options.props && !(typeof options.props === 'object')) {\n        throw new Error(`Expected options.props to be an object`);\n    }\n\n    const PROP_TYPE_LIST = values(PROP_TYPE);\n\n    if (options.props) {\n        for (const key of Object.keys(options.props)) {\n\n            // $FlowFixMe\n            const prop = options.props[key];\n\n            if (!prop || !(typeof prop === 'object')) {\n                throw new Error(`Expected options.props.${ key } to be an object`);\n            }\n\n            if (!prop.type) {\n                throw new Error(`Expected prop.type`);\n            }\n\n            if (PROP_TYPE_LIST.indexOf(prop.type) === -1) {\n                throw new Error(`Expected prop.type to be one of ${ PROP_TYPE_LIST.join(', ') }`);\n            }\n\n            if (prop.required && prop.default) {\n                throw new Error(`Required prop can not have a default value`);\n            }\n\n            if (prop.type === PROP_TYPE.FUNCTION && prop.queryParam && !prop.queryValue) {\n                throw new Error(`Do not pass queryParam for function prop`);\n            }\n        }\n    }\n}\n\n// eslint-disable-next-line complexity\nexport function validate<P>(options : ?ComponentOptionsType<P>) { // eslint-ignore-line\n\n    if (!options) {\n        throw new Error(`Expected options to be passed`);\n    }\n\n    // eslint-disable-next-line security/detect-unsafe-regex, unicorn/no-unsafe-regex\n    if (!options.tag || !options.tag.match(/^([a-z0-9]+-)+[a-z0-9]+$/)) {\n        throw new Error(`Invalid options.tag: ${ options.tag }`);\n    }\n\n    validatePropDefinitions(options);\n\n    if (options.dimensions) {\n        if (options.dimensions && !isPx(options.dimensions.width) && !isPerc(options.dimensions.width)) {\n            throw new Error(`Expected options.dimensions.width to be a px or % string value`);\n        }\n\n        if (options.dimensions && !isPx(options.dimensions.height) && !isPerc(options.dimensions.height)) {\n            throw new Error(`Expected options.dimensions.height to be a px or % string value`);\n        }\n    }\n\n    if (options.defaultContext) {\n        if (options.defaultContext !== CONTEXT.IFRAME && options.defaultContext !== CONTEXT.POPUP) {\n            throw new Error(`Unsupported context type: ${ options.defaultContext || 'unknown' }`);\n        }\n    }\n\n    if (!options.url) {\n        throw new Error(`Must pass url`);\n    }\n\n    if (typeof options.url !== 'string' && typeof options.url !== 'function') {\n        throw new TypeError(`Expected url to be string or function`);\n    }\n\n    if (options.prerenderTemplate && typeof options.prerenderTemplate !== 'function') {\n        throw new Error(`Expected options.prerenderTemplate to be a function`);\n    }\n\n    if (options.containerTemplate && typeof options.containerTemplate !== 'function') {\n        throw new Error(`Expected options.containerTemplate to be a function`);\n    }\n}\n","/* @flow */\n\nimport { ZalgoPromise } from 'zalgo-promise/src';\nimport { once, noop } from 'belter/src';\nimport { isWindow, type CrossDomainWindowType } from 'cross-domain-utils/src';\nimport { ProxyWindow } from 'post-robot/src/serialize/window';\n\nimport { PROP_SERIALIZATION } from '../constants';\n\nexport type EventHandlerType<T> = (T) => void | ZalgoPromise<void>;\n\nexport type timeoutPropType = number;\nexport type windowPropType = CrossDomainWindowType | ProxyWindow;\nexport type closePropType = () => ZalgoPromise<void>;\nexport type focusPropType = () => ZalgoPromise<void>;\nexport type resizePropType = ({ width : ?number, height : ?number }) => ZalgoPromise<void>;\n\nexport type onDisplayPropType = EventHandlerType<void>;\nexport type onRenderedPropType = EventHandlerType<void>;\nexport type onRenderPropType = EventHandlerType<void>;\nexport type onClosePropType = EventHandlerType<void>;\nexport type onErrorPropType = EventHandlerType<mixed>;\nexport type onChangePropType<P> = ((PropsType<P>) => void) => void; // eslint-disable-line no-use-before-define\n\nexport type PropsInputType<P> = {\n    timeout? : timeoutPropType,\n    window? : windowPropType,\n\n    onDisplay? : onDisplayPropType,\n    onRendered? : onRenderedPropType,\n    onRender? : onRenderPropType,\n    onClose? : onClosePropType,\n    onError? : onErrorPropType\n} & P;\n\nexport type PropsType<P> = {|\n    timeout? : timeoutPropType,\n    window? : ?windowPropType,\n    close? : ?closePropType,\n    focus? : ?focusPropType,\n    resize? : ?resizePropType,\n\n    onDisplay : onDisplayPropType,\n    onRendered : onRenderedPropType,\n    onRender : onRenderPropType,\n    onClose : onClosePropType,\n    onError : onErrorPropType,\n    onChange : onChangePropType<P>\n|} & P;\n\ntype PropDefinitionType<T, P, S : string> = {|\n    type : S,\n    alias? : string,\n    value? : ({ props : P, state : Object, close : () => ZalgoPromise<void>, focus : () => ZalgoPromise<void>, onError : (mixed) => ZalgoPromise<void> }) => ?T,\n    required? : boolean,\n    queryParam? : boolean | string | ({ value : T }) => (string | ZalgoPromise<string>),\n    queryValue? : ({ value : T }) => (ZalgoPromise<mixed> | mixed),\n    sendToChild? : boolean,\n    allowDelegate? : boolean,\n    validate? : ({ value : T, props : PropsInputType<P> }) => void,\n    decorate? : ({ value : T, props : PropsType<P>, state : Object, close : () => ZalgoPromise<void>, focus : () => ZalgoPromise<void>, onError : (mixed) => ZalgoPromise<void> }) => T,\n    default? : ({ props : P, state : Object }) => ?T,\n    sameDomain? : boolean,\n    serialization? : $Values<typeof PROP_SERIALIZATION>,\n    childDecorate? : ({ value : T, close : () => ZalgoPromise<void>, focus : () => ZalgoPromise<void>, onError : (mixed) => ZalgoPromise<void>, onPropsChange : ((PropsType<P>) => void) => void, resize : ({ width : ?number, height : ?number }) => ZalgoPromise<void> }) => ?T\n|};\n\nexport type BooleanPropDefinitionType<T : boolean, P> = PropDefinitionType<T, P, 'boolean'>;\nexport type StringPropDefinitionType<T : string, P> = PropDefinitionType<T, P, 'string'>;\nexport type NumberPropDefinitionType<T : number, P> = PropDefinitionType<T, P, 'number'>;\nexport type FunctionPropDefinitionType<T : Function, P> = PropDefinitionType<T, P, 'function'>;\nexport type ArrayPropDefinitionType<T : Array<*>, P> = PropDefinitionType<T, P, 'array'>; // eslint-disable-line flowtype/no-mutable-array\nexport type ObjectPropDefinitionType<T : Object, P> = PropDefinitionType<T, P, 'object'>;\n\nexport type MixedPropDefinitionType<P> = BooleanPropDefinitionType<*, P> | StringPropDefinitionType<*, P> | NumberPropDefinitionType<*, P> | FunctionPropDefinitionType<*, P> | ObjectPropDefinitionType<*, P> | ArrayPropDefinitionType<*, P>;\n\nexport type UserPropsDefinitionType<P> = {\n    [string] : MixedPropDefinitionType<P>\n};\n\n// eslint-disable-next-line flowtype/require-exact-type\nexport type BuiltInPropsDefinitionType<P> = {\n    timeout : NumberPropDefinitionType<timeoutPropType, P>,\n    window : ObjectPropDefinitionType<windowPropType, P>,\n    close : FunctionPropDefinitionType<closePropType, P>,\n    focus : FunctionPropDefinitionType<focusPropType, P>,\n    resize : FunctionPropDefinitionType<resizePropType, P>,\n\n    onDisplay : FunctionPropDefinitionType<onDisplayPropType, P>,\n    onRendered : FunctionPropDefinitionType<onRenderedPropType, P>,\n    onRender : FunctionPropDefinitionType<onRenderPropType, P>,\n    onClose : FunctionPropDefinitionType<onClosePropType, P>,\n    onError : FunctionPropDefinitionType<onErrorPropType, P>,\n    onChange : FunctionPropDefinitionType<onChangePropType<P>, P>\n};\n\nexport function getInternalProps<P>() : BuiltInPropsDefinitionType<P> {\n    return {\n        window: {\n            type:          'object',\n            sendToChild:   false,\n            required:      false,\n            allowDelegate: true,\n            validate({ value } : { value : CrossDomainWindowType | ProxyWindow }) {\n                if (!isWindow(value) && !ProxyWindow.isProxyWindow(value)) {\n                    throw new Error(`Expected Window or ProxyWindow`);\n                }\n            },\n            decorate({ value } : { value : CrossDomainWindowType | ProxyWindow }) : ProxyWindow {\n                return ProxyWindow.toProxyWindow(value);\n            }\n        },\n\n        timeout: {\n            type:        'number',\n            required:    false,\n            sendToChild: false\n        },\n\n        close: {\n            type:          'function',\n            required:      false,\n            sendToChild:   false,\n            childDecorate: ({ close }) => {\n                return close;\n            }\n        },\n\n        focus: {\n            type:          'function',\n            required:      false,\n            sendToChild:   false,\n            childDecorate: ({ focus }) => {\n                return focus;\n            }\n        },\n\n        resize: {\n            type:          'function',\n            required:      false,\n            sendToChild:   false,\n            childDecorate: ({ resize }) => {\n                return resize;\n            }\n        },\n\n        onDisplay: {\n            type:          'function',\n            required:      false,\n            sendToChild:   false,\n            allowDelegate: true,\n            default:       () => noop,\n            decorate:      ({ value }) => once(value)\n        },\n\n        onRendered: {\n            type:        'function',\n            required:    false,\n            sendToChild: false,\n            default:     () => noop,\n            decorate:    ({ value }) => once(value)\n        },\n\n        onRender: {\n            type:        'function',\n            required:    false,\n            sendToChild: false,\n            default:     () => noop,\n            decorate:    ({ value }) => once(value)\n        },\n\n        onClose: {\n            type:          'function',\n            required:      false,\n            sendToChild:   false,\n            allowDelegate: true,\n            default:       () => noop,\n            decorate:      ({ value }) => once(value)\n        },\n\n        onError: {\n            type:          'function',\n            required:      false,\n            sendToChild:   false,\n            childDecorate: ({ onError }) => {\n                return function childOnError(err : mixed) : ZalgoPromise<void> {\n                    return onError(err);\n                };\n            }\n        },\n\n        onChange: {\n            type:          'function',\n            required:      false,\n            sendToChild:   false,\n            childDecorate: ({ onPropsChange }) => {\n                return onPropsChange;\n            }\n        }\n    };\n}\n","/* @flow */\n\nexport { PopupOpenError } from 'belter/src';\nexport { create, destroyAll, Component } from './component';\nexport type { ZoidComponent } from './component';\nexport { PROP_TYPE, PROP_SERIALIZATION, CONTEXT, CLASS } from './constants';\n"],"sourceRoot":""}