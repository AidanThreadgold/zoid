{"version":3,"sources":["webpack://zoid/webpack/universalModuleDefinition","webpack://zoid/webpack/bootstrap","webpack://zoid/./node_modules/@babel/runtime/helpers/esm/extends.js","webpack://zoid/./node_modules/zalgo-promise/src/utils.js","webpack://zoid/./node_modules/zalgo-promise/src/exceptions.js","webpack://zoid/./node_modules/zalgo-promise/src/flush.js","webpack://zoid/./node_modules/zalgo-promise/src/promise.js","webpack://zoid/./node_modules/cross-domain-utils/src/util.js","webpack://zoid/./node_modules/cross-domain-utils/src/constants.js","webpack://zoid/./node_modules/cross-domain-utils/src/utils.js","webpack://zoid/./node_modules/cross-domain-safe-weakmap/src/util.js","webpack://zoid/./node_modules/cross-domain-safe-weakmap/src/weakmap.js","webpack://zoid/./node_modules/belter/src/util.js","webpack://zoid/./node_modules/belter/src/dom.js","webpack://zoid/./node_modules/cross-domain-safe-weakmap/src/native.js","webpack://zoid/./node_modules/belter/src/css.js","webpack://zoid/./node_modules/post-robot/src/conf/config.js","webpack://zoid/./node_modules/post-robot/src/conf/constants.js","webpack://zoid/./node_modules/post-robot/src/global.js","webpack://zoid/./node_modules/post-robot/src/lib/hello.js","webpack://zoid/./node_modules/post-robot/src/lib/windows.js","webpack://zoid/./node_modules/universal-serialize/src/constants.js","webpack://zoid/./node_modules/universal-serialize/src/common.js","webpack://zoid/./node_modules/universal-serialize/src/serialize.js","webpack://zoid/./node_modules/universal-serialize/src/serializers/function.js","webpack://zoid/./node_modules/universal-serialize/src/serializers/error.js","webpack://zoid/./node_modules/universal-serialize/src/serializers/promise.js","webpack://zoid/./node_modules/universal-serialize/src/serializers/regex.js","webpack://zoid/./node_modules/universal-serialize/src/serializers/date.js","webpack://zoid/./node_modules/universal-serialize/src/serializers/array.js","webpack://zoid/./node_modules/universal-serialize/src/serializers/object.js","webpack://zoid/./node_modules/universal-serialize/src/serializers/string.js","webpack://zoid/./node_modules/universal-serialize/src/serializers/number.js","webpack://zoid/./node_modules/universal-serialize/src/serializers/boolean.js","webpack://zoid/./node_modules/universal-serialize/src/serializers/null.js","webpack://zoid/./node_modules/universal-serialize/src/deserialize.js","webpack://zoid/./node_modules/post-robot/src/bridge/common.js","webpack://zoid/./node_modules/post-robot/src/bridge/parent.js","webpack://zoid/./node_modules/post-robot/src/bridge/setup.js","webpack://zoid/./node_modules/post-robot/src/bridge/bridge.js","webpack://zoid/./node_modules/post-robot/src/bridge/child.js","webpack://zoid/./node_modules/post-robot/src/serialize/window.js","webpack://zoid/./node_modules/post-robot/src/serialize/function.js","webpack://zoid/./node_modules/post-robot/src/serialize/serialize.js","webpack://zoid/./node_modules/post-robot/src/serialize/promise.js","webpack://zoid/./node_modules/post-robot/src/drivers/send/strategies.js","webpack://zoid/./node_modules/post-robot/src/drivers/send/index.js","webpack://zoid/./node_modules/post-robot/src/lib/compat.js","webpack://zoid/./node_modules/post-robot/src/drivers/listeners.js","webpack://zoid/./node_modules/post-robot/src/drivers/receive/types.js","webpack://zoid/./node_modules/post-robot/src/index.js","webpack://zoid/./node_modules/post-robot/src/drivers/receive/index.js","webpack://zoid/./node_modules/post-robot/src/public/on.js","webpack://zoid/./node_modules/post-robot/src/public/send.js","webpack://zoid/./node_modules/post-robot/src/setup.js","webpack://zoid/./node_modules/post-robot/src/clean.js","webpack://zoid/./src/lib/global.js","webpack://zoid/./src/lib/serialize.js","webpack://zoid/./src/constants.js","webpack://zoid/./src/child/props.js","webpack://zoid/./src/child/window.js","webpack://zoid/./src/child/index.js","webpack://zoid/./src/parent/drivers.js","webpack://zoid/./src/parent/props.js","webpack://zoid/./src/parent/index.js","webpack://zoid/./src/delegate/index.js","webpack://zoid/./node_modules/@babel/runtime/helpers/esm/inheritsLoose.js","webpack://zoid/./node_modules/jsx-pragmatic/src/node.js","webpack://zoid/./node_modules/jsx-pragmatic/src/renderers/dom.js","webpack://zoid/./src/component/templates/container.jsx","webpack://zoid/./src/component/templates/component.jsx","webpack://zoid/./src/component/props.js","webpack://zoid/./src/component/component.js","webpack://zoid/./src/component/validate.js","webpack://zoid/./src/index.js"],"names":["root","factory","exports","module","define","amd","self","this","installedModules","__webpack_require__","moduleId","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","_extends","assign","target","arguments","length","source","apply","isPromise","item","Promise","window","Window","constructor","toString","then","err","flushPromise","dispatchedErrors","possiblyUnhandledPromiseHandlers","activeCount","flushActive","promise","resolve","startActive","endActive","ZalgoPromise","handler","_this","resolved","rejected","errorHandled","error","handlers","dispatching","stack","result","isAsync","res","reject","_proto","Error","dispatch","_this2","setTimeout","indexOf","push","j","dispatchPossiblyUnhandledError","asyncReject","_this3","_loop","_handlers$i","onSuccess","onError","catch","undefined","finally","onFinally","try","timeout","time","_this4","clearTimeout","toPromise","TypeError","all","promises","count","results","_loop2","prom","hash","keys","map","items","method","onPossiblyUnhandledException","cancel","splice","context","args","delay","flush","isRegex","PROTOCOL","MOCK","FILE","ABOUT","WILDCARD","WINDOW_TYPE","IFRAME","POPUP","IE_WIN_ACCESS_ERROR","isAboutProtocol","win","location","protocol","getParent","parent","getOpener","opener","canReadFromWindow","href","getActualDomain","host","getDomain","domain","mockDomain","isActuallySameDomain","desc","getOwnPropertyDescriptor","isSameDomain","assertSameDomain","isAncestorParent","child","childParent","getParents","getFrames","frames","len","frame","getAllChildFrames","_i3","_getFrames2","_i5","_getAllChildFrames2","childFrame","getTop","top","_i7","_getAllChildFrames4","getAllFramesInWindow","concat","iframeWindows","iframeFrames","isWindowClosed","allowMock","closed","message","mockclosed","iframeIndex","collection","safeIndexOf","contentWindow","parentNode","doc","ownerDocument","documentElement","contains","isFrameWindowClosed","getUserAgent","navigator","mockUserAgent","userAgent","getFrameByName","winFrames","_i9","isOpener","getAncestor","anyMatch","collection1","collection2","_i17","item1","_i19","getDistanceFromTop","distance","isSameTopWindow","win1","win2","top1","top2","allFrames1","allFrames2","opener1","opener2","matchDomain","pattern","origin","Array","isArray","Boolean","match","JSON","stringify","some","subpattern","getDomainFromUrl","url","split","slice","join","onCloseWindow","callback","maxtime","Infinity","check","isWindow","obj","__cross_domain_utils_window_check__","normalizeMockUrl","objectIDs","awaitFrameLoadPromises","counter","Date","now","CrossDomainSafeWeakMap","weakmap","values","Math","random","WeakMap","freeze","testWeakMap","testKey","set","hasNativeWeakMap","_cleanupClosedWindows","delete","isSafeToReadWrite","entry","writable","index","has","getOrSet","base64encode","str","btoa","Buffer","from","uniqueID","chars","replace","charAt","floor","toISOString","toLowerCase","serializeArgs","subkey","val","uid","getObjectID","inlineMemoize","logic","cache","__inline_memoize_cache__","noop","once","called","stringifyError","level","newErr","extend","isDefined","cleanup","tasks","cleaned","register","task","pop","assertExists","thing","isDocumentReady","document","body","readyState","urlEncode","waitForDocumentReady","interval","setInterval","clearInterval","parseQuery","queryString","params","_i2","_queryString$split2","pair","decodeURIComponent","extendQuery","originalQuery","props","filter","appendChild","container","isElement","element","Element","nodeType","style","getElementSafe","id","querySelector","elementReady","el","PopupOpenError","awaitFrameLoad","addEventListener","cleanIframes","linkFrameWindow","awaitFrameWindow","loadedFrame","iframe","options","attempts","attributes","tag","styleText","createElement","class","className","setAttribute","_i6","_Object$keys2","styleSheet","cssText","createTextNode","html","innerHTML","frameBorder","allowTransparency","backgroundColor","getElement","removeChild","event","removeEventListener","destroyElement","isElementClosed","onResize","_temp","_ref2","_ref2$width","width","_ref2$height","height","_ref2$interval","_ref2$win","currentWidth","offsetWidth","currentHeight","offsetHeight","observer","newWidth","newHeight","ResizeObserver","observe","MutationObserver","childList","subtree","characterData","loop","disconnect","isPerc","test","isPx","toNum","parseInt","toPx","toCSS","normalizeDimension","dim","max","CHILD_WINDOW_TIMEOUT","ACK_TIMEOUT","ACK_TIMEOUT_KNOWN","RES_TIMEOUT","MESSAGE_TYPE","REQUEST","RESPONSE","ACK","MESSAGE_NAME","METHOD","HELLO","OPEN_TUNNEL","BRIDGE_NAME_PREFIX","SERIALIZATION_TYPE","CROSS_DOMAIN_ZALGO_PROMISE","CROSS_DOMAIN_FUNCTION","CROSS_DOMAIN_WINDOW","getGlobal","getObj","globalStore","defStore","store","storeKey","defVal","del","reset","WildCard","getWildcard","global","WINDOW_WILDCARD","windowStore","winStore","getStore","getInstanceID","getHelloPromise","sayHello","_ref3","send","instanceID","_ref4","data","getWindowInstanceID","_ref5","_ref6","awaitWindowHello","markWindowKnown","TYPE","FUNCTION","ERROR","PROMISE","REGEX","DATE","ARRAY","OBJECT","STRING","NUMBER","BOOLEAN","NULL","UNDEFINED","isSerializedType","__type__","determineType","serializeType","type","__val__","SERIALIZER","_SERIALIZER","_ref","code","toJSON","defaultSerializers","DESERIALIZER","_DESERIALIZER","RegExp","defaultDeserializers","needsBridgeForBrowser","needsBridgeForWin","needsBridgeForDomain","needsBridge","getBridgeName","sanitizedDomain","isBridge","documentBodyReady","registerRemoteWindow","findRemoteWindow","remoteWinPromise","registerRemoteSendMessage","sendMessage","remoteWin","remoteDomain","fireAndForget","rejectRemoteSendMessage","linkWindow","popupWindowsByName","popupWindowsByWin","_popupWindowsByName$k2","winName","details","setupBridge","windowOpen","on","receiveMessage","open","last","bridgePromise","bridge","winDetails","listenForOpenTunnel","openTunnelToParent","canary","tunnelWindows","parentWindow","_tunnelWindows$keys2","tunnelWindow","cleanTunnelWindows","addTunnelWindow","setupOpenTunnelToParent","openTunnelToOpener","cleanupProxyWindows","idToProxyWindow","_idToProxyWindow$keys2","shouldClean","ProxyWindow","serializedWindow","actualWindow","isProxyWindow","actualWindowPromise","setWindow","memoizedPromiseFunction","_len2","_key2","memoizePromise","getType","isPopup","isIframe","setLocation","setName","frameElement","close","focus","isClosed","_this5","getWindow","awaitWindow","matchWindow","_this6","unwrap","serialize","toProxyWindow","deserialize","addMethod","methodStore","proxyWindowMethods","lookupMethod","serializeFunction","destination","meth","methodSource","listenForFunctionCalls","__id__","__name__","serializeMessage","_serialize","serializers","serializer","serializePromise","serializeWindow","deserializeMessage","_deserialize","deserializers","parse","deserializer","serializedPromise","serializedFunction","getDeserializedFunction","opts","crossDomainFunctionWrapper","_arguments","__origin__","__source__","deserializeFunction","_ref7","deserializeWindow","SEND_MESSAGE_STRATEGIES","_serializeMessage","serializedMessage","success","strategyName","dom","forEach","postMessage","messagingChild","messagingParent","sendBridgeMessage","foreignGlobal","__DOMAIN_REGEX__","getResponseListener","deleteResponseListener","isResponseListenerErrored","getRequestListener","requestListeners","winQualifier","nameListeners","domainListeners","_i4","_domainListeners$__DO2","_domainListeners$__DO3","regex","listener","RECEIVE_MESSAGE_TYPES","_RECEIVE_MESSAGE_TYPE","sendResponse","ack","response","pathname","handleError","receivedMessages","parsedMessage","parseMessage","requestListener","addRequestListener","listenersCollection","_win2","_i8","_i10","_domain2","_i12","existingListener","regexListeners","regexListener","strDomain","errorHandler","responseTimeout","childTimeout","reqPromises","requestPromise","actualParent","_i15","_getFrames8","isAncestor","hasResult","markResponseListenerErrored","responseListener","addResponseListener","totalAckTimeout","isWindowKnown","totalResTimeout","ackTimeout","resTimeout","cycleTime","cycle","min","internalSerializeMessage","internalDeserializeMessage","cleanUpWindow","_requestPromises$get2","globalFor","getProxyElement","resize","openBridge","bridges","bridgeFrames","src","openBridgeFrame","linkUrl","hasBridge","destroyBridges","_bridgeFrames$keys2","initialized","messageEvent","sourceElement","originalEvent","messageListener","listenForMessages","initHello","setup","ZOID","POST_MESSAGE","PROP_TYPE","PROP_SERIALIZATION","DOTIFY","BASE64","CONTEXT","DEFAULT_DIMENSIONS","WIDTH","HEIGHT","EVENT","RENDER","RENDERED","DISPLAY","CLOSE","PROPS","normalizeChildProp","component","helpers","prop","getPropDefinition","childDecorate","parseChildWindowName","windowName","_windowName$split","zoidcomp","encodedPayload","atob","base64decode","getChildPayload","ChildComponent","parentComponentWindow","onPropHandlers","autoResize","childPayload","getParentComponentWindow","checkParentDomain","initialProps","getPropsByRef","setProps","watchForClose","init","buildExports","watchForResize","getHelpers","onProps","allowedParentDomains","ref","getNthParent","ancestor","_getAllFramesInWindow2","windows","getProps","isUpdate","existingProps","sameDomain","alias","_component$getPropNam2","getPropNames","normalizeChildProps","_this$onPropHandlers2","checkClose","destroy","getAutoResize","_ref3$width","_ref3$height","_ref3$element","_this4$getAutoResize","updateProps","RENDER_DRIVERS","getQueryParam","queryParam","getQueryValue","queryValue","openOnClick","openFrame","title","proxyFrame","frameWatcher","clean","openPrerenderFrame","openPrerender","proxyWin","proxyPrerenderFrame","prerenderFrame","prerenderFrameWindow","delegate","proxyContainer","_this3$component$dime","dimensions","_options","left","outerWidth","round","screenX","screen","outerHeight","screenY","status","toolbar","menubar","resizable","scrollbars","popup","ParentComponent","driver","initPromise","handledErrors","state","setupEvents","registerActiveComponent","destroyActiveComponent","watchForUnload","triggered","eventName","handlerList","cancelled","trigger","_len3","_key3","triggerOnce","_len4","_key4","onRender","onDisplay","onRendered","onClose","render","log","initialDomain","getInitialDomain","checkAllowRender","buildUrl","getProxyContainer","renderContainer","setState","setProxyWin","prerender","proxyPrerenderWin","loadUrl","setWindowName","buildWindowName","runTimeout","containerElement","buildChildPayload","getPropsRef","getPropsForChild","propRef","_ref7$target","getWindowRef","buildParentExports","_ref8","validate","instance","propNames","aliases","propDef","default","_Object$keys4","decorate","normalizeProps","_this$component$getPr2","required","propsDef","builtinProps","serialization","dotify","prefix","newobj","every","_Object$keys6","dotkey","query","originalUrl","originalHash","_url$split","_originalUrl$split","hashString","extendUrl","getUrl","sendToChild","_this7","_this8","_this9","_this10","windowProp","_this11","_this12","_this13","_this$component$getPr4","propName","allowDelegate","overridesPromise","overrides","_ref9","_this$driver$delegate2","_this14","_this15","closeWindowListener","_this16","unloadWindowListener","_this17","initChild","_this18","_this19","_ref10","_ref11","_this20","_this21","secondClosed","_this22","_ref12","_this23","prerenderTemplate","prerenderWindow","isBlankDomain","renderTemplate","tagName","children","writeElementToWindow","_ref13","_ref13$width","_ref13$height","_ref13$element","_ref14","renderer","_ref15","_this24","_ref16","_this25","_ref17","innerContainer","containerTemplate","_this26","_this27","_this28","bridgeUrl","getBridgeUrl","bridgeDomain","DelegateComponent","watchForSourceClose","getDelegate","getOverrides","closeSourceWindowListener","_inheritsLoose","subClass","superClass","__proto__","Node","isElementNode","isTextNode","isFragmentNode","ElementNode","_Node","_proto2","getTag","isTag","getText","TextNode","_Node2","text","_proto3","FragmentNode","_Node3","_proto4","normalizeChild","normalizeChildren","normalizedChild","_normalizedChild$chil2","subchild","node","_len","_key","ELEMENT_TAG","ELEMENT_PROP","CREATE_ELEMENT","_CREATE_ELEMENT","ADD_CHILDREN","_ADD_CHILDREN","firstChild","docElement","domRenderer","_ref9$doc","addProps","_el$querySelectorAll2","querySelectorAll","script","newScript","textContent","replaceChild","fixScripts","addChildren","CLASS","VISIBLE","INVISIBLE","defaultContainerTemplate","_ref$dimensions","classList","add","remove","defaultPrerenderTemplate","defaultNoop","decorateOnce","Component","defaultContext","driverCache","xprops","logger","PROP_TYPE_LIST","validatePropDefinitions","components","_ref$width","_ref$height","debug","info","warn","registerChild","listenDelegate","dep","isChild","_ref2$data","canRenderTo","payload","getDefaultContainer","getDefaultContext","renderTo","activeComponents","destroyAll","__webpack_exports__","component_destroyAll","component_Component"],"mappings":"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","file":"zoid.min.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"zoid\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"zoid\"] = factory();\n\telse\n\t\troot[\"zoid\"] = factory();\n})((typeof self !== 'undefined' ? self : this), function() {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 0);\n","export default function _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}","/* @flow */\n\nexport function isPromise(item : mixed) : boolean {\n    try {\n        if (!item) {\n            return false;\n        }\n\n        if (typeof Promise !== 'undefined' && item instanceof Promise) {\n            return true;\n        }\n\n        if (typeof window !== 'undefined' && window.Window && item instanceof window.Window) {\n            return false;\n        }\n\n        if (typeof window !== 'undefined' && window.constructor && item instanceof window.constructor) {\n            return false;\n        }\n\n        let toString = ({}).toString;\n\n        if (toString) {\n            let name = toString.call(item);\n\n            if (name === '[object Window]' || name === '[object global]' || name === '[object DOMWindow]') {\n                return false;\n            }\n        }\n\n        if (typeof item.then === 'function') {\n            return true;\n        }\n    } catch (err) {\n        return false;\n    }\n\n    return false;\n}\n","/* @flow */\n\nimport type { ZalgoPromise } from './promise';\n\nconst dispatchedErrors = [];\nconst possiblyUnhandledPromiseHandlers = [];\n\nexport function dispatchPossiblyUnhandledError<T>(err : mixed, promise : ZalgoPromise<T>) {\n\n    if (dispatchedErrors.indexOf(err) !== -1) {\n        return;\n    }\n\n    dispatchedErrors.push(err);\n\n    setTimeout(() => {\n        if (__DEBUG__) {\n            // $FlowFixMe\n            throw new Error(`${ err.stack || err.toString() }\\n\\nFrom promise:\\n\\n${ promise.stack }`);\n        }\n\n        throw err;\n    }, 1);\n\n    for (let j = 0; j < possiblyUnhandledPromiseHandlers.length; j++) {\n        // $FlowFixMe\n        possiblyUnhandledPromiseHandlers[j](err, promise);\n    }\n}\n\nexport function onPossiblyUnhandledException(handler : (mixed, promise? : ZalgoPromise<*>) => void) : { cancel : () => void } {\n    possiblyUnhandledPromiseHandlers.push(handler);\n\n    return {\n        cancel() {\n            possiblyUnhandledPromiseHandlers.splice(possiblyUnhandledPromiseHandlers.indexOf(handler), 1);\n        }\n    };\n}\n","/* @flow */\n\nimport type { ZalgoPromise } from './promise';\n\nlet activeCount = 0;\nlet flushPromise;\n\nfunction flushActive() {\n    if (!activeCount && flushPromise) {\n        const promise = flushPromise;\n        flushPromise = null;\n        promise.resolve();\n    }\n}\n\nexport function startActive() {\n    activeCount += 1;\n}\n\nexport function endActive() {\n    activeCount -= 1;\n    flushActive();\n}\n\nexport function awaitActive(Zalgo : Class<ZalgoPromise<*>>) : ZalgoPromise<void> { // eslint-disable-line no-undef\n    let promise = flushPromise = flushPromise || new Zalgo();\n    flushActive();\n    return promise;\n}\n","/* @flow */\n\nimport { isPromise } from './utils';\nimport { onPossiblyUnhandledException, dispatchPossiblyUnhandledError } from './exceptions';\nimport { startActive, endActive, awaitActive } from './flush';\n\nexport class ZalgoPromise<R : mixed> {\n\n    resolved : boolean\n    rejected : boolean\n    errorHandled : boolean\n    value : R\n    error : mixed\n    handlers : Array<{\n        promise : ZalgoPromise<*>,\n        onSuccess : void | (result : R) => mixed,\n        onError : void | (error : mixed) => mixed\n    }>\n    dispatching : boolean\n    stack : string\n\n    constructor(handler : ?(resolve : (result : R) => void, reject : (error : mixed) => void) => void) {\n\n        this.resolved = false;\n        this.rejected = false;\n        this.errorHandled = false;\n\n        this.handlers = [];\n\n        if (handler) {\n\n            let result;\n            let error;\n            let resolved = false;\n            let rejected = false;\n            let isAsync = false;\n\n            startActive();\n\n            try {\n                handler(res => {\n                    if (isAsync) {\n                        this.resolve(res);\n                    } else {\n                        resolved = true;\n                        result = res;\n                    }\n\n                }, err => {\n                    if (isAsync) {\n                        this.reject(err);\n                    } else {\n                        rejected = true;\n                        error = err;\n                    }\n                });\n\n            } catch (err) {\n                endActive();\n                this.reject(err);\n                return;\n            }\n\n            endActive();\n\n            isAsync = true;\n\n            if (resolved) {\n                // $FlowFixMe\n                this.resolve(result);\n            } else if (rejected) {\n                this.reject(error);\n            }\n        }\n\n        if (__DEBUG__) {\n            try {\n                throw new Error(`ZalgoPromise`);\n            } catch (err) {\n                this.stack = err.stack;\n            }\n        }\n    }\n\n    resolve(result : R) : ZalgoPromise<R> {\n        if (this.resolved || this.rejected) {\n            return this;\n        }\n\n        if (isPromise(result)) {\n            throw new Error('Can not resolve promise with another promise');\n        }\n\n        this.resolved = true;\n        this.value = result;\n        this.dispatch();\n\n        return this;\n    }\n\n    reject(error : mixed) : ZalgoPromise<R> {\n        if (this.resolved || this.rejected) {\n            return this;\n        }\n\n        if (isPromise(error)) {\n            throw new Error('Can not reject promise with another promise');\n        }\n\n        if (!error) {\n            let err = (error && typeof error.toString === 'function' ? error.toString() : Object.prototype.toString.call(error));\n            error = new Error(`Expected reject to be called with Error, got ${ err }`);\n        }\n\n        this.rejected = true;\n        this.error = error;\n\n        if (!this.errorHandled) {\n            setTimeout(() => {\n                if (!this.errorHandled) {\n                    dispatchPossiblyUnhandledError(error, this);\n                }\n            }, 1);\n        }\n\n        this.dispatch();\n\n        return this;\n    }\n\n    asyncReject(error : mixed) : ZalgoPromise<R> {\n        this.errorHandled = true;\n        this.reject(error);\n        return this;\n    }\n    \n    dispatch() {\n\n        let { dispatching, resolved, rejected, handlers } = this;\n\n        if (dispatching) {\n            return;\n        }\n\n        if (!resolved && !rejected) {\n            return;\n        }\n\n        this.dispatching = true;\n        startActive();\n\n        for (let i = 0; i < handlers.length; i++) {\n\n            let { onSuccess, onError, promise } = handlers[i];\n\n            let result;\n\n            if (resolved) {\n\n                try {\n                    result = onSuccess ? onSuccess(this.value) : this.value;\n                } catch (err) {\n                    promise.reject(err);\n                    continue;\n                }\n\n            } else if (rejected) {\n\n                if (!onError) {\n                    promise.reject(this.error);\n                    continue;\n                }\n\n                try {\n                    result = onError(this.error);\n                } catch (err) {\n                    promise.reject(err);\n                    continue;\n                }\n            }\n\n            if (result instanceof ZalgoPromise && (result.resolved || result.rejected)) {\n\n                if (result.resolved) {\n                    promise.resolve(result.value);\n                } else {\n                    promise.reject(result.error);\n                }\n\n                result.errorHandled = true;\n\n            } else if (isPromise(result)) {\n\n                if (result instanceof ZalgoPromise && (result.resolved || result.rejected)) {\n                    if (result.resolved) {\n                        promise.resolve(result.value);\n                    } else {\n                        promise.reject(result.error);\n                    }\n\n                } else {\n                    // $FlowFixMe\n                    result.then(res => {\n                        promise.resolve(res);\n                    }, err => {\n                        promise.reject(err);\n                    });\n                }\n\n            } else {\n\n                promise.resolve(result);\n            }\n        }\n\n        handlers.length = 0;\n        this.dispatching = false;\n        endActive();\n    }\n\n    then<X : mixed, Y : mixed>(onSuccess : void | (result : R) => (ZalgoPromise<X> | Y), onError : void | (error : mixed) => (ZalgoPromise<X> | Y)) : ZalgoPromise<X | Y> {\n\n        if (onSuccess && typeof onSuccess !== 'function' && !onSuccess.call) {\n            throw new Error('Promise.then expected a function for success handler');\n        }\n\n        if (onError && typeof onError !== 'function' && !onError.call) {\n            throw new Error('Promise.then expected a function for error handler');\n        }\n\n        let promise : ZalgoPromise<X | Y> = new ZalgoPromise();\n\n        this.handlers.push({\n            promise,\n            onSuccess,\n            onError\n        });\n\n        this.errorHandled = true;\n\n        this.dispatch();\n\n        return promise;\n    }\n\n    catch<X : mixed, Y : mixed>(onError : (error : mixed) => ZalgoPromise<X> | Y) : ZalgoPromise<X | Y> {\n        return this.then(undefined, onError);\n    }\n\n    finally(onFinally : () => mixed) : ZalgoPromise<R> {\n\n        if (onFinally && typeof onFinally !== 'function' && !onFinally.call) {\n            throw new Error('Promise.finally expected a function');\n        }\n\n        return this.then((result) => {\n            return ZalgoPromise.try(onFinally)\n                .then(() => {\n                    return result;\n                });\n        }, (err) => {\n            return ZalgoPromise.try(onFinally)\n                .then(() => {\n                    throw err;\n                });\n        });\n    }\n\n    timeout(time : number, err : ?Error) : ZalgoPromise<R> {\n\n        if (this.resolved || this.rejected) {\n            return this;\n        }\n\n        let timeout = setTimeout(() => {\n\n            if (this.resolved || this.rejected) {\n                return;\n            }\n\n            this.reject(err || new Error(`Promise timed out after ${ time }ms`));\n\n        }, time);\n\n        return this.then(result => {\n            clearTimeout(timeout);\n            return result;\n        });\n    }\n\n    // $FlowFixMe\n    toPromise() : Promise<R> {\n        // $FlowFixMe\n        if (typeof Promise === 'undefined') {\n            throw new TypeError(`Could not find Promise`);\n        }\n        // $FlowFixMe\n        return Promise.resolve(this); // eslint-disable-line compat/compat\n    }\n\n    static resolve<X : mixed>(value : X | ZalgoPromise<X>) : ZalgoPromise<X> {\n\n        if (value instanceof ZalgoPromise) {\n            return value;\n        }\n\n        if (isPromise(value)) {\n            // $FlowFixMe\n            return new ZalgoPromise((resolve, reject) => value.then(resolve, reject));\n        }\n\n        return new ZalgoPromise().resolve(value);\n    }\n\n    static reject(error : mixed) : ZalgoPromise<R> {\n        return new ZalgoPromise().reject(error);\n    }\n\n    static asyncReject(error : mixed) : ZalgoPromise<R> {\n        return new ZalgoPromise().asyncReject(error);\n    }\n\n    static all<X : [*] | [*, *] | [*, *, *] | [*, *, *, *] | [*, *, *, *, *] | [*, *, *, *, *, *] | [*, *, *, *, *, *, *] | [*, *, *, *, *, *, *, *] | [*, *, *, *, *, *, *, *, *] | Array<mixed>>(promises : X) : ZalgoPromise<$TupleMap<X, <Y>(ZalgoPromise<Y> | Y) => Y>> { // eslint-disable-line no-undef\n\n        let promise = new ZalgoPromise();\n        let count = promises.length;\n        let results = [];\n\n        if (!count) {\n            promise.resolve(results);\n            return promise;\n        }\n\n        for (let i = 0; i < promises.length; i++) {\n            let prom = promises[i];\n\n            if (prom instanceof ZalgoPromise) {\n                if (prom.resolved) {\n                    results[i] = prom.value;\n                    count -= 1;\n                    continue;\n                }\n            } else if (!isPromise(prom)) {\n                results[i] = prom;\n                count -= 1;\n                continue;\n            }\n\n            ZalgoPromise.resolve(prom).then(result => {\n                results[i] = result;\n                count -= 1;\n                if (count === 0) {\n                    promise.resolve(results);\n                }\n            }, err => {\n                promise.reject(err);\n            });\n        }\n\n        if (count === 0) {\n            promise.resolve(results);\n        }\n\n        return promise;\n    }\n\n    static hash<O : { [string] : * }>(promises : O) : ZalgoPromise<$ObjMap<O, <Y>(ZalgoPromise<Y> | Y) => Y>> { // eslint-disable-line no-undef\n        let result = {};\n        \n        return ZalgoPromise.all(Object.keys(promises).map(key => {\n            return ZalgoPromise.resolve(promises[key]).then(value => {\n                result[key] = value;\n            });\n        })).then(() => {\n            return result;\n        });\n    }\n\n    static map<T, X>(items : Array<T>, method : (T) => (ZalgoPromise<X> | X)) : ZalgoPromise<Array<X>> {\n        // $FlowFixMe\n        return ZalgoPromise.all(items.map(method));\n    }\n\n    static onPossiblyUnhandledException(handler : (err : mixed) => void) : { cancel : () => void } {\n        return onPossiblyUnhandledException(handler);\n    }\n\n    static try<X : mixed, Y : mixed, C : mixed, A : Array<mixed>>(method : (...args : A) => (ZalgoPromise<X> | Y), context : ?C, args : ?A) : ZalgoPromise<X | Y> {\n\n        if (method && typeof method !== 'function' && !method.call) {\n            throw new Error('Promise.try expected a function');\n        }\n\n        let result;\n\n        startActive();\n        \n        try {\n            // $FlowFixMe\n            result = method.apply(context, args || []);\n        } catch (err) {\n            endActive();\n            return ZalgoPromise.reject(err);\n        }\n\n        endActive();\n\n        return ZalgoPromise.resolve(result);\n    }\n\n    static delay(delay : number) : ZalgoPromise<void> {\n        return new ZalgoPromise(resolve => {\n            setTimeout(resolve, delay);\n        });\n    }\n\n    static isPromise(value : mixed) : boolean {\n\n        if (value && value instanceof ZalgoPromise) {\n            return true;\n        }\n\n        return isPromise(value);\n    }\n\n    static flush() : ZalgoPromise<void> {\n        return awaitActive(ZalgoPromise);\n    }\n}\n","/* @flow */\n\nexport function isRegex(item : mixed) : boolean {\n    return Object.prototype.toString.call(item) === '[object RegExp]';\n}\n\n// eslint-disable-next-line no-unused-vars\nexport function noop(...args : Array<mixed>) {\n    // pass\n}\n","/* @flow */\n\nexport const PROTOCOL = {\n    MOCK:  ('mock:' : 'mock:'),\n    FILE:  ('file:' : 'file:'),\n    ABOUT: ('about:' : 'about:')\n};\n\nexport const WILDCARD = '*';\n\nexport const WINDOW_TYPE = {\n    IFRAME: ('iframe' : 'iframe'),\n    POPUP:  ('popup' : 'popup')\n};\n","/* @flow */\n/* eslint max-lines: 0 */\n\nimport { isRegex, noop } from './util';\nimport type { CrossDomainWindowType, SameDomainWindowType, DomainMatcher } from './types';\nimport { PROTOCOL, WILDCARD } from './constants';\n\nlet IE_WIN_ACCESS_ERROR = 'Call was rejected by callee.\\r\\n';\n\nexport function isFileProtocol(win : SameDomainWindowType = window) : boolean {\n    return win.location.protocol === PROTOCOL.FILE;\n}\n\nexport function isAboutProtocol(win : SameDomainWindowType = window) : boolean {\n    return win.location.protocol === PROTOCOL.ABOUT;\n}\n\nexport function getParent(win : ?CrossDomainWindowType) : ?CrossDomainWindowType {\n\n    if (!win) {\n        return;\n    }\n\n    try {\n        if (win.parent && win.parent !== win) {\n            return win.parent;\n        }\n    } catch (err) {\n        // pass\n    }\n}\n\nexport function getOpener(win : ?CrossDomainWindowType) : ?CrossDomainWindowType {\n\n    if (!win) {\n        return;\n    }\n\n    // Make sure we're not actually an iframe which has had window.open() called on us\n    if (getParent(win)) {\n        return;\n    }\n\n    try {\n        return win.opener;\n    } catch (err) {\n        // pass\n    }\n}\n\nexport function canReadFromWindow(win : CrossDomainWindowType | SameDomainWindowType) : boolean {\n    try {\n        // $FlowFixMe\n        noop(win && win.location && win.location.href);\n        return true;\n    } catch (err) {\n        // pass\n    }\n\n    return false;\n}\n\nexport function getActualDomain(win : ?SameDomainWindowType) : string {\n\n    win = win || window;\n\n    let location = win.location;\n\n    if (!location) {\n        throw new Error(`Can not read window location`);\n    }\n\n    let protocol = location.protocol;\n\n    if (!protocol) {\n        throw new Error(`Can not read window protocol`);\n    }\n\n    if (protocol === PROTOCOL.FILE) {\n        return `${ PROTOCOL.FILE }//`;\n    }\n\n    if (protocol === PROTOCOL.ABOUT) {\n\n        let parent = getParent(win);\n        if (parent && canReadFromWindow(parent)) {\n            // $FlowFixMe\n            return getActualDomain(parent);\n        }\n\n        return `${ PROTOCOL.ABOUT }//`;\n    }\n\n    let host = location.host;\n\n    if (!host) {\n        throw new Error(`Can not read window host`);\n    }\n\n    return `${ protocol }//${ host }`;\n}\n\nexport function getDomain(win : ?SameDomainWindowType) : string {\n\n    win = win || window;\n\n    let domain = getActualDomain(win);\n\n    if (domain && win.mockDomain && win.mockDomain.indexOf(PROTOCOL.MOCK) === 0) {\n        return win.mockDomain;\n    }\n\n    return domain;\n}\n\nexport function isBlankDomain(win : CrossDomainWindowType) : boolean {\n    try {\n        // $FlowFixMe\n        if (!win.location.href) {\n            return true;\n        }\n\n        if (win.location.href === 'about:blank') {\n            return true;\n        }\n    } catch (err) {\n        // pass\n    }\n\n    return false;\n}\n\nexport function isActuallySameDomain(win : CrossDomainWindowType) : boolean {\n\n    try {\n        if (win === window) {\n            return true;\n        }\n\n    } catch (err) {\n        // pass\n    }\n\n    try {\n        let desc = Object.getOwnPropertyDescriptor(win, 'location');\n\n        if (desc && desc.enumerable === false) {\n            return false;\n        }\n\n    } catch (err) {\n        // pass\n    }\n\n    try {\n        // $FlowFixMe\n        if (isAboutProtocol(win) && canReadFromWindow(win)) {\n            return true;\n        }\n    } catch (err) {\n        // pass\n    }\n\n    try {\n        // $FlowFixMe\n        if (getActualDomain(win) === getActualDomain(window)) {\n            return true;\n        }\n\n    } catch (err) {\n        // pass\n    }\n\n    return false;\n}\n\nexport function isSameDomain(win : CrossDomainWindowType | SameDomainWindowType) : boolean {\n\n    if (!isActuallySameDomain(win)) {\n        return false;\n    }\n\n    try {\n\n        if (win === window) {\n            return true;\n        }\n\n        // $FlowFixMe\n        if (isAboutProtocol(win) && canReadFromWindow(win)) {\n            return true;\n        }\n\n        // $FlowFixMe\n        if (getDomain(window) === getDomain(win)) {\n            return true;\n        }\n\n    } catch (err) {\n        // pass\n    }\n\n    return false;\n}\n\n\nexport function assertSameDomain(win : CrossDomainWindowType | SameDomainWindowType) : SameDomainWindowType {\n    if (!isSameDomain(win)) {\n        throw new Error(`Expected window to be same domain`);\n    }\n\n    // $FlowFixMe\n    return win;\n}\n\nexport function getParents(win : CrossDomainWindowType) : Array<CrossDomainWindowType> {\n\n    let result = [];\n\n    try {\n\n        while (win.parent !== win) {\n            result.push(win.parent);\n            win = win.parent;\n        }\n\n    } catch (err) {\n        // pass\n    }\n\n    return result;\n}\n\nexport function isAncestorParent(parent : CrossDomainWindowType, child : CrossDomainWindowType) : boolean {\n\n    if (!parent || !child) {\n        return false;\n    }\n\n    let childParent = getParent(child);\n\n    if (childParent) {\n        return childParent === parent;\n    }\n\n    if (getParents(child).indexOf(parent) !== -1) {\n        return true;\n    }\n\n    return false;\n}\n\nexport function getFrames(win : CrossDomainWindowType) : Array<CrossDomainWindowType> {\n\n    let result = [];\n\n    let frames;\n\n    try {\n        frames = win.frames;\n    } catch (err) {\n        frames = win;\n    }\n\n    let len;\n\n    try {\n        len = frames.length;\n    } catch (err) {\n        // pass\n    }\n\n    if (len === 0) {\n        return result;\n    }\n\n    if (len) {\n        for (let i = 0; i < len; i++) {\n\n            let frame;\n\n            try {\n                frame = frames[i];\n            } catch (err) {\n                continue;\n            }\n\n            result.push(frame);\n        }\n\n        return result;\n    }\n\n    for (let i = 0; i < 100; i++) {\n        let frame;\n\n        try {\n            frame = frames[i];\n        } catch (err) {\n            return result;\n        }\n\n        if (!frame) {\n            return result;\n        }\n\n        result.push(frame);\n    }\n\n    return result;\n}\n\n\nexport function getAllChildFrames(win : CrossDomainWindowType) : Array<CrossDomainWindowType> {\n\n    let result = [];\n\n    for (let frame of getFrames(win)) {\n        result.push(frame);\n\n        for (let childFrame of getAllChildFrames(frame)) {\n            result.push(childFrame);\n        }\n    }\n\n    return result;\n}\n\nexport function getTop(win : CrossDomainWindowType) : ?CrossDomainWindowType {\n\n    if (!win) {\n        return;\n    }\n\n    try {\n        if (win.top) {\n            return win.top;\n        }\n    } catch (err) {\n        // pass\n    }\n\n    if (getParent(win) === win) {\n        return win;\n    }\n\n    try {\n        if (isAncestorParent(window, win) && window.top) {\n            return window.top;\n        }\n    } catch (err) {\n        // pass\n    }\n\n    try {\n        if (isAncestorParent(win, window) && window.top) {\n            return window.top;\n        }\n    } catch (err) {\n        // pass\n    }\n\n    for (let frame of getAllChildFrames(win)) {\n        try {\n            if (frame.top) {\n                return frame.top;\n            }\n        } catch (err) {\n            // pass\n        }\n\n        if (getParent(frame) === frame) {\n            return frame;\n        }\n    }\n}\n\nexport function getNextOpener(win? : CrossDomainWindowType = window) : ?CrossDomainWindowType {\n    return getOpener(getTop(win) || win);\n}\n\nexport function getUltimateTop(win? : CrossDomainWindowType = window) : CrossDomainWindowType {\n    let opener = getNextOpener(win);\n\n    if (opener) {\n        return getUltimateTop(opener);\n    }\n\n    return top;\n}\n\nexport function getAllFramesInWindow(win : CrossDomainWindowType) : Array<CrossDomainWindowType> {\n    let top = getTop(win);\n\n    if (!top) {\n        throw new Error(`Can not determine top window`);\n    }\n\n    return [ ...getAllChildFrames(top), top ];\n}\n\nexport function getAllWindows(win? : CrossDomainWindowType = window) : $ReadOnlyArray<CrossDomainWindowType> {\n    let frames = getAllFramesInWindow(win);\n    let opener = getNextOpener(win);\n\n    if (opener) {\n        return [ ...getAllWindows(opener), ...frames ];\n    } else {\n        return frames;\n    }\n}\n\nexport function isTop(win : CrossDomainWindowType) : boolean {\n    return win === getTop(win);\n}\n\nexport function isFrameWindowClosed(frame : HTMLIFrameElement) : boolean {\n\n    if (!frame.contentWindow) {\n        return true;\n    }\n\n    if (!frame.parentNode) {\n        return true;\n    }\n\n    let doc = frame.ownerDocument;\n\n    if (doc && doc.documentElement && !doc.documentElement.contains(frame)) {\n        return true;\n    }\n\n    return false;\n}\n\nfunction safeIndexOf<T>(collection : Array<T>, item : T) : number {\n    for (let i = 0; i < collection.length; i++) {\n\n        try {\n            if (collection[i] === item) {\n                return i;\n            }\n        } catch (err) {\n            // pass\n        }\n    }\n\n    return -1;\n}\n\nlet iframeWindows = [];\nlet iframeFrames = [];\n\nexport function isWindowClosed(win : CrossDomainWindowType, allowMock : boolean = true) : boolean {\n\n    try {\n        if (win === window) {\n            return false;\n        }\n    } catch (err) {\n        return true;\n    }\n\n    try {\n        if (!win) {\n            return true;\n        }\n\n    } catch (err) {\n        return true;\n    }\n\n    try {\n        if (win.closed) {\n            return true;\n        }\n\n    } catch (err) {\n\n        // I love you so much IE\n\n        if (err && err.message === IE_WIN_ACCESS_ERROR) {\n            return false;\n        }\n\n        return true;\n    }\n\n\n    if (allowMock && isSameDomain(win)) {\n        try {\n            // $FlowFixMe\n            if (win.mockclosed) {\n                return true;\n            }\n        } catch (err) {\n            // pass\n        }\n    }\n\n    // Mobile safari\n\n    try {\n        if (!win.parent || !win.top) {\n            return true;\n        }\n    } catch (err) {\n        // pass\n    }\n\n    // Yes, this actually happens in IE. win === win errors out when the window\n    // is from an iframe, and the iframe was removed from the page.\n\n    try {\n        noop(win === win); // eslint-disable-line no-self-compare\n    } catch (err) {\n        return true;\n    }\n\n    // IE orphaned frame\n\n    let iframeIndex = safeIndexOf(iframeWindows, win);\n\n    if (iframeIndex !== -1) {\n        let frame = iframeFrames[iframeIndex];\n\n        if (frame && isFrameWindowClosed(frame)) {\n            return true;\n        }\n    }\n\n    return false;\n}\n\nfunction cleanIframes() {\n    for (let i = 0; i < iframeWindows.length; i++) {\n        let closed = false;\n\n        try {\n            closed = iframeWindows[i].closed;\n        } catch (err) {\n            // pass\n        }\n\n        if (closed) {\n            iframeFrames.splice(i, 1);\n            iframeWindows.splice(i, 1);\n        }\n    }\n}\n\nexport function linkFrameWindow(frame : HTMLIFrameElement) {\n\n    cleanIframes();\n\n    if (frame && frame.contentWindow) {\n        try {\n            iframeWindows.push(frame.contentWindow);\n            iframeFrames.push(frame);\n        } catch (err) {\n            // pass\n        }\n    }\n}\n\nexport function getUserAgent(win : ?SameDomainWindowType) : string {\n    win = win || window;\n    return win.navigator.mockUserAgent || win.navigator.userAgent;\n}\n\n\nexport function getFrameByName(win : CrossDomainWindowType, name : string) : ?CrossDomainWindowType {\n\n    let winFrames = getFrames(win);\n\n    for (let childFrame of winFrames) {\n        try {\n            // $FlowFixMe\n            if (isSameDomain(childFrame) && childFrame.name === name && winFrames.indexOf(childFrame) !== -1) {\n                return childFrame;\n            }\n        } catch (err) {\n            // pass\n        }\n    }\n\n    try {\n        // $FlowFixMe\n        if (winFrames.indexOf(win.frames[name]) !== -1) {\n            // $FlowFixMe\n            return win.frames[name];\n        }\n    } catch (err) {\n        // pass\n    }\n\n    try {\n        if (winFrames.indexOf(win[name]) !== -1) {\n            return win[name];\n        }\n    } catch (err) {\n        // pass\n    }\n}\n\nexport function findChildFrameByName(win : CrossDomainWindowType, name : string) : ?CrossDomainWindowType {\n\n    let frame = getFrameByName(win, name);\n\n    if (frame) {\n        return frame;\n    }\n\n    for (let childFrame of getFrames(win)) {\n        let namedFrame = findChildFrameByName(childFrame, name);\n\n        if (namedFrame) {\n            return namedFrame;\n        }\n    }\n}\n\nexport function findFrameByName(win : CrossDomainWindowType, name : string) : ?CrossDomainWindowType {\n\n    let frame;\n\n    frame = getFrameByName(win, name);\n\n    if (frame) {\n        return frame;\n    }\n\n    let top = getTop(win) || win;\n\n    return findChildFrameByName(top, name);\n}\n\nexport function isParent(win : CrossDomainWindowType, frame : CrossDomainWindowType) : boolean {\n\n    let frameParent = getParent(frame);\n\n    if (frameParent) {\n        return frameParent === win;\n    }\n\n    for (let childFrame of getFrames(win)) {\n        if (childFrame === frame) {\n            return true;\n        }\n    }\n\n    return false;\n}\n\nexport function isOpener(parent : CrossDomainWindowType, child : CrossDomainWindowType) : boolean {\n\n    return parent === getOpener(child);\n}\n\nexport function getAncestor(win : ?CrossDomainWindowType) : ?CrossDomainWindowType {\n    win = win || window;\n\n    let opener = getOpener(win);\n\n    if (opener) {\n        return opener;\n    }\n\n    let parent = getParent(win);\n\n    if (parent) {\n        return parent;\n    }\n}\n\nexport function getAncestors(win : CrossDomainWindowType) : Array<CrossDomainWindowType> {\n\n    let results = [];\n\n    let ancestor = win;\n\n    while (ancestor) {\n        ancestor = getAncestor(ancestor);\n        if (ancestor) {\n            results.push(ancestor);\n        }\n    }\n\n    return results;\n}\n\n\nexport function isAncestor(parent : CrossDomainWindowType, child : CrossDomainWindowType) : boolean {\n\n    let actualParent = getAncestor(child);\n\n    if (actualParent) {\n        if (actualParent === parent) {\n            return true;\n        }\n\n        return false;\n    }\n\n    if (child === parent) {\n        return false;\n    }\n\n    if (getTop(child) === child) {\n        return false;\n    }\n\n    for (let frame of getFrames(parent)) {\n        if (frame === child) {\n            return true;\n        }\n    }\n\n    return false;\n}\n\nexport function isPopup() : boolean {\n    return Boolean(getOpener(window));\n}\n\nexport function isIframe() : boolean {\n    return Boolean(getParent(window));\n}\n\nexport function isFullpage() : boolean {\n    return Boolean(!isIframe() && !isPopup());\n}\n\nfunction anyMatch(collection1, collection2) : boolean {\n\n    for (let item1 of collection1) {\n        for (let item2 of collection2) {\n            if (item1 === item2) {\n                return true;\n            }\n        }\n    }\n\n    return false;\n}\n\nexport function getDistanceFromTop(win : CrossDomainWindowType = window) : number {\n    let distance = 0;\n    let parent = win;\n\n    while (parent) {\n        parent = getParent(parent);\n        if (parent) {\n            distance += 1;\n        }\n    }\n\n    return distance;\n}\n\nexport function getNthParent(win : CrossDomainWindowType, n : number = 1) : ?CrossDomainWindowType {\n    let parent = win;\n\n    for (let i = 0; i < n; i++) {\n        if (!parent) {\n            return;\n        }\n\n        parent = getParent(parent);\n    }\n\n    return parent;\n}\n\nexport function getNthParentFromTop(win : CrossDomainWindowType, n : number = 1) : ?CrossDomainWindowType {\n    return getNthParent(win, getDistanceFromTop(win) - n);\n}\n\nexport function isSameTopWindow(win1 : CrossDomainWindowType, win2 : CrossDomainWindowType) : boolean {\n\n    let top1 = getTop(win1) || win1;\n    let top2 = getTop(win2) || win2;\n\n    try {\n        if (top1 && top2) {\n            if (top1 === top2) {\n                return true;\n            }\n\n            return false;\n        }\n    } catch (err) {\n        // pass\n    }\n\n    let allFrames1 = getAllFramesInWindow(win1);\n    let allFrames2 = getAllFramesInWindow(win2);\n\n    if (anyMatch(allFrames1, allFrames2)) {\n        return true;\n    }\n\n    let opener1 = getOpener(top1);\n    let opener2 = getOpener(top2);\n\n    if (opener1 && anyMatch(getAllFramesInWindow(opener1), allFrames2)) {\n        return false;\n    }\n\n    if (opener2 && anyMatch(getAllFramesInWindow(opener2), allFrames1)) {\n        return false;\n    }\n\n    return false;\n}\n\nexport function matchDomain(pattern : DomainMatcher, origin : DomainMatcher) : boolean {\n\n    if (typeof pattern === 'string') {\n\n        if (typeof origin === 'string') {\n            return pattern === WILDCARD || origin === pattern;\n        }\n\n        if (isRegex(origin)) {\n            return false;\n        }\n\n        if (Array.isArray(origin)) {\n            return false;\n        }\n    }\n\n    if (isRegex(pattern)) {\n\n        if (isRegex(origin)) {\n            return pattern.toString() === origin.toString();\n        }\n\n        if (Array.isArray(origin)) {\n            return false;\n        }\n\n        // $FlowFixMe\n        return Boolean(origin.match(pattern));\n    }\n\n    if (Array.isArray(pattern)) {\n\n        if (Array.isArray(origin)) {\n            return JSON.stringify(pattern) === JSON.stringify(origin);\n        }\n\n        if (isRegex(origin)) {\n            return false;\n        }\n\n        return pattern.some(subpattern => matchDomain(subpattern, origin));\n    }\n\n    return false;\n}\n\nexport function stringifyDomainPattern(pattern : DomainMatcher) : string {\n    if (Array.isArray(pattern)) {\n        return `(${ pattern.join(' | ') })`;\n    } else if (isRegex(pattern)) {\n        return `RegExp(${ pattern.toString() }`;\n    } else {\n        return pattern.toString();\n    }\n}\n\nexport function getDomainFromUrl(url : string) : string {\n\n    let domain;\n\n    if (url.match(/^(https?|mock|file):\\/\\//)) {\n        domain = url;\n    } else {\n        return getDomain();\n    }\n\n    domain = domain.split('/').slice(0, 3).join('/');\n\n    return domain;\n}\n\nexport function onCloseWindow(win : CrossDomainWindowType, callback : Function, delay : number = 1000, maxtime : number = Infinity) : { cancel : () => void } {\n\n    let timeout;\n\n    let check = () => {\n\n        if (isWindowClosed(win)) {\n\n            if (timeout) {\n                clearTimeout(timeout);\n            }\n\n            return callback();\n        }\n\n        if (maxtime <= 0) {\n            clearTimeout(timeout);\n        } else {\n            maxtime -= delay;\n            timeout = setTimeout(check, delay);\n        }\n    };\n\n    check();\n\n    return {\n        cancel() {\n            if (timeout) {\n                clearTimeout(timeout);\n            }\n        }\n    };\n}\n\n// eslint-disable-next-line complexity\nexport function isWindow(obj : Object) : boolean {\n\n    try {\n        if (obj === window) {\n            return true;\n        }\n    } catch (err) {\n        if (err && err.message === IE_WIN_ACCESS_ERROR) {\n            return true;\n        }\n    }\n\n    try {\n        if (Object.prototype.toString.call(obj) === '[object Window]') {\n            return true;\n        }\n    } catch (err) {\n        if (err && err.message === IE_WIN_ACCESS_ERROR) {\n            return true;\n        }\n    }\n\n    try {\n        if (window.Window && obj instanceof window.Window) {\n            return true;\n        }\n    } catch (err) {\n        if (err && err.message === IE_WIN_ACCESS_ERROR) {\n            return true;\n        }\n    }\n\n    try {\n        if (obj && obj.self === obj) {\n            return true;\n        }\n    } catch (err) {\n        if (err && err.message === IE_WIN_ACCESS_ERROR) {\n            return true;\n        }\n    }\n\n    try {\n        if (obj && obj.parent === obj) {\n            return true;\n        }\n    } catch (err) {\n        if (err && err.message === IE_WIN_ACCESS_ERROR) {\n            return true;\n        }\n    }\n\n    try {\n        if (obj && obj.top === obj) {\n            return true;\n        }\n    } catch (err) {\n        if (err && err.message === IE_WIN_ACCESS_ERROR) {\n            return true;\n        }\n    }\n\n    try {\n        noop(obj === obj);  // eslint-disable-line no-self-compare\n\n    } catch (err) {\n        return true;\n    }\n\n    try {\n        noop(obj && obj.__cross_domain_utils_window_check__);\n\n    } catch (err) {\n        return true;\n    }\n\n    return false;\n}\n\nexport function isBrowser() : boolean {\n    return (typeof window !== 'undefined' && typeof window.location !== 'undefined');\n}\n\nexport function isCurrentDomain(domain : string) : boolean {\n    if (!isBrowser()) {\n        return false;\n    }\n\n    return (getDomain() === domain);\n}\n\nexport function isMockDomain(domain : string) : boolean {\n    return domain.indexOf(PROTOCOL.MOCK) === 0;\n}\n\nexport function normalizeMockUrl(url : string) : string {\n    if (!isMockDomain(getDomainFromUrl(url))) {\n        return url;\n    }\n\n    if (!__TEST__) {\n        throw new Error(`Mock urls not supported out of test mode`);\n    }\n\n    return url.replace(/^mock:\\/\\/[^/]+/, getActualDomain(window));\n}\n","/* @flow */\n\nexport function safeIndexOf<T>(collection : Array<T>, item : T) : number {\n    for (let i = 0; i < collection.length; i++) {\n\n        try {\n            if (collection[i] === item) {\n                return i;\n            }\n        } catch (err) {\n            // pass\n        }\n    }\n\n    return -1;\n}\n\n// eslint-disable-next-line no-unused-vars\nexport function noop(...args : Array<mixed>) {\n    // pass\n}\n","/* @flow */\n\nimport { isWindow, isWindowClosed } from 'cross-domain-utils/src';\n\nimport { hasNativeWeakMap } from './native';\nimport { noop, safeIndexOf } from './util';\n\nlet defineProperty = Object.defineProperty;\nlet counter = Date.now() % 1e9;\n\nexport class CrossDomainSafeWeakMap<K : Object, V : mixed> {\n\n    name : string\n    weakmap : WeakMap<K, V>\n    keys : Array<K>\n    values : Array<V>\n\n    constructor() {\n        counter += 1;\n\n        // eslint-disable-next-line no-bitwise\n        this.name = `__weakmap_${ Math.random() * 1e9 >>> 0 }__${ counter }`;\n\n        if (hasNativeWeakMap()) {\n            try {\n                this.weakmap = new WeakMap();\n            } catch (err) {\n                // pass\n            }\n        }\n\n        this.keys  = [];\n        this.values = [];\n    }\n\n    _cleanupClosedWindows() {\n\n        let weakmap = this.weakmap;\n        let keys = this.keys;\n\n        for (let i = 0; i < keys.length; i++) {\n            let value = keys[i];\n\n            if (isWindow(value) && isWindowClosed(value)) {\n\n                if (weakmap) {\n                    try {\n                        weakmap.delete(value);\n                    } catch (err) {\n                        // pass\n                    }\n                }\n\n                keys.splice(i, 1);\n                this.values.splice(i, 1);\n\n                i -= 1;\n            }\n        }\n    }\n\n    isSafeToReadWrite(key : K) : boolean {\n\n        if (isWindow(key)) {\n            return false;\n        }\n\n        try {\n            noop(key && key.self);\n            noop(key && key[this.name]);\n        } catch (err) {\n            return false;\n        }\n\n        return true;\n    }\n\n    set(key : K, value : V) {\n\n        if (!key) {\n            throw new Error(`WeakMap expected key`);\n        }\n\n        let weakmap = this.weakmap;\n\n        if (weakmap) {\n            try {\n                weakmap.set(key, value);\n            } catch (err) {\n                delete this.weakmap;\n            }\n        }\n\n        if (!this.isSafeToReadWrite(key)) {\n\n            this._cleanupClosedWindows();\n\n            let keys = this.keys;\n            let values = this.values;\n            let index = safeIndexOf(keys, key);\n\n            if (index === -1) {\n                keys.push(key);\n                values.push(value);\n            } else {\n                values[index] = value;\n            }\n\n        } else {\n\n            let name = this.name;\n            let entry = key[name];\n\n            if (entry && entry[0] === key) {\n                entry[1] = value;\n            } else {\n                defineProperty(key, name, {\n                    value:    [ key, value ],\n                    writable: true\n                });\n            }\n        }\n    }\n\n    get(key : K) : V | void {\n\n        if (!key) {\n            throw new Error(`WeakMap expected key`);\n        }\n\n        let weakmap = this.weakmap;\n\n        if (weakmap) {\n            try {\n                if (weakmap.has(key)) {\n                    return weakmap.get(key);\n                }\n            } catch (err) {\n                delete this.weakmap;\n            }\n        }\n\n        if (!this.isSafeToReadWrite(key)) {\n\n            this._cleanupClosedWindows();\n\n            let keys = this.keys;\n            let index = safeIndexOf(keys, key);\n\n            if (index === -1) {\n                return;\n            }\n\n            return this.values[index];\n\n        } else {\n\n            let entry = key[this.name];\n\n            if (entry && entry[0] === key) {\n                return entry[1];\n            }\n        }\n    }\n\n    delete(key : K) {\n\n        if (!key) {\n            throw new Error(`WeakMap expected key`);\n        }\n\n        let weakmap = this.weakmap;\n\n        if (weakmap) {\n            try {\n                weakmap.delete(key);\n            } catch (err) {\n                delete this.weakmap;\n            }\n        }\n\n        if (!this.isSafeToReadWrite(key)) {\n\n            this._cleanupClosedWindows();\n\n            let keys = this.keys;\n            let index = safeIndexOf(keys, key);\n\n            if (index !== -1) {\n                keys.splice(index, 1);\n                this.values.splice(index, 1);\n            }\n\n        } else {\n\n            let entry = key[this.name];\n\n            if (entry && entry[0] === key) {\n                entry[0] = entry[1] = undefined;\n            }\n        }\n    }\n\n    has(key : K) : boolean {\n\n        if (!key) {\n            throw new Error(`WeakMap expected key`);\n        }\n\n        let weakmap = this.weakmap;\n\n        if (weakmap) {\n            try {\n                if (weakmap.has(key)) {\n                    return true;\n                }\n            } catch (err) {\n                delete this.weakmap;\n            }\n        }\n\n        if (!this.isSafeToReadWrite(key)) {\n\n            this._cleanupClosedWindows();\n\n            let index = safeIndexOf(this.keys, key);\n            return index !== -1;\n\n        } else {\n\n            let entry = key[this.name];\n\n            if (entry && entry[0] === key) {\n                return true;\n            }\n\n            return false;\n        }\n    }\n\n    getOrSet(key : K, getter : () => V) : V {\n        if (this.has(key)) {\n            // $FlowFixMe\n            return this.get(key);\n        }\n\n        let value = getter();\n        this.set(key, value);\n        return value;\n    }\n}\n","/* @flow */\n/* eslint max-lines: 0 */\n\nimport { ZalgoPromise } from 'zalgo-promise/src';\nimport { WeakMap } from 'cross-domain-safe-weakmap/src';\n\nimport type { CancelableType } from './types';\n\nexport function base64encode(str : string) : string {\n    if (typeof btoa === 'function') {\n        return btoa(str);\n    } else if (typeof Buffer !== 'undefined') {\n        return Buffer.from(str, 'utf8').toString('base64');\n    }\n\n    throw new Error(`Can not find window.btoa or Buffer`);\n}\n\nexport function base64decode(str : string) : string {\n    if (typeof window !== 'undefined' && typeof window.atob === 'function') {\n        return window.atob(str);\n    }\n\n    if (typeof Buffer !== 'undefined') {\n        return Buffer.from(str, 'base64').toString('utf8');\n    }\n\n    throw new Error(`Can not find window.atob or Buffer`);\n}\n\nexport function uniqueID() : string {\n\n    let chars = '0123456789abcdef';\n\n    let randomID = 'xxxxxxxxxx'.replace(/./g, () => {\n        return chars.charAt(Math.floor(Math.random() * chars.length));\n    });\n\n    let timeID = base64encode(\n        new Date().toISOString().slice(11, 19).replace('T', '.')\n    ).replace(/[^a-zA-Z0-9]/g, '').toLowerCase();\n\n    return `${ randomID }_${ timeID }`;\n}\n\nexport function getGlobal() : Object {\n    if (typeof window !== 'undefined') {\n        return window;\n    }\n    if (typeof global !== 'undefined') {\n        return global;\n    }\n    if (typeof __GLOBAL__ !== 'undefined') {\n        return __GLOBAL__;\n    }\n    throw new Error(`No global found`);\n}\n\nlet objectIDs;\n\nexport function getObjectID(obj : Object) : string {\n\n    objectIDs = objectIDs || new WeakMap();\n\n    if (obj === null || obj === undefined || (typeof obj !== 'object' && typeof obj !== 'function')) {\n        throw new Error(`Invalid object`);\n    }\n\n    let uid = objectIDs.get(obj);\n\n    if (!uid) {\n        uid = `${ typeof obj }:${ uniqueID() }`;\n        objectIDs.set(obj, uid);\n    }\n\n    return uid;\n}\n\nfunction serializeArgs(args : Array<mixed>) : string {\n    try {\n        return JSON.stringify(Array.prototype.slice.call(args), (subkey, val) => {\n            if (typeof val === 'function') {\n                return `memoize[${ getObjectID(val) }]`;\n            }\n            return val;\n        });\n    } catch (err) {\n        throw new Error(`Arguments not serializable -- can not be used to memoize`);\n    }\n}\n\n// eslint-disable-next-line flowtype/no-weak-types\nexport function memoize<R>(method : (...args : Array<any>) => R, options : { time? : number, name? : string, thisNamespace? : boolean } = {}) : ((...args : Array<any>) => R) {\n    let cacheMap = new WeakMap();\n\n    // eslint-disable-next-line flowtype/no-weak-types\n    function memoizedFunction(...args : Array<any>) : R {\n        let cache = cacheMap.getOrSet(options.thisNamespace ? this : method, () => ({}));\n\n        let key : string = serializeArgs(args);\n\n        let cacheTime = options.time;\n        if (cache[key] && cacheTime && (Date.now() - cache[key].time) < cacheTime) {\n            delete cache[key];\n        }\n\n        if (cache[key]) {\n            return cache[key].value;\n        }\n\n        let time  = Date.now();\n        let value = method.apply(this, arguments);\n\n        cache[key] = { time, value };\n\n        return cache[key].value;\n    }\n\n    memoizedFunction.reset = () => {\n        cacheMap.delete(options.thisNamespace ? this : method);\n    };\n\n    if (options.name) {\n        memoizedFunction.displayName = `${ options.name }:memoized`;\n    }\n\n    return memoizedFunction;\n}\n\n// eslint-disable-next-line flowtype/no-weak-types\nexport function memoizePromise<R>(method : (...args : Array<any>) => ZalgoPromise<R>) : ((...args : Array<any>) => ZalgoPromise<R>) {\n    let cache = {};\n\n    // eslint-disable-next-line flowtype/no-weak-types\n    function memoizedPromiseFunction(...args : Array<any>) : ZalgoPromise<R> {\n        let key : string = serializeArgs(args);\n\n        if (cache.hasOwnProperty(key)) {\n            return cache[key];\n        }\n\n        cache[key] = method.apply(this, arguments)\n            .finally(() => {\n                delete cache[key];\n            });\n\n        return cache[key];\n    }\n\n    memoizedPromiseFunction.reset = () => {\n        cache = {};\n    };\n\n    return memoizedPromiseFunction;\n}\n\n// eslint-disable-next-line flowtype/no-weak-types\nexport function promisify<R>(method : (...args : Array<any>) => R, options : { name? : string } = {}) : ((...args : Array<any>) => ZalgoPromise<R>) {\n    function promisifiedFunction() : ZalgoPromise<R> {\n        return ZalgoPromise.try(method, this, arguments);\n    }\n\n    if (options.name) {\n        promisifiedFunction.displayName = `${ options.name }:promisified`;\n    }\n\n    return promisifiedFunction;\n}\n\n// eslint-disable-next-line flowtype/no-weak-types\nexport function inlineMemoize<R>(method : (...args : Array<any>) => R, logic : (...args : Array<any>) => R, args : Array<any> = []) : R {\n    let cache = method.__inline_memoize_cache__ = method.__inline_memoize_cache__ || {};\n    let key = serializeArgs(args);\n\n    if (cache.hasOwnProperty(key)) {\n        return cache[key];\n    }\n    \n    let result = cache[key] = logic(...args);\n    return result;\n}\n\n// eslint-disable-next-line no-unused-vars\nexport function noop(...args : Array<mixed>) {\n    // pass\n}\n\nexport function once(method : Function) : Function {\n    let called = false;\n\n    return function onceFunction() : mixed {\n        if (!called) {\n            called = true;\n            return method.apply(this, arguments);\n        }\n    };\n}\n\nexport function hashStr(str : string) : number {\n    let hash = 0;\n    for (let i = 0; i < str.length; i++) {\n        hash += str[i].charCodeAt(0) * Math.pow((i % 10) + 1, 5);\n    }\n    return Math.floor(Math.pow(Math.sqrt(hash), 5));\n}\n\nexport function strHashStr(str : string) : string {\n    let hash = '';\n\n    for (let i = 0; i < str.length; i++) {\n        let total = (str[i].charCodeAt(0) * i);\n\n        if (str[i + 1]) {\n            total += (str[i + 1].charCodeAt(0) * (i - 1));\n        }\n\n        hash += String.fromCharCode(97 + (Math.abs(total) % 26));\n    }\n\n    return hash;\n}\n\nexport function match(str : string, pattern : RegExp) : ?string {\n    let regmatch = str.match(pattern);\n    if (regmatch) {\n        return regmatch[1];\n    }\n}\n\nexport function awaitKey<T: mixed>(obj : Object, key : string) : ZalgoPromise<T> {\n    return new ZalgoPromise(resolve => {\n\n        let value = obj[key];\n\n        if (value) {\n            return resolve(value);\n        }\n\n        delete obj[key];\n\n        Object.defineProperty(obj, key, {\n\n            configurable: true,\n\n            set(item) {\n                value = item;\n\n                if (value) {\n                    resolve(value);\n                }\n            },\n\n            get() : mixed {\n                return value;\n            }\n        });\n    });\n}\n\nexport function stringifyError(err : mixed, level : number = 1) : string {\n\n    if (level >= 3) {\n        return 'stringifyError stack overflow';\n    }\n\n    try {\n        if (!err) {\n            return `<unknown error: ${ Object.prototype.toString.call(err) }>`;\n        }\n\n        if (typeof err === 'string') {\n            return err;\n        }\n\n        if (err instanceof Error) {\n            let stack = err && err.stack;\n            let message = err && err.message;\n\n            if (stack && message) {\n                if (stack.indexOf(message) !== -1) {\n                    return stack;\n                } else {\n                    return `${ message }\\n${ stack }`;\n                }\n            } else if (stack) {\n                return stack;\n            } else if (message) {\n                return message;\n            }\n        }\n\n        if (typeof err.toString === 'function') {\n            return err.toString();\n        }\n\n        return Object.prototype.toString.call(err);\n\n    } catch (newErr) { // eslint-disable-line unicorn/catch-error-name\n        return `Error while stringifying error: ${ stringifyError(newErr, level + 1) }`;\n    }\n}\n\nexport function stringifyErrorMessage(err : mixed) : string {\n\n    let defaultMessage = `<unknown error: ${ Object.prototype.toString.call(err) }>`;\n\n    if (!err) {\n        return defaultMessage;\n    }\n\n    if (err instanceof Error) {\n        return err.message || defaultMessage;\n    }\n\n    if (typeof err.message === 'string') {\n        return err.message || defaultMessage;\n    }\n\n    return defaultMessage;\n}\n\nexport function stringify(item : mixed) : string {\n    if (typeof item === 'string') {\n        return item;\n    }\n\n    if (item && typeof item.toString === 'function') {\n        return item.toString();\n    }\n\n    return Object.prototype.toString.call(item);\n}\n\nexport function domainMatches(hostname : string, domain : string) : boolean {\n    hostname = hostname.split('://')[1];\n    let index = hostname.indexOf(domain);\n    return (index !== -1 && hostname.slice(index) === domain);\n}\n\nexport function patchMethod(obj : Object, name : string, handler : Function) {\n    let original = obj[name];\n\n    obj[name] = function patchedMethod() : mixed {\n        return handler({\n            context:      this,\n            args:         Array.prototype.slice.call(arguments),\n            original,\n            callOriginal: () => original.apply(this, arguments)\n        });\n    };\n}\n\nexport function extend<T : Object | Function>(obj : T, source : Object) : T {\n    if (!source) {\n        return obj;\n    }\n\n    if (Object.assign) {\n        return Object.assign(obj, source);\n    }\n\n    for (let key in source) {\n        if (source.hasOwnProperty(key)) {\n            obj[key] = source[key];\n        }\n    }\n\n    return obj;\n}\n\nexport function values<T>(obj : { [string] : T }) : Array<T> {\n    let result = [];\n    for (let key in obj) {\n        if (obj.hasOwnProperty(key)) {\n            result.push(obj[key]);\n        }\n    }\n    return result;\n}\n\nexport function perc(pixels : number, percentage : number) : number {\n    return Math.round((pixels * percentage) / 100);\n}\n\nexport function min(...args : Array<number>) : number {\n    return Math.min(...args);\n}\n\nexport function max(...args : Array<number>) : number {\n    return Math.max(...args);\n}\n\nexport function regexMap<T>(str : string, regexp : RegExp, handler : () => T) : Array<T> {\n    let results = [];\n\n    // $FlowFixMe\n    str.replace(regexp, function regexMapMatcher(item) {\n        results.push(handler ? handler.apply(null, arguments) : item);\n    });\n\n    // $FlowFixMe\n    return results;\n}\n\nexport function svgToBase64(svg : string) : string {\n    return `data:image/svg+xml;base64,${ base64encode(svg) }`;\n}\n\nexport function objFilter<T, R>(obj : { [string] : T }, filter? : (T, ?string) => mixed = Boolean) : { [string] : R } {\n    let result = {};\n\n    for (let key in obj) {\n        if (!obj.hasOwnProperty(key) || !filter(obj[key], key)) {\n            continue;\n        }\n\n        result[key] = obj[key];\n    }\n\n    return result;\n}\n\nexport function identity <T>(item : T) : T {\n    return item;\n}\n\nexport function regexTokenize(text : string, regexp : RegExp) : Array<string> {\n    let result = [];\n    text.replace(regexp, token => {\n        result.push(token);\n        return '';\n    });\n    return result;\n}\n\nexport function promiseDebounce<T>(method : () => ZalgoPromise<T> | T, delay : number = 50) : () => ZalgoPromise<T> {\n\n    let promise;\n    let timeout;\n\n    return function promiseDebouncedMethod() : ZalgoPromise<T> {\n        if (timeout) {\n            clearTimeout(timeout);\n        }\n\n        let localPromise = promise = promise || new ZalgoPromise();\n\n        timeout = setTimeout(() => {\n            promise = null;\n            timeout = null;\n\n            ZalgoPromise.try(method).then(\n                result => { localPromise.resolve(result); },\n                err => { localPromise.reject(err); }\n            );\n        }, delay);\n\n        return localPromise;\n    };\n}\n\nexport function safeInterval(method : Function, time : number) : { cancel : () => void } {\n\n    let timeout;\n\n    function loop() {\n        timeout = setTimeout(() => {\n            method();\n            loop();\n        }, time);\n    }\n\n    loop();\n\n    return {\n        cancel() {\n            clearTimeout(timeout);\n        }\n    };\n}\n\nexport function isInteger(str : string) : boolean {\n    return Boolean(str.match(/^[0-9]+$/));\n}\n\nexport function isFloat(str : string) : boolean {\n    return Boolean(str.match(/^[0-9]+\\.[0-9]+$/));\n}\n\nexport function serializePrimitive(value : string | number | boolean) : string {\n    return value.toString();\n}\n\nexport function deserializePrimitive(value : string) : string | number | boolean {\n    if (value === 'true') {\n        return true;\n    } else if (value === 'false') {\n        return false;\n    } else if (isInteger(value)) {\n        return parseInt(value, 10);\n    } else if (isFloat(value)) {\n        return parseFloat(value);\n    } else {\n        return value;\n    }\n}\n\nexport function dotify(obj : Object, prefix : string = '', newobj : Object = {}) : { [string] : string } {\n    prefix = prefix ? `${ prefix }.` : prefix;\n    for (let key in obj) {\n        if (!obj.hasOwnProperty(key) || obj[key] === undefined || obj[key] === null || typeof obj[key] === 'function') {\n            continue;\n        } else if (obj[key] && Array.isArray(obj[key]) && obj[key].length && obj[key].every(val => typeof val !== 'object')) {\n            newobj[`${ prefix }${ key }[]`] = obj[key].join(',');\n        } else if (obj[key] && typeof obj[key] === 'object') {\n            newobj = dotify(obj[key], `${ prefix }${ key }`, newobj);\n        } else {\n            newobj[`${ prefix }${ key }`] = serializePrimitive(obj[key]);\n        }\n    }\n    return newobj;\n}\n\nexport function undotify(obj : { [string] : string }) : Object {\n    \n    let result = {};\n\n    for (let key in obj) {\n        if (!obj.hasOwnProperty(key) || typeof obj[key] !== 'string') {\n            continue;\n        }\n\n        let value = obj[key];\n\n        if (key.match(/^.+\\[\\]$/)) {\n            key = key.slice(0, key.length - 2);\n            value = value.split(',').map(deserializePrimitive);\n        } else {\n            value = deserializePrimitive(value);\n        }\n\n        let keyResult = result;\n        let parts = key.split('.');\n        for (let i = 0; i < parts.length; i++) {\n            let part = parts[i];\n            let isLast = (i + 1 === parts.length);\n            let isIndex = !isLast && isInteger(parts[i + 1]);\n\n            if (isLast) {\n                // $FlowFixMe\n                keyResult[part] = value;\n            } else {\n                // $FlowFixMe\n                keyResult = keyResult[part] = keyResult[part] || (isIndex ? [] : {});\n            }\n        }\n    }\n\n    return result;\n}\n\nexport type EventEmitterType = {\n    on : (eventName : string, handler : Function) => CancelableType,\n    once : (eventName : string, handler : Function) => CancelableType,\n    trigger : (eventName : string, ...args : $ReadOnlyArray<mixed>) => ZalgoPromise<void>,\n    triggerOnce : (eventName : string, ...args : $ReadOnlyArray<mixed>) => ZalgoPromise<void>\n};\n\nexport function eventEmitter() : EventEmitterType {\n    let triggered = {};\n    let handlers = {};\n\n    return {\n\n        on(eventName : string, handler : Function) : CancelableType {\n            let handlerList = handlers[eventName] = handlers[eventName] || [];\n\n            handlerList.push(handler);\n\n            let cancelled = false;\n\n            return {\n                cancel() {\n                    if (!cancelled) {\n                        cancelled = true;\n                        handlerList.splice(handlerList.indexOf(handler), 1);\n                    }\n\n                }\n            };\n        },\n\n        once(eventName : string, handler : Function) : CancelableType {\n\n            let listener = this.on(eventName, () => {\n                listener.cancel();\n                handler();\n            });\n\n            return listener;\n        },\n\n        trigger(eventName : string, ...args : $ReadOnlyArray<mixed>) : ZalgoPromise<void> {\n\n            let handlerList = handlers[eventName];\n            let promises = [];\n\n            if (handlerList) {\n                for (let handler of handlerList) {\n                    promises.push(ZalgoPromise.try(() => handler(...args)));\n                }\n            }\n\n            return ZalgoPromise.all(promises).then(noop);\n        },\n\n        triggerOnce(eventName : string, ...args : $ReadOnlyArray<mixed>) : ZalgoPromise<void> {\n\n            if (triggered[eventName]) {\n                return ZalgoPromise.resolve();\n            }\n\n            triggered[eventName] = true;\n            return this.trigger(eventName, ...args);\n        }\n    };\n}\n\nexport function camelToDasherize(string : string) : string {\n    return string.replace(/([A-Z])/g, (g) => {\n        return `-${ g.toLowerCase() }`;\n    });\n}\n\nexport function dasherizeToCamel(string : string) : string {\n    return string.replace(/-([a-z])/g, (g) => {\n        return g[1].toUpperCase();\n    });\n}\n\nexport function capitalizeFirstLetter(string : string) : string {\n    return string.charAt(0).toUpperCase() + string.slice(1).toLowerCase();\n}\n\nexport function get(item : Object, path : string, def : mixed) : mixed {\n\n    if (!path) {\n        return def;\n    }\n\n    let pathParts = path.split('.');\n\n    // Loop through each section of our key path\n\n    for (let i = 0; i < pathParts.length; i++) {\n\n        // If we have an object, we can get the key\n        if (typeof item === 'object' && item !== null) {\n            item = item[pathParts[i]];\n\n        // Otherwise, we should return the default (undefined if not provided)\n        } else {\n            return def;\n        }\n    }\n\n    // If our final result is undefined, we should return the default\n\n    return item === undefined ? def : item;\n}\n\nexport function safeTimeout(method : Function, time : number) {\n\n    let interval = safeInterval(() => {\n        time -= 100;\n        if (time <= 0) {\n            interval.cancel();\n            method();\n        }\n    }, 100);\n}\n\nexport function defineLazyProp<T>(obj : Object | Array<mixed>, key : string | number, getter : () => T) {\n    if (Array.isArray(obj)) {\n        if (typeof key !== 'number') {\n            throw new TypeError(`Array key must be number`);\n        }\n    } else if (typeof obj === 'object' && obj !== null) {\n        if (typeof key !== 'string') {\n            throw new TypeError(`Object key must be string`);\n        }\n    }\n    \n    Object.defineProperty(obj, key, {\n        configurable: true,\n        enumerable:   true,\n        get:          () => {\n            // $FlowFixMe\n            delete obj[key];\n            let value = getter();\n            // $FlowFixMe\n            obj[key] = value;\n            return value;\n        },\n        set: (value : T) => {\n            // $FlowFixMe\n            delete obj[key];\n            // $FlowFixMe\n            obj[key] = value;\n        }\n    });\n}\n\nexport function isObject(item : mixed) : boolean {\n    return (typeof item === 'object' && item !== null);\n}\n\nexport function isObjectObject(obj : mixed) : boolean {\n    return isObject(obj) && Object.prototype.toString.call(obj) === '[object Object]';\n}\n\nexport function isPlainObject(obj : mixed) : boolean {\n    if (!isObjectObject(obj)) {\n        return false;\n    }\n\n    // $FlowFixMe\n    let constructor = obj.constructor;\n\n    if (typeof constructor !== 'function') {\n        return false;\n    }\n\n    let prototype = constructor.prototype;\n\n    if (!isObjectObject(prototype)) {\n        return false;\n    }\n\n    if (!prototype.hasOwnProperty('isPrototypeOf')) {\n        return false;\n    }\n\n    return true;\n}\n\nexport function replaceObject<T : Object | Array<mixed>> (item : T, replacer : (mixed, string | number, string) => mixed, fullKey : string = '') : T {\n\n    if (Array.isArray(item)) {\n        let length = item.length;\n        let result = [];\n\n        for (let i = 0; i < length; i++) {\n\n            \n            defineLazyProp(result, i, () => {\n                let itemKey = fullKey ? `${ fullKey }.${ i }` : `${ i }`;\n                let el = item[i];\n\n                let child = replacer(el, i, itemKey);\n\n                if (isPlainObject(child) || Array.isArray(child)) {\n                    // $FlowFixMe\n                    child = replaceObject(child, replacer, itemKey);\n                }\n\n                return child;\n            });\n        }\n\n        // $FlowFixMe\n        return result;\n    } else if (isPlainObject(item)) {\n        let result = {};\n\n        for (let key in item) {\n            if (!item.hasOwnProperty(key)) {\n                continue;\n            }\n\n            defineLazyProp(result, key, () => {\n                let itemKey = fullKey ? `${ fullKey }.${ key }` : `${ key }`;\n                // $FlowFixMe\n                let el = item[key];\n\n                let child = replacer(el, key, itemKey);\n\n                if (isPlainObject(child) || Array.isArray(child)) {\n                    // $FlowFixMe\n                    child = replaceObject(child, replacer, itemKey);\n                }\n\n                return child;\n            });\n        }\n\n        // $FlowFixMe\n        return result;\n    } else {\n        throw new Error(`Pass an object or array`);\n    }\n}\n\n\nexport function copyProp(source : Object, target : Object, name : string, def : mixed) {\n    if (source.hasOwnProperty(name)) {\n        let descriptor = Object.getOwnPropertyDescriptor(source, name);\n        // $FlowFixMe\n        Object.defineProperty(target, name, descriptor);\n\n    } else {\n        target[name] = def;\n    }\n}\n\ntype RegexResultType = {\n    text : string,\n    groups : Array<string>,\n    start : number,\n    end : number,\n    length : number,\n    replace : (text : string) => string\n};\n\nexport function regex(pattern : string | RegExp, string : string, start : number = 0) : ?RegexResultType {\n\n    if (typeof pattern === 'string') {\n        // eslint-disable-next-line security/detect-non-literal-regexp\n        pattern = new RegExp(pattern);\n    }\n\n    let result = string.slice(start).match(pattern);\n\n    if (!result) {\n        return;\n    }\n\n    // $FlowFixMe\n    let index : number = result.index;\n    let regmatch = result[0];\n\n    return {\n        text:   regmatch,\n        groups: result.slice(1),\n        start:  start + index,\n        end:    start + index + regmatch.length,\n        length: regmatch.length,\n\n        replace(text : string) : string {\n\n            if (!regmatch) {\n                return '';\n            }\n\n            return `${ regmatch.slice(0, start + index) }${ text }${ regmatch.slice(index + regmatch.length) }`;\n        }\n    };\n}\n\nexport function regexAll(pattern : string | RegExp, string : string) : Array<RegexResultType> {\n\n    let matches = [];\n    let start = 0;\n\n    // eslint-disable-next-line no-constant-condition\n    while (true) {\n        let regmatch = regex(pattern, string, start);\n\n        if (!regmatch) {\n            break;\n        }\n\n        matches.push(regmatch);\n        start = match.end;\n    }\n\n    return matches;\n}\n\nexport function isDefined(value : ?mixed) : boolean {\n    return value !== null && value !== undefined;\n}\n\nexport function cycle(method : Function) : ZalgoPromise<void> {\n    return ZalgoPromise.try(method).then(() => cycle(method));\n}\n\nexport function debounce<T>(method : (...args : Array<mixed>) => T, time : number = 100) : (...args : Array<mixed>) => void {\n\n    let timeout;\n\n    return function debounceWrapper() {\n        clearTimeout(timeout);\n\n        timeout = setTimeout(() => {\n            return method.apply(this, arguments);\n        }, time);\n    };\n}\n\nexport function isRegex(item : mixed) : boolean {\n    return Object.prototype.toString.call(item) === '[object RegExp]';\n}\n\ntype FunctionProxy<T : Function> = (method : T) => T;\n\n// eslint-disable-next-line flowtype/no-weak-types\nexport let weakMapMemoize : FunctionProxy<*> = <R : mixed>(method : (arg : any) => R) : ((...args : Array<any>) => R) => {\n\n    let weakmap = new WeakMap();\n\n    // eslint-disable-next-line flowtype/no-weak-types\n    return function weakmapMemoized(arg : any) : R {\n        return weakmap.getOrSet(arg, () => method.call(this, arg));\n    };\n};\n\ntype FunctionPromiseProxy<R : mixed, T : (...args : $ReadOnlyArray<mixed>) => ZalgoPromise<R>> = (T) => T;\n\n// eslint-disable-next-line flowtype/no-weak-types\nexport let weakMapMemoizePromise : FunctionPromiseProxy<*, *> = <R : mixed>(method : (arg : any) => ZalgoPromise<R>) : ((...args : Array<any>) => ZalgoPromise<R>) => {\n\n    let weakmap = new WeakMap();\n\n    // eslint-disable-next-line flowtype/no-weak-types\n    return function weakmapMemoizedPromise(arg : any) : ZalgoPromise<R> {\n        return weakmap.getOrSet(arg, () =>\n            method.call(this, arg).finally(() => {\n                weakmap.delete(arg);\n            })\n        );\n    };\n};\n\nexport function getOrSet<O : Object, T : mixed>(obj : O, key : string, getter : () => T) : T {\n    if (obj.hasOwnProperty(key)) {\n        return obj[key];\n    }\n\n    const val = getter();\n    obj[key] = val;\n    return val;\n}\n\nexport type CleanupType = {|\n    set : <T : mixed>(string, T) => T, // eslint-disable-line no-undef\n    register : (Function) => void,\n    all : () => ZalgoPromise<void>\n|};\n\nexport function cleanup(obj : Object) : CleanupType {\n\n    const tasks = [];\n    let cleaned = false;\n\n    return {\n        set<T : mixed>(name : string, item : T) : T {\n            if (!cleaned) {\n                obj[name] = item;\n                this.register(() => {\n                    delete obj[name];\n                });\n            }\n            return item;\n        },\n\n        register(method : Function) {\n            if (cleaned) {\n                method();\n            } else {\n                tasks.push(once(method));\n            }\n        },\n\n        all() : ZalgoPromise<void> {\n            const results = [];\n            cleaned = true;\n\n            while (tasks.length) {\n                const task = tasks.pop();\n                results.push(task());\n            }\n\n            return ZalgoPromise.all(results).then(noop);\n        }\n    };\n}\n\nexport function tryCatch<T>(fn : () => T) : {| result : T, error : void |} | {| result : void, error : mixed |} {\n    let result;\n    let error;\n\n    try {\n        result = fn();\n    } catch (err) {\n        error = err;\n    }\n    \n    // $FlowFixMe\n    return { result, error };\n}\n\nexport function removeFromArray<X, T : Array<X>>(arr : T, item : X) {\n    const index = arr.indexOf(item);\n    if (index !== -1) {\n        arr.splice(index, 1);\n    }\n}\n\nexport function assertExists<T>(name : string, thing : void | null | T) : T {\n    if (thing === null || typeof thing === 'undefined') {\n        throw new Error(`Expected ${ name } to be present`);\n    }\n\n    return thing;\n}\n","/* @flow */\n/* eslint max-lines: off */\n\nimport { ZalgoPromise } from 'zalgo-promise/src';\nimport { linkFrameWindow, isWindowClosed,\n    type SameDomainWindowType, type CrossDomainWindowType } from 'cross-domain-utils/src';\nimport { WeakMap } from 'cross-domain-safe-weakmap/src';\n\nimport { inlineMemoize, noop, stringify, capitalizeFirstLetter,\n    once, extend, safeInterval } from './util';\nimport { isDevice } from './device';\nimport { KEY_CODES } from './constants';\nimport type { CancelableType } from './types';\n\ntype ElementRefType = string | HTMLElement;\n\nexport function isDocumentReady() : boolean {\n    return Boolean(document.body) && document.readyState === 'complete';\n}\n\nexport function urlEncode(str : string) : string {\n    return str.replace(/\\?/g, '%3F').replace(/&/g, '%26').replace(/#/g, '%23').replace(/\\+/g, '%2B');\n}\n\nexport function waitForWindowReady() : ZalgoPromise<void> {\n    return inlineMemoize(waitForWindowReady, () : ZalgoPromise<void> => {\n        return new ZalgoPromise(resolve => {\n            if (isDocumentReady()) {\n                resolve();\n            }\n\n            window.addEventListener('load', () => resolve());\n        });\n    });\n}\n\nexport function waitForDocumentReady() : ZalgoPromise<void> {\n    return inlineMemoize(waitForDocumentReady, () : ZalgoPromise<void> => {\n        return new ZalgoPromise(resolve => {\n\n            if (isDocumentReady()) {\n                return resolve();\n            }\n\n            let interval = setInterval(() => {\n                if (isDocumentReady()) {\n                    clearInterval(interval);\n                    return resolve();\n                }\n            }, 10);\n        });\n    });\n}\n\nexport function waitForDocumentBody() : ZalgoPromise<HTMLBodyElement> {\n    return waitForDocumentReady().then(() => {\n        if (document.body) {\n            return document.body;\n        }\n\n        throw new Error('Document ready but document.body not present');\n    });\n}\n\nexport function parseQuery(queryString : string) : Object {\n    return inlineMemoize(parseQuery, () : Object => {\n        let params = {};\n\n        if (!queryString) {\n            return params;\n        }\n\n        if (queryString.indexOf('=') === -1) {\n            return params;\n        }\n\n        for (let pair of queryString.split('&')) {\n            pair = pair.split('=');\n\n            if (pair[0] && pair[1]) {\n                params[decodeURIComponent(pair[0])] = decodeURIComponent(pair[1]);\n            }\n        }\n\n        return params;\n    }, [ queryString ]);\n}\n\n\nexport function getQueryParam(name : string) : string {\n    return parseQuery(window.location.search.slice(1))[name];\n}\n\nexport function urlWillRedirectPage(url : string) : boolean {\n\n    if (url.indexOf('#') === -1) {\n        return true;\n    }\n\n    if (url.indexOf('#') === 0) {\n        return false;\n    }\n\n    if (url.split('#')[0] === window.location.href.split('#')[0]) {\n        return false;\n    }\n\n    return true;\n}\n\nexport function formatQuery(obj : { [ string ] : string } = {}) : string {\n\n    return Object.keys(obj).filter(key => {\n        return typeof obj[key] === 'string';\n    }).map(key => {\n        return `${ urlEncode(key) }=${ urlEncode(obj[key]) }`;\n    }).join('&');\n}\n\nexport function extendQuery(originalQuery : string, props : { [ string ] : string } = {}) : string {\n\n    if (!props || !Object.keys(props).length) {\n        return originalQuery;\n    }\n\n    return formatQuery({\n        ...parseQuery(originalQuery),\n        ...props\n    });\n}\n\nexport function extendUrl(url : string, options : { query? : { [string] : string }, hash? : { [string] : string } } = {}) : string {\n\n    let query = options.query || {};\n    let hash = options.hash || {};\n\n    let originalUrl;\n    let originalQuery;\n    let originalHash;\n\n    [ originalUrl, originalHash ] = url.split('#');\n    [ originalUrl, originalQuery ] = originalUrl.split('?');\n\n    let queryString = extendQuery(originalQuery, query);\n    let hashString = extendQuery(originalHash, hash);\n\n    if (queryString) {\n        originalUrl = `${ originalUrl }?${ queryString }`;\n    }\n\n    if (hashString) {\n        originalUrl = `${ originalUrl }#${ hashString }`;\n    }\n\n    return originalUrl;\n}\n\nexport function redirect(url : string, win : CrossDomainWindowType = window) : ZalgoPromise<void> {\n    return new ZalgoPromise(resolve => {\n        win.location = url;\n        if (!urlWillRedirectPage(url)) {\n            resolve();\n        }\n    });\n}\n\nexport function hasMetaViewPort() : boolean {\n    let meta = document.querySelector('meta[name=viewport]');\n\n    if (isDevice() && window.screen.width < 660 && !meta) {\n        return false;\n    }\n\n    return true;\n}\n\nexport function isElementVisible(el : HTMLElement) : boolean {\n    return Boolean(el.offsetWidth || el.offsetHeight || el.getClientRects().length);\n}\n\nexport function enablePerformance() : boolean {\n    return inlineMemoize(enablePerformance, () : boolean => {\n        /* eslint-disable compat/compat */\n        return Boolean(\n            window.performance &&\n            performance.now &&\n            performance.timing &&\n            performance.timing.connectEnd &&\n            performance.timing.navigationStart &&\n            (Math.abs(performance.now() - Date.now()) > 1000) &&\n            (performance.now() - (performance.timing.connectEnd - performance.timing.navigationStart)) > 0\n        );\n        /* eslint-enable compat/compat */\n    });\n}\n\nexport function getPageRenderTime() : ZalgoPromise<?number> {\n    return waitForDocumentReady().then(() => {\n\n        if (!enablePerformance()) {\n            return;\n        }\n\n        let timing = window.performance.timing;\n\n        if (timing.connectEnd && timing.domInteractive) {\n            return timing.domInteractive - timing.connectEnd;\n        }\n    });\n}\n\nexport function htmlEncode(html : string = '') : string {\n    return html.toString()\n        .replace(/&/g, '&amp;')\n        .replace(/</g, '&lt;')\n        .replace(/>/g, '&gt;')\n        .replace(/\"/g, '&quot;')\n        .replace(/'/g, '&#39;')\n        .replace(/\\//g, '&#x2F;');\n}\n\nexport function isBrowser() : boolean {\n    return (typeof window !== 'undefined');\n}\n\nexport function querySelectorAll(selector : string, doc : HTMLElement = window.document) : Array<Element> {\n    return Array.prototype.slice.call(doc.querySelectorAll(selector));\n}\n\nexport function onClick(element : Element, handler : (Event) => void) {\n    element.addEventListener('touchstart', noop);\n    element.addEventListener('click', handler);\n    element.addEventListener('keypress', (event : Event) => {\n        // $FlowFixMe\n        if (event.keyCode === KEY_CODES.ENTER) {\n            return handler(event);\n        }\n    });\n}\n\nexport function getScript({ host = window.location.host, path } : { host? : string, path : string }) : ?HTMLScriptElement {\n    return inlineMemoize(getScript, () : ?HTMLScriptElement => {\n\n        let url = `${ host }${ path }`;\n        let scripts = Array.prototype.slice.call(document.getElementsByTagName('script'));\n\n        for (let script of scripts) {\n            if (!script.src) {\n                continue;\n            }\n\n            let src = script.src.replace(/^https?:\\/\\//, '').split('?')[0];\n\n            if (src === url) {\n                return script;\n            }\n        }\n    }, [ path ]);\n}\n\nexport function isLocalStorageEnabled() : boolean {\n    return inlineMemoize(isLocalStorageEnabled, () => {\n        try {\n            if (typeof window === 'undefined') {\n                return false;\n            }\n\n            if (window.localStorage) {\n                let value = Math.random().toString();\n                window.localStorage.setItem('__test__localStorage__', value);\n                let result = window.localStorage.getItem('__test__localStorage__');\n                window.localStorage.removeItem('__test__localStorage__');\n                if (value === result) {\n                    return true;\n                }\n            }\n        } catch (err) {\n            // pass\n        }\n        return false;\n    });\n}\n\nexport function getBrowserLocales() : Array<{ country? : string, lang : string }> {\n    let nav = window.navigator;\n\n    let locales = nav.languages\n        ? Array.prototype.slice.apply(nav.languages)\n        : [];\n\n    if (nav.language) {\n        locales.push(nav.language);\n    }\n\n    if (nav.userLanguage) {\n        locales.push(nav.userLanguage);\n    }\n\n    return locales.map(locale => {\n\n        if (locale && locale.match(/^[a-z]{2}[-_][A-Z]{2}$/)) {\n            let [ lang, country ] = locale.split(/[-_]/);\n            return { country, lang };\n        }\n\n        if (locale && locale.match(/^[a-z]{2}$/)) {\n            return { lang: locale };\n        }\n\n        return null;\n\n    }).filter(Boolean);\n}\n\n\nexport function appendChild(container : HTMLElement, child : HTMLElement | Text) {\n    container.appendChild(child);\n}\n\nexport function isElement(element : mixed) : boolean {\n\n    if (element instanceof window.Element) {\n        return true;\n    }\n\n    if (element !== null && typeof element === 'object' && element.nodeType === 1 && typeof element.style === 'object' && typeof element.ownerDocument === 'object') {\n        return true;\n    }\n\n    return false;\n}\n\nexport function getElementSafe(id : ElementRefType, doc : Document | HTMLElement = document) : ?HTMLElement {\n\n    if (isElement(id)) {\n        // $FlowFixMe\n        return id;\n    }\n\n    if (typeof id === 'string') {\n        return doc.querySelector(id);\n    }\n}\n\nexport function getElement(id : ElementRefType, doc : Document | HTMLElement = document) : HTMLElement {\n\n    let element = getElementSafe(id, doc);\n\n    if (element) {\n        return element;\n    }\n\n    throw new Error(`Can not find element: ${ stringify(id) }`);\n}\n\nexport function elementReady(id : ElementRefType) : ZalgoPromise<window.HTMLElement> {\n    return new ZalgoPromise((resolve, reject) => {\n\n        let name = stringify(id);\n        let el = getElementSafe(id);\n\n        if (el) {\n            return resolve(el);\n        }\n\n        if (isDocumentReady()) {\n            return reject(new Error(`Document is ready and element ${ name } does not exist`));\n        }\n\n        let interval = setInterval(() => {\n\n            el = getElementSafe(id);\n\n            if (el) {\n                clearInterval(interval);\n                return resolve(el);\n            }\n\n            if (isDocumentReady()) {\n                clearInterval(interval);\n                return reject(new Error(`Document is ready and element ${ name } does not exist`));\n            }\n        }, 10);\n    });\n}\n\nexport function PopupOpenError(message : string) {\n    this.message = message;\n}\n\nPopupOpenError.prototype = Object.create(Error.prototype);\n\ntype PopupOptions = {|\n    name? : string,\n    width? : number,\n    height? : number,\n    top? : number,\n    left? : number,\n    status? : 0 | 1,\n    resizable? : 0 | 1,\n    toolbar? : 0 | 1,\n    menubar? : 0 | 1,\n    scrollbars? : 0 | 1\n|};\n\nexport function popup(url : string, options? : PopupOptions) : CrossDomainWindowType {\n\n    // $FlowFixMe\n    options = options || {};\n\n    let { width, height } = options;\n\n    let top = 0;\n    let left = 0;\n\n    if (width) {\n        if (window.outerWidth) {\n            left = Math.round((window.outerWidth - width) / 2) + window.screenX;\n        } else if (window.screen.width) {\n            left = Math.round((window.screen.width - width) / 2);\n        }\n    }\n\n    if (height) {\n        if (window.outerHeight) {\n            top = Math.round((window.outerHeight - height) / 2) + window.screenY;\n        } else if (window.screen.height) {\n            top = Math.round((window.screen.height - height) / 2);\n        }\n    }\n\n    options = {\n        top,\n        left,\n        width,\n        height,\n        status:     1,\n        toolbar:    0,\n        menubar:    0,\n        resizable:  1,\n        scrollbars: 1,\n        ...options\n    };\n\n    let name = options.name || '';\n    delete options.name;\n\n    // eslint-disable-next-line array-callback-return\n    let params = Object.keys(options).map(key => {\n        // $FlowFixMe\n        if (options[key]) {\n            return `${ key }=${ stringify(options[key]) }`;\n        }\n    }).filter(Boolean).join(',');\n\n    let win;\n\n    try {\n        win = window.open(url, name, params, true);\n    } catch (err) {\n        throw new PopupOpenError(`Can not open popup window - ${ err.stack || err.message }`);\n    }\n\n    if (isWindowClosed(win)) {\n        let err = new PopupOpenError(`Can not open popup window - blocked`);\n        throw err;\n    }\n\n    window.addEventListener('unload', () => win.close());\n\n    return win;\n}\n\n\nexport function writeToWindow(win : SameDomainWindowType, html : string) {\n    try {\n        win.document.open();\n        win.document.write(html);\n        win.document.close();\n    } catch (err) {\n        try {\n            win.location = `javascript: document.open(); document.write(${ JSON.stringify(html) }); document.close();`;\n        } catch (err2) {\n            // pass\n        }\n    }\n}\n\nexport function writeElementToWindow(win : SameDomainWindowType, el : HTMLElement) {\n\n    let tag = el.tagName.toLowerCase();\n\n    if (tag !== 'html') {\n        throw new Error(`Expected element to be html, got ${ tag }`);\n    }\n\n    let documentElement = win.document.documentElement;\n\n    while (documentElement.children && documentElement.children.length) {\n        documentElement.removeChild(documentElement.children[0]);\n    }\n\n    while (el.children.length) {\n        documentElement.appendChild(el.children[0]);\n    }\n}\n\nexport function setStyle(el : HTMLElement, styleText : string, doc : Document = window.document) {\n    // $FlowFixMe\n    if (el.styleSheet) {\n        // $FlowFixMe\n        el.styleSheet.cssText = styleText;\n    } else {\n        el.appendChild(doc.createTextNode(styleText));\n    }\n}\n\nexport type ElementOptionsType = {\n    style? : { [ string ] : string },\n    id? : string,\n    class? : ?Array<string>,\n    attributes? : { [ string ] : string },\n    styleSheet? : ?string,\n    html? : ?string\n};\n\nlet awaitFrameLoadPromises : WeakMap<HTMLIFrameElement, ZalgoPromise<HTMLIFrameElement>>;\n\nexport function awaitFrameLoad(frame : HTMLIFrameElement) : ZalgoPromise<HTMLIFrameElement> {\n    awaitFrameLoadPromises = awaitFrameLoadPromises || new WeakMap();\n\n    if (awaitFrameLoadPromises.has(frame)) {\n        let promise = awaitFrameLoadPromises.get(frame);\n        if (promise) {\n            return promise;\n        }\n    }\n\n    let promise = new ZalgoPromise((resolve, reject) => {\n        frame.addEventListener('load', () => {\n            linkFrameWindow(frame);\n            resolve(frame);\n        });\n\n        frame.addEventListener('error', (err : Event) => {\n            if (frame.contentWindow) {\n                resolve(frame);\n            } else {\n                reject(err);\n            }\n        });\n    });\n\n    awaitFrameLoadPromises.set(frame, promise);\n\n    return promise;\n}\n\nexport function awaitFrameWindow(frame : HTMLIFrameElement) : ZalgoPromise<CrossDomainWindowType> {\n\n    if (frame.contentWindow) {\n        return ZalgoPromise.resolve(frame.contentWindow);\n    }\n\n    return awaitFrameLoad(frame).then(loadedFrame => {\n\n        if (!loadedFrame.contentWindow) {\n            throw new Error(`Could not find window in iframe`);\n        }\n\n        return loadedFrame.contentWindow;\n    });\n}\n\nexport function createElement(tag : string = 'div', options : ElementOptionsType = {}, container : ?HTMLElement) : HTMLElement {\n\n    tag = tag.toLowerCase();\n    let element = document.createElement(tag);\n\n    if (options.style) {\n        extend(element.style, options.style);\n    }\n\n    if (options.class) {\n        element.className = options.class.join(' ');\n    }\n\n    if (options.id) {\n        element.setAttribute('id', options.id);\n    }\n\n    if (options.attributes) {\n        for (let key of Object.keys(options.attributes)) {\n            element.setAttribute(key, options.attributes[key]);\n        }\n    }\n\n    if (options.styleSheet) {\n        setStyle(element, options.styleSheet);\n    }\n\n    if (container) {\n        appendChild(container, element);\n    }\n\n    if (options.html) {\n        if (tag === 'iframe') {\n            // $FlowFixMe\n            if (!container || !element.contentWindow) {\n                throw new Error(`Iframe html can not be written unless container provided and iframe in DOM`);\n            }\n\n            // $FlowFixMe\n            writeToWindow(element.contentWindow, options.html);\n\n        } else {\n            element.innerHTML = options.html;\n        }\n    }\n\n    return element;\n}\n\n\nexport type IframeElementOptionsType = {\n    style? : { [ string ] : string },\n    class? : ?Array<string>,\n    attributes? : { [ string ] : string },\n    styleSheet? : ?string,\n    html? : ?string,\n    url? : ?string\n};\n\nexport function iframe(options : IframeElementOptionsType = {}, container : ?HTMLElement, attempts : number = 3) : HTMLIFrameElement {\n\n    let attributes = options.attributes || {};\n    let style = options.style || {};\n\n    let frame = createElement('iframe', {\n        attributes: {\n            frameBorder:       '0',\n            allowTransparency: 'true',\n            ...attributes\n        },\n        style: {\n            backgroundColor: 'transparent',\n            ...style\n        },\n        html:  options.html,\n        class: options.class\n    });\n\n    // $FlowFixMe\n    awaitFrameLoad(frame);\n\n    if (container) {\n        let el = getElement(container);\n        el.appendChild(frame);\n    \n        // $FlowFixMe\n        let win = frame.contentWindow;\n    \n        if (win) {\n            try {\n                // $FlowFixMe\n                noop(win.name);\n            } catch (err) {\n                el.removeChild(frame);\n    \n                if (!attempts) {\n                    throw new Error(`Frame is cross-domain: ${ err.stack }`);\n                }\n    \n                return iframe(options, container, attempts - 1);\n            }\n        }\n    }\n\n    if (options.url || window.navigator.userAgent.match(/MSIE|Edge/i)) {\n        frame.setAttribute('src', options.url || 'about:blank');\n    }\n\n    // $FlowFixMe\n    return frame;\n}\n\nexport function addEventListener(obj : HTMLElement, event : string, handler : (event : Event) => void) : CancelableType {\n    obj.addEventListener(event, handler);\n    return {\n        cancel() {\n            obj.removeEventListener(event, handler);\n        }\n    };\n}\n\nexport function bindEvents(element : HTMLElement, eventNames : Array<string>, handler : (event : Event) => void) : CancelableType {\n\n    handler = once(handler);\n\n    for (let eventName of eventNames) {\n        element.addEventListener(eventName, handler);\n    }\n\n    return {\n        cancel: once(() => {\n            for (let eventName of eventNames) {\n                element.removeEventListener(eventName, handler);\n            }\n        })\n    };\n}\n\nconst VENDOR_PREFIXES = [ 'webkit', 'moz', 'ms', 'o' ];\n\nexport function setVendorCSS(element : HTMLElement, name : string, value : string) {\n\n    // $FlowFixMe\n    element.style[name] = value;\n\n    let capitalizedName = capitalizeFirstLetter(name);\n\n    for (let prefix of VENDOR_PREFIXES) {\n        // $FlowFixMe\n        element.style[`${ prefix }${ capitalizedName }`] = value;\n    }\n}\n\nconst ANIMATION_START_EVENTS = [ 'animationstart', 'webkitAnimationStart', 'oAnimationStart', 'MSAnimationStart' ];\nconst ANIMATION_END_EVENTS   = [ 'animationend', 'webkitAnimationEnd', 'oAnimationEnd', 'MSAnimationEnd' ];\n\nexport function animate(element : ElementRefType, name : string, clean : (Function) => void, timeout : number = 1000) : ZalgoPromise<void> {\n    return new ZalgoPromise((resolve, reject) => {\n\n        let el = getElement(element);\n\n        if (!el) {\n            return resolve();\n        }\n\n        let hasStarted = false;\n\n        let startTimeout;\n        let endTimeout;\n        let startEvent;\n        let endEvent;\n\n        function cleanUp() {\n            clearTimeout(startTimeout);\n            clearTimeout(endTimeout);\n            startEvent.cancel();\n            endEvent.cancel();\n        }\n\n        startEvent = bindEvents(el, ANIMATION_START_EVENTS, event => {\n\n            // $FlowFixMe\n            if (event.target !== el || event.animationName !== name) {\n                return;\n            }\n\n            clearTimeout(startTimeout);\n\n            event.stopPropagation();\n\n            startEvent.cancel();\n            hasStarted = true;\n\n            endTimeout = setTimeout(() => {\n                cleanUp();\n                resolve();\n            }, timeout);\n        });\n\n        endEvent = bindEvents(el, ANIMATION_END_EVENTS, event => {\n\n            // $FlowFixMe\n            if (event.target !== el || event.animationName !== name) {\n                return;\n            }\n\n            cleanUp();\n\n            // $FlowFixMe\n            if (typeof event.animationName === 'string' && event.animationName !== name) {\n                return reject(`Expected animation name to be ${ name }, found ${ event.animationName }`);\n            }\n\n            return resolve();\n        });\n\n        setVendorCSS(el, 'animationName', name);\n\n        startTimeout = setTimeout(() => {\n            if (!hasStarted) {\n                cleanUp();\n                return resolve();\n            }\n        }, 200);\n\n        if (clean) {\n            clean(cleanUp);\n        }\n    });\n}\n\nconst STYLE = {\n\n    DISPLAY: {\n        NONE:  'none',\n        BLOCK: 'block'\n    },\n\n    VISIBILITY: {\n        VISIBLE: 'visible',\n        HIDDEN:  'hidden'\n    },\n\n    IMPORTANT: 'important'\n};\n\nexport function makeElementVisible(element : HTMLElement) {\n    element.style.setProperty('visibility', '');\n}\n\nexport function makeElementInvisible(element : HTMLElement) {\n    element.style.setProperty('visibility', STYLE.VISIBILITY.HIDDEN, STYLE.IMPORTANT);\n}\n\n\nexport function showElement(element : HTMLElement) {\n    element.style.setProperty('display', '');\n}\n\nexport function hideElement(element : HTMLElement) {\n    element.style.setProperty('display', STYLE.DISPLAY.NONE, STYLE.IMPORTANT);\n}\n\nexport function destroyElement(element : HTMLElement) {\n    if (element && element.parentNode) {\n        element.parentNode.removeChild(element);\n    }\n}\n\nexport function showAndAnimate(element : HTMLElement, name : string, clean : (Function) => void) : ZalgoPromise<void> {\n    let animation = animate(element, name, clean);\n    showElement(element);\n    return animation;\n}\n\nexport function animateAndHide(element : HTMLElement, name : string, clean : (Function) => void) : ZalgoPromise<void> {\n    return animate(element, name, clean).then(() => {\n        hideElement(element);\n    });\n}\n\nexport function addClass(element : HTMLElement, name : string) {\n    element.classList.add(name);\n}\n\nexport function removeClass(element : HTMLElement, name : string) {\n    element.classList.remove(name);\n}\n\nexport function isElementClosed(el : HTMLElement) : boolean {\n    if (!el || !el.parentNode) {\n        return true;\n    }\n    return false;\n}\n\nexport function watchElementForClose(element : HTMLElement, handler : () => mixed) : CancelableType {\n    handler = once(handler);\n\n    let interval;\n\n    if (isElementClosed(element)) {\n        handler();\n    } else {\n        interval = safeInterval(() => {\n            if (isElementClosed(element)) {\n                interval.cancel();\n                handler();\n            }\n        }, 50);\n    }\n\n    return {\n        cancel() {\n            if (interval) {\n                interval.cancel();\n            }\n        }\n    };\n}\n\nexport function fixScripts(el : HTMLElement, doc : Document = window.document) {\n    for (let script of querySelectorAll('script', el)) {\n        let parentNode = script.parentNode;\n\n        if (!parentNode) {\n            continue;\n        }\n\n        let newScript = doc.createElement('script');\n        newScript.text = script.textContent;\n        parentNode.replaceChild(newScript, script);\n    }\n}\n\ntype OnResizeOptions = {|\n    width? : boolean,\n    height? : boolean,\n    interval? : number,\n    win? : SameDomainWindowType\n|};\n\nexport function onResize(el : HTMLElement, handler : ({ width : number, height : number }) => void, { width = true, height = true, interval = 100, win = window } : OnResizeOptions = {}) : {} {\n    let currentWidth = el.offsetWidth;\n    let currentHeight = el.offsetHeight;\n\n    handler({ width: currentWidth, height: currentHeight });\n\n    let check = () => {\n        let newWidth = el.offsetWidth;\n        let newHeight = el.offsetHeight;\n\n        if ((width && newWidth !== currentWidth) || (height && newHeight !== currentHeight)) {\n            handler({ width: newWidth, height: newHeight });\n        }\n\n        currentWidth = newWidth;\n        currentHeight = newHeight;\n    };\n\n    let observer;\n    let timeout;\n\n    if (typeof win.ResizeObserver !== 'undefined') {\n        observer = new win.ResizeObserver(check);\n        observer.observe(el);\n\n    } else if (typeof win.MutationObserver !== 'undefined') {\n        observer = new win.MutationObserver(check);\n        observer.observe(el, {\n            attributes:    true,\n            childList:     true,\n            subtree:       true,\n            characterData: false\n        });\n        win.addEventListener('resize', check);\n    } else {\n        let loop = () => {\n            check();\n            timeout = setTimeout(loop, interval);\n        };\n        loop();\n    }\n\n    return {\n        cancel: () => {\n            observer.disconnect();\n            window.removeEventListener('resize', check);\n            clearTimeout(timeout);\n        }\n    };\n}\n","/* @flow */\n\nexport function hasNativeWeakMap() : boolean {\n\n    if (typeof WeakMap === 'undefined') {\n        return false;\n    }\n\n    if (typeof Object.freeze === 'undefined') {\n        return false;\n    }\n\n    try {\n\n        let testWeakMap = new WeakMap();\n        let testKey = {};\n        let testValue = '__testvalue__';\n\n        Object.freeze(testKey);\n\n        testWeakMap.set(testKey, testValue);\n\n        if (testWeakMap.get(testKey) === testValue) {\n            return true;\n        }\n\n        return false;\n\n    } catch (err) {\n\n        return false;\n    }\n}\n","/* @flow */\n\nexport function isPerc(str : string) : boolean {\n    return typeof str === 'string' && (/^[0-9]+%$/).test(str);\n}\n\nexport function isPx(str : string) : boolean {\n    return typeof str === 'string' && (/^[0-9]+px$/).test(str);\n}\n\nexport function toNum(val : string | number) : number {\n\n    if (typeof val === 'number') {\n        return val;\n    }\n\n    let match = val.match(/^([0-9]+)(px|%)$/);\n\n    if (!match) {\n        throw new Error(`Could not match css value from ${ val }`);\n    }\n\n    return parseInt(match[1], 10);\n}\n\nexport function toPx(val : number | string) : string {\n    return `${ toNum(val) }px`;\n}\n\nexport function toCSS(val : number | string) : string {\n\n    if (typeof val === 'number') {\n        return toPx(val);\n    }\n\n    return isPerc(val) ? val : toPx(val);\n}\n\nexport function percOf(num : number, perc : string) : number {\n    return parseInt(num * toNum(perc)  / 100, 10);\n}\n\nexport function normalizeDimension(dim : string | number, max : number) : number {\n    if (typeof dim === 'number') {\n        return dim;\n    } else if (isPerc(dim)) {\n        return percOf(max, dim);\n    } else if (isPx(dim)) {\n        return toNum(dim);\n    } else {\n        throw new Error(`Can not normalize dimension: ${ dim }`);\n    }\n}\n","/* @flow */\n\nexport const BRIDGE_TIMEOUT = 5000;\nexport const CHILD_WINDOW_TIMEOUT = 5000;\n\nexport const ACK_TIMEOUT = 2000;\nexport const ACK_TIMEOUT_KNOWN = 10000;\nexport const RES_TIMEOUT = __TEST__ ? 2000 : -1;\n","/* @flow */\n\nexport const MESSAGE_TYPE = {\n    REQUEST:  ('postrobot_message_request' : 'postrobot_message_request'),\n    RESPONSE: ('postrobot_message_response' : 'postrobot_message_response'),\n    ACK:      ('postrobot_message_ack' : 'postrobot_message_ack')\n};\n\nexport const MESSAGE_ACK = {\n    SUCCESS: ('success' : 'success'),\n    ERROR:   ('error' : 'error')\n};\n\nexport const MESSAGE_NAME = {\n    METHOD:      ('postrobot_method' : 'postrobot_method'),\n    HELLO:       ('postrobot_hello' : 'postrobot_hello'),\n    OPEN_TUNNEL: ('postrobot_open_tunnel' : 'postrobot_open_tunnel')\n};\n\nexport const SEND_STRATEGY = {\n    POST_MESSAGE: ('postrobot_post_message' : 'postrobot_post_message'),\n    BRIDGE:       ('postrobot_bridge' : 'postrobot_bridge'),\n    GLOBAL:       ('postrobot_global' : 'postrobot_global')\n};\n\nexport const BRIDGE_NAME_PREFIX = '__postrobot_bridge__';\nexport const POSTROBOT_PROXY =    '__postrobot_proxy__';\n\nexport const WILDCARD = '*';\n\nexport const SERIALIZATION_TYPE = {\n    CROSS_DOMAIN_ZALGO_PROMISE: ('cross_domain_zalgo_promise' : 'cross_domain_zalgo_promise'),\n    CROSS_DOMAIN_FUNCTION:      ('cross_domain_function' : 'cross_domain_function'),\n    CROSS_DOMAIN_WINDOW:        ('cross_domain_window' : 'cross_domain_window')\n};\n","/* @flow */\n\nimport { type CrossDomainWindowType, type SameDomainWindowType } from 'cross-domain-utils/src';\nimport { WeakMap } from 'cross-domain-safe-weakmap/src';\nimport { getOrSet } from 'belter/src';\n\nexport function getGlobal(win : SameDomainWindowType = window) : Object {\n    if (win !== window) {\n        return win[__POST_ROBOT__.__GLOBAL_KEY__];\n    }\n    const global : Object = win[__POST_ROBOT__.__GLOBAL_KEY__] = win[__POST_ROBOT__.__GLOBAL_KEY__] || {};\n    return global;\n}\n\ntype ObjectGetter = () => Object;\nconst getObj : ObjectGetter = () => ({});\n\ntype GetOrSet<T> = ((string, () => T) => T) & ((string, () => void) => void);\n\ntype GlobalStore<T> = {|\n    get : ((string, T) => T) & ((string, void) => T | void),\n    set : (string, T) => T,\n    has : (string) => boolean,\n    del : (string) => void,\n    getOrSet : GetOrSet<T>,\n    reset : () => void,\n    keys : () => $ReadOnlyArray<string>\n|};\n\n// $FlowFixMe\nexport function globalStore<T : mixed>(key? : string = 'store', defStore? : ObjectGetter = getObj) : GlobalStore<T> {\n    return getOrSet(getGlobal(), key, () => {\n        let store = defStore();\n\n        return {\n            has: (storeKey) => {\n                return store.hasOwnProperty(storeKey);\n            },\n            get: (storeKey, defVal) => {\n                // $FlowFixMe\n                return store.hasOwnProperty(storeKey) ? store[storeKey] : defVal;\n            },\n            set: (storeKey, val) => {\n                store[storeKey] = val;\n                return val;\n            },\n            del: (storeKey) => {\n                delete store[storeKey];\n            },\n            getOrSet: (storeKey, getter) => {\n                // $FlowFixMe\n                return getOrSet(store, storeKey, getter);\n            },\n            reset: () => {\n                store = defStore();\n            },\n            keys: () => {\n                return Object.keys(store);\n            }\n        };\n    });\n}\n\nexport class WildCard {}\n\nexport function getWildcard() : WildCard {\n    const global = getGlobal();\n    global.WINDOW_WILDCARD = global.WINDOW_WILDCARD || new WildCard();\n    return global.WINDOW_WILDCARD;\n}\n\ntype WindowStore<T> = {|\n    get : ((CrossDomainWindowType | WildCard, T) => T) & ((CrossDomainWindowType | WildCard, void) => T | void),\n    set : (CrossDomainWindowType | WildCard, T) => T,\n    has : (CrossDomainWindowType | WildCard) => boolean,\n    del : (CrossDomainWindowType | WildCard) => void,\n    getOrSet : (CrossDomainWindowType | WildCard, () => T) => T\n|};\n\n// $FlowFixMe\nexport function windowStore<T>(key? : string = 'store', defStore? : ObjectGetter = getObj) : WindowStore<T> {\n    return globalStore('windowStore').getOrSet(key, () => {\n        const winStore = new WeakMap();\n\n        const getStore = (win : CrossDomainWindowType | WildCard) : ObjectGetter => {\n            return winStore.getOrSet(win, defStore);\n        };\n    \n        return {\n            has: (win) => {\n                const store = getStore(win);\n                return store.hasOwnProperty(key);\n            },\n            get: (win, defVal) => {\n                const store = getStore(win);\n                // $FlowFixMe\n                return store.hasOwnProperty(key) ? store[key] : defVal;\n            },\n            set: (win, val) => {\n                const store = getStore(win);\n                store[key] = val;\n                return val;\n            },\n            del: (win) => {\n                const store = getStore(win);\n                delete store[key];\n            },\n            getOrSet: (win, getter) => {\n                const store = getStore(win);\n                return getOrSet(store, key, getter);\n            }\n        };\n    });\n}\n","/* @flow */\n\nimport { getAncestor, type CrossDomainWindowType } from 'cross-domain-utils/src';\nimport { ZalgoPromise } from 'zalgo-promise/src';\nimport { noop, uniqueID } from 'belter/src';\n\nimport { MESSAGE_NAME, WILDCARD } from '../conf';\nimport { windowStore, globalStore } from '../global';\nimport type { OnType, SendType, CancelableType } from '../types';\n\nfunction getInstanceID() : string {\n    return globalStore('instance').getOrSet('instanceID', uniqueID);\n}\n\nfunction getHelloPromise(win : CrossDomainWindowType) : ZalgoPromise<{ win : CrossDomainWindowType, domain : string }> {\n    const helloPromises = windowStore('helloPromises');\n    return helloPromises.getOrSet(win, () => new ZalgoPromise());\n}\n\nfunction listenForHello({ on } : { on : OnType }) : CancelableType {\n    return on(MESSAGE_NAME.HELLO, { domain: WILDCARD }, ({ source, origin }) => {\n        getHelloPromise(source).resolve({ win: source, domain: origin });\n        return { instanceID: getInstanceID() };\n    });\n}\n\nexport function sayHello(win : CrossDomainWindowType, { send } : { send : SendType }) : ZalgoPromise<{ win : CrossDomainWindowType, domain : string, instanceID : string }> {\n    return send(win, MESSAGE_NAME.HELLO, { instanceID: getInstanceID() }, { domain: WILDCARD, timeout: -1 })\n        .then(({ origin, data: { instanceID } }) => {\n            getHelloPromise(win).resolve({ win, domain: origin });\n            return { win, domain: origin, instanceID };\n        });\n}\n\nexport function getWindowInstanceID(win : CrossDomainWindowType, { send } : { send : SendType }) : ZalgoPromise<string> {\n    return windowStore('windowInstanceIDPromises').getOrSet(win, () => {\n        return sayHello(win, { send }).then(({ instanceID }) => instanceID);\n    });\n}\n\nexport function initHello({ on, send } : { on : OnType, send : SendType }) : CancelableType {\n    return globalStore('builtinListeners').getOrSet('helloListener', () => {\n        const listener = listenForHello({ on });\n\n        const parent = getAncestor();\n        if (parent) {\n            sayHello(parent, { send }).catch(noop);\n        }\n\n        return listener;\n    });\n}\n\nexport function awaitWindowHello(win : CrossDomainWindowType, timeout : number = 5000, name : string = 'Window') : ZalgoPromise<{ win : CrossDomainWindowType, domain : string }> {\n    let promise = getHelloPromise(win);\n\n    if (timeout !== -1) {\n        promise = promise.timeout(timeout, new Error(`${ name } did not load after ${ timeout }ms`));\n    }\n\n    return promise;\n}\n","/* @flow */\n\nimport { type CrossDomainWindowType } from 'cross-domain-utils/src';\n\nimport { windowStore } from '../global';\n\nexport function markWindowKnown(win : CrossDomainWindowType) {\n    const knownWindows = windowStore('knownWindows');\n    knownWindows.set(win, true);\n}\n\nexport function isWindowKnown(win : CrossDomainWindowType) : boolean {\n    const knownWindows = windowStore('knownWindows');\n    return knownWindows.get(win, false);\n}\n","/* @flow */\n\nexport const TYPE = {\n    FUNCTION:  ('function' : 'function'),\n    ERROR:     ('error' : 'error'),\n    PROMISE:   ('promise' : 'promise'),\n    REGEX:     ('regex' : 'regex'),\n    DATE:      ('date' : 'date'),\n    ARRAY:     ('array' : 'array'),\n    OBJECT:    ('object' : 'object'),\n    STRING:    ('string' : 'string'),\n    NUMBER:    ('number' : 'number'),\n    BOOLEAN:   ('boolean' : 'boolean'),\n    NULL:      ('null' : 'null'),\n    UNDEFINED: ('undefined' : 'undefined')\n};\n","/* @flow */\n\nimport { TYPE } from './constants';\nimport type { CustomSerializedType } from './types';\n\nexport function isSerializedType(item : mixed) : boolean {\n    return (typeof item === 'object' && item !== null && typeof item.__type__ === 'string');\n}\n\nexport function determineType(val : mixed) : $Values<typeof TYPE> | void {\n    if (typeof val === 'undefined') {\n        return TYPE.UNDEFINED;\n    }\n\n    if (val === null) {\n        return TYPE.NULL;\n    }\n\n    if (Array.isArray(val)) {\n        return TYPE.ARRAY;\n    }\n\n    if (typeof val === 'function') {\n        return TYPE.FUNCTION;\n    }\n\n    if (typeof val === 'object') {\n\n        if (val instanceof Error) {\n            return TYPE.ERROR;\n        }\n\n        if (typeof val.then === 'function') {\n            return TYPE.PROMISE;\n        }\n\n        if (Object.prototype.toString.call(val) === '[object RegExp]') {\n            return TYPE.REGEX;\n        }\n\n        if (Object.prototype.toString.call(val) === '[object Date]') {\n            return TYPE.DATE;\n        }\n\n        return TYPE.OBJECT;\n    }\n\n    if (typeof val === 'string') {\n        return TYPE.STRING;\n    }\n\n    if (typeof val === 'number') {\n        return TYPE.NUMBER;\n    }\n\n    if (typeof val === 'boolean') {\n        return TYPE.BOOLEAN;\n    }\n}\n\nexport function serializeType<T : string, V : mixed>(type : T, val : V) : CustomSerializedType<T, V> {\n    return {\n        __type__: type,\n        __val__:  val\n    };\n}\n","/* @flow */\n\nimport { TYPE } from './constants';\nimport type { Thenable, CustomSerializedType, NativeSerializedType } from './types';\nimport { determineType, isSerializedType } from './common';\nimport {\n    serializeFunction,\n    serializeError, type SerializedError,\n    serializePromise,\n    serializeRegex, type SerializedRegex,\n    serializeDate, type SerializedDate,\n    serializeArray,\n    serializeObject,\n    serializeString,\n    serializeNumber,\n    serializeBoolean,\n    serializeNull\n} from './serializers';\n\ntype NativeSerializer<V : mixed, S : mixed, T : $Values<typeof TYPE>> = (value : V, key : string) => NativeSerializedType<T, S>;\ntype CustomSerializer<V : mixed, S : mixed, T : string> = (value : V, key : string) => CustomSerializedType<T, S>;\ntype PrimitiveSerializer<V : mixed, S : mixed> = (value : V, key : string) => S;\ntype CustomOrPrimitiveSerializer<V : mixed, T : string> = CustomSerializer<V, *, T> | PrimitiveSerializer<V, *>;\ntype NativeOrCustomOrPrimitiveSerializer<V : mixed, S : mixed, T : string> = NativeSerializer<V, S, T> | CustomOrPrimitiveSerializer<V, T>;\n\ntype Serializers = {|\n    function? : CustomOrPrimitiveSerializer<Function, typeof TYPE.FUNCTION>,\n    error? : NativeOrCustomOrPrimitiveSerializer<Error, SerializedError, typeof TYPE.ERROR>,\n    promise? : CustomOrPrimitiveSerializer<Thenable, typeof TYPE.PROMISE>,\n    regex? : NativeOrCustomOrPrimitiveSerializer<RegExp, SerializedRegex, typeof TYPE.REGEX>,\n    date? : NativeOrCustomOrPrimitiveSerializer<Date, SerializedDate, typeof TYPE.DATE>,\n    array? : CustomOrPrimitiveSerializer<$ReadOnlyArray<mixed>, typeof TYPE.ARRAY>,\n    object? : CustomOrPrimitiveSerializer<Object, typeof TYPE.OBJECT>,\n    string? : CustomOrPrimitiveSerializer<string, typeof TYPE.STRING>,\n    number? : CustomOrPrimitiveSerializer<number, typeof TYPE.NUMBER>,\n    boolean? : CustomOrPrimitiveSerializer<boolean, typeof TYPE.BOOLEAN>,\n    null? : CustomOrPrimitiveSerializer<null, typeof TYPE.NULL>\n|};\n\nconst SERIALIZER : Serializers = {\n    [ TYPE.FUNCTION ]:  serializeFunction,\n    [ TYPE.ERROR ]:     serializeError,\n    [ TYPE.PROMISE ]:   serializePromise,\n    [ TYPE.REGEX ]:     serializeRegex,\n    [ TYPE.DATE ]:      serializeDate,\n    [ TYPE.ARRAY ]:     serializeArray,\n    [ TYPE.OBJECT ]:    serializeObject,\n    [ TYPE.STRING ]:    serializeString,\n    [ TYPE.NUMBER ]:    serializeNumber,\n    [ TYPE.BOOLEAN ]:   serializeBoolean,\n    [ TYPE.NULL ]:      serializeNull\n};\n\n// $FlowFixMe\nconst defaultSerializers : Serializers = {};\n\nexport function serialize<T : mixed>(obj : T, serializers : Serializers = defaultSerializers) : string {\n\n    function replacer(key) : ?mixed {\n        const val = this[key];\n\n        if (isSerializedType(this)) {\n            return val;\n        }\n        \n        const type = determineType(val);\n\n        if (!type) {\n            return val;\n        }\n\n        // $FlowFixMe\n        const serializer = serializers[type] || SERIALIZER[type];\n\n        if (!serializer) {\n            return val;\n        }\n\n        return serializer(val, key);\n    }\n\n    const result = JSON.stringify(obj, replacer);\n\n    if (typeof result === 'undefined') {\n        return TYPE.UNDEFINED;\n    }\n\n    return result;\n}\n","/* @flow */\n\nexport type SerializedFunction = void;\n\nexport function serializeFunction() : SerializedFunction {\n    // pass\n}\n\nexport function deserializeFunction() {\n    throw new Error(`Function serialization is not implemented; nothing to deserialize`);\n}\n","/* @flow */\n\nimport { serializeType } from '../common';\nimport { TYPE } from '../constants';\nimport type { NativeSerializedType } from '../types';\n\nexport type SerializedError = {|\n    message : string,\n    stack : string,\n    code : string | number | void\n|};\n\n// $FlowFixMe\nexport function serializeError({ message, stack, code } : Error) : NativeSerializedType<typeof TYPE.ERROR, SerializedError> {\n    return serializeType(TYPE.ERROR, { message, stack, code });\n}\n\nexport function deserializeError({ message, stack, code } : SerializedError) : Error {\n    const error = new Error(message);\n    // $FlowFixMe\n    error.code = code;\n    error.stack = `${ stack }\\n\\n${ error.stack }`;\n    return error;\n}\n","/* @flow */\n\nexport type SerializedPromise = void;\n\nexport function serializePromise() : SerializedPromise {\n    // pass\n}\n\nexport function deserializePromise() {\n    throw new Error(`Promise serialization is not implemented; nothing to deserialize`);\n}\n","/* @flow */\n\nimport { serializeType } from '../common';\nimport { TYPE } from '../constants';\nimport type { NativeSerializedType } from '../types';\n\nexport type SerializedRegex = string;\n\nexport function serializeRegex(val : RegExp) : NativeSerializedType<typeof TYPE.REGEX, SerializedRegex> {\n    return serializeType(TYPE.REGEX, val.source);\n}\n\nexport function deserializeRegex(val : string) : RegExp {\n    // eslint-disable-next-line security/detect-non-literal-regexp\n    return new RegExp(val);\n}\n","/* @flow */\n\nimport { serializeType } from '../common';\nimport { TYPE } from '../constants';\nimport type { NativeSerializedType } from '../types';\n\nexport type SerializedDate = string;\n\nexport function serializeDate(val : Date) : NativeSerializedType<typeof TYPE.DATE, SerializedDate> {\n    return serializeType(TYPE.DATE, val.toJSON());\n}\n\nexport function deserializeDate(val : string) : Date {\n    return new Date(val);\n}\n","/* @flow */\n\nexport type SerializedArray<T : mixed = mixed> = $ReadOnlyArray<T>;\n\nexport function serializeArray<T : mixed>(val : $ReadOnlyArray<T>) : SerializedArray<T> {\n    return val;\n}\n\nexport function deserializeArray<T : mixed>(val : SerializedArray<T>) : $ReadOnlyArray<T> {\n    return val;\n}\n","/* @flow */\n\nexport type SerializedObject = Object;\n\nexport function serializeObject(val : Object) : SerializedObject {\n    return val;\n}\n\nexport function deserializeObject(val : SerializedObject) : Object {\n    return val;\n}\n","/* @flow */\n\nexport type SerializedString = string;\n\nexport function serializeString(val : string) : SerializedString {\n    return val;\n}\n\nexport function deserializeString(val : SerializedString) : string {\n    return val;\n}\n","/* @flow */\n\nexport type SerializedNumber = number;\n\nexport function serializeNumber(val : number) : SerializedNumber {\n    return val;\n}\n\nexport function deserializeNumber(val : SerializedNumber) : number {\n    return val;\n}\n","/* @flow */\n\nexport type SerializedBoolean = boolean;\n\nexport function serializeBoolean(val : boolean) : SerializedBoolean {\n    return val;\n}\n\nexport function deserializeBoolean(val : SerializedBoolean) : boolean {\n    return val;\n}\n","/* @flow */\n\nexport type SerializedNull = null;\n\nexport function serializeNull(val : null) : SerializedNull {\n    return val;\n}\n\nexport function deserializeNull(val : SerializedNull) : null {\n    return val;\n}\n","/* @flow */\n\nimport type { Thenable } from './types';\nimport { TYPE } from './constants';\nimport { determineType, isSerializedType } from './common';\nimport {\n    deserializeFunction,\n    deserializeError, type SerializedError,\n    deserializePromise,\n    deserializeRegex, type SerializedRegex,\n    deserializeDate, type SerializedDate,\n    deserializeArray,\n    deserializeObject,\n    deserializeString,\n    deserializeNumber,\n    deserializeBoolean,\n    deserializeNull\n} from './serializers';\n\ntype Deserializer<V : mixed, S : mixed> = (serializedValue : S, key : string) => V;\ntype PrimitiveDeserializer<V, S = V> = (serializedValue : S, key : string) => V;\n\ntype Deserializers = {\n    function? : Deserializer<Function, *>,\n    error? : Deserializer<Error, SerializedError>,\n    promise? : Deserializer<Thenable, *>,\n    regex? : Deserializer<RegExp, SerializedRegex>,\n    date? : Deserializer<Date, SerializedDate>,\n    array? : PrimitiveDeserializer<$ReadOnlyArray<mixed>>,\n    object? : PrimitiveDeserializer<Object>,\n    string? : PrimitiveDeserializer<string>,\n    number? : PrimitiveDeserializer<number>,\n    boolean? : PrimitiveDeserializer<boolean>,\n    null? : PrimitiveDeserializer<null>,\n    [string] : Deserializer<mixed, *>\n};\n\n// $FlowFixMe\nconst DESERIALIZER : Deserializers = {\n    [ TYPE.FUNCTION ]:  deserializeFunction,\n    [ TYPE.ERROR ]:     deserializeError,\n    [ TYPE.PROMISE ]:   deserializePromise,\n    [ TYPE.REGEX ]:     deserializeRegex,\n    [ TYPE.DATE ]:      deserializeDate,\n    [ TYPE.ARRAY ]:     deserializeArray,\n    [ TYPE.OBJECT ]:    deserializeObject,\n    [ TYPE.STRING ]:    deserializeString,\n    [ TYPE.NUMBER ]:    deserializeNumber,\n    [ TYPE.BOOLEAN ]:   deserializeBoolean,\n    [ TYPE.NULL ]:      deserializeNull\n};\n\n// $FlowFixMe\nconst defaultDeserializers : Deserializers = {};\n\nexport function deserialize<T : mixed | null | void>(str : string, deserializers : Deserializers = defaultDeserializers) : T {\n    if (str === TYPE.UNDEFINED) {\n        // $FlowFixMe\n        return;\n    }\n\n    function replacer(key, val) : ?mixed {\n        if (isSerializedType(this)) {\n            return val;\n        }\n\n        let type;\n        let value;\n\n        if (isSerializedType(val)) {\n            type = val.__type__;\n            value = val.__val__;\n        } else {\n            type = determineType(val);\n            value = val;\n        }\n\n        if (!type) {\n            return value;\n        }\n\n        // $FlowFixMe\n        const deserializer = deserializers[type] || DESERIALIZER[type];\n\n        if (!deserializer) {\n            return value;\n        }\n\n        return deserializer(value, key);\n    }\n\n    return JSON.parse(str, replacer);\n}\n","/* @flow */\n\nimport { ZalgoPromise } from 'zalgo-promise/src';\nimport { getDomain, isSameDomain, isOpener, isSameTopWindow, matchDomain, getUserAgent, getDomainFromUrl, type CrossDomainWindowType } from 'cross-domain-utils/src';\nimport { noop } from 'belter/src';\n\nimport { BRIDGE_NAME_PREFIX } from '../conf';\nimport { windowStore } from '../global';\n\nexport function needsBridgeForBrowser() : boolean {\n\n    if (getUserAgent(window).match(/MSIE|trident|edge\\/12|edge\\/13/i)) {\n        return true;\n    }\n\n    return false;\n}\n\nexport function needsBridgeForWin(win : CrossDomainWindowType) : boolean {\n\n    if (!isSameTopWindow(window, win)) {\n        return true;\n    }\n\n    return false;\n}\n\nexport function needsBridgeForDomain(domain : ?string, win : ?CrossDomainWindowType) : boolean {\n\n    if (domain) {\n        if (getDomain() !== getDomainFromUrl(domain)) {\n            return true;\n        }\n    } else if (win) {\n        if (!isSameDomain(win))  {\n            return true;\n        }\n    }\n\n    return false;\n}\n\nexport function needsBridge({ win, domain } : { win? : CrossDomainWindowType, domain? : string }) : boolean {\n\n    if (!needsBridgeForBrowser()) {\n        return false;\n    }\n\n    if (domain && !needsBridgeForDomain(domain, win)) {\n        return false;\n    }\n\n    if (win && !needsBridgeForWin(win)) {\n        return false;\n    }\n\n    return true;\n}\n\nexport function getBridgeName(domain : string) : string {\n\n    domain = domain || getDomainFromUrl(domain);\n\n    const sanitizedDomain = domain.replace(/[^a-zA-Z0-9]+/g, '_');\n\n    const id = `${ BRIDGE_NAME_PREFIX }_${ sanitizedDomain }`;\n\n    return id;\n}\n\nexport function isBridge() : boolean {\n    return Boolean(window.name && window.name === getBridgeName(getDomain()));\n}\n\nexport const documentBodyReady = new ZalgoPromise(resolve => {\n\n    if (window.document && window.document.body) {\n        return resolve(window.document.body);\n    }\n\n    const interval = setInterval(() => {\n        if (window.document && window.document.body) {\n            clearInterval(interval);\n            return resolve(window.document.body);\n        }\n    }, 10);\n});\n\nexport function registerRemoteWindow(win : CrossDomainWindowType) {\n    const remoteWindowPromises = windowStore('remoteWindowPromises');\n    remoteWindowPromises.getOrSet(win, () => new ZalgoPromise());\n}\n\nexport function findRemoteWindow(win : CrossDomainWindowType) : ZalgoPromise<(remoteWin : CrossDomainWindowType, message : string, remoteDomain : string) => void> {\n    const remoteWindowPromises = windowStore('remoteWindowPromises');\n    const remoteWinPromise = remoteWindowPromises.get(win);\n\n    if (!remoteWinPromise) {\n        throw new Error(`Remote window promise not found`);\n    }\n\n    return remoteWinPromise;\n}\n\nexport function registerRemoteSendMessage(win : CrossDomainWindowType, domain : string, sendMessage : (message : string) => void) {\n    const sendMessageWrapper = (remoteWin : CrossDomainWindowType, remoteDomain : string, message : string) => {\n        if (remoteWin !== win) {\n            throw new Error(`Remote window does not match window`);\n        }\n\n        if (!matchDomain(remoteDomain, domain)) {\n            throw new Error(`Remote domain ${ remoteDomain } does not match domain ${ domain }`);\n        }\n\n        sendMessage.fireAndForget(message);\n    };\n\n    findRemoteWindow(win).resolve(sendMessageWrapper);\n}\n\nexport function rejectRemoteSendMessage(win : CrossDomainWindowType, err : Error) {\n    findRemoteWindow(win).reject(err).catch(noop);\n}\n\nexport function sendBridgeMessage(win : CrossDomainWindowType, domain : string, message : string) : ZalgoPromise<void> {\n\n    const messagingChild  = isOpener(window, win);\n    const messagingParent = isOpener(win, window);\n\n    if (!messagingChild && !messagingParent) {\n        throw new Error(`Can only send messages to and from parent and popup windows`);\n    }\n\n    return findRemoteWindow(win).then(sendMessage => {\n        return sendMessage(win, domain, message);\n    });\n}\n","/* @flow */\n\nimport { ZalgoPromise } from 'zalgo-promise/src';\nimport { getDomain, getFrameByName, isWindowClosed, getDomainFromUrl, normalizeMockUrl, type CrossDomainWindowType } from 'cross-domain-utils/src';\n\nimport { BRIDGE_TIMEOUT, MESSAGE_NAME } from '../conf';\nimport { awaitWindowHello } from '../lib';\nimport { windowStore, globalStore } from '../global';\nimport type { OnType, SendType, ReceiveMessageType } from '../types';\n\nimport { getBridgeName, documentBodyReady, registerRemoteSendMessage, registerRemoteWindow } from './common';\n\nexport function listenForOpenTunnel({ on, send, receiveMessage } : { on : OnType, send : SendType, receiveMessage : ReceiveMessageType }) {\n    const popupWindowsByName = globalStore('popupWindowsByName');\n\n    on(MESSAGE_NAME.OPEN_TUNNEL, ({ source, origin, data }) => {\n        const bridgePromise = globalStore('bridges').get(origin);\n\n        if (!bridgePromise) {\n            throw new Error(`Can not find bridge promise for domain ${ origin }`);\n        }\n\n        return bridgePromise.then(bridge => {\n\n            // $FlowFixMe\n            if (source !== bridge) {\n                // $FlowFixMe\n                throw new Error(`Message source does not matched registered bridge for domain ${ origin }`);\n            }\n\n            if (!data.name) {\n                throw new Error(`Register window expected to be passed window name`);\n            }\n\n            if (!data.sendMessage) {\n                throw new Error(`Register window expected to be passed sendMessage method`);\n            }\n\n            if (!popupWindowsByName.has(data.name)) {\n                throw new Error(`Window with name ${ data.name } does not exist, or was not opened by this window`);\n            }\n\n            // $FlowFixMe\n            if (!popupWindowsByName.get(data.name).domain) {\n                throw new Error(`We do not have a registered domain for window ${ data.name }`);\n            }\n\n            // $FlowFixMe\n            if (popupWindowsByName.get(data.name).domain !== origin) {\n                // $FlowFixMe\n                throw new Error(`Message origin ${ origin } does not matched registered window origin ${ popupWindowsByName.get(data.name).domain }`);\n            }\n\n            // $FlowFixMe\n            registerRemoteSendMessage(popupWindowsByName.get(data.name).win, origin, data.sendMessage);\n\n            return {\n                sendMessage(message) {\n\n                    if (!window || window.closed) {\n                        return;\n                    }\n\n                    const winDetails = popupWindowsByName.get(data.name);\n\n                    if (!winDetails) {\n                        return;\n                    }\n\n                    try {\n                        receiveMessage({\n                            data:   message,\n                            origin: winDetails.domain,\n                            source: winDetails.win\n                        }, { on, send });\n                    } catch (err) {\n                        ZalgoPromise.reject(err);\n                    }\n                }\n            };\n        });\n    });\n}\n\nfunction openBridgeFrame(name : string, url : string) : HTMLIFrameElement {\n\n    const iframe = document.createElement(`iframe`);\n\n    iframe.setAttribute(`name`, name);\n    iframe.setAttribute(`id`,   name);\n\n    iframe.setAttribute(`style`, `display: none; margin: 0; padding: 0; border: 0px none; overflow: hidden;`);\n    iframe.setAttribute(`frameborder`, `0`);\n    iframe.setAttribute(`border`, `0`);\n    iframe.setAttribute(`scrolling`, `no`);\n    iframe.setAttribute(`allowTransparency`, `true`);\n\n    iframe.setAttribute(`tabindex`, `-1`);\n    iframe.setAttribute(`hidden`, `true`);\n    iframe.setAttribute(`title`, ``);\n    iframe.setAttribute(`role`, `presentation`);\n\n    iframe.src = url;\n\n    return iframe;\n}\n\nexport function hasBridge(url : string, domain : string) : boolean {\n    const bridges = globalStore('bridges');\n    return bridges.has(domain || getDomainFromUrl(url));\n}\n\nexport function openBridge(url : string, domain : string) : ZalgoPromise<CrossDomainWindowType> {\n    const bridges = globalStore('bridges');\n    const bridgeFrames = globalStore('bridgeFrames');\n    \n    domain = domain || getDomainFromUrl(url);\n    \n    return bridges.getOrSet(domain, () => ZalgoPromise.try(() => {\n\n        if (getDomain() === domain) {\n            throw new Error(`Can not open bridge on the same domain as current domain: ${ domain }`);\n        }\n\n        const name  = getBridgeName(domain);\n        const frame = getFrameByName(window, name);\n\n        if (frame) {\n            throw new Error(`Frame with name ${ name } already exists on page`);\n        }\n\n        const iframe = openBridgeFrame(name, url);\n        bridgeFrames.set(domain, iframe);\n\n        return documentBodyReady.then(body => {\n\n            body.appendChild(iframe);\n            const bridge = iframe.contentWindow;\n\n            return new ZalgoPromise((resolve, reject) => {\n\n                iframe.addEventListener('load', resolve);\n                iframe.addEventListener('error', reject);\n\n            }).then(() => {\n\n                return awaitWindowHello(bridge, BRIDGE_TIMEOUT, `Bridge ${ url }`);\n\n            }).then(() => {\n\n                return bridge;\n            });\n        });\n    }));\n}\n\ntype WinDetails = {|\n    win : CrossDomainWindowType,\n    domain? : ?string,\n    name? : ?string\n|};\n\nexport function linkWindow({ win, name, domain } : WinDetails) : WinDetails {\n    const popupWindowsByName = globalStore('popupWindowsByName');\n    const popupWindowsByWin = windowStore('popupWindowsByWin');\n\n    for (const winName of popupWindowsByName.keys()) {\n        // $FlowFixMe\n        if (isWindowClosed(popupWindowsByName.get(winName).win)) {\n            popupWindowsByName.del(winName);\n        }\n    }\n\n    const details : WinDetails = popupWindowsByWin.getOrSet(win, () => {\n        if (!name) {\n            return { win };\n        }\n        \n        return popupWindowsByName.getOrSet(name, () => {\n            return { win, name };\n        });\n    });\n\n    if (details.win && details.win !== win) {\n        throw new Error(`Different window already linked for window: ${ name || 'undefined' }`);\n    }\n\n    if (name) {\n        if (details.name && details.name !== name) {\n            throw new Error(`Different window already linked for name ${ name }: ${ details.name }`);\n        }\n\n        details.name = name;\n        popupWindowsByName.set(name, details);\n    }\n\n    if (domain) {\n        details.domain = domain;\n        registerRemoteWindow(win);\n    }\n\n    popupWindowsByWin.set(win, details);\n    \n    return details;\n}\n\nexport function linkUrl(win : CrossDomainWindowType, url : string) {\n    linkWindow({ win, domain: getDomainFromUrl(url) });\n}\n\nexport function listenForWindowOpen() {\n    const windowOpen = window.open;\n\n    window.open = function windowOpenWrapper(url : string, name : string, options : string, last : mixed) : mixed {\n        const win = windowOpen.call(this, normalizeMockUrl(url), name, options, last);\n    \n        if (!win) {\n            return win;\n        }\n    \n        linkWindow({ win, name, domain: url ? getDomainFromUrl(url) : null });\n    \n        return win;\n    };\n}\n\nexport function destroyBridges() {\n    const bridges = globalStore('bridges');\n    const bridgeFrames = globalStore('bridgeFrames');\n\n    for (const domain of bridgeFrames.keys()) {\n        const frame = bridgeFrames.get(domain);\n        if (frame && frame.parentNode) {\n            frame.parentNode.removeChild(frame);\n        }\n    }\n    bridgeFrames.reset();\n    bridges.reset();\n}\n","/* @flow */\n\nimport type { OnType, SendType, ReceiveMessageType } from '../types';\n\nimport { listenForWindowOpen, listenForOpenTunnel } from './parent';\nimport { setupOpenTunnelToParent } from './bridge';\nimport { openTunnelToOpener } from './child';\n\nexport function setupBridge({ on, send, receiveMessage } : { on : OnType, send : SendType, receiveMessage : ReceiveMessageType }) {\n    listenForWindowOpen();\n    listenForOpenTunnel({ on, send, receiveMessage });\n    setupOpenTunnelToParent({ on, send });\n    openTunnelToOpener({ on, send, receiveMessage });\n}\n","/* @flow */\n\nimport { type ZalgoPromise } from 'zalgo-promise/src';\nimport { getParent, isWindowClosed, type CrossDomainWindowType } from 'cross-domain-utils/src';\nimport { noop, uniqueID } from 'belter/src';\n\nimport { MESSAGE_NAME, WILDCARD } from '../conf';\nimport { getGlobal, globalStore } from '../global';\nimport type { SendType, ResponseMessageEvent } from '../types';\n\nfunction cleanTunnelWindows() {\n    const tunnelWindows = globalStore('tunnelWindows');\n\n    for (const key of tunnelWindows.keys()) {\n        const tunnelWindow = tunnelWindows[key];\n\n        try {\n            noop(tunnelWindow.source);\n        } catch (err) {\n            tunnelWindows.del(key);\n            continue;\n        }\n\n        if (isWindowClosed(tunnelWindow.source)) {\n            tunnelWindows.del(key);\n        }\n    }\n}\n\ntype TunnelWindowDataType = {|\n    name : string,\n    source : CrossDomainWindowType,\n    canary : () => void,\n    sendMessage : (message : string) => void\n|};\n\nfunction addTunnelWindow({ name, source, canary, sendMessage } : TunnelWindowDataType) : string {\n    cleanTunnelWindows();\n    const id = uniqueID();\n    const tunnelWindows = globalStore('tunnelWindows');\n    tunnelWindows.set(id, { name, source, canary, sendMessage });\n    return id;\n}\n\nexport function setupOpenTunnelToParent({ send } : { send : SendType }) {\n    getGlobal(window).openTunnelToParent = function openTunnelToParent({ name, source, canary, sendMessage } : TunnelWindowDataType) : ZalgoPromise<ResponseMessageEvent> {\n\n        const tunnelWindows = globalStore('tunnelWindows');\n        const parentWindow = getParent(window);\n    \n        if (!parentWindow) {\n            throw new Error(`No parent window found to open tunnel to`);\n        }\n    \n        const id = addTunnelWindow({ name, source, canary, sendMessage });\n    \n        return send(parentWindow, MESSAGE_NAME.OPEN_TUNNEL, {\n    \n            name,\n    \n            sendMessage() {\n    \n                const tunnelWindow = tunnelWindows.get(id);\n    \n                try {\n                    // IE gets antsy if you try to even reference a closed window\n                    noop(tunnelWindow && tunnelWindow.source);\n                } catch (err) {\n                    tunnelWindows.del(id);\n                    return;\n                }\n    \n                if (!tunnelWindow || !tunnelWindow.source || isWindowClosed(tunnelWindow.source)) {\n                    return;\n                }\n    \n                try {\n                    tunnelWindow.canary();\n                } catch (err) {\n                    return;\n                }\n    \n                tunnelWindow.sendMessage.apply(this, arguments);\n            }\n    \n        }, { domain: WILDCARD });\n    };\n}\n","/* @flow */\n\nimport { ZalgoPromise } from 'zalgo-promise/src';\nimport { isSameDomain, getOpener, getDomain, getFrameByName, type CrossDomainWindowType } from 'cross-domain-utils/src';\nimport { noop } from 'belter/src';\n\nimport { getGlobal, windowStore } from '../global';\nimport type { OnType, SendType, ReceiveMessageType } from '../types';\n\nimport { needsBridge, registerRemoteWindow, rejectRemoteSendMessage, registerRemoteSendMessage, getBridgeName } from './common';\n\nfunction awaitRemoteBridgeForWindow (win : CrossDomainWindowType) : ZalgoPromise<?CrossDomainWindowType> {\n    return windowStore('remoteBridgeAwaiters').getOrSet(win, () => {\n        return ZalgoPromise.try(() => {\n            const frame = getFrameByName(win, getBridgeName(getDomain()));\n\n            if (!frame) {\n                throw new Error(`Bridge not found for domain: ${ getDomain() }`);\n            }\n\n            // $FlowFixMe\n            if (isSameDomain(frame) && getGlobal(frame)) {\n                return frame;\n            }\n\n            return new ZalgoPromise((resolve, reject) => {\n\n                let interval;\n                let timeout; // eslint-disable-line prefer-const\n\n                interval = setInterval(() => { // eslint-disable-line prefer-const\n                    // $FlowFixMe\n                    if (frame && isSameDomain(frame) && getGlobal(frame)) {\n                        clearInterval(interval);\n                        clearTimeout(timeout);\n                        return resolve(frame);\n                    }\n                }, 100);\n\n                timeout = setTimeout(() => {\n                    clearInterval(interval);\n                    return reject(new Error(`Bridge not found for domain: ${ getDomain() }`));\n                }, 2000);\n            });\n        });\n    });\n}\n\nexport function openTunnelToOpener({ on, send, receiveMessage } : { on : OnType, send : SendType, receiveMessage : ReceiveMessageType }) : ZalgoPromise<void> {\n    return ZalgoPromise.try(() => {\n        const opener = getOpener(window);\n\n        if (!opener) {\n            return;\n        }\n\n        if (!needsBridge({ win: opener })) {\n            return;\n        }\n\n        registerRemoteWindow(opener);\n\n        return awaitRemoteBridgeForWindow(opener).then(bridge => {\n\n            if (!window.name) {\n                return rejectRemoteSendMessage(opener, new Error(`Can not register with opener: window does not have a name`));\n            }\n\n            // $FlowFixMe\n            return getGlobal(bridge).openTunnelToParent({\n\n                name: window.name,\n\n                source: window,\n\n                canary() {\n                    // pass\n                },\n\n                sendMessage(message) {\n\n                    try {\n                        noop(window);\n                    } catch (err) {\n                        return;\n                    }\n\n                    if (!window || window.closed) {\n                        return;\n                    }\n\n                    try {\n                        receiveMessage({\n                            data:   message,\n                            origin: this.origin,\n                            source: this.source\n                        }, { on, send });\n                    } catch (err) {\n                        ZalgoPromise.reject(err);\n                    }\n                }\n\n            }).then(({ source, origin, data }) => {\n\n                if (source !== opener) {\n                    throw new Error(`Source does not match opener`);\n                }\n\n                registerRemoteSendMessage(source, origin, data.sendMessage);\n\n            }).catch(err => {\n\n                rejectRemoteSendMessage(opener, err);\n                throw err;\n            });\n        });\n    });\n}\n","/* @flow */\n\nimport { isSameDomain, isWindowClosed, type CrossDomainWindowType, type DomainMatcher, getOpener, WINDOW_TYPE, isWindow } from 'cross-domain-utils/src';\nimport { ZalgoPromise } from 'zalgo-promise/src';\nimport { uniqueID, memoizePromise } from 'belter/src';\nimport { serializeType, type CustomSerializedType } from 'universal-serialize/src';\n\nimport { SERIALIZATION_TYPE } from '../conf';\nimport { windowStore, globalStore } from '../global';\nimport { getWindowInstanceID } from '../lib';\nimport { linkWindow } from '../bridge';\nimport type { OnType, SendType } from '../types';\n\nfunction cleanupProxyWindows() {\n    const idToProxyWindow = globalStore('idToProxyWindow');\n    for (const id of idToProxyWindow.keys()) {\n        // $FlowFixMe\n        if (idToProxyWindow.get(id).shouldClean()) {\n            idToProxyWindow.del(id);\n        }\n    }\n}\n\ntype SerializedProxyWindow = {|\n    id : string,\n    type : $Values<typeof WINDOW_TYPE>,\n    close : () => ZalgoPromise<void>,\n    focus : () => ZalgoPromise<void>,\n    isClosed : () => ZalgoPromise<boolean>,\n    setLocation : (string) => ZalgoPromise<void>,\n    setName : (string) => ZalgoPromise<void>,\n    getInstanceID : () => ZalgoPromise<string>\n|};\n\nexport class ProxyWindow {\n\n    isProxyWindow : true = true\n    serializedWindow : SerializedProxyWindow\n    actualWindow : CrossDomainWindowType\n    actualWindowPromise : ZalgoPromise<CrossDomainWindowType>\n    send : SendType\n\n    constructor(serializedWindow : SerializedProxyWindow, actualWindow? : ?CrossDomainWindowType, { send } : { send : SendType }) {\n        this.serializedWindow = serializedWindow;\n        this.actualWindowPromise = new ZalgoPromise();\n        if (actualWindow) {\n            this.setWindow(actualWindow);\n        }\n        this.serializedWindow.getInstanceID = memoizePromise(this.serializedWindow.getInstanceID);\n        this.send = send;\n    }\n\n    getType() : $Values<typeof WINDOW_TYPE> {\n        return this.serializedWindow.type;\n    }\n\n    isPopup() : boolean {\n        return this.getType() === WINDOW_TYPE.POPUP;\n    }\n\n    isIframe() : boolean {\n        return this.getType() === WINDOW_TYPE.IFRAME;\n    }\n\n    setLocation(href : string) : ZalgoPromise<ProxyWindow> {\n        return ZalgoPromise.try(() => {\n            if (this.actualWindow) {\n                this.actualWindow.location = href;\n            } else {\n                return this.serializedWindow.setLocation(href);\n            }\n        }).then(() => this);\n    }\n\n    setName(name : string) : ZalgoPromise<ProxyWindow> {\n        return ZalgoPromise.try(() => {\n            if (this.actualWindow) {\n                if (!isSameDomain(this.actualWindow)) {\n                    throw new Error(`Can not set name for window on different domain`);\n                }\n                // $FlowFixMe\n                this.actualWindow.name = name;\n                // $FlowFixMe\n                if (this.actualWindow.frameElement) {\n                    // $FlowFixMe\n                    this.actualWindow.frameElement.setAttribute('name', name);\n                }\n\n                if (__POST_ROBOT__.__IE_POPUP_SUPPORT__) {\n                    \n                    linkWindow({ win: this.actualWindow, name });\n                }\n\n            } else {\n                return this.serializedWindow.setName(name);\n            }\n        }).then(() => this);\n    }\n\n    close() : ZalgoPromise<ProxyWindow> {\n        return ZalgoPromise.try(() => {\n            if (this.actualWindow) {\n                this.actualWindow.close();\n            } else {\n                return this.serializedWindow.close();\n            }\n        }).then(() => this);\n    }\n\n    focus() : ZalgoPromise<ProxyWindow> {\n        return ZalgoPromise.try(() => {\n            if (this.actualWindow) {\n                this.actualWindow.focus();\n            }\n            return this.serializedWindow.focus();\n        }).then(() => this);\n    }\n\n    isClosed() : ZalgoPromise<boolean> {\n        return ZalgoPromise.try(() => {\n            if (this.actualWindow) {\n                return isWindowClosed(this.actualWindow);\n            } else {\n                return this.serializedWindow.isClosed();\n            }\n        });\n    }\n\n    getWindow() : ?CrossDomainWindowType {\n        return this.actualWindow;\n    }\n\n    setWindow(win : CrossDomainWindowType) {\n        this.actualWindow = win;\n        this.actualWindowPromise.resolve(win);\n    }\n\n    awaitWindow() : ZalgoPromise<CrossDomainWindowType> {\n        return this.actualWindowPromise;\n    }\n\n    matchWindow(win : CrossDomainWindowType) : ZalgoPromise<boolean> {\n        return ZalgoPromise.try(() => {\n            if (this.actualWindow) {\n                return win === this.actualWindow;\n            }\n            \n            return ZalgoPromise.all([\n                this.getInstanceID(),\n                getWindowInstanceID(win, { send: this.send })\n            ]).then(([ proxyInstanceID, knownWindowInstanceID ]) => {\n                const match = proxyInstanceID === knownWindowInstanceID;\n\n                if (match) {\n                    this.setWindow(win);\n                }\n\n                return match;\n            });\n        });\n    }\n\n    unwrap() : CrossDomainWindowType | ProxyWindow {\n        return this.actualWindow || this;\n    }\n\n    getInstanceID() : ZalgoPromise<string> {\n        if (this.actualWindow) {\n            return getWindowInstanceID(this.actualWindow, { send: this.send });\n        } else {\n            return this.serializedWindow.getInstanceID();\n        }\n    }\n\n    serialize() : SerializedProxyWindow {\n        return this.serializedWindow;\n    }\n\n    shouldClean() : boolean {\n        return this.actualWindow && isWindowClosed(this.actualWindow);\n    }\n\n    static unwrap(win : CrossDomainWindowType | ProxyWindow) : CrossDomainWindowType | ProxyWindow {\n        return ProxyWindow.isProxyWindow(win)\n            // $FlowFixMe\n            ? win.unwrap()\n            : win;\n    }\n\n    static serialize(win : CrossDomainWindowType | ProxyWindow, { send } : { send : SendType }) : SerializedProxyWindow {\n        cleanupProxyWindows();\n\n        return ProxyWindow.toProxyWindow(win, { send }).serialize();\n    }\n\n    static deserialize(serializedWindow : SerializedProxyWindow, { on, send } : { on : OnType, send : SendType }) : ProxyWindow {\n        cleanupProxyWindows();\n        \n        return globalStore('idToProxyWindow').getOrSet(serializedWindow.id, () => {\n            return new ProxyWindow(serializedWindow, null, { on, send });\n        });\n    }\n\n    static isProxyWindow(obj : CrossDomainWindowType | ProxyWindow) : boolean {\n        // $FlowFixMe\n        return Boolean(obj && !isWindow(obj) && obj.isProxyWindow);\n    }\n\n    static toProxyWindow(win : CrossDomainWindowType | ProxyWindow, { send } : { send : SendType }) : ProxyWindow {\n        cleanupProxyWindows();\n\n        if (ProxyWindow.isProxyWindow(win)) {\n            // $FlowFixMe\n            return win;\n        }\n\n        // $FlowFixMe\n        return windowStore('winToProxyWindow').getOrSet(win, () => {\n            const id = uniqueID();\n\n            return globalStore('idToProxyWindow').set(id, new ProxyWindow({\n                id,\n                // $FlowFixMe\n                type:          getOpener(win) ? WINDOW_TYPE.POPUP : WINDOW_TYPE.IFRAME,\n                // $FlowFixMe\n                getInstanceID: () => getWindowInstanceID(win, { send }),\n                close:         () => ZalgoPromise.try(() => {\n                    win.close();\n                }),\n                focus:         () => ZalgoPromise.try(() => {\n                    win.focus();\n                }),\n                isClosed:      () => ZalgoPromise.try(() => {\n                    // $FlowFixMe\n                    return isWindowClosed(win);\n                }),\n                setLocation:   (href) => ZalgoPromise.try(() => {\n                    // $FlowFixMe\n                    if (isSameDomain(win)) {\n                        try {\n                            if (win.location && typeof win.location.replace === 'function') {\n                                // $FlowFixMe\n                                win.location.replace(href);\n                                return;\n                            }\n                        } catch (err) {\n                            // pass\n                        }\n                    }\n    \n                    // $FlowFixMe\n                    win.location = href;\n                }),\n                setName:       (name) => ZalgoPromise.try(() => {\n                    if (__POST_ROBOT__.__IE_POPUP_SUPPORT__) {\n                        // $FlowFixMe\n                        linkWindow({ win, name });\n                    }\n                    // $FlowFixMe\n                    win.name = name;\n                })\n            // $FlowFixMe\n            }, win, { send }));\n        });\n    }\n}\n\nexport type SerializedWindow = CustomSerializedType<typeof SERIALIZATION_TYPE.CROSS_DOMAIN_WINDOW, SerializedProxyWindow>;\n\nexport function serializeWindow(destination : CrossDomainWindowType | ProxyWindow, domain : DomainMatcher, win : CrossDomainWindowType, { send } : { send : SendType }) : SerializedWindow {\n    return serializeType(SERIALIZATION_TYPE.CROSS_DOMAIN_WINDOW, ProxyWindow.serialize(win, { send }));\n}\n\nexport function deserializeWindow(source : CrossDomainWindowType | ProxyWindow, origin : string, win : SerializedProxyWindow, { on, send } : { on : OnType, send : SendType }) : ProxyWindow {\n    return ProxyWindow.deserialize(win, { on, send });\n}\n","/* @flow */\n\nimport { matchDomain, getDomain, type CrossDomainWindowType, type DomainMatcher } from 'cross-domain-utils/src';\nimport { ZalgoPromise } from 'zalgo-promise/src';\nimport { uniqueID, isRegex } from 'belter/src';\nimport { serializeType, type CustomSerializedType } from 'universal-serialize/src';\n\nimport { MESSAGE_NAME, WILDCARD, SERIALIZATION_TYPE } from '../conf';\nimport { windowStore, globalStore } from '../global';\nimport type { OnType, SendType, CancelableType } from '../types';\n\nimport { ProxyWindow } from './window';\n\ntype StoredMethod = {|\n    name : string,\n    domain : DomainMatcher,\n    val : Function,\n    source : CrossDomainWindowType | ProxyWindow\n|};\n\nfunction addMethod(id : string, val : Function, name : string, source : CrossDomainWindowType | ProxyWindow, domain : DomainMatcher) {\n    const methodStore = windowStore('methodStore');\n    const proxyWindowMethods = globalStore('proxyWindowMethods');\n    \n    if (ProxyWindow.isProxyWindow(source)) {\n        proxyWindowMethods.set(id, { val, name, domain, source });\n    } else {\n        proxyWindowMethods.del(id);\n        // $FlowFixMe\n        const methods = methodStore.getOrSet(source, () => ({}));\n        methods[id] = { domain, name, val, source };\n    }\n}\n\nfunction lookupMethod(source : CrossDomainWindowType, id : string) : ?StoredMethod {\n    const methodStore = windowStore('methodStore');\n    const proxyWindowMethods = globalStore('proxyWindowMethods');\n    const methods = methodStore.getOrSet(source, () => ({}));\n    return methods[id] || proxyWindowMethods.get(id);\n}\n\nfunction listenForFunctionCalls({ on } : { on : OnType }) : CancelableType {\n    return globalStore('builtinListeners').getOrSet('functionCalls', () => {\n        return on(MESSAGE_NAME.METHOD, { domain: WILDCARD }, ({ source, origin, data } : { source : CrossDomainWindowType, origin : string, data : Object }) => {\n            const { id, name } = data;\n\n            const meth = lookupMethod(source, id);\n    \n            if (!meth) {\n                throw new Error(`Could not find method '${ data.name }' with id: ${ data.id } in ${ getDomain(window) }`);\n            }\n\n            const { source: methodSource, domain, val } = meth;\n            \n            return ZalgoPromise.try(() => {\n                if (!matchDomain(domain, origin)) {\n                    // $FlowFixMe\n                    throw new Error(`Method '${ data.name }' domain ${ JSON.stringify(isRegex(meth.domain) ? meth.domain.source : meth.domain) } does not match origin ${ origin } in ${ getDomain(window) }`);\n                }\n                \n                if (ProxyWindow.isProxyWindow(methodSource)) {\n                    // $FlowFixMe\n                    return methodSource.matchWindow(source).then(match => {\n                        if (!match) {\n                            throw new Error(`Method call '${ data.name }' failed - proxy window does not match source in ${ getDomain(window) }`);\n                        }\n                    });\n                }\n            }).then(() => {\n                return val.apply({ source, origin }, data.args);\n            }, err => {\n                return ZalgoPromise.try(() => {\n                    if (val.onError) {\n                        return val.onError(err);\n                    }\n                }).then(() => {\n                    throw err;\n                });\n            }).then(result => {\n                return { result, id, name };\n            });\n        });\n    });\n}\n\nexport type SerializedFunction = CustomSerializedType<typeof SERIALIZATION_TYPE.CROSS_DOMAIN_FUNCTION, {\n    id : string,\n    name : string\n}>;\n\nexport function serializeFunction<T>(destination : CrossDomainWindowType | ProxyWindow, domain : DomainMatcher, val : () => ZalgoPromise<T> | T, key : string, { on } : { on : OnType }) : SerializedFunction {\n    listenForFunctionCalls({ on });\n    \n    const id = val.__id__ || uniqueID();\n    destination = ProxyWindow.unwrap(destination);\n    const name = val.__name__ || val.name || key;\n\n    if (ProxyWindow.isProxyWindow(destination)) {\n        addMethod(id, val, name, destination, domain);\n\n        // $FlowFixMe\n        destination.awaitWindow().then(win => {\n            addMethod(id, val, name, win, domain);\n        });\n    } else {\n        addMethod(id, val, name, destination, domain);\n    }\n\n    return serializeType(SERIALIZATION_TYPE.CROSS_DOMAIN_FUNCTION, { id, name });\n}\n\nexport function deserializeFunction<T>(source : CrossDomainWindowType | ProxyWindow, origin : string, { id, name } : { id : string, name : string }, { send } : { send : SendType }) : (...args : $ReadOnlyArray<mixed>) => ZalgoPromise<T> {\n    const getDeserializedFunction = (opts? : Object = {}) => {\n        function crossDomainFunctionWrapper<X : mixed>() : ZalgoPromise<X> {\n            let originalStack;\n    \n            if (__DEBUG__) {\n                originalStack = (new Error(`Original call to ${ name }():`)).stack;\n            }\n    \n            return ProxyWindow.toProxyWindow(source, { send }).awaitWindow().then(win => {\n                const meth = lookupMethod(win, id);\n    \n                if (meth && meth.val !== crossDomainFunctionWrapper) {\n                    return meth.val.apply({ source: window, origin: getDomain() }, arguments);\n                } else {\n                    return send(win, MESSAGE_NAME.METHOD, { id, name, args: Array.prototype.slice.call(arguments) }, { domain: origin, fireAndForget: opts.fireAndForget })\n                        .then(res => {\n                            if (!opts.fireAndForget) {\n                                return res.data.result;\n                            }\n                        });\n                }\n    \n            }).catch(err => {\n                // $FlowFixMe\n                if (__DEBUG__ && originalStack && err.stack) {\n                    // $FlowFixMe\n                    err.stack = `${ err.stack }\\n\\n${ originalStack }`;\n                }\n                throw err;\n            });\n        }\n\n        crossDomainFunctionWrapper.__name__ = name;\n        crossDomainFunctionWrapper.__origin__ = origin;\n        crossDomainFunctionWrapper.__source__ = source;\n        crossDomainFunctionWrapper.__id__ = id;\n\n        crossDomainFunctionWrapper.origin = origin;\n\n        return crossDomainFunctionWrapper;\n    };\n\n    const crossDomainFunctionWrapper = getDeserializedFunction();\n    crossDomainFunctionWrapper.fireAndForget = getDeserializedFunction({ fireAndForget: true });\n\n    return crossDomainFunctionWrapper;\n}\n","/* @flow */\n\nimport { type CrossDomainWindowType, isWindow, type DomainMatcher } from 'cross-domain-utils/src';\nimport { TYPE, serialize, deserialize, type Thenable } from 'universal-serialize/src';\n\nimport { SERIALIZATION_TYPE } from '../conf';\nimport type { OnType, SendType } from '../types';\n\nimport { serializeFunction, deserializeFunction, type SerializedFunction } from './function';\nimport { serializePromise, deserializePromise, type SerializedPromise } from './promise';\nimport { serializeWindow, deserializeWindow, type SerializedWindow, ProxyWindow } from './window';\n\nexport function serializeMessage<T : mixed>(destination : CrossDomainWindowType | ProxyWindow, domain : DomainMatcher, obj : T, { on, send } : { on : OnType, send : SendType }) : string {\n    return serialize(obj, {\n        [ TYPE.PROMISE ]:  (val : Thenable, key : string) : SerializedPromise => serializePromise(destination, domain, val, key, { on, send }),\n        [ TYPE.FUNCTION ]: (val : Function, key : string) : SerializedFunction => serializeFunction(destination, domain, val, key, { on, send }),\n        [ TYPE.OBJECT ]:   (val : CrossDomainWindowType) : Object | SerializedWindow => {\n            return (isWindow(val) || ProxyWindow.isProxyWindow(val)) ? serializeWindow(destination, domain, val, { on, send }) : val;\n        }\n    });\n}\n\nexport function deserializeMessage<T : mixed>(source : CrossDomainWindowType | ProxyWindow, origin : string, message : string, { on, send } : { on : OnType, send : SendType }) : T {\n    return deserialize(message, {\n        [ SERIALIZATION_TYPE.CROSS_DOMAIN_ZALGO_PROMISE ]: (serializedPromise)  => deserializePromise(source, origin, serializedPromise),\n        [ SERIALIZATION_TYPE.CROSS_DOMAIN_FUNCTION ]:      (serializedFunction) => deserializeFunction(source, origin, serializedFunction, { on, send }),\n        [ SERIALIZATION_TYPE.CROSS_DOMAIN_WINDOW ]:        (serializedWindow)   => deserializeWindow(source, origin, serializedWindow, { on, send })\n    });\n}\n","/* @flow */\n\nimport { type CrossDomainWindowType, type DomainMatcher } from 'cross-domain-utils/src';\nimport { ZalgoPromise } from 'zalgo-promise/src';\nimport { serializeType, type CustomSerializedType, type Thenable } from 'universal-serialize/src';\n\nimport { SERIALIZATION_TYPE } from '../conf';\nimport type { OnType, SendType } from '../types';\n\nimport { serializeFunction, type SerializedFunction } from './function';\nimport { ProxyWindow } from './window';\n\nexport type SerializedPromise = CustomSerializedType<typeof SERIALIZATION_TYPE.CROSS_DOMAIN_ZALGO_PROMISE, {\n    then : SerializedFunction\n}>;\n\nexport function serializePromise(destination : CrossDomainWindowType | ProxyWindow, domain : DomainMatcher, val : Thenable, key : string, { on, send } : { on : OnType, send : SendType }) : SerializedPromise {\n    return serializeType(SERIALIZATION_TYPE.CROSS_DOMAIN_ZALGO_PROMISE, {\n        then: serializeFunction(destination, domain, (resolve, reject) => val.then(resolve, reject), key, { on, send })\n    });\n}\n\nexport function deserializePromise<T>(source : CrossDomainWindowType | ProxyWindow, origin : string, { then } : { then : Function }) : ZalgoPromise<T> {\n    return new ZalgoPromise(then);\n}\n","/* @flow */\n\nimport { isSameDomain, isSameTopWindow, isActuallySameDomain, getActualDomain,\n    getDomain, type CrossDomainWindowType, type DomainMatcher, PROTOCOL } from 'cross-domain-utils/src';\n\nimport { SEND_STRATEGY, WILDCARD } from '../../conf';\nimport { needsGlobalMessagingForBrowser } from '../../lib';\nimport { getGlobal } from '../../global';\nimport { sendBridgeMessage, needsBridgeForBrowser, isBridge } from '../../bridge';\n\nexport const SEND_MESSAGE_STRATEGIES = {};\n\nSEND_MESSAGE_STRATEGIES[SEND_STRATEGY.POST_MESSAGE] = (win : CrossDomainWindowType, serializedMessage : string, domain : DomainMatcher) => {\n\n    if (__TEST__) {\n        if (needsGlobalMessagingForBrowser() && isSameTopWindow(window, win) === false) {\n            return;\n        }\n    }\n\n    let domains;\n\n    if (Array.isArray(domain)) {\n        domains = domain;\n    } else if (typeof domain === 'string') {\n        domains = [ domain ];\n    } else {\n        domains = [ WILDCARD ];\n    }\n\n    domains = domains.map(dom => {\n\n        if (dom.indexOf(PROTOCOL.MOCK) === 0) {\n\n            if (window.location.protocol === PROTOCOL.FILE) {\n                return WILDCARD;\n            }\n\n            if (!isActuallySameDomain(win)) {\n                throw new Error(`Attempting to send messsage to mock domain ${ dom }, but window is actually cross-domain`);\n            }\n\n            // $FlowFixMe\n            return getActualDomain(win);\n        }\n\n        if (dom.indexOf(PROTOCOL.FILE) === 0) {\n            return WILDCARD;\n        }\n\n        return dom;\n    });\n\n    domains.forEach(dom => {\n        win.postMessage(serializedMessage, dom);\n    });\n};\n\nif (__POST_ROBOT__.__IE_POPUP_SUPPORT__) {\n\n    SEND_MESSAGE_STRATEGIES[SEND_STRATEGY.BRIDGE] = (win : CrossDomainWindowType, serializedMessage : string, domain : string) => {\n\n        if (!needsBridgeForBrowser() && !isBridge()) {\n            return;\n        }\n\n        if (isSameDomain(win)) {\n            throw new Error(`Post message through bridge disabled between same domain windows`);\n        }\n\n        if (isSameTopWindow(window, win) !== false) {\n            throw new Error(`Can only use bridge to communicate between two different windows, not between frames`);\n        }\n\n        sendBridgeMessage(win, domain, serializedMessage);\n    };\n}\n\nif (__POST_ROBOT__.__IE_POPUP_SUPPORT__ || __POST_ROBOT__.__GLOBAL_MESSAGE_SUPPORT__) {\n    \n    SEND_MESSAGE_STRATEGIES[SEND_STRATEGY.GLOBAL] = (win : CrossDomainWindowType, serializedMessage : string) => {\n\n        if (!needsGlobalMessagingForBrowser()) {\n            return;\n        }\n\n        if (!isSameDomain(win)) {\n            throw new Error(`Post message through global disabled between different domain windows`);\n        }\n\n        if (isSameTopWindow(window, win) !== false) {\n            throw new Error(`Can only use global to communicate between two different windows, not between frames`);\n        }\n\n        // $FlowFixMe\n        const foreignGlobal = getGlobal(win);\n\n        if (!foreignGlobal) {\n            throw new Error(`Can not find postRobot global on foreign window`);\n        }\n\n        foreignGlobal.receiveMessage({\n            source: window,\n            origin: getDomain(),\n            data:   serializedMessage\n        });\n    };\n}\n","/* @flow */\n\nimport { isWindowClosed, type CrossDomainWindowType, type DomainMatcher } from 'cross-domain-utils/src';\nimport { uniqueID } from 'belter/src';\n\nimport { serializeMessage } from '../../serialize';\nimport type { Message } from '../types';\nimport type { OnType, SendType } from '../../types';\n\nimport { SEND_MESSAGE_STRATEGIES } from './strategies';\n\nexport function sendMessage(win : CrossDomainWindowType, domain : DomainMatcher, message : Message, { on, send } : { on : OnType, send : SendType }) {\n    if (isWindowClosed(win)) {\n        throw new Error('Window is closed');\n    }\n    \n    const serializedMessage = serializeMessage(win, domain, {\n        [ __POST_ROBOT__.__GLOBAL_KEY__ ]: {\n            id: uniqueID(),\n            ...message\n        }\n    }, { on, send });\n\n    let success = false;\n    let error;\n\n    for (const strategyName of Object.keys(SEND_MESSAGE_STRATEGIES)) {\n        try {\n            SEND_MESSAGE_STRATEGIES[strategyName](win, serializedMessage, domain);\n            success = true;\n        } catch (err) {\n            error = error || err;\n        }\n    }\n\n    if (!success) {\n        throw error;\n    }\n}\n","/* @flow */\n\nimport { getUserAgent } from 'cross-domain-utils/src';\n\nexport function needsGlobalMessagingForBrowser() : boolean {\n\n    if (getUserAgent(window).match(/MSIE|rv:11|trident|edge\\/12|edge\\/13/i)) {\n        return true;\n    }\n\n    return false;\n}\n","/* @flow */\n\nimport { type ZalgoPromise } from 'zalgo-promise/src';\nimport { matchDomain, type CrossDomainWindowType, type DomainMatcher } from 'cross-domain-utils/src';\nimport { isRegex, getOrSet } from 'belter/src';\n\nimport { getWildcard, type WildCard, globalStore, windowStore } from '../global';\nimport { WILDCARD } from '../conf';\n\nexport function resetListeners() {\n    const responseListeners = globalStore('responseListeners');\n    const erroredResponseListeners = globalStore('erroredResponseListeners');\n    responseListeners.reset();\n    erroredResponseListeners.reset();\n}\n\nconst __DOMAIN_REGEX__ = '__domain_regex__';\n\nexport type RequestListenerType = {|\n    handler : ({ source : CrossDomainWindowType, origin : string, data : mixed }) => (mixed | ZalgoPromise<mixed>),\n    handleError : (err : mixed) => void,\n    window : ?CrossDomainWindowType,\n    name : string,\n    domain : DomainMatcher\n|};\n\nexport type ResponseListenerType = {|\n    name : string,\n    win : CrossDomainWindowType,\n    domain : DomainMatcher,\n    promise : ZalgoPromise<*>,\n    ack? : ?boolean\n|};\n\nexport function addResponseListener(hash : string, listener : ResponseListenerType) {\n    const responseListeners = globalStore('responseListeners');\n    responseListeners.set(hash, listener);\n}\n\nexport function getResponseListener(hash : string) : ?ResponseListenerType {\n    const responseListeners = globalStore('responseListeners');\n    return responseListeners.get(hash);\n}\n\nexport function deleteResponseListener(hash : string) {\n    const responseListeners = globalStore('responseListeners');\n    responseListeners.del(hash);\n}\n\nexport function markResponseListenerErrored(hash : string) {\n    const erroredResponseListeners = globalStore('erroredResponseListeners');\n    erroredResponseListeners.set(hash, true);\n}\n\nexport function isResponseListenerErrored(hash : string) : boolean {\n    const erroredResponseListeners = globalStore('erroredResponseListeners');\n    return erroredResponseListeners.has(hash);\n}\n\nexport function getRequestListener({ name, win, domain } : { name : string, win : ?(CrossDomainWindowType | WildCard), domain : ?(string | RegExp) }) : ?RequestListenerType {\n    const requestListeners = windowStore('requestListeners');\n\n    if (win === WILDCARD) {\n        win = null;\n    }\n\n    if (domain === WILDCARD) {\n        domain = null;\n    }\n\n    if (!name) {\n        throw new Error(`Name required to get request listener`);\n    }\n\n    for (const winQualifier of [ win, getWildcard() ]) {\n        if (!winQualifier) {\n            continue;\n        }\n\n        const nameListeners = requestListeners.get(winQualifier);\n\n        if (!nameListeners) {\n            continue;\n        }\n\n        const domainListeners = nameListeners[name];\n\n        if (!domainListeners) {\n            continue;\n        }\n\n        if (domain && typeof domain === 'string') {\n            if (domainListeners[domain]) {\n                return domainListeners[domain];\n            }\n\n            if (domainListeners[__DOMAIN_REGEX__]) {\n                for (const { regex, listener } of domainListeners[__DOMAIN_REGEX__]) {\n                    if (matchDomain(regex, domain)) {\n                        return listener;\n                    }\n                }\n            }\n        }\n\n        if (domainListeners[WILDCARD]) {\n            return domainListeners[WILDCARD];\n        }\n    }\n}\n\nexport function addRequestListener({ name, win, domain } : { name : string, win : ?(CrossDomainWindowType | WildCard), domain : ?DomainMatcher }, listener : RequestListenerType) : { cancel : () => void } {\n    const requestListeners = windowStore('requestListeners');\n\n    if (!name || typeof name !== 'string') {\n        throw new Error(`Name required to add request listener`);\n    }\n\n    if (Array.isArray(win)) {\n        const listenersCollection = [];\n\n        for (const item of win) {\n            listenersCollection.push(addRequestListener({ name, domain, win: item }, listener));\n        }\n\n        return {\n            cancel() {\n                for (const cancelListener of listenersCollection) {\n                    cancelListener.cancel();\n                }\n            }\n        };\n    }\n\n    if (Array.isArray(domain)) {\n        const listenersCollection = [];\n\n        for (const item of domain) {\n            listenersCollection.push(addRequestListener({ name, win, domain: item }, listener));\n        }\n\n        return {\n            cancel() {\n                for (const cancelListener of listenersCollection) {\n                    cancelListener.cancel();\n                }\n            }\n        };\n    }\n\n    const existingListener = getRequestListener({ name, win, domain });\n\n    if (!win || win === WILDCARD) {\n        win = getWildcard();\n    }\n\n    domain = domain || WILDCARD;\n\n    if (existingListener) {\n        if (win && domain) {\n            throw new Error(`Request listener already exists for ${ name } on domain ${ domain.toString() } for ${ win === getWildcard() ? 'wildcard' : 'specified' } window`);\n        } else if (win) {\n            throw new Error(`Request listener already exists for ${ name } for ${ win === getWildcard() ? 'wildcard' : 'specified' } window`);\n        } else if (domain) {\n            throw new Error(`Request listener already exists for ${ name } on domain ${ domain.toString() }`);\n        } else {\n            throw new Error(`Request listener already exists for ${ name }`);\n        }\n    }\n\n    const nameListeners = requestListeners.getOrSet(win, () => ({}));\n    // $FlowFixMe\n    const domainListeners = getOrSet(nameListeners, name, () => ({}));\n\n    const strDomain = domain.toString();\n\n    let regexListeners;\n    let regexListener;\n\n    if (isRegex(domain)) {\n        regexListeners = getOrSet(domainListeners, __DOMAIN_REGEX__, () => []);\n        regexListener = { regex: domain, listener };\n        regexListeners.push(regexListener);\n    } else {\n        domainListeners[strDomain] = listener;\n    }\n\n    return {\n        cancel() {\n            delete domainListeners[strDomain];\n\n            if (regexListener) {\n                regexListeners.splice(regexListeners.indexOf(regexListener, 1));\n\n                if (!regexListeners.length) {\n                    delete domainListeners[__DOMAIN_REGEX__];\n                }\n            }\n\n            if (!Object.keys(domainListeners).length) {\n                // $FlowFixMe\n                delete nameListeners[name];\n            }\n\n            // $FlowFixMe\n            if (win && !Object.keys(nameListeners).length) {\n                requestListeners.del(win);\n            }\n        }\n    };\n}\n","/* @flow */\n\nimport { ZalgoPromise } from 'zalgo-promise/src';\nimport { isWindowClosed, matchDomain, stringifyDomainPattern, type CrossDomainWindowType } from 'cross-domain-utils/src';\nimport { noop } from 'belter/src';\n\nimport { MESSAGE_TYPE, MESSAGE_ACK, MESSAGE_NAME } from '../../conf';\nimport { sendMessage } from '../send';\nimport { getRequestListener, getResponseListener, deleteResponseListener, isResponseListenerErrored } from '../listeners';\nimport type { RequestMessage, AckResponseMessage, SuccessResponseMessage, ErrorResponseMessage } from '../types';\nimport type { OnType, SendType } from '../../types';\n\nexport const RECEIVE_MESSAGE_TYPES = {\n\n    [ MESSAGE_TYPE.REQUEST ](source : CrossDomainWindowType, origin : string, message : RequestMessage, { on, send } : { on : OnType, send : SendType }) : ZalgoPromise<void> {\n\n        const options = getRequestListener({ name: message.name, win: source, domain: origin });\n\n        const logName = (message.name === MESSAGE_NAME.METHOD && message.data && typeof message.data.name === 'string') ? `${ message.data.name }()` : message.name;\n\n        if (__DEBUG__) {\n            // eslint-disable-next-line no-console\n            console.info('receive::req', logName, origin, '\\n\\n', message.data);\n        }\n\n        function sendResponse(type : $Values<typeof MESSAGE_TYPE>, ack? : $Values<typeof MESSAGE_ACK>, response = {}) {\n\n            if (message.fireAndForget || isWindowClosed(source)) {\n                return;\n            }\n\n            if (__DEBUG__ && type !== MESSAGE_TYPE.ACK) {\n                if (ack === MESSAGE_ACK.SUCCESS) {\n                    // $FlowFixMe\n                    console.info('respond::res', logName, origin, '\\n\\n', response.data);  // eslint-disable-line no-console\n                } else if (ack === MESSAGE_ACK.ERROR) {\n                    // $FlowFixMe\n                    console.error('respond::err', logName, origin, '\\n\\n', response.error); // eslint-disable-line no-console\n                }\n            }\n\n            // $FlowFixMe\n            sendMessage(source, origin, {\n                type,\n                ack,\n                hash:   message.hash,\n                name:   message.name,\n                ...response\n            }, { on, send });\n        }\n\n        return ZalgoPromise.all([\n\n            sendResponse(MESSAGE_TYPE.ACK),\n\n            ZalgoPromise.try(() => {\n\n                if (!options) {\n                    throw new Error(`No handler found for post message: ${ message.name } from ${ origin } in ${ window.location.protocol }//${ window.location.host }${ window.location.pathname }`);\n                }\n\n                if (!matchDomain(options.domain, origin)) {\n                    throw new Error(`Request origin ${ origin } does not match domain ${ options.domain.toString() }`);\n                }\n\n                const data = message.data;\n\n                return options.handler({ source, origin, data });\n\n            }).then(data => {\n                return sendResponse(MESSAGE_TYPE.RESPONSE, MESSAGE_ACK.SUCCESS, { data });\n\n            }, error => {\n                return sendResponse(MESSAGE_TYPE.RESPONSE, MESSAGE_ACK.ERROR, { error });\n            })\n\n        ]).then(noop).catch(err => {\n            if (options && options.handleError) {\n                return options.handleError(err);\n            } else {\n                throw err;\n            }\n        });\n    },\n\n    [ MESSAGE_TYPE.ACK ](source : CrossDomainWindowType, origin : string, message : AckResponseMessage) {\n\n        if (isResponseListenerErrored(message.hash)) {\n            return;\n        }\n\n        const options = getResponseListener(message.hash);\n\n        if (!options) {\n            throw new Error(`No handler found for post message ack for message: ${ message.name } from ${ origin } in ${ window.location.protocol }//${ window.location.host }${ window.location.pathname }`);\n        }\n\n        if (!matchDomain(options.domain, origin)) {\n            throw new Error(`Ack origin ${ origin } does not match domain ${ options.domain.toString() }`);\n        }\n\n        if (source !== options.win) {\n            throw new Error(`Ack source does not match registered window`);\n        }\n\n        options.ack = true;\n    },\n\n    [ MESSAGE_TYPE.RESPONSE ](source : CrossDomainWindowType, origin : string, message : SuccessResponseMessage | ErrorResponseMessage) : void | ZalgoPromise<void> {\n\n        if (isResponseListenerErrored(message.hash)) {\n            return;\n        }\n\n        const options = getResponseListener(message.hash);\n\n        if (!options) {\n            throw new Error(`No handler found for post message response for message: ${ message.name } from ${ origin } in ${ window.location.protocol }//${ window.location.host }${ window.location.pathname }`);\n        }\n\n        if (!matchDomain(options.domain, origin)) {\n            throw new Error(`Response origin ${ origin } does not match domain ${ stringifyDomainPattern(options.domain) }`);\n        }\n\n        if (source !== options.win) {\n            throw new Error(`Response source does not match registered window`);\n        }\n\n        deleteResponseListener(message.hash);\n\n        const logName = (message.name === MESSAGE_NAME.METHOD && message.data && typeof message.data.name === 'string') ? `${ message.data.name }()` : message.name;\n\n        if (message.ack === MESSAGE_ACK.ERROR) {\n            if (__DEBUG__) {\n                console.error('receive::err', logName, origin, '\\n\\n', message.error); // eslint-disable-line no-console\n            }\n\n            options.promise.reject(message.error);\n\n        } else if (message.ack === MESSAGE_ACK.SUCCESS) {\n            if (__DEBUG__) {\n                console.info('receive::res', logName, origin, '\\n\\n', message.data); // eslint-disable-line no-console\n            }\n\n            options.promise.resolve({ source, origin, data: message.data });\n        }\n    }\n};\n","/* @flow */\n\nimport { setup } from './setup';\nimport { setupBridge, openBridge, linkWindow, linkUrl, isBridge, needsBridge, needsBridgeForBrowser, hasBridge,\n    needsBridgeForWin, needsBridgeForDomain, destroyBridges } from './bridge';\n\nexport { ZalgoPromise as Promise } from 'zalgo-promise/src';\n\nexport * from './types';\nexport { ProxyWindow } from './serialize';\nexport { setup, serializeMessage, deserializeMessage, toProxyWindow } from './setup';\nexport { on, once, send } from './public';\nexport { markWindowKnown } from './lib';\nexport { cleanUpWindow } from './clean';\nexport let bridge;\n\nif (__POST_ROBOT__.__IE_POPUP_SUPPORT__) {\n    bridge = { setupBridge, openBridge, linkWindow, linkUrl, isBridge, needsBridge,\n        needsBridgeForBrowser, hasBridge, needsBridgeForWin, needsBridgeForDomain, destroyBridges };\n}\n\nif (__POST_ROBOT__.__AUTO_SETUP__) {\n    setup();\n}\n","/* @flow */\n\nimport { isWindowClosed, type CrossDomainWindowType, getDomain, isSameTopWindow } from 'cross-domain-utils/src';\nimport { addEventListener, noop } from 'belter/src';\n\nimport { markWindowKnown, needsGlobalMessagingForBrowser } from '../../lib';\nimport { deserializeMessage } from '../../serialize';\nimport { getGlobal, globalStore } from '../../global';\nimport type { OnType, SendType, MessageEvent, CancelableType } from '../../types';\n\nimport { RECEIVE_MESSAGE_TYPES } from './types';\n\nfunction parseMessage(message : string, source : CrossDomainWindowType, origin : string, { on, send } : { on : OnType, send : SendType }) : ?Object {\n\n    let parsedMessage;\n\n    try {\n        parsedMessage = deserializeMessage(source, origin, message, { on, send });\n    } catch (err) {\n        return;\n    }\n\n    if (!parsedMessage) {\n        return;\n    }\n\n    if (typeof parsedMessage !== 'object' || parsedMessage === null) {\n        return;\n    }\n\n    parsedMessage = parsedMessage[__POST_ROBOT__.__GLOBAL_KEY__];\n\n    if (!parsedMessage || typeof parsedMessage !== 'object' || parsedMessage === null) {\n        return;\n    }\n\n    if (!parsedMessage.type || typeof parsedMessage.type !== 'string') {\n        return;\n    }\n\n    if (!RECEIVE_MESSAGE_TYPES[parsedMessage.type]) {\n        return;\n    }\n\n    return parsedMessage;\n}\n\nexport function receiveMessage(event : MessageEvent, { on, send } : { on : OnType, send : SendType }) {\n    const receivedMessages = globalStore('receivedMessages');\n\n    if (!window || window.closed) {\n        throw new Error(`Message recieved in closed window`);\n    }\n\n    try {\n        if (!event.source) {\n            return;\n        }\n    } catch (err) {\n        return;\n    }\n\n    let { source, origin, data } = event;\n\n    if (__TEST__) {\n        // $FlowFixMe\n        origin = getDomain(source);\n    }\n\n    const message = parseMessage(data, source, origin, { on, send });\n\n    if (!message) {\n        return;\n    }\n\n    markWindowKnown(source);\n\n    if (receivedMessages.has(message.id)) {\n        return;\n    }\n\n    receivedMessages.set(message.id, true);\n\n    if (isWindowClosed(source) && !message.fireAndForget) {\n        return;\n    }\n\n    RECEIVE_MESSAGE_TYPES[message.type](source, origin, message, { on, send });\n}\n\nexport function setupGlobalReceiveMessage({ on, send } : { on : OnType, send : SendType }) {\n    const global = getGlobal();\n    global.receiveMessage = global.receiveMessage || (message => receiveMessage(message, { on, send }));\n}\n\ntype ListenerEvent = {|\n    source : CrossDomainWindowType,\n    origin : string,\n    data : string,\n    sourceElement : CrossDomainWindowType,\n    originalEvent? : { origin : string }\n|};\n\nexport function messageListener(event : ListenerEvent, { on, send } : { on : OnType, send : SendType }) {\n\n    try {\n        noop(event.source);\n    } catch (err) {\n        return;\n    }\n\n    // $FlowFixMe\n    const messageEvent : MessageEvent = {\n        source: event.source || event.sourceElement,\n        origin: event.origin || (event.originalEvent && event.originalEvent.origin),\n        data:   event.data\n    };\n\n    if (!messageEvent.source) {\n        return;\n    }\n\n    if (!messageEvent.origin) {\n        throw new Error(`Post message did not have origin domain`);\n    }\n\n    if (__TEST__) {\n        if (needsGlobalMessagingForBrowser() && isSameTopWindow(messageEvent.source, window) === false) {\n            return;\n        }\n    }\n\n    receiveMessage(messageEvent, { on, send });\n}\n\nexport function listenForMessages({ on, send } : { on : OnType, send : SendType }) : CancelableType {\n    return globalStore().getOrSet('postMessageListeners', () => {\n        // $FlowFixMe\n        return addEventListener(window, 'message', event => {\n            // $FlowFixMe\n            messageListener(event, { on, send });\n        });\n    });\n}\n","/* @flow */\n\nimport { ZalgoPromise } from 'zalgo-promise/src';\n\nimport { addRequestListener, type RequestListenerType } from '../drivers';\nimport { WILDCARD } from '../conf';\nimport type { ServerOptionsType, HandlerType, CancelableType } from '../types';\n\nexport function on(name : string, options : ServerOptionsType | HandlerType, handler : ?HandlerType) : CancelableType {\n\n    if (!name) {\n        throw new Error('Expected name');\n    }\n\n    if (typeof options === 'function') {\n        handler = options;\n        // $FlowFixMe\n        options = {};\n    }\n\n    if (!handler) {\n        throw new Error('Expected handler');\n    }\n\n    options = options || {};\n    options.name = name;\n    options.handler = handler || options.handler;\n\n    const win = options.window;\n    const domain = options.domain;\n\n    const listenerOptions : RequestListenerType = {\n        handler:     options.handler,\n        handleError: options.errorHandler || (err => {\n            throw err;\n        }),\n        window: win,\n        domain: domain || WILDCARD,\n        name\n    };\n\n    const requestListener = addRequestListener({ name, win, domain }, listenerOptions);\n\n    return {\n        cancel() {\n            requestListener.cancel();\n        }\n    };\n}\n\nexport function once(name : string, options? : ServerOptionsType | HandlerType, handler? : HandlerType) : ZalgoPromise<{ source : mixed, origin : string, data : Object }> {\n    \n    // $FlowFixMe\n    options = options || {};\n    if (typeof options === 'function') {\n        handler = options;\n        // $FlowFixMe\n        options = {};\n    }\n\n    const promise = new ZalgoPromise();\n    let listener; // eslint-disable-line prefer-const\n\n    options.errorHandler = (err) => {\n        listener.cancel();\n        promise.reject(err);\n    };\n\n    listener = on(name, options, event => {\n        listener.cancel();\n        promise.resolve(event);\n        if (handler) {\n            return handler(event);\n        }\n    });\n\n    promise.cancel = listener.cancel;\n    return promise;\n}\n","/* @flow */\n\nimport { ZalgoPromise } from 'zalgo-promise/src';\nimport { isAncestor, isWindowClosed, getDomain, matchDomain, type CrossDomainWindowType } from 'cross-domain-utils/src';\nimport { uniqueID, isRegex, noop } from 'belter/src';\n\n\nimport { CHILD_WINDOW_TIMEOUT, MESSAGE_TYPE, WILDCARD, MESSAGE_NAME, ACK_TIMEOUT, RES_TIMEOUT, ACK_TIMEOUT_KNOWN } from '../conf';\nimport { sendMessage, addResponseListener, deleteResponseListener, markResponseListenerErrored, type ResponseListenerType } from '../drivers';\nimport { awaitWindowHello, sayHello, isWindowKnown } from '../lib';\nimport { windowStore } from '../global';\nimport type { RequestOptionsType, ResponseMessageEvent } from '../types';\n\nimport { on } from './on';\n\nexport function send(win : CrossDomainWindowType, name : string, data : ?Object, options? : RequestOptionsType) : ZalgoPromise<ResponseMessageEvent> {\n    \n    // $FlowFixMe\n    options = options || {};\n    let domain = options.domain || WILDCARD;\n    const responseTimeout = options.timeout || RES_TIMEOUT;\n    const childTimeout = options.timeout || CHILD_WINDOW_TIMEOUT;\n    const fireAndForget = options.fireAndForget || false;\n\n    const prom = ZalgoPromise.try(() => {\n        if (!name) {\n            throw new Error('Expected name');\n        }\n\n        if (domain) {\n            if (typeof domain !== 'string' && !Array.isArray(domain) && !isRegex(domain)) {\n                throw new TypeError(`Expected domain to be a string, array, or regex`);\n            }\n        }\n\n        if (isWindowClosed(win)) {\n            throw new Error('Target window is closed');\n        }\n\n        const reqPromises = windowStore('requestPromises').getOrSet(win, () => []);\n\n        // $FlowFixMe\n        const requestPromise = ZalgoPromise.try(() => {\n\n            if (isAncestor(window, win)) {\n                return awaitWindowHello(win, childTimeout);\n            } else if (isRegex(domain)) {\n                return sayHello(win, { send });\n            }\n\n        // $FlowFixMe\n        }).then(({ domain: origin } = {}) => {\n\n            if (isRegex(domain)) {\n                if (!matchDomain(domain, origin)) {\n                    // $FlowFixMe\n                    throw new Error(`Remote window domain ${ origin } does not match regex: ${ domain.source }`);\n                }\n                domain = origin;\n            }\n\n            const logName = (name === MESSAGE_NAME.METHOD && data && typeof data.name === 'string') ? `${ data.name }()` : name;\n\n            if (__DEBUG__) {\n                console.info('send::req', logName, domain, '\\n\\n', data); // eslint-disable-line no-console\n            }\n\n            let hasResult = false;\n\n            const promise = new ZalgoPromise();\n            promise.finally(() => {\n                hasResult = true;\n                reqPromises.splice(reqPromises.indexOf(requestPromise, 1));\n            }).catch(noop);\n\n            const hash = `${ name }_${ uniqueID() }`;\n\n            sendMessage(win, domain, {\n                type: MESSAGE_TYPE.REQUEST,\n                hash,\n                name,\n                data,\n                fireAndForget\n            }, { on, send });\n\n            if (fireAndForget) {\n                return promise.resolve();\n            }\n\n            promise.catch(() => {\n                markResponseListenerErrored(hash);\n                deleteResponseListener(hash);\n            });\n\n            const responseListener : ResponseListenerType = {\n                name,\n                win,\n                domain,\n                promise\n            };\n\n            addResponseListener(hash, responseListener);\n\n            const totalAckTimeout = isWindowKnown(win) ? ACK_TIMEOUT_KNOWN : ACK_TIMEOUT;\n            const totalResTimeout = responseTimeout;\n\n            let ackTimeout = totalAckTimeout;\n            let resTimeout = totalResTimeout;\n\n            let cycleTime = 100;\n\n            const cycle = () => {\n                if (hasResult) {\n                    return;\n                }\n\n                if (isWindowClosed(win)) {\n                    if (!responseListener.ack) {\n                        return promise.reject(new Error(`Window closed for ${ name } before ack`));\n                    } else {\n                        return promise.reject(new Error(`Window closed for ${ name } before response`));\n                    }\n                }\n\n                ackTimeout = Math.max(ackTimeout - cycleTime, 0);\n                if (resTimeout !== -1) {\n                    resTimeout = Math.max(resTimeout - cycleTime, 0);\n                }\n\n                const hasAck = responseListener.ack;\n\n                if (hasAck) {\n                    if (resTimeout === -1) {\n                        return;\n                    }\n\n                    cycleTime = Math.min(resTimeout, 2000);\n\n                } else if (ackTimeout === 0) {\n                    return promise.reject(new Error(`No ack for postMessage ${ name } in ${ getDomain() } in ${ totalAckTimeout }ms`));\n\n                } else if (resTimeout === 0) {\n                    return promise.reject(new Error(`No response for postMessage ${ name } in ${ getDomain() } in ${ totalResTimeout }ms`));\n                }\n\n                setTimeout(cycle, cycleTime);\n            };\n\n            setTimeout(cycle, cycleTime);\n\n            return promise;\n        });\n\n        reqPromises.push(requestPromise);\n        return requestPromise;\n    });\n\n    return prom;\n}\n","/* @flow */\n\nimport type { CrossDomainWindowType, DomainMatcher } from 'cross-domain-utils/src';\n\nimport { initHello } from './lib';\nimport { listenForMessages, receiveMessage, setupGlobalReceiveMessage } from './drivers';\nimport { getGlobal } from './global';\nimport { on, send } from './public';\nimport { setupBridge } from './bridge';\nimport { serializeMessage as internalSerializeMessage, deserializeMessage as internalDeserializeMessage, ProxyWindow } from './serialize';\n\nexport function serializeMessage<T>(destination : CrossDomainWindowType | ProxyWindow, domain : DomainMatcher, obj : T) : string {\n    return internalSerializeMessage(destination, domain, obj, { on, send });\n}\n\nexport function deserializeMessage<T : mixed>(source : CrossDomainWindowType | ProxyWindow, origin : string, message : string) : T {\n    return internalDeserializeMessage(source, origin, message, { on, send });\n}\n\nexport function toProxyWindow(win : CrossDomainWindowType | ProxyWindow) : ProxyWindow {\n    return ProxyWindow.toProxyWindow(win, { send });\n}\n\nexport function setup() {\n    if (!getGlobal().initialized) {\n        getGlobal().initialized = true;\n    \n        listenForMessages({ on, send });\n    \n        if (__POST_ROBOT__.__IE_POPUP_SUPPORT__) {\n            setupBridge({ on, send, receiveMessage });\n        }\n\n        initHello({ on, send });\n        setupGlobalReceiveMessage({ on, send });\n    }\n}\n","/* @flow */\n\nimport { type CrossDomainWindowType } from 'cross-domain-utils/src';\nimport { noop } from 'belter/src';\n\nimport { windowStore } from './global';\n\nexport function cleanUpWindow(win : CrossDomainWindowType) {\n    const requestPromises = windowStore('requestPromises');\n    for (const promise of requestPromises.get(win, [])) {\n        promise.reject(new Error(`Window cleaned up before response`)).catch(noop);\n    }\n}\n","/* @flow */\n\nimport { isSameDomain, type CrossDomainWindowType } from 'cross-domain-utils/src';\n\nexport function globalFor(win : CrossDomainWindowType) : Object {\n\n    if (!isSameDomain(win)) {\n        throw new Error(`Can not get global for window on different domain`);\n    }\n\n    if (!win[__ZOID__.__GLOBAL_KEY__]) {\n        win[__ZOID__.__GLOBAL_KEY__] = {};\n    }\n\n    return win[__ZOID__.__GLOBAL_KEY__];\n}\n","/* @flow */\n\nimport { ZalgoPromise } from 'zalgo-promise/src';\nimport { toCSS } from 'belter/src';\n\nexport type ProxyElement<T : HTMLElement> = {|\n    resize : ({ width : ?number, height : ?number }) => void,\n    getElement : () => ZalgoPromise<T>\n|};\n\nexport function getProxyElement<T : HTMLElement>(element : T) : ProxyElement<T> {\n    return {\n        resize({ width, height } : { width : ?number, height : ?number }) {\n            if (typeof width === 'number') {\n                element.style.width = toCSS(width);\n            }\n    \n            if (typeof height === 'number') {\n                element.style.height = toCSS(height);\n            }\n        },\n\n        getElement() : ZalgoPromise<T> {\n            return ZalgoPromise.try(() => {\n                if (this.source && this.source !== window) {\n                    throw new Error(`Can not call getElement from a remote window`);\n                }\n    \n                return element;\n            });\n        }\n    };\n}\n","/* @flow */\n\nimport { WINDOW_TYPE } from 'cross-domain-utils/src';\n\nexport const ZOID = `zoid`;\n\nexport const POST_MESSAGE = {\n    DELEGATE:       `${ ZOID }_delegate`,\n    ALLOW_DELEGATE: `${ ZOID }_allow_delegate`\n};\n\nexport const PROP_TYPE = {\n    STRING:   `string`,\n    OBJECT:   `object`,\n    FUNCTION: `function`,\n    BOOLEAN:  `boolean`,\n    NUMBER:   `number`,\n    ARRAY:    `array`\n};\n\nexport const INITIAL_PROPS = {\n    RAW: 'raw',\n    UID: 'uid'\n};\n\nexport const WINDOW_REFERENCES = {\n    OPENER: `opener`,\n    TOP:    `top`,\n    PARENT: `parent`,\n    GLOBAL: `global`\n};\n\nexport const PROP_SERIALIZATION = {\n    JSON:   ('json' : 'json'),\n    DOTIFY: ('dotify' : 'dotify'),\n    BASE64: ('base64' : 'base64')\n};\n\nexport const CONTEXT = WINDOW_TYPE;\n\nexport const WILDCARD = '*';\n\nexport const DEFAULT_DIMENSIONS = {\n    WIDTH:  '300px',\n    HEIGHT: '150px'\n};\n\nexport const EVENT = {\n    RENDER:   'zoid-render',\n    RENDERED: 'zoid-rendered',\n    DISPLAY:  'zoid-display',\n    ERROR:    'zoid-error',\n    CLOSE:    'zoid-close',\n    PROPS:    'zoid-props'\n};\n","/* @flow */\n\nimport { getDomain, isSameDomain, type CrossDomainWindowType } from 'cross-domain-utils/src';\n\nimport type { Component } from '../component';\nimport type { PropsType, MixedPropDefinitionType } from '../component/props';\n\nimport type { ChildHelpers } from './index';\n\nexport function normalizeChildProp<T, P>(component : Component<P>, props : (PropsType<P>), key : string, value : T, helpers : ChildHelpers<P>) : ?T  {\n\n    // $FlowFixMe\n    const prop : MixedPropDefinitionType<P> = component.getPropDefinition(key);\n\n    if (!prop) {\n        return value;\n    }\n\n    if (typeof prop.childDecorate === 'function') {\n        return prop.childDecorate({ value, ...helpers });\n    }\n\n    return value;\n}\n\n// eslint-disable-next-line max-params\nexport function normalizeChildProps<P>(parentComponentWindow : CrossDomainWindowType, component : Component<P>, props : (PropsType<P>), origin : string, helpers : ChildHelpers<P>, isUpdate : boolean = false) : (PropsType<P>) {\n\n    const result = {};\n\n    // $FlowFixMe\n    for (const key of Object.keys(props)) {\n        const prop = component.getPropDefinition(key);\n\n        if (prop && prop.sameDomain && (origin !== getDomain(window) || !isSameDomain(parentComponentWindow))) {\n            continue;\n        }\n\n        const value = normalizeChildProp(component, props, key, props[key], helpers);\n\n        result[key] = value;\n        if (prop && prop.alias && !result[prop.alias]) {\n            result[prop.alias] = value;\n        }\n    }\n\n    if (!isUpdate) {\n        for (const key of component.getPropNames()) {\n            if (!props.hasOwnProperty(key)) {\n                result[key] = normalizeChildProp(component, props, key, props[key], helpers);\n            }\n        }\n    }\n\n    // $FlowFixMe\n    return result;\n}\n","/* @flow */\n\nimport { inlineMemoize, stringifyError, base64decode } from 'belter/src';\n\nimport { ZOID } from '../constants';\nimport type { ChildPayload } from '../parent';\n\nfunction parseChildWindowName(windowName : string) : ChildPayload {\n    return inlineMemoize(parseChildWindowName, () => {\n        if (!windowName) {\n            throw new Error(`No window name`);\n        }\n    \n        const [ , zoidcomp, name, encodedPayload ] = windowName.split('__');\n    \n        if (zoidcomp !== ZOID) {\n            throw new Error(`Window not rendered by zoid - got ${ zoidcomp }`);\n        }\n    \n        if (!name) {\n            throw new Error(`Expected component name`);\n        }\n    \n        if (!encodedPayload) {\n            throw new Error(`Expected encoded payload`);\n        }\n    \n        try {\n            return JSON.parse(base64decode(encodedPayload));\n        } catch (err) {\n            throw new Error(`Can not decode window name payload: ${ encodedPayload }: ${ stringifyError(err) }`);\n        }\n    }, [ windowName ]);\n}\n\nexport function getChildPayload() : ?ChildPayload {\n    try {\n        return parseChildWindowName(window.name);\n    } catch (err) {\n        // pass\n    }\n}\n","/* @flow */\n/* eslint max-lines: 0 */\n\nimport { isSameDomain, matchDomain, getDomain, getOpener,\n    getNthParentFromTop, getAncestor, getAllFramesInWindow,\n    type CrossDomainWindowType, onCloseWindow } from 'cross-domain-utils/src';\nimport { markWindowKnown, deserializeMessage } from 'post-robot/src';\nimport { ZalgoPromise } from 'zalgo-promise/src';\nimport { extend, waitForDocumentBody, onResize, getElementSafe, assertExists } from 'belter/src';\n\nimport { globalFor } from '../lib';\nimport { CONTEXT, INITIAL_PROPS, WINDOW_REFERENCES } from '../constants';\nimport type { Component } from '../component';\nimport type { PropsType } from '../component/props';\nimport type { WindowRef, PropRef, ParentExportsType } from '../parent';\n\nimport { normalizeChildProps } from './props';\nimport { getChildPayload } from './window';\n\nexport * from './window';\n\nexport type ChildExportsType<P> = {|\n    updateProps : (props : (PropsType<P>)) => ZalgoPromise<void>,\n    close : () => ZalgoPromise<void>\n|};\n\nexport type ChildHelpers<P> = {|\n    close : () => ZalgoPromise<void>,\n    focus : () => ZalgoPromise<void>,\n    resize : ({ width : ?number, height : ?number }) => ZalgoPromise<void>,\n    onError : (mixed) => ZalgoPromise<void>,\n    onProps : ((PropsType<P>) => void) => void,\n    getParent : () => CrossDomainWindowType\n|};\n\n/*  Child Component\n    ---------------\n\n    This is the portion of code which runs inside the frame or popup window containing the component's implementation.\n\n    When the component author calls myComponent.attach(), it creates a new instance of ChildComponent, which is then\n    responsible for managing the state and messaging back up to the parent, and providing props for the component to\n    utilize.\n*/\n\nexport class ChildComponent<P> {\n\n    component : Component<P>\n    props : PropsType<P>\n    context : string\n    parent : ParentExportsType<P>\n    parentComponentWindow : CrossDomainWindowType\n\n    onPropHandlers : Array<(PropsType<P>) => void> // eslint-disable-line flowtype/no-mutable-array\n    autoResize : { width : boolean, height : boolean, element? : string }\n\n    constructor(component : Component<P>) {\n        ZalgoPromise.try(() => {\n            this.component = component;\n            this.onPropHandlers = [];\n            \n            const childPayload = getChildPayload();\n\n            if (!childPayload) {\n                throw new Error(`No child payload found`);\n            }\n\n            const { parent, domain, exports, context, props } = childPayload;\n\n            this.context = context;\n            this.parentComponentWindow = this.getParentComponentWindow(parent);\n            this.parent = deserializeMessage(this.parentComponentWindow, domain, exports);\n\n            this.checkParentDomain(domain);\n\n            const initialProps = this.getPropsByRef(this.parentComponentWindow, domain, props);\n            this.setProps(initialProps, domain);\n            markWindowKnown(this.parentComponentWindow);\n            \n            this.watchForClose();\n\n            return this.parent.init(this.buildExports());\n\n        }).then(() => {\n            return this.watchForResize();\n\n        }).catch(err => {\n            this.onError(err);\n        });\n    }\n\n    getHelpers() : ChildHelpers<P> {\n        return {\n            focus:         () => this.focus(),\n            close:         () => this.close(),\n            resize:        ({ width, height }) => this.resize({ width, height }),\n            onError:       (err) => this.onError(err),\n            onProps:       (handler) => this.onProps(handler),\n            getParent:     () => this.parentComponentWindow\n        };\n    }\n\n    checkParentDomain(domain : string) {\n        if (!matchDomain(this.component.allowedParentDomains, domain)) {\n            throw new Error(`Can not be rendered by domain: ${ domain }`);\n        }\n    }\n\n    onProps(handler : Function) {\n        this.onPropHandlers.push(handler);\n    }\n\n    getPropsByRef(parentComponentWindow : CrossDomainWindowType, domain : string, { type, value, uid } : PropRef) : (PropsType<P>) {\n        let props;\n\n        if (type === INITIAL_PROPS.RAW) {\n            props = value;\n        } else if (type === INITIAL_PROPS.UID) {\n            if (!isSameDomain(parentComponentWindow)) {\n                throw new Error(`Parent component window is on a different domain - expected ${ getDomain() } - can not retrieve props`);\n            }\n\n            const global = globalFor(parentComponentWindow);\n            props = assertExists('props', global && global.props[uid]);\n        }\n\n        if (!props) {\n            throw new Error(`Could not find props`);\n        }\n\n        return deserializeMessage(parentComponentWindow, domain, props);\n    }\n\n    getParentComponentWindow(ref : WindowRef) : CrossDomainWindowType {\n        const { type } = ref;\n    \n        if (type === WINDOW_REFERENCES.OPENER) {\n            return assertExists('opener', getOpener(window));\n    \n        } else if (type === WINDOW_REFERENCES.PARENT) {\n            // $FlowFixMe\n            const distance = ref.distance;\n            return assertExists('parent', getNthParentFromTop(window, distance));\n\n        } else if (type === WINDOW_REFERENCES.GLOBAL) {\n            // $FlowFixMe\n            const { uid } = ref;\n            const ancestor = getAncestor(window);\n\n            if (!ancestor) {\n                throw new Error(`Can not find ancestor window`);\n            }\n\n            for (const frame of getAllFramesInWindow(ancestor)) {\n                if (isSameDomain(frame)) {\n                    const global = globalFor(frame);\n\n                    if (global && global.windows && global.windows[uid]) {\n                        return global.windows[uid];\n                    }\n                }\n            }\n        }\n    \n        throw new Error(`Unable to find ${ type } parent component window`);\n    }\n\n    getProps() : PropsType<P> {\n        // $FlowFixMe\n        this.props = this.props || {};\n        return this.props;\n    }\n\n\n    setProps(props : PropsType<P>, origin : string, isUpdate : boolean = false) {\n        const helpers = this.getHelpers();\n        const existingProps = this.getProps();\n        const normalizedProps = normalizeChildProps(this.parentComponentWindow, this.component, props, origin, helpers, isUpdate);\n\n        extend(existingProps, normalizedProps);\n\n        for (const handler of this.onPropHandlers) {\n            handler.call(this, existingProps);\n        }\n    }\n\n    watchForClose() {\n        window.addEventListener('beforeunload', () => {\n            this.parent.checkClose.fireAndForget();\n        });\n\n        window.addEventListener('unload', () => {\n            this.parent.checkClose.fireAndForget();\n        });\n\n        onCloseWindow(this.parentComponentWindow, () => {\n            this.destroy();\n        });\n    }\n\n    getAutoResize() : { width : boolean, height : boolean, element : ?HTMLElement } {\n        let { width = false, height = false, element = 'body' } = this.autoResize || this.component.autoResize || {};\n        element = getElementSafe(element);\n        return { width, height, element };\n    }\n\n    watchForResize() : ?ZalgoPromise<void> {\n        return waitForDocumentBody().then(() => {\n            const { width, height, element } = this.getAutoResize();\n\n            if (!element || (!width && !height) || this.context === CONTEXT.POPUP) {\n                return;\n            }\n\n            onResize(element, ({ width: newWidth, height: newHeight }) => {\n                this.resize({\n                    width:  width ? newWidth : undefined,\n                    height: height ? newHeight : undefined\n                });\n            }, { width, height });\n        });\n    }\n\n    buildExports() : ChildExportsType<P> {\n\n        const self = this;\n\n        return {\n            updateProps(props : (PropsType<P>)) : ZalgoPromise<void> {\n                return ZalgoPromise.try(() => self.setProps(props, this.__origin__, true));\n            },\n\n            close() : ZalgoPromise<void> {\n                return ZalgoPromise.try(() => self.destroy());\n            }\n        };\n    }\n\n    resize({ width, height } : { width : ?number, height : ?number }) : ZalgoPromise<void> {\n        return this.parent.resize.fireAndForget({ width, height });\n    }\n\n    close() : ZalgoPromise<void> {\n        return this.parent.close();\n    }\n    \n    destroy() : ZalgoPromise<void> {\n        return ZalgoPromise.try(() => {\n            window.close();\n        });\n    }\n\n    focus() : ZalgoPromise<void> {\n        return ZalgoPromise.try(() => {\n            window.focus();\n        });\n    }\n\n    onError(err : mixed) : ZalgoPromise<void> {\n        return ZalgoPromise.try(() => {\n            if (this.parent && this.parent.onError) {\n                return this.parent.onError(err);\n            } else {\n                throw err;\n            }\n        });\n    }\n}\n","/* @flow */\n\nimport { ZalgoPromise } from 'zalgo-promise/src';\nimport { cleanUpWindow, ProxyWindow, toProxyWindow } from 'post-robot/src';\nimport { assertSameDomain } from 'cross-domain-utils/src';\nimport { iframe, popup, destroyElement, normalizeDimension, watchElementForClose,\n    awaitFrameWindow, uniqueID } from 'belter/src';\n\nimport { CONTEXT } from '../constants';\nimport { getProxyElement, type ProxyElement } from '../lib';\n\n\nexport type ContextDriverType = {|\n    openOnClick : boolean,\n    openFrame? : () => ProxyElement<HTMLIFrameElement>,\n    open : (?ProxyElement<HTMLIFrameElement>) => ZalgoPromise<ProxyWindow>,\n    openPrerenderFrame? : () => ProxyElement<HTMLIFrameElement>,\n    openPrerender : (ProxyWindow, ?ProxyElement<HTMLIFrameElement>) => ZalgoPromise<ProxyWindow>,\n    resize? : ({ width : ?number, height : ?number }) => void,\n    delegate : $ReadOnlyArray<string>\n|};\n\nexport const RENDER_DRIVERS : { [string] : ContextDriverType } = {};\n\nRENDER_DRIVERS[CONTEXT.IFRAME] = {\n    openOnClick: false,\n\n    openFrame() : ProxyElement<HTMLIFrameElement> {\n        return getProxyElement(iframe({\n            attributes: {\n                title: this.component.name,\n                ...this.component.attributes.iframe\n            }\n        }));\n    },\n\n    open(proxyFrame : ?ProxyElement<HTMLIFrameElement>) : ZalgoPromise<ProxyWindow> {\n        if (!proxyFrame) {\n            throw new Error(`Expected proxy frame to be passed`);\n        }\n\n        return proxyFrame.getElement().then(frame => {\n            return awaitFrameWindow(frame).then(win => {\n\n                const frameWatcher = watchElementForClose(frame, () => this.close());\n                this.clean.register(() => frameWatcher.cancel());\n                this.clean.register(() => destroyElement(frame));\n                this.clean.register(() => cleanUpWindow(win));\n\n                return toProxyWindow(win);\n            });\n        });\n    },\n\n    openPrerenderFrame() : ProxyElement<HTMLIFrameElement> {\n        return getProxyElement(iframe({\n            attributes: {\n                name:  `__zoid_prerender_frame__${ this.component.name }_${ uniqueID() }__`,\n                title: `prerender__${ this.component.name }`,\n                ...this.component.attributes.iframe\n            }\n        }));\n    },\n\n    openPrerender(proxyWin : ProxyWindow, proxyPrerenderFrame : ?ProxyElement<HTMLIFrameElement>) : ZalgoPromise<ProxyWindow> {\n        if (!proxyPrerenderFrame) {\n            throw new Error(`Expected proxy frame to be passed`);\n        }\n        \n        return proxyPrerenderFrame.getElement().then(prerenderFrame => {\n            this.clean.register(() => destroyElement(prerenderFrame));\n\n            return awaitFrameWindow(prerenderFrame).then(prerenderFrameWindow => {\n                return assertSameDomain(prerenderFrameWindow);\n            }).then(win => {\n                return toProxyWindow(win);\n            });\n        });\n    },\n\n    delegate: [\n        'getProxyContainer',\n        'renderContainer',\n        'openFrame',\n        'openPrerenderFrame',\n        'prerender',\n        'open',\n        'openPrerender'\n    ],\n\n    resize({ width, height } : { width : ?number, height : ?number }) {\n        if (this.proxyContainer) {\n            this.proxyContainer.resize({ width, height });\n        }\n    }\n};\n\nif (__ZOID__.__POPUP_SUPPORT__) {\n    RENDER_DRIVERS[CONTEXT.POPUP] = {\n        openOnClick: true,\n\n        open() : ZalgoPromise<ProxyWindow> {\n            return ZalgoPromise.try(() => {\n                let { width, height } = this.component.dimensions;\n\n                width = normalizeDimension(width, window.outerWidth);\n                height = normalizeDimension(height, window.outerWidth);\n\n                const win = popup('', {\n                    width,\n                    height,\n                    ...this.component.attributes.popup\n                });\n\n                this.clean.register(() => {\n                    win.close();\n                    cleanUpWindow(win);\n                });\n\n                return toProxyWindow(win);\n            });\n        },\n\n        openPrerender(proxyWin : ProxyWindow) : ZalgoPromise<ProxyWindow> {\n            return ZalgoPromise.try(() => {\n                return proxyWin;\n            });\n        },\n\n        delegate: [\n            'getProxyContainer',\n            'renderContainer',\n            'setProxyWin'\n        ]\n    };\n}\n","/* @flow */\n\nimport { ZalgoPromise } from 'zalgo-promise/src';\nimport { dotify, isDefined } from 'belter/src';\n\nimport type { Component } from '../component';\nimport type { BuiltInPropsDefinitionType, PropsInputType, PropsType, MixedPropDefinitionType } from '../component/props';\nimport { PROP_SERIALIZATION } from '../constants';\n\nimport type { ParentComponent, ParentHelpers } from './index';\n\n/*  Normalize Props\n    ---------------\n\n    Turn props into normalized values, using defaults, function options, etc.\n*/\n\nexport function normalizeProps<P>(component : Component<P>, instance : ParentComponent<P>, props : PropsInputType<P>, helpers : ParentHelpers<P>, isUpdate : boolean = false) : (PropsType<P>) { // eslint-disable-line complexity\n\n    // $FlowFixMe\n    props = props || {};\n    const result : $Shape<P> = { ...props }; // eslint-disable-line no-undef\n\n    const propNames = isUpdate\n        ? []\n        : [ ...component.getPropNames() ];\n\n    // $FlowFixMe\n    for (const key of Object.keys(props)) {\n        if (propNames.indexOf(key) === -1) {\n            propNames.push(key);\n        }\n    }\n\n    const aliases = [];\n\n    const { state, close, focus, onError } = helpers;\n\n    for (const key of propNames) {\n        const propDef = component.getPropDefinition(key);\n        // $FlowFixMe\n        let value = props[key];\n\n        if (!propDef) {\n            continue;\n        }\n\n        const alias = propDef.alias;\n        if (alias) {\n            if (!isDefined(value) && isDefined(props[alias])) {\n                value = props[alias];\n            }\n            aliases.push(alias);\n        }\n\n        if (propDef.value) {\n            value = propDef.value({ props: result, state, close, focus, onError });\n        }\n\n        if (!isDefined(value) && propDef.default) {\n            value = propDef.default({ props: result, state, close, focus, onError });\n        }\n\n        if (isDefined(value)) {\n            if (propDef.type === 'array' ? !Array.isArray(value) : (typeof value !== propDef.type)) {\n                throw new TypeError(`Prop is not of type ${ propDef.type }: ${ key }`);\n            }\n        }\n        \n        // $FlowFixMe\n        result[key] = value;\n    }\n\n    for (const alias of aliases) {\n        // $FlowFixMe\n        delete result[alias];\n    }\n\n    // $FlowFixMe\n    for (const key of Object.keys(result)) {\n        const propDef = component.getPropDefinition(key);\n        // $FlowFixMe\n        const value = result[key];\n\n        if (!propDef) {\n            continue;\n        }\n\n        if (isDefined(value) && propDef.validate) {\n            // $FlowFixMe\n            propDef.validate({ value, props: result });\n        }\n\n        if (isDefined(value) && propDef.decorate) {\n            // $FlowFixMe\n            result[key] = propDef.decorate({ value, props: result, state, close, focus, onError });\n        }\n    }\n\n    // $FlowFixMe\n    return result;\n}\n\n// $FlowFixMe\nfunction getQueryParam<T, P>(prop : MixedPropDefinitionType<P>, key : string, value : T) : ZalgoPromise<string> {\n    return ZalgoPromise.try(() => {\n        if (typeof prop.queryParam === 'function') {\n            return prop.queryParam({ value });\n        } else if (typeof prop.queryParam === 'string') {\n            return prop.queryParam;\n        } else {\n            return key;\n        }\n    });\n}\n\n// $FlowFixMe\nfunction getQueryValue<T, P>(prop : MixedPropDefinitionType<P>, key : string, value : T) : ZalgoPromise<mixed> {\n    return ZalgoPromise.try(() => {\n        if (typeof prop.queryValue === 'function' && isDefined(value)) {\n            return prop.queryValue({ value });\n        } else {\n            return value;\n        }\n    });\n}\n\nexport function propsToQuery<P>(propsDef : BuiltInPropsDefinitionType<P>, props : (PropsType<P>)) : ZalgoPromise<{ [string] : string }> {\n\n    const params = {};\n\n    return ZalgoPromise.all(Object.keys(props).map(key => {\n\n        const prop = propsDef[key];\n\n        if (!prop) {\n            return; // eslint-disable-line array-callback-return\n        }\n\n        return ZalgoPromise.resolve().then(() => {\n\n            const value = props[key];\n\n            if (!value) {\n                return;\n            }\n\n            if (!prop.queryParam) {\n                return;\n            }\n\n            return value;\n\n        }).then(value => {\n\n            if (value === null || typeof value === 'undefined') {\n                return;\n            }\n\n            return ZalgoPromise.all([\n                // $FlowFixMe\n                getQueryParam(prop, key, value),\n                // $FlowFixMe\n                getQueryValue(prop, key, value)\n            ]).then(([ queryParam, queryValue ]) => {\n\n                let result;\n\n                if (typeof queryValue === 'boolean') {\n                    result = queryValue.toString();\n                } else if (typeof queryValue === 'string') {\n                    result = queryValue.toString();\n                } else if (typeof queryValue === 'object' && queryValue !== null) {\n\n                    if (prop.serialization === PROP_SERIALIZATION.JSON) {\n                        result = JSON.stringify(queryValue);\n                    } else if (prop.serialization === PROP_SERIALIZATION.BASE64) {\n                        result = btoa(JSON.stringify(queryValue));\n                    } else if (prop.serialization === PROP_SERIALIZATION.DOTIFY || !prop.serialization) {\n                        result = dotify(queryValue, key);\n\n                        for (const dotkey of Object.keys(result)) {\n                            params[dotkey] = result[dotkey];\n                        }\n\n                        return;\n                    }\n\n                } else if (typeof queryValue === 'number') {\n                    result = queryValue.toString();\n                }\n\n                params[queryParam] = result;\n            });\n        });\n\n    })).then(() => {\n        return params;\n    });\n}\n","/* @flow */\n/* eslint max-lines: 0 */\n\nimport { send, bridge, serializeMessage, ProxyWindow, toProxyWindow } from 'post-robot/src';\nimport { isSameDomain, matchDomain, getDomainFromUrl, isBlankDomain,\n    onCloseWindow, getDomain, type CrossDomainWindowType,\n    getDistanceFromTop, normalizeMockUrl, assertSameDomain } from 'cross-domain-utils/src';\nimport { ZalgoPromise } from 'zalgo-promise/src';\nimport { addEventListener, uniqueID, elementReady, writeElementToWindow, eventEmitter, type EventEmitterType,\n    noop, onResize, extend, extendUrl, appendChild, cleanup, type CleanupType, base64encode,\n    once, stringifyError, destroyElement, isDefined, getElementSafe } from 'belter/src';\n\nimport { ZOID, POST_MESSAGE, CONTEXT, EVENT,\n    INITIAL_PROPS, WINDOW_REFERENCES } from '../constants';\nimport type { Component, onErrorPropType } from '../component';\nimport { globalFor, getProxyElement, type ProxyElement } from '../lib';\nimport type { PropsInputType, PropsType } from '../component/props';\nimport type { ChildExportsType } from '../child';\nimport type { DimensionsType } from '../types';\n\nimport { RENDER_DRIVERS, type ContextDriverType } from './drivers';\nimport { propsToQuery, normalizeProps } from './props';\n\nexport type RenderOptionsType<P> = {|\n    uid : string,\n    props : PropsInputType<P>,\n    tag : string,\n    context : string,\n    close : (?string) => ZalgoPromise<void>,\n    focus : () => ZalgoPromise<ProxyWindow>,\n    doc : Document,\n    container? : HTMLElement,\n    dimensions : DimensionsType,\n    state : Object,\n    event : EventEmitterType,\n    frame : ?HTMLIFrameElement,\n    prerenderFrame : ?HTMLIFrameElement\n|};\n\nexport type ParentExportsType<P> = {|\n    init : (ChildExportsType<P>) => ZalgoPromise<void>,\n    close : () => ZalgoPromise<void>,\n    checkClose : () => ZalgoPromise<void>,\n    resize : ({ width? : ?number, height? : ?number }) => ZalgoPromise<void>,\n    onError : (mixed) => ZalgoPromise<void>\n|};\n\nexport type PropRef =\n    {| type : typeof INITIAL_PROPS.RAW, uid? : string, value? : string |};\n\nexport type WindowRef =\n    {| type : typeof WINDOW_REFERENCES.OPENER |} |\n    {| type : typeof WINDOW_REFERENCES.PARENT, distance : number |} |\n    {| type : typeof WINDOW_REFERENCES.GLOBAL, uid : string |};\n\nexport type ChildPayload = {|\n    uid : string,\n    tag : string,\n    context : $Values<typeof CONTEXT>,\n    domain : string,\n    parent : WindowRef,\n    props : PropRef,\n    exports : string\n|};\n\nexport type StateType = Object;\n\nexport type ParentHelpers<P> = {|\n    state : StateType,\n    close : () => ZalgoPromise<void>,\n    focus : () => ZalgoPromise<void>,\n    resize : ({ width : ?number, height : ?number }) => ZalgoPromise<void>,\n    onError : (mixed) => ZalgoPromise<void>,\n    updateProps : PropsInputType<P> => ZalgoPromise<void>,\n    event : EventEmitterType\n|};\n\nexport class ParentComponent<P> {\n\n    component : Component<P>\n    driver : ContextDriverType\n    clean : CleanupType\n    event : EventEmitterType\n\n    initPromise : ZalgoPromise<void>\n    handledErrors : Array<mixed> // eslint-disable-line flowtype/no-mutable-array\n    \n    props : PropsType<P>\n    state : StateType\n    child : ?ChildExportsType<P>\n\n    proxyWin : ?ProxyWindow\n    proxyContainer : ?ProxyElement<HTMLElement>\n\n    constructor(component : Component<P>, props : PropsInputType<P>) {\n        this.initPromise = new ZalgoPromise();\n        this.handledErrors = [];\n\n        this.clean = cleanup(this);\n        this.state = {};\n\n        this.component = component;\n\n        this.setupEvents(props.onError);\n        this.setProps(props);\n        this.component.registerActiveComponent(this);\n        this.clean.register(() => this.component.destroyActiveComponent(this));\n        this.watchForUnload();\n    }\n\n    setupEvents(onError : ?onErrorPropType) {\n        this.event = eventEmitter();\n        \n        this.event.on(EVENT.RENDER,   () => this.props.onRender());\n        this.event.on(EVENT.DISPLAY,  () => this.props.onDisplay());\n        this.event.on(EVENT.RENDERED, () => this.props.onRendered());\n        this.event.on(EVENT.CLOSE,    () => this.props.onClose());\n        this.event.on(EVENT.PROPS,    (props) => this.props.onProps(props));\n\n        this.event.on(EVENT.ERROR, err => {\n            if (this.props && this.props.onError) {\n                return this.props.onError(err);\n            } else if (onError) {\n                return onError(err);\n            } else {\n                return this.initPromise.reject(err).then(() => {\n                    setTimeout(() => {\n                        throw err;\n                    }, 1);\n                });\n            }\n        });\n    }\n\n    render(target : CrossDomainWindowType, container : string | HTMLElement, context : $Values<typeof CONTEXT>) : ZalgoPromise<void> {\n        return ZalgoPromise.try(() => {\n            this.component.log(`render`);\n\n            this.driver = RENDER_DRIVERS[context];\n            const uid = `${ ZOID }-${ this.component.tag }-${ uniqueID() }`;\n            const domain = this.getDomain();\n            const initialDomain = this.getInitialDomain();\n            \n            this.component.checkAllowRender(target, domain, container);\n\n            if (target !== window) {\n                this.delegate(context, target);\n            }\n\n            const tasks = {};\n\n            tasks.init = this.initPromise;\n            tasks.buildUrl = this.buildUrl();\n            tasks.onRender = this.event.trigger(EVENT.RENDER);\n\n            tasks.getProxyContainer = this.getProxyContainer(container);\n\n            tasks.openFrame = this.openFrame();\n            tasks.openPrerenderFrame = this.openPrerenderFrame();\n\n            tasks.renderContainer = ZalgoPromise.all([ tasks.getProxyContainer, tasks.openFrame, tasks.openPrerenderFrame ]).then(([ proxyContainer, proxyFrame, proxyPrerenderFrame ]) => {\n                return this.renderContainer(proxyContainer, { context, uid, proxyFrame, proxyPrerenderFrame });\n            });\n\n            tasks.open = this.driver.openOnClick\n                ? this.open()\n                : tasks.openFrame.then(proxyFrame => this.open(proxyFrame));\n\n            tasks.openPrerender = ZalgoPromise.all([ tasks.open, tasks.openPrerenderFrame ]).then(([ proxyWin, proxyPrerenderFrame ]) => {\n                return this.openPrerender(proxyWin, proxyPrerenderFrame);\n            });\n\n            tasks.setState = ZalgoPromise.all([\n                tasks.open.then(proxyWin => {\n                    this.proxyWin = proxyWin;\n                    return this.setProxyWin(proxyWin);\n                }),\n                tasks.renderContainer.then(proxyContainer => {\n                    this.proxyContainer = proxyContainer;\n                })\n            ]);\n            \n            tasks.prerender = ZalgoPromise.all([ tasks.openPrerender, tasks.setState ]).then(([ proxyPrerenderWin ]) => {\n                return this.prerender(proxyPrerenderWin, { context, uid });\n            });\n\n            tasks.loadUrl = ZalgoPromise.all([ tasks.open, tasks.buildUrl, tasks.setWindowName, tasks.prerender ]).then(([ proxyWin, url ]) => {\n                return proxyWin.setLocation(url);\n            });\n\n            tasks.buildWindowName = tasks.open.then(proxyWin => {\n                return this.buildWindowName({ proxyWin, initialDomain, domain, target, context, uid });\n            });\n\n            tasks.setWindowName =  ZalgoPromise.all([ tasks.open, tasks.buildWindowName ]).then(([ proxyWin, windowName ]) => {\n                return proxyWin.setName(windowName);\n            });\n\n            tasks.watchForClose = tasks.open.then(proxyWin => {\n                return this.watchForClose(proxyWin);\n            });\n\n            tasks.onDisplay = tasks.prerender.then(() => {\n                return this.event.trigger(EVENT.DISPLAY);\n            });\n\n            tasks.openBridge = tasks.open.then(proxyWin => {\n                return this.openBridge(proxyWin, initialDomain, context);\n            });\n\n            tasks.runTimeout = tasks.loadUrl.then(() => {\n                return this.runTimeout();\n            });\n\n            tasks.onRender = tasks.init.then(() => {\n                return this.event.trigger(EVENT.RENDERED);\n            });\n\n            return ZalgoPromise.hash(tasks);\n            \n        }).catch(err => {\n            return ZalgoPromise.all([\n                this.onError(err),\n                this.destroy(err)\n            ]).then(() => {\n                throw err;\n            });\n        }).then(noop);\n    }\n\n    getProxyContainer(container : string | HTMLElement) : ZalgoPromise<ProxyElement<HTMLElement>> {\n        return ZalgoPromise.try(() => {\n            return elementReady(container);\n        }).then(containerElement => {\n            return getProxyElement(containerElement);\n        });\n    }\n\n    buildWindowName({ proxyWin, initialDomain, domain, target, uid, context } : { proxyWin : ProxyWindow, initialDomain : string, domain : string | RegExp, target : CrossDomainWindowType, context : $Values<typeof CONTEXT>, uid : string }) : string {\n        const childPayload = this.buildChildPayload({ proxyWin, initialDomain, domain, target, context, uid });\n        return `__${ ZOID }__${ this.component.name }__${ base64encode(JSON.stringify(childPayload)) }__`;\n    }\n\n    getPropsRef(proxyWin : ProxyWindow, target : CrossDomainWindowType, domain : string | RegExp, uid : string) : PropRef {\n        const value = serializeMessage(proxyWin, domain, this.getPropsForChild(domain));\n\n        const propRef = isSameDomain(target)\n            ? { type: INITIAL_PROPS.RAW, value }\n            : { type: INITIAL_PROPS.UID, uid };\n\n        if (propRef.type === INITIAL_PROPS.UID) {\n            const global = globalFor(window);\n            global.props = global.props || {};\n            global.props[uid] = value;\n\n            this.clean.register(() => {\n                delete global.props[uid];\n            });\n        }\n\n        return propRef;\n    }\n\n    buildChildPayload({ proxyWin, initialDomain, domain, target = window, context, uid } : { proxyWin : ProxyWindow, initialDomain : string, domain : string | RegExp, target : CrossDomainWindowType, context : $Values<typeof CONTEXT>, uid : string } = {}) : ChildPayload {\n        return {\n            uid,\n            context,\n            domain:  getDomain(window),\n            tag:     this.component.tag,\n            parent:  this.getWindowRef(target, initialDomain, uid, context),\n            props:   this.getPropsRef(proxyWin, target, domain, uid),\n            exports: serializeMessage(proxyWin, domain, this.buildParentExports(proxyWin))\n        };\n    }\n\n    setProxyWin(proxyWin : ProxyWindow) : ZalgoPromise<void> {\n        return ZalgoPromise.try(() => {\n            this.proxyWin = proxyWin;\n        });\n    }\n\n    getHelpers() : ParentHelpers<P> {\n        return {\n            state:       this.state,\n            event:       this.event,\n            close:       () => this.close(),\n            focus:       () => this.focus(),\n            resize:      ({ width, height }) => this.resize({ width, height }),\n            onError:     (err) => this.onError(err),\n            updateProps: (props) => this.updateProps(props)\n        };\n    }\n\n    setProps(props : PropsInputType<P>, isUpdate : boolean = false) {\n        if (this.component.validate) {\n            this.component.validate({ props });\n        }\n\n        const helpers = this.getHelpers();\n\n        // $FlowFixMe\n        this.props = this.props || {};\n        extend(this.props, normalizeProps(this.component, this, props, helpers, isUpdate));\n\n        for (const key of this.component.getPropNames()) {\n            const propDef = this.component.getPropDefinition(key);\n            if (propDef.required !== false && !isDefined(this.props[key])) {\n                throw new Error(`Expected prop \"${ key }\" to be defined`);\n            }\n        }\n    }\n\n    buildUrl() : ZalgoPromise<string> {\n        return propsToQuery({ ...this.component.props, ...this.component.builtinProps }, this.props).then(query => {\n            return extendUrl(normalizeMockUrl(this.component.getUrl(this.props)), { query });\n        });\n    }\n\n    getDomain() : string | RegExp {\n        return this.component.getDomain(this.props);\n    }\n\n    getInitialDomain() : string {\n        return this.component.getInitialDomain(this.props);\n    }\n\n    getPropsForChild(domain : string | RegExp) : (PropsType<P>) {\n        const result = {};\n\n        for (const key of Object.keys(this.props)) {\n            const prop = this.component.getPropDefinition(key);\n\n            if (prop && prop.sendToChild === false) {\n                continue;\n            }\n\n            if (prop && prop.sameDomain && !matchDomain(domain, getDomain(window))) {\n                continue;\n            }\n\n            // $FlowFixMe\n            result[key] = this.props[key];\n        }\n\n        // $FlowFixMe\n        return result;\n    }\n\n    updateProps(props : PropsInputType<P>) : ZalgoPromise<void> {\n        this.setProps(props, true);\n\n        return this.initPromise.then(() => {\n            if (this.child) {\n                return this.child.updateProps(this.getPropsForChild(this.getDomain()));\n            }\n        });\n    }\n\n    openFrame() : ZalgoPromise<?ProxyElement<HTMLIFrameElement>> {\n        return ZalgoPromise.try(() => {\n            if (this.driver.openFrame) {\n                return this.driver.openFrame.call(this);\n            }\n        });\n    }\n\n    openPrerenderFrame() : ZalgoPromise<?ProxyElement<HTMLIFrameElement>> {\n        return ZalgoPromise.try(() => {\n            if (this.driver.openPrerenderFrame) {\n                return this.driver.openPrerenderFrame.call(this);\n            }\n        });\n    }\n    \n    open(proxyFrame : ?ProxyElement<HTMLIFrameElement>) : ZalgoPromise<ProxyWindow> {\n        return ZalgoPromise.try(() => {\n            this.component.log(`open`);\n\n            const windowProp = this.props.window;\n\n            if (windowProp) {\n                this.clean.register(() => windowProp.close());\n                return toProxyWindow(windowProp);\n            }\n\n            return this.driver.open.call(this, proxyFrame);\n\n        }).then(proxyWin => {\n            this.proxyWin = proxyWin;\n            return proxyWin;\n        });\n    }\n\n    openPrerender(proxyWin : ProxyWindow, proxyPrerenderFrame : ?ProxyElement<HTMLIFrameElement>) : ZalgoPromise<ProxyWindow> {\n        return ZalgoPromise.try(() => {\n            return this.driver.openPrerender.call(this, proxyWin, proxyPrerenderFrame);\n        });\n    }\n\n    focus() : ZalgoPromise<void> {\n        return ZalgoPromise.try(() => {\n            if (this.proxyWin) {\n                return this.proxyWin.focus().then(noop);\n            }\n        });\n    }\n\n    delegate(context : $Values<typeof CONTEXT>, target : CrossDomainWindowType) {\n        this.component.log(`delegate`);\n\n        const props = {};\n        for (const propName of this.component.getPropNames()) {\n            if (this.component.getPropDefinition(propName).allowDelegate) {\n                props[propName] = this.props[propName];\n            }\n        }\n\n        const overridesPromise = send(target, `${ POST_MESSAGE.DELEGATE }_${ this.component.name }`, {\n            context,\n            props,\n            overrides: {\n                event:   this.event,\n                close:   () => this.close(),\n                onError: (err) => this.onError(err)\n            }\n\n        }).then(({ data }) => {\n            this.clean.register(data.destroy);\n            return data.overrides;\n\n        }).catch(err => {\n            throw new Error(`Unable to delegate rendering. Possibly the component is not loaded in the target window.\\n\\n${ stringifyError(err) }`);\n        });\n\n        for (const key of this.driver.delegate) {\n            // $FlowFixMe\n            this[key] = function overriddenFunction() : ZalgoPromise<mixed> {\n                return overridesPromise.then(overrides => {\n                    return overrides[key].apply(this, arguments);\n                });\n            };\n        }\n    }\n\n    getWindowRef(target : CrossDomainWindowType, domain : string, uid : string, context : $Values<typeof CONTEXT>) : WindowRef {\n        \n        if (domain === getDomain(window)) {\n            const global = globalFor(window);\n            global.windows = global.windows || {};\n            global.windows[uid] = window;\n            this.clean.register(() => {\n                delete global.windows[uid];\n            });\n    \n            return { type: WINDOW_REFERENCES.GLOBAL, uid };\n        }\n\n        if (context === CONTEXT.POPUP) {\n            return { type: WINDOW_REFERENCES.OPENER };\n        }\n\n        return { type: WINDOW_REFERENCES.PARENT, distance: getDistanceFromTop(window) };\n    }\n\n    watchForClose(proxyWin : ProxyWindow) : ZalgoPromise<void> {\n        return proxyWin.awaitWindow().then(win => {\n            const closeWindowListener = onCloseWindow(win, () => {\n                this.component.log(`detect_close_child`);\n                return this.close();\n            }, 2000);\n\n            this.clean.register(closeWindowListener.cancel);\n        });\n    }\n\n    watchForUnload() {\n        const unloadWindowListener = addEventListener(window, 'unload', once(() => {\n            this.component.log(`navigate_away`);\n            this.destroy(new Error(`Window navigated away`));\n        }));\n\n        this.clean.register(unloadWindowListener.cancel);\n    }\n\n    runTimeout() : ZalgoPromise<void> {\n        return ZalgoPromise.try(() => {\n            const timeout = this.props.timeout;\n\n            if (timeout) {\n                return this.initPromise.timeout(timeout, new Error(`Loading component timed out after ${ timeout } milliseconds`));\n            }\n        });\n    }\n\n    initChild(child : ChildExportsType<P>) : ZalgoPromise<void> {\n        return ZalgoPromise.try(() => {\n            this.clean.set('child', child);\n            this.initPromise.resolve();\n        });\n    }\n\n    buildParentExports(win : ProxyWindow) : ParentExportsType<P> {\n        const onError    = (err) => this.onError(err);\n        const init       = (child) => this.initChild(child);\n        const close      = () => this.close();\n        const checkClose = () => this.checkClose(win);\n        const resize     = ({ width, height }) => this.resize({ width, height });\n\n        init.onError = onError;\n\n        return { init, close, checkClose, resize, onError };\n    }\n\n    resize({ width, height } : { width? : ?number, height? : ?number }) : ZalgoPromise<void> {\n        return ZalgoPromise.try(() => {\n            if (this.driver.resize) {\n                return this.driver.resize.call(this, { width, height });\n            }\n        });\n    }\n\n    checkClose(win : ProxyWindow) : ZalgoPromise<void> {\n        return win.isClosed().then(closed => {\n            if (closed) {\n                return this.close();\n            }\n\n            return ZalgoPromise.delay(200)\n                .then(() => win.isClosed())\n                .then(secondClosed => {\n                    if (secondClosed) {\n                        return this.close();\n                    }\n                });\n        });\n    }\n\n    close() : ZalgoPromise<void> {\n        return ZalgoPromise.try(() => {\n            this.component.log(`close`);\n            return this.event.trigger(EVENT.CLOSE);\n\n        }).then(() => {\n            if (this.child) {\n                this.child.close.fireAndForget().catch(noop);\n            }\n\n            return this.destroy(new Error(`Window closed`), false);\n        });\n    }\n\n    prerender(proxyPrerenderWin : ProxyWindow, { context, uid } : { context : $Values<typeof CONTEXT>, uid : string }) : ZalgoPromise<void> {\n        return ZalgoPromise.try(() => {\n            const prerenderTemplate = this.component.prerenderTemplate;\n\n            if (!prerenderTemplate) {\n                return;\n            }\n\n            let prerenderWindow = proxyPrerenderWin.getWindow();\n\n            if (!prerenderWindow || !isSameDomain(prerenderWindow) || !isBlankDomain(prerenderWindow)) {\n                return;\n            }\n\n            prerenderWindow = assertSameDomain(prerenderWindow);\n    \n            const doc = prerenderWindow.document;\n            const el = this.renderTemplate(prerenderTemplate, { context, uid, doc });\n\n            if (!el) {\n                return;\n            }\n\n            if (el.ownerDocument !== doc) {\n                throw new Error(`Expected prerender template to have been created with document from child window`);\n            }\n\n            writeElementToWindow(prerenderWindow, el);\n\n            let { width = false, height = false, element = 'body' } = this.component.autoResize || {};\n            element = getElementSafe(element, doc);\n            \n            if (element && (width || height)) {\n                onResize(element, ({ width: newWidth, height: newHeight }) => {\n                    this.resize({\n                        width:  width ? newWidth : undefined,\n                        height: height ? newHeight : undefined\n                    });\n                }, { width, height, win: prerenderWindow });\n            }\n        });\n    }\n\n    renderTemplate(renderer : (RenderOptionsType<P>) => ?HTMLElement, { context, uid, container, doc, frame, prerenderFrame } : { context : $Values<typeof CONTEXT>, uid : string, container? : HTMLElement, doc : Document, frame? : ?HTMLIFrameElement, prerenderFrame? : ?HTMLIFrameElement }) : ?HTMLElement {\n        // $FlowFixMe\n        return renderer.call(this, {\n            container,\n            context,\n            uid,\n            doc,\n            frame,\n            prerenderFrame,\n            focus:      () => this.focus(),\n            close:      () => this.close(),\n            state:      this.state,\n            props:      this.props,\n            tag:        this.component.tag,\n            dimensions: this.component.dimensions,\n            event:      this.event\n        });\n    }\n\n    renderContainer(proxyContainer : ProxyElement<HTMLElement>, { proxyFrame, proxyPrerenderFrame, context, uid } : { context : $Values<typeof CONTEXT>, uid : string, proxyFrame : ?ProxyElement<HTMLIFrameElement>, proxyPrerenderFrame : ?ProxyElement<HTMLIFrameElement> }) : ZalgoPromise<?ProxyElement<HTMLElement>> {\n        return ZalgoPromise.all([\n            proxyContainer.getElement().then(elementReady),\n            // $FlowFixMe\n            proxyFrame ? proxyFrame.getElement() : null,\n            // $FlowFixMe\n            proxyPrerenderFrame ? proxyPrerenderFrame.getElement() : null\n        ]).then(([ container, frame, prerenderFrame ]) => {\n            const innerContainer = this.renderTemplate(this.component.containerTemplate, { context, uid, container, frame, prerenderFrame, doc: document });\n            if (innerContainer) {\n                appendChild(container, innerContainer);\n                this.clean.register(() => destroyElement(innerContainer));\n                this.proxyContainer = getProxyElement(innerContainer);\n                return this.proxyContainer;\n            }\n        });\n    }\n\n    destroy(err? : mixed, trigger? : boolean = true) : ZalgoPromise<void> {\n        return ZalgoPromise.try(() => {\n            if (!err) {\n                trigger = false;\n                err = new Error('Component destroyed');\n            }\n            this.component.log(`destroy`);\n            return this.onError(err, trigger);\n        }).then(() => {\n            return this.clean.all();\n        });\n    }\n\n    onError(err : mixed, trigger? : boolean = true) : ZalgoPromise<void> {\n        return ZalgoPromise.try(() => {\n            if (this.handledErrors.indexOf(err) !== -1) {\n                return;\n            }\n\n            this.handledErrors.push(err);\n            this.initPromise.asyncReject(err);\n\n            if (trigger) {\n                return this.event.trigger(EVENT.ERROR, err);\n            }\n        });\n    }\n\n    openBridge(proxyWin : ProxyWindow, domain : string, context : $Values<typeof CONTEXT>) : ?ZalgoPromise<?CrossDomainWindowType> {\n        if (__POST_ROBOT__.__IE_POPUP_SUPPORT__) {\n            return ZalgoPromise.try(() => {\n                return proxyWin.awaitWindow();\n                \n            }).then(win => {\n                if (!bridge || !bridge.needsBridge({ win, domain }) || bridge.hasBridge(domain, domain)) {\n                    return;\n                }\n\n                const bridgeUrl = this.component.getBridgeUrl();\n\n                if (!bridgeUrl) {\n                    throw new Error(`Bridge needed to render ${ context }`);\n                }\n\n                const bridgeDomain = getDomainFromUrl(bridgeUrl);\n                bridge.linkUrl(win, domain);\n                return bridge.openBridge(normalizeMockUrl(bridgeUrl), bridgeDomain);\n            });\n        }\n    }\n}\n","/* @flow */\n\nimport { onCloseWindow, type CrossDomainWindowType } from 'cross-domain-utils/src';\nimport { ZalgoPromise } from 'zalgo-promise/src';\nimport { ProxyWindow } from 'post-robot/src';\nimport { cleanup, type CleanupType, type EventEmitterType } from 'belter/src';\n\nimport { ParentComponent } from '../parent';\nimport { RENDER_DRIVERS, type ContextDriverType } from '../parent/drivers';\nimport type { Component } from '../component';\n\nexport type DelegatePropsType = {|\n    onClose : () => ?ZalgoPromise<void>,\n    onDisplay : () => ?ZalgoPromise<void>,\n    window : ?ProxyWindow\n|};\n\nexport type DelegateOptionsType = {|\n    context : string,\n    props : DelegatePropsType,\n    overrides : {\n        close : () => ZalgoPromise<void>,\n        onError : (mixed) => ZalgoPromise<void>,\n        event : EventEmitterType\n    }\n|};\n\nexport type DelegateReturnType = {|\n    overrides : Object,\n    destroy : () => ZalgoPromise<void>\n|};\n\nexport class DelegateComponent<P>  {\n\n    component : Component<P>\n    source : CrossDomainWindowType\n    context : string\n    driver : ContextDriverType\n    props : DelegatePropsType\n    clean : CleanupType\n\n    focus : () => ZalgoPromise<void>\n    resize : ({ width? : ?number, height? : ?number }) => ZalgoPromise<void>\n    renderTemplate : Function\n\n    close : () => ZalgoPromise<void>\n    onError : (mixed) => ZalgoPromise<void>\n    event : EventEmitterType\n\n    constructor(component : Component<P>, source : CrossDomainWindowType, options : DelegateOptionsType) {\n        this.component = component;\n        this.context = options.context;\n        this.driver = RENDER_DRIVERS[options.context];\n        this.clean = cleanup(this);\n        \n        this.focus = ParentComponent.prototype.focus;\n        this.resize = ParentComponent.prototype.resize;\n        this.renderTemplate = ParentComponent.prototype.renderTemplate;\n\n        // $FlowFixMe\n        this.props = {};\n        for (const propName of Object.keys(options.props)) {\n            const propDef = this.component.getPropDefinition(propName);\n            if (propDef && propDef.allowDelegate && options.props[propName]) {\n                // $FlowFixMe\n                this.props[propName] = options.props[propName];\n            }\n        }\n\n        this.close   = options.overrides.close;\n        this.onError = options.overrides.onError;\n        this.event   = options.overrides.event;\n\n        this.component.registerActiveComponent(this);\n        this.clean.register(() => this.component.destroyActiveComponent(this));\n\n        this.watchForSourceClose(source);\n    }\n\n    getDelegate() : DelegateReturnType {\n        return {\n            overrides: this.getOverrides(),\n            destroy:   () => this.destroy()\n        };\n    }\n\n    watchForSourceClose(source : CrossDomainWindowType) {\n        const closeSourceWindowListener = onCloseWindow(source, () => this.destroy(), 3000);\n        this.clean.register(closeSourceWindowListener.cancel);\n    }\n\n    getOverrides() : { [string] : mixed } {\n        const overrides = {};\n        const self = this;\n\n        for (const key of this.driver.delegate) {\n            overrides[key] = function delegateOverride() : mixed {\n                // $FlowFixMe\n                return ParentComponent.prototype[key].apply(self, arguments);\n            };\n            overrides[key].__name__ = key;\n        }\n\n        return overrides;\n    }\n\n    destroy() : ZalgoPromise<void> {\n        return this.clean.all();\n    }\n}\n","export default function _inheritsLoose(subClass, superClass) {\n  subClass.prototype = Object.create(superClass.prototype);\n  subClass.prototype.constructor = subClass;\n  subClass.__proto__ = superClass;\n}","/* @flow */\n\nexport type NodePropsType = { [string] : mixed };\n// eslint-disable-next-line no-use-before-define\nexport type NodeType = ElementNode | TextNode | FragmentNode;\n// eslint-disable-next-line no-use-before-define\nexport type NodeChildrenType = $ReadOnlyArray<ElementNode | TextNode>;\nexport type NodeRenderer<T> = (string, NodePropsType, NodeChildrenType) => T;\nexport type NodeRendererFactory<T, O = Object> = (O | void) => NodeRenderer<T>;\n\nclass Node {\n    isElementNode() : boolean {\n        return false;\n    }\n\n    isTextNode() : boolean {\n        return false;\n    }\n\n    isFragmentNode() : boolean {\n        return false;\n    }\n}\n\nexport class ElementNode extends Node {\n    name : string\n    props : NodePropsType\n    children : NodeChildrenType\n    onRender : ?<T>(T) => void // eslint-disable-line no-undef\n\n    constructor(name : string, props : NodePropsType, children : NodeChildrenType) {\n        super();\n        this.name = name;\n        this.props = props;\n        this.children = children;\n\n        if (typeof props.onRender === 'function') {\n            this.onRender = props.onRender;\n            delete props.onRender;\n        }\n    }\n\n    getTag() : string {\n        return this.name;\n    }\n\n    isTag(name : string) : boolean {\n        return name === this.name;\n    }\n\n    isElementNode() : boolean {\n        return true;\n    }\n\n    render<T>(renderer : NodeRenderer<T>) : T {\n        const element = renderer(this.name, this.props, this.children);\n        if (this.onRender) {\n            this.onRender(element);\n        }\n        return element;\n    }\n\n    getText() : string {\n        throw new Error(`Can not get text of an element node`);\n    }\n}\n\nexport class TextNode extends Node {\n    text : string\n\n    constructor(text : string) {\n        super();\n        this.text = text;\n    }\n\n    getTag() : string {\n        throw new Error(`Can not get tag of text node`);\n    }\n\n    isTag(name : string) : boolean { // eslint-disable-line no-unused-vars\n        throw new Error(`Can not check tag of text node`);\n    }\n\n    isTextNode() : boolean {\n        return true;\n    }\n\n    render<T>(renderer : NodeRenderer<T>) : T { // eslint-disable-line no-unused-vars\n        throw new Error(`Can not render a text node`);\n    }\n\n    getText() : string {\n        return this.text;\n    }\n}\n\nexport class FragmentNode extends Node {\n    children : NodeChildrenType\n\n    constructor(children : NodeChildrenType) {\n        super();\n        this.children = children;\n    }\n\n    getTag() : string {\n        throw new Error(`Can not get tag of fragment node`);\n    }\n\n    isTag(name : string) : boolean { // eslint-disable-line no-unused-vars\n        throw new Error(`Can not check tag of fragment node`);\n    }\n\n    isFragmentNode() : boolean {\n        return true;\n    }\n\n    render<T>(renderer : NodeRenderer<T>) : $ReadOnlyArray<T> { // eslint-disable-line no-unused-vars\n        throw new Error(`Can not render a fragment node`);\n    }\n\n    getText() : string {\n        throw new Error(`Can not get text of a fragment node`);\n    }\n}\n\ntype JsxChildType = $ReadOnlyArray<JsxChildType> | NodeType | string;\ntype NullableJsxChildType = $ReadOnlyArray<NullableJsxChildType> | NodeType | string | null | void;\n\nfunction normalizeChild(child : NullableJsxChildType) : NodeType | void {\n    if (typeof child === 'string') {\n        return new TextNode(child);\n\n    } else if (child instanceof ElementNode || child instanceof TextNode || child instanceof FragmentNode) {\n        return child;\n\n    } else if (Array.isArray(child)) {\n        return new FragmentNode(normalizeChildren(child)); // eslint-disable-line no-use-before-define\n\n    } else if (child === null || typeof child === 'undefined') {\n        return; // eslint-disable-line no-useless-return\n\n    } else {\n        throw new Error(`Child node must be string or instance of jsx-pragmatic node; got ${ typeof child }`);\n    }\n}\n\nfunction normalizeChildren(children : $ReadOnlyArray<NullableJsxChildType>) : NodeChildrenType {\n    const result = [];\n\n    for (const child of children) {\n        const normalizedChild = normalizeChild(child);\n\n        if (!normalizedChild) {\n            continue;\n        }\n\n        if (normalizedChild instanceof FragmentNode) {\n            for (const subchild of normalizedChild.children) {\n                result.push(subchild);\n            }\n        } else {\n            result.push(normalizedChild);\n        }\n    }\n\n    return result;\n}\n\ntype JSXElementBuilder<P : NodePropsType> = (\n    element : string,\n    props : P | null,\n    ...children : $ReadOnlyArray<NullableJsxChildType>\n) => ElementNode;\n\ntype JSXElementFunctionBuilder<P : NodePropsType> = (\n    element : (P, $ReadOnlyArray<JsxChildType>) => ElementNode,\n    props : P | null,\n    ...children : $ReadOnlyArray<NullableJsxChildType>\n) => ElementNode;\n\ntype JSXTextFunctionBuilder<P : NodePropsType> = (\n    element : (P, $ReadOnlyArray<JsxChildType>) => string | TextNode,\n    props : P | null,\n    ...children : $ReadOnlyArray<NullableJsxChildType>\n) => TextNode;\n\ntype JSXFragmentFunctionBuilder<P : NodePropsType> = (\n    element : (P, $ReadOnlyArray<JsxChildType>) => FragmentNode | $ReadOnlyArray<NullableJsxChildType>,\n    props : P | null,\n    ...children : $ReadOnlyArray<NullableJsxChildType>\n) => FragmentNode;\n\ntype JSXEmptyFunctionBuilder<P : NodePropsType> = (\n    element : (P, $ReadOnlyArray<JsxChildType>) => null | void,\n    props : P | null,\n    ...children : $ReadOnlyArray<NullableJsxChildType>\n) => void;\n\ntype JSXBuilder<P : NodePropsType> = JSXElementBuilder<P> & JSXElementFunctionBuilder<P> & JSXTextFunctionBuilder<P> & JSXFragmentFunctionBuilder<P> & JSXEmptyFunctionBuilder<P>;\n\nexport const node : JSXBuilder<*> = <P : NodePropsType>(element, props : P | null, ...children) => {\n    if (typeof element === 'string') {\n        return new ElementNode(element, props || {}, normalizeChildren(children));\n    }\n\n    if (typeof element === 'function') {\n        // $FlowFixMe\n        return normalizeChild(element(props || {}, normalizeChildren(children)));\n    }\n    \n    throw new TypeError(`Expected jsx Element to be a string or a function`);\n};\n\nexport function Fragment(props : NodePropsType, ...children : $ReadOnlyArray<JsxChildType>) : FragmentNode {\n    \n    if (props && Object.keys(props).length) {\n        throw new Error(`Do not pass props to Fragment`);\n    }\n\n    return new FragmentNode(normalizeChildren(children));\n}\n","/* @flow */\n\nimport type { NodeChildrenType, NodePropsType, NodeRendererFactory, NodeRenderer } from '../node';\n\nconst ELEMENT_TAG = {\n    HTML:    'html',\n    IFRAME:  'iframe',\n    SCRIPT:  'script',\n    NODE:    'node',\n    DEFAULT: 'default'\n};\n\nconst ELEMENT_PROP = {\n    INNER_HTML: 'innerHTML',\n    EL:         'el'\n};\n\nfunction fixScripts(el : HTMLElement, doc : Document = window.document) {\n    for (const script of el.querySelectorAll('script')) {\n        const parentNode = script.parentNode;\n\n        if (!parentNode) {\n            continue;\n        }\n\n        const newScript = doc.createElement('script');\n        // $FlowFixMe\n        newScript.text = script.textContent;\n        parentNode.replaceChild(newScript, script);\n    }\n}\n\ntype CreateElementOptions = {|\n    doc : Document,\n    name : string,\n    props : NodePropsType\n|};\n\nconst CREATE_ELEMENT : { [string] : (CreateElementOptions) => HTMLElement } = {\n\n    [ ELEMENT_TAG.NODE ]: ({ props } : CreateElementOptions) => {\n        if (!props[ELEMENT_PROP.EL]) {\n            throw new Error(`Must pass ${ ELEMENT_PROP.EL } prop to ${ ELEMENT_TAG.NODE } element`);\n        }\n\n        if (Object.keys(props).length > 1) {\n            throw new Error(`Must not pass any prop other than ${ ELEMENT_PROP.EL } to ${ ELEMENT_TAG.NODE } element`);\n        }\n\n        // $FlowFixMe\n        return props[ELEMENT_PROP.EL];\n    },\n\n    [ ELEMENT_TAG.DEFAULT ]: ({ name, doc } : CreateElementOptions) => {\n        return doc.createElement(name);\n    }\n};\n\nfunction createElement({ doc, name, props } : CreateElementOptions) : HTMLElement {\n    const elementCreator = CREATE_ELEMENT[name] || CREATE_ELEMENT[ELEMENT_TAG.DEFAULT];\n    return elementCreator({ name, props, doc });\n}\n\ntype AddPropsOptions = {|\n    el : HTMLElement,\n    props : NodePropsType\n|};\n\nfunction addProps({ el, props } : AddPropsOptions) {\n    for (const prop of Object.keys(props)) {\n        const val = props[prop];\n\n        if (val === null || typeof val === 'undefined' || prop === ELEMENT_PROP.EL || prop === ELEMENT_PROP.INNER_HTML) {\n            continue;\n        }\n\n        if (prop.match(/^on[A-Z][a-z]/) && typeof val === 'function') {\n            el.addEventListener(prop.slice(2).toLowerCase(), val);\n        } else if (typeof val === 'string' || typeof val === 'number') {\n            el.setAttribute(prop, val.toString());\n\n        } else if (typeof val === 'boolean') {\n            if (val === true) {\n                el.setAttribute(prop, '');\n            }\n\n        } else {\n            throw new TypeError(`Can not render prop ${ prop } of type ${ typeof val }`);\n        }\n    }\n}\n\ntype AddChildrenOptions = {|\n    el : HTMLElement,\n    name : string,\n    children : NodeChildrenType,\n    doc : Document,\n    props : NodePropsType,\n    domRenderer : NodeRenderer<HTMLElement>\n|};\n\nconst ADD_CHILDREN : { [string] : (AddChildrenOptions) => void } = {\n\n    [ ELEMENT_TAG.IFRAME ]: ({ el, children } : AddChildrenOptions) => {\n        const firstChild = children[0];\n\n        if (children.length > 1 || !firstChild.isElementNode()) {\n            throw new Error(`Expected only single element node as child of ${ ELEMENT_TAG.IFRAME } element`);\n        }\n\n        if (!firstChild.isTag(ELEMENT_TAG.HTML)) {\n            throw new Error(`Expected element to be inserted into frame to be html, got ${ firstChild.getTag() }`);\n        }\n    \n        el.addEventListener('load', () => {\n\n            // $FlowFixMe\n            const win = el.contentWindow;\n    \n            if (!win) {\n                throw new Error(`Expected frame to have contentWindow`);\n            }\n\n            const doc = win.document;\n            const docElement = doc.documentElement;\n\n            while (docElement.children && docElement.children.length) {\n                docElement.removeChild(docElement.children[0]);\n            }\n\n            // eslint-disable-next-line no-use-before-define\n            const child = firstChild.render(dom({ doc }));\n        \n            while (child.children.length) {\n                docElement.appendChild(child.children[0]);\n            }\n        });\n    },\n\n    [ ELEMENT_TAG.SCRIPT ]: ({ el, children } : AddChildrenOptions) => {\n        const firstChild = children[0];\n\n        if (children.length !== 1 || !firstChild.isTextNode()) {\n            throw new Error(`Expected only single text node as child of ${ ELEMENT_TAG.SCRIPT } element`);\n        }\n        \n        // $FlowFixMe\n        el.text = firstChild.getText();\n    },\n\n    [ ELEMENT_TAG.DEFAULT ]: ({ el, children, doc, domRenderer } : AddChildrenOptions) => {\n        for (const child of children) {\n            if (child.isTextNode()) {\n                el.appendChild(doc.createTextNode(child.getText()));\n            } else {\n                el.appendChild(child.render(domRenderer));\n            }\n        }\n    }\n};\n\nfunction addChildren({ el, name, props, children, doc, domRenderer } : AddChildrenOptions) {\n    if (props.hasOwnProperty(ELEMENT_PROP.INNER_HTML)) {\n\n        if (children.length >= 1) {\n            throw new Error(`Expected no children to be passed when ${ ELEMENT_PROP.INNER_HTML } prop is set`);\n        }\n\n        const html = props[ELEMENT_PROP.INNER_HTML];\n\n        if (typeof html !== 'string') {\n            throw new TypeError(`${ ELEMENT_PROP.INNER_HTML } prop must be string`);\n        }\n\n        if (name === ELEMENT_TAG.SCRIPT) {\n            // $FlowFixMe\n            el.text = html;\n        } else {\n            el.innerHTML = html;\n            fixScripts(el, doc);\n        }\n\n    } else {\n        const addChildrenToElement = ADD_CHILDREN[name] || ADD_CHILDREN[ELEMENT_TAG.DEFAULT];\n        addChildrenToElement({ el, name, props, children, doc, domRenderer });\n    }\n}\n\n\nexport const dom : NodeRendererFactory<HTMLElement> = ({ doc = document } : { doc? : Document } = {}) => {\n    const domRenderer = (name, props, children) => {\n        const el = createElement({ name, props, doc });\n        addProps({ el, props });\n        addChildren({ el, name, props, children, doc, domRenderer });\n        return el;\n    };\n\n    return domRenderer;\n};\n","/* @flow */\n/* @jsx node */\n/* eslint react/react-in-jsx-scope: off */\n\nimport { node, dom } from 'jsx-pragmatic/src';\nimport { destroyElement } from 'belter/src';\n\nimport { type RenderOptionsType } from '../../parent';\nimport { EVENT } from '../../constants';\n\nconst CLASS = {\n    VISIBLE:   'visible',\n    INVISIBLE: 'invisible'\n};\n\nexport function defaultContainerTemplate<P>({ uid, frame, prerenderFrame, doc, event, dimensions : { width, height } } : RenderOptionsType<P>) : ?HTMLElement {\n    if (__ZOID__.__DEFAULT_CONTAINER__) {\n        if (!frame || !prerenderFrame) {\n            return;\n        }\n    \n        prerenderFrame.classList.add(CLASS.VISIBLE);\n        frame.classList.add(CLASS.INVISIBLE);\n    \n        event.on(EVENT.RENDERED, () => {\n            prerenderFrame.classList.remove(CLASS.VISIBLE);\n            prerenderFrame.classList.add(CLASS.INVISIBLE);\n    \n            frame.classList.remove(CLASS.INVISIBLE);\n            frame.classList.add(CLASS.VISIBLE);\n    \n            setTimeout(() => {\n                destroyElement(prerenderFrame);\n            }, 1);\n        });\n    \n        return (\n            <div id={ uid }>\n                <style>\n                    {`\n                        #${ uid } {\n                            display: inline-block;\n                            position: relative;\n                            width: ${ width };\n                            height: ${ height };\n                        }\n    \n                        #${ uid } > iframe {\n                            display: inline-block;\n                            position: absolute;\n                            width: 100%;\n                            height: 100%;\n                            top: 0;\n                            left: 0;\n                            transition: opacity .2s ease-in-out;\n                        }\n    \n                        #${ uid } > iframe.${ CLASS.INVISIBLE } {\n                            opacity: 0;\n                        }\n    \n                        #${ uid } > iframe.${ CLASS.VISIBLE } {\n                            opacity: 1;\n                        }\n                    `}\n                </style>\n    \n                <node el={ frame } />\n                <node el={ prerenderFrame } />\n            </div>\n        ).render(dom({ doc }));\n    }\n}\n","/* @flow */\n/** @jsx node */\n/* eslint react/react-in-jsx-scope: off */\n\nimport { node, dom } from 'jsx-pragmatic/src';\n\nimport { type RenderOptionsType } from '../../parent';\n\nexport function defaultPrerenderTemplate<P>({ doc } : RenderOptionsType<P>) : ?HTMLElement {\n    if (__ZOID__.__DEFAULT_PRERENDER__) {\n        return (\n            <html>\n                <body>\n                    <style>\n                        {`\n                            .spinner {\n                                position: fixed;\n                                max-height: 60vmin;\n                                max-width: 60vmin;\n                                height: 40px;\n                                width: 40px;\n                                top: 50%;\n                                left: 50%;\n                                box-sizing: border-box;\n                                border: 3px solid rgba(0, 0, 0, .2);\n                                border-top-color: rgba(33, 128, 192, 0.8);\n                                border-radius: 100%;\n                                animation: rotation .7s infinite linear;\n                            }\n    \n                            @keyframes rotation {\n                                from {\n                                    transform: translateX(-50%) translateY(-50%) rotate(0deg);\n                                }\n                                to {\n                                    transform: translateX(-50%) translateY(-50%) rotate(359deg);\n                                }\n                            }\n                        `}\n                    </style>\n                    <div class=\"spinner\" />\n                </body>\n            </html>\n        ).render(dom({ doc }));\n    }\n}\n","/* @flow */\n\nimport { ZalgoPromise } from 'zalgo-promise/src';\nimport { once, noop } from 'belter/src';\nimport { isWindow, type CrossDomainWindowType } from 'cross-domain-utils/src';\nimport { ProxyWindow, toProxyWindow } from 'post-robot/src';\n\nimport { PROP_SERIALIZATION } from '../constants';\n\nexport type EventHandlerType<T> = (T) => void | ZalgoPromise<void>;\n\nexport type timeoutPropType = number;\nexport type windowPropType = CrossDomainWindowType | ProxyWindow;\nexport type closePropType = () => ZalgoPromise<void>;\nexport type focusPropType = () => ZalgoPromise<void>;\nexport type resizePropType = ({ width : ?number, height : ?number }) => ZalgoPromise<void>;\n\nexport type onDisplayPropType = EventHandlerType<void>;\nexport type onRenderedPropType = EventHandlerType<void>;\nexport type onRenderPropType = EventHandlerType<void>;\nexport type onClosePropType = EventHandlerType<void>;\nexport type onErrorPropType = EventHandlerType<mixed>;\nexport type onPropsPropType<P> = ((PropsType<P>) => void) => void; // eslint-disable-line no-use-before-define\n\nexport type PropsInputType<P> = {\n    timeout? : timeoutPropType,\n    window? : windowPropType,\n\n    onDisplay? : onDisplayPropType,\n    onRendered? : onRenderedPropType,\n    onRender? : onRenderPropType,\n    onClose? : onClosePropType,\n    onError? : onErrorPropType,\n    onProps? : onPropsPropType<P>\n} & P;\n\nexport type PropsType<P> = {|\n    timeout? : timeoutPropType,\n    window? : ?windowPropType,\n    close? : ?closePropType,\n    focus? : ?focusPropType,\n    resize? : ?resizePropType,\n\n    onDisplay : onDisplayPropType,\n    onRendered : onRenderedPropType,\n    onRender : onRenderPropType,\n    onClose : onClosePropType,\n    onError : onErrorPropType,\n    onProps : onPropsPropType<P>\n|} & P;\n\ntype PropDefinitionType<T, P, S : string> = {|\n    type : S,\n    alias? : string,\n    value? : ({ props : P, state : Object, close : () => ZalgoPromise<void>, focus : () => ZalgoPromise<void>, onError : (mixed) => ZalgoPromise<void> }) => ?T,\n    required? : boolean,\n    queryParam? : boolean | string | ({ value : T }) => (string | ZalgoPromise<string>),\n    queryValue? : ({ value : T }) => (ZalgoPromise<mixed> | mixed),\n    sendToChild? : boolean,\n    allowDelegate? : boolean,\n    validate? : ({ value : T, props : PropsInputType<P> }) => void,\n    decorate? : ({ value : T, props : PropsType<P>, state : Object, close : () => ZalgoPromise<void>, focus : () => ZalgoPromise<void>, onError : (mixed) => ZalgoPromise<void> }) => T,\n    default? : ({ props : P, state : Object }) => ?T,\n    sameDomain? : boolean,\n    serialization? : $Values<typeof PROP_SERIALIZATION>,\n    childDecorate? : ({ value : T, close : () => ZalgoPromise<void>, focus : () => ZalgoPromise<void>, onError : (mixed) => ZalgoPromise<void>, onProps : ((PropsType<P>) => void) => void, resize : ({ width : ?number, height : ?number }) => ZalgoPromise<void> }) => ?T\n|};\n\nexport type BooleanPropDefinitionType<T : boolean, P> = PropDefinitionType<T, P, 'boolean'>;\nexport type StringPropDefinitionType<T : string, P> = PropDefinitionType<T, P, 'string'>;\nexport type NumberPropDefinitionType<T : number, P> = PropDefinitionType<T, P, 'number'>;\nexport type FunctionPropDefinitionType<T : Function, P> = PropDefinitionType<T, P, 'function'>;\nexport type ArrayPropDefinitionType<T : Array<*>, P> = PropDefinitionType<T, P, 'array'>; // eslint-disable-line flowtype/no-mutable-array\nexport type ObjectPropDefinitionType<T : Object, P> = PropDefinitionType<T, P, 'object'>;\n\nexport type MixedPropDefinitionType<P> = BooleanPropDefinitionType<*, P> | StringPropDefinitionType<*, P> | NumberPropDefinitionType<*, P> | FunctionPropDefinitionType<*, P> | ObjectPropDefinitionType<*, P> | ArrayPropDefinitionType<*, P>;\n\nexport type UserPropsDefinitionType<P> = {\n    [string] : MixedPropDefinitionType<P>\n};\n\n// eslint-disable-next-line flowtype/require-exact-type\nexport type BuiltInPropsDefinitionType<P> = {\n    timeout : NumberPropDefinitionType<timeoutPropType, P>,\n    window : ObjectPropDefinitionType<windowPropType, P>,\n    close : FunctionPropDefinitionType<closePropType, P>,\n    focus : FunctionPropDefinitionType<focusPropType, P>,\n    resize : FunctionPropDefinitionType<resizePropType, P>,\n\n    onDisplay : FunctionPropDefinitionType<onDisplayPropType, P>,\n    onRendered : FunctionPropDefinitionType<onRenderedPropType, P>,\n    onRender : FunctionPropDefinitionType<onRenderPropType, P>,\n    onClose : FunctionPropDefinitionType<onClosePropType, P>,\n    onError : FunctionPropDefinitionType<onErrorPropType, P>,\n    onProps : FunctionPropDefinitionType<onPropsPropType<P>, P>\n};\n\nconst defaultNoop = () => noop;\nconst decorateOnce = ({ value }) => once(value);\n\nexport function getBuiltInProps<P>() : BuiltInPropsDefinitionType<P> {\n    return {\n        window: {\n            type:          'object',\n            sendToChild:   false,\n            required:      false,\n            allowDelegate: true,\n            validate({ value } : { value : CrossDomainWindowType | ProxyWindow }) {\n                if (!isWindow(value) && !ProxyWindow.isProxyWindow(value)) {\n                    throw new Error(`Expected Window or ProxyWindow`);\n                }\n            },\n            decorate({ value } : { value : CrossDomainWindowType | ProxyWindow }) : ProxyWindow {\n                return toProxyWindow(value);\n            }\n        },\n\n        timeout: {\n            type:        'number',\n            required:    false,\n            sendToChild: false\n        },\n\n        close: {\n            type:          'function',\n            required:      false,\n            sendToChild:   false,\n            childDecorate: ({ close }) => close\n        },\n\n        focus: {\n            type:          'function',\n            required:      false,\n            sendToChild:   false,\n            childDecorate: ({ focus }) => focus\n        },\n\n        resize: {\n            type:          'function',\n            required:      false,\n            sendToChild:   false,\n            childDecorate: ({ resize }) => resize\n        },\n\n        getParent: {\n            type:          'function',\n            required:      false,\n            sendToChild:   false,\n            childDecorate: ({ getParent }) => getParent\n        },\n\n        onDisplay: {\n            type:          'function',\n            required:      false,\n            sendToChild:   false,\n            allowDelegate: true,\n            default:       defaultNoop,\n            decorate:      decorateOnce\n        },\n\n        onRendered: {\n            type:        'function',\n            required:    false,\n            sendToChild: false,\n            default:     defaultNoop,\n            decorate:    decorateOnce\n        },\n\n        onRender: {\n            type:        'function',\n            required:    false,\n            sendToChild: false,\n            default:     defaultNoop,\n            decorate:    decorateOnce\n        },\n\n        onClose: {\n            type:          'function',\n            required:      false,\n            sendToChild:   false,\n            allowDelegate: true,\n            default:       defaultNoop,\n            decorate:      decorateOnce\n        },\n\n        onError: {\n            type:          'function',\n            required:      false,\n            sendToChild:   false,\n            childDecorate: ({ onError }) => onError\n        },\n\n        onProps: {\n            type:          'function',\n            required:      false,\n            sendToChild:   false,\n            default:       defaultNoop,\n            childDecorate: ({ onProps }) => onProps\n        }\n    };\n}\n","/* @flow */\n/* eslint max-lines: 0 */\n\nimport { on, send, bridge, toProxyWindow } from 'post-robot/src';\nimport { ZalgoPromise } from 'zalgo-promise/src';\nimport { isWindow, getDomainFromUrl, type CrossDomainWindowType, isSameTopWindow, getDomain, matchDomain, isSameDomain } from 'cross-domain-utils/src';\nimport { isRegex, noop, isElement } from 'belter/src';\n\nimport { ChildComponent, getChildPayload } from '../child';\nimport { ParentComponent, type RenderOptionsType, type ParentHelpers } from '../parent';\nimport { DelegateComponent } from '../delegate';\nimport { CONTEXT, POST_MESSAGE, WILDCARD, DEFAULT_DIMENSIONS } from '../constants';\nimport { react, angular, vue, angular2 } from '../drivers';\nimport type { CssDimensionsType, StringMatcherType } from '../types';\n\nimport { validate } from './validate';\nimport { defaultContainerTemplate, defaultPrerenderTemplate } from './templates';\nimport { getBuiltInProps, type UserPropsDefinitionType, type BuiltInPropsDefinitionType, type PropsInputType, type PropsType, type MixedPropDefinitionType } from './props';\n\ntype LoggerPayload = { [string] : ?string };\n\n// eslint-disable-next-line flowtype/require-exact-type\ntype Logger = {\n    debug : (event : string, payload? : LoggerPayload) => void,\n    info : (event : string, payload? : LoggerPayload) => void,\n    warn : (event : string, payload? : LoggerPayload) => void,\n    error : (event : string, payload? : LoggerPayload) => void\n};\n\n/*  Component\n    ---------\n\n    This is the spec for the component. The idea is, when I call zoid.create(), it will create a new instance\n    of Component with the blueprint needed to set up ParentComponents and ChildComponents.\n\n    This is the one portion of code which is required by -- and shared to -- both the parent and child windows, and\n    contains all of the configuration needed for them to set themselves up.\n*/\n\nexport type ComponentOptionsType<P> = {|\n\n    tag : string,\n\n    url : string | ({ props : PropsType<P> }) => string,\n    domain? : string | RegExp,\n    bridgeUrl? : string,\n\n    props? : UserPropsDefinitionType<P>,\n\n    dimensions? : CssDimensionsType,\n    autoResize? : { width? : boolean, height? : boolean, element? : string },\n\n    allowedParentDomains? : StringMatcherType,\n\n    attributes? : {\n        iframe? : { [string] : string },\n        popup? : { [string] : string }\n    },\n\n    defaultContext? : $Values<typeof CONTEXT>,\n\n    containerTemplate? : (RenderOptionsType<P>) => ?HTMLElement,\n    prerenderTemplate? : (RenderOptionsType<P>) => ?HTMLElement,\n\n    validate? : ({ props : PropsInputType<P> }) => void,\n\n    logger? : Logger\n|};\n\ntype ZoidRenderer = {|\n    render : (container? : string | HTMLElement, context? : $Values<typeof CONTEXT>) => ZalgoPromise<void>,\n    renderTo : (target : CrossDomainWindowType, container? : string, context? : $Values<typeof CONTEXT>) => ZalgoPromise<void>\n|};\n\nexport type ZoidComponentInstance<P> = {| ...ParentHelpers<P>, ...ZoidRenderer |};\n\nexport type ZoidComponent<P> = {|\n    (PropsInputType<P>) : ZoidComponentInstance<P>,\n    driver : (string, mixed) => mixed,\n    isChild : () => boolean,\n    xprops? : PropsType<P>,\n    canRenderTo : (CrossDomainWindowType) => ZalgoPromise<boolean>\n|};\n\nexport class Component<P> {\n\n    tag : string\n    name : string\n    \n    url : string | ({ props : PropsType<P> }) => string\n    domain : void | string | RegExp\n    bridgeUrl : void | string\n\n    props : UserPropsDefinitionType<P>\n    builtinProps : BuiltInPropsDefinitionType<P>\n\n    dimensions : CssDimensionsType\n    autoResize : void | { width? : boolean, height? : boolean, element? : string }\n\n    allowedParentDomains : StringMatcherType\n\n    defaultContext : $Values<typeof CONTEXT>\n    \n    attributes : {\n        iframe? : { [string] : string },\n        popup? : { [string] : string }\n    }\n\n    containerTemplate : (RenderOptionsType<P>) => ?HTMLElement\n    prerenderTemplate : ?(RenderOptionsType<P>) => ?HTMLElement\n\n    validate : void | ({ props : PropsInputType<P> }) => void\n\n    driverCache : { [string] : mixed }\n\n    xprops : ?PropsType<P>\n\n    logger : Logger\n\n    propNames : $ReadOnlyArray<string>\n\n    constructor(options : ComponentOptionsType<P>) {\n        validate(options);\n\n        // The tag name of the component. Used by some drivers (e.g. angular) to turn the component into an html element,\n        // e.g. <my-component>\n\n        this.tag = options.tag;\n        this.name = this.tag.replace(/-/g, '_');\n\n        this.allowedParentDomains = options.allowedParentDomains || WILDCARD;\n\n        if (Component.components[this.tag]) {\n            throw new Error(`Can not register multiple components with the same tag: ${ this.tag }`);\n        }\n\n        // A json based spec describing what kind of props the component accepts. This is used to validate any props before\n        // they are passed down to the child.\n\n        this.builtinProps = getBuiltInProps();\n        this.props = options.props || {};\n\n        // The dimensions of the component, e.g. { width: '300px', height: '150px' }\n\n        const { width = DEFAULT_DIMENSIONS.WIDTH, height = DEFAULT_DIMENSIONS.HEIGHT } = options.dimensions || {};\n        this.dimensions = { width, height };\n\n        this.url = options.url;\n        this.domain = options.domain;\n        this.bridgeUrl = options.bridgeUrl;\n\n        this.attributes = options.attributes || {};\n        this.attributes.iframe = this.attributes.iframe || {};\n        this.attributes.popup = this.attributes.popup || {};\n\n        this.defaultContext = options.defaultContext || CONTEXT.IFRAME;\n\n        this.autoResize = options.autoResize;\n\n        if (options.containerTemplate) {\n            this.containerTemplate = options.containerTemplate;\n        } else if (__ZOID__.__DEFAULT_CONTAINER__) {\n            this.containerTemplate = defaultContainerTemplate;\n        }\n\n        if (options.prerenderTemplate) {\n            this.prerenderTemplate = options.prerenderTemplate;\n        } else if (__ZOID__.__DEFAULT_PRERENDER__) {\n            this.prerenderTemplate = defaultPrerenderTemplate;\n        }\n\n        this.validate = options.validate;\n\n        this.logger = options.logger || {\n            debug: noop,\n            info:  noop,\n            warn:  noop,\n            error: noop\n        };\n\n        this.registerChild();\n        this.listenDelegate();\n\n        Component.components[this.tag] = this;\n    }\n\n    getPropNames() : $ReadOnlyArray<string> {\n        if (this.propNames) {\n            return this.propNames;\n        }\n\n        const propNames = Object.keys(this.props);\n        for (const key of Object.keys(this.builtinProps)) {\n            if (propNames.indexOf(key) === -1) {\n                propNames.push(key);\n            }\n        }\n\n        this.propNames = propNames;\n        return propNames;\n    }\n\n    // $FlowFixMe\n    getPropDefinition(name : string) : MixedPropDefinitionType<P> {\n        // $FlowFixMe\n        return this.props[name] || this.builtinProps[name];\n    }\n\n    driver(name : string, dep : mixed) : mixed {\n        if (__ZOID__.__FRAMEWORK_SUPPORT__) {\n            const drivers = { react, angular, vue, angular2 };\n\n            if (!drivers[name]) {\n                throw new Error(`Could not find driver for framework: ${ name }`);\n            }\n    \n            this.driverCache = this.driverCache || {};\n    \n            if (!this.driverCache[name]) {\n                this.driverCache[name] = drivers[name].register(this, dep);\n            }\n    \n            return this.driverCache[name];\n        } else {\n            throw new Error(`Driver support not enabled`);\n        }\n    }\n\n    registerChild() {\n        if (this.isChild()) {\n            if (window.xprops) {\n                throw new Error(`Can not register ${ this.name } as child - can not attach multiple components to the same window`);\n            }\n\n            const child = new ChildComponent(this);\n            window.xprops = this.xprops = child.getProps();\n        }\n    }\n\n    listenDelegate() {\n        on(`${ POST_MESSAGE.ALLOW_DELEGATE }_${ this.name }`, () => {\n            return true;\n        });\n\n        on(`${ POST_MESSAGE.DELEGATE }_${ this.name }`, ({ source, data: { context, props, overrides } }) => {\n            const delegate = new DelegateComponent(this, source, { context, props, overrides });\n            return delegate.getDelegate();\n        });\n    }\n\n    canRenderTo(win : CrossDomainWindowType) : ZalgoPromise<boolean> {\n        return send(win, `${ POST_MESSAGE.ALLOW_DELEGATE }_${ this.name }`).then(({ data }) => {\n            return data;\n        }).catch(() => {\n            return false;\n        });\n    }\n\n    getUrl(props : PropsType<P>) : string {\n        if (typeof this.url === 'function') {\n            return this.url({ props });\n        }\n\n        return this.url;\n    }\n\n    getInitialDomain(props : PropsType<P>) : string {\n        if (this.domain && typeof this.domain === 'string') {\n            return this.domain;\n        }\n\n        return getDomainFromUrl(this.getUrl(props));\n    }\n\n    getDomain(props : PropsType<P>) : string | RegExp {\n        if (isRegex(this.domain)) {\n            // $FlowFixMe\n            return this.domain;\n        }\n\n        return this.getInitialDomain(props);\n    }\n\n    getBridgeUrl() : ?string {\n        if (this.bridgeUrl) {\n            return this.bridgeUrl;\n        }\n    }\n\n    isChild() : boolean {\n        const payload = getChildPayload();\n        return Boolean(payload && payload.tag === this.tag);\n    }\n\n    getDefaultContainer<T : (string | HTMLElement)>(context : $Values<typeof CONTEXT>, container? : T) : T {\n        if (container) {\n            if (typeof container !== 'string' && !isElement(container)) {\n                throw new TypeError(`Expected string or element selector to be passed`);\n            }\n\n            return container;\n        }\n\n        if (context === CONTEXT.POPUP) {\n            // $FlowFixMe\n            return 'body';\n        }\n\n        throw new Error(`Expected element to be passed to render iframe`);\n    }\n\n    getDefaultContext(context : ?$Values<typeof CONTEXT>, props : PropsInputType<P>) : $Values<typeof CONTEXT> {\n        if (props.window) {\n            return toProxyWindow(props.window).getType();\n        }\n\n        if (context) {\n            if (context !== CONTEXT.IFRAME && context !== CONTEXT.POPUP) {\n                throw new Error(`Unrecognized context: ${ context }`);\n            }\n            \n            return context;\n        }\n\n        return this.defaultContext;\n    }\n\n    init(props : PropsInputType<P>) : ZoidComponentInstance<P> {\n\n        // $FlowFixMe\n        props = props || {};\n        \n        const parent = new ParentComponent(this, props);\n\n        const render = (target, container, context) => ZalgoPromise.try(() => {\n            if (!isWindow(target)) {\n                throw new Error(`Must pass window to renderTo`);\n            }\n\n            context = this.getDefaultContext(context, props);\n            container = this.getDefaultContainer(context, container);\n            return parent.render(target, container, context);\n        });\n\n        return {\n            ...parent.getHelpers(),\n            render:   (container, context) => render(window, container, context),\n            renderTo: (target, container, context) => render(target, container, context)\n        };\n    }\n\n    checkAllowRender(target : CrossDomainWindowType, domain : string | RegExp, container : string | HTMLElement) {\n        if (target === window) {\n            return;\n        }\n\n        if (!isSameTopWindow(window, target)) {\n            throw new Error(`Can only renderTo an adjacent frame`);\n        }\n\n        const origin = getDomain();\n\n        if (!matchDomain(domain, origin) && !isSameDomain(target)) {\n            throw new Error(`Can not render remotely to ${ domain.toString() } - can only render to ${ origin }`);\n        }\n\n        if (container && typeof container !== 'string') {\n            throw new Error(`Container passed to renderTo must be a string selector, got ${ typeof container } }`);\n        }\n    }\n\n    log(event : string, payload? : LoggerPayload) {\n        this.logger.info(`${ this.name }_${ event }`, payload);\n    }\n\n    static components : { [string] : Component<*> } = {}\n    static activeComponents : Array<ParentComponent<*> | DelegateComponent<*>> = [] // eslint-disable-line flowtype/no-mutable-array\n\n    registerActiveComponent<Q>(instance : ParentComponent<Q> | DelegateComponent<Q>) {\n        Component.activeComponents.push(instance);\n    }\n\n    destroyActiveComponent<Q>(instance : ParentComponent<Q> | DelegateComponent<Q>) {\n        Component.activeComponents.splice(Component.activeComponents.indexOf(instance), 1);\n    }\n\n    static destroyAll() : ZalgoPromise<void> {\n        if (bridge) {\n            bridge.destroyBridges();\n        }\n\n        const results = [];\n\n        while (Component.activeComponents.length) {\n            results.push(Component.activeComponents[0].destroy());\n        }\n\n        return ZalgoPromise.all(results).then(noop);\n    }\n}\n\nexport type ComponentDriverType<P, T : mixed> = {|\n    register : (Component<P>, T) => mixed\n|};\n\nexport function create<P>(options : ComponentOptionsType<P>) : ZoidComponent<P> {\n    const component : Component<P> = new Component(options);\n\n    const init = (props) => component.init(props);\n    init.driver = (name, dep) => component.driver(name, dep);\n    init.isChild = () => component.isChild();\n    init.canRenderTo = (win) => component.canRenderTo(win);\n    init.xprops = component.xprops;\n\n    // $FlowFixMe\n    return init;\n}\n\nexport function destroyAll() : ZalgoPromise<void> {\n    return Component.destroyAll();\n}\n","/* @flow */\n\nimport { isPerc, isPx, values } from 'belter/src';\n\nimport { CONTEXT, PROP_TYPE } from '../constants';\n\nimport type { ComponentOptionsType } from './index';\n\nfunction validatePropDefinitions<P>(options : ComponentOptionsType<P>) {\n\n    if (options.props && !(typeof options.props === 'object')) {\n        throw new Error(`Expected options.props to be an object`);\n    }\n\n    const PROP_TYPE_LIST = values(PROP_TYPE);\n\n    if (options.props) {\n        for (const key of Object.keys(options.props)) {\n\n            // $FlowFixMe\n            const prop = options.props[key];\n\n            if (!prop || !(typeof prop === 'object')) {\n                throw new Error(`Expected options.props.${ key } to be an object`);\n            }\n\n            if (!prop.type) {\n                throw new Error(`Expected prop.type`);\n            }\n\n            if (PROP_TYPE_LIST.indexOf(prop.type) === -1) {\n                throw new Error(`Expected prop.type to be one of ${ PROP_TYPE_LIST.join(', ') }`);\n            }\n\n            if (prop.required && prop.default) {\n                throw new Error(`Required prop can not have a default value`);\n            }\n\n            if (prop.type === PROP_TYPE.FUNCTION && prop.queryParam && !prop.queryValue) {\n                throw new Error(`Do not pass queryParam for function prop`);\n            }\n        }\n    }\n}\n\n// eslint-disable-next-line complexity\nexport function validate<P>(options : ?ComponentOptionsType<P>) { // eslint-ignore-line\n\n    if (!options) {\n        throw new Error(`Expected options to be passed`);\n    }\n\n    // eslint-disable-next-line security/detect-unsafe-regex, unicorn/no-unsafe-regex\n    if (!options.tag || !options.tag.match(/^([a-z0-9]+-)+[a-z0-9]+$/)) {\n        throw new Error(`Invalid options.tag: ${ options.tag }`);\n    }\n\n    validatePropDefinitions(options);\n\n    if (options.dimensions) {\n        if (options.dimensions && !isPx(options.dimensions.width) && !isPerc(options.dimensions.width)) {\n            throw new Error(`Expected options.dimensions.width to be a px or % string value`);\n        }\n\n        if (options.dimensions && !isPx(options.dimensions.height) && !isPerc(options.dimensions.height)) {\n            throw new Error(`Expected options.dimensions.height to be a px or % string value`);\n        }\n    }\n\n    if (options.defaultContext) {\n        if (options.defaultContext !== CONTEXT.IFRAME && options.defaultContext !== CONTEXT.POPUP) {\n            throw new Error(`Unsupported context type: ${ options.defaultContext || 'unknown' }`);\n        }\n    }\n\n    if (!options.url) {\n        throw new Error(`Must pass url`);\n    }\n\n    if (typeof options.url !== 'string' && typeof options.url !== 'function') {\n        throw new TypeError(`Expected url to be string or function`);\n    }\n\n    if (options.prerenderTemplate && typeof options.prerenderTemplate !== 'function') {\n        throw new Error(`Expected options.prerenderTemplate to be a function`);\n    }\n\n    if ((options.containerTemplate || !__ZOID__.__DEFAULT_CONTAINER__) && typeof options.containerTemplate !== 'function') {\n        throw new Error(`Expected options.containerTemplate to be a function`);\n    }\n}\n","/* @flow */\n\nexport { PopupOpenError } from 'belter/src';\nexport { create, destroyAll, Component } from './component';\nexport type { ZoidComponent, ZoidComponentInstance } from './component';\nexport type { RenderOptionsType } from './parent';\nexport { PROP_TYPE, PROP_SERIALIZATION, CONTEXT, EVENT } from './constants';\n"],"sourceRoot":""}