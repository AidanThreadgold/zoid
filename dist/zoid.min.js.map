{"version":3,"sources":["webpack://zoid/webpack/universalModuleDefinition","webpack://zoid/webpack/bootstrap","webpack://zoid/./node_modules/@babel/runtime/helpers/esm/extends.js","webpack://zoid/./node_modules/zalgo-promise/src/utils.js","webpack://zoid/./node_modules/zalgo-promise/src/exceptions.js","webpack://zoid/./node_modules/zalgo-promise/src/flush.js","webpack://zoid/./node_modules/zalgo-promise/src/promise.js","webpack://zoid/./node_modules/cross-domain-utils/src/util.js","webpack://zoid/./node_modules/cross-domain-utils/src/constants.js","webpack://zoid/./node_modules/cross-domain-utils/src/utils.js","webpack://zoid/./node_modules/cross-domain-safe-weakmap/src/util.js","webpack://zoid/./node_modules/cross-domain-safe-weakmap/src/weakmap.js","webpack://zoid/./node_modules/belter/src/util.js","webpack://zoid/./node_modules/belter/src/dom.js","webpack://zoid/./node_modules/cross-domain-safe-weakmap/src/native.js","webpack://zoid/./node_modules/belter/src/css.js","webpack://zoid/./node_modules/post-robot/src/conf/config.js","webpack://zoid/./node_modules/post-robot/src/conf/constants.js","webpack://zoid/./node_modules/post-robot/src/global.js","webpack://zoid/./node_modules/post-robot/src/lib/hello.js","webpack://zoid/./node_modules/post-robot/src/lib/windows.js","webpack://zoid/./node_modules/universal-serialize/src/constants.js","webpack://zoid/./node_modules/universal-serialize/src/common.js","webpack://zoid/./node_modules/universal-serialize/src/serialize.js","webpack://zoid/./node_modules/universal-serialize/src/serializers/function.js","webpack://zoid/./node_modules/universal-serialize/src/serializers/error.js","webpack://zoid/./node_modules/universal-serialize/src/serializers/promise.js","webpack://zoid/./node_modules/universal-serialize/src/serializers/regex.js","webpack://zoid/./node_modules/universal-serialize/src/serializers/date.js","webpack://zoid/./node_modules/universal-serialize/src/serializers/array.js","webpack://zoid/./node_modules/universal-serialize/src/serializers/object.js","webpack://zoid/./node_modules/universal-serialize/src/serializers/string.js","webpack://zoid/./node_modules/universal-serialize/src/serializers/number.js","webpack://zoid/./node_modules/universal-serialize/src/serializers/boolean.js","webpack://zoid/./node_modules/universal-serialize/src/serializers/null.js","webpack://zoid/./node_modules/universal-serialize/src/deserialize.js","webpack://zoid/./node_modules/post-robot/src/bridge/common.js","webpack://zoid/./node_modules/post-robot/src/bridge/parent.js","webpack://zoid/./node_modules/post-robot/src/bridge/setup.js","webpack://zoid/./node_modules/post-robot/src/bridge/bridge.js","webpack://zoid/./node_modules/post-robot/src/bridge/child.js","webpack://zoid/./node_modules/post-robot/src/serialize/window.js","webpack://zoid/./node_modules/post-robot/src/serialize/function.js","webpack://zoid/./node_modules/post-robot/src/serialize/serialize.js","webpack://zoid/./node_modules/post-robot/src/serialize/promise.js","webpack://zoid/./node_modules/post-robot/src/drivers/send/strategies.js","webpack://zoid/./node_modules/post-robot/src/drivers/send/index.js","webpack://zoid/./node_modules/post-robot/src/lib/compat.js","webpack://zoid/./node_modules/post-robot/src/drivers/listeners.js","webpack://zoid/./node_modules/post-robot/src/drivers/receive/types.js","webpack://zoid/./node_modules/post-robot/src/drivers/receive/index.js","webpack://zoid/./node_modules/post-robot/src/public/on.js","webpack://zoid/./node_modules/post-robot/src/public/send.js","webpack://zoid/./node_modules/post-robot/src/index.js","webpack://zoid/./node_modules/post-robot/src/setup.js","webpack://zoid/./node_modules/post-robot/src/clean.js","webpack://zoid/./src/lib/global.js","webpack://zoid/./src/lib/serialize.js","webpack://zoid/./src/constants.js","webpack://zoid/./src/child/props.js","webpack://zoid/./src/child/window.js","webpack://zoid/./src/child/index.js","webpack://zoid/./src/parent/drivers.js","webpack://zoid/./src/parent/props.js","webpack://zoid/./src/parent/index.js","webpack://zoid/./src/delegate/index.js","webpack://zoid/./src/component/templates/container.js","webpack://zoid/./src/component/templates/component.js","webpack://zoid/./src/component/props.js","webpack://zoid/./src/component/component.js","webpack://zoid/./src/component/validate.js","webpack://zoid/./src/index.js"],"names":["root","factory","exports","module","define","amd","self","this","installedModules","__webpack_require__","moduleId","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","hasOwnProperty","p","s","_extends","assign","target","arguments","length","source","apply","isPromise","item","Promise","window","Window","constructor","toString","then","err","flushPromise","dispatchedErrors","possiblyUnhandledPromiseHandlers","activeCount","flushActive","promise","resolve","startActive","endActive","ZalgoPromise","handler","resolved","rejected","errorHandled","error","handlers","dispatching","stack","result","isAsync","res","reject","Error","dispatch","setTimeout","indexOf","push","j","dispatchPossiblyUnhandledError","asyncReject","onSuccess","onError","catch","undefined","finally","onFinally","try","timeout","time","clearTimeout","toPromise","TypeError","all","promises","count","results","prom","hash","keys","map","items","method","onPossiblyUnhandledException","cancel","splice","context","args","delay","flush","isRegex","PROTOCOL","MOCK","FILE","ABOUT","WILDCARD","WINDOW_TYPE","IFRAME","POPUP","IE_WIN_ACCESS_ERROR","isAboutProtocol","win","location","protocol","getParent","parent","getOpener","opener","canReadFromWindow","getActualDomain","host","getDomain","domain","mockDomain","isSameDomain","desc","getOwnPropertyDescriptor","isActuallySameDomain","assertSameDomain","isAncestorParent","child","childParent","getParents","getFrames","frames","len","frame","getAllChildFrames","getTop","top","getAllFramesInWindow","iframeWindows","iframeFrames","isWindowClosed","allowMock","closed","message","mockclosed","iframeIndex","collection","safeIndexOf","contentWindow","parentNode","doc","ownerDocument","documentElement","contains","isFrameWindowClosed","getUserAgent","navigator","mockUserAgent","userAgent","getFrameByName","winFrames","childFrame","isOpener","getAncestor","anyMatch","collection1","collection2","item1","getDistanceFromTop","distance","isSameTopWindow","win1","win2","top1","top2","allFrames1","allFrames2","opener1","opener2","matchDomain","pattern","origin","Array","isArray","Boolean","match","JSON","stringify","some","subpattern","getDomainFromUrl","url","split","slice","join","onCloseWindow","callback","maxtime","Infinity","check","isWindow","obj","__cross_domain_utils_window_check__","normalizeMockUrl","closeWindow","close","objectIDs","awaitFrameLoadPromises","CrossDomainSafeWeakMap","weakmap","values","Math","random","WeakMap","freeze","testWeakMap","testKey","set","hasNativeWeakMap","_cleanupClosedWindows","delete","isSafeToReadWrite","entry","writable","index","has","getOrSet","base64encode","str","btoa","encodeURIComponent","replace","p1","String","fromCharCode","parseInt","Buffer","from","uniqueID","chars","charAt","floor","Date","toISOString","toLowerCase","serializeArgs","subkey","val","uid","getObjectID","memoizePromise","cache","memoizedPromiseFunction","reset","inlineMemoize","logic","__inline_memoize_cache__","noop","once","called","stringifyError","level","newErr","extend","safeInterval","loop","arrayFrom","isDefined","cleanup","tasks","cleaned","register","task","pop","assertExists","thing","isDocumentReady","document","body","readyState","urlEncode","waitForDocumentReady","interval","setInterval","clearInterval","parseQuery","queryString","params","pair","decodeURIComponent","extendQuery","originalQuery","props","filter","appendChild","container","isElement","element","Element","nodeType","style","getElementSafe","id","querySelector","elementReady","el","PopupOpenError","awaitFrameLoad","addEventListener","cleanIframes","linkFrameWindow","awaitFrameWindow","loadedFrame","iframe","options","tag","styleText","createElement","class","className","setAttribute","attributes","styleSheet","cssText","createTextNode","html","innerHTML","allowTransparency","backgroundColor","border","isIE","hasAttribute","getElement","event","removeEventListener","destroyElement","removeChild","isElementClosed","onResize","width","height","currentWidth","offsetWidth","currentHeight","offsetHeight","observer","newWidth","newHeight","ResizeObserver","observe","MutationObserver","childList","subtree","characterData","disconnect","isPerc","test","isPx","toNum","toPx","toCSS","normalizeDimension","dim","max","num","perc","percOf","prototype","MESSAGE_NAME","METHOD","HELLO","OPEN_TUNNEL","BRIDGE_NAME_PREFIX","SERIALIZATION_TYPE","CROSS_DOMAIN_ZALGO_PROMISE","CROSS_DOMAIN_FUNCTION","CROSS_DOMAIN_WINDOW","getGlobal","getObj","globalStore","defStore","store","storeKey","defVal","del","WildCard","getWildcard","global","WINDOW_WILDCARD","windowStore","winStore","getStore","getInstanceID","getHelloPromise","sayHello","send","instanceID","data","getWindowInstanceID","awaitWindowHello","markWindowKnown","TYPE","FUNCTION","ERROR","PROMISE","REGEX","DATE","ARRAY","OBJECT","STRING","NUMBER","BOOLEAN","NULL","UNDEFINED","isSerializedType","__type__","determineType","serializeType","type","__val__","SERIALIZER","code","toJSON","defaultSerializers","DESERIALIZER","RegExp","defaultDeserializers","needsBridgeForBrowser","needsBridgeForWin","needsBridgeForDomain","needsBridge","getBridgeName","sanitizedDomain","isBridge","documentBodyReady","registerRemoteWindow","findRemoteWindow","remoteWinPromise","registerRemoteSendMessage","sendMessage","remoteWin","remoteDomain","fireAndForget","rejectRemoteSendMessage","linkWindow","popupWindowsByName","popupWindowsByWin","winName","details","setupBridge","windowOpen","on","receiveMessage","open","last","bridgePromise","bridge","winDetails","listenForOpenTunnel","openTunnelToParent","canary","tunnelWindows","parentWindow","cleanTunnelWindows","addTunnelWindow","tunnelWindow","setupOpenTunnelToParent","openTunnelToOpener","cleanupProxyWindows","idToProxyWindow","shouldClean","getSerializedWindow","windowName","getName","focus","isClosed","setLocation","href","setName","frameElement","ProxyWindow","serializedWindow","actualWindow","isProxyWindow","actualWindowPromise","setWindow","getType","isPopup","isIframe","getWindow","awaitWindow","matchWindow","proxyInstanceID","knownWindowInstanceID","unwrap","serialize","toProxyWindow","deserialize","realWin","proxyWindow","addMethod","methodStore","proxyWindowMethods","lookupMethod","serializeFunction","destination","meth","methodSource","listenForFunctionCalls","__id__","__name__","serializeMessage","serializers","serializer","serializePromise","deserializeMessage","deserializers","parse","deserializer","serializedPromise","deserializePromise","serializedFunction","getDeserializedFunction","opts","crossDomainFunctionWrapper","__origin__","__source__","deserializeFunction","SEND_MESSAGE_STRATEGIES","serializedMessage","strategies","errors","strategyName","dom","forEach","postMessage","messagingChild","messagingParent","sendBridgeMessage","foreignGlobal","__DOMAIN_REGEX__","getResponseListener","deleteResponseListener","isResponseListenerErrored","getRequestListener","requestListeners","winQualifier","nameListeners","domainListeners","listener","regex","RECEIVE_MESSAGE_TYPES","sendResponse","ack","response","pathname","handleError","receivedMessages","parsedMessage","parseMessage","requestListener","addRequestListener","listenersCollection","existingListener","regexListeners","regexListener","strDomain","errorHandler","responseTimeout","childTimeout","validateOptions","actualParent","isAncestor","normalizeDomain","targetDomain","logName","responseListener","addResponseListener","reqPromises","markResponseListenerErrored","totalAckTimeout","isWindowKnown","totalResTimeout","ackTimeout","resTimeout","cancelled","internalSerializeMessage","internalDeserializeMessage","cleanUpWindow","getProxyObject","openBridge","bridges","bridgeFrames","src","openBridgeFrame","linkUrl","hasBridge","destroyBridges","ZOID","POST_MESSAGE","PROP_TYPE","PROP_SERIALIZATION","DOTIFY","BASE64","CONTEXT","DEFAULT_DIMENSIONS","WIDTH","HEIGHT","EVENT","RENDER","RENDERED","DISPLAY","CLOSE","PROPS","RESIZE","normalizeChildProp","component","helpers","prop","getPropDefinition","childDecorate","parseChildWindowName","zoidcomp","encodedPayload","atob","charCodeAt","base64decode","getChildPayload","ChildComponent","parentDomain","parentComponentWindow","onPropHandlers","autoResize","childPayload","__ZOID__","version","getParentComponentWindow","checkParentDomain","initialProps","getPropsByRef","setProps","watchForClose","init","buildExports","watchForResize","getHelpers","resize","onProps","getParentDomain","allowedParentDomains","ref","getNthParent","ancestor","windows","getProps","isUpdate","existingProps","sameDomain","alias","getPropNames","normalizeChildProps","checkClose","destroy","getAutoResize","updateProps","RENDER_DRIVERS","getQueryParam","queryParam","getQueryValue","queryValue","openOnClick","openFrame","title","proxyFrame","frameWatcher","clean","openPrerenderFrame","openPrerender","proxyWin","proxyPrerenderFrame","prerenderFrame","prerenderFrameWindow","delegate","dimensions","left","outerWidth","round","screenX","screen","outerHeight","screenY","status","toolbar","menubar","resizable","scrollbars","popup","ParentComponent","driver","initPromise","handledErrors","state","setupEvents","registerActiveComponent","destroyActiveComponent","watchForUnload","triggered","eventName","handlerList","trigger","triggerOnce","onRender","onDisplay","onRendered","onClose","render","log","childDomain","getChildDomain","checkAllowRender","buildUrl","getProxyContainer","renderContainer","proxyContainer","setState","setProxyWin","prerender","proxyPrerenderWin","buildWindowName","setWindowName","loadUrl","runTimeout","containerElement","buildChildPayload","getPropsRef","getPropsForChild","propRef","getWindowRef","buildParentExports","validate","inputProps","propNames","aliases","propDef","default","decorate","required","extendProps","propsDef","builtinProps","serialization","dotify","prefix","newobj","every","dotkey","query","originalUrl","originalHash","hashString","extendUrl","getUrl","sendToChild","windowProp","propName","allowDelegate","overridesPromise","overrides","unloadWindowListener","initChild","secondClosed","prerenderTemplate","prerenderWindow","isBlankDomain","renderTemplate","tagName","children","writeElementToWindow","renderer","innerContainer","containerTemplate","bridgeUrl","getBridgeUrl","bridgeDomain","DelegateComponent","watchForSourceClose","getDelegate","getOverrides","closeSourceWindowListener","CLASS","VISIBLE","INVISIBLE","defaultContainerTemplate","div","cspNonce","classList","add","remove","defaultPrerenderTemplate","spinner","defaultNoop","decorateOnce","Component","defaultContext","driverCache","xprops","logger","PROP_TYPE_LIST","validatePropDefinitions","components","debug","info","warn","registerChild","listenDelegate","dep","isChild","canRenderTo","payload","getDefaultContainer","getDefaultContext","renderTo","instance","activeComponents","initialized","setupGlobalReceiveMessage","sourceElement","originalEvent","messageListener","initHello","destroyAll","destroyComponents","responseListeners","cancelResponseListeners"],"mappings":"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","file":"zoid.min.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"zoid\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"zoid\"] = factory();\n\telse\n\t\troot[\"zoid\"] = factory();\n})((typeof self !== 'undefined' ? self : this), function() {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 0);\n","export default function _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}","/* @flow */\n\nexport function isPromise(item : mixed) : boolean {\n    try {\n        if (!item) {\n            return false;\n        }\n\n        if (typeof Promise !== 'undefined' && item instanceof Promise) {\n            return true;\n        }\n\n        if (typeof window !== 'undefined' && window.Window && item instanceof window.Window) {\n            return false;\n        }\n\n        if (typeof window !== 'undefined' && window.constructor && item instanceof window.constructor) {\n            return false;\n        }\n\n        let toString = ({}).toString;\n\n        if (toString) {\n            let name = toString.call(item);\n\n            if (name === '[object Window]' || name === '[object global]' || name === '[object DOMWindow]') {\n                return false;\n            }\n        }\n\n        if (typeof item.then === 'function') {\n            return true;\n        }\n    } catch (err) {\n        return false;\n    }\n\n    return false;\n}\n","/* @flow */\n\nimport type { ZalgoPromise } from './promise';\n\nconst dispatchedErrors = [];\nconst possiblyUnhandledPromiseHandlers : Array<(mixed, promise? : ZalgoPromise<mixed>) => void> = [];\n\nexport function dispatchPossiblyUnhandledError<T>(err : mixed, promise : ZalgoPromise<T>) {\n\n    if (dispatchedErrors.indexOf(err) !== -1) {\n        return;\n    }\n\n    dispatchedErrors.push(err);\n\n    setTimeout(() => {\n        if (__DEBUG__) {\n            // $FlowFixMe\n            throw new Error(`${ err.stack || err.toString() }\\n\\nFrom promise:\\n\\n${ promise.stack }`);\n        }\n\n        throw err;\n    }, 1);\n\n    for (let j = 0; j < possiblyUnhandledPromiseHandlers.length; j++) {\n        // $FlowFixMe\n        possiblyUnhandledPromiseHandlers[j](err, promise);\n    }\n}\n\nexport function onPossiblyUnhandledException(handler : (mixed, promise? : ZalgoPromise<mixed>) => void) : { cancel : () => void } {\n    possiblyUnhandledPromiseHandlers.push(handler);\n\n    return {\n        cancel() {\n            possiblyUnhandledPromiseHandlers.splice(possiblyUnhandledPromiseHandlers.indexOf(handler), 1);\n        }\n    };\n}\n","/* @flow */\n\nimport type { ZalgoPromise } from './promise';\n\nlet activeCount = 0;\nlet flushPromise;\n\nfunction flushActive() {\n    if (!activeCount && flushPromise) {\n        const promise = flushPromise;\n        flushPromise = null;\n        promise.resolve();\n    }\n}\n\nexport function startActive() {\n    activeCount += 1;\n}\n\nexport function endActive() {\n    activeCount -= 1;\n    flushActive();\n}\n\nexport function awaitActive(Zalgo : Class<ZalgoPromise<*>>) : ZalgoPromise<void> { // eslint-disable-line no-undef\n    let promise = flushPromise = flushPromise || new Zalgo();\n    flushActive();\n    return promise;\n}\n","/* @flow */\n\nimport { isPromise } from './utils';\nimport { onPossiblyUnhandledException, dispatchPossiblyUnhandledError } from './exceptions';\nimport { startActive, endActive, awaitActive } from './flush';\n\nexport class ZalgoPromise<R : mixed> {\n\n    resolved : boolean\n    rejected : boolean\n    errorHandled : boolean\n    value : R\n    error : mixed\n    handlers : Array<{\n        promise : ZalgoPromise<*>,\n        onSuccess : void | (result : R) => mixed,\n        onError : void | (error : mixed) => mixed\n    }>\n    dispatching : boolean\n    stack : string\n\n    constructor(handler : ?(resolve : (result : R) => void, reject : (error : mixed) => void) => void) {\n\n        this.resolved = false;\n        this.rejected = false;\n        this.errorHandled = false;\n\n        this.handlers = [];\n\n        if (handler) {\n\n            let result;\n            let error;\n            let resolved = false;\n            let rejected = false;\n            let isAsync = false;\n\n            startActive();\n\n            try {\n                handler(res => {\n                    if (isAsync) {\n                        this.resolve(res);\n                    } else {\n                        resolved = true;\n                        result = res;\n                    }\n\n                }, err => {\n                    if (isAsync) {\n                        this.reject(err);\n                    } else {\n                        rejected = true;\n                        error = err;\n                    }\n                });\n\n            } catch (err) {\n                endActive();\n                this.reject(err);\n                return;\n            }\n\n            endActive();\n\n            isAsync = true;\n\n            if (resolved) {\n                // $FlowFixMe\n                this.resolve(result);\n            } else if (rejected) {\n                this.reject(error);\n            }\n        }\n\n        if (__DEBUG__) {\n            try {\n                throw new Error(`ZalgoPromise`);\n            } catch (err) {\n                this.stack = err.stack;\n            }\n        }\n    }\n\n    resolve(result : R) : ZalgoPromise<R> {\n        if (this.resolved || this.rejected) {\n            return this;\n        }\n\n        if (isPromise(result)) {\n            throw new Error('Can not resolve promise with another promise');\n        }\n\n        this.resolved = true;\n        this.value = result;\n        this.dispatch();\n\n        return this;\n    }\n\n    reject(error : mixed) : ZalgoPromise<R> {\n        if (this.resolved || this.rejected) {\n            return this;\n        }\n\n        if (isPromise(error)) {\n            throw new Error('Can not reject promise with another promise');\n        }\n\n        if (!error) {\n            // $FlowFixMe\n            let err = (error && typeof error.toString === 'function' ? error.toString() : Object.prototype.toString.call(error));\n            error = new Error(`Expected reject to be called with Error, got ${ err }`);\n        }\n\n        this.rejected = true;\n        this.error = error;\n\n        if (!this.errorHandled) {\n            setTimeout(() => {\n                if (!this.errorHandled) {\n                    dispatchPossiblyUnhandledError(error, this);\n                }\n            }, 1);\n        }\n\n        this.dispatch();\n\n        return this;\n    }\n\n    asyncReject(error : mixed) : ZalgoPromise<R> {\n        this.errorHandled = true;\n        this.reject(error);\n        return this;\n    }\n    \n    dispatch() {\n\n        let { dispatching, resolved, rejected, handlers } = this;\n\n        if (dispatching) {\n            return;\n        }\n\n        if (!resolved && !rejected) {\n            return;\n        }\n\n        this.dispatching = true;\n        startActive();\n\n        for (let i = 0; i < handlers.length; i++) {\n\n            let { onSuccess, onError, promise } = handlers[i];\n\n            let result;\n\n            if (resolved) {\n\n                try {\n                    result = onSuccess ? onSuccess(this.value) : this.value;\n                } catch (err) {\n                    promise.reject(err);\n                    continue;\n                }\n\n            } else if (rejected) {\n\n                if (!onError) {\n                    promise.reject(this.error);\n                    continue;\n                }\n\n                try {\n                    result = onError(this.error);\n                } catch (err) {\n                    promise.reject(err);\n                    continue;\n                }\n            }\n\n            if (result instanceof ZalgoPromise && (result.resolved || result.rejected)) {\n\n                if (result.resolved) {\n                    promise.resolve(result.value);\n                } else {\n                    promise.reject(result.error);\n                }\n\n                result.errorHandled = true;\n\n            } else if (isPromise(result)) {\n\n                if (result instanceof ZalgoPromise && (result.resolved || result.rejected)) {\n                    if (result.resolved) {\n                        promise.resolve(result.value);\n                    } else {\n                        promise.reject(result.error);\n                    }\n\n                } else {\n                    // $FlowFixMe\n                    result.then(res => {\n                        promise.resolve(res);\n                    }, err => {\n                        promise.reject(err);\n                    });\n                }\n\n            } else {\n\n                promise.resolve(result);\n            }\n        }\n\n        handlers.length = 0;\n        this.dispatching = false;\n        endActive();\n    }\n\n    then<X : mixed, Y : mixed>(onSuccess : void | (result : R) => (ZalgoPromise<X> | Y), onError : void | (error : mixed) => (ZalgoPromise<X> | Y)) : ZalgoPromise<X | Y> {\n\n        if (onSuccess && typeof onSuccess !== 'function' && !onSuccess.call) {\n            throw new Error('Promise.then expected a function for success handler');\n        }\n\n        if (onError && typeof onError !== 'function' && !onError.call) {\n            throw new Error('Promise.then expected a function for error handler');\n        }\n\n        let promise : ZalgoPromise<X | Y> = new ZalgoPromise();\n\n        this.handlers.push({\n            promise,\n            onSuccess,\n            onError\n        });\n\n        this.errorHandled = true;\n\n        this.dispatch();\n\n        return promise;\n    }\n\n    catch<X : mixed, Y : mixed>(onError : (error : mixed) => ZalgoPromise<X> | Y) : ZalgoPromise<X | Y> {\n        return this.then(undefined, onError);\n    }\n\n    finally(onFinally : () => mixed) : ZalgoPromise<R> {\n\n        if (onFinally && typeof onFinally !== 'function' && !onFinally.call) {\n            throw new Error('Promise.finally expected a function');\n        }\n\n        return this.then((result) => {\n            return ZalgoPromise.try(onFinally)\n                .then(() => {\n                    return result;\n                });\n        }, (err) => {\n            return ZalgoPromise.try(onFinally)\n                .then(() => {\n                    throw err;\n                });\n        });\n    }\n\n    timeout(time : number, err : ?Error) : ZalgoPromise<R> {\n\n        if (this.resolved || this.rejected) {\n            return this;\n        }\n\n        let timeout = setTimeout(() => {\n\n            if (this.resolved || this.rejected) {\n                return;\n            }\n\n            this.reject(err || new Error(`Promise timed out after ${ time }ms`));\n\n        }, time);\n\n        return this.then(result => {\n            clearTimeout(timeout);\n            return result;\n        });\n    }\n\n    // $FlowFixMe\n    toPromise() : Promise<R> {\n        // $FlowFixMe\n        if (typeof Promise === 'undefined') {\n            throw new TypeError(`Could not find Promise`);\n        }\n        // $FlowFixMe\n        return Promise.resolve(this); // eslint-disable-line compat/compat\n    }\n\n    static resolve<X : mixed>(value : X | ZalgoPromise<X>) : ZalgoPromise<X> {\n\n        if (value instanceof ZalgoPromise) {\n            return value;\n        }\n\n        if (isPromise(value)) {\n            // $FlowFixMe\n            return new ZalgoPromise((resolve, reject) => value.then(resolve, reject));\n        }\n\n        return new ZalgoPromise().resolve(value);\n    }\n\n    static reject(error : mixed) : ZalgoPromise<R> {\n        return new ZalgoPromise().reject(error);\n    }\n\n    static asyncReject(error : mixed) : ZalgoPromise<R> {\n        return new ZalgoPromise().asyncReject(error);\n    }\n\n    static all<X : Array<mixed>>(promises : X) : ZalgoPromise<$TupleMap<X, <Y>(ZalgoPromise<Y> | Y) => Y>> { // eslint-disable-line no-undef\n\n        let promise = new ZalgoPromise();\n        let count = promises.length;\n        let results = [];\n\n        if (!count) {\n            promise.resolve(results);\n            return promise;\n        }\n\n        for (let i = 0; i < promises.length; i++) {\n            let prom = promises[i];\n\n            if (prom instanceof ZalgoPromise) {\n                if (prom.resolved) {\n                    results[i] = prom.value;\n                    count -= 1;\n                    continue;\n                }\n            } else if (!isPromise(prom)) {\n                results[i] = prom;\n                count -= 1;\n                continue;\n            }\n\n            ZalgoPromise.resolve(prom).then(result => {\n                results[i] = result;\n                count -= 1;\n                if (count === 0) {\n                    promise.resolve(results);\n                }\n            }, err => {\n                promise.reject(err);\n            });\n        }\n\n        if (count === 0) {\n            promise.resolve(results);\n        }\n\n        return promise;\n    }\n\n    static hash<O : Object>(promises : O) : ZalgoPromise<$ObjMap<O, <Y>(ZalgoPromise<Y> | Y) => Y>> { // eslint-disable-line no-undef\n        let result = {};\n        \n        return ZalgoPromise.all(Object.keys(promises).map(key => {\n            return ZalgoPromise.resolve(promises[key]).then(value => {\n                result[key] = value;\n            });\n        })).then(() => {\n            return result;\n        });\n    }\n\n    static map<T, X>(items : Array<T>, method : (T) => (ZalgoPromise<X> | X)) : ZalgoPromise<Array<X>> {\n        // $FlowFixMe\n        return ZalgoPromise.all(items.map(method));\n    }\n\n    static onPossiblyUnhandledException(handler : (err : mixed) => void) : { cancel : () => void } {\n        return onPossiblyUnhandledException(handler);\n    }\n\n    static try<X : mixed, Y : mixed, C : mixed, A : Array<mixed>>(method : (...args : A) => (ZalgoPromise<X> | Y), context : ?C, args : ?A) : ZalgoPromise<X | Y> {\n\n        if (method && typeof method !== 'function' && !method.call) {\n            throw new Error('Promise.try expected a function');\n        }\n\n        let result;\n\n        startActive();\n        \n        try {\n            // $FlowFixMe\n            result = method.apply(context, args || []);\n        } catch (err) {\n            endActive();\n            return ZalgoPromise.reject(err);\n        }\n\n        endActive();\n\n        return ZalgoPromise.resolve(result);\n    }\n\n    static delay(delay : number) : ZalgoPromise<void> {\n        return new ZalgoPromise(resolve => {\n            setTimeout(resolve, delay);\n        });\n    }\n\n    static isPromise(value : mixed) : boolean {\n\n        if (value && value instanceof ZalgoPromise) {\n            return true;\n        }\n\n        return isPromise(value);\n    }\n\n    static flush() : ZalgoPromise<void> {\n        return awaitActive(ZalgoPromise);\n    }\n}\n","/* @flow */\n\nexport function isRegex(item : mixed) : boolean {\n    return Object.prototype.toString.call(item) === '[object RegExp]';\n}\n\n// eslint-disable-next-line no-unused-vars\nexport function noop(...args : Array<mixed>) {\n    // pass\n}\n","/* @flow */\n\nexport const PROTOCOL = {\n    MOCK:  ('mock:' : 'mock:'),\n    FILE:  ('file:' : 'file:'),\n    ABOUT: ('about:' : 'about:')\n};\n\nexport const WILDCARD = '*';\n\nexport const WINDOW_TYPE = {\n    IFRAME: ('iframe' : 'iframe'),\n    POPUP:  ('popup' : 'popup')\n};\n","/* @flow */\n/* eslint max-lines: 0 */\n\nimport { isRegex, noop } from './util';\nimport type { CrossDomainWindowType, SameDomainWindowType, DomainMatcher } from './types';\nimport { PROTOCOL, WILDCARD } from './constants';\n\nlet IE_WIN_ACCESS_ERROR = 'Call was rejected by callee.\\r\\n';\n\nexport function isFileProtocol(win : SameDomainWindowType = window) : boolean {\n    return win.location.protocol === PROTOCOL.FILE;\n}\n\nexport function isAboutProtocol(win : SameDomainWindowType = window) : boolean {\n    return win.location.protocol === PROTOCOL.ABOUT;\n}\n\nexport function getParent(win? : CrossDomainWindowType = window) : ?CrossDomainWindowType {\n\n    if (!win) {\n        return;\n    }\n\n    try {\n        if (win.parent && win.parent !== win) {\n            return win.parent;\n        }\n    } catch (err) {\n        // pass\n    }\n}\n\nexport function getOpener(win? : CrossDomainWindowType = window) : ?CrossDomainWindowType {\n\n    if (!win) {\n        return;\n    }\n\n    // Make sure we're not actually an iframe which has had window.open() called on us\n    if (getParent(win)) {\n        return;\n    }\n\n    try {\n        return win.opener;\n    } catch (err) {\n        // pass\n    }\n}\n\nexport function canReadFromWindow(win : CrossDomainWindowType | SameDomainWindowType) : boolean {\n    try {\n        // $FlowFixMe\n        noop(win && win.location && win.location.href);\n        return true;\n    } catch (err) {\n        // pass\n    }\n\n    return false;\n}\n\nexport function getActualDomain(win : ?SameDomainWindowType) : string {\n\n    win = win || window;\n\n    let location = win.location;\n\n    if (!location) {\n        throw new Error(`Can not read window location`);\n    }\n\n    let protocol = location.protocol;\n\n    if (!protocol) {\n        throw new Error(`Can not read window protocol`);\n    }\n\n    if (protocol === PROTOCOL.FILE) {\n        return `${ PROTOCOL.FILE }//`;\n    }\n\n    if (protocol === PROTOCOL.ABOUT) {\n\n        let parent = getParent(win);\n        if (parent && canReadFromWindow(parent)) {\n            // $FlowFixMe\n            return getActualDomain(parent);\n        }\n\n        return `${ PROTOCOL.ABOUT }//`;\n    }\n\n    let host = location.host;\n\n    if (!host) {\n        throw new Error(`Can not read window host`);\n    }\n\n    return `${ protocol }//${ host }`;\n}\n\nexport function getDomain(win : ?SameDomainWindowType) : string {\n\n    win = win || window;\n\n    let domain = getActualDomain(win);\n\n    if (domain && win.mockDomain && win.mockDomain.indexOf(PROTOCOL.MOCK) === 0) {\n        return win.mockDomain;\n    }\n\n    return domain;\n}\n\nexport function isBlankDomain(win : CrossDomainWindowType) : boolean {\n    try {\n        // $FlowFixMe\n        if (!win.location.href) {\n            return true;\n        }\n\n        if (win.location.href === 'about:blank') {\n            return true;\n        }\n    } catch (err) {\n        // pass\n    }\n\n    return false;\n}\n\nexport function isActuallySameDomain(win : CrossDomainWindowType) : boolean {\n\n    try {\n        if (win === window) {\n            return true;\n        }\n\n    } catch (err) {\n        // pass\n    }\n\n    try {\n        let desc = Object.getOwnPropertyDescriptor(win, 'location');\n\n        if (desc && desc.enumerable === false) {\n            return false;\n        }\n\n    } catch (err) {\n        // pass\n    }\n\n    try {\n        // $FlowFixMe\n        if (isAboutProtocol(win) && canReadFromWindow(win)) {\n            return true;\n        }\n    } catch (err) {\n        // pass\n    }\n\n    try {\n        // $FlowFixMe\n        if (getActualDomain(win) === getActualDomain(window)) {\n            return true;\n        }\n\n    } catch (err) {\n        // pass\n    }\n\n    return false;\n}\n\nexport function isSameDomain(win : CrossDomainWindowType | SameDomainWindowType) : boolean {\n\n    if (!isActuallySameDomain(win)) {\n        return false;\n    }\n\n    try {\n\n        if (win === window) {\n            return true;\n        }\n\n        // $FlowFixMe\n        if (isAboutProtocol(win) && canReadFromWindow(win)) {\n            return true;\n        }\n\n        // $FlowFixMe\n        if (getDomain(window) === getDomain(win)) {\n            return true;\n        }\n\n    } catch (err) {\n        // pass\n    }\n\n    return false;\n}\n\n\nexport function assertSameDomain(win : CrossDomainWindowType | SameDomainWindowType) : SameDomainWindowType {\n    if (!isSameDomain(win)) {\n        throw new Error(`Expected window to be same domain`);\n    }\n\n    // $FlowFixMe\n    return win;\n}\n\nexport function getParents(win : CrossDomainWindowType) : Array<CrossDomainWindowType> {\n\n    let result = [];\n\n    try {\n\n        while (win.parent !== win) {\n            result.push(win.parent);\n            win = win.parent;\n        }\n\n    } catch (err) {\n        // pass\n    }\n\n    return result;\n}\n\nexport function isAncestorParent(parent : CrossDomainWindowType, child : CrossDomainWindowType) : boolean {\n\n    if (!parent || !child) {\n        return false;\n    }\n\n    let childParent = getParent(child);\n\n    if (childParent) {\n        return childParent === parent;\n    }\n\n    if (getParents(child).indexOf(parent) !== -1) {\n        return true;\n    }\n\n    return false;\n}\n\nexport function getFrames(win : CrossDomainWindowType) : Array<CrossDomainWindowType> {\n\n    let result = [];\n\n    let frames;\n\n    try {\n        frames = win.frames;\n    } catch (err) {\n        frames = win;\n    }\n\n    let len;\n\n    try {\n        len = frames.length;\n    } catch (err) {\n        // pass\n    }\n\n    if (len === 0) {\n        return result;\n    }\n\n    if (len) {\n        for (let i = 0; i < len; i++) {\n\n            let frame;\n\n            try {\n                frame = frames[i];\n            } catch (err) {\n                continue;\n            }\n\n            result.push(frame);\n        }\n\n        return result;\n    }\n\n    for (let i = 0; i < 100; i++) {\n        let frame;\n\n        try {\n            frame = frames[i];\n        } catch (err) {\n            return result;\n        }\n\n        if (!frame) {\n            return result;\n        }\n\n        result.push(frame);\n    }\n\n    return result;\n}\n\n\nexport function getAllChildFrames(win : CrossDomainWindowType) : Array<CrossDomainWindowType> {\n\n    let result = [];\n\n    for (let frame of getFrames(win)) {\n        result.push(frame);\n\n        for (let childFrame of getAllChildFrames(frame)) {\n            result.push(childFrame);\n        }\n    }\n\n    return result;\n}\n\nexport function getTop(win : CrossDomainWindowType) : ?CrossDomainWindowType {\n\n    if (!win) {\n        return;\n    }\n\n    try {\n        if (win.top) {\n            return win.top;\n        }\n    } catch (err) {\n        // pass\n    }\n\n    if (getParent(win) === win) {\n        return win;\n    }\n\n    try {\n        if (isAncestorParent(window, win) && window.top) {\n            return window.top;\n        }\n    } catch (err) {\n        // pass\n    }\n\n    try {\n        if (isAncestorParent(win, window) && window.top) {\n            return window.top;\n        }\n    } catch (err) {\n        // pass\n    }\n\n    for (let frame of getAllChildFrames(win)) {\n        try {\n            if (frame.top) {\n                return frame.top;\n            }\n        } catch (err) {\n            // pass\n        }\n\n        if (getParent(frame) === frame) {\n            return frame;\n        }\n    }\n}\n\nexport function getNextOpener(win? : CrossDomainWindowType = window) : ?CrossDomainWindowType {\n    return getOpener(getTop(win) || win);\n}\n\nexport function getUltimateTop(win? : CrossDomainWindowType = window) : CrossDomainWindowType {\n    let opener = getNextOpener(win);\n\n    if (opener) {\n        return getUltimateTop(opener);\n    }\n\n    return top;\n}\n\nexport function getAllFramesInWindow(win : CrossDomainWindowType) : Array<CrossDomainWindowType> {\n    let top = getTop(win);\n\n    if (!top) {\n        throw new Error(`Can not determine top window`);\n    }\n\n    return [ ...getAllChildFrames(top), top ];\n}\n\nexport function getAllWindows(win? : CrossDomainWindowType = window) : $ReadOnlyArray<CrossDomainWindowType> {\n    let frames = getAllFramesInWindow(win);\n    let opener = getNextOpener(win);\n\n    if (opener) {\n        return [ ...getAllWindows(opener), ...frames ];\n    } else {\n        return frames;\n    }\n}\n\nexport function isTop(win : CrossDomainWindowType) : boolean {\n    return win === getTop(win);\n}\n\nexport function isFrameWindowClosed(frame : HTMLIFrameElement) : boolean {\n\n    if (!frame.contentWindow) {\n        return true;\n    }\n\n    if (!frame.parentNode) {\n        return true;\n    }\n\n    let doc = frame.ownerDocument;\n\n    if (doc && doc.documentElement && !doc.documentElement.contains(frame)) {\n        return true;\n    }\n\n    return false;\n}\n\nfunction safeIndexOf<T>(collection : Array<T>, item : T) : number {\n    for (let i = 0; i < collection.length; i++) {\n\n        try {\n            if (collection[i] === item) {\n                return i;\n            }\n        } catch (err) {\n            // pass\n        }\n    }\n\n    return -1;\n}\n\nlet iframeWindows = [];\nlet iframeFrames = [];\n\nexport function isWindowClosed(win : CrossDomainWindowType, allowMock : boolean = true) : boolean {\n\n    try {\n        if (win === window) {\n            return false;\n        }\n    } catch (err) {\n        return true;\n    }\n\n    try {\n        if (!win) {\n            return true;\n        }\n\n    } catch (err) {\n        return true;\n    }\n\n    try {\n        if (win.closed) {\n            return true;\n        }\n\n    } catch (err) {\n\n        // I love you so much IE\n\n        if (err && err.message === IE_WIN_ACCESS_ERROR) {\n            return false;\n        }\n\n        return true;\n    }\n\n\n    if (allowMock && isSameDomain(win)) {\n        try {\n            // $FlowFixMe\n            if (win.mockclosed) {\n                return true;\n            }\n        } catch (err) {\n            // pass\n        }\n    }\n\n    // Mobile safari\n\n    try {\n        if (!win.parent || !win.top) {\n            return true;\n        }\n    } catch (err) {\n        // pass\n    }\n\n    // Yes, this actually happens in IE. win === win errors out when the window\n    // is from an iframe, and the iframe was removed from the page.\n\n    try {\n        noop(win === win); // eslint-disable-line no-self-compare\n    } catch (err) {\n        return true;\n    }\n\n    // IE orphaned frame\n\n    let iframeIndex = safeIndexOf(iframeWindows, win);\n\n    if (iframeIndex !== -1) {\n        let frame = iframeFrames[iframeIndex];\n\n        if (frame && isFrameWindowClosed(frame)) {\n            return true;\n        }\n    }\n\n    return false;\n}\n\nfunction cleanIframes() {\n    for (let i = 0; i < iframeWindows.length; i++) {\n        let closed = false;\n\n        try {\n            closed = iframeWindows[i].closed;\n        } catch (err) {\n            // pass\n        }\n\n        if (closed) {\n            iframeFrames.splice(i, 1);\n            iframeWindows.splice(i, 1);\n        }\n    }\n}\n\nexport function linkFrameWindow(frame : HTMLIFrameElement) {\n\n    cleanIframes();\n\n    if (frame && frame.contentWindow) {\n        try {\n            iframeWindows.push(frame.contentWindow);\n            iframeFrames.push(frame);\n        } catch (err) {\n            // pass\n        }\n    }\n}\n\nexport function getUserAgent(win : ?SameDomainWindowType) : string {\n    win = win || window;\n    return win.navigator.mockUserAgent || win.navigator.userAgent;\n}\n\n\nexport function getFrameByName(win : CrossDomainWindowType, name : string) : ?CrossDomainWindowType {\n\n    let winFrames = getFrames(win);\n\n    for (let childFrame of winFrames) {\n        try {\n            // $FlowFixMe\n            if (isSameDomain(childFrame) && childFrame.name === name && winFrames.indexOf(childFrame) !== -1) {\n                return childFrame;\n            }\n        } catch (err) {\n            // pass\n        }\n    }\n\n    try {\n        // $FlowFixMe\n        if (winFrames.indexOf(win.frames[name]) !== -1) {\n            // $FlowFixMe\n            return win.frames[name];\n        }\n    } catch (err) {\n        // pass\n    }\n\n    try {\n        if (winFrames.indexOf(win[name]) !== -1) {\n            return win[name];\n        }\n    } catch (err) {\n        // pass\n    }\n}\n\nexport function findChildFrameByName(win : CrossDomainWindowType, name : string) : ?CrossDomainWindowType {\n\n    let frame = getFrameByName(win, name);\n\n    if (frame) {\n        return frame;\n    }\n\n    for (let childFrame of getFrames(win)) {\n        let namedFrame = findChildFrameByName(childFrame, name);\n\n        if (namedFrame) {\n            return namedFrame;\n        }\n    }\n}\n\nexport function findFrameByName(win : CrossDomainWindowType, name : string) : ?CrossDomainWindowType {\n\n    let frame;\n\n    frame = getFrameByName(win, name);\n\n    if (frame) {\n        return frame;\n    }\n\n    let top = getTop(win) || win;\n\n    return findChildFrameByName(top, name);\n}\n\nexport function isParent(win : CrossDomainWindowType, frame : CrossDomainWindowType) : boolean {\n\n    let frameParent = getParent(frame);\n\n    if (frameParent) {\n        return frameParent === win;\n    }\n\n    for (let childFrame of getFrames(win)) {\n        if (childFrame === frame) {\n            return true;\n        }\n    }\n\n    return false;\n}\n\nexport function isOpener(parent : CrossDomainWindowType, child : CrossDomainWindowType) : boolean {\n\n    return parent === getOpener(child);\n}\n\nexport function getAncestor(win? : CrossDomainWindowType = window) : ?CrossDomainWindowType {\n    win = win || window;\n\n    let opener = getOpener(win);\n\n    if (opener) {\n        return opener;\n    }\n\n    let parent = getParent(win);\n\n    if (parent) {\n        return parent;\n    }\n}\n\nexport function getAncestors(win : CrossDomainWindowType) : Array<CrossDomainWindowType> {\n\n    let results = [];\n\n    let ancestor = win;\n\n    while (ancestor) {\n        ancestor = getAncestor(ancestor);\n        if (ancestor) {\n            results.push(ancestor);\n        }\n    }\n\n    return results;\n}\n\n\nexport function isAncestor(parent : CrossDomainWindowType, child : CrossDomainWindowType) : boolean {\n\n    let actualParent = getAncestor(child);\n\n    if (actualParent) {\n        if (actualParent === parent) {\n            return true;\n        }\n\n        return false;\n    }\n\n    if (child === parent) {\n        return false;\n    }\n\n    if (getTop(child) === child) {\n        return false;\n    }\n\n    for (let frame of getFrames(parent)) {\n        if (frame === child) {\n            return true;\n        }\n    }\n\n    return false;\n}\n\nexport function isPopup() : boolean {\n    return Boolean(getOpener(window));\n}\n\nexport function isIframe() : boolean {\n    return Boolean(getParent(window));\n}\n\nexport function isFullpage() : boolean {\n    return Boolean(!isIframe() && !isPopup());\n}\n\nfunction anyMatch(collection1, collection2) : boolean {\n\n    for (let item1 of collection1) {\n        for (let item2 of collection2) {\n            if (item1 === item2) {\n                return true;\n            }\n        }\n    }\n\n    return false;\n}\n\nexport function getDistanceFromTop(win : CrossDomainWindowType = window) : number {\n    let distance = 0;\n    let parent = win;\n\n    while (parent) {\n        parent = getParent(parent);\n        if (parent) {\n            distance += 1;\n        }\n    }\n\n    return distance;\n}\n\nexport function getNthParent(win : CrossDomainWindowType, n : number = 1) : ?CrossDomainWindowType {\n    let parent = win;\n\n    for (let i = 0; i < n; i++) {\n        if (!parent) {\n            return;\n        }\n\n        parent = getParent(parent);\n    }\n\n    return parent;\n}\n\nexport function getNthParentFromTop(win : CrossDomainWindowType, n : number = 1) : ?CrossDomainWindowType {\n    return getNthParent(win, getDistanceFromTop(win) - n);\n}\n\nexport function isSameTopWindow(win1 : CrossDomainWindowType, win2 : CrossDomainWindowType) : boolean {\n\n    let top1 = getTop(win1) || win1;\n    let top2 = getTop(win2) || win2;\n\n    try {\n        if (top1 && top2) {\n            if (top1 === top2) {\n                return true;\n            }\n\n            return false;\n        }\n    } catch (err) {\n        // pass\n    }\n\n    let allFrames1 = getAllFramesInWindow(win1);\n    let allFrames2 = getAllFramesInWindow(win2);\n\n    if (anyMatch(allFrames1, allFrames2)) {\n        return true;\n    }\n\n    let opener1 = getOpener(top1);\n    let opener2 = getOpener(top2);\n\n    if (opener1 && anyMatch(getAllFramesInWindow(opener1), allFrames2)) {\n        return false;\n    }\n\n    if (opener2 && anyMatch(getAllFramesInWindow(opener2), allFrames1)) {\n        return false;\n    }\n\n    return false;\n}\n\nexport function matchDomain(pattern : DomainMatcher, origin : DomainMatcher) : boolean {\n\n    if (typeof pattern === 'string') {\n\n        if (typeof origin === 'string') {\n            return pattern === WILDCARD || origin === pattern;\n        }\n\n        if (isRegex(origin)) {\n            return false;\n        }\n\n        if (Array.isArray(origin)) {\n            return false;\n        }\n    }\n\n    if (isRegex(pattern)) {\n\n        if (isRegex(origin)) {\n            return pattern.toString() === origin.toString();\n        }\n\n        if (Array.isArray(origin)) {\n            return false;\n        }\n\n        // $FlowFixMe\n        return Boolean(origin.match(pattern));\n    }\n\n    if (Array.isArray(pattern)) {\n\n        if (Array.isArray(origin)) {\n            return JSON.stringify(pattern) === JSON.stringify(origin);\n        }\n\n        if (isRegex(origin)) {\n            return false;\n        }\n\n        return pattern.some(subpattern => matchDomain(subpattern, origin));\n    }\n\n    return false;\n}\n\nexport function stringifyDomainPattern(pattern : DomainMatcher) : string {\n    if (Array.isArray(pattern)) {\n        return `(${ pattern.join(' | ') })`;\n    } else if (isRegex(pattern)) {\n        return `RegExp(${ pattern.toString() }`;\n    } else {\n        return pattern.toString();\n    }\n}\n\nexport function getDomainFromUrl(url : string) : string {\n\n    let domain;\n\n    if (url.match(/^(https?|mock|file):\\/\\//)) {\n        domain = url;\n    } else {\n        return getDomain();\n    }\n\n    domain = domain.split('/').slice(0, 3).join('/');\n\n    return domain;\n}\n\nexport function onCloseWindow(win : CrossDomainWindowType, callback : Function, delay : number = 1000, maxtime : number = Infinity) : { cancel : () => void } {\n\n    let timeout;\n\n    let check = () => {\n\n        if (isWindowClosed(win)) {\n\n            if (timeout) {\n                clearTimeout(timeout);\n            }\n\n            return callback();\n        }\n\n        if (maxtime <= 0) {\n            clearTimeout(timeout);\n        } else {\n            maxtime -= delay;\n            timeout = setTimeout(check, delay);\n        }\n    };\n\n    check();\n\n    return {\n        cancel() {\n            if (timeout) {\n                clearTimeout(timeout);\n            }\n        }\n    };\n}\n\n// eslint-disable-next-line complexity\nexport function isWindow(obj : Object) : boolean {\n\n    try {\n        if (obj === window) {\n            return true;\n        }\n    } catch (err) {\n        if (err && err.message === IE_WIN_ACCESS_ERROR) {\n            return true;\n        }\n    }\n\n    try {\n        if (Object.prototype.toString.call(obj) === '[object Window]') {\n            return true;\n        }\n    } catch (err) {\n        if (err && err.message === IE_WIN_ACCESS_ERROR) {\n            return true;\n        }\n    }\n\n    try {\n        if (window.Window && obj instanceof window.Window) {\n            return true;\n        }\n    } catch (err) {\n        if (err && err.message === IE_WIN_ACCESS_ERROR) {\n            return true;\n        }\n    }\n\n    try {\n        if (obj && obj.self === obj) {\n            return true;\n        }\n    } catch (err) {\n        if (err && err.message === IE_WIN_ACCESS_ERROR) {\n            return true;\n        }\n    }\n\n    try {\n        if (obj && obj.parent === obj) {\n            return true;\n        }\n    } catch (err) {\n        if (err && err.message === IE_WIN_ACCESS_ERROR) {\n            return true;\n        }\n    }\n\n    try {\n        if (obj && obj.top === obj) {\n            return true;\n        }\n    } catch (err) {\n        if (err && err.message === IE_WIN_ACCESS_ERROR) {\n            return true;\n        }\n    }\n\n    try {\n        if (noop(obj === obj) === '__unlikely_value__') { // eslint-disable-line no-self-compare\n            return false;\n        }\n\n    } catch (err) {\n        return true;\n    }\n\n    try {\n        if (obj && obj.__cross_domain_utils_window_check__ === '__unlikely_value__') {\n            return false;\n        }\n\n    } catch (err) {\n        return true;\n    }\n\n    return false;\n}\n\nexport function isBrowser() : boolean {\n    return (typeof window !== 'undefined' && typeof window.location !== 'undefined');\n}\n\nexport function isCurrentDomain(domain : string) : boolean {\n    if (!isBrowser()) {\n        return false;\n    }\n\n    return (getDomain() === domain);\n}\n\nexport function isMockDomain(domain : string) : boolean {\n    return domain.indexOf(PROTOCOL.MOCK) === 0;\n}\n\nexport function normalizeMockUrl(url : string) : string {\n    if (!isMockDomain(getDomainFromUrl(url))) {\n        return url;\n    }\n\n    if (!__TEST__) {\n        throw new Error(`Mock urls not supported out of test mode`);\n    }\n\n    return url.replace(/^mock:\\/\\/[^/]+/, getActualDomain(window));\n}\n\nexport function closeWindow(win : CrossDomainWindowType) {\n    try {\n        win.close();\n    } catch (err) {\n        // pass\n    }\n}\n","/* @flow */\n\nexport function safeIndexOf<T>(collection : Array<T>, item : T) : number {\n    for (let i = 0; i < collection.length; i++) {\n\n        try {\n            if (collection[i] === item) {\n                return i;\n            }\n        } catch (err) {\n            // pass\n        }\n    }\n\n    return -1;\n}\n\n// eslint-disable-next-line no-unused-vars\nexport function noop(...args : Array<mixed>) {\n    // pass\n}\n","/* @flow */\n\nimport { isWindow, isWindowClosed } from 'cross-domain-utils/src';\n\nimport { hasNativeWeakMap } from './native';\nimport { noop, safeIndexOf } from './util';\n\nexport class CrossDomainSafeWeakMap<K : Object, V : mixed> {\n\n    name : string\n    weakmap : WeakMap<K, V>\n    keys : Array<K>\n    values : Array<V>\n\n    constructor() {\n        // eslint-disable-next-line no-bitwise\n        this.name = `__weakmap_${ Math.random() * 1e9 >>> 0 }__`;\n\n        if (hasNativeWeakMap()) {\n            try {\n                this.weakmap = new WeakMap();\n            } catch (err) {\n                // pass\n            }\n        }\n\n        this.keys  = [];\n        this.values = [];\n    }\n\n    _cleanupClosedWindows() {\n\n        let weakmap = this.weakmap;\n        let keys = this.keys;\n\n        for (let i = 0; i < keys.length; i++) {\n            let value = keys[i];\n\n            if (isWindow(value) && isWindowClosed(value)) {\n\n                if (weakmap) {\n                    try {\n                        weakmap.delete(value);\n                    } catch (err) {\n                        // pass\n                    }\n                }\n\n                keys.splice(i, 1);\n                this.values.splice(i, 1);\n\n                i -= 1;\n            }\n        }\n    }\n\n    isSafeToReadWrite(key : K) : boolean {\n\n        if (isWindow(key)) {\n            return false;\n        }\n\n        try {\n            noop(key && key.self);\n            noop(key && key[this.name]);\n        } catch (err) {\n            return false;\n        }\n\n        return true;\n    }\n\n    set(key : K, value : V) {\n\n        if (!key) {\n            throw new Error(`WeakMap expected key`);\n        }\n\n        let weakmap = this.weakmap;\n\n        if (weakmap) {\n            try {\n                weakmap.set(key, value);\n            } catch (err) {\n                delete this.weakmap;\n            }\n        }\n\n        if (this.isSafeToReadWrite(key)) {\n            try {\n                let name = this.name;\n                let entry = key[name];\n\n                if (entry && entry[0] === key) {\n                    entry[1] = value;\n                } else {\n                    Object.defineProperty(key, name, {\n                        value:    [ key, value ],\n                        writable: true\n                    });\n                }\n\n                return;\n\n            } catch (err) {\n                // pass\n            }\n        }\n\n        this._cleanupClosedWindows();\n\n        let keys = this.keys;\n        let values = this.values;\n        let index = safeIndexOf(keys, key);\n\n        if (index === -1) {\n            keys.push(key);\n            values.push(value);\n        } else {\n            values[index] = value;\n        }\n    }\n\n    get(key : K) : V | void {\n\n        if (!key) {\n            throw new Error(`WeakMap expected key`);\n        }\n\n        let weakmap = this.weakmap;\n\n        if (weakmap) {\n            try {\n                if (weakmap.has(key)) {\n                    return weakmap.get(key);\n                }\n                \n            } catch (err) {\n                delete this.weakmap;\n            }\n        }\n\n        if (this.isSafeToReadWrite(key)) {\n            try {\n                let entry = key[this.name];\n\n                if (entry && entry[0] === key) {\n                    return entry[1];\n                }\n\n                return;\n            } catch (err) {\n                // pass\n            }\n        }\n\n        this._cleanupClosedWindows();\n\n        let keys = this.keys;\n        let index = safeIndexOf(keys, key);\n\n        if (index === -1) {\n            return;\n        }\n\n        return this.values[index];\n    }\n\n    delete(key : K) {\n\n        if (!key) {\n            throw new Error(`WeakMap expected key`);\n        }\n\n        let weakmap = this.weakmap;\n\n        if (weakmap) {\n            try {\n                weakmap.delete(key);\n            } catch (err) {\n                delete this.weakmap;\n            }\n        }\n\n        if (this.isSafeToReadWrite(key)) {\n            try {\n                let entry = key[this.name];\n\n                if (entry && entry[0] === key) {\n                    entry[0] = entry[1] = undefined;\n                }\n            } catch (err) {\n                // pass\n            }\n        }\n\n        this._cleanupClosedWindows();\n\n        let keys = this.keys;\n        let index = safeIndexOf(keys, key);\n\n        if (index !== -1) {\n            keys.splice(index, 1);\n            this.values.splice(index, 1);\n        }\n    }\n\n    has(key : K) : boolean {\n\n        if (!key) {\n            throw new Error(`WeakMap expected key`);\n        }\n\n        let weakmap = this.weakmap;\n\n        if (weakmap) {\n            try {\n                if (weakmap.has(key)) {\n                    return true;\n                }\n            } catch (err) {\n                delete this.weakmap;\n            }\n        }\n\n        if (this.isSafeToReadWrite(key)) {\n            try {\n                let entry = key[this.name];\n\n                if (entry && entry[0] === key) {\n                    return true;\n                }\n\n                return false;\n            } catch (err) {\n                // pass\n            }\n        }\n\n        this._cleanupClosedWindows();\n\n        let index = safeIndexOf(this.keys, key);\n        return index !== -1;\n    }\n\n    getOrSet(key : K, getter : () => V) : V {\n        if (this.has(key)) {\n            // $FlowFixMe\n            return this.get(key);\n        }\n\n        let value = getter();\n        this.set(key, value);\n        return value;\n    }\n}\n","/* @flow */\n/* eslint max-lines: 0 */\n\nimport { ZalgoPromise } from 'zalgo-promise/src';\nimport { WeakMap } from 'cross-domain-safe-weakmap/src';\n\nimport type { CancelableType } from './types';\n\nexport function base64encode(str : string) : string {\n    if (typeof btoa === 'function') {\n        return btoa(encodeURIComponent(str).replace(/%([0-9A-F]{2})/g, (m, p1) => {\n            return String.fromCharCode(parseInt(p1, 16));\n        }));\n    }\n\n    if (typeof Buffer !== 'undefined') {\n        return Buffer.from(str, 'utf8').toString('base64');\n    }\n\n    throw new Error(`Can not find window.btoa or Buffer`);\n}\n\nexport function base64decode(str : string) : string {\n    if (typeof atob === 'function') {\n        return decodeURIComponent(Array.prototype.map.call(atob(str), c => {\n            // eslint-disable-next-line prefer-template\n            return '%' + ('00' + c.charCodeAt(0).toString(16)).slice(-2);\n        }).join(''));\n    }\n\n    if (typeof Buffer !== 'undefined') {\n        return Buffer.from(str, 'base64').toString('utf8');\n    }\n\n    throw new Error(`Can not find window.atob or Buffer`);\n}\n\nexport function uniqueID() : string {\n\n    let chars = '0123456789abcdef';\n\n    let randomID = 'xxxxxxxxxx'.replace(/./g, () => {\n        return chars.charAt(Math.floor(Math.random() * chars.length));\n    });\n\n    let timeID = base64encode(\n        new Date().toISOString().slice(11, 19).replace('T', '.')\n    ).replace(/[^a-zA-Z0-9]/g, '').toLowerCase();\n\n    return `${ randomID }_${ timeID }`;\n}\n\nexport function getGlobal() : Object {\n    if (typeof window !== 'undefined') {\n        return window;\n    }\n    if (typeof global !== 'undefined') {\n        return global;\n    }\n    if (typeof __GLOBAL__ !== 'undefined') {\n        return __GLOBAL__;\n    }\n    throw new Error(`No global found`);\n}\n\nlet objectIDs;\n\nexport function getObjectID(obj : Object) : string {\n\n    objectIDs = objectIDs || new WeakMap();\n\n    if (obj === null || obj === undefined || (typeof obj !== 'object' && typeof obj !== 'function')) {\n        throw new Error(`Invalid object`);\n    }\n\n    let uid = objectIDs.get(obj);\n\n    if (!uid) {\n        uid = `${ typeof obj }:${ uniqueID() }`;\n        objectIDs.set(obj, uid);\n    }\n\n    return uid;\n}\n\nfunction serializeArgs<T>(args : Array<T>) : string {\n    try {\n        return JSON.stringify(Array.prototype.slice.call(args), (subkey, val) => {\n            if (typeof val === 'function') {\n                return `memoize[${ getObjectID(val) }]`;\n            }\n            return val;\n        });\n    } catch (err) {\n        throw new Error(`Arguments not serializable -- can not be used to memoize`);\n    }\n}\nexport function memoize<A, R, F : (...args : Array<A>) => R, X : { (...args : Array<A>) : R, displayName : string, reset : () => void }>(method : F, options : { time? : number, name? : string, thisNamespace? : boolean } = {}) : X {\n    let cacheMap = new WeakMap();\n\n    // $FlowFixMe\n    let memoizedFunction : X = function memoizedFunction(...args : Array<A>) : R {\n        let cache = cacheMap.getOrSet(options.thisNamespace ? this : method, () => ({}));\n\n        let key : string = serializeArgs(args);\n\n        let cacheTime = options.time;\n        if (cache[key] && cacheTime && (Date.now() - cache[key].time) < cacheTime) {\n            delete cache[key];\n        }\n\n        if (cache[key]) {\n            return cache[key].value;\n        }\n\n        let time  = Date.now();\n        let value = method.apply(this, arguments);\n\n        cache[key] = { time, value };\n\n        return cache[key].value;\n    };\n\n    memoizedFunction.reset = () => {\n        cacheMap.delete(options.thisNamespace ? this : method);\n    };\n\n    if (options.name) {\n        memoizedFunction.displayName = `${ options.name }:memoized`;\n    }\n\n    return memoizedFunction;\n}\n\n// eslint-disable-next-line flowtype/no-weak-types\nexport function memoizePromise<R>(method : (...args : Array<any>) => ZalgoPromise<R>) : ((...args : Array<any>) => ZalgoPromise<R>) {\n    let cache = {};\n\n    // eslint-disable-next-line flowtype/no-weak-types\n    function memoizedPromiseFunction(...args : Array<any>) : ZalgoPromise<R> {\n        let key : string = serializeArgs(args);\n\n        if (cache.hasOwnProperty(key)) {\n            return cache[key];\n        }\n\n        cache[key] = ZalgoPromise.try(() => method.apply(this, arguments))\n            .finally(() => {\n                delete cache[key];\n            });\n\n        return cache[key];\n    }\n\n    memoizedPromiseFunction.reset = () => {\n        cache = {};\n    };\n\n    return memoizedPromiseFunction;\n}\n\n// eslint-disable-next-line flowtype/no-weak-types\nexport function promisify<R>(method : (...args : Array<any>) => R, options : { name? : string } = {}) : ((...args : Array<any>) => ZalgoPromise<R>) {\n    function promisifiedFunction() : ZalgoPromise<R> {\n        return ZalgoPromise.try(method, this, arguments);\n    }\n\n    if (options.name) {\n        promisifiedFunction.displayName = `${ options.name }:promisified`;\n    }\n\n    return promisifiedFunction;\n}\n\n// eslint-disable-next-line flowtype/no-weak-types\nexport function inlineMemoize<R>(method : (...args : Array<any>) => R, logic : (...args : Array<any>) => R, args : Array<any> = []) : R {\n    // $FlowFixMe\n    let cache = method.__inline_memoize_cache__ = method.__inline_memoize_cache__ || {};\n    let key = serializeArgs(args);\n\n    if (cache.hasOwnProperty(key)) {\n        return cache[key];\n    }\n    \n    let result = cache[key] = logic(...args);\n    return result;\n}\n\n// eslint-disable-next-line no-unused-vars\nexport function noop(...args : Array<mixed>) {\n    // pass\n}\n\nexport function once(method : Function) : Function {\n    let called = false;\n\n    return function onceFunction() : mixed {\n        if (!called) {\n            called = true;\n            return method.apply(this, arguments);\n        }\n    };\n}\n\nexport function hashStr(str : string) : number {\n    let hash = 0;\n    for (let i = 0; i < str.length; i++) {\n        hash += str[i].charCodeAt(0) * Math.pow((i % 10) + 1, 5);\n    }\n    return Math.floor(Math.pow(Math.sqrt(hash), 5));\n}\n\nexport function strHashStr(str : string) : string {\n    let hash = '';\n\n    for (let i = 0; i < str.length; i++) {\n        let total = (str[i].charCodeAt(0) * i);\n\n        if (str[i + 1]) {\n            total += (str[i + 1].charCodeAt(0) * (i - 1));\n        }\n\n        hash += String.fromCharCode(97 + (Math.abs(total) % 26));\n    }\n\n    return hash;\n}\n\nexport function match(str : string, pattern : RegExp) : ?string {\n    let regmatch = str.match(pattern);\n    if (regmatch) {\n        return regmatch[1];\n    }\n}\n\nexport function awaitKey<T: mixed>(obj : Object, key : string) : ZalgoPromise<T> {\n    return new ZalgoPromise(resolve => {\n\n        let value = obj[key];\n\n        if (value) {\n            return resolve(value);\n        }\n\n        delete obj[key];\n\n        Object.defineProperty(obj, key, {\n\n            configurable: true,\n\n            set(item) {\n                value = item;\n\n                if (value) {\n                    resolve(value);\n                }\n            },\n\n            get() : mixed {\n                return value;\n            }\n        });\n    });\n}\n\nexport function stringifyError(err : mixed, level : number = 1) : string {\n\n    if (level >= 3) {\n        return 'stringifyError stack overflow';\n    }\n\n    try {\n        if (!err) {\n            return `<unknown error: ${ Object.prototype.toString.call(err) }>`;\n        }\n\n        if (typeof err === 'string') {\n            return err;\n        }\n\n        if (err instanceof Error) {\n            let stack = err && err.stack;\n            let message = err && err.message;\n\n            if (stack && message) {\n                if (stack.indexOf(message) !== -1) {\n                    return stack;\n                } else {\n                    return `${ message }\\n${ stack }`;\n                }\n            } else if (stack) {\n                return stack;\n            } else if (message) {\n                return message;\n            }\n        }\n\n        if (err && err.toString && typeof err.toString === 'function') {\n            // $FlowFixMe\n            return err.toString();\n        }\n\n        return Object.prototype.toString.call(err);\n\n    } catch (newErr) { // eslint-disable-line unicorn/catch-error-name\n        return `Error while stringifying error: ${ stringifyError(newErr, level + 1) }`;\n    }\n}\n\nexport function stringifyErrorMessage(err : mixed) : string {\n\n    let defaultMessage = `<unknown error: ${ Object.prototype.toString.call(err) }>`;\n\n    if (!err) {\n        return defaultMessage;\n    }\n\n    if (err instanceof Error) {\n        return err.message || defaultMessage;\n    }\n\n    if (typeof err.message === 'string') {\n        return err.message || defaultMessage;\n    }\n\n    return defaultMessage;\n}\n\nexport function stringify(item : mixed) : string {\n    if (typeof item === 'string') {\n        return item;\n    }\n\n    if (item && item.toString && typeof item.toString === 'function') {\n        // $FlowFixMe\n        return item.toString();\n    }\n\n    return Object.prototype.toString.call(item);\n}\n\nexport function domainMatches(hostname : string, domain : string) : boolean {\n    hostname = hostname.split('://')[1];\n    let index = hostname.indexOf(domain);\n    return (index !== -1 && hostname.slice(index) === domain);\n}\n\nexport function patchMethod(obj : Object, name : string, handler : Function) {\n    let original = obj[name];\n\n    obj[name] = function patchedMethod() : mixed {\n        return handler({\n            context:      this,\n            args:         Array.prototype.slice.call(arguments),\n            original,\n            callOriginal: () => original.apply(this, arguments)\n        });\n    };\n}\n\nexport function extend<T : Object | Function>(obj : T, source : Object) : T {\n    if (!source) {\n        return obj;\n    }\n\n    if (Object.assign) {\n        return Object.assign(obj, source);\n    }\n\n    for (let key in source) {\n        if (source.hasOwnProperty(key)) {\n            obj[key] = source[key];\n        }\n    }\n\n    return obj;\n}\n\nexport function values<T>(obj : { [string] : T }) : Array<T> {\n    let result = [];\n    for (let key in obj) {\n        if (obj.hasOwnProperty(key)) {\n            result.push(obj[key]);\n        }\n    }\n    return result;\n}\n\nexport function perc(pixels : number, percentage : number) : number {\n    return Math.round((pixels * percentage) / 100);\n}\n\nexport function min(...args : Array<number>) : number {\n    return Math.min(...args);\n}\n\nexport function max(...args : Array<number>) : number {\n    return Math.max(...args);\n}\n\nexport function regexMap<T>(str : string, regexp : RegExp, handler : () => T) : Array<T> {\n    let results = [];\n\n    // $FlowFixMe\n    str.replace(regexp, function regexMapMatcher(item) {\n        results.push(handler ? handler.apply(null, arguments) : item);\n    });\n\n    // $FlowFixMe\n    return results;\n}\n\nexport function svgToBase64(svg : string) : string {\n    return `data:image/svg+xml;base64,${ base64encode(svg) }`;\n}\n\nexport function objFilter<T, R>(obj : { [string] : T }, filter? : (T, ?string) => mixed = Boolean) : { [string] : R } {\n    let result = {};\n\n    for (let key in obj) {\n        if (!obj.hasOwnProperty(key) || !filter(obj[key], key)) {\n            continue;\n        }\n\n        result[key] = obj[key];\n    }\n\n    return result;\n}\n\nexport function identity <T>(item : T) : T {\n    return item;\n}\n\nexport function regexTokenize(text : string, regexp : RegExp) : Array<string> {\n    let result = [];\n    text.replace(regexp, token => {\n        result.push(token);\n        return '';\n    });\n    return result;\n}\n\nexport function promiseDebounce<T>(method : () => ZalgoPromise<T> | T, delay : number = 50) : () => ZalgoPromise<T> {\n\n    let promise;\n    let timeout;\n\n    return function promiseDebouncedMethod() : ZalgoPromise<T> {\n        if (timeout) {\n            clearTimeout(timeout);\n        }\n\n        let localPromise = promise = promise || new ZalgoPromise();\n\n        timeout = setTimeout(() => {\n            promise = null;\n            timeout = null;\n\n            ZalgoPromise.try(method).then(\n                result => { localPromise.resolve(result); },\n                err => { localPromise.reject(err); }\n            );\n        }, delay);\n\n        return localPromise;\n    };\n}\n\nexport function safeInterval(method : Function, time : number) : { cancel : () => void } {\n\n    let timeout;\n\n    function loop() {\n        timeout = setTimeout(() => {\n            method();\n            loop();\n        }, time);\n    }\n\n    loop();\n\n    return {\n        cancel() {\n            clearTimeout(timeout);\n        }\n    };\n}\n\nexport function isInteger(str : string) : boolean {\n    return Boolean(str.match(/^[0-9]+$/));\n}\n\nexport function isFloat(str : string) : boolean {\n    return Boolean(str.match(/^[0-9]+\\.[0-9]+$/));\n}\n\nexport function serializePrimitive(value : string | number | boolean) : string {\n    return value.toString();\n}\n\nexport function deserializePrimitive(value : string) : string | number | boolean {\n    if (value === 'true') {\n        return true;\n    } else if (value === 'false') {\n        return false;\n    } else if (isInteger(value)) {\n        return parseInt(value, 10);\n    } else if (isFloat(value)) {\n        return parseFloat(value);\n    } else {\n        return value;\n    }\n}\n\nexport function dotify(obj : Object, prefix : string = '', newobj : Object = {}) : { [string] : string } {\n    prefix = prefix ? `${ prefix }.` : prefix;\n    for (let key in obj) {\n        if (!obj.hasOwnProperty(key) || obj[key] === undefined || obj[key] === null || typeof obj[key] === 'function') {\n            continue;\n        } else if (obj[key] && Array.isArray(obj[key]) && obj[key].length && obj[key].every(val => typeof val !== 'object')) {\n            newobj[`${ prefix }${ key }[]`] = obj[key].join(',');\n        } else if (obj[key] && typeof obj[key] === 'object') {\n            newobj = dotify(obj[key], `${ prefix }${ key }`, newobj);\n        } else {\n            newobj[`${ prefix }${ key }`] = serializePrimitive(obj[key]);\n        }\n    }\n    return newobj;\n}\n\nexport function undotify(obj : { [string] : string }) : Object {\n    \n    let result = {};\n\n    for (let key in obj) {\n        if (!obj.hasOwnProperty(key) || typeof obj[key] !== 'string') {\n            continue;\n        }\n\n        let value = obj[key];\n\n        if (key.match(/^.+\\[\\]$/)) {\n            key = key.slice(0, key.length - 2);\n            value = value.split(',').map(deserializePrimitive);\n        } else {\n            value = deserializePrimitive(value);\n        }\n\n        let keyResult = result;\n        let parts = key.split('.');\n        for (let i = 0; i < parts.length; i++) {\n            let part = parts[i];\n            let isLast = (i + 1 === parts.length);\n            let isIndex = !isLast && isInteger(parts[i + 1]);\n\n            if (part === 'constructor' || part === 'prototype' || part === '__proto__') {\n                throw new Error(`Disallowed key: ${ part }`);\n            }\n\n            if (isLast) {\n                // $FlowFixMe\n                keyResult[part] = value;\n            } else {\n                // $FlowFixMe\n                keyResult = keyResult[part] = keyResult[part] || (isIndex ? [] : {});\n            }\n        }\n    }\n\n    return result;\n}\n\nexport type EventEmitterType = {\n    on : (eventName : string, handler : Function) => CancelableType,\n    once : (eventName : string, handler : Function) => CancelableType,\n    trigger : (eventName : string, ...args : $ReadOnlyArray<mixed>) => ZalgoPromise<void>,\n    triggerOnce : (eventName : string, ...args : $ReadOnlyArray<mixed>) => ZalgoPromise<void>\n};\n\nexport function eventEmitter() : EventEmitterType {\n    let triggered = {};\n    let handlers = {};\n\n    return {\n\n        on(eventName : string, handler : Function) : CancelableType {\n            let handlerList = handlers[eventName] = handlers[eventName] || [];\n\n            handlerList.push(handler);\n\n            let cancelled = false;\n\n            return {\n                cancel() {\n                    if (!cancelled) {\n                        cancelled = true;\n                        handlerList.splice(handlerList.indexOf(handler), 1);\n                    }\n\n                }\n            };\n        },\n\n        once(eventName : string, handler : Function) : CancelableType {\n\n            let listener = this.on(eventName, () => {\n                listener.cancel();\n                handler();\n            });\n\n            return listener;\n        },\n\n        trigger(eventName : string, ...args : $ReadOnlyArray<mixed>) : ZalgoPromise<void> {\n\n            let handlerList = handlers[eventName];\n            let promises = [];\n\n            if (handlerList) {\n                for (let handler of handlerList) {\n                    promises.push(ZalgoPromise.try(() => handler(...args)));\n                }\n            }\n\n            return ZalgoPromise.all(promises).then(noop);\n        },\n\n        triggerOnce(eventName : string, ...args : $ReadOnlyArray<mixed>) : ZalgoPromise<void> {\n\n            if (triggered[eventName]) {\n                return ZalgoPromise.resolve();\n            }\n\n            triggered[eventName] = true;\n            return this.trigger(eventName, ...args);\n        }\n    };\n}\n\nexport function camelToDasherize(string : string) : string {\n    return string.replace(/([A-Z])/g, (g) => {\n        return `-${ g.toLowerCase() }`;\n    });\n}\n\nexport function dasherizeToCamel(string : string) : string {\n    return string.replace(/-([a-z])/g, (g) => {\n        return g[1].toUpperCase();\n    });\n}\n\nexport function capitalizeFirstLetter(string : string) : string {\n    return string.charAt(0).toUpperCase() + string.slice(1).toLowerCase();\n}\n\nexport function get(item : Object, path : string, def : mixed) : mixed {\n\n    if (!path) {\n        return def;\n    }\n\n    let pathParts = path.split('.');\n\n    // Loop through each section of our key path\n\n    for (let i = 0; i < pathParts.length; i++) {\n\n        // If we have an object, we can get the key\n        if (typeof item === 'object' && item !== null) {\n            item = item[pathParts[i]];\n\n        // Otherwise, we should return the default (undefined if not provided)\n        } else {\n            return def;\n        }\n    }\n\n    // If our final result is undefined, we should return the default\n\n    return item === undefined ? def : item;\n}\n\nexport function safeTimeout(method : Function, time : number) {\n\n    let interval = safeInterval(() => {\n        time -= 100;\n        if (time <= 0) {\n            interval.cancel();\n            method();\n        }\n    }, 100);\n}\n\nexport function defineLazyProp<T>(obj : Object | Array<mixed>, key : string | number, getter : () => T) {\n    if (Array.isArray(obj)) {\n        if (typeof key !== 'number') {\n            throw new TypeError(`Array key must be number`);\n        }\n    } else if (typeof obj === 'object' && obj !== null) {\n        if (typeof key !== 'string') {\n            throw new TypeError(`Object key must be string`);\n        }\n    }\n    \n    Object.defineProperty(obj, key, {\n        configurable: true,\n        enumerable:   true,\n        get:          () => {\n            // $FlowFixMe\n            delete obj[key];\n            let value = getter();\n            // $FlowFixMe\n            obj[key] = value;\n            return value;\n        },\n        set: (value : T) => {\n            // $FlowFixMe\n            delete obj[key];\n            // $FlowFixMe\n            obj[key] = value;\n        }\n    });\n}\n\nexport function arrayFrom<T>(item : Iterable<T>) : Array<T> { // eslint-disable-line no-undef\n    return Array.prototype.slice.call(item);\n}\n\nexport function isObject(item : mixed) : boolean {\n    return (typeof item === 'object' && item !== null);\n}\n\nexport function isObjectObject(obj : mixed) : boolean {\n    return isObject(obj) && Object.prototype.toString.call(obj) === '[object Object]';\n}\n\nexport function isPlainObject(obj : mixed) : boolean {\n    if (!isObjectObject(obj)) {\n        return false;\n    }\n\n    // $FlowFixMe\n    let constructor = obj.constructor;\n\n    if (typeof constructor !== 'function') {\n        return false;\n    }\n\n    let prototype = constructor.prototype;\n\n    if (!isObjectObject(prototype)) {\n        return false;\n    }\n\n    if (!prototype.hasOwnProperty('isPrototypeOf')) {\n        return false;\n    }\n\n    return true;\n}\n\nexport function replaceObject<T : Array<mixed> | Object> (item : T, replacer : (mixed, string | number, string) => mixed, fullKey : string = '') : T {\n\n    if (Array.isArray(item)) {\n        let length = item.length;\n        let result : Array<mixed> = [];\n\n        for (let i = 0; i < length; i++) {\n\n            \n            defineLazyProp(result, i, () => {\n                let itemKey = fullKey ? `${ fullKey }.${ i }` : `${ i }`;\n                let el = item[i];\n\n                let child = replacer(el, i, itemKey);\n\n                if (isPlainObject(child) || Array.isArray(child)) {\n                    // $FlowFixMe\n                    child = replaceObject(child, replacer, itemKey);\n                }\n\n                return child;\n            });\n        }\n\n        // $FlowFixMe\n        return result;\n    } else if (isPlainObject(item)) {\n        let result = {};\n\n        for (let key in item) {\n            if (!item.hasOwnProperty(key)) {\n                continue;\n            }\n\n            defineLazyProp(result, key, () => {\n                let itemKey = fullKey ? `${ fullKey }.${ key }` : `${ key }`;\n                // $FlowFixMe\n                let el = item[key];\n\n                let child = replacer(el, key, itemKey);\n\n                if (isPlainObject(child) || Array.isArray(child)) {\n                    // $FlowFixMe\n                    child = replaceObject(child, replacer, itemKey);\n                }\n\n                return child;\n            });\n        }\n\n        // $FlowFixMe\n        return result;\n    } else {\n        throw new Error(`Pass an object or array`);\n    }\n}\n\n\nexport function copyProp(source : Object, target : Object, name : string, def : mixed) {\n    if (source.hasOwnProperty(name)) {\n        let descriptor = Object.getOwnPropertyDescriptor(source, name);\n        // $FlowFixMe\n        Object.defineProperty(target, name, descriptor);\n\n    } else {\n        target[name] = def;\n    }\n}\n\ntype RegexResultType = {\n    text : string,\n    groups : Array<string>,\n    start : number,\n    end : number,\n    length : number,\n    replace : (text : string) => string\n};\n\nexport function regex(pattern : string | RegExp, string : string, start : number = 0) : ?RegexResultType {\n\n    if (typeof pattern === 'string') {\n        // eslint-disable-next-line security/detect-non-literal-regexp\n        pattern = new RegExp(pattern);\n    }\n\n    let result = string.slice(start).match(pattern);\n\n    if (!result) {\n        return;\n    }\n\n    // $FlowFixMe\n    let index : number = result.index;\n    let regmatch = result[0];\n\n    return {\n        text:   regmatch,\n        groups: result.slice(1),\n        start:  start + index,\n        end:    start + index + regmatch.length,\n        length: regmatch.length,\n\n        replace(text : string) : string {\n\n            if (!regmatch) {\n                return '';\n            }\n\n            return `${ regmatch.slice(0, start + index) }${ text }${ regmatch.slice(index + regmatch.length) }`;\n        }\n    };\n}\n\nexport function regexAll(pattern : string | RegExp, string : string) : Array<RegexResultType> {\n\n    let matches = [];\n    let start = 0;\n\n    // eslint-disable-next-line no-constant-condition\n    while (true) {\n        let regmatch = regex(pattern, string, start);\n\n        if (!regmatch) {\n            break;\n        }\n\n        matches.push(regmatch);\n        start = match.end;\n    }\n\n    return matches;\n}\n\nexport function isDefined(value : ?mixed) : boolean {\n    return value !== null && value !== undefined;\n}\n\nexport function cycle(method : Function) : ZalgoPromise<void> {\n    return ZalgoPromise.try(method).then(() => cycle(method));\n}\n\nexport function debounce<T>(method : (...args : Array<mixed>) => T, time : number = 100) : (...args : Array<mixed>) => void {\n\n    let timeout;\n\n    return function debounceWrapper() {\n        clearTimeout(timeout);\n\n        timeout = setTimeout(() => {\n            return method.apply(this, arguments);\n        }, time);\n    };\n}\n\nexport function isRegex(item : mixed) : boolean {\n    return Object.prototype.toString.call(item) === '[object RegExp]';\n}\n\ntype FunctionProxy<T : Function> = (method : T) => T;\n\n// eslint-disable-next-line flowtype/no-weak-types\nexport let weakMapMemoize : FunctionProxy<*> = <R : mixed>(method : (arg : any) => R) : ((...args : Array<any>) => R) => {\n\n    let weakmap = new WeakMap();\n\n    // eslint-disable-next-line flowtype/no-weak-types\n    return function weakmapMemoized(arg : any) : R {\n        return weakmap.getOrSet(arg, () => method.call(this, arg));\n    };\n};\n\ntype FunctionPromiseProxy<R : mixed, T : (...args : $ReadOnlyArray<mixed>) => ZalgoPromise<R>> = (T) => T;\n\n// eslint-disable-next-line flowtype/no-weak-types\nexport let weakMapMemoizePromise : FunctionPromiseProxy<*, *> = <R : mixed>(method : (arg : any) => ZalgoPromise<R>) : ((...args : Array<any>) => ZalgoPromise<R>) => {\n\n    let weakmap = new WeakMap();\n\n    // eslint-disable-next-line flowtype/no-weak-types\n    return function weakmapMemoizedPromise(arg : any) : ZalgoPromise<R> {\n        return weakmap.getOrSet(arg, () =>\n            method.call(this, arg).finally(() => {\n                weakmap.delete(arg);\n            })\n        );\n    };\n};\n\nexport function getOrSet<O : Object, T : mixed>(obj : O, key : string, getter : () => T) : T {\n    if (obj.hasOwnProperty(key)) {\n        return obj[key];\n    }\n\n    const val = getter();\n    obj[key] = val;\n    return val;\n}\n\nexport type CleanupType = {|\n    set : <T : mixed>(string, T) => T, // eslint-disable-line no-undef\n    register : (Function) => void,\n    all : () => ZalgoPromise<void>\n|};\n\nexport function cleanup(obj : Object) : CleanupType {\n\n    const tasks = [];\n    let cleaned = false;\n\n    return {\n        set<T : mixed>(name : string, item : T) : T {\n            if (!cleaned) {\n                obj[name] = item;\n                this.register(() => {\n                    delete obj[name];\n                });\n            }\n            return item;\n        },\n\n        register(method : Function) {\n            if (cleaned) {\n                method();\n            } else {\n                tasks.push(once(method));\n            }\n        },\n\n        all() : ZalgoPromise<void> {\n            const results = [];\n            cleaned = true;\n\n            while (tasks.length) {\n                const task = tasks.pop();\n                results.push(task());\n            }\n\n            return ZalgoPromise.all(results).then(noop);\n        }\n    };\n}\n\nexport function tryCatch<T>(fn : () => T) : {| result : T, error : void |} | {| result : void, error : mixed |} {\n    let result;\n    let error;\n\n    try {\n        result = fn();\n    } catch (err) {\n        error = err;\n    }\n    \n    // $FlowFixMe\n    return { result, error };\n}\n\nexport function removeFromArray<X, T : Array<X>>(arr : T, item : X) {\n    const index = arr.indexOf(item);\n    if (index !== -1) {\n        arr.splice(index, 1);\n    }\n}\n\nexport function assertExists<T>(name : string, thing : void | null | T) : T {\n    if (thing === null || typeof thing === 'undefined') {\n        throw new Error(`Expected ${ name } to be present`);\n    }\n                            \n    return thing;\n}\n                            \nexport function unique(arr : $ReadOnlyArray<string>) : $ReadOnlyArray<string> {\n    const result = {};\n    for (const item of arr) {\n        // eslint-disable-next-line const-immutable/no-mutation\n        result[item] = true;\n    }\n    return Object.keys(result);\n}\n","/* @flow */\n/* eslint max-lines: off */\n\nimport { ZalgoPromise } from 'zalgo-promise/src';\nimport { linkFrameWindow, isWindowClosed,\n    type SameDomainWindowType, type CrossDomainWindowType } from 'cross-domain-utils/src';\nimport { WeakMap } from 'cross-domain-safe-weakmap/src';\n\nimport { inlineMemoize, noop, stringify, capitalizeFirstLetter,\n    once, extend, safeInterval, uniqueID, arrayFrom } from './util';\nimport { isDevice } from './device';\nimport { KEY_CODES } from './constants';\nimport type { CancelableType } from './types';\n\ntype ElementRefType = string | HTMLElement;\n\nexport function isDocumentReady() : boolean {\n    return Boolean(document.body) && document.readyState === 'complete';\n}\n\nexport function urlEncode(str : string) : string {\n    return str.replace(/\\?/g, '%3F').replace(/&/g, '%26').replace(/#/g, '%23').replace(/\\+/g, '%2B');\n}\n\nexport function waitForWindowReady() : ZalgoPromise<void> {\n    return inlineMemoize(waitForWindowReady, () : ZalgoPromise<void> => {\n        return new ZalgoPromise(resolve => {\n            if (isDocumentReady()) {\n                resolve();\n            }\n\n            window.addEventListener('load', () => resolve());\n        });\n    });\n}\n\nexport function waitForDocumentReady() : ZalgoPromise<void> {\n    return inlineMemoize(waitForDocumentReady, () : ZalgoPromise<void> => {\n        return new ZalgoPromise(resolve => {\n\n            if (isDocumentReady()) {\n                return resolve();\n            }\n\n            let interval = setInterval(() => {\n                if (isDocumentReady()) {\n                    clearInterval(interval);\n                    return resolve();\n                }\n            }, 10);\n        });\n    });\n}\n\nexport function waitForDocumentBody() : ZalgoPromise<HTMLBodyElement> {\n    return waitForDocumentReady().then(() => {\n        if (document.body) {\n            return document.body;\n        }\n\n        throw new Error('Document ready but document.body not present');\n    });\n}\n\nexport function parseQuery(queryString : string) : Object {\n    return inlineMemoize(parseQuery, () : Object => {\n        let params = {};\n\n        if (!queryString) {\n            return params;\n        }\n\n        if (queryString.indexOf('=') === -1) {\n            return params;\n        }\n\n        for (let pair of queryString.split('&')) {\n            pair = pair.split('=');\n\n            if (pair[0] && pair[1]) {\n                params[decodeURIComponent(pair[0])] = decodeURIComponent(pair[1]);\n            }\n        }\n\n        return params;\n    }, [ queryString ]);\n}\n\n\nexport function getQueryParam(name : string) : string {\n    return parseQuery(window.location.search.slice(1))[name];\n}\n\nexport function urlWillRedirectPage(url : string) : boolean {\n\n    if (url.indexOf('#') === -1) {\n        return true;\n    }\n\n    if (url.indexOf('#') === 0) {\n        return false;\n    }\n\n    if (url.split('#')[0] === window.location.href.split('#')[0]) {\n        return false;\n    }\n\n    return true;\n}\n\nexport function formatQuery(obj : { [ string ] : string } = {}) : string {\n\n    return Object.keys(obj).filter(key => {\n        return typeof obj[key] === 'string';\n    }).map(key => {\n        return `${ urlEncode(key) }=${ urlEncode(obj[key]) }`;\n    }).join('&');\n}\n\nexport function extendQuery(originalQuery : string, props : { [ string ] : string } = {}) : string {\n\n    if (!props || !Object.keys(props).length) {\n        return originalQuery;\n    }\n\n    return formatQuery({\n        ...parseQuery(originalQuery),\n        ...props\n    });\n}\n\nexport function extendUrl(url : string, options : { query? : { [string] : string }, hash? : { [string] : string } } = {}) : string {\n\n    let query = options.query || {};\n    let hash = options.hash || {};\n\n    let originalUrl;\n    let originalQuery;\n    let originalHash;\n\n    [ originalUrl, originalHash ] = url.split('#');\n    [ originalUrl, originalQuery ] = originalUrl.split('?');\n\n    let queryString = extendQuery(originalQuery, query);\n    let hashString = extendQuery(originalHash, hash);\n\n    if (queryString) {\n        originalUrl = `${ originalUrl }?${ queryString }`;\n    }\n\n    if (hashString) {\n        originalUrl = `${ originalUrl }#${ hashString }`;\n    }\n\n    return originalUrl;\n}\n\nexport function redirect(url : string, win : CrossDomainWindowType = window) : ZalgoPromise<void> {\n    return new ZalgoPromise(resolve => {\n        win.location = url;\n        if (!urlWillRedirectPage(url)) {\n            resolve();\n        }\n    });\n}\n\nexport function hasMetaViewPort() : boolean {\n    let meta = document.querySelector('meta[name=viewport]');\n\n    if (isDevice() && window.screen.width < 660 && !meta) {\n        return false;\n    }\n\n    return true;\n}\n\nexport function isElementVisible(el : HTMLElement) : boolean {\n    return Boolean(el.offsetWidth || el.offsetHeight || el.getClientRects().length);\n}\n\nexport function enablePerformance() : boolean {\n    return inlineMemoize(enablePerformance, () : boolean => {\n        /* eslint-disable compat/compat */\n        return Boolean(\n            window.performance &&\n            performance.now &&\n            performance.timing &&\n            performance.timing.connectEnd &&\n            performance.timing.navigationStart &&\n            (Math.abs(performance.now() - Date.now()) > 1000) &&\n            (performance.now() - (performance.timing.connectEnd - performance.timing.navigationStart)) > 0\n        );\n        /* eslint-enable compat/compat */\n    });\n}\n\nexport function getPageRenderTime() : ZalgoPromise<?number> {\n    return waitForDocumentReady().then(() => {\n\n        if (!enablePerformance()) {\n            return;\n        }\n\n        let timing = window.performance.timing;\n\n        if (timing.connectEnd && timing.domInteractive) {\n            return timing.domInteractive - timing.connectEnd;\n        }\n    });\n}\n\nexport function htmlEncode(html : string = '') : string {\n    return html.toString()\n        .replace(/&/g, '&amp;')\n        .replace(/</g, '&lt;')\n        .replace(/>/g, '&gt;')\n        .replace(/\"/g, '&quot;')\n        .replace(/'/g, '&#39;')\n        .replace(/\\//g, '&#x2F;');\n}\n\nexport function isBrowser() : boolean {\n    return (typeof window !== 'undefined');\n}\n\nexport function querySelectorAll(selector : string, doc : HTMLElement = window.document) : Array<HTMLElement> {\n    return Array.prototype.slice.call(doc.querySelectorAll(selector));\n}\n\nexport function onClick(element : HTMLElement, handler : (Event) => void) {\n    element.addEventListener('touchstart', noop);\n    element.addEventListener('click', handler);\n    element.addEventListener('keypress', (event : Event) => {\n        // $FlowFixMe\n        if (event.keyCode === KEY_CODES.ENTER) {\n            return handler(event);\n        }\n    });\n}\n\nexport function getScript({ host = window.location.host, path } : { host? : string, path : string }) : ?HTMLScriptElement {\n    return inlineMemoize(getScript, () : ?HTMLScriptElement => {\n\n        let url = `${ host }${ path }`;\n        let scripts = Array.prototype.slice.call(document.getElementsByTagName('script'));\n\n        for (let script of scripts) {\n            if (!script.src) {\n                continue;\n            }\n\n            let src = script.src.replace(/^https?:\\/\\//, '').split('?')[0];\n\n            if (src === url) {\n                return script;\n            }\n        }\n    }, [ path ]);\n}\n\nexport function isLocalStorageEnabled() : boolean {\n    return inlineMemoize(isLocalStorageEnabled, () => {\n        try {\n            if (typeof window === 'undefined') {\n                return false;\n            }\n\n            if (window.localStorage) {\n                let value = Math.random().toString();\n                window.localStorage.setItem('__test__localStorage__', value);\n                let result = window.localStorage.getItem('__test__localStorage__');\n                window.localStorage.removeItem('__test__localStorage__');\n                if (value === result) {\n                    return true;\n                }\n            }\n        } catch (err) {\n            // pass\n        }\n        return false;\n    });\n}\n\nexport function getBrowserLocales() : Array<{ country? : string, lang : string }> {\n    let nav = window.navigator;\n\n    let locales = nav.languages\n        ? Array.prototype.slice.apply(nav.languages)\n        : [];\n\n    if (nav.language) {\n        locales.push(nav.language);\n    }\n\n    if (nav.userLanguage) {\n        locales.push(nav.userLanguage);\n    }\n\n    return locales.map(locale => {\n\n        if (locale && locale.match(/^[a-z]{2}[-_][A-Z]{2}$/)) {\n            let [ lang, country ] = locale.split(/[-_]/);\n            return { country, lang };\n        }\n\n        if (locale && locale.match(/^[a-z]{2}$/)) {\n            return { lang: locale };\n        }\n\n        return null;\n\n    }).filter(Boolean);\n}\n\n\nexport function appendChild(container : HTMLElement, child : HTMLElement | Text) {\n    container.appendChild(child);\n}\n\nexport function isElement(element : mixed) : boolean {\n\n    if (element instanceof window.Element) {\n        return true;\n    }\n\n    if (element !== null && typeof element === 'object' && element.nodeType === 1 && typeof element.style === 'object' && typeof element.ownerDocument === 'object') {\n        return true;\n    }\n\n    return false;\n}\n\nexport function getElementSafe(id : ElementRefType, doc : Document | HTMLElement = document) : ?HTMLElement {\n\n    if (isElement(id)) {\n        // $FlowFixMe\n        return id;\n    }\n\n    if (typeof id === 'string') {\n        return doc.querySelector(id);\n    }\n}\n\nexport function getElement(id : ElementRefType, doc : Document | HTMLElement = document) : HTMLElement {\n\n    let element = getElementSafe(id, doc);\n\n    if (element) {\n        return element;\n    }\n\n    throw new Error(`Can not find element: ${ stringify(id) }`);\n}\n\nexport function elementReady(id : ElementRefType) : ZalgoPromise<window.HTMLElement> {\n    return new ZalgoPromise((resolve, reject) => {\n\n        let name = stringify(id);\n        let el = getElementSafe(id);\n\n        if (el) {\n            return resolve(el);\n        }\n\n        if (isDocumentReady()) {\n            return reject(new Error(`Document is ready and element ${ name } does not exist`));\n        }\n\n        let interval = setInterval(() => {\n\n            el = getElementSafe(id);\n\n            if (el) {\n                clearInterval(interval);\n                return resolve(el);\n            }\n\n            if (isDocumentReady()) {\n                clearInterval(interval);\n                return reject(new Error(`Document is ready and element ${ name } does not exist`));\n            }\n        }, 10);\n    });\n}\n\nexport function PopupOpenError(message : string) {\n    this.message = message;\n}\n\nPopupOpenError.prototype = Object.create(Error.prototype);\n\ntype PopupOptions = {|\n    name? : string,\n    width? : number,\n    height? : number,\n    top? : number,\n    left? : number,\n    status? : 0 | 1,\n    resizable? : 0 | 1,\n    toolbar? : 0 | 1,\n    menubar? : 0 | 1,\n    scrollbars? : 0 | 1\n|};\n\nexport function popup(url : string, options? : PopupOptions) : CrossDomainWindowType {\n\n    // $FlowFixMe\n    options = options || {};\n\n    let { width, height } = options;\n\n    let top = 0;\n    let left = 0;\n\n    if (width) {\n        if (window.outerWidth) {\n            left = Math.round((window.outerWidth - width) / 2) + window.screenX;\n        } else if (window.screen.width) {\n            left = Math.round((window.screen.width - width) / 2);\n        }\n    }\n\n    if (height) {\n        if (window.outerHeight) {\n            top = Math.round((window.outerHeight - height) / 2) + window.screenY;\n        } else if (window.screen.height) {\n            top = Math.round((window.screen.height - height) / 2);\n        }\n    }\n\n    options = {\n        top,\n        left,\n        width,\n        height,\n        status:     1,\n        toolbar:    0,\n        menubar:    0,\n        resizable:  1,\n        scrollbars: 1,\n        ...options\n    };\n\n    let name = options.name || '';\n    delete options.name;\n\n    // eslint-disable-next-line array-callback-return\n    let params = Object.keys(options).map(key => {\n        // $FlowFixMe\n        if (options[key]) {\n            return `${ key }=${ stringify(options[key]) }`;\n        }\n    }).filter(Boolean).join(',');\n\n    let win;\n\n    try {\n        win = window.open(url, name, params, true);\n    } catch (err) {\n        throw new PopupOpenError(`Can not open popup window - ${ err.stack || err.message }`);\n    }\n\n    if (isWindowClosed(win)) {\n        let err = new PopupOpenError(`Can not open popup window - blocked`);\n        throw err;\n    }\n\n    window.addEventListener('unload', () => win.close());\n\n    return win;\n}\n\n\nexport function writeToWindow(win : SameDomainWindowType, html : string) {\n    try {\n        win.document.open();\n        win.document.write(html);\n        win.document.close();\n    } catch (err) {\n        try {\n            win.location = `javascript: document.open(); document.write(${ JSON.stringify(html) }); document.close();`;\n        } catch (err2) {\n            // pass\n        }\n    }\n}\n\nexport function writeElementToWindow(win : SameDomainWindowType, el : HTMLElement) {\n\n    let tag = el.tagName.toLowerCase();\n\n    if (tag !== 'html') {\n        throw new Error(`Expected element to be html, got ${ tag }`);\n    }\n\n    let documentElement = win.document.documentElement;\n\n    for (const child of arrayFrom(documentElement.children)) {\n        documentElement.removeChild(child);\n    }\n\n    for (const child of arrayFrom(el.children)) {\n        documentElement.appendChild(child);\n    }\n}\n\nexport function setStyle(el : HTMLElement, styleText : string, doc : Document = window.document) {\n    // $FlowFixMe\n    if (el.styleSheet) {\n        // $FlowFixMe\n        el.styleSheet.cssText = styleText;\n    } else {\n        el.appendChild(doc.createTextNode(styleText));\n    }\n}\n\nexport type ElementOptionsType = {\n    style? : { [ string ] : string },\n    id? : string,\n    class? : ?Array<string>,\n    attributes? : { [ string ] : string },\n    styleSheet? : ?string,\n    html? : ?string\n};\n\nlet awaitFrameLoadPromises : WeakMap<HTMLIFrameElement, ZalgoPromise<HTMLIFrameElement>>;\n\nexport function awaitFrameLoad(frame : HTMLIFrameElement) : ZalgoPromise<HTMLIFrameElement> {\n    awaitFrameLoadPromises = awaitFrameLoadPromises || new WeakMap();\n\n    if (awaitFrameLoadPromises.has(frame)) {\n        let promise = awaitFrameLoadPromises.get(frame);\n        if (promise) {\n            return promise;\n        }\n    }\n\n    let promise = new ZalgoPromise((resolve, reject) => {\n        frame.addEventListener('load', () => {\n            linkFrameWindow(frame);\n            resolve(frame);\n        });\n\n        frame.addEventListener('error', (err : Event) => {\n            if (frame.contentWindow) {\n                resolve(frame);\n            } else {\n                reject(err);\n            }\n        });\n    });\n\n    awaitFrameLoadPromises.set(frame, promise);\n\n    return promise;\n}\n\nexport function awaitFrameWindow(frame : HTMLIFrameElement) : ZalgoPromise<CrossDomainWindowType> {\n    return awaitFrameLoad(frame).then(loadedFrame => {\n\n        if (!loadedFrame.contentWindow) {\n            throw new Error(`Could not find window in iframe`);\n        }\n\n        return loadedFrame.contentWindow;\n    });\n}\n\nexport function createElement(tag : string = 'div', options : ElementOptionsType = {}, container : ?HTMLElement) : HTMLElement {\n\n    tag = tag.toLowerCase();\n    let element = document.createElement(tag);\n\n    if (options.style) {\n        extend(element.style, options.style);\n    }\n\n    if (options.class) {\n        element.className = options.class.join(' ');\n    }\n\n    if (options.id) {\n        element.setAttribute('id', options.id);\n    }\n\n    if (options.attributes) {\n        for (let key of Object.keys(options.attributes)) {\n            element.setAttribute(key, options.attributes[key]);\n        }\n    }\n\n    if (options.styleSheet) {\n        setStyle(element, options.styleSheet);\n    }\n\n    if (container) {\n        appendChild(container, element);\n    }\n\n    if (options.html) {\n        if (tag === 'iframe') {\n            // $FlowFixMe\n            if (!container || !element.contentWindow) {\n                throw new Error(`Iframe html can not be written unless container provided and iframe in DOM`);\n            }\n\n            // $FlowFixMe\n            writeToWindow(element.contentWindow, options.html);\n\n        } else {\n            element.innerHTML = options.html;\n        }\n    }\n\n    return element;\n}\n\n\nexport type IframeElementOptionsType = {\n    style? : { [ string ] : string },\n    class? : ?Array<string>,\n    attributes? : { [ string ] : string },\n    styleSheet? : ?string,\n    html? : ?string,\n    url? : ?string\n};\n\nexport function iframe(options : IframeElementOptionsType = {}, container : ?HTMLElement) : HTMLIFrameElement {\n\n    let attributes = options.attributes || {};\n    let style = options.style || {};\n\n    let frame = createElement('iframe', {\n        attributes: {\n            allowTransparency: 'true',\n            ...attributes\n        },\n        style: {\n            backgroundColor: 'transparent',\n            border:          'none',\n            ...style\n        },\n        html:  options.html,\n        class: options.class\n    });\n\n    const isIE = window.navigator.userAgent.match(/MSIE|Edge/i);\n    \n    if (!frame.hasAttribute('id')) {\n        frame.setAttribute('id', uniqueID());\n    }\n\n    // $FlowFixMe\n    awaitFrameLoad(frame);\n\n    if (container) {\n        let el = getElement(container);\n        el.appendChild(frame);\n    }\n\n    if (options.url || isIE) {\n        frame.setAttribute('src', options.url || 'about:blank');\n    }\n\n    // $FlowFixMe\n    return frame;\n}\n\nexport function addEventListener(obj : HTMLElement, event : string, handler : (event : Event) => void) : CancelableType {\n    obj.addEventListener(event, handler);\n    return {\n        cancel() {\n            obj.removeEventListener(event, handler);\n        }\n    };\n}\n\nexport function bindEvents(element : HTMLElement, eventNames : Array<string>, handler : (event : Event) => void) : CancelableType {\n\n    handler = once(handler);\n\n    for (let eventName of eventNames) {\n        element.addEventListener(eventName, handler);\n    }\n\n    return {\n        cancel: once(() => {\n            for (let eventName of eventNames) {\n                element.removeEventListener(eventName, handler);\n            }\n        })\n    };\n}\n\nconst VENDOR_PREFIXES = [ 'webkit', 'moz', 'ms', 'o' ];\n\nexport function setVendorCSS(element : HTMLElement, name : string, value : string) {\n\n    // $FlowFixMe\n    element.style[name] = value;\n\n    let capitalizedName = capitalizeFirstLetter(name);\n\n    for (let prefix of VENDOR_PREFIXES) {\n        // $FlowFixMe\n        element.style[`${ prefix }${ capitalizedName }`] = value;\n    }\n}\n\nconst ANIMATION_START_EVENTS = [ 'animationstart', 'webkitAnimationStart', 'oAnimationStart', 'MSAnimationStart' ];\nconst ANIMATION_END_EVENTS   = [ 'animationend', 'webkitAnimationEnd', 'oAnimationEnd', 'MSAnimationEnd' ];\n\nexport function animate(element : ElementRefType, name : string, clean : (Function) => void, timeout : number = 1000) : ZalgoPromise<void> {\n    return new ZalgoPromise((resolve, reject) => {\n\n        let el = getElement(element);\n\n        if (!el) {\n            return resolve();\n        }\n\n        let hasStarted = false;\n\n        let startTimeout;\n        let endTimeout;\n        let startEvent;\n        let endEvent;\n\n        function cleanUp() {\n            clearTimeout(startTimeout);\n            clearTimeout(endTimeout);\n            startEvent.cancel();\n            endEvent.cancel();\n        }\n\n        startEvent = bindEvents(el, ANIMATION_START_EVENTS, event => {\n\n            // $FlowFixMe\n            if (event.target !== el || event.animationName !== name) {\n                return;\n            }\n\n            clearTimeout(startTimeout);\n\n            event.stopPropagation();\n\n            startEvent.cancel();\n            hasStarted = true;\n\n            endTimeout = setTimeout(() => {\n                cleanUp();\n                resolve();\n            }, timeout);\n        });\n\n        endEvent = bindEvents(el, ANIMATION_END_EVENTS, event => {\n\n            // $FlowFixMe\n            if (event.target !== el || event.animationName !== name) {\n                return;\n            }\n\n            cleanUp();\n\n            // $FlowFixMe\n            if (typeof event.animationName === 'string' && event.animationName !== name) {\n                return reject(`Expected animation name to be ${ name }, found ${ event.animationName }`);\n            }\n\n            return resolve();\n        });\n\n        setVendorCSS(el, 'animationName', name);\n\n        startTimeout = setTimeout(() => {\n            if (!hasStarted) {\n                cleanUp();\n                return resolve();\n            }\n        }, 200);\n\n        if (clean) {\n            clean(cleanUp);\n        }\n    });\n}\n\nconst STYLE = {\n\n    DISPLAY: {\n        NONE:  'none',\n        BLOCK: 'block'\n    },\n\n    VISIBILITY: {\n        VISIBLE: 'visible',\n        HIDDEN:  'hidden'\n    },\n\n    IMPORTANT: 'important'\n};\n\nexport function makeElementVisible(element : HTMLElement) {\n    element.style.setProperty('visibility', '');\n}\n\nexport function makeElementInvisible(element : HTMLElement) {\n    element.style.setProperty('visibility', STYLE.VISIBILITY.HIDDEN, STYLE.IMPORTANT);\n}\n\n\nexport function showElement(element : HTMLElement) {\n    element.style.setProperty('display', '');\n}\n\nexport function hideElement(element : HTMLElement) {\n    element.style.setProperty('display', STYLE.DISPLAY.NONE, STYLE.IMPORTANT);\n}\n\nexport function destroyElement(element : HTMLElement) {\n    if (element && element.parentNode) {\n        element.parentNode.removeChild(element);\n    }\n}\n\nexport function showAndAnimate(element : HTMLElement, name : string, clean : (Function) => void) : ZalgoPromise<void> {\n    let animation = animate(element, name, clean);\n    showElement(element);\n    return animation;\n}\n\nexport function animateAndHide(element : HTMLElement, name : string, clean : (Function) => void) : ZalgoPromise<void> {\n    return animate(element, name, clean).then(() => {\n        hideElement(element);\n    });\n}\n\nexport function addClass(element : HTMLElement, name : string) {\n    element.classList.add(name);\n}\n\nexport function removeClass(element : HTMLElement, name : string) {\n    element.classList.remove(name);\n}\n\nexport function isElementClosed(el : HTMLElement) : boolean {\n    if (!el || !el.parentNode) {\n        return true;\n    }\n    return false;\n}\n\nexport function watchElementForClose(element : HTMLElement, handler : () => mixed) : CancelableType {\n    handler = once(handler);\n\n    let interval;\n\n    if (isElementClosed(element)) {\n        handler();\n    } else {\n        interval = safeInterval(() => {\n            if (isElementClosed(element)) {\n                interval.cancel();\n                handler();\n            }\n        }, 50);\n    }\n\n    return {\n        cancel() {\n            if (interval) {\n                interval.cancel();\n            }\n        }\n    };\n}\n\nexport function fixScripts(el : HTMLElement, doc : Document = window.document) {\n    for (let script of querySelectorAll('script', el)) {\n        let parentNode = script.parentNode;\n\n        if (!parentNode) {\n            continue;\n        }\n\n        let newScript = doc.createElement('script');\n        newScript.text = script.textContent;\n        parentNode.replaceChild(newScript, script);\n    }\n}\n\ntype OnResizeOptions = {|\n    width? : boolean,\n    height? : boolean,\n    interval? : number,\n    win? : SameDomainWindowType\n|};\n\nexport function onResize(el : HTMLElement, handler : ({ width : number, height : number }) => void, { width = true, height = true, interval = 100, win = window } : OnResizeOptions = {}) : {} {\n    let currentWidth = el.offsetWidth;\n    let currentHeight = el.offsetHeight;\n\n    handler({ width: currentWidth, height: currentHeight });\n\n    let check = () => {\n        let newWidth = el.offsetWidth;\n        let newHeight = el.offsetHeight;\n\n        if ((width && newWidth !== currentWidth) || (height && newHeight !== currentHeight)) {\n            handler({ width: newWidth, height: newHeight });\n        }\n\n        currentWidth = newWidth;\n        currentHeight = newHeight;\n    };\n\n    let observer;\n    let timeout;\n\n    if (typeof win.ResizeObserver !== 'undefined') {\n        observer = new win.ResizeObserver(check);\n        observer.observe(el);\n\n    } else if (typeof win.MutationObserver !== 'undefined') {\n        observer = new win.MutationObserver(check);\n        observer.observe(el, {\n            attributes:    true,\n            childList:     true,\n            subtree:       true,\n            characterData: false\n        });\n        win.addEventListener('resize', check);\n    } else {\n        let loop = () => {\n            check();\n            timeout = setTimeout(loop, interval);\n        };\n        loop();\n    }\n\n    return {\n        cancel: () => {\n            observer.disconnect();\n            window.removeEventListener('resize', check);\n            clearTimeout(timeout);\n        }\n    };\n}\n\nexport function getResourceLoadTime(url : string) : ?number {\n\n    if (!enablePerformance()) {\n        return;\n    }\n\n    if (!window.performance || typeof window.performance.getEntries !== 'function') {\n        return;\n    }\n\n    const entries = window.performance.getEntries();\n\n    for (let i = 0; i < entries.length; i++) {\n        const entry = entries[i];\n\n        if (entry && entry.name && entry.name.indexOf(url) === 0 && typeof entry.duration === 'number') {\n            return Math.floor(entry.duration);\n        }\n    }\n}\n","/* @flow */\n\nexport function hasNativeWeakMap() : boolean {\n\n    if (typeof WeakMap === 'undefined') {\n        return false;\n    }\n\n    if (typeof Object.freeze === 'undefined') {\n        return false;\n    }\n\n    try {\n\n        let testWeakMap = new WeakMap();\n        let testKey = {};\n        let testValue = '__testvalue__';\n\n        Object.freeze(testKey);\n\n        testWeakMap.set(testKey, testValue);\n\n        if (testWeakMap.get(testKey) === testValue) {\n            return true;\n        }\n\n        return false;\n\n    } catch (err) {\n\n        return false;\n    }\n}\n","/* @flow */\n\nexport function isPerc(str : string) : boolean {\n    return typeof str === 'string' && (/^[0-9]+%$/).test(str);\n}\n\nexport function isPx(str : string) : boolean {\n    return typeof str === 'string' && (/^[0-9]+px$/).test(str);\n}\n\nexport function toNum(val : string | number) : number {\n\n    if (typeof val === 'number') {\n        return val;\n    }\n\n    let match = val.match(/^([0-9]+)(px|%)$/);\n\n    if (!match) {\n        throw new Error(`Could not match css value from ${ val }`);\n    }\n\n    return parseInt(match[1], 10);\n}\n\nexport function toPx(val : number | string) : string {\n    return `${ toNum(val) }px`;\n}\n\nexport function toCSS(val : number | string) : string {\n\n    if (typeof val === 'number') {\n        return toPx(val);\n    }\n\n    return isPerc(val) ? val : toPx(val);\n}\n\nexport function percOf(num : number, perc : string) : number {\n    return parseInt(num * toNum(perc)  / 100, 10);\n}\n\nexport function normalizeDimension(dim : string | number, max : number) : number {\n    if (typeof dim === 'number') {\n        return dim;\n    } else if (isPerc(dim)) {\n        return percOf(max, dim);\n    } else if (isPx(dim)) {\n        return toNum(dim);\n    } else {\n        throw new Error(`Can not normalize dimension: ${ dim }`);\n    }\n}\n","/* @flow */\n\nexport const BRIDGE_TIMEOUT = 5000;\nexport const CHILD_WINDOW_TIMEOUT = 5000;\n\nexport const ACK_TIMEOUT = 2000;\nexport const ACK_TIMEOUT_KNOWN = 10000;\nexport const RES_TIMEOUT = __TEST__ ? 2000 : -1;\nexport const RESPONSE_CYCLE_TIME = 500;\n","/* @flow */\n\nexport const MESSAGE_TYPE = {\n    REQUEST:  ('postrobot_message_request' : 'postrobot_message_request'),\n    RESPONSE: ('postrobot_message_response' : 'postrobot_message_response'),\n    ACK:      ('postrobot_message_ack' : 'postrobot_message_ack')\n};\n\nexport const MESSAGE_ACK = {\n    SUCCESS: ('success' : 'success'),\n    ERROR:   ('error' : 'error')\n};\n\nexport const MESSAGE_NAME = {\n    METHOD:      ('postrobot_method' : 'postrobot_method'),\n    HELLO:       ('postrobot_hello' : 'postrobot_hello'),\n    OPEN_TUNNEL: ('postrobot_open_tunnel' : 'postrobot_open_tunnel')\n};\n\nexport const SEND_STRATEGY = {\n    POST_MESSAGE: ('postrobot_post_message' : 'postrobot_post_message'),\n    BRIDGE:       ('postrobot_bridge' : 'postrobot_bridge'),\n    GLOBAL:       ('postrobot_global' : 'postrobot_global')\n};\n\nexport const BRIDGE_NAME_PREFIX = '__postrobot_bridge__';\nexport const POSTROBOT_PROXY =    '__postrobot_proxy__';\n\nexport const WILDCARD = '*';\n\nexport const SERIALIZATION_TYPE = {\n    CROSS_DOMAIN_ZALGO_PROMISE: ('cross_domain_zalgo_promise' : 'cross_domain_zalgo_promise'),\n    CROSS_DOMAIN_FUNCTION:      ('cross_domain_function' : 'cross_domain_function'),\n    CROSS_DOMAIN_WINDOW:        ('cross_domain_window' : 'cross_domain_window')\n};\n","/* @flow */\n\nimport { type CrossDomainWindowType, type SameDomainWindowType } from 'cross-domain-utils/src';\nimport { WeakMap } from 'cross-domain-safe-weakmap/src';\nimport { getOrSet } from 'belter/src';\n\nexport function getGlobal(win : SameDomainWindowType = window) : Object {\n    if (win !== window) {\n        return win[__POST_ROBOT__.__GLOBAL_KEY__];\n    }\n    const global : Object = win[__POST_ROBOT__.__GLOBAL_KEY__] = win[__POST_ROBOT__.__GLOBAL_KEY__] || {};\n    return global;\n}\n\nexport function deleteGlobal() {\n    delete window[__POST_ROBOT__.__GLOBAL_KEY__];\n}\n\ntype ObjectGetter = () => Object;\nconst getObj : ObjectGetter = () => ({});\n\ntype GetOrSet<T> = ((string, () => T) => T) & ((string, () => void) => void);\n\ntype GlobalStore<T> = {|\n    get : ((string, T) => T) & ((string, void) => T | void),\n    set : (string, T) => T,\n    has : (string) => boolean,\n    del : (string) => void,\n    getOrSet : GetOrSet<T>,\n    reset : () => void,\n    keys : () => $ReadOnlyArray<string>\n|};\n\n// $FlowFixMe\nexport function globalStore<T : mixed>(key? : string = 'store', defStore? : ObjectGetter = getObj) : GlobalStore<T> {\n    return getOrSet(getGlobal(), key, () => {\n        let store = defStore();\n\n        return {\n            has: (storeKey) => {\n                return store.hasOwnProperty(storeKey);\n            },\n            get: (storeKey, defVal) => {\n                // $FlowFixMe\n                return store.hasOwnProperty(storeKey) ? store[storeKey] : defVal;\n            },\n            set: (storeKey, val) => {\n                store[storeKey] = val;\n                return val;\n            },\n            del: (storeKey) => {\n                delete store[storeKey];\n            },\n            getOrSet: (storeKey, getter) => {\n                // $FlowFixMe\n                return getOrSet(store, storeKey, getter);\n            },\n            reset: () => {\n                store = defStore();\n            },\n            keys: () => {\n                return Object.keys(store);\n            }\n        };\n    });\n}\n\nexport class WildCard {}\n\nexport function getWildcard() : WildCard {\n    const global = getGlobal();\n    global.WINDOW_WILDCARD = global.WINDOW_WILDCARD || new WildCard();\n    return global.WINDOW_WILDCARD;\n}\n\ntype WindowStore<T> = {|\n    get : ((CrossDomainWindowType | WildCard, T) => T) & ((CrossDomainWindowType | WildCard, void) => T | void),\n    set : (CrossDomainWindowType | WildCard, T) => T,\n    has : (CrossDomainWindowType | WildCard) => boolean,\n    del : (CrossDomainWindowType | WildCard) => void,\n    getOrSet : (CrossDomainWindowType | WildCard, () => T) => T\n|};\n\n// $FlowFixMe\nexport function windowStore<T>(key? : string = 'store', defStore? : ObjectGetter = getObj) : WindowStore<T> {\n    return globalStore('windowStore').getOrSet(key, () => {\n        const winStore = new WeakMap();\n\n        const getStore = (win : CrossDomainWindowType | WildCard) : ObjectGetter => {\n            return winStore.getOrSet(win, defStore);\n        };\n    \n        return {\n            has: (win) => {\n                const store = getStore(win);\n                return store.hasOwnProperty(key);\n            },\n            get: (win, defVal) => {\n                const store = getStore(win);\n                // $FlowFixMe\n                return store.hasOwnProperty(key) ? store[key] : defVal;\n            },\n            set: (win, val) => {\n                const store = getStore(win);\n                store[key] = val;\n                return val;\n            },\n            del: (win) => {\n                const store = getStore(win);\n                delete store[key];\n            },\n            getOrSet: (win, getter) => {\n                const store = getStore(win);\n                return getOrSet(store, key, getter);\n            }\n        };\n    });\n}\n","/* @flow */\n\nimport { getAncestor, type CrossDomainWindowType } from 'cross-domain-utils/src';\nimport { ZalgoPromise } from 'zalgo-promise/src';\nimport { noop, uniqueID } from 'belter/src';\n\nimport { MESSAGE_NAME, WILDCARD } from '../conf';\nimport { windowStore, globalStore } from '../global';\nimport type { OnType, SendType, CancelableType } from '../types';\n\nfunction getInstanceID() : string {\n    return globalStore('instance').getOrSet('instanceID', uniqueID);\n}\n\nfunction getHelloPromise(win : CrossDomainWindowType) : ZalgoPromise<{ win : CrossDomainWindowType, domain : string }> {\n    const helloPromises = windowStore('helloPromises');\n    return helloPromises.getOrSet(win, () => new ZalgoPromise());\n}\n\nfunction listenForHello({ on } : { on : OnType }) : CancelableType {\n    return on(MESSAGE_NAME.HELLO, { domain: WILDCARD }, ({ source, origin }) => {\n        getHelloPromise(source).resolve({ win: source, domain: origin });\n        return { instanceID: getInstanceID() };\n    });\n}\n\nexport function sayHello(win : CrossDomainWindowType, { send } : { send : SendType }) : ZalgoPromise<{ win : CrossDomainWindowType, domain : string, instanceID : string }> {\n    return send(win, MESSAGE_NAME.HELLO, { instanceID: getInstanceID() }, { domain: WILDCARD, timeout: -1 })\n        .then(({ origin, data: { instanceID } }) => {\n            getHelloPromise(win).resolve({ win, domain: origin });\n            return { win, domain: origin, instanceID };\n        });\n}\n\nexport function getWindowInstanceID(win : CrossDomainWindowType, { send } : { send : SendType }) : ZalgoPromise<string> {\n    return windowStore('windowInstanceIDPromises').getOrSet(win, () => {\n        return sayHello(win, { send }).then(({ instanceID }) => instanceID);\n    });\n}\n\nexport function initHello({ on, send } : { on : OnType, send : SendType }) : CancelableType {\n    return globalStore('builtinListeners').getOrSet('helloListener', () => {\n        const listener = listenForHello({ on });\n\n        const parent = getAncestor();\n        if (parent) {\n            sayHello(parent, { send }).catch(noop);\n        }\n\n        return listener;\n    });\n}\n\nexport function awaitWindowHello(win : CrossDomainWindowType, timeout : number = 5000, name : string = 'Window') : ZalgoPromise<{ win : CrossDomainWindowType, domain : string }> {\n    let promise = getHelloPromise(win);\n\n    if (timeout !== -1) {\n        promise = promise.timeout(timeout, new Error(`${ name } did not load after ${ timeout }ms`));\n    }\n\n    return promise;\n}\n","/* @flow */\n\nimport { type CrossDomainWindowType } from 'cross-domain-utils/src';\n\nimport { windowStore } from '../global';\n\nexport function markWindowKnown(win : CrossDomainWindowType) {\n    const knownWindows = windowStore('knownWindows');\n    knownWindows.set(win, true);\n}\n\nexport function isWindowKnown(win : CrossDomainWindowType) : boolean {\n    const knownWindows = windowStore('knownWindows');\n    return knownWindows.get(win, false);\n}\n","/* @flow */\n\nexport const TYPE = {\n    FUNCTION:  ('function' : 'function'),\n    ERROR:     ('error' : 'error'),\n    PROMISE:   ('promise' : 'promise'),\n    REGEX:     ('regex' : 'regex'),\n    DATE:      ('date' : 'date'),\n    ARRAY:     ('array' : 'array'),\n    OBJECT:    ('object' : 'object'),\n    STRING:    ('string' : 'string'),\n    NUMBER:    ('number' : 'number'),\n    BOOLEAN:   ('boolean' : 'boolean'),\n    NULL:      ('null' : 'null'),\n    UNDEFINED: ('undefined' : 'undefined')\n};\n","/* @flow */\n\nimport { TYPE } from './constants';\nimport type { CustomSerializedType } from './types';\n\nexport function isSerializedType(item : mixed) : boolean {\n    return (typeof item === 'object' && item !== null && typeof item.__type__ === 'string');\n}\n\nexport function determineType(val : mixed) : $Values<typeof TYPE> | void {\n    if (typeof val === 'undefined') {\n        return TYPE.UNDEFINED;\n    }\n\n    if (val === null) {\n        return TYPE.NULL;\n    }\n\n    if (Array.isArray(val)) {\n        return TYPE.ARRAY;\n    }\n\n    if (typeof val === 'function') {\n        return TYPE.FUNCTION;\n    }\n\n    if (typeof val === 'object') {\n\n        if (val instanceof Error) {\n            return TYPE.ERROR;\n        }\n\n        if (typeof val.then === 'function') {\n            return TYPE.PROMISE;\n        }\n\n        if (Object.prototype.toString.call(val) === '[object RegExp]') {\n            return TYPE.REGEX;\n        }\n\n        if (Object.prototype.toString.call(val) === '[object Date]') {\n            return TYPE.DATE;\n        }\n\n        return TYPE.OBJECT;\n    }\n\n    if (typeof val === 'string') {\n        return TYPE.STRING;\n    }\n\n    if (typeof val === 'number') {\n        return TYPE.NUMBER;\n    }\n\n    if (typeof val === 'boolean') {\n        return TYPE.BOOLEAN;\n    }\n}\n\nexport function serializeType<T : string, V : mixed>(type : T, val : V) : CustomSerializedType<T, V> {\n    return {\n        __type__: type,\n        __val__:  val\n    };\n}\n","/* @flow */\n\nimport { TYPE } from './constants';\nimport type { Thenable, CustomSerializedType, NativeSerializedType } from './types';\nimport { determineType, isSerializedType } from './common';\nimport {\n    serializeFunction,\n    serializeError, type SerializedError,\n    serializePromise,\n    serializeRegex, type SerializedRegex,\n    serializeDate, type SerializedDate,\n    serializeArray,\n    serializeObject,\n    serializeString,\n    serializeNumber,\n    serializeBoolean,\n    serializeNull\n} from './serializers';\n\ntype NativeSerializer<V : mixed, S : mixed, T : $Values<typeof TYPE>> = (value : V, key : string) => NativeSerializedType<T, S>;\ntype CustomSerializer<V : mixed, S : mixed, T : string> = (value : V, key : string) => CustomSerializedType<T, S>;\ntype PrimitiveSerializer<V : mixed, S : mixed> = (value : V, key : string) => S;\ntype CustomOrPrimitiveSerializer<V : mixed, T : string> = CustomSerializer<V, *, T> | PrimitiveSerializer<V, *>;\ntype NativeOrCustomOrPrimitiveSerializer<V : mixed, S : mixed, T : string> = NativeSerializer<V, S, T> | CustomOrPrimitiveSerializer<V, T>;\n\ntype Serializers = {|\n    function? : CustomOrPrimitiveSerializer<Function, typeof TYPE.FUNCTION>,\n    error? : NativeOrCustomOrPrimitiveSerializer<Error, SerializedError, typeof TYPE.ERROR>,\n    promise? : CustomOrPrimitiveSerializer<Thenable, typeof TYPE.PROMISE>,\n    regex? : NativeOrCustomOrPrimitiveSerializer<RegExp, SerializedRegex, typeof TYPE.REGEX>,\n    date? : NativeOrCustomOrPrimitiveSerializer<Date, SerializedDate, typeof TYPE.DATE>,\n    array? : CustomOrPrimitiveSerializer<$ReadOnlyArray<mixed>, typeof TYPE.ARRAY>,\n    object? : CustomOrPrimitiveSerializer<Object, typeof TYPE.OBJECT>,\n    string? : CustomOrPrimitiveSerializer<string, typeof TYPE.STRING>,\n    number? : CustomOrPrimitiveSerializer<number, typeof TYPE.NUMBER>,\n    boolean? : CustomOrPrimitiveSerializer<boolean, typeof TYPE.BOOLEAN>,\n    null? : CustomOrPrimitiveSerializer<null, typeof TYPE.NULL>\n|};\n\nconst SERIALIZER : Serializers = {\n    [ TYPE.FUNCTION ]:  serializeFunction,\n    [ TYPE.ERROR ]:     serializeError,\n    [ TYPE.PROMISE ]:   serializePromise,\n    [ TYPE.REGEX ]:     serializeRegex,\n    [ TYPE.DATE ]:      serializeDate,\n    [ TYPE.ARRAY ]:     serializeArray,\n    [ TYPE.OBJECT ]:    serializeObject,\n    [ TYPE.STRING ]:    serializeString,\n    [ TYPE.NUMBER ]:    serializeNumber,\n    [ TYPE.BOOLEAN ]:   serializeBoolean,\n    [ TYPE.NULL ]:      serializeNull\n};\n\n// $FlowFixMe\nconst defaultSerializers : Serializers = {};\n\nexport function serialize<T : mixed>(obj : T, serializers : Serializers = defaultSerializers) : string {\n\n    function replacer(key) : ?mixed {\n        const val = this[key];\n\n        if (isSerializedType(this)) {\n            return val;\n        }\n        \n        const type = determineType(val);\n\n        if (!type) {\n            return val;\n        }\n\n        // $FlowFixMe\n        const serializer = serializers[type] || SERIALIZER[type];\n\n        if (!serializer) {\n            return val;\n        }\n\n        return serializer(val, key);\n    }\n\n    const result = JSON.stringify(obj, replacer);\n\n    if (typeof result === 'undefined') {\n        return TYPE.UNDEFINED;\n    }\n\n    return result;\n}\n","/* @flow */\n\nexport type SerializedFunction = void;\n\nexport function serializeFunction() : SerializedFunction {\n    // pass\n}\n\nexport function deserializeFunction() {\n    throw new Error(`Function serialization is not implemented; nothing to deserialize`);\n}\n","/* @flow */\n\nimport { serializeType } from '../common';\nimport { TYPE } from '../constants';\nimport type { NativeSerializedType } from '../types';\n\nexport type SerializedError = {|\n    message : string,\n    stack : string,\n    code : string | number | void\n|};\n\n// $FlowFixMe\nexport function serializeError({ message, stack, code } : Error) : NativeSerializedType<typeof TYPE.ERROR, SerializedError> {\n    return serializeType(TYPE.ERROR, { message, stack, code });\n}\n\nexport function deserializeError({ message, stack, code } : SerializedError) : Error {\n    const error = new Error(message);\n    // $FlowFixMe\n    error.code = code;\n    error.stack = `${ stack }\\n\\n${ error.stack }`;\n    return error;\n}\n","/* @flow */\n\nexport type SerializedPromise = void;\n\nexport function serializePromise() : SerializedPromise {\n    // pass\n}\n\nexport function deserializePromise() {\n    throw new Error(`Promise serialization is not implemented; nothing to deserialize`);\n}\n","/* @flow */\n\nimport { serializeType } from '../common';\nimport { TYPE } from '../constants';\nimport type { NativeSerializedType } from '../types';\n\nexport type SerializedRegex = string;\n\nexport function serializeRegex(val : RegExp) : NativeSerializedType<typeof TYPE.REGEX, SerializedRegex> {\n    return serializeType(TYPE.REGEX, val.source);\n}\n\nexport function deserializeRegex(val : string) : RegExp {\n    // eslint-disable-next-line security/detect-non-literal-regexp\n    return new RegExp(val);\n}\n","/* @flow */\n\nimport { serializeType } from '../common';\nimport { TYPE } from '../constants';\nimport type { NativeSerializedType } from '../types';\n\nexport type SerializedDate = string;\n\nexport function serializeDate(val : Date) : NativeSerializedType<typeof TYPE.DATE, SerializedDate> {\n    return serializeType(TYPE.DATE, val.toJSON());\n}\n\nexport function deserializeDate(val : string) : Date {\n    return new Date(val);\n}\n","/* @flow */\n\nexport type SerializedArray<T : mixed = mixed> = $ReadOnlyArray<T>;\n\nexport function serializeArray<T : mixed>(val : $ReadOnlyArray<T>) : SerializedArray<T> {\n    return val;\n}\n\nexport function deserializeArray<T : mixed>(val : SerializedArray<T>) : $ReadOnlyArray<T> {\n    return val;\n}\n","/* @flow */\n\nexport type SerializedObject = Object;\n\nexport function serializeObject(val : Object) : SerializedObject {\n    return val;\n}\n\nexport function deserializeObject(val : SerializedObject) : Object {\n    return val;\n}\n","/* @flow */\n\nexport type SerializedString = string;\n\nexport function serializeString(val : string) : SerializedString {\n    return val;\n}\n\nexport function deserializeString(val : SerializedString) : string {\n    return val;\n}\n","/* @flow */\n\nexport type SerializedNumber = number;\n\nexport function serializeNumber(val : number) : SerializedNumber {\n    return val;\n}\n\nexport function deserializeNumber(val : SerializedNumber) : number {\n    return val;\n}\n","/* @flow */\n\nexport type SerializedBoolean = boolean;\n\nexport function serializeBoolean(val : boolean) : SerializedBoolean {\n    return val;\n}\n\nexport function deserializeBoolean(val : SerializedBoolean) : boolean {\n    return val;\n}\n","/* @flow */\n\nexport type SerializedNull = null;\n\nexport function serializeNull(val : null) : SerializedNull {\n    return val;\n}\n\nexport function deserializeNull(val : SerializedNull) : null {\n    return val;\n}\n","/* @flow */\n\nimport type { Thenable } from './types';\nimport { TYPE } from './constants';\nimport { determineType, isSerializedType } from './common';\nimport {\n    deserializeFunction,\n    deserializeError, type SerializedError,\n    deserializePromise,\n    deserializeRegex, type SerializedRegex,\n    deserializeDate, type SerializedDate,\n    deserializeArray,\n    deserializeObject,\n    deserializeString,\n    deserializeNumber,\n    deserializeBoolean,\n    deserializeNull\n} from './serializers';\n\ntype Deserializer<V : mixed, S : mixed> = (serializedValue : S, key : string) => V;\ntype PrimitiveDeserializer<V, S = V> = (serializedValue : S, key : string) => V;\n\ntype Deserializers = {\n    function? : Deserializer<Function, *>,\n    error? : Deserializer<Error, SerializedError>,\n    promise? : Deserializer<Thenable, *>,\n    regex? : Deserializer<RegExp, SerializedRegex>,\n    date? : Deserializer<Date, SerializedDate>,\n    array? : PrimitiveDeserializer<$ReadOnlyArray<mixed>>,\n    object? : PrimitiveDeserializer<Object>,\n    string? : PrimitiveDeserializer<string>,\n    number? : PrimitiveDeserializer<number>,\n    boolean? : PrimitiveDeserializer<boolean>,\n    null? : PrimitiveDeserializer<null>,\n    [string] : Deserializer<mixed, *>\n};\n\n// $FlowFixMe\nconst DESERIALIZER : Deserializers = {\n    [ TYPE.FUNCTION ]:  deserializeFunction,\n    [ TYPE.ERROR ]:     deserializeError,\n    [ TYPE.PROMISE ]:   deserializePromise,\n    [ TYPE.REGEX ]:     deserializeRegex,\n    [ TYPE.DATE ]:      deserializeDate,\n    [ TYPE.ARRAY ]:     deserializeArray,\n    [ TYPE.OBJECT ]:    deserializeObject,\n    [ TYPE.STRING ]:    deserializeString,\n    [ TYPE.NUMBER ]:    deserializeNumber,\n    [ TYPE.BOOLEAN ]:   deserializeBoolean,\n    [ TYPE.NULL ]:      deserializeNull\n};\n\n// $FlowFixMe\nconst defaultDeserializers : Deserializers = {};\n\nexport function deserialize<T : mixed | null | void>(str : string, deserializers : Deserializers = defaultDeserializers) : T {\n    if (str === TYPE.UNDEFINED) {\n        // $FlowFixMe\n        return;\n    }\n\n    function replacer(key, val) : ?mixed {\n        if (isSerializedType(this)) {\n            return val;\n        }\n\n        let type;\n        let value;\n\n        if (isSerializedType(val)) {\n            type = val.__type__;\n            value = val.__val__;\n        } else {\n            type = determineType(val);\n            value = val;\n        }\n\n        if (!type) {\n            return value;\n        }\n\n        // $FlowFixMe\n        const deserializer = deserializers[type] || DESERIALIZER[type];\n\n        if (!deserializer) {\n            return value;\n        }\n\n        return deserializer(value, key);\n    }\n\n    return JSON.parse(str, replacer);\n}\n","/* @flow */\n\nimport { ZalgoPromise } from 'zalgo-promise/src';\nimport { getDomain, isSameDomain, isOpener, isSameTopWindow, matchDomain, getUserAgent, getDomainFromUrl, type CrossDomainWindowType } from 'cross-domain-utils/src';\nimport { noop } from 'belter/src';\n\nimport { BRIDGE_NAME_PREFIX } from '../conf';\nimport { windowStore } from '../global';\n\nexport function needsBridgeForBrowser() : boolean {\n\n    if (getUserAgent(window).match(/MSIE|trident|edge\\/12|edge\\/13/i)) {\n        return true;\n    }\n\n    return false;\n}\n\nexport function needsBridgeForWin(win : CrossDomainWindowType) : boolean {\n\n    if (!isSameTopWindow(window, win)) {\n        return true;\n    }\n\n    return false;\n}\n\nexport function needsBridgeForDomain(domain : ?string, win : ?CrossDomainWindowType) : boolean {\n\n    if (domain) {\n        if (getDomain() !== getDomainFromUrl(domain)) {\n            return true;\n        }\n    } else if (win) {\n        if (!isSameDomain(win))  {\n            return true;\n        }\n    }\n\n    return false;\n}\n\nexport function needsBridge({ win, domain } : { win? : CrossDomainWindowType, domain? : string }) : boolean {\n\n    if (!needsBridgeForBrowser()) {\n        return false;\n    }\n\n    if (domain && !needsBridgeForDomain(domain, win)) {\n        return false;\n    }\n\n    if (win && !needsBridgeForWin(win)) {\n        return false;\n    }\n\n    return true;\n}\n\nexport function getBridgeName(domain : string) : string {\n\n    domain = domain || getDomainFromUrl(domain);\n\n    const sanitizedDomain = domain.replace(/[^a-zA-Z0-9]+/g, '_');\n\n    const id = `${ BRIDGE_NAME_PREFIX }_${ sanitizedDomain }`;\n\n    return id;\n}\n\nexport function isBridge() : boolean {\n    return Boolean(window.name && window.name === getBridgeName(getDomain()));\n}\n\nexport const documentBodyReady = new ZalgoPromise(resolve => {\n\n    if (window.document && window.document.body) {\n        return resolve(window.document.body);\n    }\n\n    const interval = setInterval(() => {\n        if (window.document && window.document.body) {\n            clearInterval(interval);\n            return resolve(window.document.body);\n        }\n    }, 10);\n});\n\nexport function registerRemoteWindow(win : CrossDomainWindowType) {\n    const remoteWindowPromises = windowStore('remoteWindowPromises');\n    remoteWindowPromises.getOrSet(win, () => new ZalgoPromise());\n}\n\nexport function findRemoteWindow(win : CrossDomainWindowType) : ZalgoPromise<(remoteWin : CrossDomainWindowType, message : string, remoteDomain : string) => void> {\n    const remoteWindowPromises = windowStore('remoteWindowPromises');\n    const remoteWinPromise = remoteWindowPromises.get(win);\n\n    if (!remoteWinPromise) {\n        throw new Error(`Remote window promise not found`);\n    }\n\n    return remoteWinPromise;\n}\n\ntype SendMessageType = {|\n    (string) : void,\n    fireAndForget : (string) => void\n|};\n\nexport function registerRemoteSendMessage(win : CrossDomainWindowType, domain : string, sendMessage : SendMessageType) {\n    const sendMessageWrapper = (remoteWin : CrossDomainWindowType, remoteDomain : string, message : string) => {\n        if (remoteWin !== win) {\n            throw new Error(`Remote window does not match window`);\n        }\n\n        if (!matchDomain(remoteDomain, domain)) {\n            throw new Error(`Remote domain ${ remoteDomain } does not match domain ${ domain }`);\n        }\n\n        sendMessage.fireAndForget(message);\n    };\n\n    findRemoteWindow(win).resolve(sendMessageWrapper);\n}\n\nexport function rejectRemoteSendMessage(win : CrossDomainWindowType, err : Error) {\n    findRemoteWindow(win).reject(err).catch(noop);\n}\n\nexport function sendBridgeMessage(win : CrossDomainWindowType, domain : string, message : string) : ZalgoPromise<void> {\n\n    const messagingChild  = isOpener(window, win);\n    const messagingParent = isOpener(win, window);\n\n    if (!messagingChild && !messagingParent) {\n        throw new Error(`Can only send messages to and from parent and popup windows`);\n    }\n\n    return findRemoteWindow(win).then(sendMessage => {\n        return sendMessage(win, domain, message);\n    });\n}\n","/* @flow */\n\nimport { ZalgoPromise } from 'zalgo-promise/src';\nimport { getDomain, getFrameByName, isWindowClosed, getDomainFromUrl, normalizeMockUrl, type CrossDomainWindowType } from 'cross-domain-utils/src';\n\nimport { BRIDGE_TIMEOUT, MESSAGE_NAME } from '../conf';\nimport { awaitWindowHello } from '../lib';\nimport { windowStore, globalStore } from '../global';\nimport type { OnType, SendType, ReceiveMessageType } from '../types';\n\nimport { getBridgeName, documentBodyReady, registerRemoteSendMessage, registerRemoteWindow } from './common';\n\nexport function listenForOpenTunnel({ on, send, receiveMessage } : { on : OnType, send : SendType, receiveMessage : ReceiveMessageType }) {\n    const popupWindowsByName = globalStore('popupWindowsByName');\n\n    on(MESSAGE_NAME.OPEN_TUNNEL, ({ source, origin, data }) => {\n        const bridgePromise = globalStore('bridges').get(origin);\n\n        if (!bridgePromise) {\n            throw new Error(`Can not find bridge promise for domain ${ origin }`);\n        }\n\n        return bridgePromise.then(bridge => {\n\n            // $FlowFixMe\n            if (source !== bridge) {\n                // $FlowFixMe\n                throw new Error(`Message source does not matched registered bridge for domain ${ origin }`);\n            }\n\n            if (!data.name) {\n                throw new Error(`Register window expected to be passed window name`);\n            }\n\n            if (!data.sendMessage) {\n                throw new Error(`Register window expected to be passed sendMessage method`);\n            }\n\n            if (!popupWindowsByName.has(data.name)) {\n                throw new Error(`Window with name ${ data.name } does not exist, or was not opened by this window`);\n            }\n\n            // $FlowFixMe\n            if (!popupWindowsByName.get(data.name).domain) {\n                throw new Error(`We do not have a registered domain for window ${ data.name }`);\n            }\n\n            // $FlowFixMe\n            if (popupWindowsByName.get(data.name).domain !== origin) {\n                // $FlowFixMe\n                throw new Error(`Message origin ${ origin } does not matched registered window origin ${ popupWindowsByName.get(data.name).domain }`);\n            }\n\n            // $FlowFixMe\n            registerRemoteSendMessage(popupWindowsByName.get(data.name).win, origin, data.sendMessage);\n\n            return {\n                sendMessage(message) {\n\n                    if (!window || window.closed) {\n                        return;\n                    }\n\n                    const winDetails = popupWindowsByName.get(data.name);\n\n                    if (!winDetails) {\n                        return;\n                    }\n\n                    try {\n                        receiveMessage({\n                            data:   message,\n                            origin: winDetails.domain,\n                            source: winDetails.win\n                        }, { on, send });\n                    } catch (err) {\n                        ZalgoPromise.reject(err);\n                    }\n                }\n            };\n        });\n    });\n}\n\nfunction openBridgeFrame(name : string, url : string) : HTMLIFrameElement {\n\n    const iframe = document.createElement(`iframe`);\n\n    iframe.setAttribute(`name`, name);\n    iframe.setAttribute(`id`,   name);\n\n    iframe.setAttribute(`style`, `display: none; margin: 0; padding: 0; border: 0px none; overflow: hidden;`);\n    iframe.setAttribute(`frameborder`, `0`);\n    iframe.setAttribute(`border`, `0`);\n    iframe.setAttribute(`scrolling`, `no`);\n    iframe.setAttribute(`allowTransparency`, `true`);\n\n    iframe.setAttribute(`tabindex`, `-1`);\n    iframe.setAttribute(`hidden`, `true`);\n    iframe.setAttribute(`title`, ``);\n    iframe.setAttribute(`role`, `presentation`);\n\n    iframe.src = url;\n\n    return iframe;\n}\n\nexport function hasBridge(url : string, domain : string) : boolean {\n    const bridges = globalStore('bridges');\n    return bridges.has(domain || getDomainFromUrl(url));\n}\n\nexport function openBridge(url : string, domain : string) : ZalgoPromise<CrossDomainWindowType> {\n    const bridges = globalStore('bridges');\n    const bridgeFrames = globalStore('bridgeFrames');\n    \n    domain = domain || getDomainFromUrl(url);\n    \n    return bridges.getOrSet(domain, () => ZalgoPromise.try(() => {\n\n        if (getDomain() === domain) {\n            throw new Error(`Can not open bridge on the same domain as current domain: ${ domain }`);\n        }\n\n        const name  = getBridgeName(domain);\n        const frame = getFrameByName(window, name);\n\n        if (frame) {\n            throw new Error(`Frame with name ${ name } already exists on page`);\n        }\n\n        const iframe = openBridgeFrame(name, url);\n        bridgeFrames.set(domain, iframe);\n\n        return documentBodyReady.then(body => {\n\n            body.appendChild(iframe);\n            const bridge = iframe.contentWindow;\n\n            return new ZalgoPromise((resolve, reject) => {\n\n                iframe.addEventListener('load', resolve);\n                iframe.addEventListener('error', reject);\n\n            }).then(() => {\n\n                return awaitWindowHello(bridge, BRIDGE_TIMEOUT, `Bridge ${ url }`);\n\n            }).then(() => {\n\n                return bridge;\n            });\n        });\n    }));\n}\n\ntype WinDetails = {|\n    win : CrossDomainWindowType,\n    domain? : ?string,\n    name? : ?string\n|};\n\nexport function linkWindow({ win, name, domain } : WinDetails) : WinDetails {\n    const popupWindowsByName = globalStore('popupWindowsByName');\n    const popupWindowsByWin = windowStore('popupWindowsByWin');\n\n    for (const winName of popupWindowsByName.keys()) {\n        // $FlowFixMe\n        if (isWindowClosed(popupWindowsByName.get(winName).win)) {\n            popupWindowsByName.del(winName);\n        }\n    }\n\n    const details : WinDetails = popupWindowsByWin.getOrSet(win, () => {\n        if (!name) {\n            return { win };\n        }\n        \n        return popupWindowsByName.getOrSet(name, () => {\n            return { win, name };\n        });\n    });\n\n    if (details.win && details.win !== win) {\n        throw new Error(`Different window already linked for window: ${ name || 'undefined' }`);\n    }\n\n    if (name) {\n        if (details.name && details.name !== name) {\n            throw new Error(`Different window already linked for name ${ name }: ${ details.name }`);\n        }\n\n        details.name = name;\n        popupWindowsByName.set(name, details);\n    }\n\n    if (domain) {\n        details.domain = domain;\n        registerRemoteWindow(win);\n    }\n\n    popupWindowsByWin.set(win, details);\n    \n    return details;\n}\n\nexport function linkUrl(win : CrossDomainWindowType, url : string) {\n    linkWindow({ win, domain: getDomainFromUrl(url) });\n}\n\nexport function listenForWindowOpen() {\n    const windowOpen = window.open;\n\n    window.open = function windowOpenWrapper(url : string, name : string, options : string, last : mixed) : mixed {\n        const win = windowOpen.call(this, normalizeMockUrl(url), name, options, last);\n    \n        if (!win) {\n            return win;\n        }\n    \n        linkWindow({ win, name, domain: url ? getDomainFromUrl(url) : null });\n    \n        return win;\n    };\n}\n\nexport function destroyBridges() {\n    const bridges = globalStore('bridges');\n    const bridgeFrames = globalStore('bridgeFrames');\n\n    for (const domain of bridgeFrames.keys()) {\n        const frame = bridgeFrames.get(domain);\n        if (frame && frame.parentNode) {\n            frame.parentNode.removeChild(frame);\n        }\n    }\n    bridgeFrames.reset();\n    bridges.reset();\n}\n","/* @flow */\n\nimport type { OnType, SendType, ReceiveMessageType } from '../types';\n\nimport { listenForWindowOpen, listenForOpenTunnel } from './parent';\nimport { setupOpenTunnelToParent } from './bridge';\nimport { openTunnelToOpener } from './child';\n\nexport function setupBridge({ on, send, receiveMessage } : { on : OnType, send : SendType, receiveMessage : ReceiveMessageType }) {\n    listenForWindowOpen();\n    listenForOpenTunnel({ on, send, receiveMessage });\n    setupOpenTunnelToParent({ on, send });\n    openTunnelToOpener({ on, send, receiveMessage });\n}\n","/* @flow */\n\nimport { type ZalgoPromise } from 'zalgo-promise/src';\nimport { getParent, isWindowClosed, type CrossDomainWindowType } from 'cross-domain-utils/src';\nimport { noop, uniqueID } from 'belter/src';\n\nimport { MESSAGE_NAME, WILDCARD } from '../conf';\nimport { getGlobal, globalStore } from '../global';\nimport type { SendType, ResponseMessageEvent } from '../types';\n\nfunction cleanTunnelWindows() {\n    const tunnelWindows = globalStore('tunnelWindows');\n\n    for (const key of tunnelWindows.keys()) {\n        const tunnelWindow = tunnelWindows[key];\n\n        try {\n            noop(tunnelWindow.source);\n        } catch (err) {\n            tunnelWindows.del(key);\n            continue;\n        }\n\n        if (isWindowClosed(tunnelWindow.source)) {\n            tunnelWindows.del(key);\n        }\n    }\n}\n\ntype TunnelWindowDataType = {|\n    name : string,\n    source : CrossDomainWindowType,\n    canary : () => void,\n    sendMessage : (message : string) => void\n|};\n\nfunction addTunnelWindow({ name, source, canary, sendMessage } : TunnelWindowDataType) : string {\n    cleanTunnelWindows();\n    const id = uniqueID();\n    const tunnelWindows = globalStore('tunnelWindows');\n    tunnelWindows.set(id, { name, source, canary, sendMessage });\n    return id;\n}\n\nexport function setupOpenTunnelToParent({ send } : { send : SendType }) {\n    getGlobal(window).openTunnelToParent = function openTunnelToParent({ name, source, canary, sendMessage } : TunnelWindowDataType) : ZalgoPromise<ResponseMessageEvent> {\n\n        const tunnelWindows = globalStore('tunnelWindows');\n        const parentWindow = getParent(window);\n    \n        if (!parentWindow) {\n            throw new Error(`No parent window found to open tunnel to`);\n        }\n    \n        const id = addTunnelWindow({ name, source, canary, sendMessage });\n    \n        return send(parentWindow, MESSAGE_NAME.OPEN_TUNNEL, {\n    \n            name,\n    \n            sendMessage() {\n    \n                const tunnelWindow = tunnelWindows.get(id);\n    \n                try {\n                    // IE gets antsy if you try to even reference a closed window\n                    noop(tunnelWindow && tunnelWindow.source);\n                } catch (err) {\n                    tunnelWindows.del(id);\n                    return;\n                }\n    \n                if (!tunnelWindow || !tunnelWindow.source || isWindowClosed(tunnelWindow.source)) {\n                    return;\n                }\n    \n                try {\n                    tunnelWindow.canary();\n                } catch (err) {\n                    return;\n                }\n    \n                tunnelWindow.sendMessage.apply(this, arguments);\n            }\n    \n        }, { domain: WILDCARD });\n    };\n}\n","/* @flow */\n\nimport { ZalgoPromise } from 'zalgo-promise/src';\nimport { isSameDomain, getOpener, getDomain, getFrameByName, type CrossDomainWindowType } from 'cross-domain-utils/src';\nimport { noop } from 'belter/src';\n\nimport { getGlobal, windowStore } from '../global';\nimport type { OnType, SendType, ReceiveMessageType } from '../types';\n\nimport { needsBridge, registerRemoteWindow, rejectRemoteSendMessage, registerRemoteSendMessage, getBridgeName } from './common';\n\nfunction awaitRemoteBridgeForWindow (win : CrossDomainWindowType) : ZalgoPromise<?CrossDomainWindowType> {\n    return windowStore('remoteBridgeAwaiters').getOrSet(win, () => {\n        return ZalgoPromise.try(() => {\n            const frame = getFrameByName(win, getBridgeName(getDomain()));\n\n            if (!frame) {\n                return;\n            }\n\n            // $FlowFixMe\n            if (isSameDomain(frame) && isSameDomain(frame) && getGlobal(frame)) {\n                return frame;\n            }\n\n            return new ZalgoPromise(resolve => {\n\n                let interval;\n                let timeout; // eslint-disable-line prefer-const\n\n                interval = setInterval(() => { // eslint-disable-line prefer-const\n                    // $FlowFixMe\n                    if (frame && isSameDomain(frame) && getGlobal(frame)) {\n                        clearInterval(interval);\n                        clearTimeout(timeout);\n                        return resolve(frame);\n                    }\n                }, 100);\n\n                timeout = setTimeout(() => {\n                    clearInterval(interval);\n                    return resolve();\n                }, 2000);\n            });\n        });\n    });\n}\n\nexport function openTunnelToOpener({ on, send, receiveMessage } : { on : OnType, send : SendType, receiveMessage : ReceiveMessageType }) : ZalgoPromise<void> {\n    return ZalgoPromise.try(() => {\n        const opener = getOpener(window);\n        \n        if (!opener || !needsBridge({ win: opener })) {\n            return;\n        }\n\n        registerRemoteWindow(opener);\n\n        return awaitRemoteBridgeForWindow(opener).then(bridge => {\n\n            if (!bridge) {\n                return rejectRemoteSendMessage(opener, new Error(`Can not register with opener: no bridge found in opener`));\n            }\n\n            if (!window.name) {\n                return rejectRemoteSendMessage(opener, new Error(`Can not register with opener: window does not have a name`));\n            }\n\n            // $FlowFixMe\n            return getGlobal(bridge).openTunnelToParent({\n\n                name: window.name,\n\n                source: window,\n\n                canary() {\n                    // pass\n                },\n\n                sendMessage(message) {\n\n                    try {\n                        noop(window);\n                    } catch (err) {\n                        return;\n                    }\n\n                    if (!window || window.closed) {\n                        return;\n                    }\n\n                    try {\n                        receiveMessage({\n                            data:   message,\n                            origin: this.origin,\n                            source: this.source\n                        }, { on, send });\n                    } catch (err) {\n                        ZalgoPromise.reject(err);\n                    }\n                }\n\n            }).then(({ source, origin, data }) => {\n\n                if (source !== opener) {\n                    throw new Error(`Source does not match opener`);\n                }\n\n                registerRemoteSendMessage(source, origin, data.sendMessage);\n\n            }).catch(err => {\n\n                rejectRemoteSendMessage(opener, err);\n                throw err;\n            });\n        });\n    });\n}\n","/* @flow */\n\nimport { isSameDomain, isWindowClosed, type CrossDomainWindowType, closeWindow,\n    type DomainMatcher, getOpener, WINDOW_TYPE, isWindow, assertSameDomain } from 'cross-domain-utils/src';\nimport { ZalgoPromise } from 'zalgo-promise/src';\nimport { uniqueID, memoizePromise } from 'belter/src';\nimport { serializeType, type CustomSerializedType } from 'universal-serialize/src';\n\nimport { SERIALIZATION_TYPE } from '../conf';\nimport { windowStore, globalStore } from '../global';\nimport { getWindowInstanceID } from '../lib';\nimport { linkWindow } from '../bridge';\nimport type { OnType, SendType } from '../types';\n\nfunction cleanupProxyWindows() {\n    const idToProxyWindow = globalStore('idToProxyWindow');\n    for (const id of idToProxyWindow.keys()) {\n        // $FlowFixMe\n        if (idToProxyWindow.get(id).shouldClean()) {\n            idToProxyWindow.del(id);\n        }\n    }\n}\n\ntype SerializedProxyWindow = {|\n    id : string,\n    type : $Values<typeof WINDOW_TYPE>,\n    close : () => ZalgoPromise<void>,\n    focus : () => ZalgoPromise<void>,\n    isClosed : () => ZalgoPromise<boolean>,\n    setLocation : (string) => ZalgoPromise<void>,\n    getName : () => ZalgoPromise<?string>,\n    setName : (string) => ZalgoPromise<void>,\n    getInstanceID : () => ZalgoPromise<string>\n|};\n\nfunction getSerializedWindow(id : string, win : CrossDomainWindowType, { send } : { send : SendType }) : SerializedProxyWindow {\n    let windowName;\n    \n    return {\n        id,\n        type:          getOpener(win) ? WINDOW_TYPE.POPUP : WINDOW_TYPE.IFRAME,\n        getInstanceID: memoizePromise(() => getWindowInstanceID(win, { send })),\n        close:         () => ZalgoPromise.try(() => {\n            closeWindow(win);\n        }),\n        getName: () => ZalgoPromise.try(() => {\n            if (isWindowClosed(win)) {\n                return;\n            }\n\n            return windowName;\n        }),\n        focus:   () => ZalgoPromise.try(() => {\n            win.focus();\n        }),\n        isClosed: () => ZalgoPromise.try(() => {\n            return isWindowClosed(win);\n        }),\n        setLocation: (href) => ZalgoPromise.try(() => {\n            if (isSameDomain(win)) {\n                try {\n                    if (win.location && typeof win.location.replace === 'function') {\n                        // $FlowFixMe\n                        win.location.replace(href);\n                        return;\n                    }\n                } catch (err) {\n                    // pass\n                }\n            }\n\n            win.location = href;\n        }),\n        setName: (name) => ZalgoPromise.try(() => {\n            if (__POST_ROBOT__.__IE_POPUP_SUPPORT__) {\n                linkWindow({ win, name });\n            }\n\n            win = assertSameDomain(win);\n\n            win.name = name;\n\n            if (win.frameElement) {\n                win.frameElement.setAttribute('name', name);\n            }\n\n            windowName = name;\n        })\n    };\n}\n\nexport class ProxyWindow {\n\n    isProxyWindow : true = true\n    serializedWindow : SerializedProxyWindow\n    actualWindow : CrossDomainWindowType\n    actualWindowPromise : ZalgoPromise<CrossDomainWindowType>\n    send : SendType\n    name : string\n\n    constructor(serializedWindow : SerializedProxyWindow, actualWindow? : ?CrossDomainWindowType, { send } : { send : SendType }) {\n        this.serializedWindow = serializedWindow;\n        this.actualWindowPromise = new ZalgoPromise();\n        this.send = send;\n        if (actualWindow) {\n            this.setWindow(actualWindow);\n        }\n    }\n\n    getType() : $Values<typeof WINDOW_TYPE> {\n        return this.serializedWindow.type;\n    }\n\n    isPopup() : boolean {\n        return this.getType() === WINDOW_TYPE.POPUP;\n    }\n\n    isIframe() : boolean {\n        return this.getType() === WINDOW_TYPE.IFRAME;\n    }\n\n    setLocation(href : string) : ZalgoPromise<ProxyWindow> {\n        return this.serializedWindow.setLocation(href).then(() => this);\n    }\n\n    setName(name : string) : ZalgoPromise<ProxyWindow> {\n        return this.serializedWindow.setName(name).then(() => this);\n    }\n\n    close() : ZalgoPromise<ProxyWindow> {\n        return this.serializedWindow.close().then(() => this);\n    }\n\n    focus() : ZalgoPromise<ProxyWindow> {\n        return ZalgoPromise.try(() => {\n            return ZalgoPromise.all([\n                this.isPopup() && this.serializedWindow.getName().then(name => {\n                    if (name) {\n                        window.open('', name);\n                    }\n                }),\n                this.serializedWindow.focus()\n            ]);\n        }).then(() => this);\n    }\n\n    isClosed() : ZalgoPromise<boolean> {\n        return this.serializedWindow.isClosed();\n    }\n\n    getWindow() : ?CrossDomainWindowType {\n        return this.actualWindow;\n    }\n\n    setWindow(win : CrossDomainWindowType) {\n        this.actualWindow = win;\n        this.serializedWindow = getSerializedWindow(this.serializedWindow.id, win, { send: this.send });\n        this.actualWindowPromise.resolve(win);\n    }\n\n    awaitWindow() : ZalgoPromise<CrossDomainWindowType> {\n        return this.actualWindowPromise;\n    }\n\n    matchWindow(win : CrossDomainWindowType) : ZalgoPromise<boolean> {\n        return ZalgoPromise.try(() => {\n            if (this.actualWindow) {\n                return win === this.actualWindow;\n            }\n            \n            return ZalgoPromise.hash({\n                proxyInstanceID:       this.getInstanceID(),\n                knownWindowInstanceID: getWindowInstanceID(win, { send: this.send })\n            }).then(({ proxyInstanceID, knownWindowInstanceID }) => {\n                const match = proxyInstanceID === knownWindowInstanceID;\n\n                if (match) {\n                    this.setWindow(win);\n                }\n\n                return match;\n            });\n        });\n    }\n\n    unwrap() : CrossDomainWindowType | ProxyWindow {\n        return this.actualWindow || this;\n    }\n\n    getInstanceID() : ZalgoPromise<string> {\n        return this.serializedWindow.getInstanceID();\n    }\n\n    serialize() : SerializedProxyWindow {\n        return this.serializedWindow;\n    }\n\n    shouldClean() : boolean {\n        return this.actualWindow && isWindowClosed(this.actualWindow);\n    }\n\n    static unwrap(win : CrossDomainWindowType | ProxyWindow) : CrossDomainWindowType | ProxyWindow {\n        return ProxyWindow.isProxyWindow(win)\n            // $FlowFixMe\n            ? win.unwrap()\n            : win;\n    }\n\n    static serialize(win : CrossDomainWindowType | ProxyWindow, { send } : { send : SendType }) : SerializedProxyWindow {\n        cleanupProxyWindows();\n\n        return ProxyWindow.toProxyWindow(win, { send }).serialize();\n    }\n\n    static deserialize(serializedWindow : SerializedProxyWindow, { on, send } : { on : OnType, send : SendType }) : ProxyWindow {\n        cleanupProxyWindows();\n        \n        return globalStore('idToProxyWindow').getOrSet(serializedWindow.id, () => {\n            return new ProxyWindow(serializedWindow, null, { on, send });\n        });\n    }\n\n    static isProxyWindow(obj : CrossDomainWindowType | ProxyWindow) : boolean {\n        // $FlowFixMe\n        return Boolean(obj && !isWindow(obj) && obj.isProxyWindow);\n    }\n\n    static toProxyWindow(win : CrossDomainWindowType | ProxyWindow, { send } : { send : SendType }) : ProxyWindow {\n        cleanupProxyWindows();\n\n        if (ProxyWindow.isProxyWindow(win)) {\n            // $FlowFixMe\n            return win;\n        }\n\n        // $FlowFixMe\n        const realWin : CrossDomainWindowType = win;\n\n        // $FlowFixMe\n        return windowStore('winToProxyWindow').getOrSet(win, () => {\n            const id = uniqueID();\n            const serializedWindow = getSerializedWindow(id, realWin, { send });\n            const proxyWindow = new ProxyWindow(serializedWindow, realWin, { send });\n\n            return globalStore('idToProxyWindow').set(id, proxyWindow);\n        });\n    }\n}\n\nexport type SerializedWindow = CustomSerializedType<typeof SERIALIZATION_TYPE.CROSS_DOMAIN_WINDOW, SerializedProxyWindow>;\n\nexport function serializeWindow(destination : CrossDomainWindowType | ProxyWindow, domain : DomainMatcher, win : CrossDomainWindowType, { send } : { send : SendType }) : SerializedWindow {\n    return serializeType(SERIALIZATION_TYPE.CROSS_DOMAIN_WINDOW, ProxyWindow.serialize(win, { send }));\n}\n\nexport function deserializeWindow(source : CrossDomainWindowType | ProxyWindow, origin : string, win : SerializedProxyWindow, { on, send } : { on : OnType, send : SendType }) : ProxyWindow {\n    return ProxyWindow.deserialize(win, { on, send });\n}\n","/* @flow */\n\nimport { matchDomain, getDomain, type CrossDomainWindowType, type DomainMatcher } from 'cross-domain-utils/src';\nimport { ZalgoPromise } from 'zalgo-promise/src';\nimport { uniqueID, isRegex } from 'belter/src';\nimport { serializeType, type CustomSerializedType } from 'universal-serialize/src';\n\nimport { MESSAGE_NAME, WILDCARD, SERIALIZATION_TYPE } from '../conf';\nimport { windowStore, globalStore } from '../global';\nimport type { OnType, SendType, CancelableType } from '../types';\n\nimport { ProxyWindow } from './window';\n\ntype StoredMethod = {|\n    name : string,\n    domain : DomainMatcher,\n    val : Function,\n    source : CrossDomainWindowType | ProxyWindow\n|};\n\nfunction addMethod(id : string, val : Function, name : string, source : CrossDomainWindowType | ProxyWindow, domain : DomainMatcher) {\n    const methodStore = windowStore('methodStore');\n    const proxyWindowMethods = globalStore('proxyWindowMethods');\n    \n    if (ProxyWindow.isProxyWindow(source)) {\n        proxyWindowMethods.set(id, { val, name, domain, source });\n    } else {\n        proxyWindowMethods.del(id);\n        // $FlowFixMe\n        const methods = methodStore.getOrSet(source, () => ({}));\n        methods[id] = { domain, name, val, source };\n    }\n}\n\nfunction lookupMethod(source : CrossDomainWindowType, id : string) : ?StoredMethod {\n    const methodStore = windowStore('methodStore');\n    const proxyWindowMethods = globalStore('proxyWindowMethods');\n    const methods = methodStore.getOrSet(source, () => ({}));\n    return methods[id] || proxyWindowMethods.get(id);\n}\n\nfunction listenForFunctionCalls({ on } : { on : OnType }) : CancelableType {\n    return globalStore('builtinListeners').getOrSet('functionCalls', () => {\n        return on(MESSAGE_NAME.METHOD, { domain: WILDCARD }, ({ source, origin, data } : { source : CrossDomainWindowType, origin : string, data : Object }) => {\n            const { id, name } = data;\n\n            const meth = lookupMethod(source, id);\n    \n            if (!meth) {\n                throw new Error(`Could not find method '${ data.name }' with id: ${ data.id } in ${ getDomain(window) }`);\n            }\n\n            const { source: methodSource, domain, val } = meth;\n            \n            return ZalgoPromise.try(() => {\n                if (!matchDomain(domain, origin)) {\n                    // $FlowFixMe\n                    throw new Error(`Method '${ data.name }' domain ${ JSON.stringify(isRegex(meth.domain) ? meth.domain.source : meth.domain) } does not match origin ${ origin } in ${ getDomain(window) }`);\n                }\n                \n                if (ProxyWindow.isProxyWindow(methodSource)) {\n                    // $FlowFixMe\n                    return methodSource.matchWindow(source).then(match => {\n                        if (!match) {\n                            throw new Error(`Method call '${ data.name }' failed - proxy window does not match source in ${ getDomain(window) }`);\n                        }\n                    });\n                }\n            }).then(() => {\n                return val.apply({ source, origin }, data.args);\n            }, err => {\n                return ZalgoPromise.try(() => {\n                    if (val.onError) {\n                        return val.onError(err);\n                    }\n                }).then(() => {\n                    // $FlowFixMe\n                    if (err.stack) {\n                        // $FlowFixMe\n                        err.stack = `Remote call to ${ name }()\\n\\n${ err.stack }`;\n                    }\n\n                    throw err;\n                });\n            }).then(result => {\n                return { result, id, name };\n            });\n        });\n    });\n}\n\nexport type SerializedFunction = CustomSerializedType<typeof SERIALIZATION_TYPE.CROSS_DOMAIN_FUNCTION, {\n    id : string,\n    name : string\n}>;\n\n// eslint-disable-next-line flowtype/require-exact-type\ntype SerializableFunction<T> = {\n    () : ZalgoPromise<T> | T,\n    __id__? : string,\n    __name__? : string\n};\n\nexport function serializeFunction<T>(destination : CrossDomainWindowType | ProxyWindow, domain : DomainMatcher, val : SerializableFunction<T>, key : string, { on } : { on : OnType }) : SerializedFunction {\n    listenForFunctionCalls({ on });\n    \n    const id = val.__id__ || uniqueID();\n    destination = ProxyWindow.unwrap(destination);\n    const name = val.__name__ || val.name || key;\n\n    if (ProxyWindow.isProxyWindow(destination)) {\n        addMethod(id, val, name, destination, domain);\n\n        // $FlowFixMe\n        destination.awaitWindow().then(win => {\n            addMethod(id, val, name, win, domain);\n        });\n    } else {\n        addMethod(id, val, name, destination, domain);\n    }\n\n    return serializeType(SERIALIZATION_TYPE.CROSS_DOMAIN_FUNCTION, { id, name });\n}\n\nexport function deserializeFunction<T>(source : CrossDomainWindowType | ProxyWindow, origin : string, { id, name } : { id : string, name : string }, { send } : { send : SendType }) : (...args : $ReadOnlyArray<mixed>) => ZalgoPromise<T> {\n    const getDeserializedFunction = (opts? : Object = {}) => {\n        function crossDomainFunctionWrapper<X : mixed>() : ZalgoPromise<X> {\n            let originalStack;\n    \n            if (__DEBUG__) {\n                originalStack = (new Error(`Original call to ${ name }():`)).stack;\n            }\n    \n            return ProxyWindow.toProxyWindow(source, { send }).awaitWindow().then(win => {\n                const meth = lookupMethod(win, id);\n    \n                if (meth && meth.val !== crossDomainFunctionWrapper) {\n                    return meth.val.apply({ source: window, origin: getDomain() }, arguments);\n                } else {\n                    // $FlowFixMe\n                    const options = { domain: origin, fireAndForget: opts.fireAndForget };\n                    const args = Array.prototype.slice.call(arguments);\n\n                    return send(win, MESSAGE_NAME.METHOD, { id, name, args }, options)\n                        .then(res => {\n                            if (!opts.fireAndForget) {\n                                return res.data.result;\n                            }\n                        });\n                }\n    \n            }).catch(err => {\n                // $FlowFixMe\n                if (__DEBUG__ && originalStack && err.stack) {\n                    // $FlowFixMe\n                    err.stack = `${ err.stack }\\n\\n${ originalStack }`;\n                }\n                throw err;\n            });\n        }\n\n        crossDomainFunctionWrapper.__name__ = name;\n        crossDomainFunctionWrapper.__origin__ = origin;\n        crossDomainFunctionWrapper.__source__ = source;\n        crossDomainFunctionWrapper.__id__ = id;\n\n        crossDomainFunctionWrapper.origin = origin;\n\n        return crossDomainFunctionWrapper;\n    };\n\n    const crossDomainFunctionWrapper = getDeserializedFunction();\n    crossDomainFunctionWrapper.fireAndForget = getDeserializedFunction({ fireAndForget: true });\n\n    return crossDomainFunctionWrapper;\n}\n","/* @flow */\n\nimport { type CrossDomainWindowType, isWindow, type DomainMatcher } from 'cross-domain-utils/src';\nimport { TYPE, serialize, deserialize, type Thenable } from 'universal-serialize/src';\n\nimport { SERIALIZATION_TYPE } from '../conf';\nimport type { OnType, SendType } from '../types';\n\nimport { serializeFunction, deserializeFunction, type SerializedFunction } from './function';\nimport { serializePromise, deserializePromise, type SerializedPromise } from './promise';\nimport { serializeWindow, deserializeWindow, type SerializedWindow, ProxyWindow } from './window';\n\nexport function serializeMessage<T : mixed>(destination : CrossDomainWindowType | ProxyWindow, domain : DomainMatcher, obj : T, { on, send } : { on : OnType, send : SendType }) : string {\n    return serialize(obj, {\n        [ TYPE.PROMISE ]:  (val : Thenable, key : string) : SerializedPromise => serializePromise(destination, domain, val, key, { on, send }),\n        [ TYPE.FUNCTION ]: (val : Function, key : string) : SerializedFunction => serializeFunction(destination, domain, val, key, { on, send }),\n        [ TYPE.OBJECT ]:   (val : CrossDomainWindowType) : Object | SerializedWindow => {\n            return (isWindow(val) || ProxyWindow.isProxyWindow(val)) ? serializeWindow(destination, domain, val, { on, send }) : val;\n        }\n    });\n}\n\nexport function deserializeMessage<T : mixed>(source : CrossDomainWindowType | ProxyWindow, origin : string, message : string, { on, send } : { on : OnType, send : SendType }) : T {\n    return deserialize(message, {\n        [ SERIALIZATION_TYPE.CROSS_DOMAIN_ZALGO_PROMISE ]: (serializedPromise)  => deserializePromise(source, origin, serializedPromise),\n        [ SERIALIZATION_TYPE.CROSS_DOMAIN_FUNCTION ]:      (serializedFunction) => deserializeFunction(source, origin, serializedFunction, { on, send }),\n        [ SERIALIZATION_TYPE.CROSS_DOMAIN_WINDOW ]:        (serializedWindow)   => deserializeWindow(source, origin, serializedWindow, { on, send })\n    });\n}\n","/* @flow */\n\nimport { type CrossDomainWindowType, type DomainMatcher } from 'cross-domain-utils/src';\nimport { ZalgoPromise } from 'zalgo-promise/src';\nimport { serializeType, type CustomSerializedType, type Thenable } from 'universal-serialize/src';\n\nimport { SERIALIZATION_TYPE } from '../conf';\nimport type { OnType, SendType } from '../types';\n\nimport { serializeFunction, type SerializedFunction } from './function';\nimport { ProxyWindow } from './window';\n\nexport type SerializedPromise = CustomSerializedType<typeof SERIALIZATION_TYPE.CROSS_DOMAIN_ZALGO_PROMISE, {\n    then : SerializedFunction\n}>;\n\nexport function serializePromise(destination : CrossDomainWindowType | ProxyWindow, domain : DomainMatcher, val : Thenable, key : string, { on, send } : { on : OnType, send : SendType }) : SerializedPromise {\n    return serializeType(SERIALIZATION_TYPE.CROSS_DOMAIN_ZALGO_PROMISE, {\n        then: serializeFunction(destination, domain, (resolve, reject) => val.then(resolve, reject), key, { on, send })\n    });\n}\n\nexport function deserializePromise<T>(source : CrossDomainWindowType | ProxyWindow, origin : string, { then } : { then : Function }) : ZalgoPromise<T> {\n    return new ZalgoPromise(then);\n}\n","/* @flow */\n\nimport { isSameDomain, isSameTopWindow, isActuallySameDomain, getActualDomain,\n    getDomain, type CrossDomainWindowType, type DomainMatcher, PROTOCOL } from 'cross-domain-utils/src';\n\nimport { SEND_STRATEGY, WILDCARD } from '../../conf';\nimport { needsGlobalMessagingForBrowser } from '../../lib';\nimport { getGlobal } from '../../global';\nimport { sendBridgeMessage, needsBridgeForBrowser, isBridge } from '../../bridge';\n\nexport const SEND_MESSAGE_STRATEGIES = {};\n\nSEND_MESSAGE_STRATEGIES[SEND_STRATEGY.POST_MESSAGE] = (win : CrossDomainWindowType, serializedMessage : string, domain : DomainMatcher) => {\n\n    if (__TEST__) {\n        if (needsGlobalMessagingForBrowser() && isSameTopWindow(window, win) === false) {\n            return;\n        }\n    }\n\n    let domains;\n\n    if (Array.isArray(domain)) {\n        domains = domain;\n    } else if (typeof domain === 'string') {\n        domains = [ domain ];\n    } else {\n        domains = [ WILDCARD ];\n    }\n\n    domains = domains.map(dom => {\n\n        if (__TEST__) {\n            if (dom.indexOf(PROTOCOL.MOCK) === 0) {\n                if (window.location.protocol === PROTOCOL.FILE) {\n                    return WILDCARD;\n                }\n\n                if (!isActuallySameDomain(win)) {\n                    throw new Error(`Attempting to send messsage to mock domain ${ dom }, but window is actually cross-domain`);\n                }\n\n                // $FlowFixMe\n                return getActualDomain(win);\n\n            }\n        }\n        \n        if (dom.indexOf(PROTOCOL.FILE) === 0) {\n            return WILDCARD;\n        }\n\n        return dom;\n    });\n\n    domains.forEach(dom => {\n        win.postMessage(serializedMessage, dom);\n    });\n};\n\nif (__POST_ROBOT__.__IE_POPUP_SUPPORT__) {\n\n    SEND_MESSAGE_STRATEGIES[SEND_STRATEGY.BRIDGE] = (win : CrossDomainWindowType, serializedMessage : string, domain : string) => {\n\n        if (!needsBridgeForBrowser() && !isBridge()) {\n            return;\n        }\n\n        if (isSameDomain(win)) {\n            throw new Error(`Post message through bridge disabled between same domain windows`);\n        }\n\n        if (isSameTopWindow(window, win) !== false) {\n            throw new Error(`Can only use bridge to communicate between two different windows, not between frames`);\n        }\n\n        sendBridgeMessage(win, domain, serializedMessage);\n    };\n}\n\nif (__POST_ROBOT__.__IE_POPUP_SUPPORT__ || __POST_ROBOT__.__GLOBAL_MESSAGE_SUPPORT__) {\n    \n    SEND_MESSAGE_STRATEGIES[SEND_STRATEGY.GLOBAL] = (win : CrossDomainWindowType, serializedMessage : string) => {\n\n        if (!needsGlobalMessagingForBrowser()) {\n            return;\n        }\n\n        if (!isSameDomain(win)) {\n            throw new Error(`Post message through global disabled between different domain windows`);\n        }\n\n        if (isSameTopWindow(window, win) !== false) {\n            throw new Error(`Can only use global to communicate between two different windows, not between frames`);\n        }\n\n        // $FlowFixMe\n        const foreignGlobal = getGlobal(win);\n\n        if (!foreignGlobal) {\n            throw new Error(`Can not find postRobot global on foreign window`);\n        }\n\n        foreignGlobal.receiveMessage({\n            source: window,\n            origin: getDomain(),\n            data:   serializedMessage\n        });\n    };\n}\n","/* @flow */\n\nimport { isWindowClosed, getDomain, type CrossDomainWindowType, type DomainMatcher } from 'cross-domain-utils/src';\nimport { uniqueID, stringifyError } from 'belter/src';\n\nimport { serializeMessage } from '../../serialize';\nimport type { Message } from '../types';\nimport type { OnType, SendType } from '../../types';\n\nimport { SEND_MESSAGE_STRATEGIES } from './strategies';\n\nexport function sendMessage(win : CrossDomainWindowType, domain : DomainMatcher, message : Message, { on, send } : { on : OnType, send : SendType }) {\n    if (isWindowClosed(win)) {\n        throw new Error('Window is closed');\n    }\n    \n    const serializedMessage = serializeMessage(win, domain, {\n        [ __POST_ROBOT__.__GLOBAL_KEY__ ]: {\n            id:     uniqueID(),\n            origin: getDomain(window),\n            ...message\n        }\n    }, { on, send });\n\n    const strategies = Object.keys(SEND_MESSAGE_STRATEGIES);\n    const errors = [];\n\n    for (const strategyName of strategies) {\n        try {\n            SEND_MESSAGE_STRATEGIES[strategyName](win, serializedMessage, domain);\n        } catch (err) {\n            errors.push(err);\n        }\n    }\n\n    if (errors.length === strategies.length) {\n        throw new Error(`All post-robot messaging strategies failed:\\n\\n${ errors.map(stringifyError).join('\\n\\n') }`);\n    }\n}\n","/* @flow */\n\nimport { getUserAgent } from 'cross-domain-utils/src';\n\nexport function needsGlobalMessagingForBrowser() : boolean {\n\n    if (getUserAgent(window).match(/MSIE|rv:11|trident|edge\\/12|edge\\/13/i)) {\n        return true;\n    }\n\n    return false;\n}\n","/* @flow */\n\nimport { type ZalgoPromise } from 'zalgo-promise/src';\nimport { matchDomain, type CrossDomainWindowType, type DomainMatcher } from 'cross-domain-utils/src';\nimport { isRegex, getOrSet } from 'belter/src';\n\nimport { getWildcard, type WildCard, globalStore, windowStore } from '../global';\nimport { WILDCARD } from '../conf';\n\nexport function resetListeners() {\n    const responseListeners = globalStore('responseListeners');\n    const erroredResponseListeners = globalStore('erroredResponseListeners');\n    responseListeners.reset();\n    erroredResponseListeners.reset();\n}\n\nconst __DOMAIN_REGEX__ = '__domain_regex__';\n\nexport type RequestListenerType = {|\n    handler : ({ source : CrossDomainWindowType, origin : string, data : mixed }) => (mixed | ZalgoPromise<mixed>),\n    handleError : (err : mixed) => void,\n    window : ?CrossDomainWindowType,\n    name : string,\n    domain : DomainMatcher\n|};\n\nexport type ResponseListenerType = {|\n    name : string,\n    win : CrossDomainWindowType,\n    domain : DomainMatcher,\n    promise : ZalgoPromise<*>,\n    ack? : ?boolean,\n    cancelled? : ?boolean\n|};\n\nexport function addResponseListener(hash : string, listener : ResponseListenerType) {\n    const responseListeners = globalStore('responseListeners');\n    responseListeners.set(hash, listener);\n}\n\nexport function getResponseListener(hash : string) : ?ResponseListenerType {\n    const responseListeners = globalStore('responseListeners');\n    return responseListeners.get(hash);\n}\n\nexport function deleteResponseListener(hash : string) {\n    const responseListeners = globalStore('responseListeners');\n    responseListeners.del(hash);\n}\n\nexport function cancelResponseListeners() {\n    const responseListeners = globalStore('responseListeners');\n    for (const hash of responseListeners.keys()) {\n        const listener = responseListeners.get(hash);\n        if (listener) {\n            listener.cancelled = true;\n        }\n        responseListeners.del(hash);\n    }\n}\n\nexport function markResponseListenerErrored(hash : string) {\n    const erroredResponseListeners = globalStore('erroredResponseListeners');\n    erroredResponseListeners.set(hash, true);\n}\n\nexport function isResponseListenerErrored(hash : string) : boolean {\n    const erroredResponseListeners = globalStore('erroredResponseListeners');\n    return erroredResponseListeners.has(hash);\n}\n\nexport function getRequestListener({ name, win, domain } : { name : string, win : ?(CrossDomainWindowType | WildCard), domain : ?(string | RegExp) }) : ?RequestListenerType {\n    const requestListeners = windowStore('requestListeners');\n\n    if (win === WILDCARD) {\n        win = null;\n    }\n\n    if (domain === WILDCARD) {\n        domain = null;\n    }\n\n    if (!name) {\n        throw new Error(`Name required to get request listener`);\n    }\n\n    for (const winQualifier of [ win, getWildcard() ]) {\n        if (!winQualifier) {\n            continue;\n        }\n\n        const nameListeners = requestListeners.get(winQualifier);\n\n        if (!nameListeners) {\n            continue;\n        }\n\n        const domainListeners = nameListeners[name];\n\n        if (!domainListeners) {\n            continue;\n        }\n\n        if (domain && typeof domain === 'string') {\n            if (domainListeners[domain]) {\n                return domainListeners[domain];\n            }\n\n            if (domainListeners[__DOMAIN_REGEX__]) {\n                for (const { regex, listener } of domainListeners[__DOMAIN_REGEX__]) {\n                    if (matchDomain(regex, domain)) {\n                        return listener;\n                    }\n                }\n            }\n        }\n\n        if (domainListeners[WILDCARD]) {\n            return domainListeners[WILDCARD];\n        }\n    }\n}\n\nexport function addRequestListener({ name, win, domain } : { name : string, win : ?(CrossDomainWindowType | WildCard), domain : ?DomainMatcher }, listener : RequestListenerType) : { cancel : () => void } {\n    const requestListeners = windowStore('requestListeners');\n\n    if (!name || typeof name !== 'string') {\n        throw new Error(`Name required to add request listener`);\n    }\n\n    if (Array.isArray(win)) {\n        const listenersCollection = [];\n\n        for (const item of win) {\n            listenersCollection.push(addRequestListener({ name, domain, win: item }, listener));\n        }\n\n        return {\n            cancel() {\n                for (const cancelListener of listenersCollection) {\n                    cancelListener.cancel();\n                }\n            }\n        };\n    }\n\n    if (Array.isArray(domain)) {\n        const listenersCollection = [];\n\n        for (const item of domain) {\n            listenersCollection.push(addRequestListener({ name, win, domain: item }, listener));\n        }\n\n        return {\n            cancel() {\n                for (const cancelListener of listenersCollection) {\n                    cancelListener.cancel();\n                }\n            }\n        };\n    }\n\n    const existingListener = getRequestListener({ name, win, domain });\n\n    if (!win || win === WILDCARD) {\n        win = getWildcard();\n    }\n\n    domain = domain || WILDCARD;\n\n    if (existingListener) {\n        if (win && domain) {\n            throw new Error(`Request listener already exists for ${ name } on domain ${ domain.toString() } for ${ win === getWildcard() ? 'wildcard' : 'specified' } window`);\n        } else if (win) {\n            throw new Error(`Request listener already exists for ${ name } for ${ win === getWildcard() ? 'wildcard' : 'specified' } window`);\n        } else if (domain) {\n            throw new Error(`Request listener already exists for ${ name } on domain ${ domain.toString() }`);\n        } else {\n            throw new Error(`Request listener already exists for ${ name }`);\n        }\n    }\n\n    const nameListeners = requestListeners.getOrSet(win, () => ({}));\n    // $FlowFixMe\n    const domainListeners = getOrSet(nameListeners, name, () => ({}));\n\n    const strDomain = domain.toString();\n\n    let regexListeners;\n    let regexListener;\n\n    if (isRegex(domain)) {\n        regexListeners = getOrSet(domainListeners, __DOMAIN_REGEX__, () => []);\n        regexListener = { regex: domain, listener };\n        regexListeners.push(regexListener);\n    } else {\n        domainListeners[strDomain] = listener;\n    }\n\n    return {\n        cancel() {\n            delete domainListeners[strDomain];\n\n            if (regexListener) {\n                regexListeners.splice(regexListeners.indexOf(regexListener, 1));\n\n                if (!regexListeners.length) {\n                    delete domainListeners[__DOMAIN_REGEX__];\n                }\n            }\n\n            if (!Object.keys(domainListeners).length) {\n                // $FlowFixMe\n                delete nameListeners[name];\n            }\n\n            // $FlowFixMe\n            if (win && !Object.keys(nameListeners).length) {\n                requestListeners.del(win);\n            }\n        }\n    };\n}\n","/* @flow */\n\nimport { ZalgoPromise } from 'zalgo-promise/src';\nimport { isWindowClosed, matchDomain, stringifyDomainPattern, type CrossDomainWindowType } from 'cross-domain-utils/src';\nimport { noop } from 'belter/src';\n\nimport { MESSAGE_TYPE, MESSAGE_ACK, MESSAGE_NAME } from '../../conf';\nimport { sendMessage } from '../send';\nimport { getRequestListener, getResponseListener, deleteResponseListener, isResponseListenerErrored } from '../listeners';\nimport type { RequestMessage, AckResponseMessage, SuccessResponseMessage, ErrorResponseMessage } from '../types';\nimport type { OnType, SendType } from '../../types';\n\nexport const RECEIVE_MESSAGE_TYPES = {\n\n    [ MESSAGE_TYPE.REQUEST ](source : CrossDomainWindowType, origin : string, message : RequestMessage, { on, send } : { on : OnType, send : SendType }) : ZalgoPromise<void> {\n\n        const options = getRequestListener({ name: message.name, win: source, domain: origin });\n\n        const logName = (message.name === MESSAGE_NAME.METHOD && message.data && typeof message.data.name === 'string') ? `${ message.data.name }()` : message.name;\n\n        if (__DEBUG__) {\n            // eslint-disable-next-line no-console\n            console.info('receive::req', logName, origin, '\\n\\n', message.data);\n        }\n\n        function sendResponse(type : $Values<typeof MESSAGE_TYPE>, ack? : $Values<typeof MESSAGE_ACK>, response = {}) {\n\n            if (message.fireAndForget || isWindowClosed(source)) {\n                return;\n            }\n\n            if (__DEBUG__ && type !== MESSAGE_TYPE.ACK) {\n                if (ack === MESSAGE_ACK.SUCCESS) {\n                    // $FlowFixMe\n                    console.info('respond::res', logName, origin, '\\n\\n', response.data);  // eslint-disable-line no-console\n                } else if (ack === MESSAGE_ACK.ERROR) {\n                    // $FlowFixMe\n                    console.error('respond::err', logName, origin, '\\n\\n', response.error); // eslint-disable-line no-console\n                }\n            }\n\n            // $FlowFixMe\n            sendMessage(source, origin, {\n                type,\n                ack,\n                hash:   message.hash,\n                name:   message.name,\n                ...response\n            }, { on, send });\n        }\n\n        return ZalgoPromise.all([\n\n            sendResponse(MESSAGE_TYPE.ACK),\n\n            ZalgoPromise.try(() => {\n\n                if (!options) {\n                    throw new Error(`No handler found for post message: ${ message.name } from ${ origin } in ${ window.location.protocol }//${ window.location.host }${ window.location.pathname }`);\n                }\n\n                if (!matchDomain(options.domain, origin)) {\n                    throw new Error(`Request origin ${ origin } does not match domain ${ options.domain.toString() }`);\n                }\n\n                const data = message.data;\n\n                return options.handler({ source, origin, data });\n\n            }).then(data => {\n                return sendResponse(MESSAGE_TYPE.RESPONSE, MESSAGE_ACK.SUCCESS, { data });\n\n            }, error => {\n                return sendResponse(MESSAGE_TYPE.RESPONSE, MESSAGE_ACK.ERROR, { error });\n            })\n\n        ]).then(noop).catch(err => {\n            if (options && options.handleError) {\n                return options.handleError(err);\n            } else {\n                throw err;\n            }\n        });\n    },\n\n    [ MESSAGE_TYPE.ACK ](source : CrossDomainWindowType, origin : string, message : AckResponseMessage) {\n\n        if (isResponseListenerErrored(message.hash)) {\n            return;\n        }\n\n        const options = getResponseListener(message.hash);\n\n        if (!options) {\n            throw new Error(`No handler found for post message ack for message: ${ message.name } from ${ origin } in ${ window.location.protocol }//${ window.location.host }${ window.location.pathname }`);\n        }\n\n        if (!matchDomain(options.domain, origin)) {\n            throw new Error(`Ack origin ${ origin } does not match domain ${ options.domain.toString() }`);\n        }\n\n        if (source !== options.win) {\n            throw new Error(`Ack source does not match registered window`);\n        }\n\n        options.ack = true;\n    },\n\n    [ MESSAGE_TYPE.RESPONSE ](source : CrossDomainWindowType, origin : string, message : SuccessResponseMessage | ErrorResponseMessage) : void | ZalgoPromise<void> {\n\n        if (isResponseListenerErrored(message.hash)) {\n            return;\n        }\n\n        const options = getResponseListener(message.hash);\n\n        if (!options) {\n            throw new Error(`No handler found for post message response for message: ${ message.name } from ${ origin } in ${ window.location.protocol }//${ window.location.host }${ window.location.pathname }`);\n        }\n\n        if (!matchDomain(options.domain, origin)) {\n            throw new Error(`Response origin ${ origin } does not match domain ${ stringifyDomainPattern(options.domain) }`);\n        }\n\n        if (source !== options.win) {\n            throw new Error(`Response source does not match registered window`);\n        }\n\n        deleteResponseListener(message.hash);\n\n        const logName = (message.name === MESSAGE_NAME.METHOD && message.data && typeof message.data.name === 'string') ? `${ message.data.name }()` : message.name;\n\n        if (message.ack === MESSAGE_ACK.ERROR) {\n            if (__DEBUG__) {\n                console.error('receive::err', logName, origin, '\\n\\n', message.error); // eslint-disable-line no-console\n            }\n\n            options.promise.reject(message.error);\n\n        } else if (message.ack === MESSAGE_ACK.SUCCESS) {\n            if (__DEBUG__) {\n                console.info('receive::res', logName, origin, '\\n\\n', message.data); // eslint-disable-line no-console\n            }\n\n            options.promise.resolve({ source, origin, data: message.data });\n        }\n    }\n};\n","/* @flow */\n\nimport { isWindowClosed, type CrossDomainWindowType, getDomain, isSameTopWindow, PROTOCOL  } from 'cross-domain-utils/src';\nimport { addEventListener, noop } from 'belter/src';\n\nimport { markWindowKnown, needsGlobalMessagingForBrowser } from '../../lib';\nimport { deserializeMessage } from '../../serialize';\nimport { getGlobal, globalStore } from '../../global';\nimport type { OnType, SendType, MessageEvent, CancelableType } from '../../types';\n\nimport { RECEIVE_MESSAGE_TYPES } from './types';\n\nfunction parseMessage(message : string, source : CrossDomainWindowType, origin : string, { on, send } : { on : OnType, send : SendType }) : ?Object {\n    let parsedMessage;\n\n    try {\n        parsedMessage = deserializeMessage(source, origin, message, { on, send });\n    } catch (err) {\n        return;\n    }\n\n    if (!parsedMessage) {\n        return;\n    }\n\n    if (typeof parsedMessage !== 'object' || parsedMessage === null) {\n        return;\n    }\n\n    parsedMessage = parsedMessage[__POST_ROBOT__.__GLOBAL_KEY__];\n\n    if (!parsedMessage || typeof parsedMessage !== 'object' || parsedMessage === null) {\n        return;\n    }\n\n    if (!parsedMessage.type || typeof parsedMessage.type !== 'string') {\n        return;\n    }\n\n    if (!RECEIVE_MESSAGE_TYPES[parsedMessage.type]) {\n        return;\n    }\n\n    return parsedMessage;\n}\n\nexport function receiveMessage(event : MessageEvent, { on, send } : { on : OnType, send : SendType }) {\n    const receivedMessages = globalStore('receivedMessages');\n\n    if (!window || window.closed) {\n        throw new Error(`Message recieved in closed window`);\n    }\n\n    try {\n        if (!event.source) {\n            return;\n        }\n    } catch (err) {\n        return;\n    }\n\n    let { source, origin, data } = event;\n\n    if (__TEST__) {\n        // $FlowFixMe\n        origin = getDomain(source);\n    }\n\n    const message = parseMessage(data, source, origin, { on, send });\n\n    if (!message) {\n        return;\n    }\n\n    markWindowKnown(source);\n\n    if (receivedMessages.has(message.id)) {\n        return;\n    }\n\n    receivedMessages.set(message.id, true);\n\n    if (isWindowClosed(source) && !message.fireAndForget) {\n        return;\n    }\n\n    if (message.origin.indexOf(PROTOCOL.FILE) === 0) {\n        origin = `${ PROTOCOL.FILE }//`;\n    }\n\n    RECEIVE_MESSAGE_TYPES[message.type](source, origin, message, { on, send });\n}\n\nexport function setupGlobalReceiveMessage({ on, send } : { on : OnType, send : SendType }) {\n    const global = getGlobal();\n    global.receiveMessage = global.receiveMessage || (message => receiveMessage(message, { on, send }));\n}\n\ntype ListenerEvent = {|\n    source : CrossDomainWindowType,\n    origin : string,\n    data : string,\n    sourceElement : CrossDomainWindowType,\n    originalEvent? : { origin : string }\n|};\n\nexport function messageListener(event : ListenerEvent, { on, send } : { on : OnType, send : SendType }) {\n\n    try {\n        noop(event.source);\n    } catch (err) {\n        return;\n    }\n\n    const source = event.source || event.sourceElement;\n    let origin = event.origin || (event.originalEvent && event.originalEvent.origin);\n    const data = event.data;\n\n    if (origin === 'null') {\n        origin = `${ PROTOCOL.FILE }//`;\n    }\n\n    if (!source) {\n        return;\n    }\n\n    if (!origin) {\n        throw new Error(`Post message did not have origin domain`);\n    }\n\n    if (__TEST__) {\n        if (needsGlobalMessagingForBrowser() && isSameTopWindow(source, window) === false) {\n            return;\n        }\n    }\n\n    receiveMessage({ source, origin, data }, { on, send });\n}\n\nexport function listenForMessages({ on, send } : { on : OnType, send : SendType }) : CancelableType {\n    return globalStore().getOrSet('postMessageListener', () => {\n        // $FlowFixMe\n        return addEventListener(window, 'message', event => {\n            // $FlowFixMe\n            messageListener(event, { on, send });\n        });\n    });\n}\n\nexport function stopListenForMessages() {\n    const listener = globalStore().get('postMessageListener');\n    if (listener) {\n        listener.cancel();\n    }\n}\n","/* @flow */\n\nimport { ZalgoPromise } from 'zalgo-promise/src';\n\nimport { addRequestListener, type RequestListenerType } from '../drivers';\nimport { WILDCARD } from '../conf';\nimport type { ServerOptionsType, HandlerType, CancelableType } from '../types';\n\nexport function on(name : string, options : ServerOptionsType | HandlerType, handler : ?HandlerType) : CancelableType {\n\n    if (!name) {\n        throw new Error('Expected name');\n    }\n\n    if (typeof options === 'function') {\n        handler = options;\n        // $FlowFixMe\n        options = {};\n    }\n\n    if (!handler) {\n        throw new Error('Expected handler');\n    }\n\n    options = options || {};\n    options.name = name;\n    options.handler = handler || options.handler;\n\n    const win = options.window;\n    const domain = options.domain;\n\n    const listenerOptions : RequestListenerType = {\n        handler:     options.handler,\n        handleError: options.errorHandler || (err => {\n            throw err;\n        }),\n        window: win,\n        domain: domain || WILDCARD,\n        name\n    };\n\n    const requestListener = addRequestListener({ name, win, domain }, listenerOptions);\n\n    return {\n        cancel() {\n            requestListener.cancel();\n        }\n    };\n}\n\nexport function once(name : string, options? : ServerOptionsType | HandlerType, handler? : HandlerType) : ZalgoPromise<{ source : mixed, origin : string, data : Object }> {\n    \n    // $FlowFixMe\n    options = options || {};\n    if (typeof options === 'function') {\n        handler = options;\n        // $FlowFixMe\n        options = {};\n    }\n\n    const promise = new ZalgoPromise();\n    let listener; // eslint-disable-line prefer-const\n\n    options.errorHandler = (err) => {\n        listener.cancel();\n        promise.reject(err);\n    };\n\n    listener = on(name, options, event => {\n        listener.cancel();\n        promise.resolve(event);\n        if (handler) {\n            return handler(event);\n        }\n    });\n\n    promise.cancel = listener.cancel;\n    return promise;\n}\n","/* @flow */\n\nimport { ZalgoPromise } from 'zalgo-promise/src';\nimport { isAncestor, isWindowClosed, getDomain, matchDomain, type CrossDomainWindowType, type DomainMatcher } from 'cross-domain-utils/src';\nimport { uniqueID, isRegex, noop, safeInterval, stringify } from 'belter/src';\n\n\nimport { CHILD_WINDOW_TIMEOUT, MESSAGE_TYPE, WILDCARD, MESSAGE_NAME, ACK_TIMEOUT, RES_TIMEOUT, ACK_TIMEOUT_KNOWN, RESPONSE_CYCLE_TIME } from '../conf';\nimport { sendMessage, addResponseListener, deleteResponseListener, markResponseListenerErrored, type ResponseListenerType } from '../drivers';\nimport { awaitWindowHello, sayHello, isWindowKnown } from '../lib';\nimport { windowStore } from '../global';\nimport type { SendType } from '../types';\n\nimport { on } from './on';\n\nfunction validateOptions(name : string, win : CrossDomainWindowType, domain : ?DomainMatcher) {\n    if (!name) {\n        throw new Error('Expected name');\n    }\n\n    if (domain) {\n        if (typeof domain !== 'string' && !Array.isArray(domain) && !isRegex(domain)) {\n            throw new TypeError(`Expected domain to be a string, array, or regex`);\n        }\n    }\n\n    if (isWindowClosed(win)) {\n        throw new Error('Target window is closed');\n    }\n}\n\nfunction normalizeDomain(win : CrossDomainWindowType, domain : DomainMatcher, childTimeout : number, { send } : { send : SendType }) : ZalgoPromise<string | $ReadOnlyArray<string>> {\n    return ZalgoPromise.try(() => {\n        if (isAncestor(window, win)) {\n            return awaitWindowHello(win, childTimeout);\n        } else if (isRegex(domain)) {\n            // $FlowFixMe\n            return sayHello(win, { send });\n        } else {\n            return { domain };\n        }\n    // $FlowFixMe\n    }).then(({ domain: normalizedDomain }) => {\n\n        // $FlowFixMe\n        return normalizedDomain;\n    });\n}\n\nexport const send : SendType = (win, name, data, options) => {\n\n    // $FlowFixMe\n    options = options || {};\n    let domain = options.domain || WILDCARD;\n    const responseTimeout = options.timeout || RES_TIMEOUT;\n    const childTimeout = options.timeout || CHILD_WINDOW_TIMEOUT;\n    const fireAndForget = options.fireAndForget || false;\n\n    // $FlowFixMe\n    return ZalgoPromise.try(() => {\n        validateOptions(name, win, domain);\n        return normalizeDomain(win, domain, childTimeout, { send });\n    }).then(targetDomain => {\n\n        if (!matchDomain(domain, targetDomain)) {\n            throw new Error(`Domain ${ stringify(domain) } does not match ${ stringify(targetDomain) }`);\n        }\n\n        domain = targetDomain;\n\n        const logName = (name === MESSAGE_NAME.METHOD && data && typeof data.name === 'string') ? `${ data.name }()` : name;\n\n        if (__DEBUG__) {\n            console.info('send::req', logName, domain, '\\n\\n', data); // eslint-disable-line no-console\n        }\n\n        const promise = new ZalgoPromise();\n        const hash = `${ name }_${ uniqueID() }`;\n\n        if (!fireAndForget) {\n            const responseListener : ResponseListenerType = { name, win, domain, promise };\n            addResponseListener(hash, responseListener);\n\n            const reqPromises = windowStore('requestPromises').getOrSet(win, () => []);\n            reqPromises.push(promise);\n\n            promise.catch(() => {\n                markResponseListenerErrored(hash);\n                deleteResponseListener(hash);\n            });\n\n            const totalAckTimeout = isWindowKnown(win) ? ACK_TIMEOUT_KNOWN : ACK_TIMEOUT;\n            const totalResTimeout = responseTimeout;\n\n            let ackTimeout = totalAckTimeout;\n            let resTimeout = totalResTimeout;\n        \n            const interval = safeInterval(() => {\n                if (isWindowClosed(win)) {\n                    return promise.reject(new Error(`Window closed for ${ name } before ${ responseListener.ack ? 'response' : 'ack' }`));\n                }\n\n                if (responseListener.cancelled) {\n                    return promise.reject(new Error(`Response listener was cancelled for ${ name }`));\n                }\n\n                ackTimeout = Math.max(ackTimeout - RESPONSE_CYCLE_TIME, 0);\n                if (resTimeout !== -1) {\n                    resTimeout = Math.max(resTimeout - RESPONSE_CYCLE_TIME, 0);\n                }\n\n                if (!responseListener.ack && ackTimeout === 0) {\n                    return promise.reject(new Error(`No ack for postMessage ${ logName } in ${ getDomain() } in ${ totalAckTimeout }ms`));\n\n                } else if (resTimeout === 0) {\n                    return promise.reject(new Error(`No response for postMessage ${ logName } in ${ getDomain() } in ${ totalResTimeout }ms`));\n                }\n            }, RESPONSE_CYCLE_TIME);\n\n            promise.finally(() => {\n                interval.cancel();\n                reqPromises.splice(reqPromises.indexOf(promise, 1));\n            }).catch(noop);\n        }\n\n        sendMessage(win, domain, {\n            type: MESSAGE_TYPE.REQUEST,\n            hash,\n            name,\n            data,\n            fireAndForget\n        }, { on, send });\n    \n        return fireAndForget ? promise.resolve() : promise;\n    });\n};\n","/* @flow */\n\nimport { setup } from './setup';\nimport { setupBridge, openBridge, linkWindow, linkUrl, isBridge, needsBridge, needsBridgeForBrowser, hasBridge,\n    needsBridgeForWin, needsBridgeForDomain, destroyBridges } from './bridge';\n\nexport { ZalgoPromise as Promise } from 'zalgo-promise/src';\n\nexport * from './types';\nexport { ProxyWindow } from './serialize';\nexport { setup, destroy, serializeMessage, deserializeMessage, toProxyWindow } from './setup';\nexport { on, once, send } from './public';\nexport { markWindowKnown } from './lib';\nexport { cleanUpWindow } from './clean';\nexport let bridge;\n\nif (__POST_ROBOT__.__IE_POPUP_SUPPORT__) {\n    bridge = { setupBridge, openBridge, linkWindow, linkUrl, isBridge, needsBridge,\n        needsBridgeForBrowser, hasBridge, needsBridgeForWin, needsBridgeForDomain, destroyBridges };\n}\n\nif (__POST_ROBOT__.__AUTO_SETUP__) {\n    setup();\n}\n","/* @flow */\n\nimport type { CrossDomainWindowType, DomainMatcher } from 'cross-domain-utils/src';\n\nimport { initHello } from './lib';\nimport { listenForMessages, stopListenForMessages, receiveMessage, setupGlobalReceiveMessage, cancelResponseListeners } from './drivers';\nimport { getGlobal, deleteGlobal } from './global';\nimport { on, send } from './public';\nimport { setupBridge } from './bridge';\nimport { serializeMessage as internalSerializeMessage, deserializeMessage as internalDeserializeMessage, ProxyWindow } from './serialize';\n\nexport function serializeMessage<T>(destination : CrossDomainWindowType | ProxyWindow, domain : DomainMatcher, obj : T) : string {\n    return internalSerializeMessage(destination, domain, obj, { on, send });\n}\n\nexport function deserializeMessage<T : mixed>(source : CrossDomainWindowType | ProxyWindow, origin : string, message : string) : T {\n    return internalDeserializeMessage(source, origin, message, { on, send });\n}\n\nexport function toProxyWindow(win : CrossDomainWindowType | ProxyWindow) : ProxyWindow {\n    return ProxyWindow.toProxyWindow(win, { send });\n}\n\nexport function setup() {\n    if (!getGlobal().initialized) {\n        getGlobal().initialized = true;\n    \n        setupGlobalReceiveMessage({ on, send });\n        listenForMessages({ on, send });\n    \n        if (__POST_ROBOT__.__IE_POPUP_SUPPORT__) {\n            setupBridge({ on, send, receiveMessage });\n        }\n\n        initHello({ on, send });\n    }\n}\n\nexport function destroy() {\n    cancelResponseListeners();\n    stopListenForMessages();\n    deleteGlobal();\n}\n","/* @flow */\n\nimport { type CrossDomainWindowType } from 'cross-domain-utils/src';\nimport { noop } from 'belter/src';\n\nimport { windowStore } from './global';\n\nexport function cleanUpWindow(win : CrossDomainWindowType) {\n    const requestPromises = windowStore('requestPromises');\n    for (const promise of requestPromises.get(win, [])) {\n        promise.reject(new Error(`Window cleaned up before response`)).catch(noop);\n    }\n}\n","/* @flow */\n\nimport { isSameDomain, type CrossDomainWindowType } from 'cross-domain-utils/src';\n\nexport function getGlobal(win? : CrossDomainWindowType = window) : Object {\n\n    if (!isSameDomain(win)) {\n        throw new Error(`Can not get global for window on different domain`);\n    }\n\n    if (!win[__ZOID__.__GLOBAL_KEY__]) {\n        win[__ZOID__.__GLOBAL_KEY__] = {};\n    }\n\n    return win[__ZOID__.__GLOBAL_KEY__];\n}\n\nexport function destroyGlobal() {\n    delete window[__ZOID__.__GLOBAL_KEY__];\n}\n","/* @flow */\n\nimport { ZalgoPromise } from 'zalgo-promise/src';\n\nexport type ProxyObject<T> = {|\n    get : () => ZalgoPromise<T>\n|};\n\nexport function getProxyObject<T>(obj : T) : ProxyObject<T> {\n    return {\n        get() : ZalgoPromise<T> {\n            return ZalgoPromise.try(() => {\n                if (this.source && this.source !== window) {\n                    throw new Error(`Can not call get on proxy object from a remote window`);\n                }\n    \n                return obj;\n            });\n        }\n    };\n}\n","/* @flow */\n\nimport { WINDOW_TYPE } from 'cross-domain-utils/src';\n\nexport const ZOID = `zoid`;\n\nexport const POST_MESSAGE = {\n    DELEGATE:       `${ ZOID }_delegate`,\n    ALLOW_DELEGATE: `${ ZOID }_allow_delegate`\n};\n\nexport const PROP_TYPE = {\n    STRING:   `string`,\n    OBJECT:   `object`,\n    FUNCTION: `function`,\n    BOOLEAN:  `boolean`,\n    NUMBER:   `number`,\n    ARRAY:    `array`\n};\n\nexport const INITIAL_PROPS = {\n    RAW: 'raw',\n    UID: 'uid'\n};\n\nexport const WINDOW_REFERENCES = {\n    OPENER: ('opener' : 'opener'),\n    PARENT: ('parent' : 'parent'),\n    GLOBAL: ('global' : 'global')\n};\n\nexport const PROP_SERIALIZATION = {\n    JSON:   ('json' : 'json'),\n    DOTIFY: ('dotify' : 'dotify'),\n    BASE64: ('base64' : 'base64')\n};\n\nexport const CONTEXT = WINDOW_TYPE;\n\nexport const WILDCARD = '*';\n\nexport const DEFAULT_DIMENSIONS = {\n    WIDTH:  '300px',\n    HEIGHT: '150px'\n};\n\nexport const EVENT = {\n    RENDER:   'zoid-render',\n    RENDERED: 'zoid-rendered',\n    DISPLAY:  'zoid-display',\n    ERROR:    'zoid-error',\n    CLOSE:    'zoid-close',\n    PROPS:    'zoid-props',\n    RESIZE:   'zoid-resize'\n};\n","/* @flow */\n\nimport { getDomain, isSameDomain, type CrossDomainWindowType } from 'cross-domain-utils/src';\n\nimport type { Component } from '../component';\nimport type { PropsType, MixedPropDefinitionType } from '../component/props';\n\nimport type { ChildHelpers } from './index';\n\nexport function normalizeChildProp<T, P>(component : Component<P>, props : (PropsType<P>), key : string, value : T, helpers : ChildHelpers<P>) : ?T  {\n\n    // $FlowFixMe\n    const prop : MixedPropDefinitionType<P> = component.getPropDefinition(key);\n\n    if (!prop) {\n        return value;\n    }\n\n    if (typeof prop.childDecorate === 'function') {\n        return prop.childDecorate({ value, ...helpers });\n    }\n\n    return value;\n}\n\n// eslint-disable-next-line max-params\nexport function normalizeChildProps<P>(parentComponentWindow : CrossDomainWindowType, component : Component<P>, props : (PropsType<P>), origin : string, helpers : ChildHelpers<P>, isUpdate : boolean = false) : (PropsType<P>) {\n\n    const result = {};\n\n    for (const key of Object.keys(props)) {\n        const prop = component.getPropDefinition(key);\n\n        if (prop && prop.sameDomain && (origin !== getDomain(window) || !isSameDomain(parentComponentWindow))) {\n            continue;\n        }\n\n        // $FlowFixMe\n        const value = normalizeChildProp(component, props, key, props[key], helpers);\n\n        result[key] = value;\n        if (prop && prop.alias && !result[prop.alias]) {\n            result[prop.alias] = value;\n        }\n    }\n\n    if (!isUpdate) {\n        for (const key of component.getPropNames()) {\n            if (!props.hasOwnProperty(key)) {\n                result[key] = normalizeChildProp(component, props, key, props[key], helpers);\n            }\n        }\n    }\n\n    // $FlowFixMe\n    return result;\n}\n","/* @flow */\n\nimport { inlineMemoize, stringifyError, base64decode } from 'belter/src';\n\nimport { ZOID } from '../constants';\nimport type { ChildPayload } from '../parent';\n\nfunction parseChildWindowName(windowName : string) : ChildPayload {\n    return inlineMemoize(parseChildWindowName, () => {\n        if (!windowName) {\n            throw new Error(`No window name`);\n        }\n    \n        const [ , zoidcomp, name, encodedPayload ] = windowName.split('__');\n    \n        if (zoidcomp !== ZOID) {\n            throw new Error(`Window not rendered by zoid - got ${ zoidcomp }`);\n        }\n    \n        if (!name) {\n            throw new Error(`Expected component name`);\n        }\n    \n        if (!encodedPayload) {\n            throw new Error(`Expected encoded payload`);\n        }\n    \n        try {\n            return JSON.parse(base64decode(encodedPayload));\n        } catch (err) {\n            throw new Error(`Can not decode window name payload: ${ encodedPayload }: ${ stringifyError(err) }`);\n        }\n    }, [ windowName ]);\n}\n\nexport function getChildPayload() : ?ChildPayload {\n    try {\n        return parseChildWindowName(window.name);\n    } catch (err) {\n        // pass\n    }\n}\n","/* @flow */\n/* eslint max-lines: 0 */\n\nimport { isSameDomain, matchDomain, getDomain, getOpener,\n    getNthParentFromTop, getAncestor, getAllFramesInWindow,\n    type CrossDomainWindowType, onCloseWindow } from 'cross-domain-utils/src';\nimport { markWindowKnown, deserializeMessage, type CrossDomainFunctionType } from 'post-robot/src';\nimport { ZalgoPromise } from 'zalgo-promise/src';\nimport { extend, waitForDocumentBody, onResize, getElementSafe, assertExists } from 'belter/src';\n\nimport { getGlobal } from '../lib';\nimport { CONTEXT, INITIAL_PROPS, WINDOW_REFERENCES } from '../constants';\nimport type { Component } from '../component';\nimport type { PropsType } from '../component/props';\nimport type { WindowRef, PropRef, ParentExportsType } from '../parent';\n\nimport { normalizeChildProps } from './props';\nimport { getChildPayload } from './window';\n\nexport * from './window';\n\nexport type ChildExportsType<P> = {|\n    updateProps : CrossDomainFunctionType<[ PropsType<P> ], void>,\n    close : CrossDomainFunctionType<[], void>\n|};\n\nexport type ChildHelpers<P> = {|\n    close : () => ZalgoPromise<void>,\n    focus : () => ZalgoPromise<void>,\n    resize : ({ width : ?number, height : ?number }) => ZalgoPromise<void>,\n    onError : (mixed) => ZalgoPromise<void>,\n    onProps : ((PropsType<P>) => void) => void,\n    getParent : () => CrossDomainWindowType,\n    getParentDomain : () => string\n|};\n\n/*  Child Component\n    ---------------\n\n    This is the portion of code which runs inside the frame or popup window containing the component's implementation.\n\n    When the component author calls myComponent.attach(), it creates a new instance of ChildComponent, which is then\n    responsible for managing the state and messaging back up to the parent, and providing props for the component to\n    utilize.\n*/\n\nexport class ChildComponent<P> {\n\n    component : Component<P>\n    props : PropsType<P>\n    context : string\n    parent : ParentExportsType<P>\n    parentDomain : string\n    parentComponentWindow : CrossDomainWindowType\n\n    onPropHandlers : Array<(PropsType<P>) => void> // eslint-disable-line flowtype/no-mutable-array\n    autoResize : { width : boolean, height : boolean, element? : string }\n\n    constructor(component : Component<P>) {\n        ZalgoPromise.try(() => {\n            this.component = component;\n            this.onPropHandlers = [];\n            \n            const childPayload = getChildPayload();\n\n            if (!childPayload) {\n                throw new Error(`No child payload found`);\n            }\n\n            if (childPayload.version !== __ZOID__.__VERSION__) {\n                throw new Error(`Parent window has zoid version ${ childPayload.version }, child window has version ${ __ZOID__.__VERSION__ }`);\n            }\n\n            const { parent, parentDomain, exports, context, props } = childPayload;\n\n            this.context = context;\n            this.parentComponentWindow = this.getParentComponentWindow(parent);\n            this.parentDomain = parentDomain;\n            this.parent = deserializeMessage(this.parentComponentWindow, parentDomain, exports);\n\n            this.checkParentDomain(parentDomain);\n\n            const initialProps = this.getPropsByRef(this.parentComponentWindow, parentDomain, props);\n            this.setProps(initialProps, parentDomain);\n            markWindowKnown(this.parentComponentWindow);\n            \n            this.watchForClose();\n\n            return this.parent.init(this.buildExports());\n\n        }).then(() => {\n            return this.watchForResize();\n\n        }).catch(err => {\n            this.onError(err);\n        });\n    }\n\n    getHelpers() : ChildHelpers<P> {\n        return {\n            focus:           () => this.focus(),\n            close:           () => this.close(),\n            resize:          ({ width, height }) => this.resize({ width, height }),\n            onError:         (err) => this.onError(err),\n            onProps:         (handler) => this.onProps(handler),\n            getParent:       () => this.parentComponentWindow,\n            getParentDomain: () => this.parentDomain\n        };\n    }\n\n    checkParentDomain(domain : string) {\n        if (!matchDomain(this.component.allowedParentDomains, domain)) {\n            throw new Error(`Can not be rendered by domain: ${ domain }`);\n        }\n    }\n\n    onProps(handler : Function) {\n        this.onPropHandlers.push(handler);\n    }\n\n    getPropsByRef(parentComponentWindow : CrossDomainWindowType, domain : string, { type, value, uid } : PropRef) : (PropsType<P>) {\n        let props;\n\n        if (type === INITIAL_PROPS.RAW) {\n            props = value;\n        } else if (type === INITIAL_PROPS.UID) {\n            if (!isSameDomain(parentComponentWindow)) {\n                throw new Error(`Parent component window is on a different domain - expected ${ getDomain() } - can not retrieve props`);\n            }\n\n            const global = getGlobal(parentComponentWindow);\n            props = assertExists('props', global && global.props[uid]);\n        }\n\n        if (!props) {\n            throw new Error(`Could not find props`);\n        }\n\n        return deserializeMessage(parentComponentWindow, domain, props);\n    }\n\n    getParentComponentWindow(ref : WindowRef) : CrossDomainWindowType {\n        const { type } = ref;\n    \n        if (type === WINDOW_REFERENCES.OPENER) {\n            return assertExists('opener', getOpener(window));\n    \n        } else if (type === WINDOW_REFERENCES.PARENT && typeof ref.distance === 'number') {\n            return assertExists('parent', getNthParentFromTop(window, ref.distance));\n\n        } else if (type === WINDOW_REFERENCES.GLOBAL && ref.uid && typeof ref.uid === 'string') {\n            const { uid } = ref;\n            const ancestor = getAncestor(window);\n\n            if (!ancestor) {\n                throw new Error(`Can not find ancestor window`);\n            }\n\n            for (const frame of getAllFramesInWindow(ancestor)) {\n                if (isSameDomain(frame)) {\n                    const global = getGlobal(frame);\n\n                    if (global && global.windows && global.windows[uid]) {\n                        return global.windows[uid];\n                    }\n                }\n            }\n        }\n    \n        throw new Error(`Unable to find ${ type } parent component window`);\n    }\n\n    getProps() : PropsType<P> {\n        // $FlowFixMe\n        this.props = this.props || {};\n        return this.props;\n    }\n\n    setProps(props : PropsType<P>, origin : string, isUpdate : boolean = false) {\n        const helpers = this.getHelpers();\n        const existingProps = this.getProps();\n        const normalizedProps = normalizeChildProps(this.parentComponentWindow, this.component, props, origin, helpers, isUpdate);\n\n        extend(existingProps, normalizedProps);\n\n        for (const handler of this.onPropHandlers) {\n            handler.call(this, existingProps);\n        }\n    }\n\n    watchForClose() {\n        window.addEventListener('beforeunload', () => {\n            this.parent.checkClose.fireAndForget();\n        });\n\n        window.addEventListener('unload', () => {\n            this.parent.checkClose.fireAndForget();\n        });\n\n        onCloseWindow(this.parentComponentWindow, () => {\n            this.destroy();\n        });\n    }\n\n    getAutoResize() : { width : boolean, height : boolean, element : ?HTMLElement } {\n        let { width = false, height = false, element = 'body' } = this.autoResize || this.component.autoResize || {};\n        element = getElementSafe(element);\n        return { width, height, element };\n    }\n\n    watchForResize() : ?ZalgoPromise<void> {\n        return waitForDocumentBody().then(() => {\n            const { width, height, element } = this.getAutoResize();\n\n            if (!element || (!width && !height) || this.context === CONTEXT.POPUP) {\n                return;\n            }\n\n            onResize(element, ({ width: newWidth, height: newHeight }) => {\n                this.resize({\n                    width:  width ? newWidth : undefined,\n                    height: height ? newHeight : undefined\n                });\n            }, { width, height });\n        });\n    }\n\n    buildExports() : ChildExportsType<P> {\n\n        const self = this;\n\n        return {\n            updateProps(props : (PropsType<P>)) : ZalgoPromise<void> {\n                return ZalgoPromise.try(() => self.setProps(props, this.__origin__, true));\n            },\n\n            close() : ZalgoPromise<void> {\n                return ZalgoPromise.try(() => self.destroy());\n            }\n        };\n    }\n\n    resize({ width, height } : { width : ?number, height : ?number }) : ZalgoPromise<void> {\n        return this.parent.resize.fireAndForget({ width, height });\n    }\n\n    close() : ZalgoPromise<void> {\n        return this.parent.close();\n    }\n    \n    destroy() : ZalgoPromise<void> {\n        return ZalgoPromise.try(() => {\n            window.close();\n        });\n    }\n\n    focus() : ZalgoPromise<void> {\n        return ZalgoPromise.try(() => {\n            window.focus();\n        });\n    }\n\n    onError(err : mixed) : ZalgoPromise<void> {\n        return ZalgoPromise.try(() => {\n            if (this.parent && this.parent.onError) {\n                return this.parent.onError(err);\n            } else {\n                throw err;\n            }\n        });\n    }\n}\n","/* @flow */\n\nimport { ZalgoPromise } from 'zalgo-promise/src';\nimport { cleanUpWindow, ProxyWindow, toProxyWindow } from 'post-robot/src';\nimport { assertSameDomain, closeWindow } from 'cross-domain-utils/src';\nimport { iframe, popup, destroyElement, normalizeDimension, watchElementForClose,\n    awaitFrameWindow, uniqueID } from 'belter/src';\n\nimport { CONTEXT } from '../constants';\nimport { getProxyObject, type ProxyObject } from '../lib';\n\n\nexport type ContextDriverType = {|\n    openOnClick : boolean,\n    openFrame? : () => ProxyObject<HTMLIFrameElement>,\n    open : (?ProxyObject<HTMLIFrameElement>) => ZalgoPromise<ProxyWindow>,\n    openPrerenderFrame? : () => ProxyObject<HTMLIFrameElement>,\n    openPrerender : (ProxyWindow, ?ProxyObject<HTMLIFrameElement>) => ZalgoPromise<ProxyWindow>,\n    resize? : ({ width : ?number, height : ?number }) => void,\n    delegate : $ReadOnlyArray<string>\n|};\n\nexport const RENDER_DRIVERS : { [string] : ContextDriverType } = {};\n\nRENDER_DRIVERS[CONTEXT.IFRAME] = {\n    openOnClick: false,\n\n    openFrame() : ProxyObject<HTMLIFrameElement> {\n        return getProxyObject(iframe({\n            attributes: {\n                title: this.component.name,\n                ...this.component.attributes.iframe\n            }\n        }));\n    },\n\n    open(proxyFrame : ?ProxyObject<HTMLIFrameElement>) : ZalgoPromise<ProxyWindow> {\n        if (!proxyFrame) {\n            throw new Error(`Expected proxy frame to be passed`);\n        }\n\n        return proxyFrame.get().then(frame => {\n            return awaitFrameWindow(frame).then(win => {\n\n                const frameWatcher = watchElementForClose(frame, () => this.close());\n                this.clean.register(() => frameWatcher.cancel());\n                this.clean.register(() => destroyElement(frame));\n                this.clean.register(() => cleanUpWindow(win));\n\n                return toProxyWindow(win);\n            });\n        });\n    },\n\n    openPrerenderFrame() : ProxyObject<HTMLIFrameElement> {\n        return getProxyObject(iframe({\n            attributes: {\n                name:  `__zoid_prerender_frame__${ this.component.name }_${ uniqueID() }__`,\n                title: `prerender__${ this.component.name }`,\n                ...this.component.attributes.iframe\n            }\n        }));\n    },\n\n    openPrerender(proxyWin : ProxyWindow, proxyPrerenderFrame : ?ProxyObject<HTMLIFrameElement>) : ZalgoPromise<ProxyWindow> {\n        if (!proxyPrerenderFrame) {\n            throw new Error(`Expected proxy frame to be passed`);\n        }\n        \n        return proxyPrerenderFrame.get().then(prerenderFrame => {\n            this.clean.register(() => destroyElement(prerenderFrame));\n\n            return awaitFrameWindow(prerenderFrame).then(prerenderFrameWindow => {\n                return assertSameDomain(prerenderFrameWindow);\n            }).then(win => {\n                return toProxyWindow(win);\n            });\n        });\n    },\n\n    delegate: [\n        'getProxyContainer',\n        'renderContainer',\n        'openFrame',\n        'openPrerenderFrame',\n        'prerender',\n        'open',\n        'openPrerender'\n    ]\n};\n\nif (__ZOID__.__POPUP_SUPPORT__) {\n    RENDER_DRIVERS[CONTEXT.POPUP] = {\n        openOnClick: true,\n\n        open() : ZalgoPromise<ProxyWindow> {\n            return ZalgoPromise.try(() => {\n                let { width, height } = this.component.dimensions;\n\n                width = normalizeDimension(width, window.outerWidth);\n                height = normalizeDimension(height, window.outerWidth);\n\n                const win = popup('', {\n                    width,\n                    height,\n                    ...this.component.attributes.popup\n                });\n\n                this.clean.register(() => {\n                    closeWindow(win);\n                    cleanUpWindow(win);\n                });\n\n                return toProxyWindow(win);\n            });\n        },\n\n        openPrerender(proxyWin : ProxyWindow) : ZalgoPromise<ProxyWindow> {\n            return ZalgoPromise.try(() => {\n                return proxyWin;\n            });\n        },\n\n        delegate: [\n            'getProxyContainer',\n            'renderContainer',\n            'setProxyWin'\n        ]\n    };\n}\n","/* @flow */\n\nimport { ZalgoPromise } from 'zalgo-promise/src';\nimport { dotify, isDefined, extend } from 'belter/src';\n\nimport type { Component } from '../component';\nimport type { BuiltInPropsDefinitionType, PropsInputType, PropsType, MixedPropDefinitionType } from '../component/props';\nimport { PROP_SERIALIZATION } from '../constants';\n\nimport type { ParentHelpers } from './index';\n\n/*  Normalize Props\n    ---------------\n\n    Turn props into normalized values, using defaults, function options, etc.\n*/\n\nexport function extendProps<P>(component : Component<P>, props : PropsType<P>, inputProps : PropsInputType<P>, helpers : ParentHelpers<P>, isUpdate : boolean = false) { // eslint-disable-line complexity\n\n    // $FlowFixMe\n    inputProps = inputProps || {};\n    extend(props, inputProps);\n\n    const propNames = isUpdate ? [] : [ ...component.getPropNames() ];\n\n    for (const key of Object.keys(inputProps)) {\n        if (propNames.indexOf(key) === -1) {\n            propNames.push(key);\n        }\n    }\n\n    const aliases = [];\n\n    const { state, close, focus, onError } = helpers;\n\n    for (const key of propNames) {\n        const propDef = component.getPropDefinition(key);\n        let value = inputProps[key];\n\n        if (!propDef) {\n            continue;\n        }\n\n        const alias = propDef.alias;\n        if (alias) {\n            if (!isDefined(value) && isDefined(inputProps[alias])) {\n                value = inputProps[alias];\n            }\n            aliases.push(alias);\n        }\n\n        if (propDef.value) {\n            value = propDef.value({ props, state, close, focus, onError });\n        }\n\n        if (!isDefined(value) && propDef.default) {\n            value = propDef.default({ props, state, close, focus, onError });\n        }\n\n        if (isDefined(value)) {\n            if (propDef.type === 'array' ? !Array.isArray(value) : (typeof value !== propDef.type)) {\n                throw new TypeError(`Prop is not of type ${ propDef.type }: ${ key }`);\n            }\n        }\n        \n        // $FlowFixMe\n        props[key] = value;\n    }\n\n    for (const alias of aliases) {\n        delete props[alias];\n    }\n\n    // $FlowFixMe\n    for (const key of Object.keys(props)) {\n        const propDef = component.getPropDefinition(key);\n        const value = props[key];\n\n        if (!propDef) {\n            continue;\n        }\n\n        if (isDefined(value) && propDef.validate) {\n            // $FlowFixMe\n            propDef.validate({ value, props });\n        }\n\n        if (isDefined(value) && propDef.decorate) {\n            props[key] = propDef.decorate({ value, props, state, close, focus, onError });\n        }\n    }\n\n    for (const key of component.getPropNames()) {\n        const propDef = component.getPropDefinition(key);\n        if (propDef.required !== false && !isDefined(props[key])) {\n            throw new Error(`Expected prop \"${ key }\" to be defined`);\n        }\n    }\n}\n\n// $FlowFixMe\nfunction getQueryParam<T, P>(prop : MixedPropDefinitionType<P>, key : string, value : T) : ZalgoPromise<string> {\n    return ZalgoPromise.try(() => {\n        if (typeof prop.queryParam === 'function') {\n            return prop.queryParam({ value });\n        } else if (typeof prop.queryParam === 'string') {\n            return prop.queryParam;\n        } else {\n            return key;\n        }\n    });\n}\n\n// $FlowFixMe\nfunction getQueryValue<T, P>(prop : MixedPropDefinitionType<P>, key : string, value : T) : ZalgoPromise<mixed> {\n    return ZalgoPromise.try(() => {\n        if (typeof prop.queryValue === 'function' && isDefined(value)) {\n            return prop.queryValue({ value });\n        } else {\n            return value;\n        }\n    });\n}\n\nexport function propsToQuery<P>(propsDef : BuiltInPropsDefinitionType<P>, props : (PropsType<P>)) : ZalgoPromise<{ [string] : string }> {\n\n    const params = {};\n\n    // $FlowFixMe\n    const keys = Object.keys(props);\n    \n    return ZalgoPromise.all(keys.map(key => {\n\n        const prop = propsDef[key];\n\n        if (!prop) {\n            return; // eslint-disable-line array-callback-return\n        }\n\n        return ZalgoPromise.resolve().then(() => {\n\n            const value = props[key];\n\n            if (!value) {\n                return;\n            }\n\n            if (!prop.queryParam) {\n                return;\n            }\n\n            return value;\n\n        }).then(value => {\n\n            if (value === null || typeof value === 'undefined') {\n                return;\n            }\n\n            return ZalgoPromise.all([\n                getQueryParam(prop, key, value),\n                getQueryValue(prop, key, value)\n            ]).then(([ queryParam, queryValue ]) => {\n\n                let result;\n\n                if (typeof queryValue === 'boolean') {\n                    result = queryValue.toString();\n                } else if (typeof queryValue === 'string') {\n                    result = queryValue.toString();\n                } else if (typeof queryValue === 'object' && queryValue !== null) {\n\n                    if (prop.serialization === PROP_SERIALIZATION.JSON) {\n                        result = JSON.stringify(queryValue);\n                    } else if (prop.serialization === PROP_SERIALIZATION.BASE64) {\n                        result = btoa(JSON.stringify(queryValue));\n                    } else if (prop.serialization === PROP_SERIALIZATION.DOTIFY || !prop.serialization) {\n                        result = dotify(queryValue, key);\n\n                        for (const dotkey of Object.keys(result)) {\n                            params[dotkey] = result[dotkey];\n                        }\n\n                        return;\n                    }\n\n                } else if (typeof queryValue === 'number') {\n                    result = queryValue.toString();\n                }\n\n                params[queryParam] = result;\n            });\n        });\n\n    })).then(() => {\n        return params;\n    });\n}\n","/* @flow */\n/* eslint max-lines: 0 */\n\nimport { send, bridge, serializeMessage, ProxyWindow, toProxyWindow, type CrossDomainFunctionType } from 'post-robot/src';\nimport { isSameDomain, matchDomain, getDomainFromUrl, isBlankDomain,\n    getDomain, type CrossDomainWindowType,\n    getDistanceFromTop, normalizeMockUrl, assertSameDomain } from 'cross-domain-utils/src';\nimport { ZalgoPromise } from 'zalgo-promise/src';\nimport { addEventListener, uniqueID, elementReady, writeElementToWindow, eventEmitter, type EventEmitterType,\n    noop, onResize, extendUrl, appendChild, cleanup, type CleanupType, base64encode,\n    once, stringifyError, destroyElement, getElementSafe } from 'belter/src';\n\nimport { ZOID, POST_MESSAGE, CONTEXT, EVENT,\n    INITIAL_PROPS, WINDOW_REFERENCES } from '../constants';\nimport type { Component, onErrorPropType } from '../component';\nimport { getGlobal, getProxyObject, type ProxyObject } from '../lib';\nimport type { PropsInputType, PropsType } from '../component/props';\nimport type { ChildExportsType } from '../child';\nimport type { DimensionsType } from '../types';\n\nimport { RENDER_DRIVERS, type ContextDriverType } from './drivers';\nimport { propsToQuery, extendProps } from './props';\n\nexport type RenderOptionsType<P> = {|\n    uid : string,\n    props : PropsInputType<P>,\n    tag : string,\n    context : string,\n    close : (?string) => ZalgoPromise<void>,\n    focus : () => ZalgoPromise<ProxyWindow>,\n    doc : Document,\n    container? : HTMLElement,\n    dimensions : DimensionsType,\n    state : Object,\n    event : EventEmitterType,\n    frame : ?HTMLIFrameElement,\n    prerenderFrame : ?HTMLIFrameElement\n|};\n\nexport type ParentExportsType<P> = {|\n    init : (ChildExportsType<P>) => ZalgoPromise<void>,\n    close : () => ZalgoPromise<void>,\n    checkClose : CrossDomainFunctionType<[], void>,\n    resize : CrossDomainFunctionType<[{ width? : ?number, height? : ?number }], void>,\n    onError : (mixed) => ZalgoPromise<void>\n|};\n\nexport type PropRef =\n    {| type : typeof INITIAL_PROPS.RAW, uid? : string, value? : string |};\n\nexport type WindowRef =\n    {| type : typeof WINDOW_REFERENCES.OPENER |} |\n    {| type : typeof WINDOW_REFERENCES.PARENT, distance : number |} |\n    {| type : typeof WINDOW_REFERENCES.GLOBAL, uid : string |};\n\nexport type ChildPayload = {|\n    uid : string,\n    tag : string,\n    version : string,\n    context : $Values<typeof CONTEXT>,\n    parentDomain : string,\n    childDomain : string,\n    parent : WindowRef,\n    props : PropRef,\n    exports : string\n|};\n\nexport type StateType = Object;\n\nexport type ParentHelpers<P> = {|\n    state : StateType,\n    close : () => ZalgoPromise<void>,\n    focus : () => ZalgoPromise<void>,\n    resize : ({ width : ?number, height : ?number }) => ZalgoPromise<void>,\n    onError : (mixed) => ZalgoPromise<void>,\n    updateProps : PropsInputType<P> => ZalgoPromise<void>,\n    event : EventEmitterType\n|};\n\nexport class ParentComponent<P> {\n\n    component : Component<P>\n    driver : ContextDriverType\n    clean : CleanupType\n    event : EventEmitterType\n\n    initPromise : ZalgoPromise<void>\n    handledErrors : Array<mixed> // eslint-disable-line flowtype/no-mutable-array\n    \n    props : PropsType<P>\n    state : StateType\n    child : ?ChildExportsType<P>\n\n    proxyWin : ?ProxyWindow\n\n    constructor(component : Component<P>, props : PropsInputType<P>) {\n        this.initPromise = new ZalgoPromise();\n        this.handledErrors = [];\n\n        // $FlowFixMe\n        this.props = {};\n\n        this.clean = cleanup(this);\n        this.state = {};\n\n        this.component = component;\n\n        this.setupEvents(props.onError);\n        this.setProps(props);\n        this.component.registerActiveComponent(this);\n        this.clean.register(() => this.component.destroyActiveComponent(this));\n        this.watchForUnload();\n    }\n\n    setupEvents(onError : ?onErrorPropType) {\n        this.event = eventEmitter();\n        \n        this.event.on(EVENT.RENDER,   () => this.props.onRender());\n        this.event.on(EVENT.DISPLAY,  () => this.props.onDisplay());\n        this.event.on(EVENT.RENDERED, () => this.props.onRendered());\n        this.event.on(EVENT.CLOSE,    () => this.props.onClose());\n        this.event.on(EVENT.RESIZE,   () => this.props.onResize());\n        this.event.on(EVENT.PROPS,    (props) => this.props.onProps(props));\n\n        this.event.on(EVENT.ERROR, err => {\n            if (this.props && this.props.onError) {\n                return this.props.onError(err);\n            } else if (onError) {\n                return onError(err);\n            } else {\n                return this.initPromise.reject(err).then(() => {\n                    setTimeout(() => {\n                        throw err;\n                    }, 1);\n                });\n            }\n        });\n    }\n\n    render(target : CrossDomainWindowType, container : string | HTMLElement, context : $Values<typeof CONTEXT>) : ZalgoPromise<void> {\n        return ZalgoPromise.try(() => {\n            this.component.log(`render`);\n\n            this.driver = RENDER_DRIVERS[context];\n            const uid = `${ ZOID }-${ this.component.tag }-${ uniqueID() }`;\n            const domain = this.getDomain();\n            const childDomain = this.getChildDomain();\n            \n            this.component.checkAllowRender(target, domain, container);\n\n            if (target !== window) {\n                this.delegate(context, target);\n            }\n\n            const tasks = {};\n\n            const init = this.initPromise;\n            const buildUrl = this.buildUrl();\n            const onRender = this.event.trigger(EVENT.RENDER);\n\n            const getProxyContainer = this.getProxyContainer(container);\n\n            const openFrame = this.openFrame();\n            const openPrerenderFrame = this.openPrerenderFrame();\n\n            const renderContainer = ZalgoPromise.hash({ proxyContainer: getProxyContainer, proxyFrame: openFrame, proxyPrerenderFrame: openPrerenderFrame }).then(({ proxyContainer, proxyFrame, proxyPrerenderFrame }) => {\n                return this.renderContainer(proxyContainer, { context, uid, proxyFrame, proxyPrerenderFrame });\n            });\n\n            const open = this.driver.openOnClick\n                ? this.open()\n                : openFrame.then(proxyFrame => this.open(proxyFrame));\n\n            const openPrerender = ZalgoPromise.hash({ proxyWin: open, proxyPrerenderFrame: openPrerenderFrame }).then(({ proxyWin, proxyPrerenderFrame }) => {\n                return this.openPrerender(proxyWin, proxyPrerenderFrame);\n            });\n\n            const setState = open.then(proxyWin => {\n                this.proxyWin = proxyWin;\n                return this.setProxyWin(proxyWin);\n            });\n            \n            const prerender = ZalgoPromise.hash({ proxyPrerenderWin: openPrerender, state: setState }).then(({ proxyPrerenderWin }) => {\n                return this.prerender(proxyPrerenderWin, { context, uid });\n            });\n\n            const buildWindowName = open.then(proxyWin => {\n                return this.buildWindowName({ proxyWin, childDomain, domain, target, context, uid });\n            });\n\n            const setWindowName =  ZalgoPromise.hash({ proxyWin: open, windowName: buildWindowName }).then(({ proxyWin, windowName }) => {\n                return proxyWin.setName(windowName);\n            });\n\n            const loadUrl = ZalgoPromise.hash({ proxyWin: open, url: buildUrl, windowName: setWindowName, prerender }).then(({ proxyWin, url }) => {\n                return proxyWin.setLocation(url);\n            });\n\n            const watchForClose = open.then(proxyWin => {\n                this.watchForClose(proxyWin);\n            });\n\n            const onDisplay = ZalgoPromise.hash({ container: renderContainer, prerender }).then(() => {\n                return this.event.trigger(EVENT.DISPLAY);\n            });\n\n            const openBridge = open.then(proxyWin => {\n                return this.openBridge(proxyWin, childDomain, context);\n            });\n\n            const runTimeout = loadUrl.then(() => {\n                return this.runTimeout();\n            });\n\n            const onRendered = init.then(() => {\n                return this.event.trigger(EVENT.RENDERED);\n            });\n\n            return ZalgoPromise.hash({\n                init, buildUrl, onRender, getProxyContainer, openFrame, openPrerenderFrame, renderContainer, open,\n                openPrerender, setState, prerender, loadUrl, buildWindowName, setWindowName, watchForClose, onDisplay,\n                openBridge, runTimeout, onRendered\n            }).catch(err => {\n                for (const taskName of Object.keys(tasks)) {\n                    tasks[taskName].reject(err);\n                }\n\n                throw err;\n            });\n            \n        }).catch(err => {\n            return ZalgoPromise.all([\n                this.onError(err),\n                this.destroy(err)\n            ]).then(() => {\n                throw err;\n            });\n        }).then(noop);\n    }\n\n    getProxyContainer(container : string | HTMLElement) : ZalgoPromise<ProxyObject<HTMLElement>> {\n        return ZalgoPromise.try(() => {\n            return elementReady(container);\n        }).then(containerElement => {\n            return getProxyObject(containerElement);\n        });\n    }\n\n    buildWindowName({ proxyWin, childDomain, domain, target, uid, context } : { proxyWin : ProxyWindow, childDomain : string, domain : string | RegExp, target : CrossDomainWindowType, context : $Values<typeof CONTEXT>, uid : string }) : string {\n        const childPayload = this.buildChildPayload({ proxyWin, childDomain, domain, target, context, uid });\n        return `__${ ZOID }__${ this.component.name }__${ base64encode(JSON.stringify(childPayload)) }__`;\n    }\n\n    getPropsRef(proxyWin : ProxyWindow, childDomain : string, domain : string | RegExp, uid : string) : PropRef {\n        const value = serializeMessage(proxyWin, domain, this.getPropsForChild(domain));\n\n        const propRef = (childDomain === getDomain())\n            ? { type: INITIAL_PROPS.UID, uid }\n            : { type: INITIAL_PROPS.RAW, value };\n\n        if (propRef.type === INITIAL_PROPS.UID) {\n            const global = getGlobal(window);\n            global.props = global.props || {};\n            global.props[uid] = value;\n\n            this.clean.register(() => {\n                delete global.props[uid];\n            });\n        }\n\n        return propRef;\n    }\n\n    buildChildPayload({ proxyWin, childDomain, domain, target = window, context, uid } : { proxyWin : ProxyWindow, childDomain : string, domain : string | RegExp, target : CrossDomainWindowType, context : $Values<typeof CONTEXT>, uid : string } = {}) : ChildPayload {\n        return {\n            uid,\n            context,\n            version:      __ZOID__.__VERSION__,\n            childDomain,\n            parentDomain: getDomain(window),\n            tag:          this.component.tag,\n            parent:       this.getWindowRef(target, childDomain, uid, context),\n            props:        this.getPropsRef(proxyWin, childDomain, domain, uid),\n            exports:      serializeMessage(proxyWin, domain, this.buildParentExports(proxyWin))\n        };\n    }\n\n    setProxyWin(proxyWin : ProxyWindow) : ZalgoPromise<void> {\n        return ZalgoPromise.try(() => {\n            this.proxyWin = proxyWin;\n        });\n    }\n\n    getHelpers() : ParentHelpers<P> {\n        return {\n            state:       this.state,\n            event:       this.event,\n            close:       () => this.close(),\n            focus:       () => this.focus(),\n            resize:      ({ width, height }) => this.resize({ width, height }),\n            onError:     (err) => this.onError(err),\n            updateProps: (props) => this.updateProps(props)\n        };\n    }\n\n    setProps(props : PropsInputType<P>, isUpdate : boolean = false) {\n        if (this.component.validate) {\n            this.component.validate({ props });\n        }\n\n        const helpers = this.getHelpers();\n        extendProps(this.component, this.props, props, helpers, isUpdate);\n    }\n\n    buildUrl() : ZalgoPromise<string> {\n        return propsToQuery({ ...this.component.props, ...this.component.builtinProps }, this.props).then(query => {\n            return extendUrl(normalizeMockUrl(this.component.getUrl(this.props)), { query });\n        });\n    }\n\n    getDomain() : string | RegExp {\n        return this.component.getDomain(this.props);\n    }\n\n    getChildDomain() : string {\n        return this.component.getChildDomain(this.props);\n    }\n\n    getPropsForChild(domain : string | RegExp) : (PropsType<P>) {\n        const result = {};\n\n        for (const key of Object.keys(this.props)) {\n            const prop = this.component.getPropDefinition(key);\n\n            if (prop && prop.sendToChild === false) {\n                continue;\n            }\n\n            if (prop && prop.sameDomain && !matchDomain(domain, getDomain(window))) {\n                continue;\n            }\n            \n            result[key] = this.props[key];\n        }\n\n        // $FlowFixMe\n        return result;\n    }\n\n    updateProps(props : PropsInputType<P>) : ZalgoPromise<void> {\n        this.setProps(props, true);\n\n        return this.initPromise.then(() => {\n            if (this.child) {\n                return this.child.updateProps(this.getPropsForChild(this.getDomain())).catch(err => {\n                    if (!this.child || !this.proxyWin) {\n                        return;\n                    }\n\n                    return this.checkClose(this.proxyWin).then(() => {\n                        if (this.child) {\n                            throw err;\n                        }\n                    });\n                });\n            }\n        });\n    }\n\n    openFrame() : ZalgoPromise<?ProxyObject<HTMLIFrameElement>> {\n        return ZalgoPromise.try(() => {\n            if (this.driver.openFrame) {\n                return this.driver.openFrame.call(this);\n            }\n        });\n    }\n\n    openPrerenderFrame() : ZalgoPromise<?ProxyObject<HTMLIFrameElement>> {\n        return ZalgoPromise.try(() => {\n            if (this.driver.openPrerenderFrame) {\n                return this.driver.openPrerenderFrame.call(this);\n            }\n        });\n    }\n    \n    open(proxyFrame : ?ProxyObject<HTMLIFrameElement>) : ZalgoPromise<ProxyWindow> {\n        return ZalgoPromise.try(() => {\n            this.component.log(`open`);\n\n            const windowProp = this.props.window;\n\n            if (windowProp) {\n                this.clean.register(() => windowProp.close());\n                return toProxyWindow(windowProp);\n            }\n\n            return this.driver.open.call(this, proxyFrame);\n\n        }).then(proxyWin => {\n            this.proxyWin = proxyWin;\n            return proxyWin;\n        });\n    }\n\n    openPrerender(proxyWin : ProxyWindow, proxyPrerenderFrame : ?ProxyObject<HTMLIFrameElement>) : ZalgoPromise<ProxyWindow> {\n        return ZalgoPromise.try(() => {\n            return this.driver.openPrerender.call(this, proxyWin, proxyPrerenderFrame);\n        });\n    }\n\n    focus() : ZalgoPromise<void> {\n        return ZalgoPromise.try(() => {\n            if (this.proxyWin) {\n                return this.proxyWin.focus().then(noop);\n            }\n        });\n    }\n\n    delegate(context : $Values<typeof CONTEXT>, target : CrossDomainWindowType) {\n        this.component.log(`delegate`);\n\n        const props = {};\n        for (const propName of this.component.getPropNames()) {\n            if (this.component.getPropDefinition(propName).allowDelegate) {\n                props[propName] = this.props[propName];\n            }\n        }\n\n        const overridesPromise = send(target, `${ POST_MESSAGE.DELEGATE }_${ this.component.name }`, {\n            context,\n            props,\n            overrides: {\n                event:   this.event,\n                close:   () => this.close(),\n                onError: (err) => this.onError(err)\n            }\n\n        }).then(({ data }) => {\n            this.clean.register(data.destroy);\n            return data.overrides;\n\n        }).catch(err => {\n            throw new Error(`Unable to delegate rendering. Possibly the component is not loaded in the target window.\\n\\n${ stringifyError(err) }`);\n        });\n\n        for (const key of this.driver.delegate) {\n            // $FlowFixMe\n            this[key] = function overriddenFunction() : ZalgoPromise<mixed> {\n                return overridesPromise.then(overrides => {\n                    return overrides[key].apply(this, arguments);\n                });\n            };\n        }\n    }\n\n    getWindowRef(target : CrossDomainWindowType, domain : string, uid : string, context : $Values<typeof CONTEXT>) : WindowRef {\n        \n        if (domain === getDomain(window)) {\n            const global = getGlobal(window);\n            global.windows = global.windows || {};\n            global.windows[uid] = window;\n            this.clean.register(() => {\n                delete global.windows[uid];\n            });\n    \n            return { type: WINDOW_REFERENCES.GLOBAL, uid };\n        }\n\n        if (context === CONTEXT.POPUP) {\n            return { type: WINDOW_REFERENCES.OPENER };\n        }\n\n        return { type: WINDOW_REFERENCES.PARENT, distance: getDistanceFromTop(window) };\n    }\n\n    watchForClose(proxyWin : ProxyWindow) : ZalgoPromise<void> {\n        let cancelled = false;\n\n        this.clean.register(() => {\n            cancelled = true;\n        });\n\n        return ZalgoPromise.delay(2000).then(() => {\n            return proxyWin.isClosed();\n        }).then(isClosed => {\n            if (isClosed) {\n                this.component.log(`detect_close_child`);\n                return this.close();\n            } else if (!cancelled) {\n                return this.watchForClose(proxyWin);\n            }\n        });\n    }\n\n    watchForUnload() {\n        const unloadWindowListener = addEventListener(window, 'unload', once(() => {\n            this.component.log(`navigate_away`);\n            this.destroy(new Error(`Window navigated away`));\n        }));\n\n        this.clean.register(unloadWindowListener.cancel);\n    }\n\n    runTimeout() : ZalgoPromise<void> {\n        return ZalgoPromise.try(() => {\n            const timeout = this.props.timeout;\n\n            if (timeout) {\n                return this.initPromise.timeout(timeout, new Error(`Loading component timed out after ${ timeout } milliseconds`));\n            }\n        });\n    }\n\n    initChild(child : ChildExportsType<P>) : ZalgoPromise<void> {\n        return ZalgoPromise.try(() => {\n            this.clean.set('child', child);\n            this.initPromise.resolve();\n        });\n    }\n\n    buildParentExports(win : ProxyWindow) : ParentExportsType<P> {\n        const onError    = (err) => this.onError(err);\n        const init       = (child) => this.initChild(child);\n        const close      = () => this.close();\n        const checkClose = () => this.checkClose(win);\n        const resize     = ({ width, height }) => this.resize({ width, height });\n\n        init.onError = onError;\n\n        return { init, close, checkClose, resize, onError };\n    }\n\n    resize({ width, height } : { width? : ?number, height? : ?number }) : ZalgoPromise<void> {\n        return ZalgoPromise.try(() => {\n            this.event.trigger(EVENT.RESIZE, { width, height });\n        });\n    }\n\n    checkClose(win : ProxyWindow) : ZalgoPromise<void> {\n        return win.isClosed().then(closed => {\n            if (closed) {\n                return this.close();\n            }\n\n            return ZalgoPromise.delay(200)\n                .then(() => win.isClosed())\n                .then(secondClosed => {\n                    if (secondClosed) {\n                        return this.close();\n                    }\n                });\n        });\n    }\n\n    close() : ZalgoPromise<void> {\n        return ZalgoPromise.try(() => {\n            this.component.log(`close`);\n            return this.event.trigger(EVENT.CLOSE);\n\n        }).then(() => {\n            if (this.child) {\n                this.child.close.fireAndForget().catch(noop);\n            }\n\n            return this.destroy(new Error(`Window closed`), false);\n        });\n    }\n\n    prerender(proxyPrerenderWin : ProxyWindow, { context, uid } : { context : $Values<typeof CONTEXT>, uid : string }) : ZalgoPromise<void> {\n        return ZalgoPromise.try(() => {\n            const prerenderTemplate = this.component.prerenderTemplate;\n\n            if (!prerenderTemplate) {\n                return;\n            }\n\n            let prerenderWindow = proxyPrerenderWin.getWindow();\n\n            if (!prerenderWindow || !isSameDomain(prerenderWindow) || !isBlankDomain(prerenderWindow)) {\n                return;\n            }\n\n            prerenderWindow = assertSameDomain(prerenderWindow);\n    \n            const doc = prerenderWindow.document;\n            const el = this.renderTemplate(prerenderTemplate, { context, uid, doc });\n\n            if (!el) {\n                return;\n            }\n\n            if (el.ownerDocument !== doc) {\n                throw new Error(`Expected prerender template to have been created with document from child window`);\n            }\n\n            writeElementToWindow(prerenderWindow, el);\n\n            let { width = false, height = false, element = 'body' } = this.component.autoResize || {};\n            element = getElementSafe(element, doc);\n            \n            if (element && (width || height)) {\n                onResize(element, ({ width: newWidth, height: newHeight }) => {\n                    this.resize({\n                        width:  width ? newWidth : undefined,\n                        height: height ? newHeight : undefined\n                    });\n                }, { width, height, win: prerenderWindow });\n            }\n        });\n    }\n\n    renderTemplate(renderer : (RenderOptionsType<P>) => ?HTMLElement, { context, uid, container, doc, frame, prerenderFrame } : { context : $Values<typeof CONTEXT>, uid : string, container? : HTMLElement, doc : Document, frame? : ?HTMLIFrameElement, prerenderFrame? : ?HTMLIFrameElement }) : ?HTMLElement {\n        // $FlowFixMe\n        return renderer.call(this, {\n            container,\n            context,\n            uid,\n            doc,\n            frame,\n            prerenderFrame,\n            focus:      () => this.focus(),\n            close:      () => this.close(),\n            state:      this.state,\n            props:      this.props,\n            tag:        this.component.tag,\n            dimensions: this.component.dimensions,\n            event:      this.event\n        });\n    }\n\n    renderContainer(proxyContainer : ProxyObject<HTMLElement>, { proxyFrame, proxyPrerenderFrame, context, uid } :\n        { context : $Values<typeof CONTEXT>, uid : string, proxyFrame : ?ProxyObject<HTMLIFrameElement>, proxyPrerenderFrame : ?ProxyObject<HTMLIFrameElement> }) : ZalgoPromise<?ProxyObject<HTMLElement>> {\n        \n\n        return ZalgoPromise.hash({\n            container:      proxyContainer.get().then(elementReady),\n            // $FlowFixMe\n            frame:          proxyFrame ? proxyFrame.get() : null,\n            // $FlowFixMe\n            prerenderFrame: proxyPrerenderFrame ? proxyPrerenderFrame.get() : null\n        }).then(({ container, frame, prerenderFrame }) => {\n            const innerContainer = this.renderTemplate(this.component.containerTemplate, { context, uid, container, frame, prerenderFrame, doc: document });\n            if (innerContainer) {\n                appendChild(container, innerContainer);\n                this.clean.register(() => destroyElement(innerContainer));\n                return getProxyObject(innerContainer);\n            }\n        });\n    }\n\n    destroy(err? : mixed, trigger? : boolean = true) : ZalgoPromise<void> {\n        return ZalgoPromise.try(() => {\n            if (!err) {\n                trigger = false;\n                err = new Error('Component destroyed');\n            }\n            this.component.log(`destroy`);\n            return this.onError(err, trigger);\n        }).then(() => {\n            return this.clean.all();\n        });\n    }\n\n    onError(err : mixed, trigger? : boolean = true) : ZalgoPromise<void> {\n        return ZalgoPromise.try(() => {\n            if (this.handledErrors.indexOf(err) !== -1) {\n                return;\n            }\n\n            this.handledErrors.push(err);\n            this.initPromise.asyncReject(err);\n\n            if (trigger) {\n                return this.event.trigger(EVENT.ERROR, err);\n            }\n        });\n    }\n\n    openBridge(proxyWin : ProxyWindow, domain : string, context : $Values<typeof CONTEXT>) : ?ZalgoPromise<?CrossDomainWindowType> {\n        if (__POST_ROBOT__.__IE_POPUP_SUPPORT__) {\n            return ZalgoPromise.try(() => {\n                return proxyWin.awaitWindow();\n                \n            }).then(win => {\n                if (!bridge || !bridge.needsBridge({ win, domain }) || bridge.hasBridge(domain, domain)) {\n                    return;\n                }\n\n                const bridgeUrl = this.component.getBridgeUrl();\n\n                if (!bridgeUrl) {\n                    throw new Error(`Bridge needed to render ${ context }`);\n                }\n\n                const bridgeDomain = getDomainFromUrl(bridgeUrl);\n                bridge.linkUrl(win, domain);\n                return bridge.openBridge(normalizeMockUrl(bridgeUrl), bridgeDomain);\n            });\n        }\n    }\n}\n","/* @flow */\n\nimport { onCloseWindow, type CrossDomainWindowType } from 'cross-domain-utils/src';\nimport { ZalgoPromise } from 'zalgo-promise/src';\nimport { ProxyWindow } from 'post-robot/src';\nimport { cleanup, type CleanupType, type EventEmitterType } from 'belter/src';\n\nimport { ParentComponent } from '../parent';\nimport { RENDER_DRIVERS, type ContextDriverType } from '../parent/drivers';\nimport type { Component } from '../component';\n\nexport type DelegatePropsType = {|\n    onClose : () => ?ZalgoPromise<void>,\n    onDisplay : () => ?ZalgoPromise<void>,\n    window : ?ProxyWindow\n|};\n\nexport type DelegateOptionsType = {|\n    context : string,\n    props : DelegatePropsType,\n    overrides : {\n        close : () => ZalgoPromise<void>,\n        onError : (mixed) => ZalgoPromise<void>,\n        event : EventEmitterType\n    }\n|};\n\nexport type DelegateReturnType = {|\n    overrides : Object,\n    destroy : () => ZalgoPromise<void>\n|};\n\nexport class DelegateComponent<P>  {\n\n    component : Component<P>\n    source : CrossDomainWindowType\n    context : string\n    driver : ContextDriverType\n    props : DelegatePropsType\n    clean : CleanupType\n\n    focus : () => ZalgoPromise<void>\n    resize : ({ width? : ?number, height? : ?number }) => ZalgoPromise<void>\n    renderTemplate : Function\n\n    close : () => ZalgoPromise<void>\n    onError : (mixed) => ZalgoPromise<void>\n    event : EventEmitterType\n\n    constructor(component : Component<P>, source : CrossDomainWindowType, options : DelegateOptionsType) {\n        this.component = component;\n        this.context = options.context;\n        this.driver = RENDER_DRIVERS[options.context];\n        this.clean = cleanup(this);\n        \n        this.focus = ParentComponent.prototype.focus;\n        this.resize = ParentComponent.prototype.resize;\n        this.renderTemplate = ParentComponent.prototype.renderTemplate;\n\n        // $FlowFixMe\n        this.props = {};\n        \n        for (const propName of Object.keys(options.props)) {\n            const propDef = this.component.getPropDefinition(propName);\n            if (propDef && propDef.allowDelegate && options.props[propName]) {\n                // $FlowFixMe\n                this.props[propName] = options.props[propName];\n            }\n        }\n\n        this.close   = options.overrides.close;\n        this.onError = options.overrides.onError;\n        this.event   = options.overrides.event;\n\n        this.component.registerActiveComponent(this);\n        this.clean.register(() => this.component.destroyActiveComponent(this));\n\n        this.watchForSourceClose(source);\n    }\n\n    getDelegate() : DelegateReturnType {\n        return {\n            overrides: this.getOverrides(),\n            destroy:   () => this.destroy()\n        };\n    }\n\n    watchForSourceClose(source : CrossDomainWindowType) {\n        const closeSourceWindowListener = onCloseWindow(source, () => this.destroy(), 3000);\n        this.clean.register(closeSourceWindowListener.cancel);\n    }\n\n    getOverrides() : { [string] : mixed } {\n        const overrides = {};\n        const self = this;\n\n        for (const key of this.driver.delegate) {\n            overrides[key] = function delegateOverride() : mixed {\n                // $FlowFixMe\n                return ParentComponent.prototype[key].apply(self, arguments);\n            };\n            overrides[key].__name__ = key;\n        }\n\n        return overrides;\n    }\n\n    destroy() : ZalgoPromise<void> {\n        return this.clean.all();\n    }\n}\n","/* @flow */\n/* eslint react/react-in-jsx-scope: off */\n\nimport { destroyElement, toCSS } from 'belter/src';\n\nimport { type RenderOptionsType } from '../../parent';\nimport { EVENT } from '../../constants';\n\nconst CLASS = {\n    VISIBLE:   'visible',\n    INVISIBLE: 'invisible'\n};\n\nexport function defaultContainerTemplate<P>({ uid, frame, prerenderFrame, doc, props, event, dimensions : { width, height } } : RenderOptionsType<P>) : ?HTMLElement {\n    if (__ZOID__.__DEFAULT_CONTAINER__) {\n        if (!frame || !prerenderFrame) {\n            return;\n        }\n\n        const div = doc.createElement('div');\n        div.setAttribute('id', uid);\n        const style = doc.createElement('style');\n        if (props.cspNonce) {\n            style.setAttribute('nonce', props.cspNonce);\n        }\n\n        style.appendChild(doc.createTextNode(`\n            #${ uid } {\n                display: inline-block;\n                position: relative;\n                width: ${ width };\n                height: ${ height };\n            }\n\n            #${ uid } > iframe {\n                display: inline-block;\n                position: absolute;\n                width: 100%;\n                height: 100%;\n                top: 0;\n                left: 0;\n                transition: opacity .2s ease-in-out;\n            }\n\n            #${ uid } > iframe.${ CLASS.INVISIBLE } {\n                opacity: 0;\n            }\n\n            #${ uid } > iframe.${ CLASS.VISIBLE } {\n                opacity: 1;\n        }\n        `));\n\n        div.appendChild(frame);\n        div.appendChild(prerenderFrame);\n        div.appendChild(style);\n\n        prerenderFrame.classList.add(CLASS.VISIBLE);\n        frame.classList.add(CLASS.INVISIBLE);\n    \n        event.on(EVENT.RENDERED, () => {\n            prerenderFrame.classList.remove(CLASS.VISIBLE);\n            prerenderFrame.classList.add(CLASS.INVISIBLE);\n    \n            frame.classList.remove(CLASS.INVISIBLE);\n            frame.classList.add(CLASS.VISIBLE);\n    \n            setTimeout(() => {\n                destroyElement(prerenderFrame);\n            }, 1);\n        });\n\n        event.on(EVENT.RESIZE, ({ width: newWidth, height: newHeight }) => {\n            if (typeof newWidth === 'number') {\n                div.style.width = toCSS(newWidth);\n            }\n    \n            if (typeof newHeight === 'number') {\n                div.style.height = toCSS(newHeight);\n            }\n        });\n\n        return div;\n    }\n}\n","/* @flow */\n/* eslint react/react-in-jsx-scope: off */\n\nimport { type RenderOptionsType } from '../../parent';\n\nexport function defaultPrerenderTemplate<P>({ doc, props } : RenderOptionsType<P>) : ?HTMLElement {\n    if (__ZOID__.__DEFAULT_PRERENDER__) {\n        const html = doc.createElement('html');\n        const body = doc.createElement('body');\n        const style = doc.createElement('style');\n        const spinner = doc.createElement('div');\n        spinner.classList.add('spinner');\n\n        if (props.cspNonce) {\n            style.setAttribute('nonce', props.cspNonce);\n        }\n\n        html.appendChild(body);\n        body.appendChild(spinner);\n        body.appendChild(style);\n        style.appendChild(doc.createTextNode(`\n            html, body {\n                width: 100%;\n                height: 100%;\n            }\n\n            .spinner {\n                position: fixed;\n                max-height: 60vmin;\n                max-width: 60vmin;\n                height: 40px;\n                width: 40px;\n                top: 50%;\n                left: 50%;\n                box-sizing: border-box;\n                border: 3px solid rgba(0, 0, 0, .2);\n                border-top-color: rgba(33, 128, 192, 0.8);\n                border-radius: 100%;\n                animation: rotation .7s infinite linear;\n            }\n\n            @keyframes rotation {\n                from {\n                    transform: translateX(-50%) translateY(-50%) rotate(0deg);\n                }\n                to {\n                    transform: translateX(-50%) translateY(-50%) rotate(359deg);\n                }\n            }\n        `));\n\n        return html;\n    }\n}\n","/* @flow */\n\nimport { ZalgoPromise } from 'zalgo-promise/src';\nimport { once, noop } from 'belter/src';\nimport { isWindow, type CrossDomainWindowType } from 'cross-domain-utils/src';\nimport { ProxyWindow, toProxyWindow } from 'post-robot/src';\n\nimport { PROP_SERIALIZATION } from '../constants';\n\nexport type EventHandlerType<T> = (T) => void | ZalgoPromise<void>;\n\nexport type timeoutPropType = number;\nexport type windowPropType = CrossDomainWindowType | ProxyWindow;\nexport type cspNoncePropType = string;\nexport type closePropType = () => ZalgoPromise<void>;\nexport type focusPropType = () => ZalgoPromise<void>;\nexport type resizePropType = ({ width : ?number, height : ?number }) => ZalgoPromise<void>;\n\nexport type onDisplayPropType = EventHandlerType<void>;\nexport type onRenderedPropType = EventHandlerType<void>;\nexport type onRenderPropType = EventHandlerType<void>;\nexport type onClosePropType = EventHandlerType<void>;\nexport type onResizePropType = EventHandlerType<void>;\nexport type onErrorPropType = EventHandlerType<mixed>;\nexport type onPropsPropType<P> = ((PropsType<P>) => void) => void; // eslint-disable-line no-use-before-define\n\nexport type PropsInputType<P> = {\n    timeout? : timeoutPropType,\n    window? : windowPropType,\n    cspNonce? : cspNoncePropType,\n\n    onDisplay? : onDisplayPropType,\n    onRendered? : onRenderedPropType,\n    onRender? : onRenderPropType,\n    onClose? : onClosePropType,\n    onResize? : onResizePropType,\n    onError? : onErrorPropType,\n    onProps? : onPropsPropType<P>\n} & P;\n\nexport type PropsType<P> = {|\n    timeout? : timeoutPropType,\n    window? : ?windowPropType,\n    close? : ?closePropType,\n    focus? : ?focusPropType,\n    resize? : ?resizePropType,\n    cspNonce? : ?cspNoncePropType,\n\n    onDisplay : onDisplayPropType,\n    onRendered : onRenderedPropType,\n    onRender : onRenderPropType,\n    onClose : onClosePropType,\n    onResize : onResizePropType,\n    onError : onErrorPropType,\n    onProps : onPropsPropType<P>\n|} & P;\n\ntype PropDefinitionType<T, P, S : string> = {|\n    type : S,\n    alias? : string,\n    value? : ({ props : P, state : Object, close : () => ZalgoPromise<void>, focus : () => ZalgoPromise<void>, onError : (mixed) => ZalgoPromise<void> }) => ?T,\n    required? : boolean,\n    queryParam? : boolean | string | ({ value : T }) => (string | ZalgoPromise<string>),\n    queryValue? : ({ value : T }) => (ZalgoPromise<mixed> | mixed),\n    sendToChild? : boolean,\n    allowDelegate? : boolean,\n    validate? : ({ value : T, props : PropsInputType<P> }) => void,\n    decorate? : ({ value : T, props : PropsType<P>, state : Object, close : () => ZalgoPromise<void>, focus : () => ZalgoPromise<void>, onError : (mixed) => ZalgoPromise<void> }) => T,\n    default? : ({ props : P, state : Object }) => ?T,\n    sameDomain? : boolean,\n    serialization? : $Values<typeof PROP_SERIALIZATION>,\n    childDecorate? : ({ value : T, close : () => ZalgoPromise<void>, focus : () => ZalgoPromise<void>, onError : (mixed) => ZalgoPromise<void>, onProps : ((PropsType<P>) => void) => void, resize : ({ width : ?number, height : ?number }) => ZalgoPromise<void> }) => ?T\n|};\n\nexport type BooleanPropDefinitionType<T : boolean, P> = PropDefinitionType<T, P, 'boolean'>;\nexport type StringPropDefinitionType<T : string, P> = PropDefinitionType<T, P, 'string'>;\nexport type NumberPropDefinitionType<T : number, P> = PropDefinitionType<T, P, 'number'>;\nexport type FunctionPropDefinitionType<T : Function, P> = PropDefinitionType<T, P, 'function'>;\nexport type ArrayPropDefinitionType<T : Array<*> | $ReadOnlyArray<*>, P> = PropDefinitionType<T, P, 'array'>; // eslint-disable-line flowtype/no-mutable-array\nexport type ObjectPropDefinitionType<T : Object, P> = PropDefinitionType<T, P, 'object'>;\n\nexport type MixedPropDefinitionType<P> = BooleanPropDefinitionType<*, P> | StringPropDefinitionType<*, P> | NumberPropDefinitionType<*, P> | FunctionPropDefinitionType<*, P> | ObjectPropDefinitionType<*, P> | ArrayPropDefinitionType<*, P>;\n\nexport type UserPropsDefinitionType<P> = {\n    [string] : MixedPropDefinitionType<P>\n};\n\n// eslint-disable-next-line flowtype/require-exact-type\nexport type BuiltInPropsDefinitionType<P> = {\n    timeout : NumberPropDefinitionType<timeoutPropType, P>,\n    window : ObjectPropDefinitionType<windowPropType, P>,\n    close : FunctionPropDefinitionType<closePropType, P>,\n    focus : FunctionPropDefinitionType<focusPropType, P>,\n    resize : FunctionPropDefinitionType<resizePropType, P>,\n\n    onDisplay : FunctionPropDefinitionType<onDisplayPropType, P>,\n    onRendered : FunctionPropDefinitionType<onRenderedPropType, P>,\n    onRender : FunctionPropDefinitionType<onRenderPropType, P>,\n    onClose : FunctionPropDefinitionType<onClosePropType, P>,\n    onResize : FunctionPropDefinitionType<onClosePropType, P>,\n    onError : FunctionPropDefinitionType<onErrorPropType, P>,\n    onProps : FunctionPropDefinitionType<onPropsPropType<P>, P>\n};\n\nconst defaultNoop = () => noop;\nconst decorateOnce = ({ value }) => once(value);\n\nexport function getBuiltInProps<P>() : BuiltInPropsDefinitionType<P> {\n    return {\n        window: {\n            type:          'object',\n            sendToChild:   false,\n            required:      false,\n            allowDelegate: true,\n            validate({ value } : { value : CrossDomainWindowType | ProxyWindow }) {\n                if (!isWindow(value) && !ProxyWindow.isProxyWindow(value)) {\n                    throw new Error(`Expected Window or ProxyWindow`);\n                }\n            },\n            decorate({ value } : { value : CrossDomainWindowType | ProxyWindow }) : ProxyWindow {\n                return toProxyWindow(value);\n            }\n        },\n\n        timeout: {\n            type:        'number',\n            required:    false,\n            sendToChild: false\n        },\n\n        close: {\n            type:          'function',\n            required:      false,\n            sendToChild:   false,\n            childDecorate: ({ close }) => close\n        },\n\n        focus: {\n            type:          'function',\n            required:      false,\n            sendToChild:   false,\n            childDecorate: ({ focus }) => focus\n        },\n\n        resize: {\n            type:          'function',\n            required:      false,\n            sendToChild:   false,\n            childDecorate: ({ resize }) => resize\n        },\n\n        cspNonce: {\n            type:     'string',\n            required: false\n        },\n\n        getParent: {\n            type:          'function',\n            required:      false,\n            sendToChild:   false,\n            childDecorate: ({ getParent }) => getParent\n        },\n\n        getParentDomain: {\n            type:          'function',\n            required:      false,\n            sendToChild:   false,\n            childDecorate: ({ getParentDomain }) => getParentDomain\n        },\n\n        onDisplay: {\n            type:          'function',\n            required:      false,\n            sendToChild:   false,\n            allowDelegate: true,\n            default:       defaultNoop,\n            decorate:      decorateOnce\n        },\n\n        onRendered: {\n            type:        'function',\n            required:    false,\n            sendToChild: false,\n            default:     defaultNoop,\n            decorate:    decorateOnce\n        },\n\n        onRender: {\n            type:        'function',\n            required:    false,\n            sendToChild: false,\n            default:     defaultNoop,\n            decorate:    decorateOnce\n        },\n\n        onClose: {\n            type:          'function',\n            required:      false,\n            sendToChild:   false,\n            allowDelegate: true,\n            default:       defaultNoop,\n            decorate:      decorateOnce\n        },\n\n        onResize: {\n            type:          'function',\n            required:      false,\n            sendToChild:   false,\n            allowDelegate: true,\n            default:       defaultNoop\n        },\n\n        onError: {\n            type:          'function',\n            required:      false,\n            sendToChild:   false,\n            childDecorate: ({ onError }) => onError\n        },\n\n        onProps: {\n            type:          'function',\n            required:      false,\n            sendToChild:   false,\n            default:       defaultNoop,\n            childDecorate: ({ onProps }) => onProps\n        }\n    };\n}\n","/* @flow */\n/* eslint max-lines: 0 */\n\nimport { setup as setupPostRobot, on, send, bridge, toProxyWindow, destroy as destroyPostRobot } from 'post-robot/src';\nimport { ZalgoPromise } from 'zalgo-promise/src';\nimport { isWindow, getDomainFromUrl, type CrossDomainWindowType, isSameTopWindow, getDomain, matchDomain, isSameDomain } from 'cross-domain-utils/src';\nimport { isRegex, noop, isElement } from 'belter/src';\n\nimport { ChildComponent, getChildPayload } from '../child';\nimport { ParentComponent, type RenderOptionsType, type ParentHelpers } from '../parent';\nimport { DelegateComponent } from '../delegate';\nimport { CONTEXT, POST_MESSAGE, WILDCARD, DEFAULT_DIMENSIONS } from '../constants';\nimport { react, angular, vue, angular2 } from '../drivers';\nimport { getGlobal, destroyGlobal } from '../lib';\nimport type { CssDimensionsType, StringMatcherType } from '../types';\n\nimport { validate } from './validate';\nimport { defaultContainerTemplate, defaultPrerenderTemplate } from './templates';\nimport { getBuiltInProps, type UserPropsDefinitionType, type BuiltInPropsDefinitionType, type PropsInputType, type PropsType, type MixedPropDefinitionType } from './props';\n\ntype LoggerPayload = { [string] : ?string };\n\n// eslint-disable-next-line flowtype/require-exact-type\ntype Logger = {\n    debug : (event : string, payload? : LoggerPayload) => any, // eslint-disable-line flowtype/no-weak-types\n    info : (event : string, payload? : LoggerPayload) => any, // eslint-disable-line flowtype/no-weak-types\n    warn : (event : string, payload? : LoggerPayload) => any, // eslint-disable-line flowtype/no-weak-types\n    error : (event : string, payload? : LoggerPayload) => any // eslint-disable-line flowtype/no-weak-types\n};\n\n/*  Component\n    ---------\n\n    This is the spec for the component. The idea is, when I call zoid.create(), it will create a new instance\n    of Component with the blueprint needed to set up ParentComponents and ChildComponents.\n\n    This is the one portion of code which is required by -- and shared to -- both the parent and child windows, and\n    contains all of the configuration needed for them to set themselves up.\n*/\n\nexport type ComponentOptionsType<P> = {|\n\n    tag : string,\n\n    url : string | ({ props : PropsType<P> }) => string,\n    domain? : string | RegExp,\n    bridgeUrl? : string,\n\n    props? : UserPropsDefinitionType<P>,\n\n    dimensions? : CssDimensionsType,\n    autoResize? : { width? : boolean, height? : boolean, element? : string },\n\n    allowedParentDomains? : StringMatcherType,\n\n    attributes? : {\n        iframe? : { [string] : string },\n        popup? : { [string] : string }\n    },\n\n    defaultContext? : $Values<typeof CONTEXT>,\n\n    containerTemplate? : (RenderOptionsType<P>) => ?HTMLElement,\n    prerenderTemplate? : (RenderOptionsType<P>) => ?HTMLElement,\n\n    validate? : ({ props : PropsInputType<P> }) => void,\n\n    logger? : Logger\n|};\n\ntype ZoidRenderer = {|\n    render : (container? : string | HTMLElement, context? : $Values<typeof CONTEXT>) => ZalgoPromise<void>,\n    renderTo : (target : CrossDomainWindowType, container? : string, context? : $Values<typeof CONTEXT>) => ZalgoPromise<void>\n|};\n\nexport type ZoidComponentInstance<P> = {| ...ParentHelpers<P>, ...ZoidRenderer |};\n\n// eslint-disable-next-line flowtype/require-exact-type\nexport type ZoidComponent<P> = {\n    (PropsInputType<P>) : ZoidComponentInstance<P>,\n    driver : (string, mixed) => mixed,\n    isChild : () => boolean,\n    xprops? : PropsType<P>,\n    canRenderTo : (CrossDomainWindowType) => ZalgoPromise<boolean>\n};\n\nexport class Component<P> {\n\n    tag : string\n    name : string\n    \n    url : string | ({ props : PropsType<P> }) => string\n    domain : void | string | RegExp\n    bridgeUrl : void | string\n\n    props : UserPropsDefinitionType<P>\n    builtinProps : BuiltInPropsDefinitionType<P>\n\n    dimensions : CssDimensionsType\n    autoResize : void | { width? : boolean, height? : boolean, element? : string }\n\n    allowedParentDomains : StringMatcherType\n\n    defaultContext : $Values<typeof CONTEXT>\n    \n    attributes : {\n        iframe? : { [string] : string },\n        popup? : { [string] : string }\n    }\n\n    containerTemplate : (RenderOptionsType<P>) => ?HTMLElement\n    prerenderTemplate : ?(RenderOptionsType<P>) => ?HTMLElement\n\n    validate : void | ({ props : PropsInputType<P> }) => void\n\n    driverCache : { [string] : mixed }\n\n    xprops : ?PropsType<P>\n\n    logger : Logger\n\n    propNames : $ReadOnlyArray<string>\n\n    constructor(options : ComponentOptionsType<P>) {\n        validate(options);\n\n        // The tag name of the component. Used by some drivers (e.g. angular) to turn the component into an html element,\n        // e.g. <my-component>\n\n        this.tag = options.tag;\n        this.name = this.tag.replace(/-/g, '_');\n\n        this.allowedParentDomains = options.allowedParentDomains || WILDCARD;\n\n        const global = getGlobal();\n        global.components = global.components || {};\n\n        if (global.components[this.tag]) {\n            throw new Error(`Can not register multiple components with the same tag: ${ this.tag }`);\n        }\n\n        // A json based spec describing what kind of props the component accepts. This is used to validate any props before\n        // they are passed down to the child.\n\n        this.builtinProps = getBuiltInProps();\n        this.props = options.props || {};\n\n        // The dimensions of the component, e.g. { width: '300px', height: '150px' }\n\n        const { width = DEFAULT_DIMENSIONS.WIDTH, height = DEFAULT_DIMENSIONS.HEIGHT } = options.dimensions || {};\n        this.dimensions = { width, height };\n\n        this.url = options.url;\n        this.domain = options.domain;\n        this.bridgeUrl = options.bridgeUrl;\n\n        this.attributes = options.attributes || {};\n        this.attributes.iframe = this.attributes.iframe || {};\n        this.attributes.popup = this.attributes.popup || {};\n\n        this.defaultContext = options.defaultContext || CONTEXT.IFRAME;\n\n        this.autoResize = options.autoResize;\n\n        if (options.containerTemplate) {\n            this.containerTemplate = options.containerTemplate;\n        } else if (__ZOID__.__DEFAULT_CONTAINER__) {\n            this.containerTemplate = defaultContainerTemplate;\n        }\n\n        if (options.prerenderTemplate) {\n            this.prerenderTemplate = options.prerenderTemplate;\n        } else if (__ZOID__.__DEFAULT_PRERENDER__) {\n            this.prerenderTemplate = defaultPrerenderTemplate;\n        }\n\n        this.validate = options.validate;\n\n        this.logger = options.logger || {\n            debug: noop,\n            info:  noop,\n            warn:  noop,\n            error: noop\n        };\n\n        this.registerChild();\n        this.listenDelegate();\n\n        global.components[this.tag] = this;\n    }\n\n    getPropNames() : $ReadOnlyArray<string> {\n        if (this.propNames) {\n            return this.propNames;\n        }\n\n        const propNames = Object.keys(this.props);\n        for (const key of Object.keys(this.builtinProps)) {\n            if (propNames.indexOf(key) === -1) {\n                propNames.push(key);\n            }\n        }\n\n        this.propNames = propNames;\n        return propNames;\n    }\n\n    getPropDefinition(name : string) : MixedPropDefinitionType<P> {\n        return this.props[name] || this.builtinProps[name];\n    }\n\n    driver(name : string, dep : mixed) : mixed {\n        if (__ZOID__.__FRAMEWORK_SUPPORT__) {\n            const drivers = { react, angular, vue, angular2 };\n\n            if (!drivers[name]) {\n                throw new Error(`Could not find driver for framework: ${ name }`);\n            }\n    \n            this.driverCache = this.driverCache || {};\n    \n            if (!this.driverCache[name]) {\n                this.driverCache[name] = drivers[name].register(this, dep);\n            }\n    \n            return this.driverCache[name];\n        } else {\n            throw new Error(`Driver support not enabled`);\n        }\n    }\n\n    registerChild() {\n        if (this.isChild()) {\n            if (window.xprops) {\n                throw new Error(`Can not register ${ this.name } as child - can not attach multiple components to the same window`);\n            }\n\n            const child = new ChildComponent(this);\n            window.xprops = this.xprops = child.getProps();\n        }\n    }\n\n    listenDelegate() {\n        on(`${ POST_MESSAGE.ALLOW_DELEGATE }_${ this.name }`, () => {\n            return true;\n        });\n\n        on(`${ POST_MESSAGE.DELEGATE }_${ this.name }`, ({ source, data: { context, props, overrides } }) => {\n            const delegate = new DelegateComponent(this, source, { context, props, overrides });\n            return delegate.getDelegate();\n        });\n    }\n\n    canRenderTo(win : CrossDomainWindowType) : ZalgoPromise<boolean> {\n        return send(win, `${ POST_MESSAGE.ALLOW_DELEGATE }_${ this.name }`).then(({ data }) => {\n            return data;\n        }).catch(() => {\n            return false;\n        });\n    }\n\n    getUrl(props : PropsType<P>) : string {\n        if (typeof this.url === 'function') {\n            return this.url({ props });\n        }\n\n        return this.url;\n    }\n\n    getChildDomain(props : PropsType<P>) : string {\n        if (this.domain && typeof this.domain === 'string') {\n            return this.domain;\n        }\n\n        return getDomainFromUrl(this.getUrl(props));\n    }\n\n    getDomain(props : PropsType<P>) : string | RegExp {\n        if (this.domain && isRegex(this.domain)) {\n            return this.domain;\n        }\n\n        return this.getChildDomain(props);\n    }\n\n    getBridgeUrl() : ?string {\n        if (this.bridgeUrl) {\n            return this.bridgeUrl;\n        }\n    }\n\n    isChild() : boolean {\n        const payload = getChildPayload();\n        return Boolean(payload && payload.tag === this.tag && payload.childDomain === getDomain());\n    }\n\n    getDefaultContainer(context : $Values<typeof CONTEXT>, container? : string | HTMLElement) : string | HTMLElement {\n        if (container) {\n            if (typeof container !== 'string' && !isElement(container)) {\n                throw new TypeError(`Expected string or element selector to be passed`);\n            }\n\n            return container;\n        }\n\n        if (context === CONTEXT.POPUP) {\n            return 'body';\n        }\n\n        throw new Error(`Expected element to be passed to render iframe`);\n    }\n\n    getDefaultContext(context : ?$Values<typeof CONTEXT>, props : PropsInputType<P>) : $Values<typeof CONTEXT> {\n        if (props.window) {\n            return toProxyWindow(props.window).getType();\n        }\n\n        if (context) {\n            if (context !== CONTEXT.IFRAME && context !== CONTEXT.POPUP) {\n                throw new Error(`Unrecognized context: ${ context }`);\n            }\n            \n            return context;\n        }\n\n        return this.defaultContext;\n    }\n\n    init(props : PropsInputType<P>) : ZoidComponentInstance<P> {\n\n        // $FlowFixMe\n        props = props || {};\n        \n        const parent = new ParentComponent(this, props);\n\n        const render = (target, container, context) => ZalgoPromise.try(() => {\n            if (!isWindow(target)) {\n                throw new Error(`Must pass window to renderTo`);\n            }\n\n            context = this.getDefaultContext(context, props);\n            container = this.getDefaultContainer(context, container);\n            return parent.render(target, container, context);\n        });\n\n        return {\n            ...parent.getHelpers(),\n            render:   (container, context) => render(window, container, context),\n            renderTo: (target, container, context) => render(target, container, context)\n        };\n    }\n\n    checkAllowRender(target : CrossDomainWindowType, domain : string | RegExp, container : string | HTMLElement) {\n        if (target === window) {\n            return;\n        }\n\n        if (!isSameTopWindow(window, target)) {\n            throw new Error(`Can only renderTo an adjacent frame`);\n        }\n\n        const origin = getDomain();\n\n        if (!matchDomain(domain, origin) && !isSameDomain(target)) {\n            throw new Error(`Can not render remotely to ${ domain.toString() } - can only render to ${ origin }`);\n        }\n\n        if (container && typeof container !== 'string') {\n            throw new Error(`Container passed to renderTo must be a string selector, got ${ typeof container } }`);\n        }\n    }\n\n    log(event : string, payload? : LoggerPayload) {\n        this.logger.info(`${ this.name }_${ event }`, payload);\n    }\n\n    registerActiveComponent<Q>(instance : ParentComponent<Q> | DelegateComponent<Q>) {\n        const global = getGlobal();\n        global.activeComponents = global.activeComponents || [];\n        global.activeComponents.push(instance);\n    }\n\n    destroyActiveComponent<Q>(instance : ParentComponent<Q> | DelegateComponent<Q>) {\n        const global = getGlobal();\n        global.activeComponents = global.activeComponents || [];\n        global.activeComponents.splice(global.activeComponents.indexOf(instance), 1);\n    }\n}\n\nexport type ComponentDriverType<P, T : mixed> = {|\n    register : (Component<P>, T) => mixed\n|};\n\nexport function create<P>(options : ComponentOptionsType<P>) : ZoidComponent<P> {\n    setupPostRobot();\n\n    const component : Component<P> = new Component(options);\n\n    const init = (props) => component.init(props);\n    init.driver = (name, dep) => component.driver(name, dep);\n    init.isChild = () => component.isChild();\n    init.canRenderTo = (win) => component.canRenderTo(win);\n    init.xprops = component.xprops;\n    \n    return init;\n}\n\nexport function destroyAll() : ZalgoPromise<void> {\n    if (bridge) {\n        bridge.destroyBridges();\n    }\n\n    const results = [];\n\n    const global = getGlobal();\n    global.activeComponents = global.activeComponents || [];\n    while (global.activeComponents.length) {\n        results.push(global.activeComponents[0].destroy(new Error(`zoid destroyed all`), false));\n    }\n\n    return ZalgoPromise.all(results).then(noop);\n}\n\nexport const destroyComponents = destroyAll;\n\nexport function destroy() {\n    destroyAll();\n    destroyGlobal();\n    destroyPostRobot();\n}\n","/* @flow */\n\nimport { isPerc, isPx, values } from 'belter/src';\n\nimport { CONTEXT, PROP_TYPE } from '../constants';\n\nimport type { ComponentOptionsType } from './index';\n\nfunction validatePropDefinitions<P>(options : ComponentOptionsType<P>) {\n\n    if (options.props && !(typeof options.props === 'object')) {\n        throw new Error(`Expected options.props to be an object`);\n    }\n\n    const PROP_TYPE_LIST = values(PROP_TYPE);\n\n    if (options.props) {\n        for (const key of Object.keys(options.props)) {\n            const prop = options.props[key];\n\n            if (!prop || !(typeof prop === 'object')) {\n                throw new Error(`Expected options.props.${ key } to be an object`);\n            }\n\n            if (!prop.type) {\n                throw new Error(`Expected prop.type`);\n            }\n\n            if (PROP_TYPE_LIST.indexOf(prop.type) === -1) {\n                throw new Error(`Expected prop.type to be one of ${ PROP_TYPE_LIST.join(', ') }`);\n            }\n\n            if (prop.required && prop.default) {\n                throw new Error(`Required prop can not have a default value`);\n            }\n\n            if (prop.type === PROP_TYPE.FUNCTION && prop.queryParam && !prop.queryValue) {\n                throw new Error(`Do not pass queryParam for function prop`);\n            }\n        }\n    }\n}\n\n// eslint-disable-next-line complexity\nexport function validate<P>(options : ?ComponentOptionsType<P>) { // eslint-ignore-line\n\n    if (!options) {\n        throw new Error(`Expected options to be passed`);\n    }\n\n    // eslint-disable-next-line security/detect-unsafe-regex, unicorn/no-unsafe-regex\n    if (!options.tag || !options.tag.match(/^([a-z0-9][a-z0-9-]*)+[a-z0-9]+$/)) {\n        throw new Error(`Invalid options.tag: ${ options.tag }`);\n    }\n\n    validatePropDefinitions(options);\n\n    if (options.dimensions) {\n        if (options.dimensions && !isPx(options.dimensions.width) && !isPerc(options.dimensions.width)) {\n            throw new Error(`Expected options.dimensions.width to be a px or % string value`);\n        }\n\n        if (options.dimensions && !isPx(options.dimensions.height) && !isPerc(options.dimensions.height)) {\n            throw new Error(`Expected options.dimensions.height to be a px or % string value`);\n        }\n    }\n\n    if (options.defaultContext) {\n        if (options.defaultContext !== CONTEXT.IFRAME && options.defaultContext !== CONTEXT.POPUP) {\n            throw new Error(`Unsupported context type: ${ options.defaultContext || 'unknown' }`);\n        }\n    }\n\n    if (!options.url) {\n        throw new Error(`Must pass url`);\n    }\n\n    if (typeof options.url !== 'string' && typeof options.url !== 'function') {\n        throw new TypeError(`Expected url to be string or function`);\n    }\n\n    if (options.prerenderTemplate && typeof options.prerenderTemplate !== 'function') {\n        throw new Error(`Expected options.prerenderTemplate to be a function`);\n    }\n\n    if ((options.containerTemplate || !__ZOID__.__DEFAULT_CONTAINER__) && typeof options.containerTemplate !== 'function') {\n        throw new Error(`Expected options.containerTemplate to be a function`);\n    }\n}\n","/* @flow */\n\nexport { PopupOpenError } from 'belter/src';\nexport { create, destroy, destroyComponents, destroyAll, Component } from './component';\nexport type { ZoidComponent, ZoidComponentInstance } from './component';\nexport type { RenderOptionsType } from './parent';\nexport { PROP_TYPE, PROP_SERIALIZATION, CONTEXT, EVENT } from './constants';\n"],"sourceRoot":""}