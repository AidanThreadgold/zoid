{"version":3,"sources":["webpack://zoid/webpack/universalModuleDefinition","webpack://zoid/webpack/bootstrap","webpack://zoid/./node_modules/belter/src/index.js","webpack://zoid/./node_modules/zalgo-promise/src/utils.js","webpack://zoid/./node_modules/zalgo-promise/src/global.js","webpack://zoid/./node_modules/zalgo-promise/src/promise.js","webpack://zoid/./node_modules/zalgo-promise/src/exceptions.js","webpack://zoid/./node_modules/zalgo-promise/src/index.js","webpack://zoid/./node_modules/cross-domain-utils/src/index.js","webpack://zoid/./node_modules/belter/src/util.js","webpack://zoid/./node_modules/@babel/runtime/helpers/esm/extends.js","webpack://zoid/./node_modules/cross-domain-utils/src/constants.js","webpack://zoid/./node_modules/cross-domain-safe-weakmap/src/util.js","webpack://zoid/./node_modules/cross-domain-safe-weakmap/src/weakmap.js","webpack://zoid/./node_modules/cross-domain-safe-weakmap/src/native.js","webpack://zoid/./node_modules/cross-domain-safe-weakmap/src/index.js","webpack://zoid/./node_modules/belter/src/device.js","webpack://zoid/./node_modules/belter/src/storage.js","webpack://zoid/./node_modules/belter/src/dom.js","webpack://zoid/./node_modules/belter/src/experiment.js","webpack://zoid/./node_modules/belter/src/global.js","webpack://zoid/./node_modules/belter/src/http.js","webpack://zoid/./node_modules/belter/src/decorators.js","webpack://zoid/./node_modules/belter/src/css.js","webpack://zoid/./node_modules/belter/src/test.js","webpack://zoid/./node_modules/cross-domain-utils/src/util.js","webpack://zoid/./node_modules/cross-domain-utils/src/utils.js","webpack://zoid/./node_modules/@babel/runtime/helpers/esm/applyDecoratedDescriptor.js","webpack://zoid/./node_modules/post-robot/src/conf/constants.js","webpack://zoid/./node_modules/post-robot/src/conf/config.js","webpack://zoid/./node_modules/post-robot/src/global.js","webpack://zoid/./node_modules/post-robot/src/lib/hello.js","webpack://zoid/./node_modules/post-robot/src/lib/windows.js","webpack://zoid/./node_modules/universal-serialize/src/constants.js","webpack://zoid/./node_modules/universal-serialize/src/common.js","webpack://zoid/./node_modules/universal-serialize/src/serialize.js","webpack://zoid/./node_modules/universal-serialize/src/serializers/function.js","webpack://zoid/./node_modules/universal-serialize/src/serializers/error.js","webpack://zoid/./node_modules/universal-serialize/src/serializers/promise.js","webpack://zoid/./node_modules/universal-serialize/src/serializers/regex.js","webpack://zoid/./node_modules/universal-serialize/src/serializers/date.js","webpack://zoid/./node_modules/universal-serialize/src/serializers/array.js","webpack://zoid/./node_modules/universal-serialize/src/serializers/object.js","webpack://zoid/./node_modules/universal-serialize/src/serializers/string.js","webpack://zoid/./node_modules/universal-serialize/src/serializers/number.js","webpack://zoid/./node_modules/universal-serialize/src/serializers/boolean.js","webpack://zoid/./node_modules/universal-serialize/src/serializers/null.js","webpack://zoid/./node_modules/universal-serialize/src/deserialize.js","webpack://zoid/./node_modules/post-robot/src/serialize/window.js","webpack://zoid/./node_modules/post-robot/src/serialize/function.js","webpack://zoid/./node_modules/post-robot/src/serialize/serialize.js","webpack://zoid/./node_modules/post-robot/src/serialize/promise.js","webpack://zoid/./node_modules/post-robot/src/drivers/send/strategies.js","webpack://zoid/./node_modules/post-robot/src/drivers/send/index.js","webpack://zoid/./node_modules/post-robot/src/lib/compat.js","webpack://zoid/./node_modules/post-robot/src/drivers/listeners.js","webpack://zoid/./node_modules/post-robot/src/drivers/receive/types.js","webpack://zoid/./node_modules/post-robot/src/drivers/receive/index.js","webpack://zoid/./node_modules/post-robot/src/public/client.js","webpack://zoid/./node_modules/post-robot/src/public/server.js","webpack://zoid/./node_modules/post-robot/src/public/config.js","webpack://zoid/./node_modules/post-robot/src/public/index.js","webpack://zoid/./node_modules/post-robot/src/clean.js","webpack://zoid/./node_modules/post-robot/src/interface.js","webpack://zoid/./node_modules/post-robot/src/index.js","webpack://zoid/./src/constants.js","webpack://zoid/./src/lib/global.js","webpack://zoid/./src/lib/window.js","webpack://zoid/./src/child/props.js","webpack://zoid/./src/child/index.js","webpack://zoid/./src/parent/drivers.js","webpack://zoid/./src/parent/index.js","webpack://zoid/./src/parent/props.js","webpack://zoid/./src/delegate/index.js","webpack://zoid/./node_modules/@babel/runtime/helpers/esm/inheritsLoose.js","webpack://zoid/./node_modules/jsx-pragmatic/src/node.js","webpack://zoid/./node_modules/jsx-pragmatic/src/renderers/dom.js","webpack://zoid/./src/component/templates/container.jsx","webpack://zoid/./src/component/templates/component.jsx","webpack://zoid/./src/component/component.js","webpack://zoid/./src/component/validate.js","webpack://zoid/./src/component/props.js","webpack://zoid/./src/index.js"],"names":["root","factory","exports","module","define","amd","self","this","installedModules","__webpack_require__","moduleId","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","_dom__WEBPACK_IMPORTED_MODULE_1__","__webpack_exports__","_util__WEBPACK_IMPORTED_MODULE_5__","_types__WEBPACK_IMPORTED_MODULE_7__","_decorators__WEBPACK_IMPORTED_MODULE_8__","_css__WEBPACK_IMPORTED_MODULE_9__","isPromise","item","Promise","window","Window","constructor","toString","then","err","getGlobal","glob","global","TypeError","zalgoGlobal","__zalgopromise__","flushPromises","activeCount","possiblyUnhandledPromiseHandlers","dispatchedErrors","ZalgoPromise","handler","_this","resolved","rejected","errorHandled","error","handlers","dispatching","stack","result","isAsync","res","resolve","reject","_proto","Error","dispatch","_this2","setTimeout","promise","indexOf","push","j","length","dispatchPossiblyUnhandledError","asyncReject","_this3","_loop","_handlers$i","onSuccess","onError","flushQueue","catch","undefined","finally","onFinally","try","timeout","time","_this4","clearTimeout","toPromise","all","promises","count","results","_loop2","prom","hash","keys","map","items","method","onPossiblyUnhandledException","cancel","splice","context","args","apply","delay","flush","promisesToFlush","_i2","promise_ZalgoPromise","_utils__WEBPACK_IMPORTED_MODULE_0__","_types__WEBPACK_IMPORTED_MODULE_1__","_constants__WEBPACK_IMPORTED_MODULE_2__","base64encode","base64decode","uniqueID","memoize","memoizePromise","promisify","inlineMemoize","noop","once","stringifyError","stringify","extend","values","safeInterval","dotify","capitalizeFirstLetter","isDefined","isRegex","weakMapMemoizePromise","getOrSet","cleanup","tryCatch","removeFromArray","objectIDs","zalgo_promise_src__WEBPACK_IMPORTED_MODULE_0__","cross_domain_safe_weakmap_src__WEBPACK_IMPORTED_MODULE_1__","str","btoa","Buffer","from","atob","chars","replace","charAt","Math","floor","random","Date","toISOString","slice","toLowerCase","__GLOBAL__","serializeArgs","JSON","Array","subkey","val","obj","WeakMap","uid","set","getObjectID","options","cacheMap","memoizedFunction","_len","arguments","_key","cache","thisNamespace","cacheTime","now","reset","delete","displayName","memoizedPromiseFunction","_len2","_key2","promisifiedFunction","logic","__inline_memoize_cache__","called","level","message","newErr","source","assign","loop","prefix","newobj","isArray","every","join","string","toUpperCase","weakmap","arg","_this5","tasks","cleaned","register","task","pop","fn","arr","index","_extends","target","PROTOCOL","WILDCARD","WINDOW_TYPE","MOCK","FILE","ABOUT","IFRAME","POPUP","safeIndexOf","collection","counter","CrossDomainSafeWeakMap","freeze","testWeakMap","testKey","testValue","hasNativeWeakMap","_cleanupClosedWindows","isWindow","isWindowClosed","isSafeToReadWrite","entry","writable","has","weakmap_CrossDomainSafeWeakMap","isDevice","navigator","mockUserAgent","userAgent","match","getStorage","_util__WEBPACK_IMPORTED_MODULE_0__","_ref","_ref$version","version","_ref$lifetime","lifetime","accessedStorage","STORAGE_KEY","getState","storage","localStorageEnabled","isLocalStorageEnabled","rawStorage","localStorage","getItem","parse","id","setItem","getSession","session","__session__","created","guid","getID","getSessionState","state","getSessionID","awaitFrameLoadPromises","isDocumentReady","Boolean","document","body","readyState","urlEncode","waitForDocumentReady","interval","setInterval","clearInterval","waitForDocumentBody","parseQuery","queryString","params","_queryString$split2","split","pair","decodeURIComponent","extendQuery","originalQuery","props","esm_extends","filter","extendUrl","url","originalUrl","originalHash","query","_url$split","_originalUrl$split","hashString","removeItem","appendChild","container","child","isElement","element","Element","nodeType","style","ownerDocument","getElementSafe","doc","querySelector","getElement","elementReady","el","PopupOpenError","writeElementToWindow","win","tag","tagName","documentElement","children","removeChild","awaitFrameLoad","frame","addEventListener","linkFrameWindow","contentWindow","awaitFrameWindow","loadedFrame","createElement","styleText","class","className","attributes","_i6","_Object$keys2","setAttribute","styleSheet","cssText","createTextNode","html","open","write","close","location","err2","writeToWindow","innerHTML","iframe","attempts","frameBorder","allowTransparency","backgroundColor","event","removeEventListener","destroyElement","parentNode","addClass","classList","add","removeClass","remove","isElementClosed","watchElementForClose","onResize","_temp","_ref2","_ref2$width","width","_ref2$height","height","_ref2$interval","_ref2$win","currentWidth","offsetWidth","currentHeight","offsetHeight","observer","check","newWidth","newHeight","ResizeObserver","observe","MutationObserver","childList","subtree","characterData","disconnect","memoized","descriptor","isPerc","test","isPx","toPx","parseInt","toNum","toCSS","getParent","getOpener","getActualDomain","getDomain","isBlankDomain","isActuallySameDomain","isSameDomain","assertSameDomain","getTop","getAllFramesInWindow","isTop","getUserAgent","getAncestor","isAncestor","getDistanceFromTop","getNthParentFromTop","isSameTopWindow","matchDomain","stringifyDomainPattern","getDomainFromUrl","onCloseWindow","normalizeMockUrl","IE_WIN_ACCESS_ERROR","isAboutProtocol","protocol","parent","opener","canReadFromWindow","href","host","domain","mockDomain","desc","getOwnPropertyDescriptor","isAncestorParent","childParent","getParents","getFrames","frames","len","getAllChildFrames","_i3","_getFrames2","_i5","_getAllChildFrames2","childFrame","top","_i7","_getAllChildFrames4","concat","iframeWindows","iframeFrames","allowMock","closed","mockclosed","iframeIndex","contains","isFrameWindowClosed","cleanIframes","actualParent","_i15","_getFrames8","anyMatch","collection1","collection2","_i17","item1","_i19","distance","getNthParent","win1","win2","top1","top2","allFrames1","allFrames2","opener1","opener2","pattern","origin","some","subpattern","callback","maxtime","Infinity","__cross_domain_utils_window_check__","_applyDecoratedDescriptor","decorators","forEach","configurable","initializer","reverse","reduce","decorator","MESSAGE_TYPE","REQUEST","RESPONSE","ACK","MESSAGE_NAME","METHOD","HELLO","OPEN_TUNNEL","WINDOW_PROP","POSTROBOT","SERIALIZATION_TYPE","CROSS_DOMAIN_ZALGO_PROMISE","CROSS_DOMAIN_FUNCTION","CROSS_DOMAIN_WINDOW","CONFIG","BRIDGE_TIMEOUT","CHILD_WINDOW_TIMEOUT","ACK_TIMEOUT","ACK_TIMEOUT_KNOWN","RES_TIMEOUT","ALLOWED_POST_MESSAGE_METHODS","_ALLOWED_POST_MESSAGE","winStore","windowStore","getObj","defStore","getStore","defVal","store","del","globalStore","storeKey","instanceID","helloPromises","getHelloPromise","listenForHello","on","sayHello","send","data","getWindowInstanceID","_ref3","knownWindows","markWindowKnown","TYPE","FUNCTION","ERROR","PROMISE","REGEX","DATE","ARRAY","OBJECT","STRING","NUMBER","BOOLEAN","NULL","UNDEFINED","isSerializedType","__type__","determineType","serializeType","type","__val__","SERIALIZER","_SERIALIZER","code","toJSON","defaultSerializers","DESERIALIZER","_DESERIALIZER","RegExp","defaultDeserializers","winToProxyWindow","idToProxyWindow","cleanupProxyWindows","_idToProxyWindow$keys2","shouldClean","ProxyWindow","serializedWindow","actualWindow","isProxyWindow","actualWindowPromise","setWindow","getInstanceID","getType","isPopup","isIframe","setLocation","setName","frameElement","focus","isClosed","matchWindow","_this6","unwrap","awaitWindow","serialize","toProxyWindow","deserialize","methodStore","proxyWindowMethods","listeningForFunctions","listenForFunctionCalls","meth","proxy","serializeFunction","destination","serializeMessage","_serialize","serializers","serializer","deserializeMessage","_deserialize","deserializers","deserializer","serializedPromise","serializedFunction","innerWrapper","opts","crossDomainFunctionWrapper","fireAndForget","__name__","__xdomain__","deserializeFunction","SEND_MESSAGE_STRATEGIES","sendMessage","_serializeMessage","serializedMessage","messages","strategyName","success","status","dom","postMessage","foreignGlobal","receiveMessage","responseListeners","requestListeners","erroredResponseListeners","WINDOW_WILDCARD","__DOMAIN_REGEX__","getResponseListener","deleteResponseListener","isResponseListenerErrored","getRequestListener","winQualifier","nameListeners","domainListeners","_i4","_domainListeners$__DO2","_domainListeners$__DO3","regex","listener","RECEIVE_MESSAGE_TYPES","_RECEIVE_MESSAGE_TYPE","sendResponse","pathname","ack","handleError","respond","receivedMessages","parsedMessage","parseMessage","messageListener","messageEvent","sourceElement","originalEvent","requestPromises","request","targetWindow","getElementById","HTMLIFrameElement","hasResult","reqPromises","requestPromise","awaitWindowHello","_temp2","actualDomain","responseListener","totalAckTimeout","totalResTimeout","ackTimeout","resTimeout","cycleTime","cycle","max","min","sendToParent","client","listen","listenerOptions","errorHandler","requestListener","addRequestListener","_ref4","listenersCollection","_win2","_i8","_i10","_domain2","_i12","existingListener","regexListeners","regexListener","strDomain","onceFunction","errorOnClose","onceListener","disable","cleanUpWindow","_requestPromises$get2","bridge","initialized","openTunnelToOpener","initHello","INTERFACE","ZOID","__ZOID__","PROP_TYPE","PROP_SERIALIZATION","DOTIFY","BASE64","CONTEXT","CLASS","OUTLET","COMPONENT_FRAME","PRERENDER_FRAME","VISIBLE","INVISIBLE","globalFor","localGlobal","parseChildWindowName","_window$name$split","zoidcomp","encodedPayload","isZoidComponentWindow","normalizeChildProp","component","helpers","prop","getPropDefinition","resize","onPropsChange","childDecorate","ChildComponent","_class","parentComponentWindow","onPropHandlers","autoResize","_parseChildWindowName","getWindowByRef","checkParentDomain","initialProps","getPropsByRef","setProps","watchForClose","init","buildExports","watchForResize","getHelpers","allowedParentDomains","ref","ancestor","_getAllFramesInWindow2","windows","getProps","isUpdate","existingProps","normalizedProps","sameDomain","alias","_component$getPropNam2","getPropNames","normalizeChildProps","_this$onPropHandlers2","checkClose","destroy","enableAutoResize","_ref3$width","_ref3$height","_ref3$element","getAutoResize","_ref4$width","_ref4$height","_ref4$element","_this4$getAutoResize","_ref5","updateProps","_ref6","RENDER_DRIVERS","renderedIntoContainer","callChildToClose","title","clean","detectClose","iframeWatcher","elementWatcher","openPrerender","prerenderIframe","prerenderFrameWindow","switchPrerender","delegate","ParentComponent","parent_class","driver","initPromise","errored","proxyWin","registerActiveComponent","destroyActiveComponent","render","log","initialDomain","getInitialDomain","checkAllowRender","buildUrl","onRender","watchForUnload","renderContainer","buildWindowName","setWindowName","windowName","prerender","onDisplay","openBridge","loadUrl","runTimeout","onRendered","childPayload","buildChildPayload","getPropsRef","getPropsForChild","propRef","_ref5$target","getWindowRef","buildParentExports","validate","instance","propNames","aliases","propDef","default","_Object$keys4","decorate","normalizeProps","_this$component$getPr2","required","propsDef","builtinProps","queryParam","queryValue","serialization","_Object$keys6","dotkey","getUrl","sendToChild","windowProp","_this7","_this8","_this9","_this$component$getPr4","propName","allowDelegate","overridesPromise","POST_MESSAGE","overrides","_ref7","_this$driver$delegate2","_this10","_arguments","_this11","closeWindowListener","onClose","_this12","unloadWindowListener","_this13","initChild","_this14","_this15","_ref8","_ref9","_this16","_this17","secondClosed","_this18","_ref10","_this19","prerenderWindow","renderTemplate","prerenderTemplate","_ref11","_ref11$width","_ref11$height","_ref11$element","_ref12","renderer","_ref13","_this20","outlet","dimensions","_ref14","_this21","containerTemplate","_this22","_this23","DelegateComponent","watchForSourceClose","getDelegate","getOverrides","closeSourceWindowListener","_inheritsLoose","subClass","superClass","__proto__","Node","isElementNode","isTextNode","isFragmentNode","ElementNode","_Node","_proto2","getTag","isTag","getText","TextNode","_Node2","text","_proto3","FragmentNode","_Node3","_proto4","normalizeChild","normalizeChildren","normalizedChild","_normalizedChild$chil2","subchild","node","DOM_EVENT","onBlur","onCancel","onClick","onContextMenu","onCopy","onCut","onAuxClick","onDoubleClick","onDragEnd","onDragStart","onDrop","onFocus","onInput","onInvalid","onKeyDown","onKeyPress","onKeyUp","onMouseDown","onMouseUp","onPaste","onPause","onPlay","onPointerCancel","onPointerDown","onPointerUp","onRateChange","onReset","onSeeked","onSubmit","onTouchCancel","onTouchEnd","onTouchStart","onVolumeChange","onAbort","onAnimationEnd","onAnimationIteration","onAnimationStart","onCanPlay","onCanPlayThrough","onDrag","onDragEnter","onDragExit","onDragLeave","onDragOver","onDurationChange","onEmptied","onEncrypted","onEnded","onGotPointerCapture","onLoad","onLoadedData","onLoadedMetadata","onLoadStart","onLostPointerCapture","onMouseMove","onMouseOut","onMouseOver","onPlaying","onPointerMove","onPointerOut","onPointerOver","onProgress","onScroll","onSeeking","onStalled","onSuspend","onTimeUpdate","onToggle","onTouchMove","onTransitionEnd","onWaiting","onWheel","CREATE_ELEMENT","_CREATE_ELEMENT","ADD_CHILDREN","_ADD_CHILDREN","firstChild","docElement","domRenderer","_ref9$doc","addProps","ELEMENT_PROP","_el$querySelectorAll2","querySelectorAll","script","newScript","textContent","replaceChild","fixScripts","addChildren","defaultContainerTemplate","_ref$dimensions","defaultPrerenderTemplate","drivers","Component","component_temp","_class2","bridgeUrl","defaultContext","driverCache","xprops","logger","PROP_TYPE_LIST","validatePropDefinitions","components","onChange","_ref$width","_ref$height","popup","debug","info","warn","registerChild","listenDelegate","dep","isChild","_ref2$data","canRenderTo","getBridgeUrl","getDefaultElement","getDefaultContext","renderTo","payload","activeComponents","destroyAll","destroyBridges","component_class","src","component_destroyAll","component_Component"],"mappings":"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","file":"zoid.frame.min.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"zoid\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"zoid\"] = factory();\n\telse\n\t\troot[\"zoid\"] = factory();\n})((typeof self !== 'undefined' ? self : this), function() {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 19);\n","/* @flow */\n\nexport * from './device';\nexport * from './dom';\nexport * from './experiment';\nexport * from './global';\nexport * from './storage';\nexport * from './util';\nexport * from './http';\nexport * from './types';\nexport * from './decorators';\nexport * from './css';\nexport * from './test';\n","/* @flow */\n\nexport function isPromise(item : mixed) : boolean {\n    try {\n        if (!item) {\n            return false;\n        }\n\n        if (typeof Promise !== 'undefined' && item instanceof Promise) {\n            return true;\n        }\n\n        if (typeof window !== 'undefined' && window.Window && item instanceof window.Window) {\n            return false;\n        }\n\n        if (typeof window !== 'undefined' && window.constructor && item instanceof window.constructor) {\n            return false;\n        }\n\n        let toString = ({}).toString;\n\n        if (toString) {\n            let name = toString.call(item);\n\n            if (name === '[object Window]' || name === '[object global]' || name === '[object DOMWindow]') {\n                return false;\n            }\n        }\n\n        if (typeof item.then === 'function') {\n            return true;\n        }\n    } catch (err) {\n        return false;\n    }\n\n    return false;\n}\n","/* @flow */\n\nimport type { ZalgoPromise } from './promise';\n\ntype ZalgoGlobalType = {\n    flushPromises : Array<ZalgoPromise<mixed>>,\n    activeCount : number,\n    possiblyUnhandledPromiseHandlers : Array<<T>(mixed, ZalgoPromise<T>) => void>, // eslint-disable-line no-undef\n    dispatchedErrors : Array<mixed>\n};\n\nexport function getGlobal() : ZalgoGlobalType {\n\n    let glob;\n\n    if (typeof window !== 'undefined') {\n        glob = window;\n    } else if (typeof global !== 'undefined') {\n        glob = global;\n    } else {\n        throw new TypeError(`Can not find global`);\n    }\n\n    let zalgoGlobal = glob.__zalgopromise__ = glob.__zalgopromise__ || {};\n    zalgoGlobal.flushPromises = zalgoGlobal.flushPromises || [];\n    zalgoGlobal.activeCount = zalgoGlobal.activeCount || 0;\n    zalgoGlobal.possiblyUnhandledPromiseHandlers = zalgoGlobal.possiblyUnhandledPromiseHandlers || [];\n    zalgoGlobal.dispatchedErrors = zalgoGlobal.dispatchedErrors || [];\n\n    return zalgoGlobal;\n}\n","/* @flow */\n\nimport { isPromise } from './utils';\nimport { onPossiblyUnhandledException, dispatchPossiblyUnhandledError } from './exceptions';\nimport { getGlobal } from './global';\n\nexport class ZalgoPromise<R : mixed> {\n\n    resolved : boolean\n    rejected : boolean\n    errorHandled : boolean\n    value : R\n    error : mixed\n    handlers : Array<{\n        promise : ZalgoPromise<*>,\n        onSuccess : void | (result : R) => mixed,\n        onError : void | (error : mixed) => mixed\n    }>\n    dispatching : boolean\n    stack : string\n\n    constructor(handler : ?(resolve : (result : R) => void, reject : (error : mixed) => void) => void) {\n\n        this.resolved = false;\n        this.rejected = false;\n        this.errorHandled = false;\n\n        this.handlers = [];\n\n        if (handler) {\n\n            let result;\n            let error;\n            let resolved = false;\n            let rejected = false;\n            let isAsync = false;\n\n            try {\n                handler(res => {\n                    if (isAsync) {\n                        this.resolve(res);\n                    } else {\n                        resolved = true;\n                        result = res;\n                    }\n\n                }, err => {\n                    if (isAsync) {\n                        this.reject(err);\n                    } else {\n                        rejected = true;\n                        error = err;\n                    }\n                });\n\n            } catch (err) {\n                this.reject(err);\n                return;\n            }\n\n            isAsync = true;\n\n            if (resolved) {\n                // $FlowFixMe\n                this.resolve(result);\n            } else if (rejected) {\n                this.reject(error);\n            }\n        }\n\n        if (__DEBUG__) {\n            try {\n                throw new Error(`ZalgoPromise`);\n            } catch (err) {\n                this.stack = err.stack;\n            }\n        }\n    }\n\n    resolve(result : R) : ZalgoPromise<R> {\n        if (this.resolved || this.rejected) {\n            return this;\n        }\n\n        if (isPromise(result)) {\n            throw new Error('Can not resolve promise with another promise');\n        }\n\n        this.resolved = true;\n        this.value = result;\n        this.dispatch();\n\n        return this;\n    }\n\n    reject(error : mixed) : ZalgoPromise<R> {\n        if (this.resolved || this.rejected) {\n            return this;\n        }\n\n        if (isPromise(error)) {\n            throw new Error('Can not reject promise with another promise');\n        }\n\n        if (!error) {\n            let err = (error && typeof error.toString === 'function' ? error.toString() : Object.prototype.toString.call(error));\n            error = new Error(`Expected reject to be called with Error, got ${ err }`);\n        }\n\n        this.rejected = true;\n        this.error = error;\n\n        if (!this.errorHandled) {\n            setTimeout(() => {\n                if (!this.errorHandled) {\n                    dispatchPossiblyUnhandledError(error, this);\n                }\n            }, 1);\n        }\n\n        this.dispatch();\n\n        return this;\n    }\n\n    asyncReject(error : mixed) : ZalgoPromise<R> {\n        this.errorHandled = true;\n        this.reject(error);\n        return this;\n    }\n\n    // eslint-disable-next-line complexity\n    dispatch() {\n\n        let { dispatching, resolved, rejected, handlers } = this;\n\n        if (dispatching) {\n            return;\n        }\n\n        if (!resolved && !rejected) {\n            return;\n        }\n\n        this.dispatching = true;\n        getGlobal().activeCount += 1;\n\n        for (let i = 0; i < handlers.length; i++) {\n\n            let { onSuccess, onError, promise } = handlers[i];\n\n            let result;\n\n            if (resolved) {\n\n                try {\n                    result = onSuccess ? onSuccess(this.value) : this.value;\n                } catch (err) {\n                    promise.reject(err);\n                    continue;\n                }\n\n            } else if (rejected) {\n\n                if (!onError) {\n                    promise.reject(this.error);\n                    continue;\n                }\n\n                try {\n                    result = onError(this.error);\n                } catch (err) {\n                    promise.reject(err);\n                    continue;\n                }\n            }\n\n            if (result instanceof ZalgoPromise && (result.resolved || result.rejected)) {\n\n                if (result.resolved) {\n                    promise.resolve(result.value);\n                } else {\n                    promise.reject(result.error);\n                }\n\n                result.errorHandled = true;\n\n            } else if (isPromise(result)) {\n\n                if (result instanceof ZalgoPromise && (result.resolved || result.rejected)) {\n                    if (result.resolved) {\n                        promise.resolve(result.value);\n                    } else {\n                        promise.reject(result.error);\n                    }\n\n                } else {\n                    // $FlowFixMe\n                    result.then(res => {\n                        promise.resolve(res);\n                    }, err => {\n                        promise.reject(err);\n                    });\n                }\n\n            } else {\n\n                promise.resolve(result);\n            }\n        }\n\n        handlers.length = 0;\n        this.dispatching = false;\n        getGlobal().activeCount -= 1;\n\n        if (getGlobal().activeCount === 0) {\n            ZalgoPromise.flushQueue();\n        }\n    }\n\n    then<X : mixed, Y : mixed>(onSuccess : void | (result : R) => (ZalgoPromise<X> | Y), onError : void | (error : mixed) => (ZalgoPromise<X> | Y)) : ZalgoPromise<X | Y> {\n\n        if (onSuccess && typeof onSuccess !== 'function' && !onSuccess.call) {\n            throw new Error('Promise.then expected a function for success handler');\n        }\n\n        if (onError && typeof onError !== 'function' && !onError.call) {\n            throw new Error('Promise.then expected a function for error handler');\n        }\n\n        let promise : ZalgoPromise<X | Y> = new ZalgoPromise();\n\n        this.handlers.push({\n            promise,\n            onSuccess,\n            onError\n        });\n\n        this.errorHandled = true;\n\n        this.dispatch();\n\n        return promise;\n    }\n\n    catch<X : mixed, Y : mixed>(onError : (error : mixed) => ZalgoPromise<X> | Y) : ZalgoPromise<X | Y> {\n        return this.then(undefined, onError);\n    }\n\n    finally(onFinally : () => mixed) : ZalgoPromise<R> {\n\n        if (onFinally && typeof onFinally !== 'function' && !onFinally.call) {\n            throw new Error('Promise.finally expected a function');\n        }\n\n        return this.then((result) => {\n            return ZalgoPromise.try(onFinally)\n                .then(() => {\n                    return result;\n                });\n        }, (err) => {\n            return ZalgoPromise.try(onFinally)\n                .then(() => {\n                    throw err;\n                });\n        });\n    }\n\n    timeout(time : number, err : ?Error) : ZalgoPromise<R> {\n\n        if (this.resolved || this.rejected) {\n            return this;\n        }\n\n        let timeout = setTimeout(() => {\n\n            if (this.resolved || this.rejected) {\n                return;\n            }\n\n            this.reject(err || new Error(`Promise timed out after ${ time }ms`));\n\n        }, time);\n\n        return this.then(result => {\n            clearTimeout(timeout);\n            return result;\n        });\n    }\n\n    // $FlowFixMe\n    toPromise() : Promise<R> {\n        // $FlowFixMe\n        if (typeof Promise === 'undefined') {\n            throw new TypeError(`Could not find Promise`);\n        }\n        // $FlowFixMe\n        return Promise.resolve(this); // eslint-disable-line compat/compat\n    }\n\n    static resolve<X : mixed>(value : X | ZalgoPromise<X>) : ZalgoPromise<X> {\n\n        if (value instanceof ZalgoPromise) {\n            return value;\n        }\n\n        if (isPromise(value)) {\n            // $FlowFixMe\n            return new ZalgoPromise((resolve, reject) => value.then(resolve, reject));\n        }\n\n        return new ZalgoPromise().resolve(value);\n    }\n\n    static reject(error : mixed) : ZalgoPromise<R> {\n        return new ZalgoPromise().reject(error);\n    }\n\n    static asyncReject(error : mixed) : ZalgoPromise<R> {\n        return new ZalgoPromise().asyncReject(error);\n    }\n\n    static all<X : [*] | [*, *] | [*, *, *] | [*, *, *, *] | [*, *, *, *, *] | [*, *, *, *, *, *] | [*, *, *, *, *, *, *] | [*, *, *, *, *, *, *, *] | [*, *, *, *, *, *, *, *, *] | Array<mixed>>(promises : X) : ZalgoPromise<$TupleMap<X, <Y>(ZalgoPromise<Y> | Y) => Y>> { // eslint-disable-line no-undef\n\n        let promise = new ZalgoPromise();\n        let count = promises.length;\n        let results = [];\n\n        if (!count) {\n            promise.resolve(results);\n            return promise;\n        }\n\n        for (let i = 0; i < promises.length; i++) {\n            let prom = promises[i];\n\n            if (prom instanceof ZalgoPromise) {\n                if (prom.resolved) {\n                    results[i] = prom.value;\n                    count -= 1;\n                    continue;\n                }\n            } else if (!isPromise(prom)) {\n                results[i] = prom;\n                count -= 1;\n                continue;\n            }\n\n            ZalgoPromise.resolve(prom).then(result => {\n                results[i] = result;\n                count -= 1;\n                if (count === 0) {\n                    promise.resolve(results);\n                }\n            }, err => {\n                promise.reject(err);\n            });\n        }\n\n        if (count === 0) {\n            promise.resolve(results);\n        }\n\n        return promise;\n    }\n\n    static hash<O : { [string] : * }>(promises : O) : ZalgoPromise<$ObjMap<O, <Y>(ZalgoPromise<Y> | Y) => Y>> { // eslint-disable-line no-undef\n        let result = {};\n        \n        return ZalgoPromise.all(Object.keys(promises).map(key => {\n            return ZalgoPromise.resolve(promises[key]).then(value => {\n                result[key] = value;\n            });\n        })).then(() => {\n            return result;\n        });\n    }\n\n    static map<T, X>(items : Array<T>, method : (T) => (ZalgoPromise<X> | X)) : ZalgoPromise<Array<X>> {\n        // $FlowFixMe\n        return ZalgoPromise.all(items.map(method));\n    }\n\n    static onPossiblyUnhandledException(handler : (err : mixed) => void) : { cancel : () => void } {\n        return onPossiblyUnhandledException(handler);\n    }\n\n    static try<X : mixed, Y : mixed, C : mixed, A : Array<mixed>>(method : (...args : A) => (ZalgoPromise<X> | Y), context : ?C, args : ?A) : ZalgoPromise<X | Y> {\n\n        if (method && typeof method !== 'function' && !method.call) {\n            throw new Error('Promise.try expected a function');\n        }\n\n        let result;\n        \n        try {\n            // $FlowFixMe\n            result = method.apply(context, args || []);\n        } catch (err) {\n            return ZalgoPromise.reject(err);\n        }\n\n        return ZalgoPromise.resolve(result);\n    }\n\n    static delay(delay : number) : ZalgoPromise<void> {\n        return new ZalgoPromise(resolve => {\n            setTimeout(resolve, delay);\n        });\n    }\n\n    static isPromise(value : mixed) : boolean {\n\n        if (value && value instanceof ZalgoPromise) {\n            return true;\n        }\n\n        return isPromise(value);\n    }\n\n    static flush() : ZalgoPromise<void> {\n        let promise = new ZalgoPromise();\n        getGlobal().flushPromises.push(promise);\n\n        if (getGlobal().activeCount === 0) {\n            ZalgoPromise.flushQueue();\n        }\n\n        return promise;\n    }\n\n    static flushQueue() {\n        let promisesToFlush = getGlobal().flushPromises;\n        getGlobal().flushPromises = [];\n\n        for (let promise of promisesToFlush) {\n            promise.resolve();\n        }\n    }\n}\n","/* @flow */\n\nimport { getGlobal } from './global';\nimport type { ZalgoPromise } from './promise';\n\nexport function dispatchPossiblyUnhandledError<T>(err : mixed, promise : ZalgoPromise<T>) {\n\n    if (getGlobal().dispatchedErrors.indexOf(err) !== -1) {\n        return;\n    }\n\n    getGlobal().dispatchedErrors.push(err);\n\n    setTimeout(() => {\n        if (__DEBUG__) {\n            // $FlowFixMe\n            throw new Error(`${ err.stack || err.toString() }\\n\\nFrom promise:\\n\\n${ promise.stack }`);\n        }\n\n        throw err;\n    }, 1);\n\n    for (let j = 0; j < getGlobal().possiblyUnhandledPromiseHandlers.length; j++) {\n        getGlobal().possiblyUnhandledPromiseHandlers[j](err, promise);\n    }\n}\n\nexport function onPossiblyUnhandledException(handler : (mixed) => void) : { cancel : () => void } {\n    getGlobal().possiblyUnhandledPromiseHandlers.push(handler);\n\n    return {\n        cancel() {\n            getGlobal().possiblyUnhandledPromiseHandlers.splice(getGlobal().possiblyUnhandledPromiseHandlers.indexOf(handler), 1);\n        }\n    };\n}\n","/* @flow */\n\nexport { ZalgoPromise } from './promise';\n","/* @flow */\n\nexport * from './utils';\nexport * from './types';\nexport * from './constants';\n","/* @flow */\n/* eslint max-lines: 0 */\n\nimport { ZalgoPromise } from 'zalgo-promise/src';\nimport { WeakMap } from 'cross-domain-safe-weakmap/src';\n\nimport type { CancelableType } from './types';\n\nexport function base64encode(str : string) : string {\n    if (typeof btoa === 'function') {\n        return btoa(str);\n    } else if (typeof Buffer !== 'undefined') {\n        return Buffer.from(str, 'utf8').toString('base64');\n    }\n\n    throw new Error(`Can not find window.btoa or Buffer`);\n}\n\nexport function base64decode(str : string) : string {\n    if (typeof window !== 'undefined' && typeof window.atob === 'function') {\n        return window.atob(str);\n    }\n\n    if (typeof Buffer !== 'undefined') {\n        return Buffer.from(str, 'base64').toString('utf8');\n    }\n\n    throw new Error(`Can not find window.atob or Buffer`);\n}\n\nexport function uniqueID() : string {\n\n    let chars = '0123456789abcdef';\n\n    let randomID = 'xxxxxxxxxx'.replace(/./g, () => {\n        return chars.charAt(Math.floor(Math.random() * chars.length));\n    });\n\n    let timeID = base64encode(\n        new Date().toISOString().slice(11, 19).replace('T', '.')\n    ).replace(/[^a-zA-Z0-9]/g, '').toLowerCase();\n\n    return `${ randomID }_${ timeID }`;\n}\n\nexport function getGlobal() : Object {\n    if (typeof window !== 'undefined') {\n        return window;\n    }\n    if (typeof global !== 'undefined') {\n        return global;\n    }\n    if (typeof __GLOBAL__ !== 'undefined') {\n        return __GLOBAL__;\n    }\n    throw new Error(`No global found`);\n}\n\nlet objectIDs;\n\nexport function getObjectID(obj : Object) : string {\n\n    objectIDs = objectIDs || new WeakMap();\n\n    if (obj === null || obj === undefined || (typeof obj !== 'object' && typeof obj !== 'function')) {\n        throw new Error(`Invalid object`);\n    }\n\n    let uid = objectIDs.get(obj);\n\n    if (!uid) {\n        uid = `${ typeof obj }:${ uniqueID() }`;\n        objectIDs.set(obj, uid);\n    }\n\n    return uid;\n}\n\nfunction serializeArgs(args : Array<mixed>) : string {\n    try {\n        return JSON.stringify(Array.prototype.slice.call(args), (subkey, val) => {\n            if (typeof val === 'function') {\n                return `memoize[${ getObjectID(val) }]`;\n            }\n            return val;\n        });\n    } catch (err) {\n        throw new Error(`Arguments not serializable -- can not be used to memoize`);\n    }\n}\n\n// eslint-disable-next-line flowtype/no-weak-types\nexport function memoize<R>(method : (...args : Array<any>) => R, options : { time? : number, name? : string, thisNamespace? : boolean } = {}) : ((...args : Array<any>) => R) {\n    let cacheMap = new WeakMap();\n\n    // eslint-disable-next-line flowtype/no-weak-types\n    function memoizedFunction(...args : Array<any>) : R {\n        let cache = cacheMap.getOrSet(options.thisNamespace ? this : method, () => ({}));\n\n        let key : string = serializeArgs(args);\n\n        let cacheTime = options.time;\n        if (cache[key] && cacheTime && (Date.now() - cache[key].time) < cacheTime) {\n            delete cache[key];\n        }\n\n        if (cache[key]) {\n            return cache[key].value;\n        }\n\n        let time  = Date.now();\n        let value = method.apply(this, arguments);\n\n        cache[key] = { time, value };\n\n        return cache[key].value;\n    }\n\n    memoizedFunction.reset = () => {\n        cacheMap.delete(options.thisNamespace ? this : method);\n    };\n\n    if (options.name) {\n        memoizedFunction.displayName = `${ options.name }:memoized`;\n    }\n\n    return memoizedFunction;\n}\n\n// eslint-disable-next-line flowtype/no-weak-types\nexport function memoizePromise<R>(method : (...args : Array<any>) => ZalgoPromise<R>) : ((...args : Array<any>) => ZalgoPromise<R>) {\n    let cache = {};\n\n    // eslint-disable-next-line flowtype/no-weak-types\n    function memoizedPromiseFunction(...args : Array<any>) : ZalgoPromise<R> {\n        let key : string = serializeArgs(args);\n\n        if (cache.hasOwnProperty(key)) {\n            return cache[key];\n        }\n\n        cache[key] = method.apply(this, arguments)\n            .finally(() => {\n                delete cache[key];\n            });\n\n        return cache[key];\n    }\n\n    memoizedPromiseFunction.reset = () => {\n        cache = {};\n    };\n\n    return memoizedPromiseFunction;\n}\n\n// eslint-disable-next-line flowtype/no-weak-types\nexport function promisify<R>(method : (...args : Array<any>) => R, options : { name? : string } = {}) : ((...args : Array<any>) => ZalgoPromise<R>) {\n    function promisifiedFunction() : ZalgoPromise<R> {\n        return ZalgoPromise.try(method, this, arguments);\n    }\n\n    if (options.name) {\n        promisifiedFunction.displayName = `${ options.name }:promisified`;\n    }\n\n    return promisifiedFunction;\n}\n\n// eslint-disable-next-line flowtype/no-weak-types\nexport function inlineMemoize<R>(method : (...args : Array<any>) => R, logic : (...args : Array<any>) => R, args : Array<any> = []) : R {\n    let cache = method.__inline_memoize_cache__ = method.__inline_memoize_cache__ || {};\n    let key = serializeArgs(args);\n\n    if (cache.hasOwnProperty(key)) {\n        return cache[key];\n    }\n    \n    let result = cache[key] = logic(...args);\n    return result;\n}\n\n// eslint-disable-next-line no-unused-vars\nexport function noop(...args : Array<mixed>) {\n    // pass\n}\n\nexport function once(method : Function) : Function {\n    let called = false;\n\n    return function onceFunction() : mixed {\n        if (!called) {\n            called = true;\n            return method.apply(this, arguments);\n        }\n    };\n}\n\nexport function hashStr(str : string) : number {\n    let hash = 0;\n    for (let i = 0; i < str.length; i++) {\n        hash += str[i].charCodeAt(0) * Math.pow((i % 10) + 1, 5);\n    }\n    return Math.floor(Math.pow(Math.sqrt(hash), 5));\n}\n\nexport function strHashStr(str : string) : string {\n    let hash = '';\n\n    for (let i = 0; i < str.length; i++) {\n        let total = (str[i].charCodeAt(0) * i);\n\n        if (str[i + 1]) {\n            total += (str[i + 1].charCodeAt(0) * (i - 1));\n        }\n\n        hash += String.fromCharCode(97 + (Math.abs(total) % 26));\n    }\n\n    return hash;\n}\n\nexport function match(str : string, pattern : RegExp) : ?string {\n    let regmatch = str.match(pattern);\n    if (regmatch) {\n        return regmatch[1];\n    }\n}\n\nexport function awaitKey<T: mixed>(obj : Object, key : string) : ZalgoPromise<T> {\n    return new ZalgoPromise(resolve => {\n\n        let value = obj[key];\n\n        if (value) {\n            return resolve(value);\n        }\n\n        delete obj[key];\n\n        Object.defineProperty(obj, key, {\n\n            configurable: true,\n\n            set(item) {\n                value = item;\n\n                if (value) {\n                    resolve(value);\n                }\n            },\n\n            get() : mixed {\n                return value;\n            }\n        });\n    });\n}\n\nexport function stringifyError(err : mixed, level : number = 1) : string {\n\n    if (level >= 3) {\n        return 'stringifyError stack overflow';\n    }\n\n    try {\n        if (!err) {\n            return `<unknown error: ${ Object.prototype.toString.call(err) }>`;\n        }\n\n        if (typeof err === 'string') {\n            return err;\n        }\n\n        if (err instanceof Error) {\n            let stack = err && err.stack;\n            let message = err && err.message;\n\n            if (stack && message) {\n                if (stack.indexOf(message) !== -1) {\n                    return stack;\n                } else {\n                    return `${ message }\\n${ stack }`;\n                }\n            } else if (stack) {\n                return stack;\n            } else if (message) {\n                return message;\n            }\n        }\n\n        if (typeof err.toString === 'function') {\n            return err.toString();\n        }\n\n        return Object.prototype.toString.call(err);\n\n    } catch (newErr) { // eslint-disable-line unicorn/catch-error-name\n        return `Error while stringifying error: ${ stringifyError(newErr, level + 1) }`;\n    }\n}\n\nexport function stringifyErrorMessage(err : mixed) : string {\n\n    let defaultMessage = `<unknown error: ${ Object.prototype.toString.call(err) }>`;\n\n    if (!err) {\n        return defaultMessage;\n    }\n\n    if (err instanceof Error) {\n        return err.message || defaultMessage;\n    }\n\n    if (typeof err.message === 'string') {\n        return err.message || defaultMessage;\n    }\n\n    return defaultMessage;\n}\n\nexport function stringify(item : mixed) : string {\n    if (typeof item === 'string') {\n        return item;\n    }\n\n    if (item && typeof item.toString === 'function') {\n        return item.toString();\n    }\n\n    return Object.prototype.toString.call(item);\n}\n\nexport function domainMatches(hostname : string, domain : string) : boolean {\n    hostname = hostname.split('://')[1];\n    let index = hostname.indexOf(domain);\n    return (index !== -1 && hostname.slice(index) === domain);\n}\n\nexport function patchMethod(obj : Object, name : string, handler : Function) {\n    let original = obj[name];\n\n    obj[name] = function patchedMethod() : mixed {\n        return handler({\n            context:      this,\n            args:         Array.prototype.slice.call(arguments),\n            original,\n            callOriginal: () => original.apply(this, arguments)\n        });\n    };\n}\n\nexport function extend<T : Object | Function>(obj : T, source : Object) : T {\n    if (!source) {\n        return obj;\n    }\n\n    if (Object.assign) {\n        return Object.assign(obj, source);\n    }\n\n    for (let key in source) {\n        if (source.hasOwnProperty(key)) {\n            obj[key] = source[key];\n        }\n    }\n\n    return obj;\n}\n\nexport function values<T>(obj : { [string] : T }) : Array<T> {\n    let result = [];\n    for (let key in obj) {\n        if (obj.hasOwnProperty(key)) {\n            result.push(obj[key]);\n        }\n    }\n    return result;\n}\n\nexport function perc(pixels : number, percentage : number) : number {\n    return Math.round((pixels * percentage) / 100);\n}\n\nexport function min(...args : Array<number>) : number {\n    return Math.min(...args);\n}\n\nexport function max(...args : Array<number>) : number {\n    return Math.max(...args);\n}\n\nexport function regexMap<T>(str : string, regexp : RegExp, handler : () => T) : Array<T> {\n    let results = [];\n\n    // $FlowFixMe\n    str.replace(regexp, function regexMapMatcher(item) {\n        results.push(handler ? handler.apply(null, arguments) : item);\n    });\n\n    // $FlowFixMe\n    return results;\n}\n\nexport function svgToBase64(svg : string) : string {\n    return `data:image/svg+xml;base64,${ base64encode(svg) }`;\n}\n\nexport function objFilter<T, R>(obj : { [string] : T }, filter? : (T, ?string) => mixed = Boolean) : { [string] : R } {\n    let result = {};\n\n    for (let key in obj) {\n        if (!obj.hasOwnProperty(key) || !filter(obj[key], key)) {\n            continue;\n        }\n\n        result[key] = obj[key];\n    }\n\n    return result;\n}\n\nexport function identity <T>(item : T) : T {\n    return item;\n}\n\nexport function regexTokenize(text : string, regexp : RegExp) : Array<string> {\n    let result = [];\n    text.replace(regexp, token => {\n        result.push(token);\n        return '';\n    });\n    return result;\n}\n\nexport function promiseDebounce<T>(method : () => ZalgoPromise<T> | T, delay : number = 50) : () => ZalgoPromise<T> {\n\n    let promise;\n    let timeout;\n\n    return function promiseDebouncedMethod() : ZalgoPromise<T> {\n        if (timeout) {\n            clearTimeout(timeout);\n        }\n\n        let localPromise = promise = promise || new ZalgoPromise();\n\n        timeout = setTimeout(() => {\n            promise = null;\n            timeout = null;\n\n            ZalgoPromise.try(method).then(\n                result => { localPromise.resolve(result); },\n                err => { localPromise.reject(err); }\n            );\n        }, delay);\n\n        return localPromise;\n    };\n}\n\nexport function safeInterval(method : Function, time : number) : { cancel : () => void } {\n\n    let timeout;\n\n    function loop() {\n        timeout = setTimeout(() => {\n            method();\n            loop();\n        }, time);\n    }\n\n    loop();\n\n    return {\n        cancel() {\n            clearTimeout(timeout);\n        }\n    };\n}\n\nexport function isInteger(str : string) : boolean {\n    return Boolean(str.match(/^[0-9]+$/));\n}\n\nexport function isFloat(str : string) : boolean {\n    return Boolean(str.match(/^[0-9]+\\.[0-9]+$/));\n}\n\nexport function serializePrimitive(value : string | number | boolean) : string {\n    return value.toString();\n}\n\nexport function deserializePrimitive(value : string) : string | number | boolean {\n    if (value === 'true') {\n        return true;\n    } else if (value === 'false') {\n        return false;\n    } else if (isInteger(value)) {\n        return parseInt(value, 10);\n    } else if (isFloat(value)) {\n        return parseFloat(value);\n    } else {\n        return value;\n    }\n}\n\nexport function dotify(obj : Object, prefix : string = '', newobj : Object = {}) : { [string] : string } {\n    prefix = prefix ? `${ prefix }.` : prefix;\n    for (let key in obj) {\n        if (!obj.hasOwnProperty(key) || obj[key] === undefined || obj[key] === null || typeof obj[key] === 'function') {\n            continue;\n        } else if (obj[key] && Array.isArray(obj[key]) && obj[key].length && obj[key].every(val => typeof val !== 'object')) {\n            newobj[`${ prefix }${ key }[]`] = obj[key].join(',');\n        } else if (obj[key] && typeof obj[key] === 'object') {\n            newobj = dotify(obj[key], `${ prefix }${ key }`, newobj);\n        } else {\n            newobj[`${ prefix }${ key }`] = serializePrimitive(obj[key]);\n        }\n    }\n    return newobj;\n}\n\nexport function undotify(obj : { [string] : string }) : Object {\n    \n    let result = {};\n\n    for (let key in obj) {\n        if (!obj.hasOwnProperty(key) || typeof obj[key] !== 'string') {\n            continue;\n        }\n\n        let value = obj[key];\n\n        if (key.match(/^.+\\[\\]$/)) {\n            key = key.slice(0, key.length - 2);\n            value = value.split(',').map(deserializePrimitive);\n        } else {\n            value = deserializePrimitive(value);\n        }\n\n        let keyResult = result;\n        let parts = key.split('.');\n        for (let i = 0; i < parts.length; i++) {\n            let part = parts[i];\n            let isLast = (i + 1 === parts.length);\n            let isIndex = !isLast && isInteger(parts[i + 1]);\n\n            if (isLast) {\n                // $FlowFixMe\n                keyResult[part] = value;\n            } else {\n                // $FlowFixMe\n                keyResult = keyResult[part] = keyResult[part] || (isIndex ? [] : {});\n            }\n        }\n    }\n\n    return result;\n}\n\nexport type EventEmitterType = {\n    on : (eventName : string, handler : Function) => CancelableType,\n    once : (eventName : string, handler : Function) => CancelableType,\n    trigger : (eventName : string) => void,\n    triggerOnce : (eventName : string) => void\n};\n\nexport function eventEmitter() : EventEmitterType {\n\n    let triggered = {};\n    let handlers = {};\n\n    return {\n\n        on(eventName : string, handler : Function) : CancelableType {\n\n            let handlerList = handlers[eventName] = handlers[eventName] || [];\n\n            handlerList.push(handler);\n\n            let cancelled = false;\n\n            return {\n                cancel() {\n                    if (!cancelled) {\n                        cancelled = true;\n                        handlerList.splice(handlerList.indexOf(handler), 1);\n                    }\n\n                }\n            };\n        },\n\n        once(eventName : string, handler : Function) : CancelableType {\n\n            let listener = this.on(eventName, () => {\n                listener.cancel();\n                handler();\n            });\n\n            return listener;\n        },\n\n        trigger(eventName : string) {\n\n            let handlerList = handlers[eventName];\n\n            if (handlerList) {\n                for (let handler of handlerList) {\n                    handler();\n                }\n            }\n        },\n\n        triggerOnce(eventName : string) {\n\n            if (triggered[eventName]) {\n                return;\n            }\n\n            triggered[eventName] = true;\n            this.trigger(eventName);\n        }\n    };\n}\n\nexport function camelToDasherize(string : string) : string {\n    return string.replace(/([A-Z])/g, (g) => {\n        return `-${ g.toLowerCase() }`;\n    });\n}\n\nexport function dasherizeToCamel(string : string) : string {\n    return string.replace(/-([a-z])/g, (g) => {\n        return g[1].toUpperCase();\n    });\n}\n\nexport function capitalizeFirstLetter(string : string) : string {\n    return string.charAt(0).toUpperCase() + string.slice(1).toLowerCase();\n}\n\nexport function get(item : Object, path : string, def : mixed) : mixed {\n\n    if (!path) {\n        return def;\n    }\n\n    let pathParts = path.split('.');\n\n    // Loop through each section of our key path\n\n    for (let i = 0; i < pathParts.length; i++) {\n\n        // If we have an object, we can get the key\n        if (typeof item === 'object' && item !== null) {\n            item = item[pathParts[i]];\n\n        // Otherwise, we should return the default (undefined if not provided)\n        } else {\n            return def;\n        }\n    }\n\n    // If our final result is undefined, we should return the default\n\n    return item === undefined ? def : item;\n}\n\nexport function safeTimeout(method : Function, time : number) {\n\n    let interval = safeInterval(() => {\n        time -= 100;\n        if (time <= 0) {\n            interval.cancel();\n            method();\n        }\n    }, 100);\n}\n\nexport function defineLazyProp<T>(obj : Object | Array<mixed>, key : string | number, getter : () => T) {\n    if (Array.isArray(obj)) {\n        if (typeof key !== 'number') {\n            throw new TypeError(`Array key must be number`);\n        }\n    } else if (typeof obj === 'object' && obj !== null) {\n        if (typeof key !== 'string') {\n            throw new TypeError(`Object key must be string`);\n        }\n    }\n    \n    Object.defineProperty(obj, key, {\n        configurable: true,\n        enumerable:   true,\n        get:          () => {\n            // $FlowFixMe\n            delete obj[key];\n            let value = getter();\n            // $FlowFixMe\n            obj[key] = value;\n            return value;\n        },\n        set: (value : T) => {\n            // $FlowFixMe\n            delete obj[key];\n            // $FlowFixMe\n            obj[key] = value;\n        }\n    });\n}\n\nexport function isObject(item : mixed) : boolean {\n    return (typeof item === 'object' && item !== null);\n}\n\nexport function isObjectObject(obj : mixed) : boolean {\n    return isObject(obj) && Object.prototype.toString.call(obj) === '[object Object]';\n}\n\nexport function isPlainObject(obj : mixed) : boolean {\n    if (!isObjectObject(obj)) {\n        return false;\n    }\n\n    // $FlowFixMe\n    let constructor = obj.constructor;\n\n    if (typeof constructor !== 'function') {\n        return false;\n    }\n\n    let prototype = constructor.prototype;\n\n    if (!isObjectObject(prototype)) {\n        return false;\n    }\n\n    if (!prototype.hasOwnProperty('isPrototypeOf')) {\n        return false;\n    }\n\n    return true;\n}\n\nexport function replaceObject<T : Object | Array<mixed>> (item : T, replacer : (mixed, string | number, string) => mixed, fullKey : string = '') : T {\n\n    if (Array.isArray(item)) {\n        let length = item.length;\n        let result = [];\n\n        for (let i = 0; i < length; i++) {\n\n            \n            defineLazyProp(result, i, () => {\n                let itemKey = fullKey ? `${ fullKey }.${ i }` : `${ i }`;\n                let el = item[i];\n\n                let child = replacer(el, i, itemKey);\n\n                if (isPlainObject(child) || Array.isArray(child)) {\n                    // $FlowFixMe\n                    child = replaceObject(child, replacer, itemKey);\n                }\n\n                return child;\n            });\n        }\n\n        // $FlowFixMe\n        return result;\n    } else if (isPlainObject(item)) {\n        let result = {};\n\n        for (let key in item) {\n            if (!item.hasOwnProperty(key)) {\n                continue;\n            }\n\n            defineLazyProp(result, key, () => {\n                let itemKey = fullKey ? `${ fullKey }.${ key }` : `${ key }`;\n                // $FlowFixMe\n                let el = item[key];\n\n                let child = replacer(el, key, itemKey);\n\n                if (isPlainObject(child) || Array.isArray(child)) {\n                    // $FlowFixMe\n                    child = replaceObject(child, replacer, itemKey);\n                }\n\n                return child;\n            });\n        }\n\n        // $FlowFixMe\n        return result;\n    } else {\n        throw new Error(`Pass an object or array`);\n    }\n}\n\n\nexport function copyProp(source : Object, target : Object, name : string, def : mixed) {\n    if (source.hasOwnProperty(name)) {\n        let descriptor = Object.getOwnPropertyDescriptor(source, name);\n        // $FlowFixMe\n        Object.defineProperty(target, name, descriptor);\n\n    } else {\n        target[name] = def;\n    }\n}\n\ntype RegexResultType = {\n    text : string,\n    groups : Array<string>,\n    start : number,\n    end : number,\n    length : number,\n    replace : (text : string) => string\n};\n\nexport function regex(pattern : string | RegExp, string : string, start : number = 0) : ?RegexResultType {\n\n    if (typeof pattern === 'string') {\n        // eslint-disable-next-line security/detect-non-literal-regexp\n        pattern = new RegExp(pattern);\n    }\n\n    let result = string.slice(start).match(pattern);\n\n    if (!result) {\n        return;\n    }\n\n    // $FlowFixMe\n    let index : number = result.index;\n    let regmatch = result[0];\n\n    return {\n        text:   regmatch,\n        groups: result.slice(1),\n        start:  start + index,\n        end:    start + index + regmatch.length,\n        length: regmatch.length,\n\n        replace(text : string) : string {\n\n            if (!regmatch) {\n                return '';\n            }\n\n            return `${ regmatch.slice(0, start + index) }${ text }${ regmatch.slice(index + regmatch.length) }`;\n        }\n    };\n}\n\nexport function regexAll(pattern : string | RegExp, string : string) : Array<RegexResultType> {\n\n    let matches = [];\n    let start = 0;\n\n    // eslint-disable-next-line no-constant-condition\n    while (true) {\n        let regmatch = regex(pattern, string, start);\n\n        if (!regmatch) {\n            break;\n        }\n\n        matches.push(regmatch);\n        start = match.end;\n    }\n\n    return matches;\n}\n\nexport function isDefined(value : ?mixed) : boolean {\n    return value !== null && value !== undefined;\n}\n\nexport function cycle(method : Function) : ZalgoPromise<void> {\n    return ZalgoPromise.try(method).then(() => cycle(method));\n}\n\nexport function debounce<T>(method : (...args : Array<mixed>) => T, time : number = 100) : (...args : Array<mixed>) => void {\n\n    let timeout;\n\n    return function debounceWrapper() {\n        clearTimeout(timeout);\n\n        timeout = setTimeout(() => {\n            return method.apply(this, arguments);\n        }, time);\n    };\n}\n\nexport function isRegex(item : mixed) : boolean {\n    return Object.prototype.toString.call(item) === '[object RegExp]';\n}\n\ntype FunctionProxy<T : Function> = (method : T) => T;\n\n// eslint-disable-next-line flowtype/no-weak-types\nexport let weakMapMemoize : FunctionProxy<*> = <R : mixed>(method : (arg : any) => R) : ((...args : Array<any>) => R) => {\n\n    let weakmap = new WeakMap();\n\n    // eslint-disable-next-line flowtype/no-weak-types\n    return function weakmapMemoized(arg : any) : R {\n        return weakmap.getOrSet(arg, () => method.call(this, arg));\n    };\n};\n\ntype FunctionPromiseProxy<R : mixed, T : (...args : $ReadOnlyArray<mixed>) => ZalgoPromise<R>> = (T) => T;\n\n// eslint-disable-next-line flowtype/no-weak-types\nexport let weakMapMemoizePromise : FunctionPromiseProxy<*, *> = <R : mixed>(method : (arg : any) => ZalgoPromise<R>) : ((...args : Array<any>) => ZalgoPromise<R>) => {\n\n    let weakmap = new WeakMap();\n\n    // eslint-disable-next-line flowtype/no-weak-types\n    return function weakmapMemoizedPromise(arg : any) : ZalgoPromise<R> {\n        return weakmap.getOrSet(arg, () =>\n            method.call(this, arg).finally(() => {\n                weakmap.delete(arg);\n            })\n        );\n    };\n};\n\nexport function getOrSet<O : Object, T : mixed>(obj : O, key : string, getter : () => T) : T {\n    if (obj.hasOwnProperty(key)) {\n        return obj[key];\n    }\n\n    const val = getter();\n    obj[key] = val;\n    return val;\n}\n\nexport type CleanupType = {|\n    set : <T : mixed>(string, T) => T, // eslint-disable-line no-undef\n    register : (Function) => void,\n    all : () => ZalgoPromise<void>\n|};\n\nexport function cleanup(obj : Object) : CleanupType {\n\n    const tasks = [];\n    let cleaned = false;\n\n    return {\n        set<T : mixed>(name : string, item : T) : T {\n            if (!cleaned) {\n                obj[name] = item;\n                this.register(() => {\n                    delete obj[name];\n                });\n            }\n            return item;\n        },\n\n        register(method : Function) {\n            if (cleaned) {\n                method();\n            } else {\n                tasks.push(once(method));\n            }\n        },\n\n        all() : ZalgoPromise<void> {\n            const results = [];\n            cleaned = true;\n\n            while (tasks.length) {\n                const task = tasks.pop();\n                results.push(task());\n            }\n\n            return ZalgoPromise.all(results).then(noop);\n        }\n    };\n}\n\nexport function tryCatch<T>(fn : () => T) : {| result : T, error : void |} | {| result : void, error : mixed |} {\n    let result;\n    let error;\n\n    try {\n        result = fn();\n    } catch (err) {\n        error = err;\n    }\n    \n    // $FlowFixMe\n    return { result, error };\n}\n\nexport function removeFromArray<X, T : Array<X>>(arr : T, item : X) {\n    const index = arr.indexOf(item);\n    if (index !== -1) {\n        arr.splice(index, 1);\n    }\n}\n","export default function _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}","/* @flow */\n\nexport const PROTOCOL = {\n    MOCK:  ('mock:' : 'mock:'),\n    FILE:  ('file:' : 'file:'),\n    ABOUT: ('about:' : 'about:')\n};\n\nexport const WILDCARD = '*';\n\nexport const WINDOW_TYPE = {\n    IFRAME: ('iframe' : 'iframe'),\n    POPUP:  ('popup' : 'popup')\n};\n","/* @flow */\n\nexport function safeIndexOf<T>(collection : Array<T>, item : T) : number {\n    for (let i = 0; i < collection.length; i++) {\n\n        try {\n            if (collection[i] === item) {\n                return i;\n            }\n        } catch (err) {\n            // pass\n        }\n    }\n\n    return -1;\n}\n\n// eslint-disable-next-line no-unused-vars\nexport function noop(...args : Array<mixed>) {\n    // pass\n}\n","/* @flow */\n\nimport { isWindow, isWindowClosed } from 'cross-domain-utils/src';\n\nimport { hasNativeWeakMap } from './native';\nimport { noop, safeIndexOf } from './util';\n\nlet defineProperty = Object.defineProperty;\nlet counter = Date.now() % 1e9;\n\nexport class CrossDomainSafeWeakMap<K : Object, V : mixed> {\n\n    name : string\n    weakmap : WeakMap<K, V>\n    keys : Array<K>\n    values : Array<V>\n\n    constructor() {\n        counter += 1;\n\n        // eslint-disable-next-line no-bitwise\n        this.name = `__weakmap_${ Math.random() * 1e9 >>> 0 }__${ counter }`;\n\n        if (hasNativeWeakMap()) {\n            try {\n                this.weakmap = new WeakMap();\n            } catch (err) {\n                // pass\n            }\n        }\n\n        this.keys  = [];\n        this.values = [];\n    }\n\n    _cleanupClosedWindows() {\n\n        let weakmap = this.weakmap;\n        let keys = this.keys;\n\n        for (let i = 0; i < keys.length; i++) {\n            let value = keys[i];\n\n            if (isWindow(value) && isWindowClosed(value)) {\n\n                if (weakmap) {\n                    try {\n                        weakmap.delete(value);\n                    } catch (err) {\n                        // pass\n                    }\n                }\n\n                keys.splice(i, 1);\n                this.values.splice(i, 1);\n\n                i -= 1;\n            }\n        }\n    }\n\n    isSafeToReadWrite(key : K) : boolean {\n\n        if (isWindow(key)) {\n            return false;\n        }\n\n        try {\n            noop(key && key.self);\n            noop(key && key[this.name]);\n        } catch (err) {\n            return false;\n        }\n\n        return true;\n    }\n\n    set(key : K, value : V) {\n\n        if (!key) {\n            throw new Error(`WeakMap expected key`);\n        }\n\n        let weakmap = this.weakmap;\n\n        if (weakmap) {\n            try {\n                weakmap.set(key, value);\n            } catch (err) {\n                delete this.weakmap;\n            }\n        }\n\n        if (!this.isSafeToReadWrite(key)) {\n\n            this._cleanupClosedWindows();\n\n            let keys = this.keys;\n            let values = this.values;\n            let index = safeIndexOf(keys, key);\n\n            if (index === -1) {\n                keys.push(key);\n                values.push(value);\n            } else {\n                values[index] = value;\n            }\n\n        } else {\n\n            let name = this.name;\n            let entry = key[name];\n\n            if (entry && entry[0] === key) {\n                entry[1] = value;\n            } else {\n                defineProperty(key, name, {\n                    value:    [ key, value ],\n                    writable: true\n                });\n            }\n        }\n    }\n\n    get(key : K) : V | void {\n\n        if (!key) {\n            throw new Error(`WeakMap expected key`);\n        }\n\n        let weakmap = this.weakmap;\n\n        if (weakmap) {\n            try {\n                if (weakmap.has(key)) {\n                    return weakmap.get(key);\n                }\n            } catch (err) {\n                delete this.weakmap;\n            }\n        }\n\n        if (!this.isSafeToReadWrite(key)) {\n\n            this._cleanupClosedWindows();\n\n            let keys = this.keys;\n            let index = safeIndexOf(keys, key);\n\n            if (index === -1) {\n                return;\n            }\n\n            return this.values[index];\n\n        } else {\n\n            let entry = key[this.name];\n\n            if (entry && entry[0] === key) {\n                return entry[1];\n            }\n        }\n    }\n\n    delete(key : K) {\n\n        if (!key) {\n            throw new Error(`WeakMap expected key`);\n        }\n\n        let weakmap = this.weakmap;\n\n        if (weakmap) {\n            try {\n                weakmap.delete(key);\n            } catch (err) {\n                delete this.weakmap;\n            }\n        }\n\n        if (!this.isSafeToReadWrite(key)) {\n\n            this._cleanupClosedWindows();\n\n            let keys = this.keys;\n            let index = safeIndexOf(keys, key);\n\n            if (index !== -1) {\n                keys.splice(index, 1);\n                this.values.splice(index, 1);\n            }\n\n        } else {\n\n            let entry = key[this.name];\n\n            if (entry && entry[0] === key) {\n                entry[0] = entry[1] = undefined;\n            }\n        }\n    }\n\n    has(key : K) : boolean {\n\n        if (!key) {\n            throw new Error(`WeakMap expected key`);\n        }\n\n        let weakmap = this.weakmap;\n\n        if (weakmap) {\n            try {\n                if (weakmap.has(key)) {\n                    return true;\n                }\n            } catch (err) {\n                delete this.weakmap;\n            }\n        }\n\n        if (!this.isSafeToReadWrite(key)) {\n\n            this._cleanupClosedWindows();\n\n            let index = safeIndexOf(this.keys, key);\n            return index !== -1;\n\n        } else {\n\n            let entry = key[this.name];\n\n            if (entry && entry[0] === key) {\n                return true;\n            }\n\n            return false;\n        }\n    }\n\n    getOrSet(key : K, getter : () => V) : V {\n        if (this.has(key)) {\n            // $FlowFixMe\n            return this.get(key);\n        }\n\n        let value = getter();\n        this.set(key, value);\n        return value;\n    }\n}\n","/* @flow */\n\nexport function hasNativeWeakMap() : boolean {\n\n    if (typeof WeakMap === 'undefined') {\n        return false;\n    }\n\n    if (typeof Object.freeze === 'undefined') {\n        return false;\n    }\n\n    try {\n\n        let testWeakMap = new WeakMap();\n        let testKey = {};\n        let testValue = '__testvalue__';\n\n        Object.freeze(testKey);\n\n        testWeakMap.set(testKey, testValue);\n\n        if (testWeakMap.get(testKey) === testValue) {\n            return true;\n        }\n\n        return false;\n\n    } catch (err) {\n\n        return false;\n    }\n}\n","/* @flow */\n\n// eslint-disable-next-line import/no-namespace\nimport * as INTERFACE from './interface';\n\nexport * from './interface';\nexport default INTERFACE;\n","/* @flow */\n\nexport function getUserAgent() : string {\n    return window.navigator.mockUserAgent || window.navigator.userAgent;\n}\n\nexport function isDevice() : boolean {\n    let userAgent = getUserAgent();\n    if (userAgent.match(/Android|webOS|iPhone|iPad|iPod|bada|Symbian|Palm|CriOS|BlackBerry|IEMobile|WindowsMobile|Opera Mini/i)) {\n        return true;\n    }\n\n    return false;\n}\n\nexport function isWebView() : boolean {\n    let userAgent = getUserAgent();\n    return (/(iPhone|iPod|iPad|Macintosh).*AppleWebKit(?!.*Safari)/i).test(userAgent) ||\n        (/\\bwv\\b/).test(userAgent) ||\n    (/Android.*Version\\/(\\d)\\.(\\d)/i).test(userAgent);\n}\n\nexport function isStandAlone() : boolean {\n    return (window.navigator.standalone === true || window.matchMedia('(display-mode: standalone)').matches);\n}\n\nexport function isFacebookWebView(ua? : string = getUserAgent()) : boolean {\n    return (ua.indexOf('FBAN') !== -1) || (ua.indexOf('FBAV') !== -1);\n}\n\nexport function isFirefoxIOS(ua? : string = getUserAgent()) : boolean {\n    return (/FxiOS/i).test(ua);\n}\n\nexport function isEdgeIOS(ua? : string = getUserAgent()) : boolean {\n    return (/EdgiOS/i).test(ua);\n}\n\nexport function isOperaMini(ua? : string = getUserAgent()) : boolean {\n    return ua.indexOf('Opera Mini') > -1;\n}\n\nexport function isAndroid(ua? : string = getUserAgent()) : boolean {\n    return (/Android/).test(ua);\n}\n\nexport function isIos(ua? : string = getUserAgent()) : boolean {\n    return (/iPhone|iPod|iPad/).test(ua);\n}\n\nexport function isGoogleSearchApp(ua? : string = getUserAgent()) : boolean {\n    return (/\\bGSA\\b/).test(ua);\n}\n\nexport function isQQBrowser(ua? : string = getUserAgent()) : boolean {\n    return (/QQBrowser/).test(ua);\n}\n\nexport function isIosWebview(ua? : string = getUserAgent()) : boolean {\n    if (isIos(ua)) {\n        if (isGoogleSearchApp(ua)) {\n            return true;\n        }\n        return (/.+AppleWebKit(?!.*Safari)/).test(ua);\n    }\n    return false;\n}\n\nexport function isAndroidWebview(ua? : string = getUserAgent()) : boolean {\n    if (isAndroid(ua)) {\n        return (/Version\\/[\\d.]+/).test(ua) && !isOperaMini(ua);\n    }\n    return false;\n}\n\nexport function isIE() : boolean {\n\n    if (window.document.documentMode) {\n        return true;\n    }\n\n    return Boolean(\n        window.navigator &&\n        window.navigator.userAgent &&\n        (/Edge|MSIE|rv:11/i).test(window.navigator.userAgent)\n    );\n}\n\nexport function isIECompHeader() : boolean {\n    let mHttp = window.document.querySelector('meta[http-equiv=\"X-UA-Compatible\"]');\n    let mContent = window.document.querySelector('meta[content=\"IE=edge\"]');\n    if (mHttp && mContent) {\n        return true;\n    }\n    return false;\n}\n\nexport function isElectron() : boolean {\n    if (typeof process !== 'undefined' && process.versions && process.versions.electron) {\n        return true;\n    }\n    return false;\n}\n\nexport function isIEIntranet() : boolean {\n\n    // This status check only works for older versions of IE with document.documentMode set\n\n    if (window.document.documentMode) {\n        try {\n            let status = window.status;\n\n            window.status = 'testIntranetMode';\n\n            if (window.status === 'testIntranetMode') {\n                window.status = status;\n\n                return true;\n            }\n\n            return false;\n\n        } catch (err) {\n\n            return false;\n        }\n    }\n\n    return false;\n}\n\nexport function isMacOsCna() : boolean {\n    let userAgent = getUserAgent();\n    return (/Macintosh.*AppleWebKit(?!.*Safari)/i).test(userAgent);\n}\n\nexport function supportsPopups(ua? : string = getUserAgent()) : boolean {\n    return !(isIosWebview(ua) || isAndroidWebview(ua) || isOperaMini(ua) ||\n        isFirefoxIOS(ua) || isEdgeIOS(ua) || isFacebookWebView(ua) || isQQBrowser(ua) || isElectron() || isMacOsCna() || isStandAlone());\n}\n","/* @flow */\n\nimport { uniqueID, getGlobal, inlineMemoize } from './util';\nimport { isLocalStorageEnabled } from './dom';\n\ntype Getter<T> = <T>(handler : (Object) => T) => T;\n\nexport type Storage = {\n    getState : Getter<*>,\n    getID : () => string,\n    getSessionState : Getter<*>,\n    getSessionID : () => string\n};\n\nexport function getStorage({ name, version = 'latest', lifetime = (5 * 60 * 1000) } : { name : string, version? : string, lifetime? : number }) : Storage {\n    return inlineMemoize(getStorage, () => {\n        const STORAGE_KEY = `__${ name }_${ version }_storage__`;\n\n        let accessedStorage;\n\n        function getState<T>(handler : (storage : Object) => T) : T {\n\n            let localStorageEnabled = isLocalStorageEnabled();\n            let storage;\n\n            if (accessedStorage) {\n                storage = accessedStorage;\n            }\n\n            if (!storage && localStorageEnabled) {\n                let rawStorage = window.localStorage.getItem(STORAGE_KEY);\n\n                if (rawStorage) {\n                    storage = JSON.parse(rawStorage);\n                }\n            }\n\n            if (!storage) {\n                storage = getGlobal()[STORAGE_KEY];\n            }\n\n            if (!storage) {\n                storage = {\n                    id: uniqueID()\n                };\n            }\n\n            if (!storage.id) {\n                storage.id = uniqueID();\n            }\n\n            accessedStorage = storage;\n\n            let result = handler(storage);\n\n            if (localStorageEnabled) {\n                window.localStorage.setItem(STORAGE_KEY, JSON.stringify(storage));\n            } else {\n                getGlobal()[STORAGE_KEY] = storage;\n            }\n\n            accessedStorage = null;\n\n            return result;\n        }\n\n        function getID() : string {\n            return getState(storage => storage.id);\n        }\n\n        function getSession<T>(handler : (state : Object) => T) : T {\n            return getState(storage => {\n\n                let session = storage.__session__;\n                let now = Date.now();\n\n                if (session && ((now - session.created) > lifetime)) {\n                    session = null;\n                }\n\n                if (!session) {\n                    session = {\n                        guid:    uniqueID(),\n                        created: now\n                    };\n                }\n\n                storage.__session__ = session;\n\n                return handler(session);\n            });\n        }\n\n        function getSessionState<T>(handler : (state : Object) => T) : T {\n            return getSession(session => {\n                session.state = session.state || {};\n                return handler(session.state);\n            });\n        }\n\n        function getSessionID() : string {\n            return getSession(session => session.guid);\n        }\n\n        return {\n            getState,\n            getID,\n            getSessionState,\n            getSessionID\n        };\n    }, [ { name, version, lifetime } ]);\n}\n","/* @flow */\n/* eslint max-lines: off */\n\nimport { ZalgoPromise } from 'zalgo-promise/src';\nimport { linkFrameWindow, isWindowClosed,\n    type SameDomainWindowType, type CrossDomainWindowType } from 'cross-domain-utils/src';\nimport { WeakMap } from 'cross-domain-safe-weakmap/src';\n\nimport { inlineMemoize, noop, stringify, capitalizeFirstLetter,\n    once, extend, safeInterval } from './util';\nimport { isDevice } from './device';\nimport { KEY_CODES } from './constants';\nimport type { CancelableType } from './types';\n\ntype ElementRefType = string | HTMLElement;\n\nexport function isDocumentReady() : boolean {\n    return Boolean(document.body) && document.readyState === 'complete';\n}\n\nexport function urlEncode(str : string) : string {\n    return str.replace(/\\?/g, '%3F').replace(/&/g, '%26').replace(/#/g, '%23').replace(/\\+/g, '%2B');\n}\n\nexport function waitForWindowReady() : ZalgoPromise<void> {\n    return inlineMemoize(waitForWindowReady, () : ZalgoPromise<void> => {\n        return new ZalgoPromise(resolve => {\n            if (isDocumentReady()) {\n                resolve();\n            }\n\n            window.addEventListener('load', () => resolve());\n        });\n    });\n}\n\nexport function waitForDocumentReady() : ZalgoPromise<void> {\n    return inlineMemoize(waitForDocumentReady, () : ZalgoPromise<void> => {\n        return new ZalgoPromise(resolve => {\n\n            if (isDocumentReady()) {\n                return resolve();\n            }\n\n            let interval = setInterval(() => {\n                if (isDocumentReady()) {\n                    clearInterval(interval);\n                    return resolve();\n                }\n            }, 10);\n        });\n    });\n}\n\nexport function waitForDocumentBody() : ZalgoPromise<HTMLBodyElement> {\n    return waitForDocumentReady().then(() => {\n        if (document.body) {\n            return document.body;\n        }\n\n        throw new Error('Document ready but document.body not present');\n    });\n}\n\nexport function parseQuery(queryString : string) : Object {\n    return inlineMemoize(parseQuery, () : Object => {\n        let params = {};\n\n        if (!queryString) {\n            return params;\n        }\n\n        if (queryString.indexOf('=') === -1) {\n            return params;\n        }\n\n        for (let pair of queryString.split('&')) {\n            pair = pair.split('=');\n\n            if (pair[0] && pair[1]) {\n                params[decodeURIComponent(pair[0])] = decodeURIComponent(pair[1]);\n            }\n        }\n\n        return params;\n    }, [ queryString ]);\n}\n\n\nexport function getQueryParam(name : string) : string {\n    return parseQuery(window.location.search.slice(1))[name];\n}\n\nexport function urlWillRedirectPage(url : string) : boolean {\n\n    if (url.indexOf('#') === -1) {\n        return true;\n    }\n\n    if (url.indexOf('#') === 0) {\n        return false;\n    }\n\n    if (url.split('#')[0] === window.location.href.split('#')[0]) {\n        return false;\n    }\n\n    return true;\n}\n\nexport function formatQuery(obj : { [ string ] : string } = {}) : string {\n\n    return Object.keys(obj).filter(key => {\n        return typeof obj[key] === 'string';\n    }).map(key => {\n        return `${ urlEncode(key) }=${ urlEncode(obj[key]) }`;\n    }).join('&');\n}\n\nexport function extendQuery(originalQuery : string, props : { [ string ] : string } = {}) : string {\n\n    if (!props || !Object.keys(props).length) {\n        return originalQuery;\n    }\n\n    return formatQuery({\n        ...parseQuery(originalQuery),\n        ...props\n    });\n}\n\nexport function extendUrl(url : string, options : { query? : { [string] : string }, hash? : { [string] : string } } = {}) : string {\n\n    let query = options.query || {};\n    let hash = options.hash || {};\n\n    let originalUrl;\n    let originalQuery;\n    let originalHash;\n\n    [ originalUrl, originalHash ] = url.split('#');\n    [ originalUrl, originalQuery ] = originalUrl.split('?');\n\n    let queryString = extendQuery(originalQuery, query);\n    let hashString = extendQuery(originalHash, hash);\n\n    if (queryString) {\n        originalUrl = `${ originalUrl }?${ queryString }`;\n    }\n\n    if (hashString) {\n        originalUrl = `${ originalUrl }#${ hashString }`;\n    }\n\n    return originalUrl;\n}\n\nexport function redirect(url : string, win : CrossDomainWindowType = window) : ZalgoPromise<void> {\n    return new ZalgoPromise(resolve => {\n        win.location = url;\n        if (!urlWillRedirectPage(url)) {\n            resolve();\n        }\n    });\n}\n\nexport function hasMetaViewPort() : boolean {\n    let meta = document.querySelector('meta[name=viewport]');\n\n    if (isDevice() && window.screen.width < 660 && !meta) {\n        return false;\n    }\n\n    return true;\n}\n\nexport function isElementVisible(el : HTMLElement) : boolean {\n    return Boolean(el.offsetWidth || el.offsetHeight || el.getClientRects().length);\n}\n\nexport function enablePerformance() : boolean {\n    return inlineMemoize(enablePerformance, () : boolean => {\n        /* eslint-disable compat/compat */\n        return Boolean(\n            window.performance &&\n            performance.now &&\n            performance.timing &&\n            performance.timing.connectEnd &&\n            performance.timing.navigationStart &&\n            (Math.abs(performance.now() - Date.now()) > 1000) &&\n            (performance.now() - (performance.timing.connectEnd - performance.timing.navigationStart)) > 0\n        );\n        /* eslint-enable compat/compat */\n    });\n}\n\nexport function getPageRenderTime() : ZalgoPromise<?number> {\n    return waitForDocumentReady().then(() => {\n\n        if (!enablePerformance()) {\n            return;\n        }\n\n        let timing = window.performance.timing;\n\n        if (timing.connectEnd && timing.domInteractive) {\n            return timing.domInteractive - timing.connectEnd;\n        }\n    });\n}\n\nexport function htmlEncode(html : string = '') : string {\n    return html.toString()\n        .replace(/&/g, '&amp;')\n        .replace(/</g, '&lt;')\n        .replace(/>/g, '&gt;')\n        .replace(/\"/g, '&quot;')\n        .replace(/'/g, '&#39;')\n        .replace(/\\//g, '&#x2F;');\n}\n\nexport function isBrowser() : boolean {\n    return (typeof window !== 'undefined');\n}\n\nexport function querySelectorAll(selector : string, doc : HTMLElement = window.document) : Array<Element> {\n    return Array.prototype.slice.call(doc.querySelectorAll(selector));\n}\n\nexport function onClick(element : Element, handler : (Event) => void) {\n    element.addEventListener('touchstart', noop);\n    element.addEventListener('click', handler);\n    element.addEventListener('keypress', (event : Event) => {\n        // $FlowFixMe\n        if (event.keyCode === KEY_CODES.ENTER) {\n            return handler(event);\n        }\n    });\n}\n\nexport function getScript({ host = window.location.host, path } : { host? : string, path : string }) : ?HTMLScriptElement {\n    return inlineMemoize(getScript, () : ?HTMLScriptElement => {\n\n        let url = `${ host }${ path }`;\n        let scripts = Array.prototype.slice.call(document.getElementsByTagName('script'));\n\n        for (let script of scripts) {\n            if (!script.src) {\n                continue;\n            }\n\n            let src = script.src.replace(/^https?:\\/\\//, '').split('?')[0];\n\n            if (src === url) {\n                return script;\n            }\n        }\n    }, [ path ]);\n}\n\nexport function isLocalStorageEnabled() : boolean {\n    return inlineMemoize(isLocalStorageEnabled, () => {\n        try {\n            if (typeof window === 'undefined') {\n                return false;\n            }\n\n            if (window.localStorage) {\n                let value = Math.random().toString();\n                window.localStorage.setItem('__test__localStorage__', value);\n                let result = window.localStorage.getItem('__test__localStorage__');\n                window.localStorage.removeItem('__test__localStorage__');\n                if (value === result) {\n                    return true;\n                }\n            }\n        } catch (err) {\n            // pass\n        }\n        return false;\n    });\n}\n\nexport function getBrowserLocales() : Array<{ country? : string, lang : string }> {\n    let nav = window.navigator;\n\n    let locales = nav.languages\n        ? Array.prototype.slice.apply(nav.languages)\n        : [];\n\n    if (nav.language) {\n        locales.push(nav.language);\n    }\n\n    if (nav.userLanguage) {\n        locales.push(nav.userLanguage);\n    }\n\n    return locales.map(locale => {\n\n        if (locale && locale.match(/^[a-z]{2}[-_][A-Z]{2}$/)) {\n            let [ lang, country ] = locale.split(/[-_]/);\n            return { country, lang };\n        }\n\n        if (locale && locale.match(/^[a-z]{2}$/)) {\n            return { lang: locale };\n        }\n\n        return null;\n\n    }).filter(Boolean);\n}\n\n\nexport function appendChild(container : HTMLElement, child : HTMLElement | Text) {\n    container.appendChild(child);\n}\n\nexport function isElement(element : mixed) : boolean {\n\n    if (element instanceof window.Element) {\n        return true;\n    }\n\n    if (element !== null && typeof element === 'object' && element.nodeType === 1 && typeof element.style === 'object' && typeof element.ownerDocument === 'object') {\n        return true;\n    }\n\n    return false;\n}\n\nexport function getElementSafe(id : ElementRefType, doc : Document | HTMLElement = document) : ?HTMLElement {\n\n    if (isElement(id)) {\n        // $FlowFixMe\n        return id;\n    }\n\n    if (typeof id === 'string') {\n        return doc.querySelector(id);\n    }\n}\n\nexport function getElement(id : ElementRefType, doc : Document | HTMLElement = document) : HTMLElement {\n\n    let element = getElementSafe(id, doc);\n\n    if (element) {\n        return element;\n    }\n\n    throw new Error(`Can not find element: ${ stringify(id) }`);\n}\n\nexport function elementReady(id : ElementRefType) : ZalgoPromise<window.HTMLElement> {\n    return new ZalgoPromise((resolve, reject) => {\n\n        let name = stringify(id);\n        let el = getElementSafe(id);\n\n        if (el) {\n            return resolve(el);\n        }\n\n        if (isDocumentReady()) {\n            return reject(new Error(`Document is ready and element ${ name } does not exist`));\n        }\n\n        let interval = setInterval(() => {\n\n            el = getElementSafe(id);\n\n            if (el) {\n                clearInterval(interval);\n                return resolve(el);\n            }\n\n            if (isDocumentReady()) {\n                clearInterval(interval);\n                return reject(new Error(`Document is ready and element ${ name } does not exist`));\n            }\n        }, 10);\n    });\n}\n\nexport function PopupOpenError(message : string) {\n    this.message = message;\n}\n\nPopupOpenError.prototype = Object.create(Error.prototype);\n\ntype PopupOptions = {|\n    name? : string,\n    width? : number,\n    height? : number,\n    top? : number,\n    left? : number,\n    status? : 0 | 1,\n    resizable? : 0 | 1,\n    toolbar? : 0 | 1,\n    menubar? : 0 | 1,\n    scrollbars? : 0 | 1\n|};\n\nexport function popup(url : string, options? : PopupOptions) : CrossDomainWindowType {\n\n    // $FlowFixMe\n    options = options || {};\n\n    let { width, height } = options;\n\n    let top = 0;\n    let left = 0;\n\n    if (width) {\n        if (window.outerWidth) {\n            left = Math.round((window.outerWidth - width) / 2) + window.screenX;\n        } else if (window.screen.width) {\n            left = Math.round((window.screen.width - width) / 2);\n        }\n    }\n\n    if (height) {\n        if (window.outerHeight) {\n            top = Math.round((window.outerHeight - height) / 2) + window.screenY;\n        } else if (window.screen.height) {\n            top = Math.round((window.screen.height - height) / 2);\n        }\n    }\n\n    options = {\n        top,\n        left,\n        width,\n        height,\n        status:     1,\n        toolbar:    0,\n        menubar:    0,\n        resizable:  1,\n        scrollbars: 1,\n        ...options\n    };\n\n    let name = options.name || '';\n    delete options.name;\n\n    // eslint-disable-next-line array-callback-return\n    let params = Object.keys(options).map(key => {\n        // $FlowFixMe\n        if (options[key]) {\n            return `${ key }=${ stringify(options[key]) }`;\n        }\n    }).filter(Boolean).join(',');\n\n    let win;\n\n    try {\n        win = window.open(url, name, params, true);\n    } catch (err) {\n        throw new PopupOpenError(`Can not open popup window - ${ err.stack || err.message }`);\n    }\n\n    if (isWindowClosed(win)) {\n        let err = new PopupOpenError(`Can not open popup window - blocked`);\n        throw err;\n    }\n\n    window.addEventListener('unload', () => win.close());\n\n    return win;\n}\n\n\nexport function writeToWindow(win : SameDomainWindowType, html : string) {\n    try {\n        win.document.open();\n        win.document.write(html);\n        win.document.close();\n    } catch (err) {\n        try {\n            win.location = `javascript: document.open(); document.write(${ JSON.stringify(html) }); document.close();`;\n        } catch (err2) {\n            // pass\n        }\n    }\n}\n\nexport function writeElementToWindow(win : SameDomainWindowType, el : HTMLElement) {\n\n    let tag = el.tagName.toLowerCase();\n\n    if (tag !== 'html') {\n        throw new Error(`Expected element to be html, got ${ tag }`);\n    }\n\n    let documentElement = win.document.documentElement;\n\n    while (documentElement.children && documentElement.children.length) {\n        documentElement.removeChild(documentElement.children[0]);\n    }\n\n    while (el.children.length) {\n        documentElement.appendChild(el.children[0]);\n    }\n}\n\nexport function setStyle(el : HTMLElement, styleText : string, doc : Document = window.document) {\n    // $FlowFixMe\n    if (el.styleSheet) {\n        // $FlowFixMe\n        el.styleSheet.cssText = styleText;\n    } else {\n        el.appendChild(doc.createTextNode(styleText));\n    }\n}\n\nexport type ElementOptionsType = {\n    style? : { [ string ] : string },\n    class? : ?Array<string>,\n    attributes? : { [ string ] : string },\n    styleSheet? : ?string,\n    html? : ?string\n};\n\nlet awaitFrameLoadPromises : WeakMap<HTMLIFrameElement, ZalgoPromise<HTMLIFrameElement>>;\n\nexport function awaitFrameLoad(frame : HTMLIFrameElement) : ZalgoPromise<HTMLIFrameElement> {\n    awaitFrameLoadPromises = awaitFrameLoadPromises || new WeakMap();\n\n    if (awaitFrameLoadPromises.has(frame)) {\n        let promise = awaitFrameLoadPromises.get(frame);\n        if (promise) {\n            return promise;\n        }\n    }\n\n    let promise = new ZalgoPromise((resolve, reject) => {\n        frame.addEventListener('load', () => {\n            linkFrameWindow(frame);\n            resolve(frame);\n        });\n\n        frame.addEventListener('error', (err : Event) => {\n            if (frame.contentWindow) {\n                resolve(frame);\n            } else {\n                reject(err);\n            }\n        });\n    });\n\n    awaitFrameLoadPromises.set(frame, promise);\n\n    return promise;\n}\n\nexport function awaitFrameWindow(frame : HTMLIFrameElement) : ZalgoPromise<CrossDomainWindowType> {\n\n    if (frame.contentWindow) {\n        return ZalgoPromise.resolve(frame.contentWindow);\n    }\n\n    return awaitFrameLoad(frame).then(loadedFrame => {\n\n        if (!loadedFrame.contentWindow) {\n            throw new Error(`Could not find window in iframe`);\n        }\n\n        return loadedFrame.contentWindow;\n    });\n}\n\nexport function createElement(tag : string = 'div', options : ElementOptionsType = {}, container : ?HTMLElement) : HTMLElement {\n\n    tag = tag.toLowerCase();\n    let element = document.createElement(tag);\n\n    if (options.style) {\n        extend(element.style, options.style);\n    }\n\n    if (options.class) {\n        element.className = options.class.join(' ');\n    }\n\n    if (options.attributes) {\n        for (let key of Object.keys(options.attributes)) {\n            element.setAttribute(key, options.attributes[key]);\n        }\n    }\n\n    if (options.styleSheet) {\n        setStyle(element, options.styleSheet);\n    }\n\n    if (container) {\n        appendChild(container, element);\n    }\n\n    if (options.html) {\n        if (tag === 'iframe') {\n            // $FlowFixMe\n            if (!container || !element.contentWindow) {\n                throw new Error(`Iframe html can not be written unless container provided and iframe in DOM`);\n            }\n\n            // $FlowFixMe\n            writeToWindow(element.contentWindow, options.html);\n\n        } else {\n            element.innerHTML = options.html;\n        }\n    }\n\n    return element;\n}\n\n\nexport type IframeElementOptionsType = {\n    style? : { [ string ] : string },\n    class? : ?Array<string>,\n    attributes? : { [ string ] : string },\n    styleSheet? : ?string,\n    html? : ?string,\n    url? : ?string\n};\n\nexport function iframe(options : IframeElementOptionsType = {}, container : HTMLElement, attempts : number = 3) : HTMLIFrameElement {\n\n    let el = getElement(container);\n\n    let attributes = options.attributes || {};\n    let style = options.style || {};\n\n    let frame = createElement('iframe', {\n        attributes: {\n            frameBorder:       '0',\n            allowTransparency: 'true',\n            ...attributes\n        },\n        style: {\n            backgroundColor: 'transparent',\n            ...style\n        },\n        html:  options.html,\n        class: options.class\n    });\n\n    // $FlowFixMe\n    awaitFrameLoad(frame);\n\n    el.appendChild(frame);\n\n    // $FlowFixMe\n    let win = frame.contentWindow;\n\n    if (win) {\n        try {\n            // $FlowFixMe\n            noop(win.name);\n        } catch (err) {\n            el.removeChild(frame);\n\n            if (!attempts) {\n                throw new Error(`Frame is cross-domain: ${ err.stack }`);\n            }\n\n            return iframe(options, container, attempts - 1);\n        }\n    }\n\n    if (options.url || window.navigator.userAgent.match(/MSIE|Edge/i)) {\n        frame.setAttribute('src', options.url || 'about:blank');\n    }\n\n    // $FlowFixMe\n    return frame;\n}\n\nexport function addEventListener(obj : HTMLElement, event : string, handler : (event : Event) => void) : CancelableType {\n    obj.addEventListener(event, handler);\n    return {\n        cancel() {\n            obj.removeEventListener(event, handler);\n        }\n    };\n}\n\nexport function bindEvents(element : HTMLElement, eventNames : Array<string>, handler : (event : Event) => void) : CancelableType {\n\n    handler = once(handler);\n\n    for (let eventName of eventNames) {\n        element.addEventListener(eventName, handler);\n    }\n\n    return {\n        cancel: once(() => {\n            for (let eventName of eventNames) {\n                element.removeEventListener(eventName, handler);\n            }\n        })\n    };\n}\n\nconst VENDOR_PREFIXES = [ 'webkit', 'moz', 'ms', 'o' ];\n\nexport function setVendorCSS(element : HTMLElement, name : string, value : string) {\n\n    // $FlowFixMe\n    element.style[name] = value;\n\n    let capitalizedName = capitalizeFirstLetter(name);\n\n    for (let prefix of VENDOR_PREFIXES) {\n        // $FlowFixMe\n        element.style[`${ prefix }${ capitalizedName }`] = value;\n    }\n}\n\nfunction isValidAnimation(element : HTMLElement, name : string) : boolean {\n\n    let CSSRule = window.CSSRule;\n\n    const KEYFRAMES_RULE = CSSRule.KEYFRAMES_RULE || CSSRule.WEBKIT_KEYFRAMES_RULE || CSSRule.MOZ_KEYFRAMES_RULE ||\n        CSSRule.O_KEYFRAMES_RULE || CSSRule.MS_KEYFRAMES_RULE;\n\n    let stylesheets = element.ownerDocument.styleSheets;\n\n    try {\n        for (let i = 0; i < stylesheets.length; i++) {\n\n            // $FlowFixMe\n            let cssRules = stylesheets[i].cssRules;\n\n            if (!cssRules) {\n                continue;\n            }\n\n            for (let j = 0; j < cssRules.length; j++) {\n\n                let cssRule = cssRules[j];\n\n                if (!cssRule) {\n                    continue;\n                }\n\n                if (cssRule.type === KEYFRAMES_RULE && cssRule.name === name) {\n                    return true;\n                }\n            }\n        }\n    } catch (err) {\n\n        return false;\n    }\n\n\n    return false;\n}\n\n\nconst ANIMATION_START_EVENTS = [ 'animationstart', 'webkitAnimationStart', 'oAnimationStart', 'MSAnimationStart' ];\nconst ANIMATION_END_EVENTS   = [ 'animationend', 'webkitAnimationEnd', 'oAnimationEnd', 'MSAnimationEnd' ];\n\nexport function animate(element : ElementRefType, name : string, clean : (Function) => void, timeout : number = 1000) : ZalgoPromise<void> {\n    return new ZalgoPromise((resolve, reject) => {\n\n        let el = getElement(element);\n\n        if (!el || !isValidAnimation(el, name)) {\n            return resolve();\n        }\n\n        let hasStarted = false;\n\n        let startTimeout;\n        let endTimeout;\n        let startEvent;\n        let endEvent;\n\n        function cleanUp() {\n            setVendorCSS(el, 'animationName', '');\n            clearTimeout(startTimeout);\n            clearTimeout(endTimeout);\n            startEvent.cancel();\n            endEvent.cancel();\n        }\n\n        startEvent = bindEvents(el, ANIMATION_START_EVENTS, event => {\n\n            // $FlowFixMe\n            if (event.target !== el || event.animationName !== name) {\n                return;\n            }\n\n            clearTimeout(startTimeout);\n\n            event.stopPropagation();\n\n            startEvent.cancel();\n            hasStarted = true;\n\n            endTimeout = setTimeout(() => {\n                cleanUp();\n                resolve();\n            }, timeout);\n        });\n\n        endEvent = bindEvents(el, ANIMATION_END_EVENTS, event => {\n\n            // $FlowFixMe\n            if (event.target !== el || event.animationName !== name) {\n                return;\n            }\n\n            cleanUp();\n\n            // $FlowFixMe\n            if (typeof event.animationName === 'string' && event.animationName !== name) {\n                return reject(`Expected animation name to be ${ name }, found ${ event.animationName }`);\n            }\n\n            return resolve();\n        });\n\n        setVendorCSS(el, 'animationName', name);\n\n        startTimeout = setTimeout(() => {\n            if (!hasStarted) {\n                cleanUp();\n                return resolve();\n            }\n        }, 200);\n\n        if (clean) {\n            clean(cleanUp);\n        }\n    });\n}\n\nconst STYLE = {\n\n    DISPLAY: {\n        NONE:  'none',\n        BLOCK: 'block'\n    },\n\n    VISIBILITY: {\n        VISIBLE: 'visible',\n        HIDDEN:  'hidden'\n    },\n\n    IMPORTANT: 'important'\n};\n\nexport function makeElementVisible(element : HTMLElement) {\n    element.style.setProperty('visibility', '');\n}\n\nexport function makeElementInvisible(element : HTMLElement) {\n    element.style.setProperty('visibility', STYLE.VISIBILITY.HIDDEN, STYLE.IMPORTANT);\n}\n\n\nexport function showElement(element : HTMLElement) {\n    element.style.setProperty('display', '');\n}\n\nexport function hideElement(element : HTMLElement) {\n    element.style.setProperty('display', STYLE.DISPLAY.NONE, STYLE.IMPORTANT);\n}\n\nexport function destroyElement(element : HTMLElement) {\n    if (element && element.parentNode) {\n        element.parentNode.removeChild(element);\n    }\n}\n\nexport function showAndAnimate(element : HTMLElement, name : string, clean : (Function) => void) : ZalgoPromise<void> {\n    let animation = animate(element, name, clean);\n    showElement(element);\n    return animation;\n}\n\nexport function animateAndHide(element : HTMLElement, name : string, clean : (Function) => void) : ZalgoPromise<void> {\n    return animate(element, name, clean).then(() => {\n        hideElement(element);\n    });\n}\n\nexport function addClass(element : HTMLElement, name : string) {\n    element.classList.add(name);\n}\n\nexport function removeClass(element : HTMLElement, name : string) {\n    element.classList.remove(name);\n}\n\nexport function isElementClosed(el : HTMLElement) : boolean {\n    if (!el || !el.parentNode) {\n        return true;\n    }\n    return false;\n}\n\nexport function watchElementForClose(element : HTMLElement, handler : () => mixed) : CancelableType {\n    handler = once(handler);\n\n    let interval;\n\n    if (isElementClosed(element)) {\n        handler();\n    } else {\n        interval = safeInterval(() => {\n            if (isElementClosed(element)) {\n                interval.cancel();\n                handler();\n            }\n        }, 50);\n    }\n\n    return {\n        cancel() {\n            if (interval) {\n                interval.cancel();\n            }\n        }\n    };\n}\n\nexport function fixScripts(el : HTMLElement, doc : Document = window.document) {\n    for (let script of querySelectorAll('script', el)) {\n        let parentNode = script.parentNode;\n\n        if (!parentNode) {\n            continue;\n        }\n\n        let newScript = doc.createElement('script');\n        newScript.text = script.textContent;\n        parentNode.replaceChild(newScript, script);\n    }\n}\n\ntype OnResizeOptions = {|\n    width? : boolean,\n    height? : boolean,\n    interval? : number,\n    win? : SameDomainWindowType\n|};\n\nexport function onResize(el : HTMLElement, handler : ({ width : number, height : number }) => void, { width = true, height = true, interval = 100, win = window } : OnResizeOptions = {}) : {} {\n    let currentWidth = el.offsetWidth;\n    let currentHeight = el.offsetHeight;\n\n    handler({ width: currentWidth, height: currentHeight });\n\n    let check = () => {\n        let newWidth = el.offsetWidth;\n        let newHeight = el.offsetHeight;\n\n        if ((width && newWidth !== currentWidth) || (height && newHeight !== currentHeight)) {\n            handler({ width: newWidth, height: newHeight });\n        }\n\n        currentWidth = newWidth;\n        currentHeight = newHeight;\n    };\n\n    let observer;\n    let timeout;\n\n    if (typeof win.ResizeObserver !== 'undefined') {\n        observer = new win.ResizeObserver(check);\n        observer.observe(el);\n\n    } else if (typeof win.MutationObserver !== 'undefined') {\n        observer = new win.MutationObserver(check);\n        observer.observe(el, {\n            attributes:    true,\n            childList:     true,\n            subtree:       true,\n            characterData: false\n        });\n        win.addEventListener('resize', check);\n    } else {\n        let loop = () => {\n            check();\n            timeout = setTimeout(loop, interval);\n        };\n        loop();\n    }\n\n    return {\n        cancel: () => {\n            observer.disconnect();\n            window.removeEventListener('resize', check);\n            clearTimeout(timeout);\n        }\n    };\n}\n","/* @flow */\n\nimport { noop } from './util';\nimport { getStorage } from './storage';\n\nfunction getBelterExperimentStorage() : Object {\n    return getStorage({ name: 'belter_experiment' });\n}\n\nfunction isEventUnique(name : string) : boolean {\n    return getBelterExperimentStorage().getSessionState(state => {\n        state.loggedBeacons = state.loggedBeacons || [];\n\n        if (state.loggedBeacons.indexOf(name) === -1) {\n            state.loggedBeacons.push(name);\n            return true;\n        }\n\n        return false;\n    });\n}\n\nexport type Experiment = {\n    isEnabled : () => boolean,\n    isDisabled : () => boolean,\n    getTreatment : () => string,\n    log : (string, payload? : { [string] : ?string }) => Experiment,\n    logStart : (payload? : { [string] : ?string }) => Experiment,\n    logComplete : (payload? : { [string] : ?string }) => Experiment\n};\n\nfunction getThrottlePercentile(name : string) : number {\n    return getBelterExperimentStorage().getState(state => {\n        state.throttlePercentiles = state.throttlePercentiles || {};\n        state.throttlePercentiles[name] = state.throttlePercentiles[name] || Math.floor(Math.random() * 100);\n        return state.throttlePercentiles[name];\n    });\n}\n\nconst THROTTLE_GROUP = {\n    TEST:     'test',\n    CONTROL:  'control',\n    THROTTLE: 'throttle'\n};\n\ntype ExperimentOptions = {\n    name : string,\n    sample? : number,\n    logTreatment? : ({ name : string, treatment : string }) => void,\n    logCheckpoint? : ({ name : string, treatment : string, checkpoint : string, payload? : { [string] : ?string } }) => void\n};\n\nexport function experiment({ name, sample = 50, logTreatment = noop, logCheckpoint = noop } : ExperimentOptions) : Experiment {\n\n    let throttle = getThrottlePercentile(name);\n\n    let group;\n\n    if (throttle < sample) {\n        group = THROTTLE_GROUP.TEST;\n    } else if ((sample >= 50) || ((sample <= throttle) && (throttle < (sample * 2)))) {\n        group = THROTTLE_GROUP.CONTROL;\n    } else {\n        group = THROTTLE_GROUP.THROTTLE;\n    }\n\n    let treatment = `${ name }_${ group }`;\n\n    let started = false;\n    let forced = false;\n\n    try {\n        if (window.localStorage && window.localStorage.getItem(name)) {\n            forced = true;\n        }\n    } catch (err) {\n        // pass\n    }\n\n    return {\n\n        isEnabled() : boolean {\n            return (group === THROTTLE_GROUP.TEST) || forced;\n        },\n\n        isDisabled() : boolean {\n            return (group !== THROTTLE_GROUP.TEST) && !forced;\n        },\n\n        getTreatment() : string {\n            return treatment;\n        },\n\n        log(checkpoint : string, payload? : { [string] : ?string } = {}) : Experiment {\n            if (!started) {\n                return this;\n            }\n\n            if (isEventUnique(`${ name }_${ treatment }`)) {\n                logTreatment({ name, treatment });\n            }\n\n            if (isEventUnique(`${ name }_${ treatment }_${ checkpoint }`)) {\n                logCheckpoint({ name, treatment, checkpoint, payload });\n            }\n\n            return this;\n        },\n\n        logStart(payload? : { [string] : ?string } = {}) : Experiment {\n            started = true;\n            return this.log(`start`, payload);\n        },\n\n        logComplete(payload? : { [string] : ?string } = {}) : Experiment {\n            return this.log(`complete`, payload);\n        }\n    };\n}\n","/* @flow */\n\nimport { getGlobal } from './util';\n\nexport function getGlobalNameSpace<T : Object>({ name, version = 'latest' } : { name : string, version? : string }) : { get : (string, defValue? : T) => T } {\n\n    let global = getGlobal();\n    let globalKey = `__${ name }__${ version }_global__`;\n\n    let namespace = global[globalKey] = global[globalKey] || {};\n\n    return {\n        get: (key : string, defValue? : T) : T => {\n            // $FlowFixMe\n            defValue = defValue || {};\n            let item = namespace[key] = namespace[key] || defValue;\n            return item;\n        }\n    };\n}\n","/* @flow */\n\nimport { ZalgoPromise } from 'zalgo-promise/src';\nimport { type SameDomainWindowType } from 'cross-domain-utils/src';\n\ntype RequestOptionsType = {\n    url : string,\n    method? : string,\n    headers? : { [key : string] : string },\n    json? : Object,\n    data? : { [key : string] : string },\n    body? : string,\n    win? : SameDomainWindowType,\n    timeout? : number\n};\n\ntype ResponseType = {\n    status : number,\n    headers : { [string] : string },\n    body : Object\n};\n\nconst HEADERS = {\n    CONTENT_TYPE: 'content-type',\n    ACCEPT:       'accept'\n};\n\nlet headerBuilders = [];\n\nfunction parseHeaders(rawHeaders : string = '') : { [string] : string } {\n    let result = {};\n    for (let line of rawHeaders.trim().split('\\n')) {\n        let [ key, ...values ] = line.split(':');\n        result[key.toLowerCase()] = values.join(':').trim();\n    }\n    return result;\n}\n\nexport function request({ url, method = 'get', headers = {}, json, data, body, win = window, timeout = 0 } : RequestOptionsType) : ZalgoPromise<ResponseType> {\n    return new ZalgoPromise((resolve, reject) => {\n\n        if ((json && data) || (json && body) || (data && json)) {\n            throw new Error(`Only options.json or options.data or options.body should be passed`);\n        }\n\n        let normalizedHeaders = {};\n\n        for (let key of Object.keys(headers)) {\n            normalizedHeaders[key.toLowerCase()] = headers[key];\n        }\n\n        if (json) {\n            normalizedHeaders[HEADERS.CONTENT_TYPE] = normalizedHeaders[HEADERS.CONTENT_TYPE] || 'application/json';\n        } else if (data || body) {\n            normalizedHeaders[HEADERS.CONTENT_TYPE] = normalizedHeaders[HEADERS.CONTENT_TYPE] || 'application/x-www-form-urlencoded; charset=utf-8';\n        }\n\n        normalizedHeaders[HEADERS.ACCEPT] = normalizedHeaders[HEADERS.ACCEPT] || 'application/json';\n\n        for (let headerBuilder of headerBuilders) {\n            let builtHeaders = headerBuilder();\n\n            for (let key of Object.keys(builtHeaders)) {\n                normalizedHeaders[key.toLowerCase()] = builtHeaders[key];\n            }\n        }\n\n        let xhr = new win.XMLHttpRequest();\n\n        xhr.addEventListener('load', function xhrLoad() : void {\n\n            let responseHeaders = parseHeaders(this.getAllResponseHeaders());\n\n            if (!this.status) {\n                return reject(new Error(`Request to ${ method.toLowerCase() } ${ url } failed: no response status code.`));\n            }\n            \n            let contentType = responseHeaders['content-type'];\n            let isJSON = contentType && (contentType.indexOf('application/json') === 0 || contentType.indexOf('text/json') === 0);\n            let responseBody = this.responseText;\n\n            try {\n                responseBody = JSON.parse(responseBody);\n            } catch (err) {\n                if (isJSON) {\n                    return reject(new Error(`Invalid json: ${ this.responseText }.`));\n                }\n            }\n\n            let res = {\n                status:  this.status,\n                headers: responseHeaders,\n                body:    responseBody\n            };\n\n            return resolve(res);\n\n        }, false);\n\n        xhr.addEventListener('error', (evt) => {\n            reject(new Error(`Request to ${ method.toLowerCase() } ${ url } failed: ${ evt.toString() }.`));\n        }, false);\n\n        xhr.open(method, url, true);\n\n        for (let key in normalizedHeaders) {\n            if (normalizedHeaders.hasOwnProperty(key)) {\n                xhr.setRequestHeader(key, normalizedHeaders[key]);\n            }\n        }\n\n        if (json) {\n            body = JSON.stringify(json);\n        } else if (data) {\n            body = Object.keys(data).map(key => {\n                return `${ encodeURIComponent(key) }=${ data ? encodeURIComponent(data[key]) : '' }`;\n            }).join('&');\n        }\n\n        xhr.timeout = timeout;\n        xhr.ontimeout = function xhrTimeout() {\n            reject(new Error(`Request to ${ method.toLowerCase() } ${ url } has timed out`));\n        };\n\n        xhr.send(body);\n    });\n}\n\nexport function addHeaderBuilder(method : () => { [string] : string }) {\n    headerBuilders.push(method);\n}\n","/* @flow */\n\nimport { memoize, promisify } from './util';\n\nexport function memoized(target : Object, name : string, descriptor : Object) {\n    descriptor.value = memoize(descriptor.value, { name, thisNamespace: true });\n}\n\nexport function promise(target : Object, name : string, descriptor : Object) {\n    descriptor.value = promisify(descriptor.value, { name });\n}\n","/* @flow */\n\nexport function isPerc(str : string) : boolean {\n    return typeof str === 'string' && (/^[0-9]+%$/).test(str);\n}\n\nexport function isPx(str : string) : boolean {\n    return typeof str === 'string' && (/^[0-9]+px$/).test(str);\n}\n\nexport function toNum(val : string | number) : number {\n\n    if (typeof val === 'number') {\n        return val;\n    }\n\n    let match = val.match(/^([0-9]+)(px|%)$/);\n\n    if (!match) {\n        throw new Error(`Could not match css value from ${ val }`);\n    }\n\n    return parseInt(match[1], 10);\n}\n\nexport function toPx(val : number | string) : string {\n    return `${ toNum(val) }px`;\n}\n\nexport function toCSS(val : number | string) : string {\n\n    if (typeof val === 'number') {\n        return toPx(val);\n    }\n\n    return isPerc(val) ? val : toPx(val);\n}\n\nexport function percOf(num : number, perc : string) : number {\n    return parseInt(num * toNum(perc)  / 100, 10);\n}\n\nexport function normalizeDimension(dim : string | number, max : number) : number {\n    if (typeof dim === 'number') {\n        return dim;\n    } else if (isPerc(dim)) {\n        return percOf(max, dim);\n    } else if (isPx(dim)) {\n        return toNum(dim);\n    } else {\n        throw new Error(`Can not normalize dimension: ${ dim }`);\n    }\n}\n","/* @flow */\n\nimport { ZalgoPromise } from 'zalgo-promise/src';\n\nimport { noop, tryCatch, removeFromArray } from './util';\n\ntype Handler = <T, A : $ReadOnlyArray<mixed>>(name : string, fn? : (...args : A) => T) => (...args : A) => T; // eslint-disable-line no-undef\ntype Wrapper<T> = ({ expect : Handler, avoid : Handler, expectError : Handler, error : Handler }) => (ZalgoPromise<T> | void);\n\nexport function wrapPromise<T>(method : Wrapper<T>, { timeout = 5000 } : { timeout? : number } = {}) : ZalgoPromise<void> {\n    let expected : Array<string> = [];\n    let promises : Array<ZalgoPromise<*>> = [];\n\n    let timeoutPromise = ZalgoPromise.delay(timeout);\n\n    let expect : Handler = (name, fn = noop) => {\n        expected.push(name);\n        \n        // $FlowFixMe\n        return function expectWrapper(...args) : * {\n            removeFromArray(expected, name);\n\n            // $FlowFixMe\n            let { result, error } = tryCatch(() => fn.call(this, ...args));\n\n            if (error) {\n                promises.push(ZalgoPromise.asyncReject(error));\n                throw error;\n            }\n\n            promises.push(ZalgoPromise.resolve(result));\n            return result;\n        };\n    };\n\n    let avoid : Handler = (name : string, fn = noop) => {\n\n        // $FlowFixMe\n        return function avoidWrapper(...args) : * {\n            promises.push(ZalgoPromise.asyncReject(new Error(`Expected ${ name } to not be called`)));\n            // $FlowFixMe\n            return fn.call(this, ...args);\n        };\n    };\n\n    let expectError : Handler = (name, fn = noop) => {\n        expected.push(name);\n\n        // $FlowFixMe\n        return function expectErrorWrapper(...args) : * {\n            removeFromArray(expected, name);\n\n            // $FlowFixMe\n            let { result, error } = tryCatch(() => fn.call(this, ...args));\n\n            if (error) {\n                throw error;\n            }\n\n            promises.push(ZalgoPromise.resolve(result).then(() => {\n                throw new Error(`Expected ${ name } to throw an error`);\n            }, noop));\n            return result;\n        };\n    };\n\n    promises.push(ZalgoPromise.try(() => method({ expect, avoid, expectError, error: avoid })));\n\n    let drain = () => {\n        return ZalgoPromise.try(() => {\n            if (promises.length) {\n                return promises.pop();\n            }\n        }).then(() => {\n            if (promises.length) {\n                return drain();\n            }\n        });\n    };\n\n    return drain().then(() => {\n        if (expected.length) {\n            return timeoutPromise.then(drain);\n        }\n    }).then(() => {\n        if (expected.length) {\n            throw new Error(`Expected ${ expected[0] } to be called`);\n        }\n    });\n}\n","/* @flow */\n\nexport function isRegex(item : mixed) : boolean {\n    return Object.prototype.toString.call(item) === '[object RegExp]';\n}\n\n// eslint-disable-next-line no-unused-vars\nexport function noop(...args : Array<mixed>) {\n    // pass\n}\n","/* @flow */\n/* eslint max-lines: 0 */\n\nimport { isRegex, noop } from './util';\nimport type { CrossDomainWindowType, SameDomainWindowType, DomainMatcher } from './types';\nimport { PROTOCOL, WILDCARD } from './constants';\n\nlet IE_WIN_ACCESS_ERROR = 'Call was rejected by callee.\\r\\n';\n\nexport function isFileProtocol(win : SameDomainWindowType = window) : boolean {\n    return win.location.protocol === PROTOCOL.FILE;\n}\n\nexport function isAboutProtocol(win : SameDomainWindowType = window) : boolean {\n    return win.location.protocol === PROTOCOL.ABOUT;\n}\n\nexport function getParent(win : ?CrossDomainWindowType) : ?CrossDomainWindowType {\n\n    if (!win) {\n        return;\n    }\n\n    try {\n        if (win.parent && win.parent !== win) {\n            return win.parent;\n        }\n    } catch (err) {\n        // pass\n    }\n}\n\nexport function getOpener(win : ?CrossDomainWindowType) : ?CrossDomainWindowType {\n\n    if (!win) {\n        return;\n    }\n\n    // Make sure we're not actually an iframe which has had window.open() called on us\n    if (getParent(win)) {\n        return;\n    }\n\n    try {\n        return win.opener;\n    } catch (err) {\n        // pass\n    }\n}\n\nexport function canReadFromWindow(win : CrossDomainWindowType | SameDomainWindowType) : boolean {\n    try {\n        // $FlowFixMe\n        noop(win && win.location && win.location.href);\n        return true;\n    } catch (err) {\n        // pass\n    }\n\n    return false;\n}\n\nexport function getActualDomain(win : ?SameDomainWindowType) : string {\n\n    win = win || window;\n\n    let location = win.location;\n\n    if (!location) {\n        throw new Error(`Can not read window location`);\n    }\n\n    let protocol = location.protocol;\n\n    if (!protocol) {\n        throw new Error(`Can not read window protocol`);\n    }\n\n    if (protocol === PROTOCOL.FILE) {\n        return `${ PROTOCOL.FILE }//`;\n    }\n\n    if (protocol === PROTOCOL.ABOUT) {\n\n        let parent = getParent(win);\n        if (parent && canReadFromWindow(parent)) {\n            // $FlowFixMe\n            return getActualDomain(parent);\n        }\n\n        return `${ PROTOCOL.ABOUT }//`;\n    }\n\n    let host = location.host;\n\n    if (!host) {\n        throw new Error(`Can not read window host`);\n    }\n\n    return `${ protocol }//${ host }`;\n}\n\nexport function getDomain(win : ?SameDomainWindowType) : string {\n\n    win = win || window;\n\n    let domain = getActualDomain(win);\n\n    if (domain && win.mockDomain && win.mockDomain.indexOf(PROTOCOL.MOCK) === 0) {\n        return win.mockDomain;\n    }\n\n    return domain;\n}\n\nexport function isBlankDomain(win : CrossDomainWindowType) : boolean {\n    try {\n        // $FlowFixMe\n        if (!win.location.href) {\n            return true;\n        }\n\n        if (win.location.href === 'about:blank') {\n            return true;\n        }\n    } catch (err) {\n        // pass\n    }\n\n    return false;\n}\n\nexport function isActuallySameDomain(win : CrossDomainWindowType) : boolean {\n\n    try {\n        if (win === window) {\n            return true;\n        }\n\n    } catch (err) {\n        // pass\n    }\n\n    try {\n        let desc = Object.getOwnPropertyDescriptor(win, 'location');\n\n        if (desc && desc.enumerable === false) {\n            return false;\n        }\n\n    } catch (err) {\n        // pass\n    }\n\n    try {\n        // $FlowFixMe\n        if (isAboutProtocol(win) && canReadFromWindow(win)) {\n            return true;\n        }\n    } catch (err) {\n        // pass\n    }\n\n    try {\n        // $FlowFixMe\n        if (getActualDomain(win) === getActualDomain(window)) {\n            return true;\n        }\n\n    } catch (err) {\n        // pass\n    }\n\n    return false;\n}\n\nexport function isSameDomain(win : CrossDomainWindowType | SameDomainWindowType) : boolean {\n\n    if (!isActuallySameDomain(win)) {\n        return false;\n    }\n\n    try {\n\n        if (win === window) {\n            return true;\n        }\n\n        // $FlowFixMe\n        if (isAboutProtocol(win) && canReadFromWindow(win)) {\n            return true;\n        }\n\n        // $FlowFixMe\n        if (getDomain(window) === getDomain(win)) {\n            return true;\n        }\n\n    } catch (err) {\n        // pass\n    }\n\n    return false;\n}\n\n\nexport function assertSameDomain(win : CrossDomainWindowType | SameDomainWindowType) : SameDomainWindowType {\n    if (!isSameDomain(win)) {\n        throw new Error(`Expected window to be same domain`);\n    }\n\n    // $FlowFixMe\n    return win;\n}\n\nexport function getParents(win : CrossDomainWindowType) : Array<CrossDomainWindowType> {\n\n    let result = [];\n\n    try {\n\n        while (win.parent !== win) {\n            result.push(win.parent);\n            win = win.parent;\n        }\n\n    } catch (err) {\n        // pass\n    }\n\n    return result;\n}\n\nexport function isAncestorParent(parent : CrossDomainWindowType, child : CrossDomainWindowType) : boolean {\n\n    if (!parent || !child) {\n        return false;\n    }\n\n    let childParent = getParent(child);\n\n    if (childParent) {\n        return childParent === parent;\n    }\n\n    if (getParents(child).indexOf(parent) !== -1) {\n        return true;\n    }\n\n    return false;\n}\n\nexport function getFrames(win : CrossDomainWindowType) : Array<CrossDomainWindowType> {\n\n    let result = [];\n\n    let frames;\n\n    try {\n        frames = win.frames;\n    } catch (err) {\n        frames = win;\n    }\n\n    let len;\n\n    try {\n        len = frames.length;\n    } catch (err) {\n        // pass\n    }\n\n    if (len === 0) {\n        return result;\n    }\n\n    if (len) {\n        for (let i = 0; i < len; i++) {\n\n            let frame;\n\n            try {\n                frame = frames[i];\n            } catch (err) {\n                continue;\n            }\n\n            result.push(frame);\n        }\n\n        return result;\n    }\n\n    for (let i = 0; i < 100; i++) {\n        let frame;\n\n        try {\n            frame = frames[i];\n        } catch (err) {\n            return result;\n        }\n\n        if (!frame) {\n            return result;\n        }\n\n        result.push(frame);\n    }\n\n    return result;\n}\n\n\nexport function getAllChildFrames(win : CrossDomainWindowType) : Array<CrossDomainWindowType> {\n\n    let result = [];\n\n    for (let frame of getFrames(win)) {\n        result.push(frame);\n\n        for (let childFrame of getAllChildFrames(frame)) {\n            result.push(childFrame);\n        }\n    }\n\n    return result;\n}\n\nexport function getTop(win : CrossDomainWindowType) : ?CrossDomainWindowType {\n\n    if (!win) {\n        return;\n    }\n\n    try {\n        if (win.top) {\n            return win.top;\n        }\n    } catch (err) {\n        // pass\n    }\n\n    if (getParent(win) === win) {\n        return win;\n    }\n\n    try {\n        if (isAncestorParent(window, win) && window.top) {\n            return window.top;\n        }\n    } catch (err) {\n        // pass\n    }\n\n    try {\n        if (isAncestorParent(win, window) && window.top) {\n            return window.top;\n        }\n    } catch (err) {\n        // pass\n    }\n\n    for (let frame of getAllChildFrames(win)) {\n        try {\n            if (frame.top) {\n                return frame.top;\n            }\n        } catch (err) {\n            // pass\n        }\n\n        if (getParent(frame) === frame) {\n            return frame;\n        }\n    }\n}\n\nexport function getNextOpener(win? : CrossDomainWindowType = window) : ?CrossDomainWindowType {\n    return getOpener(getTop(win) || win);\n}\n\nexport function getUltimateTop(win? : CrossDomainWindowType = window) : CrossDomainWindowType {\n    let opener = getNextOpener(win);\n\n    if (opener) {\n        return getUltimateTop(opener);\n    }\n\n    return top;\n}\n\nexport function getAllFramesInWindow(win : CrossDomainWindowType) : Array<CrossDomainWindowType> {\n    let top = getTop(win);\n\n    if (!top) {\n        throw new Error(`Can not determine top window`);\n    }\n\n    return [ ...getAllChildFrames(top), top ];\n}\n\nexport function getAllWindows(win? : CrossDomainWindowType = window) : $ReadOnlyArray<CrossDomainWindowType> {\n    let frames = getAllFramesInWindow(win);\n    let opener = getNextOpener(win);\n\n    if (opener) {\n        return [ ...getAllWindows(opener), ...frames ];\n    } else {\n        return frames;\n    }\n}\n\nexport function isTop(win : CrossDomainWindowType) : boolean {\n    return win === getTop(win);\n}\n\nexport function isFrameWindowClosed(frame : HTMLIFrameElement) : boolean {\n\n    if (!frame.contentWindow) {\n        return true;\n    }\n\n    if (!frame.parentNode) {\n        return true;\n    }\n\n    let doc = frame.ownerDocument;\n\n    if (doc && doc.documentElement && !doc.documentElement.contains(frame)) {\n        return true;\n    }\n\n    return false;\n}\n\nfunction safeIndexOf<T>(collection : Array<T>, item : T) : number {\n    for (let i = 0; i < collection.length; i++) {\n\n        try {\n            if (collection[i] === item) {\n                return i;\n            }\n        } catch (err) {\n            // pass\n        }\n    }\n\n    return -1;\n}\n\nlet iframeWindows = [];\nlet iframeFrames = [];\n\nexport function isWindowClosed(win : CrossDomainWindowType, allowMock : boolean = true) : boolean {\n\n    try {\n        if (win === window) {\n            return false;\n        }\n    } catch (err) {\n        return true;\n    }\n\n    try {\n        if (!win) {\n            return true;\n        }\n\n    } catch (err) {\n        return true;\n    }\n\n    try {\n        if (win.closed) {\n            return true;\n        }\n\n    } catch (err) {\n\n        // I love you so much IE\n\n        if (err && err.message === IE_WIN_ACCESS_ERROR) {\n            return false;\n        }\n\n        return true;\n    }\n\n\n    if (allowMock && isSameDomain(win)) {\n        try {\n            // $FlowFixMe\n            if (win.mockclosed) {\n                return true;\n            }\n        } catch (err) {\n            // pass\n        }\n    }\n\n    // Mobile safari\n\n    try {\n        if (!win.parent || !win.top) {\n            return true;\n        }\n    } catch (err) {\n        // pass\n    }\n\n    // Yes, this actually happens in IE. win === win errors out when the window\n    // is from an iframe, and the iframe was removed from the page.\n\n    try {\n        noop(win === win); // eslint-disable-line no-self-compare\n    } catch (err) {\n        return true;\n    }\n\n    // IE orphaned frame\n\n    let iframeIndex = safeIndexOf(iframeWindows, win);\n\n    if (iframeIndex !== -1) {\n        let frame = iframeFrames[iframeIndex];\n\n        if (frame && isFrameWindowClosed(frame)) {\n            return true;\n        }\n    }\n\n    return false;\n}\n\nfunction cleanIframes() {\n    for (let i = 0; i < iframeWindows.length; i++) {\n        let closed = false;\n\n        try {\n            closed = iframeWindows[i].closed;\n        } catch (err) {\n            // pass\n        }\n\n        if (closed) {\n            iframeFrames.splice(i, 1);\n            iframeWindows.splice(i, 1);\n        }\n    }\n}\n\nexport function linkFrameWindow(frame : HTMLIFrameElement) {\n\n    cleanIframes();\n\n    if (frame && frame.contentWindow) {\n        try {\n            iframeWindows.push(frame.contentWindow);\n            iframeFrames.push(frame);\n        } catch (err) {\n            // pass\n        }\n    }\n}\n\nexport function getUserAgent(win : ?SameDomainWindowType) : string {\n    win = win || window;\n    return win.navigator.mockUserAgent || win.navigator.userAgent;\n}\n\n\nexport function getFrameByName(win : CrossDomainWindowType, name : string) : ?CrossDomainWindowType {\n\n    let winFrames = getFrames(win);\n\n    for (let childFrame of winFrames) {\n        try {\n            // $FlowFixMe\n            if (isSameDomain(childFrame) && childFrame.name === name && winFrames.indexOf(childFrame) !== -1) {\n                return childFrame;\n            }\n        } catch (err) {\n            // pass\n        }\n    }\n\n    try {\n        // $FlowFixMe\n        if (winFrames.indexOf(win.frames[name]) !== -1) {\n            // $FlowFixMe\n            return win.frames[name];\n        }\n    } catch (err) {\n        // pass\n    }\n\n    try {\n        if (winFrames.indexOf(win[name]) !== -1) {\n            return win[name];\n        }\n    } catch (err) {\n        // pass\n    }\n}\n\nexport function findChildFrameByName(win : CrossDomainWindowType, name : string) : ?CrossDomainWindowType {\n\n    let frame = getFrameByName(win, name);\n\n    if (frame) {\n        return frame;\n    }\n\n    for (let childFrame of getFrames(win)) {\n        let namedFrame = findChildFrameByName(childFrame, name);\n\n        if (namedFrame) {\n            return namedFrame;\n        }\n    }\n}\n\nexport function findFrameByName(win : CrossDomainWindowType, name : string) : ?CrossDomainWindowType {\n\n    let frame;\n\n    frame = getFrameByName(win, name);\n\n    if (frame) {\n        return frame;\n    }\n\n    let top = getTop(win) || win;\n\n    return findChildFrameByName(top, name);\n}\n\nexport function isParent(win : CrossDomainWindowType, frame : CrossDomainWindowType) : boolean {\n\n    let frameParent = getParent(frame);\n\n    if (frameParent) {\n        return frameParent === win;\n    }\n\n    for (let childFrame of getFrames(win)) {\n        if (childFrame === frame) {\n            return true;\n        }\n    }\n\n    return false;\n}\n\nexport function isOpener(parent : CrossDomainWindowType, child : CrossDomainWindowType) : boolean {\n\n    return parent === getOpener(child);\n}\n\nexport function getAncestor(win : ?CrossDomainWindowType) : ?CrossDomainWindowType {\n    win = win || window;\n\n    let opener = getOpener(win);\n\n    if (opener) {\n        return opener;\n    }\n\n    let parent = getParent(win);\n\n    if (parent) {\n        return parent;\n    }\n}\n\nexport function getAncestors(win : CrossDomainWindowType) : Array<CrossDomainWindowType> {\n\n    let results = [];\n\n    let ancestor = win;\n\n    while (ancestor) {\n        ancestor = getAncestor(ancestor);\n        if (ancestor) {\n            results.push(ancestor);\n        }\n    }\n\n    return results;\n}\n\n\nexport function isAncestor(parent : CrossDomainWindowType, child : CrossDomainWindowType) : boolean {\n\n    let actualParent = getAncestor(child);\n\n    if (actualParent) {\n        if (actualParent === parent) {\n            return true;\n        }\n\n        return false;\n    }\n\n    if (child === parent) {\n        return false;\n    }\n\n    if (getTop(child) === child) {\n        return false;\n    }\n\n    for (let frame of getFrames(parent)) {\n        if (frame === child) {\n            return true;\n        }\n    }\n\n    return false;\n}\n\nexport function isPopup() : boolean {\n    return Boolean(getOpener(window));\n}\n\nexport function isIframe() : boolean {\n    return Boolean(getParent(window));\n}\n\nexport function isFullpage() : boolean {\n    return Boolean(!isIframe() && !isPopup());\n}\n\nfunction anyMatch(collection1, collection2) : boolean {\n\n    for (let item1 of collection1) {\n        for (let item2 of collection2) {\n            if (item1 === item2) {\n                return true;\n            }\n        }\n    }\n\n    return false;\n}\n\nexport function getDistanceFromTop(win : CrossDomainWindowType = window) : number {\n    let distance = 0;\n    let parent = win;\n\n    while (parent) {\n        parent = getParent(parent);\n        if (parent) {\n            distance += 1;\n        }\n    }\n\n    return distance;\n}\n\nexport function getNthParent(win : CrossDomainWindowType, n : number = 1) : ?CrossDomainWindowType {\n    let parent = win;\n\n    for (let i = 0; i < n; i++) {\n        if (!parent) {\n            return;\n        }\n\n        parent = getParent(parent);\n    }\n\n    return parent;\n}\n\nexport function getNthParentFromTop(win : CrossDomainWindowType, n : number = 1) : ?CrossDomainWindowType {\n    return getNthParent(win, getDistanceFromTop(win) - n);\n}\n\nexport function isSameTopWindow(win1 : CrossDomainWindowType, win2 : CrossDomainWindowType) : boolean {\n\n    let top1 = getTop(win1) || win1;\n    let top2 = getTop(win2) || win2;\n\n    try {\n        if (top1 && top2) {\n            if (top1 === top2) {\n                return true;\n            }\n\n            return false;\n        }\n    } catch (err) {\n        // pass\n    }\n\n    let allFrames1 = getAllFramesInWindow(win1);\n    let allFrames2 = getAllFramesInWindow(win2);\n\n    if (anyMatch(allFrames1, allFrames2)) {\n        return true;\n    }\n\n    let opener1 = getOpener(top1);\n    let opener2 = getOpener(top2);\n\n    if (opener1 && anyMatch(getAllFramesInWindow(opener1), allFrames2)) {\n        return false;\n    }\n\n    if (opener2 && anyMatch(getAllFramesInWindow(opener2), allFrames1)) {\n        return false;\n    }\n\n    return false;\n}\n\nexport function matchDomain(pattern : DomainMatcher, origin : DomainMatcher) : boolean {\n\n    if (typeof pattern === 'string') {\n\n        if (typeof origin === 'string') {\n            return pattern === WILDCARD || origin === pattern;\n        }\n\n        if (isRegex(origin)) {\n            return false;\n        }\n\n        if (Array.isArray(origin)) {\n            return false;\n        }\n    }\n\n    if (isRegex(pattern)) {\n\n        if (isRegex(origin)) {\n            return pattern.toString() === origin.toString();\n        }\n\n        if (Array.isArray(origin)) {\n            return false;\n        }\n\n        // $FlowFixMe\n        return Boolean(origin.match(pattern));\n    }\n\n    if (Array.isArray(pattern)) {\n\n        if (Array.isArray(origin)) {\n            return JSON.stringify(pattern) === JSON.stringify(origin);\n        }\n\n        if (isRegex(origin)) {\n            return false;\n        }\n\n        return pattern.some(subpattern => matchDomain(subpattern, origin));\n    }\n\n    return false;\n}\n\nexport function stringifyDomainPattern(pattern : DomainMatcher) : string {\n    if (Array.isArray(pattern)) {\n        return `(${ pattern.join(' | ') })`;\n    } else if (isRegex(pattern)) {\n        return `RegExp(${ pattern.toString() }`;\n    } else {\n        return pattern.toString();\n    }\n}\n\nexport function getDomainFromUrl(url : string) : string {\n\n    let domain;\n\n    if (url.match(/^(https?|mock|file):\\/\\//)) {\n        domain = url;\n    } else {\n        return getDomain();\n    }\n\n    domain = domain.split('/').slice(0, 3).join('/');\n\n    return domain;\n}\n\nexport function onCloseWindow(win : CrossDomainWindowType, callback : Function, delay : number = 1000, maxtime : number = Infinity) : { cancel : () => void } {\n\n    let timeout;\n\n    let check = () => {\n\n        if (isWindowClosed(win)) {\n\n            if (timeout) {\n                clearTimeout(timeout);\n            }\n\n            return callback();\n        }\n\n        if (maxtime <= 0) {\n            clearTimeout(timeout);\n        } else {\n            maxtime -= delay;\n            timeout = setTimeout(check, delay);\n        }\n    };\n\n    check();\n\n    return {\n        cancel() {\n            if (timeout) {\n                clearTimeout(timeout);\n            }\n        }\n    };\n}\n\n// eslint-disable-next-line complexity\nexport function isWindow(obj : Object) : boolean {\n\n    try {\n        if (obj === window) {\n            return true;\n        }\n    } catch (err) {\n        if (err && err.message === IE_WIN_ACCESS_ERROR) {\n            return true;\n        }\n    }\n\n    try {\n        if (Object.prototype.toString.call(obj) === '[object Window]') {\n            return true;\n        }\n    } catch (err) {\n        if (err && err.message === IE_WIN_ACCESS_ERROR) {\n            return true;\n        }\n    }\n\n    try {\n        if (window.Window && obj instanceof window.Window) {\n            return true;\n        }\n    } catch (err) {\n        if (err && err.message === IE_WIN_ACCESS_ERROR) {\n            return true;\n        }\n    }\n\n    try {\n        if (obj && obj.self === obj) {\n            return true;\n        }\n    } catch (err) {\n        if (err && err.message === IE_WIN_ACCESS_ERROR) {\n            return true;\n        }\n    }\n\n    try {\n        if (obj && obj.parent === obj) {\n            return true;\n        }\n    } catch (err) {\n        if (err && err.message === IE_WIN_ACCESS_ERROR) {\n            return true;\n        }\n    }\n\n    try {\n        if (obj && obj.top === obj) {\n            return true;\n        }\n    } catch (err) {\n        if (err && err.message === IE_WIN_ACCESS_ERROR) {\n            return true;\n        }\n    }\n\n    try {\n        noop(obj === obj);  // eslint-disable-line no-self-compare\n\n    } catch (err) {\n        return true;\n    }\n\n    try {\n        noop(obj && obj.__cross_domain_utils_window_check__);\n\n    } catch (err) {\n        return true;\n    }\n\n    return false;\n}\n\nexport function isBrowser() : boolean {\n    return (typeof window !== 'undefined' && typeof window.location !== 'undefined');\n}\n\nexport function isCurrentDomain(domain : string) : boolean {\n    if (!isBrowser()) {\n        return false;\n    }\n\n    return (getDomain() === domain);\n}\n\nexport function isMockDomain(domain : string) : boolean {\n    return domain.indexOf(PROTOCOL.MOCK) === 0;\n}\n\nexport function normalizeMockUrl(url : string) : string {\n    if (!isMockDomain(getDomainFromUrl(url))) {\n        return url;\n    }\n\n    if (!__TEST__) {\n        throw new Error(`Mock urls not supported out of test mode`);\n    }\n\n    return url.replace(/^mock:\\/\\/[^/]+/, getActualDomain(window));\n}\n","export default function _applyDecoratedDescriptor(target, property, decorators, descriptor, context) {\n  var desc = {};\n  Object['ke' + 'ys'](descriptor).forEach(function (key) {\n    desc[key] = descriptor[key];\n  });\n  desc.enumerable = !!desc.enumerable;\n  desc.configurable = !!desc.configurable;\n\n  if ('value' in desc || desc.initializer) {\n    desc.writable = true;\n  }\n\n  desc = decorators.slice().reverse().reduce(function (desc, decorator) {\n    return decorator(target, property, desc) || desc;\n  }, desc);\n\n  if (context && desc.initializer !== void 0) {\n    desc.value = desc.initializer ? desc.initializer.call(context) : void 0;\n    desc.initializer = undefined;\n  }\n\n  if (desc.initializer === void 0) {\n    Object['define' + 'Property'](target, property, desc);\n    desc = null;\n  }\n\n  return desc;\n}","/* @flow */\n\nexport const MESSAGE_TYPE = {\n    REQUEST:  ('postrobot_message_request' : 'postrobot_message_request'),\n    RESPONSE: ('postrobot_message_response' : 'postrobot_message_response'),\n    ACK:      ('postrobot_message_ack' : 'postrobot_message_ack')\n};\n\nexport const MESSAGE_ACK = {\n    SUCCESS: ('success' : 'success'),\n    ERROR:   ('error' : 'error')\n};\n\nexport const MESSAGE_NAME = {\n    METHOD:      ('postrobot_method' : 'postrobot_method'),\n    HELLO:       ('postrobot_hello' : 'postrobot_hello'),\n    OPEN_TUNNEL: ('postrobot_open_tunnel' : 'postrobot_open_tunnel')\n};\n\nexport const WINDOW_PROP = {\n    POSTROBOT: ('__postRobot__' : '__postRobot__')\n};\n\nexport const SEND_STRATEGY = {\n    POST_MESSAGE: ('postrobot_post_message' : 'postrobot_post_message'),\n    BRIDGE:       ('postrobot_bridge' : 'postrobot_bridge'),\n    GLOBAL:       ('postrobot_global' : 'postrobot_global')\n};\n\nexport const PROTOCOL = {\n    MOCK: ('mock:' : 'mock:'),\n    FILE: ('file:' : 'file:')\n};\n\nexport const BRIDGE_NAME_PREFIX = '__postrobot_bridge__';\nexport const POSTROBOT_PROXY =    '__postrobot_proxy__';\n\nexport const WILDCARD = '*';\n\nexport const SERIALIZATION_TYPE = {\n    CROSS_DOMAIN_ZALGO_PROMISE: ('cross_domain_zalgo_promise' : 'cross_domain_zalgo_promise'),\n    CROSS_DOMAIN_FUNCTION:      ('cross_domain_function' : 'cross_domain_function'),\n    CROSS_DOMAIN_WINDOW:        ('cross_domain_window' : 'cross_domain_window')\n};\n","/* @flow */\n\nimport { SEND_STRATEGY } from './constants';\n\nexport let CONFIG : Object = {\n    BRIDGE_TIMEOUT:       5000,\n    CHILD_WINDOW_TIMEOUT: 5000,\n\n    ACK_TIMEOUT:       2000,\n    ACK_TIMEOUT_KNOWN: 10000,\n    RES_TIMEOUT:       __TEST__ ? 2000 : -1,\n    \n    ALLOWED_POST_MESSAGE_METHODS: {\n        [ SEND_STRATEGY.POST_MESSAGE ]: true,\n        [ SEND_STRATEGY.BRIDGE ]:       true,\n        [ SEND_STRATEGY.GLOBAL ]:       true\n    }\n};\n","/* @flow */\n\nimport { type CrossDomainWindowType } from 'cross-domain-utils/src';\nimport { WeakMap } from 'cross-domain-safe-weakmap/src';\nimport { getOrSet } from 'belter/src';\n\nimport { WINDOW_PROP } from './conf';\n\nexport let global : Object = window[WINDOW_PROP.POSTROBOT] = window[WINDOW_PROP.POSTROBOT] || {};\nlet winStore = global.windowStore = global.windowStore || new WeakMap();\n\ntype WindowStore<T> = {|\n    get : ((CrossDomainWindowType, T) => T) & ((CrossDomainWindowType, void) => T | void),\n    set : (CrossDomainWindowType, T) => T,\n    has : (CrossDomainWindowType) => boolean,\n    del : (CrossDomainWindowType) => void,\n    getOrSet : (CrossDomainWindowType, () => T) => T\n|};\n\ntype ObjectGetter = () => Object;\n\nlet getObj : ObjectGetter = () => ({});\n\n// $FlowFixMe\nexport function windowStore<T>(key : string, defStore? : ObjectGetter = getObj) : WindowStore<T> {\n\n    function getStore(win : CrossDomainWindowType) : ObjectGetter {\n        return winStore.getOrSet(win, defStore);\n    }\n\n    return {\n        has: (win) => {\n            let store = getStore(win);\n            return store.hasOwnProperty(key);\n        },\n        get: (win, defVal) => {\n            let store = getStore(win);\n            // $FlowFixMe\n            return store.hasOwnProperty(key) ? store[key] : defVal;\n        },\n        set: (win, val) => {\n            let store = getStore(win);\n            store[key] = val;\n            return val;\n        },\n        del: (win) => {\n            let store = getStore(win);\n            delete store[key];\n        },\n        getOrSet: (win, getter) => {\n            let store = getStore(win);\n            if (store.hasOwnProperty(key)) {\n                return store[key];\n            }\n            let val = getter();\n            store[key] = val;\n            return val;\n        }\n    };\n}\n\ntype GlobalStore<T> = {|\n    get : ((string, T) => T) & ((string, void) => T | void),\n    set : (string, T) => T,\n    has : (string) => boolean,\n    del : (string) => void,\n    getOrSet : (string, () => T) => T,\n    reset : () => void,\n    keys : () => $ReadOnlyArray<string>\n|};\n\n// $FlowFixMe\nexport function globalStore<T : mixed>(key : string, defStore? : ObjectGetter = getObj) : GlobalStore<T> {\n    let store = getOrSet(global, key, defStore);\n\n    return {\n        has: (storeKey) => {\n            return store.hasOwnProperty(storeKey);\n        },\n        get: (storeKey, defVal) => {\n            // $FlowFixMe\n            return store.hasOwnProperty(storeKey) ? store[storeKey] : defVal;\n        },\n        set: (storeKey, val) => {\n            store[storeKey] = val;\n            return val;\n        },\n        del: (storeKey) => {\n            delete store[storeKey];\n        },\n        getOrSet: (storeKey, getter) => {\n            if (store.hasOwnProperty(storeKey)) {\n                return store[storeKey];\n            }\n            let val = getter();\n            store[storeKey] = val;\n            return val;\n        },\n        reset: () => {\n            store = defStore();\n        },\n        keys: () => {\n            return Object.keys(store);\n        }\n    };\n}\n","/* @flow */\n\nimport { getAncestor, type CrossDomainWindowType } from 'cross-domain-utils/src';\nimport { ZalgoPromise } from 'zalgo-promise/src';\nimport { noop, uniqueID, once, weakMapMemoizePromise } from 'belter/src';\n\nimport { MESSAGE_NAME, WILDCARD } from '../conf';\nimport { global, windowStore } from '../global';\n\nglobal.instanceID = global.instanceID || uniqueID();\nlet helloPromises = windowStore('helloPromises');\n\nfunction getHelloPromise(win : CrossDomainWindowType) : ZalgoPromise<{ win : CrossDomainWindowType, domain : string }> {\n    return helloPromises.getOrSet(win, () => new ZalgoPromise());\n}\n\nconst listenForHello = once(() => {\n    global.on(MESSAGE_NAME.HELLO, { domain: WILDCARD }, ({ source, origin }) => {\n        getHelloPromise(source).resolve({ win: source, domain: origin });\n        return { instanceID: global.instanceID };\n    });\n});\n\nexport function sayHello(win : CrossDomainWindowType) : ZalgoPromise<{ win : CrossDomainWindowType, domain : string, instanceID : string }> {\n    return global.send(win, MESSAGE_NAME.HELLO, { instanceID: global.instanceID }, { domain: WILDCARD, timeout: -1 })\n        .then(({ origin, data: { instanceID } }) => {\n            getHelloPromise(win).resolve({ win, domain: origin });\n            return { win, domain: origin, instanceID };\n        });\n}\n\nexport let getWindowInstanceID = weakMapMemoizePromise((win : CrossDomainWindowType) : ZalgoPromise<string> => {\n    return sayHello(win).then(({ instanceID }) => instanceID);\n});\n\nexport function initHello() {\n    listenForHello();\n\n    let parent = getAncestor();\n    if (parent) {\n        sayHello(parent).catch(noop);\n    }\n}\n\nexport function awaitWindowHello(win : CrossDomainWindowType, timeout : number = 5000, name : string = 'Window') : ZalgoPromise<{ win : CrossDomainWindowType, domain : string }> {\n    let promise = getHelloPromise(win);\n\n    if (timeout !== -1) {\n        promise = promise.timeout(timeout, new Error(`${ name } did not load after ${ timeout }ms`));\n    }\n\n    return promise;\n}\n","/* @flow */\n\nimport { type CrossDomainWindowType } from 'cross-domain-utils/src';\n\nimport { windowStore } from '../global';\n\nlet knownWindows = windowStore('knownWindows');\n\nexport function markWindowKnown(win : CrossDomainWindowType) {\n    knownWindows.set(win, true);\n}\n\nexport function isWindowKnown(win : CrossDomainWindowType) : boolean {\n    return knownWindows.get(win, false);\n}\n","/* @flow */\n\nexport const TYPE = {\n    FUNCTION:  ('function' : 'function'),\n    ERROR:     ('error' : 'error'),\n    PROMISE:   ('promise' : 'promise'),\n    REGEX:     ('regex' : 'regex'),\n    DATE:      ('date' : 'date'),\n    ARRAY:     ('array' : 'array'),\n    OBJECT:    ('object' : 'object'),\n    STRING:    ('string' : 'string'),\n    NUMBER:    ('number' : 'number'),\n    BOOLEAN:   ('boolean' : 'boolean'),\n    NULL:      ('null' : 'null'),\n    UNDEFINED: ('undefined' : 'undefined')\n};\n","/* @flow */\n\nimport { TYPE } from './constants';\nimport type { CustomSerializedType } from './types';\n\nexport function isSerializedType(item : mixed) : boolean {\n    return (typeof item === 'object' && item !== null && typeof item.__type__ === 'string');\n}\n\nexport function determineType(val : mixed) : $Values<typeof TYPE> | void {\n    if (typeof val === 'undefined') {\n        return TYPE.UNDEFINED;\n    }\n\n    if (val === null) {\n        return TYPE.NULL;\n    }\n\n    if (Array.isArray(val)) {\n        return TYPE.ARRAY;\n    }\n\n    if (typeof val === 'function') {\n        return TYPE.FUNCTION;\n    }\n\n    if (typeof val === 'object') {\n\n        if (val instanceof Error) {\n            return TYPE.ERROR;\n        }\n\n        if (typeof val.then === 'function') {\n            return TYPE.PROMISE;\n        }\n\n        if (Object.prototype.toString.call(val) === '[object RegExp]') {\n            return TYPE.REGEX;\n        }\n\n        if (Object.prototype.toString.call(val) === '[object Date]') {\n            return TYPE.DATE;\n        }\n\n        return TYPE.OBJECT;\n    }\n\n    if (typeof val === 'string') {\n        return TYPE.STRING;\n    }\n\n    if (typeof val === 'number') {\n        return TYPE.NUMBER;\n    }\n\n    if (typeof val === 'boolean') {\n        return TYPE.BOOLEAN;\n    }\n}\n\nexport function serializeType<T : string, V : mixed>(type : T, val : V) : CustomSerializedType<T, V> {\n    return {\n        __type__: type,\n        __val__:  val\n    };\n}\n","/* @flow */\n\nimport { TYPE } from './constants';\nimport type { Thenable, CustomSerializedType, NativeSerializedType } from './types';\nimport { determineType, isSerializedType } from './common';\nimport {\n    serializeFunction,\n    serializeError, type SerializedError,\n    serializePromise,\n    serializeRegex, type SerializedRegex,\n    serializeDate, type SerializedDate,\n    serializeArray,\n    serializeObject,\n    serializeString,\n    serializeNumber,\n    serializeBoolean,\n    serializeNull\n} from './serializers';\n\ntype NativeSerializer<V : mixed, S : mixed, T : $Values<typeof TYPE>> = (value : V, key : string) => NativeSerializedType<T, S>;\ntype CustomSerializer<V : mixed, S : mixed, T : string> = (value : V, key : string) => CustomSerializedType<T, S>;\ntype PrimitiveSerializer<V : mixed, S : mixed> = (value : V, key : string) => S;\ntype CustomOrPrimitiveSerializer<V : mixed, T : string> = CustomSerializer<V, *, T> | PrimitiveSerializer<V, *>;\ntype NativeOrCustomOrPrimitiveSerializer<V : mixed, S : mixed, T : string> = NativeSerializer<V, S, T> | CustomOrPrimitiveSerializer<V, T>;\n\ntype Serializers = {|\n    function? : CustomOrPrimitiveSerializer<Function, typeof TYPE.FUNCTION>,\n    error? : NativeOrCustomOrPrimitiveSerializer<Error, SerializedError, typeof TYPE.ERROR>,\n    promise? : CustomOrPrimitiveSerializer<Thenable, typeof TYPE.PROMISE>,\n    regex? : NativeOrCustomOrPrimitiveSerializer<RegExp, SerializedRegex, typeof TYPE.REGEX>,\n    date? : NativeOrCustomOrPrimitiveSerializer<Date, SerializedDate, typeof TYPE.DATE>,\n    array? : CustomOrPrimitiveSerializer<$ReadOnlyArray<mixed>, typeof TYPE.ARRAY>,\n    object? : CustomOrPrimitiveSerializer<Object, typeof TYPE.OBJECT>,\n    string? : CustomOrPrimitiveSerializer<string, typeof TYPE.STRING>,\n    number? : CustomOrPrimitiveSerializer<number, typeof TYPE.NUMBER>,\n    boolean? : CustomOrPrimitiveSerializer<boolean, typeof TYPE.BOOLEAN>,\n    null? : CustomOrPrimitiveSerializer<null, typeof TYPE.NULL>\n|};\n\nconst SERIALIZER : Serializers = {\n    [ TYPE.FUNCTION ]:  serializeFunction,\n    [ TYPE.ERROR ]:     serializeError,\n    [ TYPE.PROMISE ]:   serializePromise,\n    [ TYPE.REGEX ]:     serializeRegex,\n    [ TYPE.DATE ]:      serializeDate,\n    [ TYPE.ARRAY ]:     serializeArray,\n    [ TYPE.OBJECT ]:    serializeObject,\n    [ TYPE.STRING ]:    serializeString,\n    [ TYPE.NUMBER ]:    serializeNumber,\n    [ TYPE.BOOLEAN ]:   serializeBoolean,\n    [ TYPE.NULL ]:      serializeNull\n};\n\n// $FlowFixMe\nconst defaultSerializers : Serializers = {};\n\nexport function serialize<T : mixed>(obj : T, serializers : Serializers = defaultSerializers) : string {\n\n    function replacer(key) : ?mixed {\n        const val = this[key];\n\n        if (isSerializedType(this)) {\n            return val;\n        }\n        \n        const type = determineType(val);\n\n        if (!type) {\n            return val;\n        }\n\n        // $FlowFixMe\n        const serializer = serializers[type] || SERIALIZER[type];\n\n        if (!serializer) {\n            return val;\n        }\n\n        return serializer(val, key);\n    }\n\n    const result = JSON.stringify(obj, replacer);\n\n    if (typeof result === 'undefined') {\n        return TYPE.UNDEFINED;\n    }\n\n    return result;\n}\n","/* @flow */\n\nexport type SerializedFunction = void;\n\nexport function serializeFunction() : SerializedFunction {\n    // pass\n}\n\nexport function deserializeFunction() {\n    throw new Error(`Function serialization is not implemented; nothing to deserialize`);\n}\n","/* @flow */\n\nimport { serializeType } from '../common';\nimport { TYPE } from '../constants';\nimport type { NativeSerializedType } from '../types';\n\nexport type SerializedError = {|\n    message : string,\n    stack : string,\n    code : string | number | void\n|};\n\n// $FlowFixMe\nexport function serializeError({ message, stack, code } : Error) : NativeSerializedType<typeof TYPE.ERROR, SerializedError> {\n    return serializeType(TYPE.ERROR, { message, stack, code });\n}\n\nexport function deserializeError({ message, stack, code } : SerializedError) : Error {\n    const error = new Error(message);\n    // $FlowFixMe\n    error.code = code;\n    error.stack = `${ stack }\\n\\n${ error.stack }`;\n    return error;\n}\n","/* @flow */\n\nexport type SerializedPromise = void;\n\nexport function serializePromise() : SerializedPromise {\n    // pass\n}\n\nexport function deserializePromise() {\n    throw new Error(`Promise serialization is not implemented; nothing to deserialize`);\n}\n","/* @flow */\n\nimport { serializeType } from '../common';\nimport { TYPE } from '../constants';\nimport type { NativeSerializedType } from '../types';\n\nexport type SerializedRegex = string;\n\nexport function serializeRegex(val : RegExp) : NativeSerializedType<typeof TYPE.REGEX, SerializedRegex> {\n    return serializeType(TYPE.REGEX, val.source);\n}\n\nexport function deserializeRegex(val : string) : RegExp {\n    // eslint-disable-next-line security/detect-non-literal-regexp\n    return new RegExp(val);\n}\n","/* @flow */\n\nimport { serializeType } from '../common';\nimport { TYPE } from '../constants';\nimport type { NativeSerializedType } from '../types';\n\nexport type SerializedDate = string;\n\nexport function serializeDate(val : Date) : NativeSerializedType<typeof TYPE.DATE, SerializedDate> {\n    return serializeType(TYPE.DATE, val.toJSON());\n}\n\nexport function deserializeDate(val : string) : Date {\n    return new Date(val);\n}\n","/* @flow */\n\nexport type SerializedArray<T : mixed = mixed> = $ReadOnlyArray<T>;\n\nexport function serializeArray<T : mixed>(val : $ReadOnlyArray<T>) : SerializedArray<T> {\n    return val;\n}\n\nexport function deserializeArray<T : mixed>(val : SerializedArray<T>) : $ReadOnlyArray<T> {\n    return val;\n}\n","/* @flow */\n\nexport type SerializedObject = Object;\n\nexport function serializeObject(val : Object) : SerializedObject {\n    return val;\n}\n\nexport function deserializeObject(val : SerializedObject) : Object {\n    return val;\n}\n","/* @flow */\n\nexport type SerializedString = string;\n\nexport function serializeString(val : string) : SerializedString {\n    return val;\n}\n\nexport function deserializeString(val : SerializedString) : string {\n    return val;\n}\n","/* @flow */\n\nexport type SerializedNumber = number;\n\nexport function serializeNumber(val : number) : SerializedNumber {\n    return val;\n}\n\nexport function deserializeNumber(val : SerializedNumber) : number {\n    return val;\n}\n","/* @flow */\n\nexport type SerializedBoolean = boolean;\n\nexport function serializeBoolean(val : boolean) : SerializedBoolean {\n    return val;\n}\n\nexport function deserializeBoolean(val : SerializedBoolean) : boolean {\n    return val;\n}\n","/* @flow */\n\nexport type SerializedNull = null;\n\nexport function serializeNull(val : null) : SerializedNull {\n    return val;\n}\n\nexport function deserializeNull(val : SerializedNull) : null {\n    return val;\n}\n","/* @flow */\n\nimport type { Thenable } from './types';\nimport { TYPE } from './constants';\nimport { determineType, isSerializedType } from './common';\nimport {\n    deserializeFunction,\n    deserializeError, type SerializedError,\n    deserializePromise,\n    deserializeRegex, type SerializedRegex,\n    deserializeDate, type SerializedDate,\n    deserializeArray,\n    deserializeObject,\n    deserializeString,\n    deserializeNumber,\n    deserializeBoolean,\n    deserializeNull\n} from './serializers';\n\ntype Deserializer<V : mixed, S : mixed> = (serializedValue : S, key : string) => V;\ntype PrimitiveDeserializer<V, S = V> = (serializedValue : S, key : string) => V;\n\ntype Deserializers = {\n    function? : Deserializer<Function, *>,\n    error? : Deserializer<Error, SerializedError>,\n    promise? : Deserializer<Thenable, *>,\n    regex? : Deserializer<RegExp, SerializedRegex>,\n    date? : Deserializer<Date, SerializedDate>,\n    array? : PrimitiveDeserializer<$ReadOnlyArray<mixed>>,\n    object? : PrimitiveDeserializer<Object>,\n    string? : PrimitiveDeserializer<string>,\n    number? : PrimitiveDeserializer<number>,\n    boolean? : PrimitiveDeserializer<boolean>,\n    null? : PrimitiveDeserializer<null>,\n    [string] : Deserializer<mixed, *>\n};\n\n// $FlowFixMe\nconst DESERIALIZER : Deserializers = {\n    [ TYPE.FUNCTION ]:  deserializeFunction,\n    [ TYPE.ERROR ]:     deserializeError,\n    [ TYPE.PROMISE ]:   deserializePromise,\n    [ TYPE.REGEX ]:     deserializeRegex,\n    [ TYPE.DATE ]:      deserializeDate,\n    [ TYPE.ARRAY ]:     deserializeArray,\n    [ TYPE.OBJECT ]:    deserializeObject,\n    [ TYPE.STRING ]:    deserializeString,\n    [ TYPE.NUMBER ]:    deserializeNumber,\n    [ TYPE.BOOLEAN ]:   deserializeBoolean,\n    [ TYPE.NULL ]:      deserializeNull\n};\n\n// $FlowFixMe\nconst defaultDeserializers : Deserializers = {};\n\nexport function deserialize<T : mixed | null | void>(str : string, deserializers : Deserializers = defaultDeserializers) : T {\n    if (str === TYPE.UNDEFINED) {\n        // $FlowFixMe\n        return;\n    }\n\n    function replacer(key, val) : ?mixed {\n        if (isSerializedType(this)) {\n            return val;\n        }\n\n        let type;\n        let value;\n\n        if (isSerializedType(val)) {\n            type = val.__type__;\n            value = val.__val__;\n        } else {\n            type = determineType(val);\n            value = val;\n        }\n\n        if (!type) {\n            return value;\n        }\n\n        // $FlowFixMe\n        const deserializer = deserializers[type] || DESERIALIZER[type];\n\n        if (!deserializer) {\n            return value;\n        }\n\n        return deserializer(value, key);\n    }\n\n    return JSON.parse(str, replacer);\n}\n","/* @flow */\n\nimport { isSameDomain, isWindowClosed, type CrossDomainWindowType, type DomainMatcher, getOpener, WINDOW_TYPE } from 'cross-domain-utils/src';\nimport { ZalgoPromise } from 'zalgo-promise/src';\nimport { uniqueID, memoizePromise } from 'belter/src';\nimport { serializeType, type CustomSerializedType } from 'universal-serialize/src';\n\nimport { SERIALIZATION_TYPE } from '../conf';\nimport { windowStore, globalStore } from '../global';\nimport { getWindowInstanceID } from '../lib';\n\nlet winToProxyWindow = windowStore('winToProxyWindow');\nlet idToProxyWindow = globalStore('idToProxyWindow');\n\nfunction cleanupProxyWindows() {\n    for (let id of idToProxyWindow.keys()) {\n        // $FlowFixMe\n        if (idToProxyWindow.get(id).shouldClean()) {\n            idToProxyWindow.del(id);\n        }\n    }\n}\n\ntype SerializedProxyWindow = {|\n    id : string,\n    type : $Values<typeof WINDOW_TYPE>,\n    close : () => ZalgoPromise<void>,\n    focus : () => ZalgoPromise<void>,\n    isClosed : () => ZalgoPromise<boolean>,\n    setLocation : (string) => ZalgoPromise<void>,\n    setName : (string) => ZalgoPromise<void>,\n    getInstanceID : () => ZalgoPromise<string>\n|};\n\nexport class ProxyWindow {\n\n    isProxyWindow : true = true\n    serializedWindow : SerializedProxyWindow\n    actualWindow : CrossDomainWindowType\n    actualWindowPromise : ZalgoPromise<CrossDomainWindowType>\n\n    constructor(serializedWindow : SerializedProxyWindow, actualWindow? : CrossDomainWindowType) {\n        this.serializedWindow = serializedWindow;\n        this.actualWindowPromise = new ZalgoPromise();\n        if (actualWindow) {\n            this.setWindow(actualWindow);\n        }\n        this.serializedWindow.getInstanceID = memoizePromise(this.serializedWindow.getInstanceID);\n    }\n\n    getType() : $Values<typeof WINDOW_TYPE> {\n        return this.serializedWindow.type;\n    }\n\n    isPopup() : boolean {\n        return this.getType() === WINDOW_TYPE.POPUP;\n    }\n\n    isIframe() : boolean {\n        return this.getType() === WINDOW_TYPE.IFRAME;\n    }\n\n    setLocation(href : string) : ZalgoPromise<ProxyWindow> {\n        return ZalgoPromise.try(() => {\n            if (this.actualWindow) {\n                this.actualWindow.location = href;\n            } else {\n                return this.serializedWindow.setLocation(href);\n            }\n        }).then(() => this);\n    }\n\n    setName(name : string) : ZalgoPromise<ProxyWindow> {\n        return ZalgoPromise.try(() => {\n            if (this.actualWindow) {\n                if (!isSameDomain(this.actualWindow)) {\n                    throw new Error(`Can not set name for window on different domain`);\n                }\n                // $FlowFixMe\n                this.actualWindow.name = name;\n                // $FlowFixMe\n                if (this.actualWindow.frameElement) {\n                    // $FlowFixMe\n                    this.actualWindow.frameElement.setAttribute('name', name);\n                }\n\n                if (__POST_ROBOT__.__IE_POPUP_SUPPORT__) {\n                    const { linkWindow } = require('../bridge');\n                    linkWindow({ win: this.actualWindow, name });\n                }\n\n            } else {\n                return this.serializedWindow.setName(name);\n            }\n        }).then(() => this);\n    }\n\n    close() : ZalgoPromise<ProxyWindow> {\n        return ZalgoPromise.try(() => {\n            if (this.actualWindow) {\n                this.actualWindow.close();\n            } else {\n                return this.serializedWindow.close();\n            }\n        }).then(() => this);\n    }\n\n    focus() : ZalgoPromise<ProxyWindow> {\n        return ZalgoPromise.try(() => {\n            if (this.actualWindow) {\n                this.actualWindow.focus();\n            }\n            return this.serializedWindow.focus();\n        }).then(() => this);\n    }\n\n    isClosed() : ZalgoPromise<boolean> {\n        return ZalgoPromise.try(() => {\n            if (this.actualWindow) {\n                return isWindowClosed(this.actualWindow);\n            } else {\n                return this.serializedWindow.isClosed();\n            }\n        });\n    }\n\n    setWindow(win : CrossDomainWindowType) {\n        this.actualWindow = win;\n        this.actualWindowPromise.resolve(win);\n    }\n\n    matchWindow(win : CrossDomainWindowType) : ZalgoPromise<boolean> {\n        return ZalgoPromise.try(() => {\n            if (this.actualWindow) {\n                return win === this.actualWindow;\n            }\n            \n            return ZalgoPromise.all([\n                this.getInstanceID(),\n                getWindowInstanceID(win)\n            ]).then(([ proxyInstanceID, knownWindowInstanceID ]) => {\n                let match = proxyInstanceID === knownWindowInstanceID;\n\n                if (match) {\n                    this.setWindow(win);\n                }\n\n                return match;\n            });\n        });\n    }\n\n    unwrap() : CrossDomainWindowType | ProxyWindow {\n        return this.actualWindow || this;\n    }\n\n    awaitWindow() : ZalgoPromise<CrossDomainWindowType> {\n        return this.actualWindowPromise;\n    }\n\n    getInstanceID() : ZalgoPromise<string> {\n        if (this.actualWindow) {\n            return getWindowInstanceID(this.actualWindow);\n        } else {\n            return this.serializedWindow.getInstanceID();\n        }\n    }\n\n    serialize() : SerializedProxyWindow {\n        return this.serializedWindow;\n    }\n\n    shouldClean() : boolean {\n        return this.actualWindow && isWindowClosed(this.actualWindow);\n    }\n\n    static unwrap(win : CrossDomainWindowType | ProxyWindow) : CrossDomainWindowType | ProxyWindow {\n        return ProxyWindow.isProxyWindow(win)\n            // $FlowFixMe\n            ? win.unwrap()\n            : win;\n    }\n\n    static serialize(win : CrossDomainWindowType | ProxyWindow) : SerializedProxyWindow {\n        cleanupProxyWindows();\n\n        return ProxyWindow.toProxyWindow(win).serialize();\n    }\n\n    static deserialize(serializedWindow : SerializedProxyWindow) : ProxyWindow {\n        cleanupProxyWindows();\n        \n        return idToProxyWindow.getOrSet(serializedWindow.id, () => {\n            return new ProxyWindow(serializedWindow);\n        });\n    }\n\n    static isProxyWindow(obj : mixed) : boolean {\n        // $FlowFixMe\n        return Boolean(obj && obj.isProxyWindow);\n    }\n\n    static toProxyWindow(win : CrossDomainWindowType | ProxyWindow) : ProxyWindow {\n        cleanupProxyWindows();\n\n        if (ProxyWindow.isProxyWindow(win)) {\n            // $FlowFixMe\n            return win;\n        }\n\n        // $FlowFixMe\n        return winToProxyWindow.getOrSet(win, () => {\n            let id = uniqueID();\n\n            return idToProxyWindow.set(id, new ProxyWindow({\n                id,\n                // $FlowFixMe\n                type:          getOpener(win) ? WINDOW_TYPE.POPUP : WINDOW_TYPE.IFRAME,\n                getInstanceID: () => getWindowInstanceID(win),\n                close:         () => ZalgoPromise.try(() => {\n                    win.close();\n                }),\n                focus:         () => ZalgoPromise.try(() => {\n                    win.focus();\n                }),\n                isClosed:      () => ZalgoPromise.try(() => {\n                    // $FlowFixMe\n                    return isWindowClosed(win);\n                }),\n                setLocation:   (href) => ZalgoPromise.try(() => {\n                    // $FlowFixMe\n                    if (isSameDomain(win)) {\n                        try {\n                            if (win.location && typeof win.location.replace === 'function') {\n                                // $FlowFixMe\n                                win.location.replace(href);\n                                return;\n                            }\n                        } catch (err) {\n                            // pass\n                        }\n                    }\n    \n                    // $FlowFixMe\n                    win.location = href;\n                }),\n                setName:       (name) => ZalgoPromise.try(() => {\n                    if (__POST_ROBOT__.__IE_POPUP_SUPPORT__) {\n                        const { linkWindow } = require('../bridge');\n                        // $FlowFixMe\n                        linkWindow({ win, name });\n                    }\n                    // $FlowFixMe\n                    win.name = name;\n                })\n            // $FlowFixMe\n            }, win));\n        });\n    }\n}\n\nexport type SerializedWindow = CustomSerializedType<typeof SERIALIZATION_TYPE.CROSS_DOMAIN_WINDOW, SerializedProxyWindow>;\n\nexport function serializeWindow(destination : CrossDomainWindowType | ProxyWindow, domain : DomainMatcher, win : CrossDomainWindowType) : SerializedWindow {\n    return serializeType(SERIALIZATION_TYPE.CROSS_DOMAIN_WINDOW, ProxyWindow.serialize(win));\n}\n\nexport function deserializeWindow(source : CrossDomainWindowType | ProxyWindow, origin : string, win : SerializedProxyWindow) : ProxyWindow {\n    return ProxyWindow.deserialize(win);\n}\n","/* @flow */\n\nimport { matchDomain, getDomain, type CrossDomainWindowType, type DomainMatcher } from 'cross-domain-utils/src';\nimport { ZalgoPromise } from 'zalgo-promise/src';\nimport { once, uniqueID, isRegex } from 'belter/src';\nimport { serializeType, type CustomSerializedType } from 'universal-serialize/src';\n\nimport { MESSAGE_NAME, WILDCARD, SERIALIZATION_TYPE } from '../conf';\nimport { global, windowStore, globalStore } from '../global';\n\nimport { ProxyWindow } from './window';\n\nlet methodStore = windowStore('methodStore');\nlet proxyWindowMethods = globalStore('proxyWindowMethods');\nglobal.listeningForFunctions = global.listeningForFunctions || false;\n\nconst listenForFunctionCalls = once(() => {\n    if (global.listeningForFunctions) {\n        return;\n    }\n\n    global.listeningForFunctions = true;\n\n    global.on(MESSAGE_NAME.METHOD, { origin: WILDCARD }, ({ source, origin, data } : { source : CrossDomainWindowType, origin : string, data : Object }) => {\n        let { id, name } = data;\n        \n        return ZalgoPromise.try(() => {\n            let methods = methodStore.getOrSet(source, () => ({}));\n            let meth = methods[data.id] || proxyWindowMethods.get(id);\n\n            if (!meth) {\n                throw new Error(`Could not find method '${ data.name }' with id: ${ data.id } in ${ getDomain(window) }`);\n            }\n\n            let { proxy, domain, val } = meth;\n\n            return ZalgoPromise.try(() => {\n                if (!matchDomain(domain, origin)) {\n                    // $FlowFixMe\n                    throw new Error(`Method '${ data.name }' domain ${ JSON.stringify(isRegex(meth.domain) ? meth.domain.source : meth.domain) } does not match origin ${ origin } in ${ getDomain(window) }`);\n                }\n                \n                if (proxy) {\n                    // $FlowFixMe\n                    return proxy.matchWindow(source).then(match => { // eslint-disable-line max-nested-callbacks\n                        if (!match) {\n                            throw new Error(`Method call '${ data.name }' failed - proxy window does not match source in ${ getDomain(window) }`);\n                        }\n                    });\n                }\n            }).then(() => {\n                return val.apply({ source, origin, data }, data.args);\n            }, err => {\n                return ZalgoPromise.try(() => { // eslint-disable-line max-nested-callbacks\n                    if (val.onError) {\n                        return val.onError(err);\n                    }\n                }).then(() => { // eslint-disable-line max-nested-callbacks\n                    throw err;\n                });\n            }).then(result => {\n                return { result, id, name };\n            });\n        });\n    });\n});\n\nexport type SerializedFunction = CustomSerializedType<typeof SERIALIZATION_TYPE.CROSS_DOMAIN_FUNCTION, {\n    id : string,\n    name : string\n}>;\n\nexport function serializeFunction<T>(destination : CrossDomainWindowType | ProxyWindow, domain : DomainMatcher, val : () => ZalgoPromise<T> | T, key : string) : SerializedFunction {\n    listenForFunctionCalls();\n    \n    let id = uniqueID();\n    destination = ProxyWindow.unwrap(destination);\n\n    if (ProxyWindow.isProxyWindow(destination)) {\n        proxyWindowMethods.set(id, { proxy: destination, domain, val });\n        // $FlowFixMe\n        destination.awaitWindow().then(win => {\n            proxyWindowMethods.del(id);\n            let methods = methodStore.getOrSet(win, () => ({}));\n            methods[id] = { domain, val };\n        });\n    } else {\n        // $FlowFixMe\n        let methods = methodStore.getOrSet(destination, () => ({}));\n        methods[id] = { domain, val };\n    }\n\n    return serializeType(SERIALIZATION_TYPE.CROSS_DOMAIN_FUNCTION, { id, name: val.name || key });\n}\n\nexport function deserializeFunction<T>(source : CrossDomainWindowType | ProxyWindow, origin : string, { id, name } : { id : string, name : string }) : (...args : $ReadOnlyArray<mixed>) => ZalgoPromise<T> {\n    function innerWrapper<X : mixed>(args : $ReadOnlyArray<mixed>, opts? : Object = {}) : ZalgoPromise<X> {\n        let originalStack;\n\n        if (__DEBUG__) {\n            originalStack = (new Error(`Original call to ${ name }():`)).stack;\n        }\n\n        return ZalgoPromise.try(() => {\n            // $FlowFixMe\n            return ProxyWindow.isProxyWindow(source) ? source.awaitWindow() : source;\n        }).then(win => {\n            return global.send(win, MESSAGE_NAME.METHOD, { id, name, args }, { domain: origin, ...opts });\n        }).catch(err => {\n            // $FlowFixMe\n            if (__DEBUG__ && originalStack && err.stack) {\n                // $FlowFixMe\n                err.stack = `${ err.stack }\\n\\n${ originalStack }`;\n            }\n            throw err;\n        });\n    }\n\n    function crossDomainFunctionWrapper<X : mixed>() : ZalgoPromise<X> {\n        return innerWrapper(Array.prototype.slice.call(arguments))\n            .then(({ data }) => data.result);\n    }\n\n    crossDomainFunctionWrapper.fireAndForget = function crossDomainFireAndForgetFunctionWrapper<X : mixed>() : ZalgoPromise<X> {\n        return innerWrapper(Array.prototype.slice.call(arguments), { fireAndForget: true });\n    };\n\n    crossDomainFunctionWrapper.__name__ = name;\n    crossDomainFunctionWrapper.__xdomain__ = true;\n    crossDomainFunctionWrapper.origin = origin;\n\n    return crossDomainFunctionWrapper;\n}\n","/* @flow */\n\nimport { type CrossDomainWindowType, isWindow, type DomainMatcher } from 'cross-domain-utils/src';\nimport { TYPE, serialize, deserialize, type Thenable } from 'universal-serialize/src';\n\nimport { SERIALIZATION_TYPE } from '../conf';\n\nimport { serializeFunction, deserializeFunction, type SerializedFunction } from './function';\nimport { serializePromise, deserializePromise, type SerializedPromise } from './promise';\nimport { serializeWindow, deserializeWindow, type SerializedWindow, ProxyWindow } from './window';\n\nexport function serializeMessage<T : mixed>(destination : CrossDomainWindowType | ProxyWindow, domain : DomainMatcher, obj : T) : string {\n    return serialize(obj, {\n        [ TYPE.PROMISE ]:  (val : Thenable, key : string) : SerializedPromise => serializePromise(destination, domain, val, key),\n        [ TYPE.FUNCTION ]: (val : Function, key : string) : SerializedFunction => serializeFunction(destination, domain, val, key),\n        [ TYPE.OBJECT ]:   (val : CrossDomainWindowType) : Object | SerializedWindow => {\n            return (isWindow(val) || ProxyWindow.isProxyWindow(val)) ? serializeWindow(destination, domain, val) : val;\n        }\n    });\n}\n\nexport function deserializeMessage<T : mixed>(source : CrossDomainWindowType | ProxyWindow, origin : string, message : string) : T {\n    return deserialize(message, {\n        [ SERIALIZATION_TYPE.CROSS_DOMAIN_ZALGO_PROMISE ]: (serializedPromise)  => deserializePromise(source, origin, serializedPromise),\n        [ SERIALIZATION_TYPE.CROSS_DOMAIN_FUNCTION ]:      (serializedFunction) => deserializeFunction(source, origin, serializedFunction),\n        [ SERIALIZATION_TYPE.CROSS_DOMAIN_WINDOW ]:        (serializedWindow)   => deserializeWindow(source, origin, serializedWindow)\n    });\n}\n","/* @flow */\n\nimport { type CrossDomainWindowType, type DomainMatcher } from 'cross-domain-utils/src';\nimport { ZalgoPromise } from 'zalgo-promise/src';\nimport { serializeType, type CustomSerializedType, type Thenable } from 'universal-serialize/src';\n\nimport { SERIALIZATION_TYPE } from '../conf';\n\nimport { serializeFunction, type SerializedFunction } from './function';\nimport { ProxyWindow } from './window';\n\nexport type SerializedPromise = CustomSerializedType<typeof SERIALIZATION_TYPE.CROSS_DOMAIN_ZALGO_PROMISE, {\n    then : SerializedFunction\n}>;\n\nexport function serializePromise(destination : CrossDomainWindowType | ProxyWindow, domain : DomainMatcher, val : Thenable, key : string) : SerializedPromise {\n    return serializeType(SERIALIZATION_TYPE.CROSS_DOMAIN_ZALGO_PROMISE, {\n        then: serializeFunction(destination, domain, (resolve, reject) => val.then(resolve, reject), key)\n    });\n}\n\nexport function deserializePromise<T>(source : CrossDomainWindowType | ProxyWindow, origin : string, { then } : { then : Function }) : ZalgoPromise<T> {\n    return new ZalgoPromise(then);\n}\n","/* @flow */\n\nimport { isSameDomain, isSameTopWindow, isActuallySameDomain, getActualDomain, getDomain, type CrossDomainWindowType, type DomainMatcher } from 'cross-domain-utils/src';\n\nimport { SEND_STRATEGY, PROTOCOL, WILDCARD, WINDOW_PROP } from '../../conf';\nimport { needsGlobalMessagingForBrowser } from '../../lib';\n\nexport let SEND_MESSAGE_STRATEGIES = {};\n\n\nSEND_MESSAGE_STRATEGIES[SEND_STRATEGY.POST_MESSAGE] = (win : CrossDomainWindowType, serializedMessage : string, domain : DomainMatcher) => {\n\n    if (__TEST__) {\n        if (needsGlobalMessagingForBrowser() && isSameTopWindow(window, win) === false) {\n            return;\n        }\n    }\n\n    let domains;\n\n    if (Array.isArray(domain)) {\n        domains = domain;\n    } else if (typeof domain === 'string') {\n        domains = [ domain ];\n    } else {\n        domains = [ WILDCARD ];\n    }\n\n    domains = domains.map(dom => {\n\n        if (dom.indexOf(PROTOCOL.MOCK) === 0) {\n\n            if (window.location.protocol === PROTOCOL.FILE) {\n                return WILDCARD;\n            }\n\n            if (!isActuallySameDomain(win)) {\n                throw new Error(`Attempting to send messsage to mock domain ${ dom }, but window is actually cross-domain`);\n            }\n\n            // $FlowFixMe\n            return getActualDomain(win);\n        }\n\n        if (dom.indexOf(PROTOCOL.FILE) === 0) {\n            return WILDCARD;\n        }\n\n        return dom;\n    });\n\n    domains.forEach(dom => {\n        return win.postMessage(serializedMessage, dom);\n    });\n};\n\nif (__POST_ROBOT__.__IE_POPUP_SUPPORT__) {\n\n    let { sendBridgeMessage, needsBridgeForBrowser, isBridge } = require('../../bridge');\n\n    SEND_MESSAGE_STRATEGIES[SEND_STRATEGY.BRIDGE] = (win : CrossDomainWindowType, serializedMessage : string, domain : string) => {\n\n        if (!needsBridgeForBrowser() && !isBridge()) {\n            return;\n        }\n\n        if (isSameDomain(win)) {\n            throw new Error(`Post message through bridge disabled between same domain windows`);\n        }\n\n        if (isSameTopWindow(window, win) !== false) {\n            throw new Error(`Can only use bridge to communicate between two different windows, not between frames`);\n        }\n\n        return sendBridgeMessage(win, domain, serializedMessage);\n    };\n}\n\nif (__POST_ROBOT__.__IE_POPUP_SUPPORT__ || __POST_ROBOT__.__GLOBAL_MESSAGE_SUPPORT__) {\n    \n    SEND_MESSAGE_STRATEGIES[SEND_STRATEGY.GLOBAL] = (win : CrossDomainWindowType, serializedMessage : string) => {\n\n        if (!needsGlobalMessagingForBrowser()) {\n            return;\n        }\n\n        if (!isSameDomain(win)) {\n            throw new Error(`Post message through global disabled between different domain windows`);\n        }\n\n        if (isSameTopWindow(window, win) !== false) {\n            throw new Error(`Can only use global to communicate between two different windows, not between frames`);\n        }\n\n        // $FlowFixMe\n        let foreignGlobal = win[WINDOW_PROP.POSTROBOT];\n\n        if (!foreignGlobal) {\n            throw new Error(`Can not find postRobot global on foreign window`);\n        }\n\n        return foreignGlobal.receiveMessage({\n            source: window,\n            origin: getDomain(),\n            data:   serializedMessage\n        });\n    };\n}\n","/* @flow */\n\nimport { isWindowClosed, type CrossDomainWindowType } from 'cross-domain-utils/src';\nimport { ZalgoPromise } from 'zalgo-promise/src';\nimport { uniqueID, stringifyError } from 'belter/src';\n\nimport { MESSAGE_TYPE, CONFIG, MESSAGE_NAME, WILDCARD, WINDOW_PROP } from '../../conf';\nimport { serializeMessage } from '../../serialize';\nimport type { Message } from '../types';\n\nimport { SEND_MESSAGE_STRATEGIES } from './strategies';\n\nfunction logMessage(domain : string | $ReadOnlyArray<string>, message : Message) {\n    if (__DEBUG__) {\n        let level;\n\n        if (Object.keys(MESSAGE_NAME).map(key => MESSAGE_NAME[key]).indexOf(message.name) !== -1 || message.type === MESSAGE_TYPE.ACK) {\n            level = 'debug';\n        } else if (message.ack === 'error') {\n            level = 'error';\n        } else {\n            level = 'info';\n        }\n\n        // eslint-disable-next-line no-console\n        if (typeof console !== 'undefined' && typeof console[level] === 'function') {\n            // eslint-disable-next-line no-console\n            console[level]('postrobot_send', message.type.replace(/^postrobot_message_/, ''), '::', message.name, '::', domain || WILDCARD, '\\n\\n', message);\n        }\n    }\n}\n\nexport function sendMessage(win : CrossDomainWindowType, domain : string | $ReadOnlyArray<string>, message : Message) : ZalgoPromise<void> {\n    return ZalgoPromise.try(() => {\n\n        if (isWindowClosed(win)) {\n            throw new Error('Window is closed');\n        }\n\n        logMessage(domain, message);\n\n        const serializedMessage = serializeMessage(win, domain, {\n            [ WINDOW_PROP.POSTROBOT ]: {\n                id: uniqueID(),\n                ...message\n            }\n        });\n\n\n        let messages = [];\n\n        return ZalgoPromise.map(Object.keys(SEND_MESSAGE_STRATEGIES), strategyName => {\n\n            return ZalgoPromise.try(() => {\n\n                if (!CONFIG.ALLOWED_POST_MESSAGE_METHODS[strategyName]) {\n                    throw new Error(`Strategy disallowed: ${ strategyName }`);\n                }\n\n                return SEND_MESSAGE_STRATEGIES[strategyName](win, serializedMessage, domain);\n\n            }).then(() => {\n                messages.push(`${ strategyName }: success`);\n                return true;\n            }, err => {\n                messages.push(`${ strategyName }: ${ stringifyError(err) }\\n`);\n                return false;\n            });\n\n        }).then(results => {\n\n            let success = results.some(Boolean);\n            let status = `${ message.type } ${ message.name } ${ success ? 'success' : 'error' }:\\n  - ${ messages.join('\\n  - ') }\\n`;\n\n            if (!success) {\n                throw new Error(status);\n            }\n        });\n    });\n}\n","/* @flow */\n\nimport { getUserAgent } from 'cross-domain-utils/src';\n\nexport function needsGlobalMessagingForBrowser() : boolean {\n\n    if (getUserAgent(window).match(/MSIE|rv:11|trident|edge\\/12|edge\\/13/i)) {\n        return true;\n    }\n\n    return false;\n}\n","/* @flow */\n\nimport { type ZalgoPromise } from 'zalgo-promise/src';\nimport { matchDomain, type CrossDomainWindowType, type DomainMatcher } from 'cross-domain-utils/src';\nimport { isRegex, getOrSet } from 'belter/src';\n\nimport { global, globalStore, windowStore } from '../global';\nimport { WILDCARD } from '../conf';\n\nlet responseListeners = globalStore('responseListeners');\nlet requestListeners = windowStore('requestListeners');\nlet erroredResponseListeners = globalStore('erroredResponseListeners');\n\nexport function resetListeners() {\n    responseListeners.reset();\n    erroredResponseListeners.reset();\n}\n\nglobal.WINDOW_WILDCARD = global.WINDOW_WILDCARD || new (function WindowWildcard() { /* pass */ })();\n\nconst __DOMAIN_REGEX__ = '__domain_regex__';\n\nexport type RequestListenerType = {\n    handler : ({ source : CrossDomainWindowType, origin : string, data : mixed }) => (mixed | ZalgoPromise<mixed>),\n    handleError : (err : mixed) => void,\n    window : ?CrossDomainWindowType,\n    name : string,\n    domain : DomainMatcher\n};\n\nexport type ResponseListenerType = {\n    name : string,\n    window : CrossDomainWindowType,\n    domain : DomainMatcher,\n    respond : (err : ?mixed, result : ?mixed) => void,\n    ack? : ?boolean\n};\n\nexport function addResponseListener(hash : string, listener : ResponseListenerType) {\n    responseListeners.set(hash, listener);\n}\n\nexport function getResponseListener(hash : string) : ?ResponseListenerType {\n    return responseListeners.get(hash);\n}\n\nexport function deleteResponseListener(hash : string) {\n    responseListeners.del(hash);\n}\n\nexport function markResponseListenerErrored(hash : string) {\n    erroredResponseListeners.set(hash, true);\n}\n\nexport function isResponseListenerErrored(hash : string) : boolean {\n    return erroredResponseListeners.has(hash);\n}\n\nexport function getRequestListener({ name, win, domain } : { name : string, win : ?CrossDomainWindowType, domain : ?(string | RegExp) }) : ?RequestListenerType {\n\n    if (win === WILDCARD) {\n        win = null;\n    }\n\n    if (domain === WILDCARD) {\n        domain = null;\n    }\n\n    if (!name) {\n        throw new Error(`Name required to get request listener`);\n    }\n\n    for (let winQualifier of [ win, global.WINDOW_WILDCARD ]) {\n        if (!winQualifier) {\n            continue;\n        }\n\n        let nameListeners = requestListeners.get(winQualifier);\n\n        if (!nameListeners) {\n            continue;\n        }\n\n        let domainListeners = nameListeners[name];\n\n        if (!domainListeners) {\n            continue;\n        }\n\n        if (domain && typeof domain === 'string') {\n            if (domainListeners[domain]) {\n                return domainListeners[domain];\n            }\n\n            if (domainListeners[__DOMAIN_REGEX__]) {\n                for (let { regex, listener } of domainListeners[__DOMAIN_REGEX__]) {\n                    if (matchDomain(regex, domain)) {\n                        return listener;\n                    }\n                }\n            }\n        }\n\n        if (domainListeners[WILDCARD]) {\n            return domainListeners[WILDCARD];\n        }\n    }\n}\n\nexport function addRequestListener({ name, win, domain } : { name : string, win : ?CrossDomainWindowType, domain : ?DomainMatcher }, listener : RequestListenerType) : { cancel : () => void } {\n\n    if (!name || typeof name !== 'string') {\n        throw new Error(`Name required to add request listener`);\n    }\n\n    if (Array.isArray(win)) {\n        let listenersCollection = [];\n\n        for (let item of win) {\n            listenersCollection.push(addRequestListener({ name, domain, win: item }, listener));\n        }\n\n        return {\n            cancel() {\n                for (let cancelListener of listenersCollection) {\n                    cancelListener.cancel();\n                }\n            }\n        };\n    }\n\n    if (Array.isArray(domain)) {\n        let listenersCollection = [];\n\n        for (let item of domain) {\n            listenersCollection.push(addRequestListener({ name, win, domain: item }, listener));\n        }\n\n        return {\n            cancel() {\n                for (let cancelListener of listenersCollection) {\n                    cancelListener.cancel();\n                }\n            }\n        };\n    }\n\n    let existingListener = getRequestListener({ name, win, domain });\n\n    if (!win || win === WILDCARD) {\n        win = global.WINDOW_WILDCARD;\n    }\n\n    domain = domain || WILDCARD;\n\n    if (existingListener) {\n        if (win && domain) {\n            throw new Error(`Request listener already exists for ${ name } on domain ${ domain.toString() } for ${ win === global.WINDOW_WILDCARD ? 'wildcard' : 'specified' } window`);\n        } else if (win) {\n            throw new Error(`Request listener already exists for ${ name } for ${ win === global.WINDOW_WILDCARD ? 'wildcard' : 'specified' } window`);\n        } else if (domain) {\n            throw new Error(`Request listener already exists for ${ name } on domain ${ domain.toString() }`);\n        } else {\n            throw new Error(`Request listener already exists for ${ name }`);\n        }\n    }\n\n    let nameListeners = requestListeners.getOrSet(win, () => ({}));\n    // $FlowFixMe\n    let domainListeners = getOrSet(nameListeners, name, () => ({}));\n\n    let strDomain = domain.toString();\n\n    let regexListeners;\n    let regexListener;\n\n    if (isRegex(domain)) {\n        regexListeners = getOrSet(domainListeners, __DOMAIN_REGEX__, () => []);\n        regexListener = { regex: domain, listener };\n        regexListeners.push(regexListener);\n    } else {\n        domainListeners[strDomain] = listener;\n    }\n\n    return {\n        cancel() {\n            delete domainListeners[strDomain];\n\n            if (regexListener) {\n                regexListeners.splice(regexListeners.indexOf(regexListener, 1));\n\n                if (!regexListeners.length) {\n                    delete domainListeners[__DOMAIN_REGEX__];\n                }\n            }\n\n            if (!Object.keys(domainListeners).length) {\n                // $FlowFixMe\n                delete nameListeners[name];\n            }\n\n            // $FlowFixMe\n            if (win && !Object.keys(nameListeners).length) {\n                requestListeners.del(win);\n            }\n        }\n    };\n}\n","/* @flow */\n\nimport { ZalgoPromise } from 'zalgo-promise/src';\nimport { isWindowClosed, matchDomain, stringifyDomainPattern, type CrossDomainWindowType } from 'cross-domain-utils/src';\nimport { noop } from 'belter/src';\n\nimport { MESSAGE_TYPE, MESSAGE_ACK } from '../../conf';\nimport { sendMessage } from '../send';\nimport { getRequestListener, getResponseListener, deleteResponseListener, isResponseListenerErrored } from '../listeners';\nimport type { RequestMessage, AckResponseMessage, SuccessResponseMessage, ErrorResponseMessage } from '../types';\n\nexport let RECEIVE_MESSAGE_TYPES = {\n\n    [ MESSAGE_TYPE.REQUEST ](source : CrossDomainWindowType, origin : string, message : RequestMessage) : ZalgoPromise<void> {\n\n        let options = getRequestListener({ name: message.name, win: source, domain: origin });\n\n        function sendResponse(type : $Values<typeof MESSAGE_TYPE>, data = {}) : ZalgoPromise<void> {\n\n            if (message.fireAndForget || isWindowClosed(source)) {\n                return ZalgoPromise.resolve();\n            }\n\n            // $FlowFixMe\n            return sendMessage(source, origin, {\n                type,\n                hash:   message.hash,\n                name:   message.name,\n                ...data\n            });\n        }\n\n        return ZalgoPromise.all([\n\n            sendResponse(MESSAGE_TYPE.ACK),\n\n            ZalgoPromise.try(() => {\n\n                if (!options) {\n                    throw new Error(`No handler found for post message: ${ message.name } from ${ origin } in ${ window.location.protocol }//${ window.location.host }${ window.location.pathname }`);\n                }\n\n                if (!matchDomain(options.domain, origin)) {\n                    throw new Error(`Request origin ${ origin } does not match domain ${ options.domain.toString() }`);\n                }\n\n                let data = message.data;\n\n                return options.handler({ source, origin, data });\n\n            }).then(data => {\n                return sendResponse(MESSAGE_TYPE.RESPONSE, {\n                    ack:  MESSAGE_ACK.SUCCESS,\n                    data\n                });\n\n            }, error => {\n                return sendResponse(MESSAGE_TYPE.RESPONSE, {\n                    ack:  MESSAGE_ACK.ERROR,\n                    error\n                });\n            })\n\n        ]).then(noop).catch(err => {\n            if (options && options.handleError) {\n                return options.handleError(err);\n            } else {\n                throw err;\n            }\n        });\n    },\n\n    [ MESSAGE_TYPE.ACK ](source : CrossDomainWindowType, origin : string, message : AckResponseMessage) {\n\n        if (isResponseListenerErrored(message.hash)) {\n            return;\n        }\n\n        let options = getResponseListener(message.hash);\n\n        if (!options) {\n            throw new Error(`No handler found for post message ack for message: ${ message.name } from ${ origin } in ${ window.location.protocol }//${ window.location.host }${ window.location.pathname }`);\n        }\n\n        if (!matchDomain(options.domain, origin)) {\n            throw new Error(`Ack origin ${ origin } does not match domain ${ options.domain.toString() }`);\n        }\n\n        options.ack = true;\n    },\n\n    [ MESSAGE_TYPE.RESPONSE ](source : CrossDomainWindowType, origin : string, message : SuccessResponseMessage | ErrorResponseMessage) : void | ZalgoPromise<void> {\n\n        if (isResponseListenerErrored(message.hash)) {\n            return;\n        }\n\n        let options = getResponseListener(message.hash);\n\n        if (!options) {\n            throw new Error(`No handler found for post message response for message: ${ message.name } from ${ origin } in ${ window.location.protocol }//${ window.location.host }${ window.location.pathname }`);\n        }\n\n        if (!matchDomain(options.domain, origin)) {\n            throw new Error(`Response origin ${ origin } does not match domain ${ stringifyDomainPattern(options.domain) }`);\n        }\n\n        deleteResponseListener(message.hash);\n\n        if (message.ack === MESSAGE_ACK.ERROR) {\n            return options.respond(message.error, null);\n        } else if (message.ack === MESSAGE_ACK.SUCCESS) {\n            let data = message.data;\n            return options.respond(null, { source, origin, data });\n        }\n    }\n};\n","/* @flow */\n\nimport { isWindowClosed, type CrossDomainWindowType, getDomain, isSameTopWindow } from 'cross-domain-utils/src';\nimport { addEventListener, noop } from 'belter/src';\n\nimport { MESSAGE_NAME, WINDOW_PROP, MESSAGE_TYPE } from '../../conf';\nimport { markWindowKnown, needsGlobalMessagingForBrowser } from '../../lib';\nimport { deserializeMessage } from '../../serialize';\nimport { global, globalStore } from '../../global';\n\nimport { RECEIVE_MESSAGE_TYPES } from './types';\n\nlet receivedMessages = globalStore('receivedMessages');\n\ntype MessageEvent = {\n    source : CrossDomainWindowType,\n    origin : string,\n    data : string\n};\n\nfunction parseMessage(message : string, source : CrossDomainWindowType, origin : string) : ?Object {\n\n    let parsedMessage;\n\n    try {\n        parsedMessage = deserializeMessage(source, origin, message);\n    } catch (err) {\n        return;\n    }\n\n    if (!parsedMessage) {\n        return;\n    }\n\n    if (typeof parsedMessage !== 'object' || parsedMessage === null) {\n        return;\n    }\n\n    parsedMessage = parsedMessage[WINDOW_PROP.POSTROBOT];\n\n    if (!parsedMessage || typeof parsedMessage !== 'object' || parsedMessage === null) {\n        return;\n    }\n\n    if (!parsedMessage.type || typeof parsedMessage.type !== 'string') {\n        return;\n    }\n\n    if (!RECEIVE_MESSAGE_TYPES[parsedMessage.type]) {\n        return;\n    }\n\n    return parsedMessage;\n}\n\n\nexport function receiveMessage(event : MessageEvent) {\n\n    if (!window || window.closed) {\n        throw new Error(`Message recieved in closed window`);\n    }\n\n    try {\n        if (!event.source) {\n            return;\n        }\n    } catch (err) {\n        return;\n    }\n\n    let { source, origin, data } = event;\n\n    if (__TEST__) {\n        // $FlowFixMe\n        origin = getDomain(source);\n    }\n\n    let message = parseMessage(data, source, origin);\n\n    if (!message) {\n        return;\n    }\n\n    markWindowKnown(source);\n\n    if (receivedMessages.has(message.id)) {\n        return;\n    }\n\n    receivedMessages.set(message.id, true);\n\n    if (__DEBUG__) {\n        let level;\n\n        if (Object.keys(MESSAGE_NAME).map(key => MESSAGE_NAME[key]).indexOf(message.name) !== -1 || message.type === MESSAGE_TYPE.ACK) {\n            level = 'debug';\n        } else if (message.ack === 'error') {\n            level = 'error';\n        } else {\n            level = 'info';\n        }\n\n        // eslint-disable-next-line no-console\n        if (typeof console !== 'undefined' && typeof console[level] === 'function') {\n            // eslint-disable-next-line no-console\n            console[level]('postrobot_receive', message.type.replace(/^postrobot_message_/, ''), '::', message.name, '::', origin, '\\n\\n', message);\n        }\n    }\n\n    if (isWindowClosed(source) && !message.fireAndForget) {\n        return;\n    }\n\n    RECEIVE_MESSAGE_TYPES[message.type](source, origin, message);\n}\n\nexport function messageListener(event : { source : CrossDomainWindowType, origin : string, data : string, sourceElement : CrossDomainWindowType, originalEvent? : { origin : string } }) {\n\n    try {\n        noop(event.source);\n    } catch (err) {\n        return;\n    }\n\n    // $FlowFixMe\n    let messageEvent : MessageEvent = {\n        source: event.source || event.sourceElement,\n        origin: event.origin || (event.originalEvent && event.originalEvent.origin),\n        data:   event.data\n    };\n\n    if (!messageEvent.source) {\n        return;\n    }\n\n    if (!messageEvent.origin) {\n        throw new Error(`Post message did not have origin domain`);\n    }\n\n    if (__TEST__) {\n        if (needsGlobalMessagingForBrowser() && isSameTopWindow(messageEvent.source, window) === false) {\n            return;\n        }\n    }\n\n    receiveMessage(messageEvent);\n}\n\nexport function listenForMessages() {\n    // $FlowFixMe\n    addEventListener(window, 'message', messageListener);\n}\n\nglobal.receiveMessage = receiveMessage;\n","/* @flow */\n\nimport { ZalgoPromise } from 'zalgo-promise/src';\nimport { getAncestor, isAncestor, isWindowClosed, getDomain, matchDomain, type CrossDomainWindowType, type DomainMatcher } from 'cross-domain-utils/src';\nimport { uniqueID, isRegex } from 'belter/src';\n\n\nimport { CONFIG, MESSAGE_TYPE, WILDCARD } from '../conf';\nimport { sendMessage, addResponseListener, deleteResponseListener, markResponseListenerErrored, type ResponseListenerType } from '../drivers';\nimport { awaitWindowHello, sayHello, isWindowKnown } from '../lib';\nimport { global, windowStore } from '../global';\n\nexport let requestPromises = windowStore('requestPromises');\n\ntype WindowResolverType = CrossDomainWindowType | string | HTMLIFrameElement;\n\ntype RequestOptionsType = {\n    window? : ?WindowResolverType,\n    domain? : ?DomainMatcher,\n    name? : ?string,\n    data? : ?Object,\n    fireAndForget? : ?boolean,\n    timeout? : ?number\n};\n\ntype ResponseMessageEvent = {\n    source : CrossDomainWindowType,\n    origin : string,\n    data : Object\n};\n\nexport function request(options : RequestOptionsType) : ZalgoPromise<ResponseMessageEvent> {\n\n    let prom = ZalgoPromise.try(() => {\n\n        if (!options.name) {\n            throw new Error('Expected options.name');\n        }\n\n        let name = options.name;\n        let targetWindow : ?CrossDomainWindowType;\n        let domain : DomainMatcher;\n\n        if (typeof options.window === 'string') {\n            let el = document.getElementById(options.window);\n\n            if (!el) {\n                throw new Error(`Expected options.window ${ Object.prototype.toString.call(options.window) } to be a valid element id`);\n            }\n\n            if (el.tagName.toLowerCase() !== 'iframe') {\n                throw new Error(`Expected options.window ${ Object.prototype.toString.call(options.window) } to be an iframe`);\n            }\n\n            // $FlowFixMe\n            if (!el.contentWindow) {\n                throw new Error('Iframe must have contentWindow.  Make sure it has a src attribute and is in the DOM.');\n            }\n\n            // $FlowFixMe\n            targetWindow = el.contentWindow;\n\n        } else if (options.window instanceof HTMLIFrameElement) {\n\n            if (options.window.tagName.toLowerCase() !== 'iframe') {\n                throw new Error(`Expected options.window ${ Object.prototype.toString.call(options.window) } to be an iframe`);\n            }\n\n            if (options.window && !options.window.contentWindow) {\n                throw new Error('Iframe must have contentWindow.  Make sure it has a src attribute and is in the DOM.');\n            }\n\n            if (options.window && options.window.contentWindow) {\n                // $FlowFixMe\n                targetWindow = options.window.contentWindow;\n            }\n        } else {\n            targetWindow = options.window;\n        }\n\n        if (!targetWindow) {\n            throw new Error('Expected options.window to be a window object, iframe, or iframe element id.');\n        }\n\n        const win = targetWindow;\n\n        domain = options.domain || WILDCARD;\n\n        let hash = `${ options.name }_${ uniqueID() }`;\n\n        if (isWindowClosed(win)) {\n            throw new Error('Target window is closed');\n        }\n\n        let hasResult = false;\n\n        let reqPromises = requestPromises.getOrSet(win, () => []);\n\n        let requestPromise = ZalgoPromise.try(() => {\n\n            if (isAncestor(window, win)) {\n                return awaitWindowHello(win, options.timeout || CONFIG.CHILD_WINDOW_TIMEOUT);\n            }\n\n        }).then(({ domain: origin } = {}) => {\n\n            if (isRegex(domain) && !origin) {\n                return sayHello(win);\n            }\n\n        }).then(({ domain: origin } = {}) => {\n\n            if (isRegex(domain)) {\n                if (!matchDomain(domain, origin)) {\n                    throw new Error(`Remote window domain ${ origin } does not match regex: ${ domain.toString() }`);\n                }\n\n                domain = origin;\n            }\n\n            if (typeof domain !== 'string' && !Array.isArray(domain)) {\n                throw new TypeError(`Expected domain to be a string or array`);\n            }\n\n            const actualDomain = domain;\n\n            return new ZalgoPromise((resolve, reject) => {\n\n                let responseListener : ResponseListenerType;\n\n                if (!options.fireAndForget) {\n                    responseListener = {\n                        name,\n                        window: win,\n                        domain: actualDomain,\n                        respond(err, result) {\n                            if (!err) {\n                                hasResult = true;\n                                reqPromises.splice(reqPromises.indexOf(requestPromise, 1));\n                            }\n\n                            if (err) {\n                                reject(err);\n                            } else {\n                                resolve(result);\n                            }\n                        }\n                    };\n\n                    addResponseListener(hash, responseListener);\n                }\n\n                sendMessage(win, actualDomain, {\n                    type:          MESSAGE_TYPE.REQUEST,\n                    hash,\n                    name,\n                    data:          options.data,\n                    fireAndForget: Boolean(options.fireAndForget)\n                }).catch(reject);\n\n                if (options.fireAndForget) {\n                    return resolve();\n                }\n\n                let totalAckTimeout = isWindowKnown(win) ? CONFIG.ACK_TIMEOUT_KNOWN : CONFIG.ACK_TIMEOUT;\n                let totalResTimeout = options.timeout || CONFIG.RES_TIMEOUT;\n\n                let ackTimeout = totalAckTimeout;\n                let resTimeout = totalResTimeout;\n\n                let cycleTime = 100;\n\n                let cycle = () => {\n\n                    if (hasResult) {\n                        return;\n                    }\n\n                    if (isWindowClosed(win)) {\n\n                        if (!responseListener.ack) {\n                            return reject(new Error(`Window closed for ${ name } before ack`));\n                        }\n\n                        return reject(new Error(`Window closed for ${ name } before response`));\n                    }\n\n                    ackTimeout = Math.max(ackTimeout - cycleTime, 0);\n                    if (resTimeout !== -1) {\n                        resTimeout = Math.max(resTimeout - cycleTime, 0);\n                    }\n\n                    let hasAck = responseListener.ack;\n\n                    if (hasAck) {\n\n                        if (resTimeout === -1) {\n                            return;\n                        }\n\n                        cycleTime = Math.min(resTimeout, 2000);\n\n                    } else if (ackTimeout === 0) {\n                        return reject(new Error(`No ack for postMessage ${ name } in ${ getDomain() } in ${ totalAckTimeout }ms`));\n\n                    } else if (resTimeout === 0) {\n                        return reject(new Error(`No response for postMessage ${ name } in ${ getDomain() } in ${ totalResTimeout }ms`));\n                    }\n\n                    setTimeout(cycle, cycleTime);\n                };\n\n                setTimeout(cycle, cycleTime);\n            });\n        });\n\n        requestPromise.catch(() => {\n            markResponseListenerErrored(hash);\n            deleteResponseListener(hash);\n        });\n\n        reqPromises.push(requestPromise);\n\n        return requestPromise;\n    });\n\n    return prom;\n}\n\nexport function send(window : WindowResolverType, name : string, data : ?Object, options : ?RequestOptionsType) : ZalgoPromise<ResponseMessageEvent> {\n\n    options = options || {};\n    options.window = window;\n    options.name = name;\n    options.data = data;\n\n    return request(options);\n}\n\nexport function sendToParent(name : string, data : ?Object, options : ?RequestOptionsType) : ZalgoPromise<ResponseMessageEvent> {\n\n    let win = getAncestor();\n\n    if (!win) {\n        return new ZalgoPromise((resolve, reject) => reject(new Error('Window does not have a parent')));\n    }\n\n    return send(win, name, data, options);\n}\n\nexport function client(options : RequestOptionsType = {}) : { send : (string, ?Object) => ZalgoPromise<ResponseMessageEvent> } {\n\n    if (!options.window) {\n        throw new Error(`Expected options.window`);\n    }\n\n    const win = options.window;\n\n    return {\n        send(name : string, data : ?Object) : ZalgoPromise<ResponseMessageEvent> {\n            return send(win, name, data, options);\n        }\n    };\n}\n\nglobal.send = send;\n","/* @flow */\n\nimport { isWindowClosed, type CrossDomainWindowType, type DomainMatcher } from 'cross-domain-utils/src';\nimport { ZalgoPromise } from 'zalgo-promise/src';\nimport { once as onceFunction, safeInterval } from 'belter/src';\n\nimport { addRequestListener, type RequestListenerType } from '../drivers';\nimport { WILDCARD } from '../conf';\nimport { global } from '../global';\n\ntype ErrorHandlerType = (err : mixed) => void;\ntype HandlerType = ({ source : CrossDomainWindowType, origin : string, data : mixed }) => (void | mixed | ZalgoPromise<mixed>);\n\ntype ServerOptionsType = {\n    handler? : ?HandlerType,\n    errorHandler? : ?ErrorHandlerType,\n    window? : CrossDomainWindowType,\n    name? : ?string,\n    domain? : ?DomainMatcher,\n    once? : ?boolean,\n    errorOnClose? : ?boolean\n};\n\nexport function listen(options : ServerOptionsType) : { cancel : () => void } {\n\n    if (!options.name) {\n        throw new Error('Expected options.name');\n    }\n\n    if (!options.handler) {\n        throw new Error('Expected options.handler');\n    }\n\n    const name = options.name;\n    const win = options.window;\n    const domain = options.domain;\n\n    let listenerOptions : RequestListenerType = {\n        handler:     options.handler,\n        handleError: options.errorHandler || (err => {\n            throw err;\n        }),\n        window: win,\n        domain: domain || WILDCARD,\n        name\n    };\n\n    let requestListener = addRequestListener({ name, win, domain }, listenerOptions);\n\n    if (options.once) {\n        let handler = listenerOptions.handler;\n        listenerOptions.handler = onceFunction(function listenOnce() : mixed | ZalgoPromise<mixed> {\n            requestListener.cancel();\n            return handler.apply(this, arguments);\n        });\n    }\n\n    if (listenerOptions.window && options.errorOnClose) {\n        let interval = safeInterval(() => {\n            if (win && typeof win === 'object' && isWindowClosed(win)) {\n                interval.cancel();\n                listenerOptions.handleError(new Error('Post message target window is closed'));\n            }\n        }, 50);\n    }\n\n    return {\n        cancel() {\n            requestListener.cancel();\n        }\n    };\n}\n\nexport function on(name : string, options : ServerOptionsType | HandlerType, handler : ?HandlerType) : { cancel : () => void } {\n\n    if (typeof options === 'function') {\n        handler = options;\n        options = {};\n    }\n\n    options = options || {};\n\n    options.name = name;\n    options.handler = handler || options.handler;\n\n    return listen(options);\n}\n\nexport function once(name : string, options : ?(ServerOptionsType | HandlerType) = {}, handler : ?HandlerType) : ZalgoPromise<{ source : mixed, origin : string, data : Object }> {\n\n    if (typeof options === 'function') {\n        handler = options;\n        options = {};\n    }\n\n    options = options || {};\n    handler = handler || options.handler;\n    let errorHandler = options.errorHandler;\n\n    let promise = new ZalgoPromise((resolve, reject) => {\n\n        options = options || {};\n\n        options.name = name;\n        options.once = true;\n\n        options.handler = (event) => {\n            resolve(event);\n            if (handler) {\n                return handler(event);\n            }\n        };\n\n        options.errorHandler = (err) => {\n            reject(err);\n            if (errorHandler) {\n                return errorHandler(err);\n            }\n        };\n    });\n\n    let onceListener = listen(options);\n    promise.cancel = onceListener.cancel;\n\n    return promise;\n}\n\nexport function listener(options : ServerOptionsType = {}) : { on : (name : string, handler : HandlerType) => { cancel : () => void } } {\n\n    return {\n        on(name : string, handler : HandlerType) : { cancel : () => void } {\n            return on(name, options, handler);\n        }\n    };\n}\n\nglobal.on = on;\n","/* @flow */\n\nimport { WINDOW_PROP } from '../conf';\nimport { messageListener } from '../drivers';\n\nexport { CONFIG } from '../conf';\n\nexport function disable() {\n    delete window[WINDOW_PROP.POSTROBOT];\n    window.removeEventListener('message', messageListener);\n}\n","/* @flow */\n\nimport { getAncestor } from 'cross-domain-utils/src';\n\nexport * from './client';\nexport * from './server';\nexport * from './config';\n\nexport let parent = getAncestor();\n","/* @flow */\n\nimport { type CrossDomainWindowType } from 'cross-domain-utils/src';\nimport { noop } from 'belter/src';\n\nimport { requestPromises } from './public';\n\nexport function cleanUpWindow(win : CrossDomainWindowType) {\n    for (let promise of requestPromises.get(win, [])) {\n        promise.reject(new Error(`Window cleaned up before response`)).catch(noop);\n    }\n}\n","/* @flow */\n\nimport { initHello } from './lib';\nimport { listenForMessages } from './drivers';\nimport { global } from './global';\n\nexport * from './public';\nexport { markWindowKnown } from './lib';\nexport { serializeMessage, deserializeMessage, ProxyWindow } from './serialize';\nexport { cleanUpWindow } from './clean';\nexport { ZalgoPromise as Promise } from 'zalgo-promise/src';\nexport let bridge = __POST_ROBOT__.__IE_POPUP_SUPPORT__ ? require('./bridge/interface') : null;\n\nif (!global.initialized) {\n    global.initialized = true;\n\n    listenForMessages();\n\n    if (bridge) {\n        bridge.openTunnelToOpener();\n    }\n\n    initHello();\n}\n","/* @flow */\n\n// eslint-disable-next-line import/no-namespace\nimport * as INTERFACE from './interface';\n\nexport * from './interface';\nexport default INTERFACE;\n","/* @flow */\n\nimport { WINDOW_TYPE } from 'cross-domain-utils/src';\n\nexport const ZOID = `zoid`;\n\nexport const __ZOID__ = `__${ ZOID }__`;\n\nexport const POST_MESSAGE = {\n    DELEGATE:       `${ ZOID }_delegate`,\n    ALLOW_DELEGATE: `${ ZOID }_allow_delegate`\n};\n\nexport const PROP_TYPE = {\n    STRING:   `string`,\n    OBJECT:   `object`,\n    FUNCTION: `function`,\n    BOOLEAN:  `boolean`,\n    NUMBER:   `number`,\n    ARRAY:    `array`\n};\n\nexport const INITIAL_PROPS = {\n    RAW: 'raw',\n    UID: 'uid'\n};\n\nexport const WINDOW_REFERENCES = {\n    OPENER: `opener`,\n    TOP:    `top`,\n    PARENT: `parent`,\n    GLOBAL: `global`\n};\n\nexport const PROP_SERIALIZATION = {\n    JSON:   ('json' : 'json'),\n    DOTIFY: ('dotify' : 'dotify'),\n    BASE64: ('base64' : 'base64')\n};\n\nexport const CONTEXT = WINDOW_TYPE;\n\nexport const CLASS = {\n    OUTLET:            `${ ZOID }-outlet`,\n    COMPONENT_FRAME:   `${ ZOID }-component-frame`,\n    PRERENDER_FRAME:   `${ ZOID }-prerender-frame`,\n    VISIBLE:           `${ ZOID }-visible`,\n    INVISIBLE:         `${ ZOID }-invisible`\n};\n\nexport const WILDCARD = '*';\n\nexport const DEFAULT_DIMENSIONS = {\n    WIDTH:  '300px',\n    HEIGHT: '150px'\n};\n","/* @flow */\n\nimport { isSameDomain, type CrossDomainWindowType } from 'cross-domain-utils/src';\n\nimport { __ZOID__ } from '../constants';\n\nexport function globalFor(win : CrossDomainWindowType) : ?Object {\n\n    if (!isSameDomain(win)) {\n        return;\n    }\n\n    if (!win[__ZOID__]) {\n        win[__ZOID__] = {};\n    }\n\n    return win[__ZOID__];\n}\n\nexport function localGlobal() : Object {\n    const global = globalFor(window);\n\n    if (!global) {\n        throw new Error(`Could not get local global`);\n    }\n\n    return global;\n}\n\nexport const global = localGlobal();\n","/* @flow */\n\nimport { memoize, stringifyError, base64encode, base64decode } from 'belter/src';\n\nimport { ZOID } from '../constants';\nimport type { ChildPayload } from '../parent';\n\nexport function buildChildWindowName(name : string, childPayload : ChildPayload) : string {\n    return `__${ ZOID }__${ name }__${ base64encode(JSON.stringify(childPayload)) }__`;\n}\n\nexport const parseChildWindowName = memoize(() : ChildPayload => {\n    if (!window.name) {\n        throw new Error(`No window name`);\n    }\n\n    const [ , zoidcomp, name, encodedPayload ] = window.name.split('__');\n\n    if (zoidcomp !== ZOID) {\n        throw new Error(`Window not rendered by zoid - got ${ zoidcomp }`);\n    }\n\n    if (!name) {\n        throw new Error(`Expected component name`);\n    }\n\n    if (!encodedPayload) {\n        throw new Error(`Expected encoded payload`);\n    }\n\n    try {\n        return JSON.parse(base64decode(encodedPayload));\n    } catch (err) {\n        throw new Error(`Can not decode window name payload: ${ encodedPayload }: ${ stringifyError(err) }`);\n    }\n});\n\nexport const isZoidComponentWindow = memoize(() => {\n    try {\n        parseChildWindowName();\n    } catch (err) {\n        return false;\n    }\n\n    return true;\n});\n","/* @flow */\n\nimport { getDomain, isSameDomain, type CrossDomainWindowType } from 'cross-domain-utils/src';\n\nimport type { Component } from '../component';\nimport type { PropsType, MixedPropDefinitionType } from '../component/props';\n\nimport type { ChildHelpers } from './index';\n\nexport function normalizeChildProp<T, P>(component : Component<P>, props : (PropsType<P>), key : string, value : T, helpers : ChildHelpers<P>) : ?T  {\n\n    // $FlowFixMe\n    const prop : MixedPropDefinitionType<P> = component.getPropDefinition(key);\n\n    if (!prop) {\n        return value;\n    }\n\n    const { focus, close, resize, onError, onPropsChange } = helpers;\n\n    if (typeof prop.childDecorate === 'function') {\n        return prop.childDecorate({ value, focus, close, resize, onError, onPropsChange });\n    }\n\n    return value;\n}\n\n// eslint-disable-next-line max-params\nexport function normalizeChildProps<P>(parentComponentWindow : CrossDomainWindowType, component : Component<P>, props : (PropsType<P>), origin : string, helpers : ChildHelpers<P>, isUpdate : boolean = false) : (PropsType<P>) {\n\n    const result = {};\n\n    // $FlowFixMe\n    for (const key of Object.keys(props)) {\n        const prop = component.getPropDefinition(key);\n\n        if (prop && prop.sameDomain && (origin !== getDomain(window) || !isSameDomain(parentComponentWindow))) {\n            continue;\n        }\n\n        const value = normalizeChildProp(component, props, key, props[key], helpers);\n\n        result[key] = value;\n        if (prop && prop.alias && !result[prop.alias]) {\n            result[prop.alias] = value;\n        }\n    }\n\n    if (!isUpdate) {\n        for (const key of component.getPropNames()) {\n            if (!props.hasOwnProperty(key)) {\n                result[key] = normalizeChildProp(component, props, key, props[key], helpers);\n            }\n        }\n    }\n\n    // $FlowFixMe\n    return result;\n}\n","/* @flow */\n/* eslint max-lines: 0 */\n\nimport { isSameDomain, matchDomain, getDomain, getOpener, getTop, getParent,\n    getNthParentFromTop, getAncestor, getAllFramesInWindow, type CrossDomainWindowType, onCloseWindow } from 'cross-domain-utils/src';\nimport { markWindowKnown, deserializeMessage } from 'post-robot/src';\nimport { ZalgoPromise } from 'zalgo-promise/src';\nimport { extend, noop, memoized, waitForDocumentBody, onResize, getElementSafe } from 'belter/src';\n\nimport { parseChildWindowName, globalFor } from '../lib';\nimport { CONTEXT, INITIAL_PROPS, WINDOW_REFERENCES } from '../constants';\nimport type { Component } from '../component';\nimport type { PropsType } from '../component/props';\nimport type { WindowRef, PropRef, ParentExportsType } from '../parent';\n\nimport { normalizeChildProps } from './props';\n\nexport type ChildExportsType<P> = {|\n    updateProps : (props : (PropsType<P>)) => ZalgoPromise<void>,\n    close : () => ZalgoPromise<void>\n|};\n\nexport type ChildHelpers<P> = {|\n    close : () => ZalgoPromise<void>,\n    focus : () => ZalgoPromise<void>,\n    resize : ({ width : ?number, height : ?number }) => ZalgoPromise<void>,\n    onError : (mixed) => ZalgoPromise<void>,\n    onPropsChange : ((PropsType<P>) => void) => void\n|};\n\n/*  Child Component\n    ---------------\n\n    This is the portion of code which runs inside the frame or popup window containing the component's implementation.\n\n    When the component author calls myComponent.attach(), it creates a new instance of ChildComponent, which is then\n    responsible for managing the state and messaging back up to the parent, and providing props for the component to\n    utilize.\n*/\n\nexport class ChildComponent<P> {\n\n    component : Component<P>\n    props : PropsType<P>\n    context : string\n    parent : ParentExportsType<P>\n    parentComponentWindow : CrossDomainWindowType\n\n    onPropHandlers : Array<(PropsType<P>) => void> // eslint-disable-line flowtype/no-mutable-array\n    autoResize : { width : boolean, height : boolean, element? : string }\n\n    constructor(component : Component<P>) {\n        ZalgoPromise.try(() => {\n            this.component = component;\n            this.onPropHandlers = [];\n            \n            const { parent, domain, exports, context, props } = parseChildWindowName();\n\n            this.context = context;\n            this.parentComponentWindow = this.getWindowByRef(parent);\n            this.parent = deserializeMessage(this.parentComponentWindow, domain, exports);\n\n            this.checkParentDomain(domain);\n\n            const initialProps = this.getPropsByRef(this.parentComponentWindow, domain, props);\n            this.setProps(initialProps, domain);\n            markWindowKnown(this.parentComponentWindow);\n            \n            this.watchForClose();\n\n            return this.parent.init(this.buildExports());\n\n        }).then(() => {\n            return this.watchForResize();\n\n        }).catch(err => {\n            this.onError(err);\n        });\n    }\n\n    getHelpers() : ChildHelpers<P> {\n        return {\n            focus:         () => this.focus(),\n            close:         () => this.close(),\n            resize:        ({ width, height }) => this.resize({ width, height }),\n            onError:       (err) => this.onError(err),\n            onPropsChange: (handler) => this.onPropsChange(handler)\n        };\n    }\n\n    checkParentDomain(domain : string) {\n        if (!matchDomain(this.component.allowedParentDomains, domain)) {\n            throw new Error(`Can not be rendered by domain: ${ domain }`);\n        }\n    }\n\n    onPropsChange(handler : Function) {\n        this.onPropHandlers.push(handler);\n    }\n\n    getPropsByRef(parentComponentWindow : CrossDomainWindowType, domain : string, { type, value, uid } : PropRef) : (PropsType<P>) {\n        let props;\n\n        if (type === INITIAL_PROPS.RAW) {\n            props = value;\n        } else if (type === INITIAL_PROPS.UID) {\n\n            if (!isSameDomain(parentComponentWindow)) {\n                if (window.location.protocol === 'file:') {\n                    throw new Error(`Can not get props from file:// domain`);\n                }\n\n                throw new Error(`Parent component window is on a different domain - expected ${ getDomain() } - can not retrieve props`);\n            }\n\n            const global = globalFor(parentComponentWindow);\n\n            if (!global) {\n                throw new Error(`Can not find global for parent component - can not retrieve props`);\n            }\n\n            props = global.props[uid];\n        }\n\n        if (!props) {\n            throw new Error(`Initial props not found`);\n        }\n\n        return deserializeMessage(parentComponentWindow, domain, props);\n    }\n\n    getWindowByRef(ref : WindowRef) : CrossDomainWindowType {\n        const { type } = ref;\n        let result;\n    \n        if (type === WINDOW_REFERENCES.OPENER) {\n            result = getOpener(window);\n    \n        } else if (type === WINDOW_REFERENCES.TOP) {\n            result = getTop(window);\n    \n        } else if (type === WINDOW_REFERENCES.PARENT) {\n            // $FlowFixMe\n            const { distance } = ref;\n    \n            if (distance) {\n                result = getNthParentFromTop(window, distance);\n            } else {\n                result = getParent(window);\n            }\n        }\n    \n        if (type === WINDOW_REFERENCES.GLOBAL) {\n            // $FlowFixMe\n            const { uid } = ref;\n            const ancestor = getAncestor(window);\n    \n            if (ancestor) {\n                for (const frame of getAllFramesInWindow(ancestor)) {\n                    const global = globalFor(frame);\n    \n                    if (global && global.windows && global.windows[uid]) {\n                        result = global.windows[uid];\n                        break;\n                    }\n                }\n            }\n        }\n    \n        if (!result) {\n            throw new Error(`Unable to find ${ type } window`);\n        }\n    \n        return result;\n    }\n\n    getProps() : PropsType<P> {\n        // $FlowFixMe\n        this.props = this.props || {};\n        return this.props;\n    }\n\n\n    setProps(props : PropsType<P>, origin : string, isUpdate : boolean = false) {\n        const helpers = this.getHelpers();\n        const existingProps = this.getProps();\n        const normalizedProps = normalizeChildProps(this.parentComponentWindow, this.component, props, origin, helpers, isUpdate);\n\n        extend(existingProps, normalizedProps);\n\n        for (const handler of this.onPropHandlers) {\n            handler.call(this, existingProps);\n        }\n    }\n\n    watchForClose() {\n        window.addEventListener('beforeunload', () => {\n            return this.parent.checkClose.fireAndForget();\n        });\n\n        window.addEventListener('unload', () => {\n            return this.parent.checkClose.fireAndForget();\n        });\n\n        onCloseWindow(this.parentComponentWindow, () => {\n            this.destroy();\n        });\n    }\n\n    enableAutoResize({ width = false, height = true, element = 'body' } : { width : boolean, height : boolean, element : string } = {}) {\n        this.autoResize = { width, height, element };\n        this.watchForResize();\n    }\n\n    getAutoResize() : { width : boolean, height : boolean, element : ?HTMLElement } {\n        let { width = false, height = false, element = 'body' } = this.autoResize || this.component.autoResize || {};\n        element = getElementSafe(element);\n        return { width, height, element };\n    }\n\n    @memoized\n    watchForResize() : ?ZalgoPromise<void> {\n        return waitForDocumentBody().then(() => {\n            const { width, height, element } = this.getAutoResize();\n\n            if (!element) {\n                return;\n            }\n\n            if (!width && !height) {\n                return;\n            }\n    \n            if (this.context === CONTEXT.POPUP) {\n                return;\n            }\n\n            onResize(element, ({ width: newWidth, height: newHeight }) => {\n                this.resize({\n                    width:  width ? newWidth : undefined,\n                    height: height ? newHeight : undefined\n                });\n            }, { width, height });\n        });\n    }\n\n    buildExports() : ChildExportsType<P> {\n\n        const self = this;\n\n        return {\n            updateProps(props : (PropsType<P>)) : ZalgoPromise<void> {\n                return ZalgoPromise.try(() => self.setProps(props, this.origin, true));\n            },\n\n            close() : ZalgoPromise<void> {\n                return ZalgoPromise.try(() => self.destroy());\n            }\n        };\n    }\n\n    resize({ width, height } : { width : ?number, height : ?number }) : ZalgoPromise<void> {\n        return this.parent.resize.fireAndForget({ width, height });\n    }\n\n    close() : ZalgoPromise<void> {\n        return this.parent.close();\n    }\n    \n    destroy() : ZalgoPromise<void> {\n        return ZalgoPromise.try(() => {\n            window.close();\n        });\n    }\n\n    focus() : ZalgoPromise<void> {\n        return ZalgoPromise.try(() => {\n            window.focus();\n        });\n    }\n\n    onError(err : mixed) : ZalgoPromise<void> {\n        // eslint-disable-next-line promise/no-promise-in-callback\n        return ZalgoPromise.try(() => {\n            if (this.parent && this.parent.onError) {\n                return this.parent.onError(err);\n            }\n        }).catch(noop).then(() => {\n            throw err;\n        });\n    }\n}\n","/* @flow */\n\nimport { ZalgoPromise } from 'zalgo-promise/src';\nimport { cleanUpWindow, ProxyWindow } from 'post-robot/src';\nimport { type CrossDomainWindowType, type SameDomainWindowType, assertSameDomain, isSameDomain } from 'cross-domain-utils/src';\nimport { iframe, popup, toCSS,\n    destroyElement, normalizeDimension, watchElementForClose,\n    awaitFrameWindow, addClass, removeClass, uniqueID } from 'belter/src';\n\nimport { CONTEXT, CLASS } from '../constants';\n\n\nexport type ContextDriverType = {|\n\n    renderedIntoContainer : boolean,\n    callChildToClose : boolean,\n\n    open : () => ZalgoPromise<ProxyWindow>,\n    resize? : ({ width : ?number, height : ?number }) => void,\n\n    openPrerender : (CrossDomainWindowType) => ZalgoPromise<?SameDomainWindowType>,\n    switchPrerender? : () => void,\n\n    delegate : $ReadOnlyArray<string>\n|};\n\n/*  Render Drivers\n    --------------\n\n    There are various differences in how we treat:\n\n    - Opening frames and windows\n    - Rendering up to the parent\n    - Resizing\n    - etc.\n\n    based on the context we're rendering to.\n\n    These render drivers split this functionality out in a driver pattern, so our component code doesn't bunch up into a\n    series of if-popup-then-else-if-iframe code.\n*/\n\nexport const RENDER_DRIVERS : { [string] : ContextDriverType } = {};\n\n// Iframe context is rendered inline on the page, without any kind of parent template. It's the one context that is designed\n// to feel like a native element on the page.\n\nRENDER_DRIVERS[CONTEXT.IFRAME] = {\n\n    renderedIntoContainer: true,\n    callChildToClose:      false,\n\n    open() : ZalgoPromise<ProxyWindow> {\n\n        const frame = iframe({\n            attributes: {\n                title: this.component.name,\n                ...this.component.attributes.iframe\n            },\n            class: [\n                CLASS.COMPONENT_FRAME,\n                CLASS.INVISIBLE\n            ]\n        }, this.element);\n\n        this.clean.set('iframe', frame);\n\n        return awaitFrameWindow(frame).then(win => {\n            const detectClose = () => {\n                return this.close();\n            };\n\n            const iframeWatcher = watchElementForClose(frame, detectClose);\n            const elementWatcher = watchElementForClose(this.element, detectClose);\n\n            this.clean.register(() => {\n                iframeWatcher.cancel();\n                elementWatcher.cancel();\n                cleanUpWindow(win);\n                destroyElement(frame);\n            });\n\n            return ProxyWindow.toProxyWindow(win);\n        });\n    },\n\n    openPrerender() : ZalgoPromise<?SameDomainWindowType> {\n\n        const prerenderIframe = iframe({\n            attributes: {\n                name: `__zoid_prerender_frame__${ this.component.name }_${ uniqueID() }__`,\n                ...this.component.attributes.iframe\n            },\n            class: [\n                CLASS.PRERENDER_FRAME,\n                CLASS.VISIBLE\n            ]\n        }, this.element);\n\n        this.clean.set('prerenderIframe', prerenderIframe);\n\n        return awaitFrameWindow(prerenderIframe).then(prerenderFrameWindow => {\n            this.clean.register(() => destroyElement(prerenderIframe));\n            return assertSameDomain(prerenderFrameWindow);\n        });\n    },\n\n    switchPrerender() {\n        addClass(this.prerenderIframe, CLASS.INVISIBLE);\n        removeClass(this.prerenderIframe, CLASS.VISIBLE);\n\n        if (this.iframe) {\n            addClass(this.iframe, CLASS.VISIBLE);\n            removeClass(this.iframe, CLASS.INVISIBLE);\n        }\n\n        setTimeout(() => destroyElement(this.prerenderIframe), 1);\n    },\n\n    delegate: [\n        'renderContainer',\n        'prerender',\n        'resize',\n        'openPrerender',\n        'switchPrerender',\n        'open'\n    ],\n\n    resize({ width, height } : { width : ?number, height : ?number }) {\n\n        if (typeof width === 'number') {\n            this.element.style.width   = toCSS(width);\n        }\n\n        if (typeof height === 'number') {\n            this.element.style.height = toCSS(height);\n        }\n    }\n};\n\nif (__ZOID__.__POPUP_SUPPORT__) {\n    RENDER_DRIVERS[CONTEXT.POPUP] = {\n        \n        renderedIntoContainer: false,\n        callChildToClose:      true,\n\n        open() : ZalgoPromise<ProxyWindow> {\n            return ZalgoPromise.try(() => {\n                let { width, height } = this.component.dimensions;\n\n                width = normalizeDimension(width, window.outerWidth);\n                height = normalizeDimension(height, window.outerWidth);\n\n                const win = popup('', {\n                    width,\n                    height,\n                    ...this.component.attributes.popup\n                });\n\n                this.clean.register(() => {\n                    win.close();\n                    cleanUpWindow(win);\n                });\n\n                return ProxyWindow.toProxyWindow(win);\n            });\n        },\n\n        openPrerender(win : CrossDomainWindowType) : ZalgoPromise<?SameDomainWindowType> {\n            return ZalgoPromise.try(() => {\n                if (isSameDomain(win)) {\n                    return assertSameDomain(win);\n                }\n            });\n        },\n\n        delegate: [\n            'renderContainer'\n        ]\n    };\n}\n","/* @flow */\n/* eslint max-lines: 0 */\n\nimport { send, bridge, serializeMessage, ProxyWindow } from 'post-robot/src';\nimport { isSameDomain, matchDomain, getDomainFromUrl, isBlankDomain,\n    onCloseWindow, getDomain, type CrossDomainWindowType, getDistanceFromTop, isTop, normalizeMockUrl } from 'cross-domain-utils/src';\nimport { ZalgoPromise } from 'zalgo-promise/src';\nimport { addEventListener, uniqueID, elementReady, writeElementToWindow,\n    noop, onResize,\n    extend, extendUrl, getElement, memoized, appendChild, cleanup, type CleanupType,\n    once, stringifyError, type EventEmitterType, destroyElement, isDefined, createElement, getElementSafe } from 'belter/src';\n\nimport { POST_MESSAGE, CONTEXT, CLASS,\n    INITIAL_PROPS, WINDOW_REFERENCES } from '../constants';\nimport type { Component, onErrorPropType } from '../component';\nimport { global, buildChildWindowName } from '../lib';\nimport type { PropsInputType, PropsType } from '../component/props';\nimport type { ChildExportsType } from '../child';\nimport type { DimensionsType, ElementRefType } from '../types';\n\nimport { RENDER_DRIVERS, type ContextDriverType } from './drivers';\nimport { propsToQuery, normalizeProps } from './props';\n\nglobal.props = global.props || {};\nglobal.windows = global.windows || {};\n\nexport type RenderOptionsType<P> = {|\n    uid : string,\n    props : PropsInputType<P>,\n    tag : string,\n    context : string,\n    outlet : HTMLElement,\n    close : (?string) => ZalgoPromise<void>,\n    focus : () => ZalgoPromise<ProxyWindow>,\n    doc : Document,\n    container? : HTMLElement,\n    dimensions : DimensionsType,\n    state : Object\n|};\n\nexport type ParentExportsType<P> = {|\n    init : (ChildExportsType<P>) => ZalgoPromise<void>,\n    close : () => ZalgoPromise<void>,\n    checkClose : () => ZalgoPromise<void>,\n    resize : ({ width? : ?number, height? : ?number }) => ZalgoPromise<void>,\n    onError : (mixed) => ZalgoPromise<void>\n|};\n\nexport type PropRef =\n    {| type : typeof INITIAL_PROPS.RAW, uid? : string, value? : string |};\n\nexport type WindowRef =\n    {| type : typeof WINDOW_REFERENCES.OPENER |} |\n    {| type : typeof WINDOW_REFERENCES.TOP |} |\n    {| type : typeof WINDOW_REFERENCES.PARENT, distance : number |} |\n    {| type : typeof WINDOW_REFERENCES.GLOBAL, uid : string |};\n\nexport type ChildPayload = {|\n    uid : string,\n    tag : string,\n    context : $Values<typeof CONTEXT>,\n    domain : string,\n    parent : WindowRef,\n    props : PropRef,\n    exports : string\n|};\n\nexport type StateType = Object;\n\nexport type ParentHelpers<P> = {|\n    state : StateType,\n    close : () => ZalgoPromise<void>,\n    focus : () => ZalgoPromise<void>,\n    resize : ({ width : ?number, height : ?number }) => ZalgoPromise<void>,\n    onError : (mixed) => ZalgoPromise<void>,\n    updateProps : PropsInputType<P> => ZalgoPromise<void>\n|};\n\nexport class ParentComponent<P> {\n\n    component : Component<P>\n    driver : ContextDriverType\n    props : PropsType<P>\n    initPromise : ZalgoPromise<ParentComponent<P>>\n    errored : boolean\n    event : EventEmitterType\n    clean : CleanupType\n    state : StateType\n    proxyWin : ProxyWindow\n\n    container : HTMLElement\n    element : HTMLElement\n    iframe : HTMLIFrameElement\n    prerenderIframe : HTMLIFrameElement\n\n    child : ?ChildExportsType<P>\n\n    constructor(component : Component<P>, props : PropsInputType<P>) {\n        try {\n            this.initPromise = new ZalgoPromise();\n            this.clean = cleanup(this);\n            this.state = {};\n\n            this.component = component;\n    \n            this.setProps(props);\n            this.component.registerActiveComponent(this);\n            this.clean.register(() => this.component.destroyActiveComponent(this));\n\n        } catch (err) {\n            this.onError(err, props.onError).catch(noop);\n            throw err;\n        }\n    }\n\n    render(target : CrossDomainWindowType, element : ElementRefType, context : $Values<typeof CONTEXT>) : ZalgoPromise<void> {\n        return ZalgoPromise.try(() => {\n            this.component.log(`render`);\n\n            this.driver = RENDER_DRIVERS[context];\n            const uid = `${ this.component.tag }-${ uniqueID() }`;\n            const domain = this.getDomain();\n            const initialDomain = this.getInitialDomain();\n\n            this.component.checkAllowRender(target, domain, element);\n\n            if (target !== window) {\n                this.delegate(context, target);\n            }\n\n            const tasks = {};\n\n            tasks.init = this.initPromise;\n            tasks.buildUrl = this.buildUrl();\n            tasks.onRender = this.props.onRender();\n            this.watchForUnload();\n\n            tasks.renderContainer = ZalgoPromise.try(() => {\n                return this.renderContainer(element, { context, uid });\n            });\n\n            tasks.open = this.driver.renderedIntoContainer\n                ? tasks.renderContainer.then(() => this.open())\n                : this.open();\n\n            tasks.buildWindowName = tasks.open.then(proxyWin => {\n                return this.buildWindowName({ proxyWin, initialDomain, domain, target, context, uid });\n            });\n\n            tasks.setWindowName =  ZalgoPromise.all([ tasks.open, tasks.buildWindowName ]).then(([ proxyWin, windowName ]) => {\n                return proxyWin.setName(windowName);\n            });\n\n            tasks.watchForClose = tasks.open.then(proxyWin => {\n                return this.watchForClose(proxyWin);\n            });\n\n            tasks.prerender = ZalgoPromise.all([ tasks.open, tasks.renderContainer ]).then(([ proxyWin ]) => {\n                return this.prerender(proxyWin, { context, uid });\n            });\n\n            tasks.onDisplay = tasks.prerender.then(() => {\n                return this.props.onDisplay();\n            });\n\n            tasks.openBridge = tasks.open.then(proxyWin => {\n                return this.openBridge(proxyWin, initialDomain, context);\n            });\n\n            tasks.loadUrl = ZalgoPromise.all([ tasks.open, tasks.buildUrl, tasks.setWindowName ]).then(([ proxyWin, url ]) => {\n                return proxyWin.setLocation(url);\n            });\n\n            tasks.switchPrerender = ZalgoPromise.all([ tasks.prerender, tasks.init ]).then(() => {\n                return this.switchPrerender();\n            });\n\n            tasks.runTimeout = tasks.loadUrl.then(() => {\n                return this.runTimeout();\n            });\n\n            tasks.onRender = tasks.init.then(() => {\n                return this.props.onRendered();\n            });\n\n            return ZalgoPromise.hash(tasks);\n            \n        }).catch(err => {\n            return ZalgoPromise.all([\n                this.onError(err),\n                this.destroy(err)\n            ]);\n        }).then(noop);\n    }\n\n    buildWindowName({ proxyWin, initialDomain, domain, target, uid, context } : { proxyWin : ProxyWindow, initialDomain : string, domain : string | RegExp, target : CrossDomainWindowType, context : $Values<typeof CONTEXT>, uid : string }) : string {\n        return buildChildWindowName(this.component.name, this.buildChildPayload({ proxyWin, initialDomain, domain, target, context, uid }));\n    }\n\n    getPropsRef(proxyWin : ProxyWindow, target : CrossDomainWindowType, domain : string | RegExp, uid : string) : PropRef {\n        const value = serializeMessage(proxyWin, domain, this.getPropsForChild(domain));\n\n        const propRef = isSameDomain(target)\n            ? { type: INITIAL_PROPS.RAW, value }\n            : { type: INITIAL_PROPS.UID, uid };\n\n        if (propRef.type === INITIAL_PROPS.UID) {\n            global.props[uid] = value;\n\n            this.clean.register(() => {\n                delete global.props[uid];\n            });\n        }\n\n        return propRef;\n    }\n\n    buildChildPayload({ proxyWin, initialDomain, domain, target = window, context, uid } : { proxyWin : ProxyWindow, initialDomain : string, domain : string | RegExp, target : CrossDomainWindowType, context : $Values<typeof CONTEXT>, uid : string } = {}) : ChildPayload {\n        return {\n            uid,\n            context,\n            domain:  getDomain(window),\n            tag:     this.component.tag,\n            parent:  this.getWindowRef(target, initialDomain, uid, context),\n            props:   this.getPropsRef(proxyWin, target, domain, uid),\n            exports: serializeMessage(proxyWin, domain, this.buildParentExports(proxyWin))\n        };\n    }\n\n    getHelpers() : ParentHelpers<P> {\n        return {\n            state:       this.state,\n            close:       () => this.close(),\n            focus:       () => this.focus(),\n            resize:      ({ width, height }) => this.resize({ width, height }),\n            onError:     (err) => this.onError(err),\n            updateProps: (props) => this.updateProps(props)\n        };\n    }\n\n    setProps(props : PropsInputType<P>, isUpdate : boolean = false) {\n        if (this.component.validate) {\n            this.component.validate({ props });\n        }\n\n        const helpers = this.getHelpers();\n\n        // $FlowFixMe\n        this.props = this.props || {};\n        extend(this.props, normalizeProps(this.component, this, props, helpers, isUpdate));\n\n        for (const key of this.component.getPropNames()) {\n            const propDef = this.component.getPropDefinition(key);\n            if (propDef.required !== false && !isDefined(this.props[key])) {\n                throw new Error(`Expected prop \"${ key }\" to be defined`);\n            }\n        }\n    }\n\n    buildUrl() : ZalgoPromise<string> {\n        return propsToQuery({ ...this.component.props, ...this.component.builtinProps }, this.props).then(query => {\n            return extendUrl(normalizeMockUrl(this.component.getUrl(this.props)), { query });\n        });\n    }\n\n    getDomain() : string | RegExp {\n        return this.component.getDomain(this.props);\n    }\n\n    getInitialDomain() : string {\n        return this.component.getInitialDomain(this.props);\n    }\n\n    getPropsForChild(domain : string | RegExp) : (PropsType<P>) {\n        const result = {};\n\n        for (const key of Object.keys(this.props)) {\n            const prop = this.component.getPropDefinition(key);\n\n            if (prop && prop.sendToChild === false) {\n                continue;\n            }\n\n            if (prop && prop.sameDomain && !matchDomain(domain, getDomain(window))) {\n                continue;\n            }\n\n            // $FlowFixMe\n            result[key] = this.props[key];\n        }\n\n        // $FlowFixMe\n        return result;\n    }\n\n    updateProps(props : PropsInputType<P>) : ZalgoPromise<void> {\n        this.setProps(props, true);\n\n        return this.initPromise.then(() => {\n            if (this.child) {\n                return this.child.updateProps(this.getPropsForChild(this.getDomain()));\n            }\n        });\n    }\n    \n    open() : ZalgoPromise<ProxyWindow> {\n        return ZalgoPromise.try(() => {\n            this.component.log(`open`);\n\n            const windowProp = this.props.window;\n\n            if (windowProp) {\n                this.clean.register(() => windowProp.close());\n                // $FlowFixMe\n                return windowProp;\n            }\n\n            return this.driver.open.call(this);\n\n        }).then(proxyWin => {\n            this.proxyWin = proxyWin;\n            return proxyWin;\n        });\n    }\n\n    focus() : ZalgoPromise<void> {\n        return ZalgoPromise.try(() => {\n            if (this.proxyWin) {\n                return this.proxyWin.focus().then(noop);\n            }\n        });\n    }\n\n    switchPrerender() : ZalgoPromise<void> {\n        return ZalgoPromise.try(() => {\n            if (this.driver.switchPrerender) {\n                return this.driver.switchPrerender.call(this);\n            }\n        });\n    }\n\n    delegate(context : $Values<typeof CONTEXT>, target : CrossDomainWindowType) {\n        this.component.log(`delegate`);\n\n        const props = {};\n        for (const propName of this.component.getPropNames()) {\n            if (this.component.getPropDefinition(propName).allowDelegate) {\n                props[propName] = this.props[propName];\n            }\n        }\n\n        const overridesPromise = send(target, `${ POST_MESSAGE.DELEGATE }_${ this.component.name }`, {\n            context,\n            props,\n            overrides: {\n                focus:     () => this.focus(),\n                close:     () => this.close(),\n                onError:   (err) => this.onError(err)\n            }\n\n        }).then(({ data }) => {\n            this.clean.register(data.destroy);\n            return data.overrides;\n\n        }).catch(err => {\n            throw new Error(`Unable to delegate rendering. Possibly the component is not loaded in the target window.\\n\\n${ stringifyError(err) }`);\n        });\n\n        for (const key of this.driver.delegate) {\n            // $FlowFixMe\n            this[key] = function overriddenFunction() : ZalgoPromise<mixed> {\n                return overridesPromise.then(overrides => {\n                    return overrides[key].apply(this, arguments);\n                });\n            };\n        }\n    }\n\n    getWindowRef(target : CrossDomainWindowType, domain : string, uid : string, context : $Values<typeof CONTEXT>) : WindowRef {\n        \n        if (domain === getDomain(window)) {\n            global.windows[uid] = window;\n            this.clean.register(() => {\n                delete global.windows[uid];\n            });\n    \n            return { type: WINDOW_REFERENCES.GLOBAL, uid };\n        }\n\n        if (context === CONTEXT.POPUP) {\n            return { type: WINDOW_REFERENCES.OPENER };\n        }\n\n        if (isTop(window)) {\n            return { type: WINDOW_REFERENCES.TOP };\n        }\n\n        return { type: WINDOW_REFERENCES.PARENT, distance: getDistanceFromTop(window) };\n    }\n\n    watchForClose(proxyWin : ProxyWindow) : ZalgoPromise<void> {\n        return proxyWin.awaitWindow().then(win => {\n            const closeWindowListener = onCloseWindow(win, () => {\n                this.component.log(`detect_close_child`);\n\n                return ZalgoPromise.all([\n                    this.props.onClose(),\n                    this.destroy(new Error(`Window close detected`))\n                ]);\n            }, 2000);\n\n            this.clean.register(closeWindowListener.cancel);\n        });\n    }\n\n    watchForUnload() {\n        const unloadWindowListener = addEventListener(window, 'unload', once(() => {\n            this.component.log(`navigate_away`);\n            this.destroy(new Error(`Window navigated away`));\n        }));\n\n        this.clean.register(unloadWindowListener.cancel);\n    }\n\n    runTimeout() : ZalgoPromise<void> {\n        return ZalgoPromise.try(() => {\n            const timeout = this.props.timeout;\n\n            if (timeout) {\n                return this.initPromise.timeout(timeout, new Error(`Loading component timed out after ${ timeout } milliseconds`)).then(noop);\n            }\n        });\n    }\n\n    initChild(child : ChildExportsType<P>) : ZalgoPromise<void> {\n        return ZalgoPromise.try(() => {\n            this.clean.set('child', child);\n            this.initPromise.resolve(this);\n        });\n    }\n\n    buildParentExports(win : ProxyWindow) : ParentExportsType<P> {\n        const onError    = (err) => this.onError(err);\n        const init       = (child) => this.initChild(child);\n        const close      = () => this.close();\n        const checkClose = () => this.checkClose(win);\n        const resize     = ({ width, height }) => this.resize({ width, height });\n\n        init.onError = onError;\n\n        return { init, close, checkClose, resize, onError };\n    }\n\n    resize({ width, height } : { width? : ?number, height? : ?number }) : ZalgoPromise<void> {\n        return ZalgoPromise.try(() => {\n            if (this.driver.resize) {\n                return this.driver.resize.call(this, { width, height });\n            }\n        });\n    }\n\n    checkClose(win : ProxyWindow) : ZalgoPromise<void> {\n        return win.isClosed().then(closed => {\n            if (closed) {\n                return this.close();\n            }\n\n            return ZalgoPromise.delay(200)\n                .then(() => win.isClosed())\n                .then(secondClosed => {\n                    if (secondClosed) {\n                        return this.close();\n                    }\n                });\n        });\n    }\n\n    @memoized\n    close() : ZalgoPromise<void> {\n        return ZalgoPromise.try(() => {\n            this.component.log(`close`);\n            return this.props.onClose();\n\n        }).then(() => {\n            if (this.child && this.driver.callChildToClose) {\n                this.child.close.fireAndForget().catch(noop);\n            }\n\n            return this.destroy(new Error(`Window closed`));\n        });\n    }\n\n    prerender(proxyWin : ProxyWindow, { context, uid } : { context : $Values<typeof CONTEXT>, uid : string }) : ZalgoPromise<void> {\n        return ZalgoPromise.try(() => {\n            return proxyWin.awaitWindow();\n\n        }).then(win => {\n            return this.driver.openPrerender.call(this, win);\n            \n        }).then(prerenderWindow => {\n            if (!prerenderWindow || !isSameDomain(prerenderWindow) || !isBlankDomain(prerenderWindow)) {\n                return;\n            }\n    \n            const doc = prerenderWindow.document;\n            const el = this.renderTemplate(this.component.prerenderTemplate, { context, uid, document: doc });\n\n            if (el.ownerDocument !== doc) {\n                throw new Error(`Expected prerender template to have been created with document from child window`);\n            }\n\n            writeElementToWindow(prerenderWindow, el);\n\n            let { width = false, height = false, element = 'body' } = this.component.autoResize || {};\n            element = getElementSafe(element, doc);\n            \n            if (element && (width || height)) {\n                onResize(element, ({ width: newWidth, height: newHeight }) => {\n                    this.resize({\n                        width:  width ? newWidth : undefined,\n                        height: height ? newHeight : undefined\n                    });\n                }, { width, height, win: prerenderWindow });\n            }\n        });\n    }\n\n    renderTemplate(renderer : (RenderOptionsType<P>) => HTMLElement, { context, uid, container, document, outlet } : { context : $Values<typeof CONTEXT>, uid : string, container? : HTMLElement, document? : Document, outlet? : HTMLElement }) : HTMLElement {\n        // $FlowFixMe\n        return renderer.call(this, {\n            container,\n            outlet,\n            context,\n            uid,\n            focus:      () => this.focus(),\n            close:      () => this.close(),\n            state:      this.state,\n            props:      this.props,\n            tag:        this.component.tag,\n            doc:        document,\n            dimensions: this.component.dimensions\n        });\n    }\n\n    renderContainer(element : HTMLElement, { context, uid } : { context : $Values<typeof CONTEXT>, uid : string }) : ZalgoPromise<void> {\n        return ZalgoPromise.try(() => {\n            return elementReady(element);\n\n        }).then(() => {\n            const container = getElement(element);\n            this.element = createElement('div', {\n                class: [ CLASS.OUTLET ]\n            });\n\n            this.container = this.renderTemplate(this.component.containerTemplate, { context, uid, container, outlet: this.element });\n            appendChild(container, this.container);\n\n            this.clean.register(() => destroyElement(this.element));\n            this.clean.register(() => destroyElement(this.container));\n        });\n    }\n\n    destroy(err? : mixed = new Error(`Component destroyed before render complete`)) : ZalgoPromise<void> {\n        return ZalgoPromise.try(() => {\n            this.component.log(`destroy`);\n            this.initPromise.asyncReject(err);\n            return this.clean.all();\n        });\n    }\n\n    onError(err : mixed, onError? : onErrorPropType) : ZalgoPromise<void> {\n        // eslint-disable-next-line promise/no-promise-in-callback\n        return ZalgoPromise.try(() => {\n            this.initPromise.asyncReject(err);\n\n            if (!onError && this.props && this.props.onError) {\n                onError = this.props.onError;\n            }\n    \n            if (onError) {\n                return onError(err);\n            }\n\n        }).then(() => {\n            return this.initPromise;\n            \n        }).then(() => {\n            throw err;\n        });\n    }\n\n    openBridge(proxyWin : ProxyWindow, domain : string, context : $Values<typeof CONTEXT>) : ?ZalgoPromise<?CrossDomainWindowType> {\n        if (__POST_ROBOT__.__IE_POPUP_SUPPORT__) {\n            return ZalgoPromise.try(() => {\n                return proxyWin.awaitWindow();\n                \n            }).then(win => {\n                if (!bridge || !bridge.needsBridge({ win, domain }) || bridge.hasBridge(domain, domain)) {\n                    return;\n                }\n\n                const bridgeUrl = this.component.getBridgeUrl();\n\n                if (!bridgeUrl) {\n                    throw new Error(`Bridge needed to render ${ context }`);\n                }\n\n                const bridgeDomain = getDomainFromUrl(bridgeUrl);\n                bridge.linkUrl(win, domain);\n                return bridge.openBridge(normalizeMockUrl(bridgeUrl), bridgeDomain);\n            });\n        }\n    }\n}\n","/* @flow */\n\nimport { ZalgoPromise } from 'zalgo-promise/src';\nimport { dotify, isDefined } from 'belter/src';\n\nimport type { Component } from '../component';\nimport type { BuiltInPropsDefinitionType, PropsInputType, PropsType, MixedPropDefinitionType } from '../component/props';\nimport { PROP_SERIALIZATION } from '../constants';\n\nimport type { ParentComponent, ParentHelpers } from './index';\n\n/*  Normalize Props\n    ---------------\n\n    Turn props into normalized values, using defaults, function options, etc.\n*/\n\nexport function normalizeProps<P>(component : Component<P>, instance : ParentComponent<P>, props : PropsInputType<P>, helpers : ParentHelpers<P>, isUpdate : boolean = false) : (PropsType<P>) { // eslint-disable-line complexity\n\n    // $FlowFixMe\n    props = props || {};\n    const result : $Shape<P> = { ...props }; // eslint-disable-line no-undef\n\n    const propNames = isUpdate\n        ? []\n        : [ ...component.getPropNames() ];\n\n    // $FlowFixMe\n    for (const key of Object.keys(props)) {\n        if (propNames.indexOf(key) === -1) {\n            propNames.push(key);\n        }\n    }\n\n    const aliases = [];\n\n    const { state, close, focus, onError } = helpers;\n\n    for (const key of propNames) {\n        const propDef = component.getPropDefinition(key);\n        // $FlowFixMe\n        let value = props[key];\n\n        if (!propDef) {\n            continue;\n        }\n\n        const alias = propDef.alias;\n        if (alias) {\n            if (!isDefined(value) && isDefined(props[alias])) {\n                value = props[alias];\n            }\n            aliases.push(alias);\n        }\n\n        if (propDef.value) {\n            value = propDef.value({ props: result, state, close, focus, onError });\n        }\n\n        if (!isDefined(value) && propDef.default) {\n            value = propDef.default({ props: result, state, close, focus, onError });\n        }\n\n        if (isDefined(value)) {\n            if (propDef.type === 'array' ? !Array.isArray(value) : (typeof value !== propDef.type)) {\n                throw new TypeError(`Prop is not of type ${ propDef.type }: ${ key }`);\n            }\n        }\n        \n        // $FlowFixMe\n        result[key] = value;\n    }\n\n    for (const alias of aliases) {\n        // $FlowFixMe\n        delete result[alias];\n    }\n\n    // $FlowFixMe\n    for (const key of Object.keys(result)) {\n        const propDef = component.getPropDefinition(key);\n        // $FlowFixMe\n        const value = result[key];\n\n        if (!propDef) {\n            continue;\n        }\n\n        if (isDefined(value) && propDef.validate) {\n            // $FlowFixMe\n            propDef.validate({ value, props: result });\n        }\n\n        if (isDefined(value) && propDef.decorate) {\n            // $FlowFixMe\n            result[key] = propDef.decorate({ value, props: result, state, close, focus, onError });\n        }\n    }\n\n    // $FlowFixMe\n    return result;\n}\n\n// $FlowFixMe\nfunction getQueryParam<T, P>(prop : MixedPropDefinitionType<P>, key : string, value : T) : ZalgoPromise<string> {\n    return ZalgoPromise.try(() => {\n        if (typeof prop.queryParam === 'function') {\n            return prop.queryParam({ value });\n        } else if (typeof prop.queryParam === 'string') {\n            return prop.queryParam;\n        } else {\n            return key;\n        }\n    });\n}\n\n// $FlowFixMe\nfunction getQueryValue<T, P>(prop : MixedPropDefinitionType<P>, key : string, value : T) : ZalgoPromise<mixed> {\n    return ZalgoPromise.try(() => {\n        if (typeof prop.queryValue === 'function' && isDefined(value)) {\n            return prop.queryValue({ value });\n        } else {\n            return value;\n        }\n    });\n}\n\nexport function propsToQuery<P>(propsDef : BuiltInPropsDefinitionType<P>, props : (PropsType<P>)) : ZalgoPromise<{ [string] : string }> {\n\n    const params = {};\n\n    return ZalgoPromise.all(Object.keys(props).map(key => {\n\n        const prop = propsDef[key];\n\n        if (!prop) {\n            return; // eslint-disable-line array-callback-return\n        }\n\n        return ZalgoPromise.resolve().then(() => {\n\n            const value = props[key];\n\n            if (!value) {\n                return;\n            }\n\n            if (!prop.queryParam) {\n                return;\n            }\n\n            return value;\n\n        }).then(value => {\n\n            if (value === null || typeof value === 'undefined') {\n                return;\n            }\n\n            return ZalgoPromise.all([\n                // $FlowFixMe\n                getQueryParam(prop, key, value),\n                // $FlowFixMe\n                getQueryValue(prop, key, value)\n            ]).then(([ queryParam, queryValue ]) => {\n\n                let result;\n\n                if (typeof queryValue === 'boolean') {\n                    result = queryValue.toString();\n                } else if (typeof queryValue === 'string') {\n                    result = queryValue.toString();\n                } else if (typeof queryValue === 'object' && queryValue !== null) {\n\n                    if (prop.serialization === PROP_SERIALIZATION.JSON) {\n                        result = JSON.stringify(queryValue);\n                    } else if (prop.serialization === PROP_SERIALIZATION.BASE64) {\n                        result = btoa(JSON.stringify(queryValue));\n                    } else if (prop.serialization === PROP_SERIALIZATION.DOTIFY || !prop.serialization) {\n                        result = dotify(queryValue, key);\n\n                        for (const dotkey of Object.keys(result)) {\n                            params[dotkey] = result[dotkey];\n                        }\n\n                        return;\n                    }\n\n                } else if (typeof queryValue === 'number') {\n                    result = queryValue.toString();\n                }\n\n                params[queryParam] = result;\n            });\n        });\n\n    })).then(() => {\n        return params;\n    });\n}\n","/* @flow */\n\nimport { onCloseWindow, type CrossDomainWindowType } from 'cross-domain-utils/src';\nimport { ZalgoPromise } from 'zalgo-promise/src';\nimport { ProxyWindow } from 'post-robot/src';\nimport { cleanup, type CleanupType } from 'belter/src';\n\nimport { ParentComponent } from '../parent';\nimport { RENDER_DRIVERS, type ContextDriverType } from '../parent/drivers';\nimport type { Component } from '../component';\n\nexport type DelegatePropsType = {|\n    onClose : () => ?ZalgoPromise<void>,\n    onDisplay : () => ?ZalgoPromise<void>,\n    window : ?ProxyWindow\n|};\n\nexport type DelegateOptionsType = {|\n    context : string,\n    props : DelegatePropsType,\n    overrides : {\n        close : () => ZalgoPromise<void>,\n        onError : (mixed) => ZalgoPromise<void>,\n        focus : () => ZalgoPromise<void>\n    }\n|};\n\nexport type DelegateReturnType = {|\n    overrides : Object,\n    destroy : () => ZalgoPromise<void>\n|};\n\nexport class DelegateComponent<P>  {\n\n    component : Component<P>\n    source : CrossDomainWindowType\n    context : string\n    driver : ContextDriverType\n    props : DelegatePropsType\n    clean : CleanupType\n\n    close : () => ZalgoPromise<void>\n    onError : (mixed) => ZalgoPromise<void>\n    focus : () => ZalgoPromise<void>\n\n    constructor(component : Component<P>, source : CrossDomainWindowType, options : DelegateOptionsType) {\n        this.component = component;\n        this.context = options.context;\n        this.driver = RENDER_DRIVERS[options.context];\n        this.clean = cleanup(this);\n\n        // $FlowFixMe\n        this.close = ParentComponent.prototype.close;\n        // $FlowFixMe\n        this.resize = ParentComponent.prototype.resize;\n        // $FlowFixMe\n        this.renderTemplate = ParentComponent.prototype.renderTemplate;\n\n        // $FlowFixMe\n        this.props = {};\n        for (const propName of Object.keys(options.props)) {\n            if (options.props[propName] && this.component.getPropDefinition(propName) && this.component.getPropDefinition(propName).allowDelegate) {\n                this.props[propName] = options.props[propName];\n            }\n        }\n\n        this.close     = options.overrides.close;\n        this.onError   = options.overrides.onError;\n        this.focus     = options.overrides.focus;\n        \n        this.component.registerActiveComponent(this);\n        this.clean.register(() => this.component.destroyActiveComponent(this));\n\n        this.watchForSourceClose(source);\n    }\n\n    getDelegate() : DelegateReturnType {\n        return {\n            overrides: this.getOverrides(),\n            destroy:   () => this.destroy()\n        };\n    }\n\n    watchForSourceClose(source : CrossDomainWindowType) {\n        const closeSourceWindowListener = onCloseWindow(source, () => this.destroy(), 3000);\n        this.clean.register(closeSourceWindowListener.cancel);\n    }\n\n    getOverrides() : { [string] : mixed } {\n        const overrides = {};\n        const self = this;\n\n        for (const key of this.driver.delegate) {\n            overrides[key] = function delegateOverride() : mixed {\n                // $FlowFixMe\n                return ParentComponent.prototype[key].apply(self, arguments);\n            };\n        }\n\n        return overrides;\n    }\n\n    destroy() : ZalgoPromise<void> {\n        return this.clean.all();\n    }\n}\n","export default function _inheritsLoose(subClass, superClass) {\n  subClass.prototype = Object.create(superClass.prototype);\n  subClass.prototype.constructor = subClass;\n  subClass.__proto__ = superClass;\n}","/* @flow */\n\nexport type NodePropsType = { [string] : mixed };\n// eslint-disable-next-line no-use-before-define\nexport type NodeType = ElementNode | TextNode | FragmentNode;\n// eslint-disable-next-line no-use-before-define\nexport type NodeChildrenType = $ReadOnlyArray<ElementNode | TextNode>;\nexport type NodeRenderer<T> = (string, NodePropsType, NodeChildrenType) => T;\nexport type NodeRendererFactory<T, O = Object> = (O | void) => NodeRenderer<T>;\n\nclass Node {\n    isElementNode() : boolean {\n        return false;\n    }\n\n    isTextNode() : boolean {\n        return false;\n    }\n\n    isFragmentNode() : boolean {\n        return false;\n    }\n}\n\nexport class ElementNode extends Node {\n    name : string\n    props : NodePropsType\n    children : NodeChildrenType\n    onRender : ?<T>(T) => void // eslint-disable-line no-undef\n\n    constructor(name : string, props : NodePropsType, children : NodeChildrenType) {\n        super();\n        this.name = name;\n        this.props = props;\n        this.children = children;\n\n        if (typeof props.onRender === 'function') {\n            this.onRender = props.onRender;\n            delete props.onRender;\n        }\n    }\n\n    getTag() : string {\n        return this.name;\n    }\n\n    isTag(name : string) : boolean {\n        return name === this.name;\n    }\n\n    isElementNode() : boolean {\n        return true;\n    }\n\n    render<T>(renderer : NodeRenderer<T>) : T {\n        const element = renderer(this.name, this.props, this.children);\n        if (this.onRender) {\n            this.onRender(element);\n        }\n        return element;\n    }\n\n    getText() : string {\n        throw new Error(`Can not get text of an element node`);\n    }\n}\n\nexport class TextNode extends Node {\n    text : string\n\n    constructor(text : string) {\n        super();\n        this.text = text;\n    }\n\n    getTag() : string {\n        throw new Error(`Can not get tag of text node`);\n    }\n\n    isTag(name : string) : boolean { // eslint-disable-line no-unused-vars\n        throw new Error(`Can not check tag of text node`);\n    }\n\n    isTextNode() : boolean {\n        return true;\n    }\n\n    render<T>(renderer : NodeRenderer<T>) : T { // eslint-disable-line no-unused-vars\n        throw new Error(`Can not render a text node`);\n    }\n\n    getText() : string {\n        return this.text;\n    }\n}\n\nexport class FragmentNode extends Node {\n    children : NodeChildrenType\n\n    constructor(children : NodeChildrenType) {\n        super();\n        this.children = children;\n    }\n\n    getTag() : string {\n        throw new Error(`Can not get tag of fragment node`);\n    }\n\n    isTag(name : string) : boolean { // eslint-disable-line no-unused-vars\n        throw new Error(`Can not check tag of fragment node`);\n    }\n\n    isFragmentNode() : boolean {\n        return true;\n    }\n\n    render<T>(renderer : NodeRenderer<T>) : $ReadOnlyArray<T> { // eslint-disable-line no-unused-vars\n        throw new Error(`Can not render a fragment node`);\n    }\n\n    getText() : string {\n        throw new Error(`Can not get text of a fragment node`);\n    }\n}\n\ntype JsxChildType = $ReadOnlyArray<JsxChildType> | NodeType | string;\ntype NullableJsxChildType = $ReadOnlyArray<NullableJsxChildType> | NodeType | string | null | void;\n\nfunction normalizeChild(child : NullableJsxChildType) : NodeType | void {\n    if (typeof child === 'string') {\n        return new TextNode(child);\n\n    } else if (child instanceof ElementNode || child instanceof TextNode || child instanceof FragmentNode) {\n        return child;\n\n    } else if (Array.isArray(child)) {\n        return new FragmentNode(normalizeChildren(child)); // eslint-disable-line no-use-before-define\n\n    } else if (child === null || typeof child === 'undefined') {\n        return; // eslint-disable-line no-useless-return\n\n    } else {\n        throw new Error(`Child node must be string or instance of jsx-pragmatic node; got ${ typeof child }`);\n    }\n}\n\nfunction normalizeChildren(children : $ReadOnlyArray<NullableJsxChildType>) : NodeChildrenType {\n    const result = [];\n\n    for (const child of children) {\n        const normalizedChild = normalizeChild(child);\n\n        if (!normalizedChild) {\n            continue;\n        }\n\n        if (normalizedChild instanceof FragmentNode) {\n            for (const subchild of normalizedChild.children) {\n                result.push(subchild);\n            }\n        } else {\n            result.push(normalizedChild);\n        }\n    }\n\n    return result;\n}\n\ntype JSXElementBuilder<P : NodePropsType> = (\n    element : string,\n    props : P | null,\n    ...children : $ReadOnlyArray<NullableJsxChildType>\n) => ElementNode;\n\ntype JSXElementFunctionBuilder<P : NodePropsType> = (\n    element : (P, $ReadOnlyArray<JsxChildType>) => ElementNode,\n    props : P | null,\n    ...children : $ReadOnlyArray<NullableJsxChildType>\n) => ElementNode;\n\ntype JSXTextFunctionBuilder<P : NodePropsType> = (\n    element : (P, $ReadOnlyArray<JsxChildType>) => string | TextNode,\n    props : P | null,\n    ...children : $ReadOnlyArray<NullableJsxChildType>\n) => TextNode;\n\ntype JSXFragmentFunctionBuilder<P : NodePropsType> = (\n    element : (P, $ReadOnlyArray<JsxChildType>) => FragmentNode | $ReadOnlyArray<NullableJsxChildType>,\n    props : P | null,\n    ...children : $ReadOnlyArray<NullableJsxChildType>\n) => FragmentNode;\n\ntype JSXEmptyFunctionBuilder<P : NodePropsType> = (\n    element : (P, $ReadOnlyArray<JsxChildType>) => null | void,\n    props : P | null,\n    ...children : $ReadOnlyArray<NullableJsxChildType>\n) => void;\n\ntype JSXBuilder<P : NodePropsType> = JSXElementBuilder<P> & JSXElementFunctionBuilder<P> & JSXTextFunctionBuilder<P> & JSXFragmentFunctionBuilder<P> & JSXEmptyFunctionBuilder<P>;\n\nexport const node : JSXBuilder<*> = <P : NodePropsType>(element, props : P | null, ...children) => {\n    if (typeof element === 'string') {\n        return new ElementNode(element, props || {}, normalizeChildren(children));\n    }\n\n    if (typeof element === 'function') {\n        // $FlowFixMe\n        return normalizeChild(element(props || {}, normalizeChildren(children)));\n    }\n    \n    throw new TypeError(`Expected jsx Element to be a string or a function`);\n};\n\nexport function Fragment(props : NodePropsType, ...children : $ReadOnlyArray<JsxChildType>) : FragmentNode {\n    \n    if (props && Object.keys(props).length) {\n        throw new Error(`Do not pass props to Fragment`);\n    }\n\n    return new FragmentNode(normalizeChildren(children));\n}\n","/* @flow */\n\nimport type { NodeChildrenType, NodePropsType, NodeRendererFactory, NodeRenderer } from '../node';\n\nconst ELEMENT_TAG = {\n    HTML:    'html',\n    IFRAME:  'iframe',\n    SCRIPT:  'script',\n    NODE:    'node',\n    DEFAULT: 'default'\n};\n\nconst ELEMENT_PROP = {\n    INNER_HTML: 'innerHTML',\n    EL:         'el'\n};\n\nconst DOM_EVENT = {\n    onBlur:               'blur',\n    onCancel:             'cancel',\n    onClick:              'click',\n    onClose:              'close',\n    onContextMenu:        'contextMenu',\n    onCopy:               'copy',\n    onCut:                'cut',\n    onAuxClick:           'auxClick',\n    onDoubleClick:        'doubleClick',\n    onDragEnd:            'dragEnd',\n    onDragStart:          'dragStart',\n    onDrop:               'drop',\n    onFocus:              'focus',\n    onInput:              'input',\n    onInvalid:            'invalid',\n    onKeyDown:            'keyDown',\n    onKeyPress:           'keyPress',\n    onKeyUp:              'keyUp',\n    onMouseDown:          'mouseDown',\n    onMouseUp:            'mouseUp',\n    onPaste:              'paste',\n    onPause:              'pause',\n    onPlay:               'play',\n    onPointerCancel:      'pointerCancel',\n    onPointerDown:        'pointerDown',\n    onPointerUp:          'pointerUp',\n    onRateChange:         'rateChange',\n    onReset:              'reset',\n    onSeeked:             'seeked',\n    onSubmit:             'submit',\n    onTouchCancel:        'touchCancel',\n    onTouchEnd:           'touchEnd',\n    onTouchStart:         'touchStart',\n    onVolumeChange:       'volumeChange',\n    onAbort:              'abort',\n    onAnimationEnd:       'animationEnd',\n    onAnimationIteration: 'animationIteration',\n    onAnimationStart:     'animationStart',\n    onCanPlay:            'canPlay',\n    onCanPlayThrough:     'canPlayThrough',\n    onDrag:               'drag',\n    onDragEnter:          'dragEnter',\n    onDragExit:           'dragExit',\n    onDragLeave:          'dragLeave',\n    onDragOver:           'dragOver',\n    onDurationChange:     'durationChange',\n    onEmptied:            'emptied',\n    onEncrypted:          'encrypted',\n    onEnded:              'ended',\n    onError:              'error',\n    onGotPointerCapture:  'gotPointerCapture',\n    onLoad:               'load',\n    onLoadedData:         'loadedData',\n    onLoadedMetadata:     'loadedMetadata',\n    onLoadStart:          'loadStart',\n    onLostPointerCapture: 'lostPointerCapture',\n    onMouseMove:          'mouseMove',\n    onMouseOut:           'mouseOut',\n    onMouseOver:          'mouseOver',\n    onPlaying:            'playing',\n    onPointerMove:        'pointerMove',\n    onPointerOut:         'pointerOut',\n    onPointerOver:        'pointerOver',\n    onProgress:           'progress',\n    onScroll:             'scroll',\n    onSeeking:            'seeking',\n    onStalled:            'stalled',\n    onSuspend:            'suspend',\n    onTimeUpdate:         'timeUpdate',\n    onToggle:             'toggle',\n    onTouchMove:          'touchMove',\n    onTransitionEnd:      'transitionEnd',\n    onWaiting:            'waiting',\n    onWheel:              'wheel'\n};\n\nfunction fixScripts(el : HTMLElement, doc : Document = window.document) {\n    for (const script of el.querySelectorAll('script')) {\n        const parentNode = script.parentNode;\n\n        if (!parentNode) {\n            continue;\n        }\n\n        const newScript = doc.createElement('script');\n        // $FlowFixMe\n        newScript.text = script.textContent;\n        parentNode.replaceChild(newScript, script);\n    }\n}\n\ntype CreateElementOptions = {|\n    doc : Document,\n    name : string,\n    props : NodePropsType\n|};\n\nconst CREATE_ELEMENT : { [string] : (CreateElementOptions) => HTMLElement } = {\n\n    [ ELEMENT_TAG.NODE ]: ({ props } : CreateElementOptions) => {\n        if (!props[ELEMENT_PROP.EL]) {\n            throw new Error(`Must pass ${ ELEMENT_PROP.EL } prop to ${ ELEMENT_TAG.NODE } element`);\n        }\n\n        if (Object.keys(props).length > 1) {\n            throw new Error(`Must not pass any prop other than ${ ELEMENT_PROP.EL } to ${ ELEMENT_TAG.NODE } element`);\n        }\n\n        // $FlowFixMe\n        return props[ELEMENT_PROP.EL];\n    },\n\n    [ ELEMENT_TAG.DEFAULT ]: ({ name, doc } : CreateElementOptions) => {\n        return doc.createElement(name);\n    }\n};\n\nfunction createElement({ doc, name, props } : CreateElementOptions) : HTMLElement {\n    const elementCreator = CREATE_ELEMENT[name] || CREATE_ELEMENT[ELEMENT_TAG.DEFAULT];\n    return elementCreator({ name, props, doc });\n}\n\ntype AddPropsOptions = {|\n    el : HTMLElement,\n    props : NodePropsType\n|};\n\nfunction addProps({ el, props } : AddPropsOptions) {\n    for (const prop of Object.keys(props)) {\n        const val = props[prop];\n\n        if (val === null || typeof val === 'undefined' || prop === ELEMENT_PROP.EL || prop === ELEMENT_PROP.INNER_HTML) {\n            continue;\n        }\n\n        if (DOM_EVENT.hasOwnProperty(prop)) {\n            if (typeof val !== 'undefined' && typeof val !== 'function') {\n                throw new TypeError(`Prop ${ prop } must be function`);\n            }\n\n            el.addEventListener(DOM_EVENT[prop], val);\n\n        } else if (typeof val === 'string' || typeof val === 'number') {\n            el.setAttribute(prop, val.toString());\n\n        } else if (typeof val === 'boolean') {\n            if (val === true) {\n                el.setAttribute(prop, '');\n            }\n\n        } else {\n            throw new TypeError(`Can not render prop ${ prop } of type ${ typeof val }`);\n        }\n    }\n}\n\ntype AddChildrenOptions = {|\n    el : HTMLElement,\n    name : string,\n    children : NodeChildrenType,\n    doc : Document,\n    props : NodePropsType,\n    domRenderer : NodeRenderer<HTMLElement>\n|};\n\nconst ADD_CHILDREN : { [string] : (AddChildrenOptions) => void } = {\n\n    [ ELEMENT_TAG.IFRAME ]: ({ el, children } : AddChildrenOptions) => {\n        const firstChild = children[0];\n\n        if (children.length > 1 || !firstChild.isElementNode()) {\n            throw new Error(`Expected only single element node as child of ${ ELEMENT_TAG.IFRAME } element`);\n        }\n\n        if (!firstChild.isTag(ELEMENT_TAG.HTML)) {\n            throw new Error(`Expected element to be inserted into frame to be html, got ${ firstChild.getTag() }`);\n        }\n    \n        el.addEventListener('load', () => {\n\n            // $FlowFixMe\n            const win = el.contentWindow;\n    \n            if (!win) {\n                throw new Error(`Expected frame to have contentWindow`);\n            }\n\n            const doc = win.document;\n            const docElement = doc.documentElement;\n\n            while (docElement.children && docElement.children.length) {\n                docElement.removeChild(docElement.children[0]);\n            }\n\n            // eslint-disable-next-line no-use-before-define\n            const child = firstChild.render(dom({ doc }));\n        \n            while (child.children.length) {\n                docElement.appendChild(child.children[0]);\n            }\n        });\n    },\n\n    [ ELEMENT_TAG.SCRIPT ]: ({ el, children } : AddChildrenOptions) => {\n        const firstChild = children[0];\n\n        if (children.length !== 1 || !firstChild.isTextNode()) {\n            throw new Error(`Expected only single text node as child of ${ ELEMENT_TAG.SCRIPT } element`);\n        }\n        \n        // $FlowFixMe\n        el.text = firstChild.getText();\n    },\n\n    [ ELEMENT_TAG.DEFAULT ]: ({ el, children, doc, domRenderer } : AddChildrenOptions) => {\n        for (const child of children) {\n            if (child.isTextNode()) {\n                el.appendChild(doc.createTextNode(child.getText()));\n            } else {\n                el.appendChild(child.render(domRenderer));\n            }\n        }\n    }\n};\n\nfunction addChildren({ el, name, props, children, doc, domRenderer } : AddChildrenOptions) {\n    if (props.hasOwnProperty(ELEMENT_PROP.INNER_HTML)) {\n\n        if (children.length >= 1) {\n            throw new Error(`Expected no children to be passed when ${ ELEMENT_PROP.INNER_HTML } prop is set`);\n        }\n\n        const html = props[ELEMENT_PROP.INNER_HTML];\n\n        if (typeof html !== 'string') {\n            throw new TypeError(`${ ELEMENT_PROP.INNER_HTML } prop must be string`);\n        }\n\n        if (name === ELEMENT_TAG.SCRIPT) {\n            // $FlowFixMe\n            el.text = html;\n        } else {\n            el.innerHTML = html;\n            fixScripts(el, doc);\n        }\n\n    } else {\n        const addChildrenToElement = ADD_CHILDREN[name] || ADD_CHILDREN[ELEMENT_TAG.DEFAULT];\n        addChildrenToElement({ el, name, props, children, doc, domRenderer });\n    }\n}\n\n\nexport const dom : NodeRendererFactory<HTMLElement> = ({ doc = document } : { doc? : Document } = {}) => {\n    const domRenderer = (name, props, children) => {\n        const el = createElement({ name, props, doc });\n        addProps({ el, props });\n        addChildren({ el, name, props, children, doc, domRenderer });\n        return el;\n    };\n\n    return domRenderer;\n};\n","/* @flow */\n/* @jsx node */\n/* eslint react/react-in-jsx-scope: off */\n\nimport { node, dom } from 'jsx-pragmatic/src';\n\nimport { type RenderOptionsType } from '../../parent';\nimport { CLASS } from '../../constants';\n\nexport function defaultContainerTemplate<P>({ uid, outlet, doc, dimensions : { width, height } } : RenderOptionsType<P>) : HTMLElement {\n\n    return (\n        <div id={ uid }>\n            <style>\n                {`\n                    #${ uid }, #${ uid } > .${ CLASS.OUTLET } {\n                        width: ${ width };\n                        height: ${ height };\n                    }\n\n                    #${ uid } > .${ CLASS.OUTLET } {\n                        display: inline-block;\n                        position: relative;\n                    }\n\n                    #${ uid } > .${ CLASS.OUTLET } > iframe {\n                        height: 100%;\n                        width: 100%;\n                        position: absolute;\n                        top: 0;\n                        left: 0;\n                        transition: opacity .2s ease-in-out;\n                    }\n\n                    #${ uid } > .${ CLASS.OUTLET } > iframe.${ CLASS.VISIBLE } {\n                        opacity: 1;\n                    }\n\n                    #${ uid } > .${ CLASS.OUTLET } > iframe.${ CLASS.INVISIBLE } {\n                        opacity: 0;\n                    }\n                `}\n            </style>\n\n            <node el={ outlet } />\n        </div>\n    ).render(dom({ doc }));\n}\n","/* @flow */\n/** @jsx node */\n/* eslint react/react-in-jsx-scope: off */\n\nimport { node, dom } from 'jsx-pragmatic/src';\n\nimport { type RenderOptionsType } from '../../parent';\n\nexport function defaultPrerenderTemplate<P>({ doc } : RenderOptionsType<P>) : HTMLElement {\n    return (\n        <html>\n            <head>\n                <style>\n                    {`\n                        html, body {\n                            width: 100%;\n                            height: 100%;\n                            overflow: hidden;\n                            top: 0;\n                            left: 0;\n                            margin: 0;\n                            text-align: center;\n                        }\n\n                        .spinner {\n                            position: absolute;\n                            max-height: 60vmin;\n                            max-width: 60vmin;\n                            height: 40px;\n                            width: 40px;\n                            top: 50%;\n                            left: 50%;\n                            transform: translateX(-50%) translateY(-50%);\n                            z-index: 10;\n                        }\n\n                        .spinner .loader {\n                            height: 100%;\n                            width: 100%;\n                            box-sizing: border-box;\n                            border: 3px solid rgba(0, 0, 0, .2);\n                            border-top-color: rgba(33, 128, 192, 0.8);\n                            border-radius: 100%;\n                            animation: rotation .7s infinite linear;\n\n                        }\n\n                        @keyframes rotation {\n                            from {\n                                transform: rotate(0deg)\n                            }\n                            to {\n                                transform: rotate(359deg)\n                            }\n                        }\n                    `}\n                </style>\n            </head>\n            <body>\n                <div class=\"spinner\">\n                    <div id=\"loader\" class=\"loader\" />\n                </div>\n            </body>\n        </html>\n    ).render(dom({ doc }));\n}\n","/* @flow */\n/* eslint max-lines: 0 */\n\nimport { on, send, ProxyWindow, bridge } from 'post-robot/src';\nimport { ZalgoPromise } from 'zalgo-promise/src';\nimport { isWindow, getDomainFromUrl, type CrossDomainWindowType, isSameTopWindow, getDomain, matchDomain, isSameDomain } from 'cross-domain-utils/src';\nimport { memoize, isRegex, noop, isElement } from 'belter/src';\n\nimport { ChildComponent } from '../child';\nimport { ParentComponent, type RenderOptionsType, type ParentHelpers } from '../parent';\nimport { DelegateComponent } from '../delegate';\nimport { CONTEXT, POST_MESSAGE, WILDCARD, DEFAULT_DIMENSIONS } from '../constants';\nimport { isZoidComponentWindow, parseChildWindowName } from '../lib';\nimport type { CssDimensionsType, StringMatcherType, ElementRefType } from '../types';\n\nimport { validate } from './validate';\nimport { defaultContainerTemplate, defaultPrerenderTemplate } from './templates';\nimport { getInternalProps, type UserPropsDefinitionType, type BuiltInPropsDefinitionType, type PropsInputType, type PropsType, type MixedPropDefinitionType } from './props';\n\nconst drivers = __ZOID__.__FRAMEWORK_SUPPORT__\n    ? require('../drivers')\n    : {};\n\ntype LoggerPayload = { [string] : ?string };\n\n// eslint-disable-next-line flowtype/require-exact-type\ntype Logger = {\n    debug : (event : string, payload? : LoggerPayload) => void,\n    info : (event : string, payload? : LoggerPayload) => void,\n    warn : (event : string, payload? : LoggerPayload) => void,\n    error : (event : string, payload? : LoggerPayload) => void\n};\n\n/*  Component\n    ---------\n\n    This is the spec for the component. The idea is, when I call zoid.create(), it will create a new instance\n    of Component with the blueprint needed to set up ParentComponents and ChildComponents.\n\n    This is the one portion of code which is required by -- and shared to -- both the parent and child windows, and\n    contains all of the configuration needed for them to set themselves up.\n*/\n\nexport type ComponentOptionsType<P> = {|\n\n    tag : string,\n\n    url : string | ({ props : PropsType<P> }) => string,\n    domain? : string | RegExp,\n    bridgeUrl? : string,\n\n    props? : UserPropsDefinitionType<P>,\n\n    dimensions? : CssDimensionsType,\n    autoResize? : { width? : boolean, height? : boolean, element? : string },\n\n    allowedParentDomains? : StringMatcherType,\n\n    attributes? : {\n        iframe? : { [string] : string },\n        popup? : { [string] : string }\n    },\n\n    defaultContext? : $Values<typeof CONTEXT>,\n\n    containerTemplate? : (RenderOptionsType<P>) => HTMLElement,\n    prerenderTemplate? : (RenderOptionsType<P>) => HTMLElement,\n\n    validate? : ({ props : PropsInputType<P> }) => void,\n\n    logger? : Logger\n|};\n\ntype ZoidRenderer = {|\n    render : (element? : ElementRefType, context? : $Values<typeof CONTEXT>) => ZalgoPromise<void>,\n    renderTo : (target : CrossDomainWindowType, element? : ElementRefType, context? : $Values<typeof CONTEXT>) => ZalgoPromise<void>\n|};\n\nexport type ZoidComponentInstance<P> = {| ...ParentHelpers<P>, ...ZoidRenderer |};\n\nexport type ZoidComponent<P> = {|\n    (PropsInputType<P>) : ZoidComponentInstance<P>,\n    driver : (string, mixed) => mixed,\n    isChild : () => boolean,\n    xprops? : PropsType<P>,\n    canRenderTo : (CrossDomainWindowType) => ZalgoPromise<boolean>\n|};\n\nexport class Component<P> {\n\n    tag : string\n    name : string\n    \n    url : string | ({ props : PropsType<P> }) => string\n    domain : void | string | RegExp\n    bridgeUrl : void | string\n\n    props : UserPropsDefinitionType<P>\n    builtinProps : BuiltInPropsDefinitionType<P>\n\n    dimensions : CssDimensionsType\n    autoResize : void | { width? : boolean, height? : boolean, element? : string }\n\n    allowedParentDomains : StringMatcherType\n\n    defaultContext : $Values<typeof CONTEXT>\n    \n    attributes : {\n        iframe? : { [string] : string },\n        popup? : { [string] : string }\n    }\n\n    containerTemplate : (RenderOptionsType<P>) => HTMLElement\n    prerenderTemplate : (RenderOptionsType<P>) => HTMLElement\n\n    validate : void | ({ props : PropsInputType<P> }) => void\n\n    driverCache : { [string] : mixed }\n\n    xprops : ?PropsType<P>\n\n    logger : Logger\n\n    constructor(options : ComponentOptionsType<P>) {\n        validate(options);\n\n        // The tag name of the component. Used by some drivers (e.g. angular) to turn the component into an html element,\n        // e.g. <my-component>\n\n        this.tag = options.tag;\n        this.name = this.tag.replace(/-/g, '_');\n\n        this.allowedParentDomains = options.allowedParentDomains || WILDCARD;\n\n        if (Component.components[this.tag]) {\n            throw new Error(`Can not register multiple components with the same tag: ${ this.tag }`);\n        }\n\n        // A json based spec describing what kind of props the component accepts. This is used to validate any props before\n        // they are passed down to the child.\n\n        this.builtinProps = getInternalProps();\n        this.props = options.props || {};\n\n        // The dimensions of the component, e.g. { width: '300px', height: '150px' }\n\n        const { width = DEFAULT_DIMENSIONS.WIDTH, height = DEFAULT_DIMENSIONS.HEIGHT } = options.dimensions || {};\n        this.dimensions = { width, height };\n\n        this.url = options.url;\n        this.domain = options.domain;\n        this.bridgeUrl = options.bridgeUrl;\n\n        this.attributes = options.attributes || {};\n        this.attributes.iframe = this.attributes.iframe || {};\n        this.attributes.popup = this.attributes.popup || {};\n\n        this.defaultContext = options.defaultContext || CONTEXT.IFRAME;\n\n        this.autoResize = options.autoResize;\n\n        this.containerTemplate = options.containerTemplate || defaultContainerTemplate;\n        this.prerenderTemplate = options.prerenderTemplate || defaultPrerenderTemplate;\n\n        this.validate = options.validate;\n\n        this.logger = options.logger || {\n            debug: noop,\n            info:  noop,\n            warn:  noop,\n            error: noop\n        };\n\n        this.registerChild();\n        this.listenDelegate();\n\n        Component.components[this.tag] = this;\n    }\n\n    @memoize\n    getPropNames() : $ReadOnlyArray<string> {\n        const props = Object.keys(this.props);\n\n        for (const key of Object.keys(this.builtinProps)) {\n            if (props.indexOf(key) === -1) {\n                props.push(key);\n            }\n        }\n\n        return props;\n    }\n\n    // $FlowFixMe\n    getPropDefinition(name : string) : MixedPropDefinitionType<P> {\n        // $FlowFixMe\n        return this.props[name] || this.builtinProps[name];\n    }\n\n    driver(name : string, dep : mixed) : mixed {\n        if (!drivers[name]) {\n            throw new Error(`Could not find driver for framework: ${ name }`);\n        }\n\n        this.driverCache = this.driverCache || {};\n\n        if (!this.driverCache[name]) {\n            this.driverCache[name] = drivers[name].register(this, dep);\n        }\n\n        return this.driverCache[name];\n    }\n\n    registerChild() {\n        if (this.isChild()) {\n            if (window.xprops) {\n                throw new Error(`Can not register ${ this.name } as child - can not attach multiple components to the same window`);\n            }\n\n            const child = new ChildComponent(this);\n            window.xprops = this.xprops = child.getProps();\n        }\n    }\n\n    listenDelegate() {\n        on(`${ POST_MESSAGE.ALLOW_DELEGATE }_${ this.name }`, () => {\n            return true;\n        });\n\n        on(`${ POST_MESSAGE.DELEGATE }_${ this.name }`, ({ source, data: { context, props, overrides } }) => {\n            const delegate = new DelegateComponent(this, source, { context, props, overrides });\n            return delegate.getDelegate();\n        });\n    }\n\n    canRenderTo(win : CrossDomainWindowType) : ZalgoPromise<boolean> {\n        return send(win, `${ POST_MESSAGE.ALLOW_DELEGATE }_${ this.name }`).then(({ data }) => {\n            return data;\n        }).catch(() => {\n            return false;\n        });\n    }\n\n    getUrl(props : PropsType<P>) : string {\n        if (typeof this.url === 'function') {\n            return this.url({ props });\n        }\n\n        return this.url;\n    }\n\n    getInitialDomain(props : PropsType<P>) : string {\n        if (this.domain && typeof this.domain === 'string') {\n            return this.domain;\n        }\n\n        return getDomainFromUrl(this.getUrl(props));\n    }\n\n    getDomain(props : PropsType<P>) : string | RegExp {\n        if (isRegex(this.domain)) {\n            // $FlowFixMe\n            return this.domain;\n        }\n\n        return this.getInitialDomain(props);\n    }\n\n    getBridgeUrl() : ?string {\n        if (this.bridgeUrl) {\n            return this.bridgeUrl;\n        }\n    }\n\n    isChild() : boolean {\n        return isZoidComponentWindow() && parseChildWindowName().tag === this.tag;\n    }\n\n    getDefaultElement(context : $Values<typeof CONTEXT>, element : ?ElementRefType) : ElementRefType {\n        if (element) {\n            if (!isElement(element) && typeof element !== 'string') {\n                throw new Error(`Expected element to be passed`);\n            }\n\n            return element;\n        }\n\n        if (context === CONTEXT.POPUP) {\n            return 'body';\n        }\n\n        throw new Error(`Expected element to be passed to render iframe`);\n    }\n\n    getDefaultContext(context : ?$Values<typeof CONTEXT>, props : PropsInputType<P>) : $Values<typeof CONTEXT> {\n        if (props.window) {\n            return ProxyWindow.toProxyWindow(props.window).getType();\n        }\n\n        if (context) {\n            if (context !== CONTEXT.IFRAME && context !== CONTEXT.POPUP) {\n                throw new Error(`Unrecognized context: ${ context }`);\n            }\n            \n            return context;\n        }\n\n        return this.defaultContext;\n    }\n\n    init(props : PropsInputType<P>) : ZoidComponentInstance<P> {\n\n        // $FlowFixMe\n        props = props || {};\n        \n        const parent = new ParentComponent(this, props);\n\n        const render = (target, element, context) => ZalgoPromise.try(() => {\n            if (!isWindow(target)) {\n                throw new Error(`Must pass window to renderTo`);\n            }\n\n            context = this.getDefaultContext(context, props);\n            element = this.getDefaultElement(context, element);\n            return parent.render(target, element, context);\n        });\n\n        return {\n            ...parent.getHelpers(),\n            render:   (element, context) => render(window, element, context),\n            renderTo: (target, element, context) => render(target, element, context)\n        };\n    }\n\n    checkAllowRender(target : CrossDomainWindowType, domain : string | RegExp, element : ElementRefType) {\n        if (target === window) {\n            return;\n        }\n\n        if (!isSameTopWindow(window, target)) {\n            throw new Error(`Can only renderTo an adjacent frame`);\n        }\n\n        const origin = getDomain();\n\n        if (!matchDomain(domain, origin) && !isSameDomain(target)) {\n            throw new Error(`Can not render remotely to ${ domain.toString() } - can only render to ${ origin }`);\n        }\n\n        if (element && typeof element !== 'string') {\n            throw new Error(`Element passed to renderTo must be a string selector, got ${ typeof element } ${ element }`);\n        }\n    }\n\n    log(event : string, payload? : LoggerPayload) {\n        this.logger.info(`${ this.name }_${ event }`, payload);\n    }\n\n    static components : { [string] : Component<*> } = {}\n    static activeComponents : Array<ParentComponent<*> | DelegateComponent<*>> = [] // eslint-disable-line flowtype/no-mutable-array\n\n    registerActiveComponent<Q>(instance : ParentComponent<Q> | DelegateComponent<Q>) {\n        Component.activeComponents.push(instance);\n    }\n\n    destroyActiveComponent<Q>(instance : ParentComponent<Q> | DelegateComponent<Q>) {\n        Component.activeComponents.splice(Component.activeComponents.indexOf(instance), 1);\n    }\n\n    static destroyAll() : ZalgoPromise<void> {\n        if (bridge) {\n            bridge.destroyBridges();\n        }\n\n        const results = [];\n\n        while (Component.activeComponents.length) {\n            results.push(Component.activeComponents[0].destroy());\n        }\n\n        return ZalgoPromise.all(results).then(noop);\n    }\n}\n\nexport type ComponentDriverType<P, T : mixed> = {|\n    register : (Component<P>, T) => mixed\n|};\n\nexport function create<P>(options : ComponentOptionsType<P>) : ZoidComponent<P> {\n    const component : Component<P> = new Component(options);\n\n    const init = (props) => component.init(props);\n    init.driver = (name, dep) => component.driver(name, dep);\n    init.isChild = () => component.isChild();\n    init.canRenderTo = (win) => component.canRenderTo(win);\n    init.xprops = component.xprops;\n\n    // $FlowFixMe\n    return init;\n}\n\nexport function destroyAll() : ZalgoPromise<void> {\n    return Component.destroyAll();\n}\n","/* @flow */\n\nimport { isPerc, isPx, values } from 'belter/src';\n\nimport { CONTEXT, PROP_TYPE } from '../constants';\n\nimport type { ComponentOptionsType } from './index';\n\nfunction validatePropDefinitions<P>(options : ComponentOptionsType<P>) {\n\n    if (options.props && !(typeof options.props === 'object')) {\n        throw new Error(`Expected options.props to be an object`);\n    }\n\n    const PROP_TYPE_LIST = values(PROP_TYPE);\n\n    if (options.props) {\n        for (const key of Object.keys(options.props)) {\n\n            // $FlowFixMe\n            const prop = options.props[key];\n\n            if (!prop || !(typeof prop === 'object')) {\n                throw new Error(`Expected options.props.${ key } to be an object`);\n            }\n\n            if (!prop.type) {\n                throw new Error(`Expected prop.type`);\n            }\n\n            if (PROP_TYPE_LIST.indexOf(prop.type) === -1) {\n                throw new Error(`Expected prop.type to be one of ${ PROP_TYPE_LIST.join(', ') }`);\n            }\n\n            if (prop.required && prop.default) {\n                throw new Error(`Required prop can not have a default value`);\n            }\n\n            if (prop.type === PROP_TYPE.FUNCTION && prop.queryParam) {\n                throw new Error(`Do not pass queryParam for function prop`);\n            }\n        }\n    }\n}\n\n// eslint-disable-next-line complexity\nexport function validate<P>(options : ?ComponentOptionsType<P>) { // eslint-ignore-line\n\n    if (!options) {\n        throw new Error(`Expected options to be passed`);\n    }\n\n    // eslint-disable-next-line security/detect-unsafe-regex, unicorn/no-unsafe-regex\n    if (!options.tag || !options.tag.match(/^([a-z0-9]+-)+[a-z0-9]+$/)) {\n        throw new Error(`Invalid options.tag: ${ options.tag }`);\n    }\n\n    validatePropDefinitions(options);\n\n    if (options.dimensions) {\n        if (options.dimensions && !isPx(options.dimensions.width) && !isPerc(options.dimensions.width)) {\n            throw new Error(`Expected options.dimensions.width to be a px or % string value`);\n        }\n\n        if (options.dimensions && !isPx(options.dimensions.height) && !isPerc(options.dimensions.height)) {\n            throw new Error(`Expected options.dimensions.height to be a px or % string value`);\n        }\n    }\n\n    if (options.defaultContext) {\n        if (options.defaultContext !== CONTEXT.IFRAME && options.defaultContext !== CONTEXT.POPUP) {\n            throw new Error(`Unsupported context type: ${ options.defaultContext || 'unknown' }`);\n        }\n    }\n\n    if (!options.url) {\n        throw new Error(`Must pass url`);\n    }\n\n    if (typeof options.url !== 'string' && typeof options.url !== 'function') {\n        throw new TypeError(`Expected url to be string or function`);\n    }\n\n    if (options.prerenderTemplate && typeof options.prerenderTemplate !== 'function') {\n        throw new Error(`Expected options.prerenderTemplate to be a function`);\n    }\n\n    if (options.containerTemplate && typeof options.containerTemplate !== 'function') {\n        throw new Error(`Expected options.containerTemplate to be a function`);\n    }\n}\n","/* @flow */\n\nimport { ZalgoPromise } from 'zalgo-promise/src';\nimport { once, noop } from 'belter/src';\nimport { isWindow, type CrossDomainWindowType } from 'cross-domain-utils/src';\nimport { ProxyWindow } from 'post-robot/src/serialize/window';\n\nimport { PROP_SERIALIZATION } from '../constants';\n\nexport type EventHandlerType<T> = (T) => void | ZalgoPromise<void>;\n\nexport type timeoutPropType = number;\nexport type windowPropType = CrossDomainWindowType | ProxyWindow;\nexport type closePropType = () => ZalgoPromise<void>;\nexport type focusPropType = () => ZalgoPromise<void>;\nexport type resizePropType = ({ width : ?number, height : ?number }) => ZalgoPromise<void>;\n\nexport type onDisplayPropType = EventHandlerType<void>;\nexport type onRenderedPropType = EventHandlerType<void>;\nexport type onRenderPropType = EventHandlerType<void>;\nexport type onClosePropType = EventHandlerType<void>;\nexport type onErrorPropType = EventHandlerType<mixed>;\nexport type onChangePropType<P> = ((PropsType<P>) => void) => void; // eslint-disable-line no-use-before-define\n\nexport type PropsInputType<P> = {\n    timeout? : timeoutPropType,\n    window? : windowPropType,\n\n    onDisplay? : onDisplayPropType,\n    onRendered? : onRenderedPropType,\n    onRender? : onRenderPropType,\n    onClose? : onClosePropType,\n    onError? : onErrorPropType\n} & P;\n\nexport type PropsType<P> = {|\n    timeout? : timeoutPropType,\n    window? : ?windowPropType,\n    close? : ?closePropType,\n    focus? : ?focusPropType,\n    resize? : ?resizePropType,\n\n    onDisplay : onDisplayPropType,\n    onRendered : onRenderedPropType,\n    onRender : onRenderPropType,\n    onClose : onClosePropType,\n    onError : onErrorPropType,\n    onChange : onChangePropType<P>\n|} & P;\n\ntype PropDefinitionType<T, P, S : string> = {|\n    type : S,\n    alias? : string,\n    value? : ({ props : P, state : Object, close : () => ZalgoPromise<void>, focus : () => ZalgoPromise<void>, onError : (mixed) => ZalgoPromise<void> }) => ?T,\n    required? : boolean,\n    queryParam? : boolean | string | ({ value : T }) => (string | ZalgoPromise<string>),\n    queryValue? : ({ value : T }) => (ZalgoPromise<mixed> | mixed),\n    sendToChild? : boolean,\n    allowDelegate? : boolean,\n    validate? : ({ value : T, props : PropsInputType<P> }) => void,\n    decorate? : ({ value : T, props : PropsType<P>, state : Object, close : () => ZalgoPromise<void>, focus : () => ZalgoPromise<void>, onError : (mixed) => ZalgoPromise<void> }) => T,\n    default? : ({ props : P, state : Object }) => ?T,\n    sameDomain? : boolean,\n    serialization? : $Values<typeof PROP_SERIALIZATION>,\n    childDecorate? : ({ value : T, close : () => ZalgoPromise<void>, focus : () => ZalgoPromise<void>, onError : (mixed) => ZalgoPromise<void>, onPropsChange : ((PropsType<P>) => void) => void, resize : ({ width : ?number, height : ?number }) => ZalgoPromise<void> }) => ?T\n|};\n\nexport type BooleanPropDefinitionType<T : boolean, P> = PropDefinitionType<T, P, 'boolean'>;\nexport type StringPropDefinitionType<T : string, P> = PropDefinitionType<T, P, 'string'>;\nexport type NumberPropDefinitionType<T : number, P> = PropDefinitionType<T, P, 'number'>;\nexport type FunctionPropDefinitionType<T : Function, P> = PropDefinitionType<T, P, 'function'>;\nexport type ArrayPropDefinitionType<T : Array<*>, P> = PropDefinitionType<T, P, 'array'>; // eslint-disable-line flowtype/no-mutable-array\nexport type ObjectPropDefinitionType<T : Object, P> = PropDefinitionType<T, P, 'object'>;\n\nexport type MixedPropDefinitionType<P> = BooleanPropDefinitionType<*, P> | StringPropDefinitionType<*, P> | NumberPropDefinitionType<*, P> | FunctionPropDefinitionType<*, P> | ObjectPropDefinitionType<*, P> | ArrayPropDefinitionType<*, P>;\n\nexport type UserPropsDefinitionType<P> = {\n    [string] : MixedPropDefinitionType<P>\n};\n\n// eslint-disable-next-line flowtype/require-exact-type\nexport type BuiltInPropsDefinitionType<P> = {\n    timeout : NumberPropDefinitionType<timeoutPropType, P>,\n    window : ObjectPropDefinitionType<windowPropType, P>,\n    close : FunctionPropDefinitionType<closePropType, P>,\n    focus : FunctionPropDefinitionType<focusPropType, P>,\n    resize : FunctionPropDefinitionType<resizePropType, P>,\n\n    onDisplay : FunctionPropDefinitionType<onDisplayPropType, P>,\n    onRendered : FunctionPropDefinitionType<onRenderedPropType, P>,\n    onRender : FunctionPropDefinitionType<onRenderPropType, P>,\n    onClose : FunctionPropDefinitionType<onClosePropType, P>,\n    onError : FunctionPropDefinitionType<onErrorPropType, P>,\n    onChange : FunctionPropDefinitionType<onChangePropType<P>, P>\n};\n\nexport function getInternalProps<P>() : BuiltInPropsDefinitionType<P> {\n    return {\n        window: {\n            type:          'object',\n            sendToChild:   false,\n            required:      false,\n            allowDelegate: true,\n            validate({ value } : { value : CrossDomainWindowType | ProxyWindow }) {\n                if (!isWindow(value) && !ProxyWindow.isProxyWindow(value)) {\n                    throw new Error(`Expected Window or ProxyWindow`);\n                }\n            },\n            decorate({ value } : { value : CrossDomainWindowType | ProxyWindow }) : ProxyWindow {\n                return ProxyWindow.toProxyWindow(value);\n            }\n        },\n\n        timeout: {\n            type:        'number',\n            required:    false,\n            sendToChild: false\n        },\n\n        close: {\n            type:          'function',\n            required:      false,\n            sendToChild:   false,\n            childDecorate: ({ close }) => {\n                return close;\n            }\n        },\n\n        focus: {\n            type:          'function',\n            required:      false,\n            sendToChild:   false,\n            childDecorate: ({ focus }) => {\n                return focus;\n            }\n        },\n\n        resize: {\n            type:          'function',\n            required:      false,\n            sendToChild:   false,\n            childDecorate: ({ resize }) => {\n                return resize;\n            }\n        },\n\n        onDisplay: {\n            type:          'function',\n            required:      false,\n            sendToChild:   false,\n            allowDelegate: true,\n            default:       () => noop,\n            decorate:      ({ value }) => once(value)\n        },\n\n        onRendered: {\n            type:        'function',\n            required:    false,\n            sendToChild: false,\n            default:     () => noop,\n            decorate:    ({ value }) => once(value)\n        },\n\n        onRender: {\n            type:        'function',\n            required:    false,\n            sendToChild: false,\n            default:     () => noop,\n            decorate:    ({ value }) => once(value)\n        },\n\n        onClose: {\n            type:          'function',\n            required:      false,\n            sendToChild:   false,\n            allowDelegate: true,\n            default:       () => noop,\n            decorate:      ({ value }) => once(value)\n        },\n\n        onError: {\n            type:          'function',\n            required:      false,\n            sendToChild:   false,\n            childDecorate: ({ onError }) => {\n                return function childOnError(err : mixed) : ZalgoPromise<void> {\n                    return onError(err);\n                };\n            }\n        },\n\n        onChange: {\n            type:          'function',\n            required:      false,\n            sendToChild:   false,\n            childDecorate: ({ onPropsChange }) => {\n                return onPropsChange;\n            }\n        }\n    };\n}\n","/* @flow */\n\nexport { PopupOpenError } from 'belter/src';\nexport { create, destroyAll, Component } from './component';\nexport type { ZoidComponent } from './component';\nexport { PROP_TYPE, PROP_SERIALIZATION, CONTEXT, CLASS } from './constants';\n"],"sourceRoot":""}