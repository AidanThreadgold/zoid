{"version":3,"sources":["webpack://zoid/webpack/universalModuleDefinition","webpack://zoid/webpack/bootstrap","webpack://zoid/./node_modules/@babel/runtime/helpers/esm/extends.js","webpack://zoid/./node_modules/zalgo-promise/src/utils.js","webpack://zoid/./node_modules/zalgo-promise/src/exceptions.js","webpack://zoid/./node_modules/zalgo-promise/src/flush.js","webpack://zoid/./node_modules/zalgo-promise/src/promise.js","webpack://zoid/./node_modules/cross-domain-utils/src/util.js","webpack://zoid/./node_modules/cross-domain-utils/src/constants.js","webpack://zoid/./node_modules/cross-domain-utils/src/utils.js","webpack://zoid/./node_modules/cross-domain-safe-weakmap/src/util.js","webpack://zoid/./node_modules/cross-domain-safe-weakmap/src/weakmap.js","webpack://zoid/./node_modules/belter/src/util.js","webpack://zoid/./node_modules/belter/src/dom.js","webpack://zoid/./node_modules/cross-domain-safe-weakmap/src/native.js","webpack://zoid/./node_modules/belter/src/css.js","webpack://zoid/./node_modules/post-robot/src/conf/config.js","webpack://zoid/./node_modules/post-robot/src/conf/constants.js","webpack://zoid/./node_modules/post-robot/src/global.js","webpack://zoid/./node_modules/post-robot/src/lib/hello.js","webpack://zoid/./node_modules/post-robot/src/lib/windows.js","webpack://zoid/./node_modules/universal-serialize/src/constants.js","webpack://zoid/./node_modules/universal-serialize/src/common.js","webpack://zoid/./node_modules/universal-serialize/src/serialize.js","webpack://zoid/./node_modules/universal-serialize/src/serializers/function.js","webpack://zoid/./node_modules/universal-serialize/src/serializers/error.js","webpack://zoid/./node_modules/universal-serialize/src/serializers/promise.js","webpack://zoid/./node_modules/universal-serialize/src/serializers/regex.js","webpack://zoid/./node_modules/universal-serialize/src/serializers/date.js","webpack://zoid/./node_modules/universal-serialize/src/serializers/array.js","webpack://zoid/./node_modules/universal-serialize/src/serializers/object.js","webpack://zoid/./node_modules/universal-serialize/src/serializers/string.js","webpack://zoid/./node_modules/universal-serialize/src/serializers/number.js","webpack://zoid/./node_modules/universal-serialize/src/serializers/boolean.js","webpack://zoid/./node_modules/universal-serialize/src/serializers/null.js","webpack://zoid/./node_modules/universal-serialize/src/deserialize.js","webpack://zoid/./node_modules/post-robot/src/serialize/window.js","webpack://zoid/./node_modules/post-robot/src/bridge/common.js","webpack://zoid/./node_modules/post-robot/src/serialize/function.js","webpack://zoid/./node_modules/post-robot/src/serialize/serialize.js","webpack://zoid/./node_modules/post-robot/src/serialize/promise.js","webpack://zoid/./node_modules/post-robot/src/drivers/send/strategies.js","webpack://zoid/./node_modules/post-robot/src/drivers/send/index.js","webpack://zoid/./node_modules/post-robot/src/lib/compat.js","webpack://zoid/./node_modules/post-robot/src/drivers/listeners.js","webpack://zoid/./node_modules/post-robot/src/drivers/receive/types.js","webpack://zoid/./node_modules/post-robot/src/drivers/receive/index.js","webpack://zoid/./node_modules/post-robot/src/public/on.js","webpack://zoid/./node_modules/post-robot/src/public/send.js","webpack://zoid/./node_modules/post-robot/src/setup.js","webpack://zoid/./src/lib/global.js","webpack://zoid/./src/lib/serialize.js","webpack://zoid/./node_modules/post-robot/src/index.js","webpack://zoid/./src/constants.js","webpack://zoid/./src/child/props.js","webpack://zoid/./src/child/window.js","webpack://zoid/./src/child/index.js","webpack://zoid/./src/parent/drivers.js","webpack://zoid/./src/parent/props.js","webpack://zoid/./node_modules/post-robot/src/clean.js","webpack://zoid/./src/parent/index.js","webpack://zoid/./src/delegate/index.js","webpack://zoid/./src/component/templates/container.js","webpack://zoid/./src/component/templates/component.js","webpack://zoid/./src/component/props.js","webpack://zoid/./src/component/component.js","webpack://zoid/./src/component/validate.js","webpack://zoid/./src/index.js"],"names":["root","factory","exports","module","define","amd","self","this","installedModules","__webpack_require__","moduleId","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","hasOwnProperty","p","s","_extends","assign","target","arguments","length","source","apply","isPromise","item","Promise","window","Window","constructor","toString","then","err","flushPromise","dispatchedErrors","possiblyUnhandledPromiseHandlers","activeCount","flushActive","promise","resolve","startActive","endActive","ZalgoPromise","handler","_this","resolved","rejected","errorHandled","error","handlers","dispatching","stack","result","isAsync","res","reject","_proto","prototype","Error","dispatch","_this2","setTimeout","indexOf","push","j","dispatchPossiblyUnhandledError","asyncReject","_this3","_loop","_handlers$i","onSuccess","onError","catch","undefined","finally","onFinally","try","timeout","time","_this4","clearTimeout","toPromise","TypeError","all","promises","count","results","_loop2","prom","hash","keys","map","items","method","onPossiblyUnhandledException","cancel","splice","context","args","delay","flush","isRegex","PROTOCOL","MOCK","FILE","ABOUT","WILDCARD","WINDOW_TYPE","IFRAME","POPUP","IE_WIN_ACCESS_ERROR","isAboutProtocol","win","location","protocol","getParent","parent","getOpener","opener","canReadFromWindow","getActualDomain","host","getDomain","domain","mockDomain","isSameDomain","desc","getOwnPropertyDescriptor","isActuallySameDomain","assertSameDomain","isAncestorParent","child","childParent","getParents","getFrames","frames","len","frame","getAllChildFrames","_i3","_getFrames2","_i5","_getAllChildFrames2","getTop","top","_i7","_getAllChildFrames4","getAllFramesInWindow","concat","iframeWindows","iframeFrames","isWindowClosed","allowMock","closed","message","mockclosed","iframeIndex","collection","safeIndexOf","contentWindow","parentNode","doc","ownerDocument","documentElement","contains","isFrameWindowClosed","getAncestor","anyMatch","collection1","collection2","_i17","item1","_i19","getDistanceFromTop","distance","isSameTopWindow","win1","win2","top1","top2","allFrames1","allFrames2","opener1","opener2","matchDomain","pattern","origin","Array","isArray","Boolean","match","JSON","stringify","some","subpattern","getDomainFromUrl","url","split","slice","join","onCloseWindow","callback","maxtime","Infinity","check","isWindow","obj","objectIDs","awaitFrameLoadPromises","counter","Date","now","CrossDomainSafeWeakMap","weakmap","values","Math","random","WeakMap","freeze","testWeakMap","testKey","set","hasNativeWeakMap","_cleanupClosedWindows","delete","isSafeToReadWrite","entry","writable","index","has","getOrSet","base64encode","str","btoa","Buffer","from","uniqueID","chars","replace","charAt","floor","toISOString","toLowerCase","serializeArgs","subkey","val","uid","getObjectID","inlineMemoize","logic","cache","__inline_memoize_cache__","noop","once","called","stringifyError","level","newErr","extend","isDefined","cleanup","tasks","cleaned","register","task","pop","assertExists","thing","isDocumentReady","document","body","readyState","urlEncode","waitForDocumentReady","interval","setInterval","clearInterval","parseQuery","queryString","params","_i2","_queryString$split2","pair","decodeURIComponent","extendQuery","originalQuery","props","filter","appendChild","container","isElement","element","Element","nodeType","style","getElementSafe","id","querySelector","elementReady","el","PopupOpenError","awaitFrameLoad","addEventListener","cleanIframes","linkFrameWindow","awaitFrameWindow","loadedFrame","iframe","options","tag","styleText","createElement","class","className","setAttribute","attributes","_i6","_Object$keys2","styleSheet","cssText","createTextNode","html","innerHTML","allowTransparency","backgroundColor","border","isIE","navigator","userAgent","hasAttribute","getElement","event","removeEventListener","destroyElement","removeChild","isElementClosed","onResize","_temp","_ref2","_ref2$width","width","_ref2$height","height","_ref2$interval","_ref2$win","currentWidth","offsetWidth","currentHeight","offsetHeight","observer","newWidth","newHeight","ResizeObserver","observe","MutationObserver","childList","subtree","characterData","loop","disconnect","isPerc","test","isPx","toPx","parseInt","toNum","toCSS","CHILD_WINDOW_TIMEOUT","ACK_TIMEOUT","ACK_TIMEOUT_KNOWN","RES_TIMEOUT","MESSAGE_TYPE","REQUEST","RESPONSE","ACK","MESSAGE_NAME","METHOD","HELLO","OPEN_TUNNEL","SERIALIZATION_TYPE","CROSS_DOMAIN_ZALGO_PROMISE","CROSS_DOMAIN_FUNCTION","CROSS_DOMAIN_WINDOW","getGlobal","getObj","globalStore","defStore","store","storeKey","defVal","del","reset","WildCard","getWildcard","global","WINDOW_WILDCARD","windowStore","winStore","getStore","getInstanceID","getHelloPromise","sayHello","_ref3","send","instanceID","_ref4","data","getWindowInstanceID","_ref5","_ref6","markWindowKnown","TYPE","FUNCTION","ERROR","PROMISE","REGEX","DATE","ARRAY","OBJECT","STRING","NUMBER","BOOLEAN","NULL","UNDEFINED","isSerializedType","__type__","determineType","serializeType","type","__val__","SERIALIZER","_SERIALIZER","_ref","code","toJSON","defaultSerializers","DESERIALIZER","_DESERIALIZER","RegExp","defaultDeserializers","cleanupProxyWindows","idToProxyWindow","_idToProxyWindow$keys2","shouldClean","ProxyWindow","serializedWindow","actualWindow","isProxyWindow","actualWindowPromise","setWindow","memoizedPromiseFunction","_len2","_key2","memoizePromise","getType","isPopup","isIframe","setLocation","href","setName","frameElement","close","focus","isClosed","_this5","getWindow","awaitWindow","matchWindow","_this6","unwrap","serialize","toProxyWindow","deserialize","on","addMethod","methodStore","proxyWindowMethods","lookupMethod","serializeFunction","destination","meth","methodSource","listenForFunctionCalls","__id__","__name__","serializeMessage","_serialize","serializers","serializer","serializePromise","deserializeMessage","_deserialize","deserializers","parse","deserializer","serializedPromise","serializedFunction","getDeserializedFunction","opts","crossDomainFunctionWrapper","_arguments","fireAndForget","__origin__","__source__","deserializeFunction","_ref7","SEND_MESSAGE_STRATEGIES","sendMessage","_serializeMessage","serializedMessage","strategies","errors","strategyName","dom","forEach","postMessage","mockUserAgent","getUserAgent","foreignGlobal","receiveMessage","__DOMAIN_REGEX__","getResponseListener","deleteResponseListener","isResponseListenerErrored","getRequestListener","requestListeners","winQualifier","nameListeners","domainListeners","_i4","_domainListeners$__DO2","_domainListeners$__DO3","listener","regex","RECEIVE_MESSAGE_TYPES","_RECEIVE_MESSAGE_TYPE","sendResponse","ack","response","pathname","handleError","receivedMessages","parsedMessage","parseMessage","requestListener","addRequestListener","listenersCollection","_win2","_i8","_i10","_domain2","_i12","existingListener","regexListeners","regexListener","strDomain","errorHandler","responseTimeout","childTimeout","reqPromises","requestPromise","actualParent","_i15","_getFrames8","isAncestor","awaitWindowHello","logName","hasResult","markResponseListenerErrored","responseListener","addResponseListener","totalAckTimeout","isWindowKnown","totalResTimeout","ackTimeout","resTimeout","cycleTime","cycle","max","min","internalSerializeMessage","internalDeserializeMessage","globalFor","getProxyElement","resize","initialized","sourceElement","originalEvent","messageListener","listenForMessages","initHello","setup","ZOID","POST_MESSAGE","PROP_TYPE","PROP_SERIALIZATION","DOTIFY","BASE64","CONTEXT","DEFAULT_DIMENSIONS","WIDTH","HEIGHT","EVENT","RENDER","RENDERED","DISPLAY","CLOSE","PROPS","normalizeChildProp","component","helpers","prop","getPropDefinition","childDecorate","parseChildWindowName","windowName","_windowName$split","zoidcomp","encodedPayload","atob","base64decode","getChildPayload","ChildComponent","parentComponentWindow","onPropHandlers","autoResize","childPayload","__ZOID__","version","getParentComponentWindow","checkParentDomain","initialProps","getPropsByRef","setProps","watchForClose","init","buildExports","watchForResize","getHelpers","onProps","allowedParentDomains","ref","getNthParent","ancestor","_getAllFramesInWindow2","windows","getProps","isUpdate","existingProps","sameDomain","alias","_component$getPropNam2","getPropNames","normalizeChildProps","_this$onPropHandlers2","checkClose","destroy","getAutoResize","_ref3$width","_ref3$height","_ref3$element","_this4$getAutoResize","updateProps","RENDER_DRIVERS","getQueryParam","queryParam","getQueryValue","queryValue","openOnClick","openFrame","title","open","proxyFrame","frameWatcher","clean","_requestPromises$get2","cleanUpWindow","openPrerenderFrame","openPrerender","proxyWin","proxyPrerenderFrame","prerenderFrame","prerenderFrameWindow","delegate","proxyContainer","ParentComponent","driver","initPromise","handledErrors","state","setupEvents","registerActiveComponent","destroyActiveComponent","watchForUnload","triggered","eventName","handlerList","cancelled","trigger","_len3","_key3","triggerOnce","_len4","_key4","onRender","onDisplay","onRendered","onClose","render","log","initialDomain","getInitialDomain","checkAllowRender","buildUrl","getProxyContainer","renderContainer","setState","setProxyWin","prerender","loadUrl","setWindowName","buildWindowName","openBridge","runTimeout","containerElement","buildChildPayload","getPropsRef","getPropsForChild","propRef","_ref7$target","getWindowRef","buildParentExports","_ref8","validate","inputProps","propNames","aliases","propDef","default","_Object$keys4","decorate","required","extendProps","propsDef","builtinProps","serialization","dotify","prefix","newobj","every","_Object$keys6","dotkey","query","originalUrl","originalHash","_url$split","_originalUrl$split","hashString","extendUrl","normalizeMockUrl","getUrl","sendToChild","_this7","_this8","_this9","_this10","windowProp","_this11","_this12","_this13","_this$component$getPr2","propName","allowDelegate","overridesPromise","overrides","_ref9","_this$driver$delegate2","_this14","_this15","closeWindowListener","_this16","unloadWindowListener","_this17","initChild","_this18","_this19","_ref10","_ref11","_this20","_this21","secondClosed","_this22","proxyPrerenderWin","_ref12","_this23","prerenderTemplate","prerenderWindow","isBlankDomain","renderTemplate","tagName","children","writeElementToWindow","_ref13","_ref13$width","_ref13$height","_ref13$element","_ref14","renderer","_ref15","_this24","dimensions","_ref16","_this25","_ref17","innerContainer","containerTemplate","_this26","_this27","DelegateComponent","watchForSourceClose","getDelegate","getOverrides","closeSourceWindowListener","CLASS","VISIBLE","INVISIBLE","defaultContainerTemplate","_ref$dimensions","classList","add","remove","div","defaultPrerenderTemplate","spinner","defaultNoop","decorateOnce","Component","bridgeUrl","defaultContext","driverCache","xprops","logger","PROP_TYPE_LIST","validatePropDefinitions","components","_ref$width","_ref$height","popup","debug","info","warn","registerChild","listenDelegate","dep","isChild","_ref2$data","canRenderTo","getBridgeUrl","payload","getDefaultContainer","getDefaultContext","renderTo","instance","activeComponents","destroyAll","__webpack_exports__","component_destroyAll","component_Component"],"mappings":"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","file":"zoid.frame.min.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"zoid\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"zoid\"] = factory();\n\telse\n\t\troot[\"zoid\"] = factory();\n})((typeof self !== 'undefined' ? self : this), function() {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 0);\n","export default function _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}","/* @flow */\n\nexport function isPromise(item : mixed) : boolean {\n    try {\n        if (!item) {\n            return false;\n        }\n\n        if (typeof Promise !== 'undefined' && item instanceof Promise) {\n            return true;\n        }\n\n        if (typeof window !== 'undefined' && window.Window && item instanceof window.Window) {\n            return false;\n        }\n\n        if (typeof window !== 'undefined' && window.constructor && item instanceof window.constructor) {\n            return false;\n        }\n\n        let toString = ({}).toString;\n\n        if (toString) {\n            let name = toString.call(item);\n\n            if (name === '[object Window]' || name === '[object global]' || name === '[object DOMWindow]') {\n                return false;\n            }\n        }\n\n        if (typeof item.then === 'function') {\n            return true;\n        }\n    } catch (err) {\n        return false;\n    }\n\n    return false;\n}\n","/* @flow */\n\nimport type { ZalgoPromise } from './promise';\n\nconst dispatchedErrors = [];\nconst possiblyUnhandledPromiseHandlers = [];\n\nexport function dispatchPossiblyUnhandledError<T>(err : mixed, promise : ZalgoPromise<T>) {\n\n    if (dispatchedErrors.indexOf(err) !== -1) {\n        return;\n    }\n\n    dispatchedErrors.push(err);\n\n    setTimeout(() => {\n        if (__DEBUG__) {\n            // $FlowFixMe\n            throw new Error(`${ err.stack || err.toString() }\\n\\nFrom promise:\\n\\n${ promise.stack }`);\n        }\n\n        throw err;\n    }, 1);\n\n    for (let j = 0; j < possiblyUnhandledPromiseHandlers.length; j++) {\n        // $FlowFixMe\n        possiblyUnhandledPromiseHandlers[j](err, promise);\n    }\n}\n\nexport function onPossiblyUnhandledException(handler : (mixed, promise? : ZalgoPromise<*>) => void) : { cancel : () => void } {\n    possiblyUnhandledPromiseHandlers.push(handler);\n\n    return {\n        cancel() {\n            possiblyUnhandledPromiseHandlers.splice(possiblyUnhandledPromiseHandlers.indexOf(handler), 1);\n        }\n    };\n}\n","/* @flow */\n\nimport type { ZalgoPromise } from './promise';\n\nlet activeCount = 0;\nlet flushPromise;\n\nfunction flushActive() {\n    if (!activeCount && flushPromise) {\n        const promise = flushPromise;\n        flushPromise = null;\n        promise.resolve();\n    }\n}\n\nexport function startActive() {\n    activeCount += 1;\n}\n\nexport function endActive() {\n    activeCount -= 1;\n    flushActive();\n}\n\nexport function awaitActive(Zalgo : Class<ZalgoPromise<*>>) : ZalgoPromise<void> { // eslint-disable-line no-undef\n    let promise = flushPromise = flushPromise || new Zalgo();\n    flushActive();\n    return promise;\n}\n","/* @flow */\n\nimport { isPromise } from './utils';\nimport { onPossiblyUnhandledException, dispatchPossiblyUnhandledError } from './exceptions';\nimport { startActive, endActive, awaitActive } from './flush';\n\nexport class ZalgoPromise<R : mixed> {\n\n    resolved : boolean\n    rejected : boolean\n    errorHandled : boolean\n    value : R\n    error : mixed\n    handlers : Array<{\n        promise : ZalgoPromise<*>,\n        onSuccess : void | (result : R) => mixed,\n        onError : void | (error : mixed) => mixed\n    }>\n    dispatching : boolean\n    stack : string\n\n    constructor(handler : ?(resolve : (result : R) => void, reject : (error : mixed) => void) => void) {\n\n        this.resolved = false;\n        this.rejected = false;\n        this.errorHandled = false;\n\n        this.handlers = [];\n\n        if (handler) {\n\n            let result;\n            let error;\n            let resolved = false;\n            let rejected = false;\n            let isAsync = false;\n\n            startActive();\n\n            try {\n                handler(res => {\n                    if (isAsync) {\n                        this.resolve(res);\n                    } else {\n                        resolved = true;\n                        result = res;\n                    }\n\n                }, err => {\n                    if (isAsync) {\n                        this.reject(err);\n                    } else {\n                        rejected = true;\n                        error = err;\n                    }\n                });\n\n            } catch (err) {\n                endActive();\n                this.reject(err);\n                return;\n            }\n\n            endActive();\n\n            isAsync = true;\n\n            if (resolved) {\n                // $FlowFixMe\n                this.resolve(result);\n            } else if (rejected) {\n                this.reject(error);\n            }\n        }\n\n        if (__DEBUG__) {\n            try {\n                throw new Error(`ZalgoPromise`);\n            } catch (err) {\n                this.stack = err.stack;\n            }\n        }\n    }\n\n    resolve(result : R) : ZalgoPromise<R> {\n        if (this.resolved || this.rejected) {\n            return this;\n        }\n\n        if (isPromise(result)) {\n            throw new Error('Can not resolve promise with another promise');\n        }\n\n        this.resolved = true;\n        this.value = result;\n        this.dispatch();\n\n        return this;\n    }\n\n    reject(error : mixed) : ZalgoPromise<R> {\n        if (this.resolved || this.rejected) {\n            return this;\n        }\n\n        if (isPromise(error)) {\n            throw new Error('Can not reject promise with another promise');\n        }\n\n        if (!error) {\n            let err = (error && typeof error.toString === 'function' ? error.toString() : Object.prototype.toString.call(error));\n            error = new Error(`Expected reject to be called with Error, got ${ err }`);\n        }\n\n        this.rejected = true;\n        this.error = error;\n\n        if (!this.errorHandled) {\n            setTimeout(() => {\n                if (!this.errorHandled) {\n                    dispatchPossiblyUnhandledError(error, this);\n                }\n            }, 1);\n        }\n\n        this.dispatch();\n\n        return this;\n    }\n\n    asyncReject(error : mixed) : ZalgoPromise<R> {\n        this.errorHandled = true;\n        this.reject(error);\n        return this;\n    }\n    \n    dispatch() {\n\n        let { dispatching, resolved, rejected, handlers } = this;\n\n        if (dispatching) {\n            return;\n        }\n\n        if (!resolved && !rejected) {\n            return;\n        }\n\n        this.dispatching = true;\n        startActive();\n\n        for (let i = 0; i < handlers.length; i++) {\n\n            let { onSuccess, onError, promise } = handlers[i];\n\n            let result;\n\n            if (resolved) {\n\n                try {\n                    result = onSuccess ? onSuccess(this.value) : this.value;\n                } catch (err) {\n                    promise.reject(err);\n                    continue;\n                }\n\n            } else if (rejected) {\n\n                if (!onError) {\n                    promise.reject(this.error);\n                    continue;\n                }\n\n                try {\n                    result = onError(this.error);\n                } catch (err) {\n                    promise.reject(err);\n                    continue;\n                }\n            }\n\n            if (result instanceof ZalgoPromise && (result.resolved || result.rejected)) {\n\n                if (result.resolved) {\n                    promise.resolve(result.value);\n                } else {\n                    promise.reject(result.error);\n                }\n\n                result.errorHandled = true;\n\n            } else if (isPromise(result)) {\n\n                if (result instanceof ZalgoPromise && (result.resolved || result.rejected)) {\n                    if (result.resolved) {\n                        promise.resolve(result.value);\n                    } else {\n                        promise.reject(result.error);\n                    }\n\n                } else {\n                    // $FlowFixMe\n                    result.then(res => {\n                        promise.resolve(res);\n                    }, err => {\n                        promise.reject(err);\n                    });\n                }\n\n            } else {\n\n                promise.resolve(result);\n            }\n        }\n\n        handlers.length = 0;\n        this.dispatching = false;\n        endActive();\n    }\n\n    then<X : mixed, Y : mixed>(onSuccess : void | (result : R) => (ZalgoPromise<X> | Y), onError : void | (error : mixed) => (ZalgoPromise<X> | Y)) : ZalgoPromise<X | Y> {\n\n        if (onSuccess && typeof onSuccess !== 'function' && !onSuccess.call) {\n            throw new Error('Promise.then expected a function for success handler');\n        }\n\n        if (onError && typeof onError !== 'function' && !onError.call) {\n            throw new Error('Promise.then expected a function for error handler');\n        }\n\n        let promise : ZalgoPromise<X | Y> = new ZalgoPromise();\n\n        this.handlers.push({\n            promise,\n            onSuccess,\n            onError\n        });\n\n        this.errorHandled = true;\n\n        this.dispatch();\n\n        return promise;\n    }\n\n    catch<X : mixed, Y : mixed>(onError : (error : mixed) => ZalgoPromise<X> | Y) : ZalgoPromise<X | Y> {\n        return this.then(undefined, onError);\n    }\n\n    finally(onFinally : () => mixed) : ZalgoPromise<R> {\n\n        if (onFinally && typeof onFinally !== 'function' && !onFinally.call) {\n            throw new Error('Promise.finally expected a function');\n        }\n\n        return this.then((result) => {\n            return ZalgoPromise.try(onFinally)\n                .then(() => {\n                    return result;\n                });\n        }, (err) => {\n            return ZalgoPromise.try(onFinally)\n                .then(() => {\n                    throw err;\n                });\n        });\n    }\n\n    timeout(time : number, err : ?Error) : ZalgoPromise<R> {\n\n        if (this.resolved || this.rejected) {\n            return this;\n        }\n\n        let timeout = setTimeout(() => {\n\n            if (this.resolved || this.rejected) {\n                return;\n            }\n\n            this.reject(err || new Error(`Promise timed out after ${ time }ms`));\n\n        }, time);\n\n        return this.then(result => {\n            clearTimeout(timeout);\n            return result;\n        });\n    }\n\n    // $FlowFixMe\n    toPromise() : Promise<R> {\n        // $FlowFixMe\n        if (typeof Promise === 'undefined') {\n            throw new TypeError(`Could not find Promise`);\n        }\n        // $FlowFixMe\n        return Promise.resolve(this); // eslint-disable-line compat/compat\n    }\n\n    static resolve<X : mixed>(value : X | ZalgoPromise<X>) : ZalgoPromise<X> {\n\n        if (value instanceof ZalgoPromise) {\n            return value;\n        }\n\n        if (isPromise(value)) {\n            // $FlowFixMe\n            return new ZalgoPromise((resolve, reject) => value.then(resolve, reject));\n        }\n\n        return new ZalgoPromise().resolve(value);\n    }\n\n    static reject(error : mixed) : ZalgoPromise<R> {\n        return new ZalgoPromise().reject(error);\n    }\n\n    static asyncReject(error : mixed) : ZalgoPromise<R> {\n        return new ZalgoPromise().asyncReject(error);\n    }\n\n    static all<X : [*] | [*, *] | [*, *, *] | [*, *, *, *] | [*, *, *, *, *] | [*, *, *, *, *, *] | [*, *, *, *, *, *, *] | [*, *, *, *, *, *, *, *] | [*, *, *, *, *, *, *, *, *] | Array<mixed>>(promises : X) : ZalgoPromise<$TupleMap<X, <Y>(ZalgoPromise<Y> | Y) => Y>> { // eslint-disable-line no-undef\n\n        let promise = new ZalgoPromise();\n        let count = promises.length;\n        let results = [];\n\n        if (!count) {\n            promise.resolve(results);\n            return promise;\n        }\n\n        for (let i = 0; i < promises.length; i++) {\n            let prom = promises[i];\n\n            if (prom instanceof ZalgoPromise) {\n                if (prom.resolved) {\n                    results[i] = prom.value;\n                    count -= 1;\n                    continue;\n                }\n            } else if (!isPromise(prom)) {\n                results[i] = prom;\n                count -= 1;\n                continue;\n            }\n\n            ZalgoPromise.resolve(prom).then(result => {\n                results[i] = result;\n                count -= 1;\n                if (count === 0) {\n                    promise.resolve(results);\n                }\n            }, err => {\n                promise.reject(err);\n            });\n        }\n\n        if (count === 0) {\n            promise.resolve(results);\n        }\n\n        return promise;\n    }\n\n    static hash<O : { [string] : * }>(promises : O) : ZalgoPromise<$ObjMap<O, <Y>(ZalgoPromise<Y> | Y) => Y>> { // eslint-disable-line no-undef\n        let result = {};\n        \n        return ZalgoPromise.all(Object.keys(promises).map(key => {\n            return ZalgoPromise.resolve(promises[key]).then(value => {\n                result[key] = value;\n            });\n        })).then(() => {\n            return result;\n        });\n    }\n\n    static map<T, X>(items : Array<T>, method : (T) => (ZalgoPromise<X> | X)) : ZalgoPromise<Array<X>> {\n        // $FlowFixMe\n        return ZalgoPromise.all(items.map(method));\n    }\n\n    static onPossiblyUnhandledException(handler : (err : mixed) => void) : { cancel : () => void } {\n        return onPossiblyUnhandledException(handler);\n    }\n\n    static try<X : mixed, Y : mixed, C : mixed, A : Array<mixed>>(method : (...args : A) => (ZalgoPromise<X> | Y), context : ?C, args : ?A) : ZalgoPromise<X | Y> {\n\n        if (method && typeof method !== 'function' && !method.call) {\n            throw new Error('Promise.try expected a function');\n        }\n\n        let result;\n\n        startActive();\n        \n        try {\n            // $FlowFixMe\n            result = method.apply(context, args || []);\n        } catch (err) {\n            endActive();\n            return ZalgoPromise.reject(err);\n        }\n\n        endActive();\n\n        return ZalgoPromise.resolve(result);\n    }\n\n    static delay(delay : number) : ZalgoPromise<void> {\n        return new ZalgoPromise(resolve => {\n            setTimeout(resolve, delay);\n        });\n    }\n\n    static isPromise(value : mixed) : boolean {\n\n        if (value && value instanceof ZalgoPromise) {\n            return true;\n        }\n\n        return isPromise(value);\n    }\n\n    static flush() : ZalgoPromise<void> {\n        return awaitActive(ZalgoPromise);\n    }\n}\n","/* @flow */\n\nexport function isRegex(item : mixed) : boolean {\n    return Object.prototype.toString.call(item) === '[object RegExp]';\n}\n\n// eslint-disable-next-line no-unused-vars\nexport function noop(...args : Array<mixed>) {\n    // pass\n}\n","/* @flow */\n\nexport const PROTOCOL = {\n    MOCK:  ('mock:' : 'mock:'),\n    FILE:  ('file:' : 'file:'),\n    ABOUT: ('about:' : 'about:')\n};\n\nexport const WILDCARD = '*';\n\nexport const WINDOW_TYPE = {\n    IFRAME: ('iframe' : 'iframe'),\n    POPUP:  ('popup' : 'popup')\n};\n","/* @flow */\n/* eslint max-lines: 0 */\n\nimport { isRegex, noop } from './util';\nimport type { CrossDomainWindowType, SameDomainWindowType, DomainMatcher } from './types';\nimport { PROTOCOL, WILDCARD } from './constants';\n\nlet IE_WIN_ACCESS_ERROR = 'Call was rejected by callee.\\r\\n';\n\nexport function isFileProtocol(win : SameDomainWindowType = window) : boolean {\n    return win.location.protocol === PROTOCOL.FILE;\n}\n\nexport function isAboutProtocol(win : SameDomainWindowType = window) : boolean {\n    return win.location.protocol === PROTOCOL.ABOUT;\n}\n\nexport function getParent(win : ?CrossDomainWindowType) : ?CrossDomainWindowType {\n\n    if (!win) {\n        return;\n    }\n\n    try {\n        if (win.parent && win.parent !== win) {\n            return win.parent;\n        }\n    } catch (err) {\n        // pass\n    }\n}\n\nexport function getOpener(win : ?CrossDomainWindowType) : ?CrossDomainWindowType {\n\n    if (!win) {\n        return;\n    }\n\n    // Make sure we're not actually an iframe which has had window.open() called on us\n    if (getParent(win)) {\n        return;\n    }\n\n    try {\n        return win.opener;\n    } catch (err) {\n        // pass\n    }\n}\n\nexport function canReadFromWindow(win : CrossDomainWindowType | SameDomainWindowType) : boolean {\n    try {\n        // $FlowFixMe\n        noop(win && win.location && win.location.href);\n        return true;\n    } catch (err) {\n        // pass\n    }\n\n    return false;\n}\n\nexport function getActualDomain(win : ?SameDomainWindowType) : string {\n\n    win = win || window;\n\n    let location = win.location;\n\n    if (!location) {\n        throw new Error(`Can not read window location`);\n    }\n\n    let protocol = location.protocol;\n\n    if (!protocol) {\n        throw new Error(`Can not read window protocol`);\n    }\n\n    if (protocol === PROTOCOL.FILE) {\n        return `${ PROTOCOL.FILE }//`;\n    }\n\n    if (protocol === PROTOCOL.ABOUT) {\n\n        let parent = getParent(win);\n        if (parent && canReadFromWindow(parent)) {\n            // $FlowFixMe\n            return getActualDomain(parent);\n        }\n\n        return `${ PROTOCOL.ABOUT }//`;\n    }\n\n    let host = location.host;\n\n    if (!host) {\n        throw new Error(`Can not read window host`);\n    }\n\n    return `${ protocol }//${ host }`;\n}\n\nexport function getDomain(win : ?SameDomainWindowType) : string {\n\n    win = win || window;\n\n    let domain = getActualDomain(win);\n\n    if (domain && win.mockDomain && win.mockDomain.indexOf(PROTOCOL.MOCK) === 0) {\n        return win.mockDomain;\n    }\n\n    return domain;\n}\n\nexport function isBlankDomain(win : CrossDomainWindowType) : boolean {\n    try {\n        // $FlowFixMe\n        if (!win.location.href) {\n            return true;\n        }\n\n        if (win.location.href === 'about:blank') {\n            return true;\n        }\n    } catch (err) {\n        // pass\n    }\n\n    return false;\n}\n\nexport function isActuallySameDomain(win : CrossDomainWindowType) : boolean {\n\n    try {\n        if (win === window) {\n            return true;\n        }\n\n    } catch (err) {\n        // pass\n    }\n\n    try {\n        let desc = Object.getOwnPropertyDescriptor(win, 'location');\n\n        if (desc && desc.enumerable === false) {\n            return false;\n        }\n\n    } catch (err) {\n        // pass\n    }\n\n    try {\n        // $FlowFixMe\n        if (isAboutProtocol(win) && canReadFromWindow(win)) {\n            return true;\n        }\n    } catch (err) {\n        // pass\n    }\n\n    try {\n        // $FlowFixMe\n        if (getActualDomain(win) === getActualDomain(window)) {\n            return true;\n        }\n\n    } catch (err) {\n        // pass\n    }\n\n    return false;\n}\n\nexport function isSameDomain(win : CrossDomainWindowType | SameDomainWindowType) : boolean {\n\n    if (!isActuallySameDomain(win)) {\n        return false;\n    }\n\n    try {\n\n        if (win === window) {\n            return true;\n        }\n\n        // $FlowFixMe\n        if (isAboutProtocol(win) && canReadFromWindow(win)) {\n            return true;\n        }\n\n        // $FlowFixMe\n        if (getDomain(window) === getDomain(win)) {\n            return true;\n        }\n\n    } catch (err) {\n        // pass\n    }\n\n    return false;\n}\n\n\nexport function assertSameDomain(win : CrossDomainWindowType | SameDomainWindowType) : SameDomainWindowType {\n    if (!isSameDomain(win)) {\n        throw new Error(`Expected window to be same domain`);\n    }\n\n    // $FlowFixMe\n    return win;\n}\n\nexport function getParents(win : CrossDomainWindowType) : Array<CrossDomainWindowType> {\n\n    let result = [];\n\n    try {\n\n        while (win.parent !== win) {\n            result.push(win.parent);\n            win = win.parent;\n        }\n\n    } catch (err) {\n        // pass\n    }\n\n    return result;\n}\n\nexport function isAncestorParent(parent : CrossDomainWindowType, child : CrossDomainWindowType) : boolean {\n\n    if (!parent || !child) {\n        return false;\n    }\n\n    let childParent = getParent(child);\n\n    if (childParent) {\n        return childParent === parent;\n    }\n\n    if (getParents(child).indexOf(parent) !== -1) {\n        return true;\n    }\n\n    return false;\n}\n\nexport function getFrames(win : CrossDomainWindowType) : Array<CrossDomainWindowType> {\n\n    let result = [];\n\n    let frames;\n\n    try {\n        frames = win.frames;\n    } catch (err) {\n        frames = win;\n    }\n\n    let len;\n\n    try {\n        len = frames.length;\n    } catch (err) {\n        // pass\n    }\n\n    if (len === 0) {\n        return result;\n    }\n\n    if (len) {\n        for (let i = 0; i < len; i++) {\n\n            let frame;\n\n            try {\n                frame = frames[i];\n            } catch (err) {\n                continue;\n            }\n\n            result.push(frame);\n        }\n\n        return result;\n    }\n\n    for (let i = 0; i < 100; i++) {\n        let frame;\n\n        try {\n            frame = frames[i];\n        } catch (err) {\n            return result;\n        }\n\n        if (!frame) {\n            return result;\n        }\n\n        result.push(frame);\n    }\n\n    return result;\n}\n\n\nexport function getAllChildFrames(win : CrossDomainWindowType) : Array<CrossDomainWindowType> {\n\n    let result = [];\n\n    for (let frame of getFrames(win)) {\n        result.push(frame);\n\n        for (let childFrame of getAllChildFrames(frame)) {\n            result.push(childFrame);\n        }\n    }\n\n    return result;\n}\n\nexport function getTop(win : CrossDomainWindowType) : ?CrossDomainWindowType {\n\n    if (!win) {\n        return;\n    }\n\n    try {\n        if (win.top) {\n            return win.top;\n        }\n    } catch (err) {\n        // pass\n    }\n\n    if (getParent(win) === win) {\n        return win;\n    }\n\n    try {\n        if (isAncestorParent(window, win) && window.top) {\n            return window.top;\n        }\n    } catch (err) {\n        // pass\n    }\n\n    try {\n        if (isAncestorParent(win, window) && window.top) {\n            return window.top;\n        }\n    } catch (err) {\n        // pass\n    }\n\n    for (let frame of getAllChildFrames(win)) {\n        try {\n            if (frame.top) {\n                return frame.top;\n            }\n        } catch (err) {\n            // pass\n        }\n\n        if (getParent(frame) === frame) {\n            return frame;\n        }\n    }\n}\n\nexport function getNextOpener(win? : CrossDomainWindowType = window) : ?CrossDomainWindowType {\n    return getOpener(getTop(win) || win);\n}\n\nexport function getUltimateTop(win? : CrossDomainWindowType = window) : CrossDomainWindowType {\n    let opener = getNextOpener(win);\n\n    if (opener) {\n        return getUltimateTop(opener);\n    }\n\n    return top;\n}\n\nexport function getAllFramesInWindow(win : CrossDomainWindowType) : Array<CrossDomainWindowType> {\n    let top = getTop(win);\n\n    if (!top) {\n        throw new Error(`Can not determine top window`);\n    }\n\n    return [ ...getAllChildFrames(top), top ];\n}\n\nexport function getAllWindows(win? : CrossDomainWindowType = window) : $ReadOnlyArray<CrossDomainWindowType> {\n    let frames = getAllFramesInWindow(win);\n    let opener = getNextOpener(win);\n\n    if (opener) {\n        return [ ...getAllWindows(opener), ...frames ];\n    } else {\n        return frames;\n    }\n}\n\nexport function isTop(win : CrossDomainWindowType) : boolean {\n    return win === getTop(win);\n}\n\nexport function isFrameWindowClosed(frame : HTMLIFrameElement) : boolean {\n\n    if (!frame.contentWindow) {\n        return true;\n    }\n\n    if (!frame.parentNode) {\n        return true;\n    }\n\n    let doc = frame.ownerDocument;\n\n    if (doc && doc.documentElement && !doc.documentElement.contains(frame)) {\n        return true;\n    }\n\n    return false;\n}\n\nfunction safeIndexOf<T>(collection : Array<T>, item : T) : number {\n    for (let i = 0; i < collection.length; i++) {\n\n        try {\n            if (collection[i] === item) {\n                return i;\n            }\n        } catch (err) {\n            // pass\n        }\n    }\n\n    return -1;\n}\n\nlet iframeWindows = [];\nlet iframeFrames = [];\n\nexport function isWindowClosed(win : CrossDomainWindowType, allowMock : boolean = true) : boolean {\n\n    try {\n        if (win === window) {\n            return false;\n        }\n    } catch (err) {\n        return true;\n    }\n\n    try {\n        if (!win) {\n            return true;\n        }\n\n    } catch (err) {\n        return true;\n    }\n\n    try {\n        if (win.closed) {\n            return true;\n        }\n\n    } catch (err) {\n\n        // I love you so much IE\n\n        if (err && err.message === IE_WIN_ACCESS_ERROR) {\n            return false;\n        }\n\n        return true;\n    }\n\n\n    if (allowMock && isSameDomain(win)) {\n        try {\n            // $FlowFixMe\n            if (win.mockclosed) {\n                return true;\n            }\n        } catch (err) {\n            // pass\n        }\n    }\n\n    // Mobile safari\n\n    try {\n        if (!win.parent || !win.top) {\n            return true;\n        }\n    } catch (err) {\n        // pass\n    }\n\n    // Yes, this actually happens in IE. win === win errors out when the window\n    // is from an iframe, and the iframe was removed from the page.\n\n    try {\n        noop(win === win); // eslint-disable-line no-self-compare\n    } catch (err) {\n        return true;\n    }\n\n    // IE orphaned frame\n\n    let iframeIndex = safeIndexOf(iframeWindows, win);\n\n    if (iframeIndex !== -1) {\n        let frame = iframeFrames[iframeIndex];\n\n        if (frame && isFrameWindowClosed(frame)) {\n            return true;\n        }\n    }\n\n    return false;\n}\n\nfunction cleanIframes() {\n    for (let i = 0; i < iframeWindows.length; i++) {\n        let closed = false;\n\n        try {\n            closed = iframeWindows[i].closed;\n        } catch (err) {\n            // pass\n        }\n\n        if (closed) {\n            iframeFrames.splice(i, 1);\n            iframeWindows.splice(i, 1);\n        }\n    }\n}\n\nexport function linkFrameWindow(frame : HTMLIFrameElement) {\n\n    cleanIframes();\n\n    if (frame && frame.contentWindow) {\n        try {\n            iframeWindows.push(frame.contentWindow);\n            iframeFrames.push(frame);\n        } catch (err) {\n            // pass\n        }\n    }\n}\n\nexport function getUserAgent(win : ?SameDomainWindowType) : string {\n    win = win || window;\n    return win.navigator.mockUserAgent || win.navigator.userAgent;\n}\n\n\nexport function getFrameByName(win : CrossDomainWindowType, name : string) : ?CrossDomainWindowType {\n\n    let winFrames = getFrames(win);\n\n    for (let childFrame of winFrames) {\n        try {\n            // $FlowFixMe\n            if (isSameDomain(childFrame) && childFrame.name === name && winFrames.indexOf(childFrame) !== -1) {\n                return childFrame;\n            }\n        } catch (err) {\n            // pass\n        }\n    }\n\n    try {\n        // $FlowFixMe\n        if (winFrames.indexOf(win.frames[name]) !== -1) {\n            // $FlowFixMe\n            return win.frames[name];\n        }\n    } catch (err) {\n        // pass\n    }\n\n    try {\n        if (winFrames.indexOf(win[name]) !== -1) {\n            return win[name];\n        }\n    } catch (err) {\n        // pass\n    }\n}\n\nexport function findChildFrameByName(win : CrossDomainWindowType, name : string) : ?CrossDomainWindowType {\n\n    let frame = getFrameByName(win, name);\n\n    if (frame) {\n        return frame;\n    }\n\n    for (let childFrame of getFrames(win)) {\n        let namedFrame = findChildFrameByName(childFrame, name);\n\n        if (namedFrame) {\n            return namedFrame;\n        }\n    }\n}\n\nexport function findFrameByName(win : CrossDomainWindowType, name : string) : ?CrossDomainWindowType {\n\n    let frame;\n\n    frame = getFrameByName(win, name);\n\n    if (frame) {\n        return frame;\n    }\n\n    let top = getTop(win) || win;\n\n    return findChildFrameByName(top, name);\n}\n\nexport function isParent(win : CrossDomainWindowType, frame : CrossDomainWindowType) : boolean {\n\n    let frameParent = getParent(frame);\n\n    if (frameParent) {\n        return frameParent === win;\n    }\n\n    for (let childFrame of getFrames(win)) {\n        if (childFrame === frame) {\n            return true;\n        }\n    }\n\n    return false;\n}\n\nexport function isOpener(parent : CrossDomainWindowType, child : CrossDomainWindowType) : boolean {\n\n    return parent === getOpener(child);\n}\n\nexport function getAncestor(win : ?CrossDomainWindowType) : ?CrossDomainWindowType {\n    win = win || window;\n\n    let opener = getOpener(win);\n\n    if (opener) {\n        return opener;\n    }\n\n    let parent = getParent(win);\n\n    if (parent) {\n        return parent;\n    }\n}\n\nexport function getAncestors(win : CrossDomainWindowType) : Array<CrossDomainWindowType> {\n\n    let results = [];\n\n    let ancestor = win;\n\n    while (ancestor) {\n        ancestor = getAncestor(ancestor);\n        if (ancestor) {\n            results.push(ancestor);\n        }\n    }\n\n    return results;\n}\n\n\nexport function isAncestor(parent : CrossDomainWindowType, child : CrossDomainWindowType) : boolean {\n\n    let actualParent = getAncestor(child);\n\n    if (actualParent) {\n        if (actualParent === parent) {\n            return true;\n        }\n\n        return false;\n    }\n\n    if (child === parent) {\n        return false;\n    }\n\n    if (getTop(child) === child) {\n        return false;\n    }\n\n    for (let frame of getFrames(parent)) {\n        if (frame === child) {\n            return true;\n        }\n    }\n\n    return false;\n}\n\nexport function isPopup() : boolean {\n    return Boolean(getOpener(window));\n}\n\nexport function isIframe() : boolean {\n    return Boolean(getParent(window));\n}\n\nexport function isFullpage() : boolean {\n    return Boolean(!isIframe() && !isPopup());\n}\n\nfunction anyMatch(collection1, collection2) : boolean {\n\n    for (let item1 of collection1) {\n        for (let item2 of collection2) {\n            if (item1 === item2) {\n                return true;\n            }\n        }\n    }\n\n    return false;\n}\n\nexport function getDistanceFromTop(win : CrossDomainWindowType = window) : number {\n    let distance = 0;\n    let parent = win;\n\n    while (parent) {\n        parent = getParent(parent);\n        if (parent) {\n            distance += 1;\n        }\n    }\n\n    return distance;\n}\n\nexport function getNthParent(win : CrossDomainWindowType, n : number = 1) : ?CrossDomainWindowType {\n    let parent = win;\n\n    for (let i = 0; i < n; i++) {\n        if (!parent) {\n            return;\n        }\n\n        parent = getParent(parent);\n    }\n\n    return parent;\n}\n\nexport function getNthParentFromTop(win : CrossDomainWindowType, n : number = 1) : ?CrossDomainWindowType {\n    return getNthParent(win, getDistanceFromTop(win) - n);\n}\n\nexport function isSameTopWindow(win1 : CrossDomainWindowType, win2 : CrossDomainWindowType) : boolean {\n\n    let top1 = getTop(win1) || win1;\n    let top2 = getTop(win2) || win2;\n\n    try {\n        if (top1 && top2) {\n            if (top1 === top2) {\n                return true;\n            }\n\n            return false;\n        }\n    } catch (err) {\n        // pass\n    }\n\n    let allFrames1 = getAllFramesInWindow(win1);\n    let allFrames2 = getAllFramesInWindow(win2);\n\n    if (anyMatch(allFrames1, allFrames2)) {\n        return true;\n    }\n\n    let opener1 = getOpener(top1);\n    let opener2 = getOpener(top2);\n\n    if (opener1 && anyMatch(getAllFramesInWindow(opener1), allFrames2)) {\n        return false;\n    }\n\n    if (opener2 && anyMatch(getAllFramesInWindow(opener2), allFrames1)) {\n        return false;\n    }\n\n    return false;\n}\n\nexport function matchDomain(pattern : DomainMatcher, origin : DomainMatcher) : boolean {\n\n    if (typeof pattern === 'string') {\n\n        if (typeof origin === 'string') {\n            return pattern === WILDCARD || origin === pattern;\n        }\n\n        if (isRegex(origin)) {\n            return false;\n        }\n\n        if (Array.isArray(origin)) {\n            return false;\n        }\n    }\n\n    if (isRegex(pattern)) {\n\n        if (isRegex(origin)) {\n            return pattern.toString() === origin.toString();\n        }\n\n        if (Array.isArray(origin)) {\n            return false;\n        }\n\n        // $FlowFixMe\n        return Boolean(origin.match(pattern));\n    }\n\n    if (Array.isArray(pattern)) {\n\n        if (Array.isArray(origin)) {\n            return JSON.stringify(pattern) === JSON.stringify(origin);\n        }\n\n        if (isRegex(origin)) {\n            return false;\n        }\n\n        return pattern.some(subpattern => matchDomain(subpattern, origin));\n    }\n\n    return false;\n}\n\nexport function stringifyDomainPattern(pattern : DomainMatcher) : string {\n    if (Array.isArray(pattern)) {\n        return `(${ pattern.join(' | ') })`;\n    } else if (isRegex(pattern)) {\n        return `RegExp(${ pattern.toString() }`;\n    } else {\n        return pattern.toString();\n    }\n}\n\nexport function getDomainFromUrl(url : string) : string {\n\n    let domain;\n\n    if (url.match(/^(https?|mock|file):\\/\\//)) {\n        domain = url;\n    } else {\n        return getDomain();\n    }\n\n    domain = domain.split('/').slice(0, 3).join('/');\n\n    return domain;\n}\n\nexport function onCloseWindow(win : CrossDomainWindowType, callback : Function, delay : number = 1000, maxtime : number = Infinity) : { cancel : () => void } {\n\n    let timeout;\n\n    let check = () => {\n\n        if (isWindowClosed(win)) {\n\n            if (timeout) {\n                clearTimeout(timeout);\n            }\n\n            return callback();\n        }\n\n        if (maxtime <= 0) {\n            clearTimeout(timeout);\n        } else {\n            maxtime -= delay;\n            timeout = setTimeout(check, delay);\n        }\n    };\n\n    check();\n\n    return {\n        cancel() {\n            if (timeout) {\n                clearTimeout(timeout);\n            }\n        }\n    };\n}\n\n// eslint-disable-next-line complexity\nexport function isWindow(obj : Object) : boolean {\n\n    try {\n        if (obj === window) {\n            return true;\n        }\n    } catch (err) {\n        if (err && err.message === IE_WIN_ACCESS_ERROR) {\n            return true;\n        }\n    }\n\n    try {\n        if (Object.prototype.toString.call(obj) === '[object Window]') {\n            return true;\n        }\n    } catch (err) {\n        if (err && err.message === IE_WIN_ACCESS_ERROR) {\n            return true;\n        }\n    }\n\n    try {\n        if (window.Window && obj instanceof window.Window) {\n            return true;\n        }\n    } catch (err) {\n        if (err && err.message === IE_WIN_ACCESS_ERROR) {\n            return true;\n        }\n    }\n\n    try {\n        if (obj && obj.self === obj) {\n            return true;\n        }\n    } catch (err) {\n        if (err && err.message === IE_WIN_ACCESS_ERROR) {\n            return true;\n        }\n    }\n\n    try {\n        if (obj && obj.parent === obj) {\n            return true;\n        }\n    } catch (err) {\n        if (err && err.message === IE_WIN_ACCESS_ERROR) {\n            return true;\n        }\n    }\n\n    try {\n        if (obj && obj.top === obj) {\n            return true;\n        }\n    } catch (err) {\n        if (err && err.message === IE_WIN_ACCESS_ERROR) {\n            return true;\n        }\n    }\n\n    try {\n        noop(obj === obj);  // eslint-disable-line no-self-compare\n\n    } catch (err) {\n        return true;\n    }\n\n    try {\n        noop(obj && obj.__cross_domain_utils_window_check__);\n\n    } catch (err) {\n        return true;\n    }\n\n    return false;\n}\n\nexport function isBrowser() : boolean {\n    return (typeof window !== 'undefined' && typeof window.location !== 'undefined');\n}\n\nexport function isCurrentDomain(domain : string) : boolean {\n    if (!isBrowser()) {\n        return false;\n    }\n\n    return (getDomain() === domain);\n}\n\nexport function isMockDomain(domain : string) : boolean {\n    return domain.indexOf(PROTOCOL.MOCK) === 0;\n}\n\nexport function normalizeMockUrl(url : string) : string {\n    if (!isMockDomain(getDomainFromUrl(url))) {\n        return url;\n    }\n\n    if (!__TEST__) {\n        throw new Error(`Mock urls not supported out of test mode`);\n    }\n\n    return url.replace(/^mock:\\/\\/[^/]+/, getActualDomain(window));\n}\n","/* @flow */\n\nexport function safeIndexOf<T>(collection : Array<T>, item : T) : number {\n    for (let i = 0; i < collection.length; i++) {\n\n        try {\n            if (collection[i] === item) {\n                return i;\n            }\n        } catch (err) {\n            // pass\n        }\n    }\n\n    return -1;\n}\n\n// eslint-disable-next-line no-unused-vars\nexport function noop(...args : Array<mixed>) {\n    // pass\n}\n","/* @flow */\n\nimport { isWindow, isWindowClosed } from 'cross-domain-utils/src';\n\nimport { hasNativeWeakMap } from './native';\nimport { noop, safeIndexOf } from './util';\n\nlet defineProperty = Object.defineProperty;\nlet counter = Date.now() % 1e9;\n\nexport class CrossDomainSafeWeakMap<K : Object, V : mixed> {\n\n    name : string\n    weakmap : WeakMap<K, V>\n    keys : Array<K>\n    values : Array<V>\n\n    constructor() {\n        counter += 1;\n\n        // eslint-disable-next-line no-bitwise\n        this.name = `__weakmap_${ Math.random() * 1e9 >>> 0 }__${ counter }`;\n\n        if (hasNativeWeakMap()) {\n            try {\n                this.weakmap = new WeakMap();\n            } catch (err) {\n                // pass\n            }\n        }\n\n        this.keys  = [];\n        this.values = [];\n    }\n\n    _cleanupClosedWindows() {\n\n        let weakmap = this.weakmap;\n        let keys = this.keys;\n\n        for (let i = 0; i < keys.length; i++) {\n            let value = keys[i];\n\n            if (isWindow(value) && isWindowClosed(value)) {\n\n                if (weakmap) {\n                    try {\n                        weakmap.delete(value);\n                    } catch (err) {\n                        // pass\n                    }\n                }\n\n                keys.splice(i, 1);\n                this.values.splice(i, 1);\n\n                i -= 1;\n            }\n        }\n    }\n\n    isSafeToReadWrite(key : K) : boolean {\n\n        if (isWindow(key)) {\n            return false;\n        }\n\n        try {\n            noop(key && key.self);\n            noop(key && key[this.name]);\n        } catch (err) {\n            return false;\n        }\n\n        return true;\n    }\n\n    set(key : K, value : V) {\n\n        if (!key) {\n            throw new Error(`WeakMap expected key`);\n        }\n\n        let weakmap = this.weakmap;\n\n        if (weakmap) {\n            try {\n                weakmap.set(key, value);\n            } catch (err) {\n                delete this.weakmap;\n            }\n        }\n\n        if (!this.isSafeToReadWrite(key)) {\n\n            this._cleanupClosedWindows();\n\n            let keys = this.keys;\n            let values = this.values;\n            let index = safeIndexOf(keys, key);\n\n            if (index === -1) {\n                keys.push(key);\n                values.push(value);\n            } else {\n                values[index] = value;\n            }\n\n        } else {\n\n            let name = this.name;\n            let entry = key[name];\n\n            if (entry && entry[0] === key) {\n                entry[1] = value;\n            } else {\n                defineProperty(key, name, {\n                    value:    [ key, value ],\n                    writable: true\n                });\n            }\n        }\n    }\n\n    get(key : K) : V | void {\n\n        if (!key) {\n            throw new Error(`WeakMap expected key`);\n        }\n\n        let weakmap = this.weakmap;\n\n        if (weakmap) {\n            try {\n                if (weakmap.has(key)) {\n                    return weakmap.get(key);\n                }\n            } catch (err) {\n                delete this.weakmap;\n            }\n        }\n\n        if (!this.isSafeToReadWrite(key)) {\n\n            this._cleanupClosedWindows();\n\n            let keys = this.keys;\n            let index = safeIndexOf(keys, key);\n\n            if (index === -1) {\n                return;\n            }\n\n            return this.values[index];\n\n        } else {\n\n            let entry = key[this.name];\n\n            if (entry && entry[0] === key) {\n                return entry[1];\n            }\n        }\n    }\n\n    delete(key : K) {\n\n        if (!key) {\n            throw new Error(`WeakMap expected key`);\n        }\n\n        let weakmap = this.weakmap;\n\n        if (weakmap) {\n            try {\n                weakmap.delete(key);\n            } catch (err) {\n                delete this.weakmap;\n            }\n        }\n\n        if (!this.isSafeToReadWrite(key)) {\n\n            this._cleanupClosedWindows();\n\n            let keys = this.keys;\n            let index = safeIndexOf(keys, key);\n\n            if (index !== -1) {\n                keys.splice(index, 1);\n                this.values.splice(index, 1);\n            }\n\n        } else {\n\n            let entry = key[this.name];\n\n            if (entry && entry[0] === key) {\n                entry[0] = entry[1] = undefined;\n            }\n        }\n    }\n\n    has(key : K) : boolean {\n\n        if (!key) {\n            throw new Error(`WeakMap expected key`);\n        }\n\n        let weakmap = this.weakmap;\n\n        if (weakmap) {\n            try {\n                if (weakmap.has(key)) {\n                    return true;\n                }\n            } catch (err) {\n                delete this.weakmap;\n            }\n        }\n\n        if (!this.isSafeToReadWrite(key)) {\n\n            this._cleanupClosedWindows();\n\n            let index = safeIndexOf(this.keys, key);\n            return index !== -1;\n\n        } else {\n\n            let entry = key[this.name];\n\n            if (entry && entry[0] === key) {\n                return true;\n            }\n\n            return false;\n        }\n    }\n\n    getOrSet(key : K, getter : () => V) : V {\n        if (this.has(key)) {\n            // $FlowFixMe\n            return this.get(key);\n        }\n\n        let value = getter();\n        this.set(key, value);\n        return value;\n    }\n}\n","/* @flow */\n/* eslint max-lines: 0 */\n\nimport { ZalgoPromise } from 'zalgo-promise/src';\nimport { WeakMap } from 'cross-domain-safe-weakmap/src';\n\nimport type { CancelableType } from './types';\n\nexport function base64encode(str : string) : string {\n    if (typeof btoa === 'function') {\n        return btoa(str);\n    } else if (typeof Buffer !== 'undefined') {\n        return Buffer.from(str, 'utf8').toString('base64');\n    }\n\n    throw new Error(`Can not find window.btoa or Buffer`);\n}\n\nexport function base64decode(str : string) : string {\n    if (typeof window !== 'undefined' && typeof window.atob === 'function') {\n        return window.atob(str);\n    }\n\n    if (typeof Buffer !== 'undefined') {\n        return Buffer.from(str, 'base64').toString('utf8');\n    }\n\n    throw new Error(`Can not find window.atob or Buffer`);\n}\n\nexport function uniqueID() : string {\n\n    let chars = '0123456789abcdef';\n\n    let randomID = 'xxxxxxxxxx'.replace(/./g, () => {\n        return chars.charAt(Math.floor(Math.random() * chars.length));\n    });\n\n    let timeID = base64encode(\n        new Date().toISOString().slice(11, 19).replace('T', '.')\n    ).replace(/[^a-zA-Z0-9]/g, '').toLowerCase();\n\n    return `${ randomID }_${ timeID }`;\n}\n\nexport function getGlobal() : Object {\n    if (typeof window !== 'undefined') {\n        return window;\n    }\n    if (typeof global !== 'undefined') {\n        return global;\n    }\n    if (typeof __GLOBAL__ !== 'undefined') {\n        return __GLOBAL__;\n    }\n    throw new Error(`No global found`);\n}\n\nlet objectIDs;\n\nexport function getObjectID(obj : Object) : string {\n\n    objectIDs = objectIDs || new WeakMap();\n\n    if (obj === null || obj === undefined || (typeof obj !== 'object' && typeof obj !== 'function')) {\n        throw new Error(`Invalid object`);\n    }\n\n    let uid = objectIDs.get(obj);\n\n    if (!uid) {\n        uid = `${ typeof obj }:${ uniqueID() }`;\n        objectIDs.set(obj, uid);\n    }\n\n    return uid;\n}\n\nfunction serializeArgs(args : Array<mixed>) : string {\n    try {\n        return JSON.stringify(Array.prototype.slice.call(args), (subkey, val) => {\n            if (typeof val === 'function') {\n                return `memoize[${ getObjectID(val) }]`;\n            }\n            return val;\n        });\n    } catch (err) {\n        throw new Error(`Arguments not serializable -- can not be used to memoize`);\n    }\n}\n\n// eslint-disable-next-line flowtype/no-weak-types\nexport function memoize<R>(method : (...args : Array<any>) => R, options : { time? : number, name? : string, thisNamespace? : boolean } = {}) : ((...args : Array<any>) => R) {\n    let cacheMap = new WeakMap();\n\n    // eslint-disable-next-line flowtype/no-weak-types\n    function memoizedFunction(...args : Array<any>) : R {\n        let cache = cacheMap.getOrSet(options.thisNamespace ? this : method, () => ({}));\n\n        let key : string = serializeArgs(args);\n\n        let cacheTime = options.time;\n        if (cache[key] && cacheTime && (Date.now() - cache[key].time) < cacheTime) {\n            delete cache[key];\n        }\n\n        if (cache[key]) {\n            return cache[key].value;\n        }\n\n        let time  = Date.now();\n        let value = method.apply(this, arguments);\n\n        cache[key] = { time, value };\n\n        return cache[key].value;\n    }\n\n    memoizedFunction.reset = () => {\n        cacheMap.delete(options.thisNamespace ? this : method);\n    };\n\n    if (options.name) {\n        memoizedFunction.displayName = `${ options.name }:memoized`;\n    }\n\n    return memoizedFunction;\n}\n\n// eslint-disable-next-line flowtype/no-weak-types\nexport function memoizePromise<R>(method : (...args : Array<any>) => ZalgoPromise<R>) : ((...args : Array<any>) => ZalgoPromise<R>) {\n    let cache = {};\n\n    // eslint-disable-next-line flowtype/no-weak-types\n    function memoizedPromiseFunction(...args : Array<any>) : ZalgoPromise<R> {\n        let key : string = serializeArgs(args);\n\n        if (cache.hasOwnProperty(key)) {\n            return cache[key];\n        }\n\n        cache[key] = method.apply(this, arguments)\n            .finally(() => {\n                delete cache[key];\n            });\n\n        return cache[key];\n    }\n\n    memoizedPromiseFunction.reset = () => {\n        cache = {};\n    };\n\n    return memoizedPromiseFunction;\n}\n\n// eslint-disable-next-line flowtype/no-weak-types\nexport function promisify<R>(method : (...args : Array<any>) => R, options : { name? : string } = {}) : ((...args : Array<any>) => ZalgoPromise<R>) {\n    function promisifiedFunction() : ZalgoPromise<R> {\n        return ZalgoPromise.try(method, this, arguments);\n    }\n\n    if (options.name) {\n        promisifiedFunction.displayName = `${ options.name }:promisified`;\n    }\n\n    return promisifiedFunction;\n}\n\n// eslint-disable-next-line flowtype/no-weak-types\nexport function inlineMemoize<R>(method : (...args : Array<any>) => R, logic : (...args : Array<any>) => R, args : Array<any> = []) : R {\n    let cache = method.__inline_memoize_cache__ = method.__inline_memoize_cache__ || {};\n    let key = serializeArgs(args);\n\n    if (cache.hasOwnProperty(key)) {\n        return cache[key];\n    }\n    \n    let result = cache[key] = logic(...args);\n    return result;\n}\n\n// eslint-disable-next-line no-unused-vars\nexport function noop(...args : Array<mixed>) {\n    // pass\n}\n\nexport function once(method : Function) : Function {\n    let called = false;\n\n    return function onceFunction() : mixed {\n        if (!called) {\n            called = true;\n            return method.apply(this, arguments);\n        }\n    };\n}\n\nexport function hashStr(str : string) : number {\n    let hash = 0;\n    for (let i = 0; i < str.length; i++) {\n        hash += str[i].charCodeAt(0) * Math.pow((i % 10) + 1, 5);\n    }\n    return Math.floor(Math.pow(Math.sqrt(hash), 5));\n}\n\nexport function strHashStr(str : string) : string {\n    let hash = '';\n\n    for (let i = 0; i < str.length; i++) {\n        let total = (str[i].charCodeAt(0) * i);\n\n        if (str[i + 1]) {\n            total += (str[i + 1].charCodeAt(0) * (i - 1));\n        }\n\n        hash += String.fromCharCode(97 + (Math.abs(total) % 26));\n    }\n\n    return hash;\n}\n\nexport function match(str : string, pattern : RegExp) : ?string {\n    let regmatch = str.match(pattern);\n    if (regmatch) {\n        return regmatch[1];\n    }\n}\n\nexport function awaitKey<T: mixed>(obj : Object, key : string) : ZalgoPromise<T> {\n    return new ZalgoPromise(resolve => {\n\n        let value = obj[key];\n\n        if (value) {\n            return resolve(value);\n        }\n\n        delete obj[key];\n\n        Object.defineProperty(obj, key, {\n\n            configurable: true,\n\n            set(item) {\n                value = item;\n\n                if (value) {\n                    resolve(value);\n                }\n            },\n\n            get() : mixed {\n                return value;\n            }\n        });\n    });\n}\n\nexport function stringifyError(err : mixed, level : number = 1) : string {\n\n    if (level >= 3) {\n        return 'stringifyError stack overflow';\n    }\n\n    try {\n        if (!err) {\n            return `<unknown error: ${ Object.prototype.toString.call(err) }>`;\n        }\n\n        if (typeof err === 'string') {\n            return err;\n        }\n\n        if (err instanceof Error) {\n            let stack = err && err.stack;\n            let message = err && err.message;\n\n            if (stack && message) {\n                if (stack.indexOf(message) !== -1) {\n                    return stack;\n                } else {\n                    return `${ message }\\n${ stack }`;\n                }\n            } else if (stack) {\n                return stack;\n            } else if (message) {\n                return message;\n            }\n        }\n\n        if (typeof err.toString === 'function') {\n            return err.toString();\n        }\n\n        return Object.prototype.toString.call(err);\n\n    } catch (newErr) { // eslint-disable-line unicorn/catch-error-name\n        return `Error while stringifying error: ${ stringifyError(newErr, level + 1) }`;\n    }\n}\n\nexport function stringifyErrorMessage(err : mixed) : string {\n\n    let defaultMessage = `<unknown error: ${ Object.prototype.toString.call(err) }>`;\n\n    if (!err) {\n        return defaultMessage;\n    }\n\n    if (err instanceof Error) {\n        return err.message || defaultMessage;\n    }\n\n    if (typeof err.message === 'string') {\n        return err.message || defaultMessage;\n    }\n\n    return defaultMessage;\n}\n\nexport function stringify(item : mixed) : string {\n    if (typeof item === 'string') {\n        return item;\n    }\n\n    if (item && typeof item.toString === 'function') {\n        return item.toString();\n    }\n\n    return Object.prototype.toString.call(item);\n}\n\nexport function domainMatches(hostname : string, domain : string) : boolean {\n    hostname = hostname.split('://')[1];\n    let index = hostname.indexOf(domain);\n    return (index !== -1 && hostname.slice(index) === domain);\n}\n\nexport function patchMethod(obj : Object, name : string, handler : Function) {\n    let original = obj[name];\n\n    obj[name] = function patchedMethod() : mixed {\n        return handler({\n            context:      this,\n            args:         Array.prototype.slice.call(arguments),\n            original,\n            callOriginal: () => original.apply(this, arguments)\n        });\n    };\n}\n\nexport function extend<T : Object | Function>(obj : T, source : Object) : T {\n    if (!source) {\n        return obj;\n    }\n\n    if (Object.assign) {\n        return Object.assign(obj, source);\n    }\n\n    for (let key in source) {\n        if (source.hasOwnProperty(key)) {\n            obj[key] = source[key];\n        }\n    }\n\n    return obj;\n}\n\nexport function values<T>(obj : { [string] : T }) : Array<T> {\n    let result = [];\n    for (let key in obj) {\n        if (obj.hasOwnProperty(key)) {\n            result.push(obj[key]);\n        }\n    }\n    return result;\n}\n\nexport function perc(pixels : number, percentage : number) : number {\n    return Math.round((pixels * percentage) / 100);\n}\n\nexport function min(...args : Array<number>) : number {\n    return Math.min(...args);\n}\n\nexport function max(...args : Array<number>) : number {\n    return Math.max(...args);\n}\n\nexport function regexMap<T>(str : string, regexp : RegExp, handler : () => T) : Array<T> {\n    let results = [];\n\n    // $FlowFixMe\n    str.replace(regexp, function regexMapMatcher(item) {\n        results.push(handler ? handler.apply(null, arguments) : item);\n    });\n\n    // $FlowFixMe\n    return results;\n}\n\nexport function svgToBase64(svg : string) : string {\n    return `data:image/svg+xml;base64,${ base64encode(svg) }`;\n}\n\nexport function objFilter<T, R>(obj : { [string] : T }, filter? : (T, ?string) => mixed = Boolean) : { [string] : R } {\n    let result = {};\n\n    for (let key in obj) {\n        if (!obj.hasOwnProperty(key) || !filter(obj[key], key)) {\n            continue;\n        }\n\n        result[key] = obj[key];\n    }\n\n    return result;\n}\n\nexport function identity <T>(item : T) : T {\n    return item;\n}\n\nexport function regexTokenize(text : string, regexp : RegExp) : Array<string> {\n    let result = [];\n    text.replace(regexp, token => {\n        result.push(token);\n        return '';\n    });\n    return result;\n}\n\nexport function promiseDebounce<T>(method : () => ZalgoPromise<T> | T, delay : number = 50) : () => ZalgoPromise<T> {\n\n    let promise;\n    let timeout;\n\n    return function promiseDebouncedMethod() : ZalgoPromise<T> {\n        if (timeout) {\n            clearTimeout(timeout);\n        }\n\n        let localPromise = promise = promise || new ZalgoPromise();\n\n        timeout = setTimeout(() => {\n            promise = null;\n            timeout = null;\n\n            ZalgoPromise.try(method).then(\n                result => { localPromise.resolve(result); },\n                err => { localPromise.reject(err); }\n            );\n        }, delay);\n\n        return localPromise;\n    };\n}\n\nexport function safeInterval(method : Function, time : number) : { cancel : () => void } {\n\n    let timeout;\n\n    function loop() {\n        timeout = setTimeout(() => {\n            method();\n            loop();\n        }, time);\n    }\n\n    loop();\n\n    return {\n        cancel() {\n            clearTimeout(timeout);\n        }\n    };\n}\n\nexport function isInteger(str : string) : boolean {\n    return Boolean(str.match(/^[0-9]+$/));\n}\n\nexport function isFloat(str : string) : boolean {\n    return Boolean(str.match(/^[0-9]+\\.[0-9]+$/));\n}\n\nexport function serializePrimitive(value : string | number | boolean) : string {\n    return value.toString();\n}\n\nexport function deserializePrimitive(value : string) : string | number | boolean {\n    if (value === 'true') {\n        return true;\n    } else if (value === 'false') {\n        return false;\n    } else if (isInteger(value)) {\n        return parseInt(value, 10);\n    } else if (isFloat(value)) {\n        return parseFloat(value);\n    } else {\n        return value;\n    }\n}\n\nexport function dotify(obj : Object, prefix : string = '', newobj : Object = {}) : { [string] : string } {\n    prefix = prefix ? `${ prefix }.` : prefix;\n    for (let key in obj) {\n        if (!obj.hasOwnProperty(key) || obj[key] === undefined || obj[key] === null || typeof obj[key] === 'function') {\n            continue;\n        } else if (obj[key] && Array.isArray(obj[key]) && obj[key].length && obj[key].every(val => typeof val !== 'object')) {\n            newobj[`${ prefix }${ key }[]`] = obj[key].join(',');\n        } else if (obj[key] && typeof obj[key] === 'object') {\n            newobj = dotify(obj[key], `${ prefix }${ key }`, newobj);\n        } else {\n            newobj[`${ prefix }${ key }`] = serializePrimitive(obj[key]);\n        }\n    }\n    return newobj;\n}\n\nexport function undotify(obj : { [string] : string }) : Object {\n    \n    let result = {};\n\n    for (let key in obj) {\n        if (!obj.hasOwnProperty(key) || typeof obj[key] !== 'string') {\n            continue;\n        }\n\n        let value = obj[key];\n\n        if (key.match(/^.+\\[\\]$/)) {\n            key = key.slice(0, key.length - 2);\n            value = value.split(',').map(deserializePrimitive);\n        } else {\n            value = deserializePrimitive(value);\n        }\n\n        let keyResult = result;\n        let parts = key.split('.');\n        for (let i = 0; i < parts.length; i++) {\n            let part = parts[i];\n            let isLast = (i + 1 === parts.length);\n            let isIndex = !isLast && isInteger(parts[i + 1]);\n\n            if (isLast) {\n                // $FlowFixMe\n                keyResult[part] = value;\n            } else {\n                // $FlowFixMe\n                keyResult = keyResult[part] = keyResult[part] || (isIndex ? [] : {});\n            }\n        }\n    }\n\n    return result;\n}\n\nexport type EventEmitterType = {\n    on : (eventName : string, handler : Function) => CancelableType,\n    once : (eventName : string, handler : Function) => CancelableType,\n    trigger : (eventName : string, ...args : $ReadOnlyArray<mixed>) => ZalgoPromise<void>,\n    triggerOnce : (eventName : string, ...args : $ReadOnlyArray<mixed>) => ZalgoPromise<void>\n};\n\nexport function eventEmitter() : EventEmitterType {\n    let triggered = {};\n    let handlers = {};\n\n    return {\n\n        on(eventName : string, handler : Function) : CancelableType {\n            let handlerList = handlers[eventName] = handlers[eventName] || [];\n\n            handlerList.push(handler);\n\n            let cancelled = false;\n\n            return {\n                cancel() {\n                    if (!cancelled) {\n                        cancelled = true;\n                        handlerList.splice(handlerList.indexOf(handler), 1);\n                    }\n\n                }\n            };\n        },\n\n        once(eventName : string, handler : Function) : CancelableType {\n\n            let listener = this.on(eventName, () => {\n                listener.cancel();\n                handler();\n            });\n\n            return listener;\n        },\n\n        trigger(eventName : string, ...args : $ReadOnlyArray<mixed>) : ZalgoPromise<void> {\n\n            let handlerList = handlers[eventName];\n            let promises = [];\n\n            if (handlerList) {\n                for (let handler of handlerList) {\n                    promises.push(ZalgoPromise.try(() => handler(...args)));\n                }\n            }\n\n            return ZalgoPromise.all(promises).then(noop);\n        },\n\n        triggerOnce(eventName : string, ...args : $ReadOnlyArray<mixed>) : ZalgoPromise<void> {\n\n            if (triggered[eventName]) {\n                return ZalgoPromise.resolve();\n            }\n\n            triggered[eventName] = true;\n            return this.trigger(eventName, ...args);\n        }\n    };\n}\n\nexport function camelToDasherize(string : string) : string {\n    return string.replace(/([A-Z])/g, (g) => {\n        return `-${ g.toLowerCase() }`;\n    });\n}\n\nexport function dasherizeToCamel(string : string) : string {\n    return string.replace(/-([a-z])/g, (g) => {\n        return g[1].toUpperCase();\n    });\n}\n\nexport function capitalizeFirstLetter(string : string) : string {\n    return string.charAt(0).toUpperCase() + string.slice(1).toLowerCase();\n}\n\nexport function get(item : Object, path : string, def : mixed) : mixed {\n\n    if (!path) {\n        return def;\n    }\n\n    let pathParts = path.split('.');\n\n    // Loop through each section of our key path\n\n    for (let i = 0; i < pathParts.length; i++) {\n\n        // If we have an object, we can get the key\n        if (typeof item === 'object' && item !== null) {\n            item = item[pathParts[i]];\n\n        // Otherwise, we should return the default (undefined if not provided)\n        } else {\n            return def;\n        }\n    }\n\n    // If our final result is undefined, we should return the default\n\n    return item === undefined ? def : item;\n}\n\nexport function safeTimeout(method : Function, time : number) {\n\n    let interval = safeInterval(() => {\n        time -= 100;\n        if (time <= 0) {\n            interval.cancel();\n            method();\n        }\n    }, 100);\n}\n\nexport function defineLazyProp<T>(obj : Object | Array<mixed>, key : string | number, getter : () => T) {\n    if (Array.isArray(obj)) {\n        if (typeof key !== 'number') {\n            throw new TypeError(`Array key must be number`);\n        }\n    } else if (typeof obj === 'object' && obj !== null) {\n        if (typeof key !== 'string') {\n            throw new TypeError(`Object key must be string`);\n        }\n    }\n    \n    Object.defineProperty(obj, key, {\n        configurable: true,\n        enumerable:   true,\n        get:          () => {\n            // $FlowFixMe\n            delete obj[key];\n            let value = getter();\n            // $FlowFixMe\n            obj[key] = value;\n            return value;\n        },\n        set: (value : T) => {\n            // $FlowFixMe\n            delete obj[key];\n            // $FlowFixMe\n            obj[key] = value;\n        }\n    });\n}\n\nexport function isObject(item : mixed) : boolean {\n    return (typeof item === 'object' && item !== null);\n}\n\nexport function isObjectObject(obj : mixed) : boolean {\n    return isObject(obj) && Object.prototype.toString.call(obj) === '[object Object]';\n}\n\nexport function isPlainObject(obj : mixed) : boolean {\n    if (!isObjectObject(obj)) {\n        return false;\n    }\n\n    // $FlowFixMe\n    let constructor = obj.constructor;\n\n    if (typeof constructor !== 'function') {\n        return false;\n    }\n\n    let prototype = constructor.prototype;\n\n    if (!isObjectObject(prototype)) {\n        return false;\n    }\n\n    if (!prototype.hasOwnProperty('isPrototypeOf')) {\n        return false;\n    }\n\n    return true;\n}\n\nexport function replaceObject<T : Object | Array<mixed>> (item : T, replacer : (mixed, string | number, string) => mixed, fullKey : string = '') : T {\n\n    if (Array.isArray(item)) {\n        let length = item.length;\n        let result = [];\n\n        for (let i = 0; i < length; i++) {\n\n            \n            defineLazyProp(result, i, () => {\n                let itemKey = fullKey ? `${ fullKey }.${ i }` : `${ i }`;\n                let el = item[i];\n\n                let child = replacer(el, i, itemKey);\n\n                if (isPlainObject(child) || Array.isArray(child)) {\n                    // $FlowFixMe\n                    child = replaceObject(child, replacer, itemKey);\n                }\n\n                return child;\n            });\n        }\n\n        // $FlowFixMe\n        return result;\n    } else if (isPlainObject(item)) {\n        let result = {};\n\n        for (let key in item) {\n            if (!item.hasOwnProperty(key)) {\n                continue;\n            }\n\n            defineLazyProp(result, key, () => {\n                let itemKey = fullKey ? `${ fullKey }.${ key }` : `${ key }`;\n                // $FlowFixMe\n                let el = item[key];\n\n                let child = replacer(el, key, itemKey);\n\n                if (isPlainObject(child) || Array.isArray(child)) {\n                    // $FlowFixMe\n                    child = replaceObject(child, replacer, itemKey);\n                }\n\n                return child;\n            });\n        }\n\n        // $FlowFixMe\n        return result;\n    } else {\n        throw new Error(`Pass an object or array`);\n    }\n}\n\n\nexport function copyProp(source : Object, target : Object, name : string, def : mixed) {\n    if (source.hasOwnProperty(name)) {\n        let descriptor = Object.getOwnPropertyDescriptor(source, name);\n        // $FlowFixMe\n        Object.defineProperty(target, name, descriptor);\n\n    } else {\n        target[name] = def;\n    }\n}\n\ntype RegexResultType = {\n    text : string,\n    groups : Array<string>,\n    start : number,\n    end : number,\n    length : number,\n    replace : (text : string) => string\n};\n\nexport function regex(pattern : string | RegExp, string : string, start : number = 0) : ?RegexResultType {\n\n    if (typeof pattern === 'string') {\n        // eslint-disable-next-line security/detect-non-literal-regexp\n        pattern = new RegExp(pattern);\n    }\n\n    let result = string.slice(start).match(pattern);\n\n    if (!result) {\n        return;\n    }\n\n    // $FlowFixMe\n    let index : number = result.index;\n    let regmatch = result[0];\n\n    return {\n        text:   regmatch,\n        groups: result.slice(1),\n        start:  start + index,\n        end:    start + index + regmatch.length,\n        length: regmatch.length,\n\n        replace(text : string) : string {\n\n            if (!regmatch) {\n                return '';\n            }\n\n            return `${ regmatch.slice(0, start + index) }${ text }${ regmatch.slice(index + regmatch.length) }`;\n        }\n    };\n}\n\nexport function regexAll(pattern : string | RegExp, string : string) : Array<RegexResultType> {\n\n    let matches = [];\n    let start = 0;\n\n    // eslint-disable-next-line no-constant-condition\n    while (true) {\n        let regmatch = regex(pattern, string, start);\n\n        if (!regmatch) {\n            break;\n        }\n\n        matches.push(regmatch);\n        start = match.end;\n    }\n\n    return matches;\n}\n\nexport function isDefined(value : ?mixed) : boolean {\n    return value !== null && value !== undefined;\n}\n\nexport function cycle(method : Function) : ZalgoPromise<void> {\n    return ZalgoPromise.try(method).then(() => cycle(method));\n}\n\nexport function debounce<T>(method : (...args : Array<mixed>) => T, time : number = 100) : (...args : Array<mixed>) => void {\n\n    let timeout;\n\n    return function debounceWrapper() {\n        clearTimeout(timeout);\n\n        timeout = setTimeout(() => {\n            return method.apply(this, arguments);\n        }, time);\n    };\n}\n\nexport function isRegex(item : mixed) : boolean {\n    return Object.prototype.toString.call(item) === '[object RegExp]';\n}\n\ntype FunctionProxy<T : Function> = (method : T) => T;\n\n// eslint-disable-next-line flowtype/no-weak-types\nexport let weakMapMemoize : FunctionProxy<*> = <R : mixed>(method : (arg : any) => R) : ((...args : Array<any>) => R) => {\n\n    let weakmap = new WeakMap();\n\n    // eslint-disable-next-line flowtype/no-weak-types\n    return function weakmapMemoized(arg : any) : R {\n        return weakmap.getOrSet(arg, () => method.call(this, arg));\n    };\n};\n\ntype FunctionPromiseProxy<R : mixed, T : (...args : $ReadOnlyArray<mixed>) => ZalgoPromise<R>> = (T) => T;\n\n// eslint-disable-next-line flowtype/no-weak-types\nexport let weakMapMemoizePromise : FunctionPromiseProxy<*, *> = <R : mixed>(method : (arg : any) => ZalgoPromise<R>) : ((...args : Array<any>) => ZalgoPromise<R>) => {\n\n    let weakmap = new WeakMap();\n\n    // eslint-disable-next-line flowtype/no-weak-types\n    return function weakmapMemoizedPromise(arg : any) : ZalgoPromise<R> {\n        return weakmap.getOrSet(arg, () =>\n            method.call(this, arg).finally(() => {\n                weakmap.delete(arg);\n            })\n        );\n    };\n};\n\nexport function getOrSet<O : Object, T : mixed>(obj : O, key : string, getter : () => T) : T {\n    if (obj.hasOwnProperty(key)) {\n        return obj[key];\n    }\n\n    const val = getter();\n    obj[key] = val;\n    return val;\n}\n\nexport type CleanupType = {|\n    set : <T : mixed>(string, T) => T, // eslint-disable-line no-undef\n    register : (Function) => void,\n    all : () => ZalgoPromise<void>\n|};\n\nexport function cleanup(obj : Object) : CleanupType {\n\n    const tasks = [];\n    let cleaned = false;\n\n    return {\n        set<T : mixed>(name : string, item : T) : T {\n            if (!cleaned) {\n                obj[name] = item;\n                this.register(() => {\n                    delete obj[name];\n                });\n            }\n            return item;\n        },\n\n        register(method : Function) {\n            if (cleaned) {\n                method();\n            } else {\n                tasks.push(once(method));\n            }\n        },\n\n        all() : ZalgoPromise<void> {\n            const results = [];\n            cleaned = true;\n\n            while (tasks.length) {\n                const task = tasks.pop();\n                results.push(task());\n            }\n\n            return ZalgoPromise.all(results).then(noop);\n        }\n    };\n}\n\nexport function tryCatch<T>(fn : () => T) : {| result : T, error : void |} | {| result : void, error : mixed |} {\n    let result;\n    let error;\n\n    try {\n        result = fn();\n    } catch (err) {\n        error = err;\n    }\n    \n    // $FlowFixMe\n    return { result, error };\n}\n\nexport function removeFromArray<X, T : Array<X>>(arr : T, item : X) {\n    const index = arr.indexOf(item);\n    if (index !== -1) {\n        arr.splice(index, 1);\n    }\n}\n\nexport function assertExists<T>(name : string, thing : void | null | T) : T {\n    if (thing === null || typeof thing === 'undefined') {\n        throw new Error(`Expected ${ name } to be present`);\n    }\n\n    return thing;\n}\n","/* @flow */\n/* eslint max-lines: off */\n\nimport { ZalgoPromise } from 'zalgo-promise/src';\nimport { linkFrameWindow, isWindowClosed,\n    type SameDomainWindowType, type CrossDomainWindowType } from 'cross-domain-utils/src';\nimport { WeakMap } from 'cross-domain-safe-weakmap/src';\n\nimport { inlineMemoize, noop, stringify, capitalizeFirstLetter,\n    once, extend, safeInterval, uniqueID } from './util';\nimport { isDevice } from './device';\nimport { KEY_CODES } from './constants';\nimport type { CancelableType } from './types';\n\ntype ElementRefType = string | HTMLElement;\n\nexport function isDocumentReady() : boolean {\n    return Boolean(document.body) && document.readyState === 'complete';\n}\n\nexport function urlEncode(str : string) : string {\n    return str.replace(/\\?/g, '%3F').replace(/&/g, '%26').replace(/#/g, '%23').replace(/\\+/g, '%2B');\n}\n\nexport function waitForWindowReady() : ZalgoPromise<void> {\n    return inlineMemoize(waitForWindowReady, () : ZalgoPromise<void> => {\n        return new ZalgoPromise(resolve => {\n            if (isDocumentReady()) {\n                resolve();\n            }\n\n            window.addEventListener('load', () => resolve());\n        });\n    });\n}\n\nexport function waitForDocumentReady() : ZalgoPromise<void> {\n    return inlineMemoize(waitForDocumentReady, () : ZalgoPromise<void> => {\n        return new ZalgoPromise(resolve => {\n\n            if (isDocumentReady()) {\n                return resolve();\n            }\n\n            let interval = setInterval(() => {\n                if (isDocumentReady()) {\n                    clearInterval(interval);\n                    return resolve();\n                }\n            }, 10);\n        });\n    });\n}\n\nexport function waitForDocumentBody() : ZalgoPromise<HTMLBodyElement> {\n    return waitForDocumentReady().then(() => {\n        if (document.body) {\n            return document.body;\n        }\n\n        throw new Error('Document ready but document.body not present');\n    });\n}\n\nexport function parseQuery(queryString : string) : Object {\n    return inlineMemoize(parseQuery, () : Object => {\n        let params = {};\n\n        if (!queryString) {\n            return params;\n        }\n\n        if (queryString.indexOf('=') === -1) {\n            return params;\n        }\n\n        for (let pair of queryString.split('&')) {\n            pair = pair.split('=');\n\n            if (pair[0] && pair[1]) {\n                params[decodeURIComponent(pair[0])] = decodeURIComponent(pair[1]);\n            }\n        }\n\n        return params;\n    }, [ queryString ]);\n}\n\n\nexport function getQueryParam(name : string) : string {\n    return parseQuery(window.location.search.slice(1))[name];\n}\n\nexport function urlWillRedirectPage(url : string) : boolean {\n\n    if (url.indexOf('#') === -1) {\n        return true;\n    }\n\n    if (url.indexOf('#') === 0) {\n        return false;\n    }\n\n    if (url.split('#')[0] === window.location.href.split('#')[0]) {\n        return false;\n    }\n\n    return true;\n}\n\nexport function formatQuery(obj : { [ string ] : string } = {}) : string {\n\n    return Object.keys(obj).filter(key => {\n        return typeof obj[key] === 'string';\n    }).map(key => {\n        return `${ urlEncode(key) }=${ urlEncode(obj[key]) }`;\n    }).join('&');\n}\n\nexport function extendQuery(originalQuery : string, props : { [ string ] : string } = {}) : string {\n\n    if (!props || !Object.keys(props).length) {\n        return originalQuery;\n    }\n\n    return formatQuery({\n        ...parseQuery(originalQuery),\n        ...props\n    });\n}\n\nexport function extendUrl(url : string, options : { query? : { [string] : string }, hash? : { [string] : string } } = {}) : string {\n\n    let query = options.query || {};\n    let hash = options.hash || {};\n\n    let originalUrl;\n    let originalQuery;\n    let originalHash;\n\n    [ originalUrl, originalHash ] = url.split('#');\n    [ originalUrl, originalQuery ] = originalUrl.split('?');\n\n    let queryString = extendQuery(originalQuery, query);\n    let hashString = extendQuery(originalHash, hash);\n\n    if (queryString) {\n        originalUrl = `${ originalUrl }?${ queryString }`;\n    }\n\n    if (hashString) {\n        originalUrl = `${ originalUrl }#${ hashString }`;\n    }\n\n    return originalUrl;\n}\n\nexport function redirect(url : string, win : CrossDomainWindowType = window) : ZalgoPromise<void> {\n    return new ZalgoPromise(resolve => {\n        win.location = url;\n        if (!urlWillRedirectPage(url)) {\n            resolve();\n        }\n    });\n}\n\nexport function hasMetaViewPort() : boolean {\n    let meta = document.querySelector('meta[name=viewport]');\n\n    if (isDevice() && window.screen.width < 660 && !meta) {\n        return false;\n    }\n\n    return true;\n}\n\nexport function isElementVisible(el : HTMLElement) : boolean {\n    return Boolean(el.offsetWidth || el.offsetHeight || el.getClientRects().length);\n}\n\nexport function enablePerformance() : boolean {\n    return inlineMemoize(enablePerformance, () : boolean => {\n        /* eslint-disable compat/compat */\n        return Boolean(\n            window.performance &&\n            performance.now &&\n            performance.timing &&\n            performance.timing.connectEnd &&\n            performance.timing.navigationStart &&\n            (Math.abs(performance.now() - Date.now()) > 1000) &&\n            (performance.now() - (performance.timing.connectEnd - performance.timing.navigationStart)) > 0\n        );\n        /* eslint-enable compat/compat */\n    });\n}\n\nexport function getPageRenderTime() : ZalgoPromise<?number> {\n    return waitForDocumentReady().then(() => {\n\n        if (!enablePerformance()) {\n            return;\n        }\n\n        let timing = window.performance.timing;\n\n        if (timing.connectEnd && timing.domInteractive) {\n            return timing.domInteractive - timing.connectEnd;\n        }\n    });\n}\n\nexport function htmlEncode(html : string = '') : string {\n    return html.toString()\n        .replace(/&/g, '&amp;')\n        .replace(/</g, '&lt;')\n        .replace(/>/g, '&gt;')\n        .replace(/\"/g, '&quot;')\n        .replace(/'/g, '&#39;')\n        .replace(/\\//g, '&#x2F;');\n}\n\nexport function isBrowser() : boolean {\n    return (typeof window !== 'undefined');\n}\n\nexport function querySelectorAll(selector : string, doc : HTMLElement = window.document) : Array<Element> {\n    return Array.prototype.slice.call(doc.querySelectorAll(selector));\n}\n\nexport function onClick(element : Element, handler : (Event) => void) {\n    element.addEventListener('touchstart', noop);\n    element.addEventListener('click', handler);\n    element.addEventListener('keypress', (event : Event) => {\n        // $FlowFixMe\n        if (event.keyCode === KEY_CODES.ENTER) {\n            return handler(event);\n        }\n    });\n}\n\nexport function getScript({ host = window.location.host, path } : { host? : string, path : string }) : ?HTMLScriptElement {\n    return inlineMemoize(getScript, () : ?HTMLScriptElement => {\n\n        let url = `${ host }${ path }`;\n        let scripts = Array.prototype.slice.call(document.getElementsByTagName('script'));\n\n        for (let script of scripts) {\n            if (!script.src) {\n                continue;\n            }\n\n            let src = script.src.replace(/^https?:\\/\\//, '').split('?')[0];\n\n            if (src === url) {\n                return script;\n            }\n        }\n    }, [ path ]);\n}\n\nexport function isLocalStorageEnabled() : boolean {\n    return inlineMemoize(isLocalStorageEnabled, () => {\n        try {\n            if (typeof window === 'undefined') {\n                return false;\n            }\n\n            if (window.localStorage) {\n                let value = Math.random().toString();\n                window.localStorage.setItem('__test__localStorage__', value);\n                let result = window.localStorage.getItem('__test__localStorage__');\n                window.localStorage.removeItem('__test__localStorage__');\n                if (value === result) {\n                    return true;\n                }\n            }\n        } catch (err) {\n            // pass\n        }\n        return false;\n    });\n}\n\nexport function getBrowserLocales() : Array<{ country? : string, lang : string }> {\n    let nav = window.navigator;\n\n    let locales = nav.languages\n        ? Array.prototype.slice.apply(nav.languages)\n        : [];\n\n    if (nav.language) {\n        locales.push(nav.language);\n    }\n\n    if (nav.userLanguage) {\n        locales.push(nav.userLanguage);\n    }\n\n    return locales.map(locale => {\n\n        if (locale && locale.match(/^[a-z]{2}[-_][A-Z]{2}$/)) {\n            let [ lang, country ] = locale.split(/[-_]/);\n            return { country, lang };\n        }\n\n        if (locale && locale.match(/^[a-z]{2}$/)) {\n            return { lang: locale };\n        }\n\n        return null;\n\n    }).filter(Boolean);\n}\n\n\nexport function appendChild(container : HTMLElement, child : HTMLElement | Text) {\n    container.appendChild(child);\n}\n\nexport function isElement(element : mixed) : boolean {\n\n    if (element instanceof window.Element) {\n        return true;\n    }\n\n    if (element !== null && typeof element === 'object' && element.nodeType === 1 && typeof element.style === 'object' && typeof element.ownerDocument === 'object') {\n        return true;\n    }\n\n    return false;\n}\n\nexport function getElementSafe(id : ElementRefType, doc : Document | HTMLElement = document) : ?HTMLElement {\n\n    if (isElement(id)) {\n        // $FlowFixMe\n        return id;\n    }\n\n    if (typeof id === 'string') {\n        return doc.querySelector(id);\n    }\n}\n\nexport function getElement(id : ElementRefType, doc : Document | HTMLElement = document) : HTMLElement {\n\n    let element = getElementSafe(id, doc);\n\n    if (element) {\n        return element;\n    }\n\n    throw new Error(`Can not find element: ${ stringify(id) }`);\n}\n\nexport function elementReady(id : ElementRefType) : ZalgoPromise<window.HTMLElement> {\n    return new ZalgoPromise((resolve, reject) => {\n\n        let name = stringify(id);\n        let el = getElementSafe(id);\n\n        if (el) {\n            return resolve(el);\n        }\n\n        if (isDocumentReady()) {\n            return reject(new Error(`Document is ready and element ${ name } does not exist`));\n        }\n\n        let interval = setInterval(() => {\n\n            el = getElementSafe(id);\n\n            if (el) {\n                clearInterval(interval);\n                return resolve(el);\n            }\n\n            if (isDocumentReady()) {\n                clearInterval(interval);\n                return reject(new Error(`Document is ready and element ${ name } does not exist`));\n            }\n        }, 10);\n    });\n}\n\nexport function PopupOpenError(message : string) {\n    this.message = message;\n}\n\nPopupOpenError.prototype = Object.create(Error.prototype);\n\ntype PopupOptions = {|\n    name? : string,\n    width? : number,\n    height? : number,\n    top? : number,\n    left? : number,\n    status? : 0 | 1,\n    resizable? : 0 | 1,\n    toolbar? : 0 | 1,\n    menubar? : 0 | 1,\n    scrollbars? : 0 | 1\n|};\n\nexport function popup(url : string, options? : PopupOptions) : CrossDomainWindowType {\n\n    // $FlowFixMe\n    options = options || {};\n\n    let { width, height } = options;\n\n    let top = 0;\n    let left = 0;\n\n    if (width) {\n        if (window.outerWidth) {\n            left = Math.round((window.outerWidth - width) / 2) + window.screenX;\n        } else if (window.screen.width) {\n            left = Math.round((window.screen.width - width) / 2);\n        }\n    }\n\n    if (height) {\n        if (window.outerHeight) {\n            top = Math.round((window.outerHeight - height) / 2) + window.screenY;\n        } else if (window.screen.height) {\n            top = Math.round((window.screen.height - height) / 2);\n        }\n    }\n\n    options = {\n        top,\n        left,\n        width,\n        height,\n        status:     1,\n        toolbar:    0,\n        menubar:    0,\n        resizable:  1,\n        scrollbars: 1,\n        ...options\n    };\n\n    let name = options.name || '';\n    delete options.name;\n\n    // eslint-disable-next-line array-callback-return\n    let params = Object.keys(options).map(key => {\n        // $FlowFixMe\n        if (options[key]) {\n            return `${ key }=${ stringify(options[key]) }`;\n        }\n    }).filter(Boolean).join(',');\n\n    let win;\n\n    try {\n        win = window.open(url, name, params, true);\n    } catch (err) {\n        throw new PopupOpenError(`Can not open popup window - ${ err.stack || err.message }`);\n    }\n\n    if (isWindowClosed(win)) {\n        let err = new PopupOpenError(`Can not open popup window - blocked`);\n        throw err;\n    }\n\n    window.addEventListener('unload', () => win.close());\n\n    return win;\n}\n\n\nexport function writeToWindow(win : SameDomainWindowType, html : string) {\n    try {\n        win.document.open();\n        win.document.write(html);\n        win.document.close();\n    } catch (err) {\n        try {\n            win.location = `javascript: document.open(); document.write(${ JSON.stringify(html) }); document.close();`;\n        } catch (err2) {\n            // pass\n        }\n    }\n}\n\nexport function writeElementToWindow(win : SameDomainWindowType, el : HTMLElement) {\n\n    let tag = el.tagName.toLowerCase();\n\n    if (tag !== 'html') {\n        throw new Error(`Expected element to be html, got ${ tag }`);\n    }\n\n    let documentElement = win.document.documentElement;\n\n    while (documentElement.children && documentElement.children.length) {\n        documentElement.removeChild(documentElement.children[0]);\n    }\n\n    while (el.children.length) {\n        documentElement.appendChild(el.children[0]);\n    }\n}\n\nexport function setStyle(el : HTMLElement, styleText : string, doc : Document = window.document) {\n    // $FlowFixMe\n    if (el.styleSheet) {\n        // $FlowFixMe\n        el.styleSheet.cssText = styleText;\n    } else {\n        el.appendChild(doc.createTextNode(styleText));\n    }\n}\n\nexport type ElementOptionsType = {\n    style? : { [ string ] : string },\n    id? : string,\n    class? : ?Array<string>,\n    attributes? : { [ string ] : string },\n    styleSheet? : ?string,\n    html? : ?string\n};\n\nlet awaitFrameLoadPromises : WeakMap<HTMLIFrameElement, ZalgoPromise<HTMLIFrameElement>>;\n\nexport function awaitFrameLoad(frame : HTMLIFrameElement) : ZalgoPromise<HTMLIFrameElement> {\n    awaitFrameLoadPromises = awaitFrameLoadPromises || new WeakMap();\n\n    if (awaitFrameLoadPromises.has(frame)) {\n        let promise = awaitFrameLoadPromises.get(frame);\n        if (promise) {\n            return promise;\n        }\n    }\n\n    let promise = new ZalgoPromise((resolve, reject) => {\n        frame.addEventListener('load', () => {\n            linkFrameWindow(frame);\n            resolve(frame);\n        });\n\n        frame.addEventListener('error', (err : Event) => {\n            if (frame.contentWindow) {\n                resolve(frame);\n            } else {\n                reject(err);\n            }\n        });\n    });\n\n    awaitFrameLoadPromises.set(frame, promise);\n\n    return promise;\n}\n\nexport function awaitFrameWindow(frame : HTMLIFrameElement) : ZalgoPromise<CrossDomainWindowType> {\n    return awaitFrameLoad(frame).then(loadedFrame => {\n\n        if (!loadedFrame.contentWindow) {\n            throw new Error(`Could not find window in iframe`);\n        }\n\n        return loadedFrame.contentWindow;\n    });\n}\n\nexport function createElement(tag : string = 'div', options : ElementOptionsType = {}, container : ?HTMLElement) : HTMLElement {\n\n    tag = tag.toLowerCase();\n    let element = document.createElement(tag);\n\n    if (options.style) {\n        extend(element.style, options.style);\n    }\n\n    if (options.class) {\n        element.className = options.class.join(' ');\n    }\n\n    if (options.id) {\n        element.setAttribute('id', options.id);\n    }\n\n    if (options.attributes) {\n        for (let key of Object.keys(options.attributes)) {\n            element.setAttribute(key, options.attributes[key]);\n        }\n    }\n\n    if (options.styleSheet) {\n        setStyle(element, options.styleSheet);\n    }\n\n    if (container) {\n        appendChild(container, element);\n    }\n\n    if (options.html) {\n        if (tag === 'iframe') {\n            // $FlowFixMe\n            if (!container || !element.contentWindow) {\n                throw new Error(`Iframe html can not be written unless container provided and iframe in DOM`);\n            }\n\n            // $FlowFixMe\n            writeToWindow(element.contentWindow, options.html);\n\n        } else {\n            element.innerHTML = options.html;\n        }\n    }\n\n    return element;\n}\n\n\nexport type IframeElementOptionsType = {\n    style? : { [ string ] : string },\n    class? : ?Array<string>,\n    attributes? : { [ string ] : string },\n    styleSheet? : ?string,\n    html? : ?string,\n    url? : ?string\n};\n\nexport function iframe(options : IframeElementOptionsType = {}, container : ?HTMLElement) : HTMLIFrameElement {\n\n    let attributes = options.attributes || {};\n    let style = options.style || {};\n\n    let frame = createElement('iframe', {\n        attributes: {\n            allowTransparency: 'true',\n            ...attributes\n        },\n        style: {\n            backgroundColor: 'transparent',\n            border:          'none',\n            ...style\n        },\n        html:  options.html,\n        class: options.class\n    });\n\n    const isIE = window.navigator.userAgent.match(/MSIE|Edge/i);\n    \n    if (!frame.hasAttribute('id')) {\n        frame.setAttribute('id', uniqueID());\n    }\n\n    // $FlowFixMe\n    awaitFrameLoad(frame);\n\n    if (container) {\n        let el = getElement(container);\n        el.appendChild(frame);\n    }\n\n    if (options.url || isIE) {\n        frame.setAttribute('src', options.url || 'about:blank');\n    }\n\n    // $FlowFixMe\n    return frame;\n}\n\nexport function addEventListener(obj : HTMLElement, event : string, handler : (event : Event) => void) : CancelableType {\n    obj.addEventListener(event, handler);\n    return {\n        cancel() {\n            obj.removeEventListener(event, handler);\n        }\n    };\n}\n\nexport function bindEvents(element : HTMLElement, eventNames : Array<string>, handler : (event : Event) => void) : CancelableType {\n\n    handler = once(handler);\n\n    for (let eventName of eventNames) {\n        element.addEventListener(eventName, handler);\n    }\n\n    return {\n        cancel: once(() => {\n            for (let eventName of eventNames) {\n                element.removeEventListener(eventName, handler);\n            }\n        })\n    };\n}\n\nconst VENDOR_PREFIXES = [ 'webkit', 'moz', 'ms', 'o' ];\n\nexport function setVendorCSS(element : HTMLElement, name : string, value : string) {\n\n    // $FlowFixMe\n    element.style[name] = value;\n\n    let capitalizedName = capitalizeFirstLetter(name);\n\n    for (let prefix of VENDOR_PREFIXES) {\n        // $FlowFixMe\n        element.style[`${ prefix }${ capitalizedName }`] = value;\n    }\n}\n\nconst ANIMATION_START_EVENTS = [ 'animationstart', 'webkitAnimationStart', 'oAnimationStart', 'MSAnimationStart' ];\nconst ANIMATION_END_EVENTS   = [ 'animationend', 'webkitAnimationEnd', 'oAnimationEnd', 'MSAnimationEnd' ];\n\nexport function animate(element : ElementRefType, name : string, clean : (Function) => void, timeout : number = 1000) : ZalgoPromise<void> {\n    return new ZalgoPromise((resolve, reject) => {\n\n        let el = getElement(element);\n\n        if (!el) {\n            return resolve();\n        }\n\n        let hasStarted = false;\n\n        let startTimeout;\n        let endTimeout;\n        let startEvent;\n        let endEvent;\n\n        function cleanUp() {\n            clearTimeout(startTimeout);\n            clearTimeout(endTimeout);\n            startEvent.cancel();\n            endEvent.cancel();\n        }\n\n        startEvent = bindEvents(el, ANIMATION_START_EVENTS, event => {\n\n            // $FlowFixMe\n            if (event.target !== el || event.animationName !== name) {\n                return;\n            }\n\n            clearTimeout(startTimeout);\n\n            event.stopPropagation();\n\n            startEvent.cancel();\n            hasStarted = true;\n\n            endTimeout = setTimeout(() => {\n                cleanUp();\n                resolve();\n            }, timeout);\n        });\n\n        endEvent = bindEvents(el, ANIMATION_END_EVENTS, event => {\n\n            // $FlowFixMe\n            if (event.target !== el || event.animationName !== name) {\n                return;\n            }\n\n            cleanUp();\n\n            // $FlowFixMe\n            if (typeof event.animationName === 'string' && event.animationName !== name) {\n                return reject(`Expected animation name to be ${ name }, found ${ event.animationName }`);\n            }\n\n            return resolve();\n        });\n\n        setVendorCSS(el, 'animationName', name);\n\n        startTimeout = setTimeout(() => {\n            if (!hasStarted) {\n                cleanUp();\n                return resolve();\n            }\n        }, 200);\n\n        if (clean) {\n            clean(cleanUp);\n        }\n    });\n}\n\nconst STYLE = {\n\n    DISPLAY: {\n        NONE:  'none',\n        BLOCK: 'block'\n    },\n\n    VISIBILITY: {\n        VISIBLE: 'visible',\n        HIDDEN:  'hidden'\n    },\n\n    IMPORTANT: 'important'\n};\n\nexport function makeElementVisible(element : HTMLElement) {\n    element.style.setProperty('visibility', '');\n}\n\nexport function makeElementInvisible(element : HTMLElement) {\n    element.style.setProperty('visibility', STYLE.VISIBILITY.HIDDEN, STYLE.IMPORTANT);\n}\n\n\nexport function showElement(element : HTMLElement) {\n    element.style.setProperty('display', '');\n}\n\nexport function hideElement(element : HTMLElement) {\n    element.style.setProperty('display', STYLE.DISPLAY.NONE, STYLE.IMPORTANT);\n}\n\nexport function destroyElement(element : HTMLElement) {\n    if (element && element.parentNode) {\n        element.parentNode.removeChild(element);\n    }\n}\n\nexport function showAndAnimate(element : HTMLElement, name : string, clean : (Function) => void) : ZalgoPromise<void> {\n    let animation = animate(element, name, clean);\n    showElement(element);\n    return animation;\n}\n\nexport function animateAndHide(element : HTMLElement, name : string, clean : (Function) => void) : ZalgoPromise<void> {\n    return animate(element, name, clean).then(() => {\n        hideElement(element);\n    });\n}\n\nexport function addClass(element : HTMLElement, name : string) {\n    element.classList.add(name);\n}\n\nexport function removeClass(element : HTMLElement, name : string) {\n    element.classList.remove(name);\n}\n\nexport function isElementClosed(el : HTMLElement) : boolean {\n    if (!el || !el.parentNode) {\n        return true;\n    }\n    return false;\n}\n\nexport function watchElementForClose(element : HTMLElement, handler : () => mixed) : CancelableType {\n    handler = once(handler);\n\n    let interval;\n\n    if (isElementClosed(element)) {\n        handler();\n    } else {\n        interval = safeInterval(() => {\n            if (isElementClosed(element)) {\n                interval.cancel();\n                handler();\n            }\n        }, 50);\n    }\n\n    return {\n        cancel() {\n            if (interval) {\n                interval.cancel();\n            }\n        }\n    };\n}\n\nexport function fixScripts(el : HTMLElement, doc : Document = window.document) {\n    for (let script of querySelectorAll('script', el)) {\n        let parentNode = script.parentNode;\n\n        if (!parentNode) {\n            continue;\n        }\n\n        let newScript = doc.createElement('script');\n        newScript.text = script.textContent;\n        parentNode.replaceChild(newScript, script);\n    }\n}\n\ntype OnResizeOptions = {|\n    width? : boolean,\n    height? : boolean,\n    interval? : number,\n    win? : SameDomainWindowType\n|};\n\nexport function onResize(el : HTMLElement, handler : ({ width : number, height : number }) => void, { width = true, height = true, interval = 100, win = window } : OnResizeOptions = {}) : {} {\n    let currentWidth = el.offsetWidth;\n    let currentHeight = el.offsetHeight;\n\n    handler({ width: currentWidth, height: currentHeight });\n\n    let check = () => {\n        let newWidth = el.offsetWidth;\n        let newHeight = el.offsetHeight;\n\n        if ((width && newWidth !== currentWidth) || (height && newHeight !== currentHeight)) {\n            handler({ width: newWidth, height: newHeight });\n        }\n\n        currentWidth = newWidth;\n        currentHeight = newHeight;\n    };\n\n    let observer;\n    let timeout;\n\n    if (typeof win.ResizeObserver !== 'undefined') {\n        observer = new win.ResizeObserver(check);\n        observer.observe(el);\n\n    } else if (typeof win.MutationObserver !== 'undefined') {\n        observer = new win.MutationObserver(check);\n        observer.observe(el, {\n            attributes:    true,\n            childList:     true,\n            subtree:       true,\n            characterData: false\n        });\n        win.addEventListener('resize', check);\n    } else {\n        let loop = () => {\n            check();\n            timeout = setTimeout(loop, interval);\n        };\n        loop();\n    }\n\n    return {\n        cancel: () => {\n            observer.disconnect();\n            window.removeEventListener('resize', check);\n            clearTimeout(timeout);\n        }\n    };\n}\n","/* @flow */\n\nexport function hasNativeWeakMap() : boolean {\n\n    if (typeof WeakMap === 'undefined') {\n        return false;\n    }\n\n    if (typeof Object.freeze === 'undefined') {\n        return false;\n    }\n\n    try {\n\n        let testWeakMap = new WeakMap();\n        let testKey = {};\n        let testValue = '__testvalue__';\n\n        Object.freeze(testKey);\n\n        testWeakMap.set(testKey, testValue);\n\n        if (testWeakMap.get(testKey) === testValue) {\n            return true;\n        }\n\n        return false;\n\n    } catch (err) {\n\n        return false;\n    }\n}\n","/* @flow */\n\nexport function isPerc(str : string) : boolean {\n    return typeof str === 'string' && (/^[0-9]+%$/).test(str);\n}\n\nexport function isPx(str : string) : boolean {\n    return typeof str === 'string' && (/^[0-9]+px$/).test(str);\n}\n\nexport function toNum(val : string | number) : number {\n\n    if (typeof val === 'number') {\n        return val;\n    }\n\n    let match = val.match(/^([0-9]+)(px|%)$/);\n\n    if (!match) {\n        throw new Error(`Could not match css value from ${ val }`);\n    }\n\n    return parseInt(match[1], 10);\n}\n\nexport function toPx(val : number | string) : string {\n    return `${ toNum(val) }px`;\n}\n\nexport function toCSS(val : number | string) : string {\n\n    if (typeof val === 'number') {\n        return toPx(val);\n    }\n\n    return isPerc(val) ? val : toPx(val);\n}\n\nexport function percOf(num : number, perc : string) : number {\n    return parseInt(num * toNum(perc)  / 100, 10);\n}\n\nexport function normalizeDimension(dim : string | number, max : number) : number {\n    if (typeof dim === 'number') {\n        return dim;\n    } else if (isPerc(dim)) {\n        return percOf(max, dim);\n    } else if (isPx(dim)) {\n        return toNum(dim);\n    } else {\n        throw new Error(`Can not normalize dimension: ${ dim }`);\n    }\n}\n","/* @flow */\n\nexport const BRIDGE_TIMEOUT = 5000;\nexport const CHILD_WINDOW_TIMEOUT = 5000;\n\nexport const ACK_TIMEOUT = 2000;\nexport const ACK_TIMEOUT_KNOWN = 10000;\nexport const RES_TIMEOUT = __TEST__ ? 2000 : -1;\n","/* @flow */\n\nexport const MESSAGE_TYPE = {\n    REQUEST:  ('postrobot_message_request' : 'postrobot_message_request'),\n    RESPONSE: ('postrobot_message_response' : 'postrobot_message_response'),\n    ACK:      ('postrobot_message_ack' : 'postrobot_message_ack')\n};\n\nexport const MESSAGE_ACK = {\n    SUCCESS: ('success' : 'success'),\n    ERROR:   ('error' : 'error')\n};\n\nexport const MESSAGE_NAME = {\n    METHOD:      ('postrobot_method' : 'postrobot_method'),\n    HELLO:       ('postrobot_hello' : 'postrobot_hello'),\n    OPEN_TUNNEL: ('postrobot_open_tunnel' : 'postrobot_open_tunnel')\n};\n\nexport const SEND_STRATEGY = {\n    POST_MESSAGE: ('postrobot_post_message' : 'postrobot_post_message'),\n    BRIDGE:       ('postrobot_bridge' : 'postrobot_bridge'),\n    GLOBAL:       ('postrobot_global' : 'postrobot_global')\n};\n\nexport const BRIDGE_NAME_PREFIX = '__postrobot_bridge__';\nexport const POSTROBOT_PROXY =    '__postrobot_proxy__';\n\nexport const WILDCARD = '*';\n\nexport const SERIALIZATION_TYPE = {\n    CROSS_DOMAIN_ZALGO_PROMISE: ('cross_domain_zalgo_promise' : 'cross_domain_zalgo_promise'),\n    CROSS_DOMAIN_FUNCTION:      ('cross_domain_function' : 'cross_domain_function'),\n    CROSS_DOMAIN_WINDOW:        ('cross_domain_window' : 'cross_domain_window')\n};\n","/* @flow */\n\nimport { type CrossDomainWindowType, type SameDomainWindowType } from 'cross-domain-utils/src';\nimport { WeakMap } from 'cross-domain-safe-weakmap/src';\nimport { getOrSet } from 'belter/src';\n\nexport function getGlobal(win : SameDomainWindowType = window) : Object {\n    if (win !== window) {\n        return win[__POST_ROBOT__.__GLOBAL_KEY__];\n    }\n    const global : Object = win[__POST_ROBOT__.__GLOBAL_KEY__] = win[__POST_ROBOT__.__GLOBAL_KEY__] || {};\n    return global;\n}\n\ntype ObjectGetter = () => Object;\nconst getObj : ObjectGetter = () => ({});\n\ntype GetOrSet<T> = ((string, () => T) => T) & ((string, () => void) => void);\n\ntype GlobalStore<T> = {|\n    get : ((string, T) => T) & ((string, void) => T | void),\n    set : (string, T) => T,\n    has : (string) => boolean,\n    del : (string) => void,\n    getOrSet : GetOrSet<T>,\n    reset : () => void,\n    keys : () => $ReadOnlyArray<string>\n|};\n\n// $FlowFixMe\nexport function globalStore<T : mixed>(key? : string = 'store', defStore? : ObjectGetter = getObj) : GlobalStore<T> {\n    return getOrSet(getGlobal(), key, () => {\n        let store = defStore();\n\n        return {\n            has: (storeKey) => {\n                return store.hasOwnProperty(storeKey);\n            },\n            get: (storeKey, defVal) => {\n                // $FlowFixMe\n                return store.hasOwnProperty(storeKey) ? store[storeKey] : defVal;\n            },\n            set: (storeKey, val) => {\n                store[storeKey] = val;\n                return val;\n            },\n            del: (storeKey) => {\n                delete store[storeKey];\n            },\n            getOrSet: (storeKey, getter) => {\n                // $FlowFixMe\n                return getOrSet(store, storeKey, getter);\n            },\n            reset: () => {\n                store = defStore();\n            },\n            keys: () => {\n                return Object.keys(store);\n            }\n        };\n    });\n}\n\nexport class WildCard {}\n\nexport function getWildcard() : WildCard {\n    const global = getGlobal();\n    global.WINDOW_WILDCARD = global.WINDOW_WILDCARD || new WildCard();\n    return global.WINDOW_WILDCARD;\n}\n\ntype WindowStore<T> = {|\n    get : ((CrossDomainWindowType | WildCard, T) => T) & ((CrossDomainWindowType | WildCard, void) => T | void),\n    set : (CrossDomainWindowType | WildCard, T) => T,\n    has : (CrossDomainWindowType | WildCard) => boolean,\n    del : (CrossDomainWindowType | WildCard) => void,\n    getOrSet : (CrossDomainWindowType | WildCard, () => T) => T\n|};\n\n// $FlowFixMe\nexport function windowStore<T>(key? : string = 'store', defStore? : ObjectGetter = getObj) : WindowStore<T> {\n    return globalStore('windowStore').getOrSet(key, () => {\n        const winStore = new WeakMap();\n\n        const getStore = (win : CrossDomainWindowType | WildCard) : ObjectGetter => {\n            return winStore.getOrSet(win, defStore);\n        };\n    \n        return {\n            has: (win) => {\n                const store = getStore(win);\n                return store.hasOwnProperty(key);\n            },\n            get: (win, defVal) => {\n                const store = getStore(win);\n                // $FlowFixMe\n                return store.hasOwnProperty(key) ? store[key] : defVal;\n            },\n            set: (win, val) => {\n                const store = getStore(win);\n                store[key] = val;\n                return val;\n            },\n            del: (win) => {\n                const store = getStore(win);\n                delete store[key];\n            },\n            getOrSet: (win, getter) => {\n                const store = getStore(win);\n                return getOrSet(store, key, getter);\n            }\n        };\n    });\n}\n","/* @flow */\n\nimport { getAncestor, type CrossDomainWindowType } from 'cross-domain-utils/src';\nimport { ZalgoPromise } from 'zalgo-promise/src';\nimport { noop, uniqueID } from 'belter/src';\n\nimport { MESSAGE_NAME, WILDCARD } from '../conf';\nimport { windowStore, globalStore } from '../global';\nimport type { OnType, SendType, CancelableType } from '../types';\n\nfunction getInstanceID() : string {\n    return globalStore('instance').getOrSet('instanceID', uniqueID);\n}\n\nfunction getHelloPromise(win : CrossDomainWindowType) : ZalgoPromise<{ win : CrossDomainWindowType, domain : string }> {\n    const helloPromises = windowStore('helloPromises');\n    return helloPromises.getOrSet(win, () => new ZalgoPromise());\n}\n\nfunction listenForHello({ on } : { on : OnType }) : CancelableType {\n    return on(MESSAGE_NAME.HELLO, { domain: WILDCARD }, ({ source, origin }) => {\n        getHelloPromise(source).resolve({ win: source, domain: origin });\n        return { instanceID: getInstanceID() };\n    });\n}\n\nexport function sayHello(win : CrossDomainWindowType, { send } : { send : SendType }) : ZalgoPromise<{ win : CrossDomainWindowType, domain : string, instanceID : string }> {\n    return send(win, MESSAGE_NAME.HELLO, { instanceID: getInstanceID() }, { domain: WILDCARD, timeout: -1 })\n        .then(({ origin, data: { instanceID } }) => {\n            getHelloPromise(win).resolve({ win, domain: origin });\n            return { win, domain: origin, instanceID };\n        });\n}\n\nexport function getWindowInstanceID(win : CrossDomainWindowType, { send } : { send : SendType }) : ZalgoPromise<string> {\n    return windowStore('windowInstanceIDPromises').getOrSet(win, () => {\n        return sayHello(win, { send }).then(({ instanceID }) => instanceID);\n    });\n}\n\nexport function initHello({ on, send } : { on : OnType, send : SendType }) : CancelableType {\n    return globalStore('builtinListeners').getOrSet('helloListener', () => {\n        const listener = listenForHello({ on });\n\n        const parent = getAncestor();\n        if (parent) {\n            sayHello(parent, { send }).catch(noop);\n        }\n\n        return listener;\n    });\n}\n\nexport function awaitWindowHello(win : CrossDomainWindowType, timeout : number = 5000, name : string = 'Window') : ZalgoPromise<{ win : CrossDomainWindowType, domain : string }> {\n    let promise = getHelloPromise(win);\n\n    if (timeout !== -1) {\n        promise = promise.timeout(timeout, new Error(`${ name } did not load after ${ timeout }ms`));\n    }\n\n    return promise;\n}\n","/* @flow */\n\nimport { type CrossDomainWindowType } from 'cross-domain-utils/src';\n\nimport { windowStore } from '../global';\n\nexport function markWindowKnown(win : CrossDomainWindowType) {\n    const knownWindows = windowStore('knownWindows');\n    knownWindows.set(win, true);\n}\n\nexport function isWindowKnown(win : CrossDomainWindowType) : boolean {\n    const knownWindows = windowStore('knownWindows');\n    return knownWindows.get(win, false);\n}\n","/* @flow */\n\nexport const TYPE = {\n    FUNCTION:  ('function' : 'function'),\n    ERROR:     ('error' : 'error'),\n    PROMISE:   ('promise' : 'promise'),\n    REGEX:     ('regex' : 'regex'),\n    DATE:      ('date' : 'date'),\n    ARRAY:     ('array' : 'array'),\n    OBJECT:    ('object' : 'object'),\n    STRING:    ('string' : 'string'),\n    NUMBER:    ('number' : 'number'),\n    BOOLEAN:   ('boolean' : 'boolean'),\n    NULL:      ('null' : 'null'),\n    UNDEFINED: ('undefined' : 'undefined')\n};\n","/* @flow */\n\nimport { TYPE } from './constants';\nimport type { CustomSerializedType } from './types';\n\nexport function isSerializedType(item : mixed) : boolean {\n    return (typeof item === 'object' && item !== null && typeof item.__type__ === 'string');\n}\n\nexport function determineType(val : mixed) : $Values<typeof TYPE> | void {\n    if (typeof val === 'undefined') {\n        return TYPE.UNDEFINED;\n    }\n\n    if (val === null) {\n        return TYPE.NULL;\n    }\n\n    if (Array.isArray(val)) {\n        return TYPE.ARRAY;\n    }\n\n    if (typeof val === 'function') {\n        return TYPE.FUNCTION;\n    }\n\n    if (typeof val === 'object') {\n\n        if (val instanceof Error) {\n            return TYPE.ERROR;\n        }\n\n        if (typeof val.then === 'function') {\n            return TYPE.PROMISE;\n        }\n\n        if (Object.prototype.toString.call(val) === '[object RegExp]') {\n            return TYPE.REGEX;\n        }\n\n        if (Object.prototype.toString.call(val) === '[object Date]') {\n            return TYPE.DATE;\n        }\n\n        return TYPE.OBJECT;\n    }\n\n    if (typeof val === 'string') {\n        return TYPE.STRING;\n    }\n\n    if (typeof val === 'number') {\n        return TYPE.NUMBER;\n    }\n\n    if (typeof val === 'boolean') {\n        return TYPE.BOOLEAN;\n    }\n}\n\nexport function serializeType<T : string, V : mixed>(type : T, val : V) : CustomSerializedType<T, V> {\n    return {\n        __type__: type,\n        __val__:  val\n    };\n}\n","/* @flow */\n\nimport { TYPE } from './constants';\nimport type { Thenable, CustomSerializedType, NativeSerializedType } from './types';\nimport { determineType, isSerializedType } from './common';\nimport {\n    serializeFunction,\n    serializeError, type SerializedError,\n    serializePromise,\n    serializeRegex, type SerializedRegex,\n    serializeDate, type SerializedDate,\n    serializeArray,\n    serializeObject,\n    serializeString,\n    serializeNumber,\n    serializeBoolean,\n    serializeNull\n} from './serializers';\n\ntype NativeSerializer<V : mixed, S : mixed, T : $Values<typeof TYPE>> = (value : V, key : string) => NativeSerializedType<T, S>;\ntype CustomSerializer<V : mixed, S : mixed, T : string> = (value : V, key : string) => CustomSerializedType<T, S>;\ntype PrimitiveSerializer<V : mixed, S : mixed> = (value : V, key : string) => S;\ntype CustomOrPrimitiveSerializer<V : mixed, T : string> = CustomSerializer<V, *, T> | PrimitiveSerializer<V, *>;\ntype NativeOrCustomOrPrimitiveSerializer<V : mixed, S : mixed, T : string> = NativeSerializer<V, S, T> | CustomOrPrimitiveSerializer<V, T>;\n\ntype Serializers = {|\n    function? : CustomOrPrimitiveSerializer<Function, typeof TYPE.FUNCTION>,\n    error? : NativeOrCustomOrPrimitiveSerializer<Error, SerializedError, typeof TYPE.ERROR>,\n    promise? : CustomOrPrimitiveSerializer<Thenable, typeof TYPE.PROMISE>,\n    regex? : NativeOrCustomOrPrimitiveSerializer<RegExp, SerializedRegex, typeof TYPE.REGEX>,\n    date? : NativeOrCustomOrPrimitiveSerializer<Date, SerializedDate, typeof TYPE.DATE>,\n    array? : CustomOrPrimitiveSerializer<$ReadOnlyArray<mixed>, typeof TYPE.ARRAY>,\n    object? : CustomOrPrimitiveSerializer<Object, typeof TYPE.OBJECT>,\n    string? : CustomOrPrimitiveSerializer<string, typeof TYPE.STRING>,\n    number? : CustomOrPrimitiveSerializer<number, typeof TYPE.NUMBER>,\n    boolean? : CustomOrPrimitiveSerializer<boolean, typeof TYPE.BOOLEAN>,\n    null? : CustomOrPrimitiveSerializer<null, typeof TYPE.NULL>\n|};\n\nconst SERIALIZER : Serializers = {\n    [ TYPE.FUNCTION ]:  serializeFunction,\n    [ TYPE.ERROR ]:     serializeError,\n    [ TYPE.PROMISE ]:   serializePromise,\n    [ TYPE.REGEX ]:     serializeRegex,\n    [ TYPE.DATE ]:      serializeDate,\n    [ TYPE.ARRAY ]:     serializeArray,\n    [ TYPE.OBJECT ]:    serializeObject,\n    [ TYPE.STRING ]:    serializeString,\n    [ TYPE.NUMBER ]:    serializeNumber,\n    [ TYPE.BOOLEAN ]:   serializeBoolean,\n    [ TYPE.NULL ]:      serializeNull\n};\n\n// $FlowFixMe\nconst defaultSerializers : Serializers = {};\n\nexport function serialize<T : mixed>(obj : T, serializers : Serializers = defaultSerializers) : string {\n\n    function replacer(key) : ?mixed {\n        const val = this[key];\n\n        if (isSerializedType(this)) {\n            return val;\n        }\n        \n        const type = determineType(val);\n\n        if (!type) {\n            return val;\n        }\n\n        // $FlowFixMe\n        const serializer = serializers[type] || SERIALIZER[type];\n\n        if (!serializer) {\n            return val;\n        }\n\n        return serializer(val, key);\n    }\n\n    const result = JSON.stringify(obj, replacer);\n\n    if (typeof result === 'undefined') {\n        return TYPE.UNDEFINED;\n    }\n\n    return result;\n}\n","/* @flow */\n\nexport type SerializedFunction = void;\n\nexport function serializeFunction() : SerializedFunction {\n    // pass\n}\n\nexport function deserializeFunction() {\n    throw new Error(`Function serialization is not implemented; nothing to deserialize`);\n}\n","/* @flow */\n\nimport { serializeType } from '../common';\nimport { TYPE } from '../constants';\nimport type { NativeSerializedType } from '../types';\n\nexport type SerializedError = {|\n    message : string,\n    stack : string,\n    code : string | number | void\n|};\n\n// $FlowFixMe\nexport function serializeError({ message, stack, code } : Error) : NativeSerializedType<typeof TYPE.ERROR, SerializedError> {\n    return serializeType(TYPE.ERROR, { message, stack, code });\n}\n\nexport function deserializeError({ message, stack, code } : SerializedError) : Error {\n    const error = new Error(message);\n    // $FlowFixMe\n    error.code = code;\n    error.stack = `${ stack }\\n\\n${ error.stack }`;\n    return error;\n}\n","/* @flow */\n\nexport type SerializedPromise = void;\n\nexport function serializePromise() : SerializedPromise {\n    // pass\n}\n\nexport function deserializePromise() {\n    throw new Error(`Promise serialization is not implemented; nothing to deserialize`);\n}\n","/* @flow */\n\nimport { serializeType } from '../common';\nimport { TYPE } from '../constants';\nimport type { NativeSerializedType } from '../types';\n\nexport type SerializedRegex = string;\n\nexport function serializeRegex(val : RegExp) : NativeSerializedType<typeof TYPE.REGEX, SerializedRegex> {\n    return serializeType(TYPE.REGEX, val.source);\n}\n\nexport function deserializeRegex(val : string) : RegExp {\n    // eslint-disable-next-line security/detect-non-literal-regexp\n    return new RegExp(val);\n}\n","/* @flow */\n\nimport { serializeType } from '../common';\nimport { TYPE } from '../constants';\nimport type { NativeSerializedType } from '../types';\n\nexport type SerializedDate = string;\n\nexport function serializeDate(val : Date) : NativeSerializedType<typeof TYPE.DATE, SerializedDate> {\n    return serializeType(TYPE.DATE, val.toJSON());\n}\n\nexport function deserializeDate(val : string) : Date {\n    return new Date(val);\n}\n","/* @flow */\n\nexport type SerializedArray<T : mixed = mixed> = $ReadOnlyArray<T>;\n\nexport function serializeArray<T : mixed>(val : $ReadOnlyArray<T>) : SerializedArray<T> {\n    return val;\n}\n\nexport function deserializeArray<T : mixed>(val : SerializedArray<T>) : $ReadOnlyArray<T> {\n    return val;\n}\n","/* @flow */\n\nexport type SerializedObject = Object;\n\nexport function serializeObject(val : Object) : SerializedObject {\n    return val;\n}\n\nexport function deserializeObject(val : SerializedObject) : Object {\n    return val;\n}\n","/* @flow */\n\nexport type SerializedString = string;\n\nexport function serializeString(val : string) : SerializedString {\n    return val;\n}\n\nexport function deserializeString(val : SerializedString) : string {\n    return val;\n}\n","/* @flow */\n\nexport type SerializedNumber = number;\n\nexport function serializeNumber(val : number) : SerializedNumber {\n    return val;\n}\n\nexport function deserializeNumber(val : SerializedNumber) : number {\n    return val;\n}\n","/* @flow */\n\nexport type SerializedBoolean = boolean;\n\nexport function serializeBoolean(val : boolean) : SerializedBoolean {\n    return val;\n}\n\nexport function deserializeBoolean(val : SerializedBoolean) : boolean {\n    return val;\n}\n","/* @flow */\n\nexport type SerializedNull = null;\n\nexport function serializeNull(val : null) : SerializedNull {\n    return val;\n}\n\nexport function deserializeNull(val : SerializedNull) : null {\n    return val;\n}\n","/* @flow */\n\nimport type { Thenable } from './types';\nimport { TYPE } from './constants';\nimport { determineType, isSerializedType } from './common';\nimport {\n    deserializeFunction,\n    deserializeError, type SerializedError,\n    deserializePromise,\n    deserializeRegex, type SerializedRegex,\n    deserializeDate, type SerializedDate,\n    deserializeArray,\n    deserializeObject,\n    deserializeString,\n    deserializeNumber,\n    deserializeBoolean,\n    deserializeNull\n} from './serializers';\n\ntype Deserializer<V : mixed, S : mixed> = (serializedValue : S, key : string) => V;\ntype PrimitiveDeserializer<V, S = V> = (serializedValue : S, key : string) => V;\n\ntype Deserializers = {\n    function? : Deserializer<Function, *>,\n    error? : Deserializer<Error, SerializedError>,\n    promise? : Deserializer<Thenable, *>,\n    regex? : Deserializer<RegExp, SerializedRegex>,\n    date? : Deserializer<Date, SerializedDate>,\n    array? : PrimitiveDeserializer<$ReadOnlyArray<mixed>>,\n    object? : PrimitiveDeserializer<Object>,\n    string? : PrimitiveDeserializer<string>,\n    number? : PrimitiveDeserializer<number>,\n    boolean? : PrimitiveDeserializer<boolean>,\n    null? : PrimitiveDeserializer<null>,\n    [string] : Deserializer<mixed, *>\n};\n\n// $FlowFixMe\nconst DESERIALIZER : Deserializers = {\n    [ TYPE.FUNCTION ]:  deserializeFunction,\n    [ TYPE.ERROR ]:     deserializeError,\n    [ TYPE.PROMISE ]:   deserializePromise,\n    [ TYPE.REGEX ]:     deserializeRegex,\n    [ TYPE.DATE ]:      deserializeDate,\n    [ TYPE.ARRAY ]:     deserializeArray,\n    [ TYPE.OBJECT ]:    deserializeObject,\n    [ TYPE.STRING ]:    deserializeString,\n    [ TYPE.NUMBER ]:    deserializeNumber,\n    [ TYPE.BOOLEAN ]:   deserializeBoolean,\n    [ TYPE.NULL ]:      deserializeNull\n};\n\n// $FlowFixMe\nconst defaultDeserializers : Deserializers = {};\n\nexport function deserialize<T : mixed | null | void>(str : string, deserializers : Deserializers = defaultDeserializers) : T {\n    if (str === TYPE.UNDEFINED) {\n        // $FlowFixMe\n        return;\n    }\n\n    function replacer(key, val) : ?mixed {\n        if (isSerializedType(this)) {\n            return val;\n        }\n\n        let type;\n        let value;\n\n        if (isSerializedType(val)) {\n            type = val.__type__;\n            value = val.__val__;\n        } else {\n            type = determineType(val);\n            value = val;\n        }\n\n        if (!type) {\n            return value;\n        }\n\n        // $FlowFixMe\n        const deserializer = deserializers[type] || DESERIALIZER[type];\n\n        if (!deserializer) {\n            return value;\n        }\n\n        return deserializer(value, key);\n    }\n\n    return JSON.parse(str, replacer);\n}\n","/* @flow */\n\nimport { isSameDomain, isWindowClosed, type CrossDomainWindowType, type DomainMatcher, getOpener, WINDOW_TYPE, isWindow } from 'cross-domain-utils/src';\nimport { ZalgoPromise } from 'zalgo-promise/src';\nimport { uniqueID, memoizePromise } from 'belter/src';\nimport { serializeType, type CustomSerializedType } from 'universal-serialize/src';\n\nimport { SERIALIZATION_TYPE } from '../conf';\nimport { windowStore, globalStore } from '../global';\nimport { getWindowInstanceID } from '../lib';\nimport { linkWindow } from '../bridge';\nimport type { OnType, SendType } from '../types';\n\nfunction cleanupProxyWindows() {\n    const idToProxyWindow = globalStore('idToProxyWindow');\n    for (const id of idToProxyWindow.keys()) {\n        // $FlowFixMe\n        if (idToProxyWindow.get(id).shouldClean()) {\n            idToProxyWindow.del(id);\n        }\n    }\n}\n\ntype SerializedProxyWindow = {|\n    id : string,\n    type : $Values<typeof WINDOW_TYPE>,\n    close : () => ZalgoPromise<void>,\n    focus : () => ZalgoPromise<void>,\n    isClosed : () => ZalgoPromise<boolean>,\n    setLocation : (string) => ZalgoPromise<void>,\n    setName : (string) => ZalgoPromise<void>,\n    getInstanceID : () => ZalgoPromise<string>\n|};\n\nexport class ProxyWindow {\n\n    isProxyWindow : true = true\n    serializedWindow : SerializedProxyWindow\n    actualWindow : CrossDomainWindowType\n    actualWindowPromise : ZalgoPromise<CrossDomainWindowType>\n    send : SendType\n\n    constructor(serializedWindow : SerializedProxyWindow, actualWindow? : ?CrossDomainWindowType, { send } : { send : SendType }) {\n        this.serializedWindow = serializedWindow;\n        this.actualWindowPromise = new ZalgoPromise();\n        if (actualWindow) {\n            this.setWindow(actualWindow);\n        }\n        this.serializedWindow.getInstanceID = memoizePromise(this.serializedWindow.getInstanceID);\n        this.send = send;\n    }\n\n    getType() : $Values<typeof WINDOW_TYPE> {\n        return this.serializedWindow.type;\n    }\n\n    isPopup() : boolean {\n        return this.getType() === WINDOW_TYPE.POPUP;\n    }\n\n    isIframe() : boolean {\n        return this.getType() === WINDOW_TYPE.IFRAME;\n    }\n\n    setLocation(href : string) : ZalgoPromise<ProxyWindow> {\n        return ZalgoPromise.try(() => {\n            if (this.actualWindow) {\n                this.actualWindow.location = href;\n            } else {\n                return this.serializedWindow.setLocation(href);\n            }\n        }).then(() => this);\n    }\n\n    setName(name : string) : ZalgoPromise<ProxyWindow> {\n        return ZalgoPromise.try(() => {\n            if (this.actualWindow) {\n                if (!isSameDomain(this.actualWindow)) {\n                    throw new Error(`Can not set name for window on different domain`);\n                }\n                // $FlowFixMe\n                this.actualWindow.name = name;\n                // $FlowFixMe\n                if (this.actualWindow.frameElement) {\n                    // $FlowFixMe\n                    this.actualWindow.frameElement.setAttribute('name', name);\n                }\n\n                if (__POST_ROBOT__.__IE_POPUP_SUPPORT__) {\n                    \n                    linkWindow({ win: this.actualWindow, name });\n                }\n\n            } else {\n                return this.serializedWindow.setName(name);\n            }\n        }).then(() => this);\n    }\n\n    close() : ZalgoPromise<ProxyWindow> {\n        return ZalgoPromise.try(() => {\n            if (this.actualWindow) {\n                this.actualWindow.close();\n            } else {\n                return this.serializedWindow.close();\n            }\n        }).then(() => this);\n    }\n\n    focus() : ZalgoPromise<ProxyWindow> {\n        return ZalgoPromise.try(() => {\n            if (this.actualWindow) {\n                this.actualWindow.focus();\n            }\n            return this.serializedWindow.focus();\n        }).then(() => this);\n    }\n\n    isClosed() : ZalgoPromise<boolean> {\n        return ZalgoPromise.try(() => {\n            if (this.actualWindow) {\n                return isWindowClosed(this.actualWindow);\n            } else {\n                return this.serializedWindow.isClosed();\n            }\n        });\n    }\n\n    getWindow() : ?CrossDomainWindowType {\n        return this.actualWindow;\n    }\n\n    setWindow(win : CrossDomainWindowType) {\n        this.actualWindow = win;\n        this.actualWindowPromise.resolve(win);\n    }\n\n    awaitWindow() : ZalgoPromise<CrossDomainWindowType> {\n        return this.actualWindowPromise;\n    }\n\n    matchWindow(win : CrossDomainWindowType) : ZalgoPromise<boolean> {\n        return ZalgoPromise.try(() => {\n            if (this.actualWindow) {\n                return win === this.actualWindow;\n            }\n            \n            return ZalgoPromise.all([\n                this.getInstanceID(),\n                getWindowInstanceID(win, { send: this.send })\n            ]).then(([ proxyInstanceID, knownWindowInstanceID ]) => {\n                const match = proxyInstanceID === knownWindowInstanceID;\n\n                if (match) {\n                    this.setWindow(win);\n                }\n\n                return match;\n            });\n        });\n    }\n\n    unwrap() : CrossDomainWindowType | ProxyWindow {\n        return this.actualWindow || this;\n    }\n\n    getInstanceID() : ZalgoPromise<string> {\n        if (this.actualWindow) {\n            return getWindowInstanceID(this.actualWindow, { send: this.send });\n        } else {\n            return this.serializedWindow.getInstanceID();\n        }\n    }\n\n    serialize() : SerializedProxyWindow {\n        return this.serializedWindow;\n    }\n\n    shouldClean() : boolean {\n        return this.actualWindow && isWindowClosed(this.actualWindow);\n    }\n\n    static unwrap(win : CrossDomainWindowType | ProxyWindow) : CrossDomainWindowType | ProxyWindow {\n        return ProxyWindow.isProxyWindow(win)\n            // $FlowFixMe\n            ? win.unwrap()\n            : win;\n    }\n\n    static serialize(win : CrossDomainWindowType | ProxyWindow, { send } : { send : SendType }) : SerializedProxyWindow {\n        cleanupProxyWindows();\n\n        return ProxyWindow.toProxyWindow(win, { send }).serialize();\n    }\n\n    static deserialize(serializedWindow : SerializedProxyWindow, { on, send } : { on : OnType, send : SendType }) : ProxyWindow {\n        cleanupProxyWindows();\n        \n        return globalStore('idToProxyWindow').getOrSet(serializedWindow.id, () => {\n            return new ProxyWindow(serializedWindow, null, { on, send });\n        });\n    }\n\n    static isProxyWindow(obj : CrossDomainWindowType | ProxyWindow) : boolean {\n        // $FlowFixMe\n        return Boolean(obj && !isWindow(obj) && obj.isProxyWindow);\n    }\n\n    static toProxyWindow(win : CrossDomainWindowType | ProxyWindow, { send } : { send : SendType }) : ProxyWindow {\n        cleanupProxyWindows();\n\n        if (ProxyWindow.isProxyWindow(win)) {\n            // $FlowFixMe\n            return win;\n        }\n\n        // $FlowFixMe\n        return windowStore('winToProxyWindow').getOrSet(win, () => {\n            const id = uniqueID();\n\n            return globalStore('idToProxyWindow').set(id, new ProxyWindow({\n                id,\n                // $FlowFixMe\n                type:          getOpener(win) ? WINDOW_TYPE.POPUP : WINDOW_TYPE.IFRAME,\n                // $FlowFixMe\n                getInstanceID: () => getWindowInstanceID(win, { send }),\n                close:         () => ZalgoPromise.try(() => {\n                    win.close();\n                }),\n                focus:         () => ZalgoPromise.try(() => {\n                    win.focus();\n                }),\n                isClosed:      () => ZalgoPromise.try(() => {\n                    // $FlowFixMe\n                    return isWindowClosed(win);\n                }),\n                setLocation:   (href) => ZalgoPromise.try(() => {\n                    // $FlowFixMe\n                    if (isSameDomain(win)) {\n                        try {\n                            if (win.location && typeof win.location.replace === 'function') {\n                                // $FlowFixMe\n                                win.location.replace(href);\n                                return;\n                            }\n                        } catch (err) {\n                            // pass\n                        }\n                    }\n    \n                    // $FlowFixMe\n                    win.location = href;\n                }),\n                setName:       (name) => ZalgoPromise.try(() => {\n                    if (__POST_ROBOT__.__IE_POPUP_SUPPORT__) {\n                        // $FlowFixMe\n                        linkWindow({ win, name });\n                    }\n                    // $FlowFixMe\n                    win.name = name;\n                })\n            // $FlowFixMe\n            }, win, { send }));\n        });\n    }\n}\n\nexport type SerializedWindow = CustomSerializedType<typeof SERIALIZATION_TYPE.CROSS_DOMAIN_WINDOW, SerializedProxyWindow>;\n\nexport function serializeWindow(destination : CrossDomainWindowType | ProxyWindow, domain : DomainMatcher, win : CrossDomainWindowType, { send } : { send : SendType }) : SerializedWindow {\n    return serializeType(SERIALIZATION_TYPE.CROSS_DOMAIN_WINDOW, ProxyWindow.serialize(win, { send }));\n}\n\nexport function deserializeWindow(source : CrossDomainWindowType | ProxyWindow, origin : string, win : SerializedProxyWindow, { on, send } : { on : OnType, send : SendType }) : ProxyWindow {\n    return ProxyWindow.deserialize(win, { on, send });\n}\n","/* @flow */\n\nimport { ZalgoPromise } from 'zalgo-promise/src';\nimport { getDomain, isSameDomain, isOpener, isSameTopWindow, matchDomain, getUserAgent, getDomainFromUrl, type CrossDomainWindowType } from 'cross-domain-utils/src';\nimport { noop } from 'belter/src';\n\nimport { BRIDGE_NAME_PREFIX } from '../conf';\nimport { windowStore } from '../global';\n\nexport function needsBridgeForBrowser() : boolean {\n\n    if (getUserAgent(window).match(/MSIE|trident|edge\\/12|edge\\/13/i)) {\n        return true;\n    }\n\n    return false;\n}\n\nexport function needsBridgeForWin(win : CrossDomainWindowType) : boolean {\n\n    if (!isSameTopWindow(window, win)) {\n        return true;\n    }\n\n    return false;\n}\n\nexport function needsBridgeForDomain(domain : ?string, win : ?CrossDomainWindowType) : boolean {\n\n    if (domain) {\n        if (getDomain() !== getDomainFromUrl(domain)) {\n            return true;\n        }\n    } else if (win) {\n        if (!isSameDomain(win))  {\n            return true;\n        }\n    }\n\n    return false;\n}\n\nexport function needsBridge({ win, domain } : { win? : CrossDomainWindowType, domain? : string }) : boolean {\n\n    if (!needsBridgeForBrowser()) {\n        return false;\n    }\n\n    if (domain && !needsBridgeForDomain(domain, win)) {\n        return false;\n    }\n\n    if (win && !needsBridgeForWin(win)) {\n        return false;\n    }\n\n    return true;\n}\n\nexport function getBridgeName(domain : string) : string {\n\n    domain = domain || getDomainFromUrl(domain);\n\n    const sanitizedDomain = domain.replace(/[^a-zA-Z0-9]+/g, '_');\n\n    const id = `${ BRIDGE_NAME_PREFIX }_${ sanitizedDomain }`;\n\n    return id;\n}\n\nexport function isBridge() : boolean {\n    return Boolean(window.name && window.name === getBridgeName(getDomain()));\n}\n\nexport const documentBodyReady = new ZalgoPromise(resolve => {\n\n    if (window.document && window.document.body) {\n        return resolve(window.document.body);\n    }\n\n    const interval = setInterval(() => {\n        if (window.document && window.document.body) {\n            clearInterval(interval);\n            return resolve(window.document.body);\n        }\n    }, 10);\n});\n\nexport function registerRemoteWindow(win : CrossDomainWindowType) {\n    const remoteWindowPromises = windowStore('remoteWindowPromises');\n    remoteWindowPromises.getOrSet(win, () => new ZalgoPromise());\n}\n\nexport function findRemoteWindow(win : CrossDomainWindowType) : ZalgoPromise<(remoteWin : CrossDomainWindowType, message : string, remoteDomain : string) => void> {\n    const remoteWindowPromises = windowStore('remoteWindowPromises');\n    const remoteWinPromise = remoteWindowPromises.get(win);\n\n    if (!remoteWinPromise) {\n        throw new Error(`Remote window promise not found`);\n    }\n\n    return remoteWinPromise;\n}\n\nexport function registerRemoteSendMessage(win : CrossDomainWindowType, domain : string, sendMessage : (message : string) => void) {\n    const sendMessageWrapper = (remoteWin : CrossDomainWindowType, remoteDomain : string, message : string) => {\n        if (remoteWin !== win) {\n            throw new Error(`Remote window does not match window`);\n        }\n\n        if (!matchDomain(remoteDomain, domain)) {\n            throw new Error(`Remote domain ${ remoteDomain } does not match domain ${ domain }`);\n        }\n\n        sendMessage.fireAndForget(message);\n    };\n\n    findRemoteWindow(win).resolve(sendMessageWrapper);\n}\n\nexport function rejectRemoteSendMessage(win : CrossDomainWindowType, err : Error) {\n    findRemoteWindow(win).reject(err).catch(noop);\n}\n\nexport function sendBridgeMessage(win : CrossDomainWindowType, domain : string, message : string) : ZalgoPromise<void> {\n\n    const messagingChild  = isOpener(window, win);\n    const messagingParent = isOpener(win, window);\n\n    if (!messagingChild && !messagingParent) {\n        throw new Error(`Can only send messages to and from parent and popup windows`);\n    }\n\n    return findRemoteWindow(win).then(sendMessage => {\n        return sendMessage(win, domain, message);\n    });\n}\n","/* @flow */\n\nimport { matchDomain, getDomain, type CrossDomainWindowType, type DomainMatcher } from 'cross-domain-utils/src';\nimport { ZalgoPromise } from 'zalgo-promise/src';\nimport { uniqueID, isRegex } from 'belter/src';\nimport { serializeType, type CustomSerializedType } from 'universal-serialize/src';\n\nimport { MESSAGE_NAME, WILDCARD, SERIALIZATION_TYPE } from '../conf';\nimport { windowStore, globalStore } from '../global';\nimport type { OnType, SendType, CancelableType } from '../types';\n\nimport { ProxyWindow } from './window';\n\ntype StoredMethod = {|\n    name : string,\n    domain : DomainMatcher,\n    val : Function,\n    source : CrossDomainWindowType | ProxyWindow\n|};\n\nfunction addMethod(id : string, val : Function, name : string, source : CrossDomainWindowType | ProxyWindow, domain : DomainMatcher) {\n    const methodStore = windowStore('methodStore');\n    const proxyWindowMethods = globalStore('proxyWindowMethods');\n    \n    if (ProxyWindow.isProxyWindow(source)) {\n        proxyWindowMethods.set(id, { val, name, domain, source });\n    } else {\n        proxyWindowMethods.del(id);\n        // $FlowFixMe\n        const methods = methodStore.getOrSet(source, () => ({}));\n        methods[id] = { domain, name, val, source };\n    }\n}\n\nfunction lookupMethod(source : CrossDomainWindowType, id : string) : ?StoredMethod {\n    const methodStore = windowStore('methodStore');\n    const proxyWindowMethods = globalStore('proxyWindowMethods');\n    const methods = methodStore.getOrSet(source, () => ({}));\n    return methods[id] || proxyWindowMethods.get(id);\n}\n\nfunction listenForFunctionCalls({ on } : { on : OnType }) : CancelableType {\n    return globalStore('builtinListeners').getOrSet('functionCalls', () => {\n        return on(MESSAGE_NAME.METHOD, { domain: WILDCARD }, ({ source, origin, data } : { source : CrossDomainWindowType, origin : string, data : Object }) => {\n            const { id, name } = data;\n\n            const meth = lookupMethod(source, id);\n    \n            if (!meth) {\n                throw new Error(`Could not find method '${ data.name }' with id: ${ data.id } in ${ getDomain(window) }`);\n            }\n\n            const { source: methodSource, domain, val } = meth;\n            \n            return ZalgoPromise.try(() => {\n                if (!matchDomain(domain, origin)) {\n                    // $FlowFixMe\n                    throw new Error(`Method '${ data.name }' domain ${ JSON.stringify(isRegex(meth.domain) ? meth.domain.source : meth.domain) } does not match origin ${ origin } in ${ getDomain(window) }`);\n                }\n                \n                if (ProxyWindow.isProxyWindow(methodSource)) {\n                    // $FlowFixMe\n                    return methodSource.matchWindow(source).then(match => {\n                        if (!match) {\n                            throw new Error(`Method call '${ data.name }' failed - proxy window does not match source in ${ getDomain(window) }`);\n                        }\n                    });\n                }\n            }).then(() => {\n                return val.apply({ source, origin }, data.args);\n            }, err => {\n                return ZalgoPromise.try(() => {\n                    if (val.onError) {\n                        return val.onError(err);\n                    }\n                }).then(() => {\n                    // $FlowFixMe\n                    if (err.stack) {\n                        // $FlowFixMe\n                        err.stack = `Remote call to ${ name }()\\n\\n${ err.stack }`;\n                    }\n\n                    throw err;\n                });\n            }).then(result => {\n                return { result, id, name };\n            });\n        });\n    });\n}\n\nexport type SerializedFunction = CustomSerializedType<typeof SERIALIZATION_TYPE.CROSS_DOMAIN_FUNCTION, {\n    id : string,\n    name : string\n}>;\n\nexport function serializeFunction<T>(destination : CrossDomainWindowType | ProxyWindow, domain : DomainMatcher, val : () => ZalgoPromise<T> | T, key : string, { on } : { on : OnType }) : SerializedFunction {\n    listenForFunctionCalls({ on });\n    \n    const id = val.__id__ || uniqueID();\n    destination = ProxyWindow.unwrap(destination);\n    const name = val.__name__ || val.name || key;\n\n    if (ProxyWindow.isProxyWindow(destination)) {\n        addMethod(id, val, name, destination, domain);\n\n        // $FlowFixMe\n        destination.awaitWindow().then(win => {\n            addMethod(id, val, name, win, domain);\n        });\n    } else {\n        addMethod(id, val, name, destination, domain);\n    }\n\n    return serializeType(SERIALIZATION_TYPE.CROSS_DOMAIN_FUNCTION, { id, name });\n}\n\nexport function deserializeFunction<T>(source : CrossDomainWindowType | ProxyWindow, origin : string, { id, name } : { id : string, name : string }, { send } : { send : SendType }) : (...args : $ReadOnlyArray<mixed>) => ZalgoPromise<T> {\n    const getDeserializedFunction = (opts? : Object = {}) => {\n        function crossDomainFunctionWrapper<X : mixed>() : ZalgoPromise<X> {\n            let originalStack;\n    \n            if (__DEBUG__) {\n                originalStack = (new Error(`Original call to ${ name }():`)).stack;\n            }\n    \n            return ProxyWindow.toProxyWindow(source, { send }).awaitWindow().then(win => {\n                const meth = lookupMethod(win, id);\n    \n                if (meth && meth.val !== crossDomainFunctionWrapper) {\n                    return meth.val.apply({ source: window, origin: getDomain() }, arguments);\n                } else {\n                    return send(win, MESSAGE_NAME.METHOD, { id, name, args: Array.prototype.slice.call(arguments) }, { domain: origin, fireAndForget: opts.fireAndForget })\n                        .then(res => {\n                            if (!opts.fireAndForget) {\n                                return res.data.result;\n                            }\n                        });\n                }\n    \n            }).catch(err => {\n                // $FlowFixMe\n                if (__DEBUG__ && originalStack && err.stack) {\n                    // $FlowFixMe\n                    err.stack = `${ err.stack }\\n\\n${ originalStack }`;\n                }\n                throw err;\n            });\n        }\n\n        crossDomainFunctionWrapper.__name__ = name;\n        crossDomainFunctionWrapper.__origin__ = origin;\n        crossDomainFunctionWrapper.__source__ = source;\n        crossDomainFunctionWrapper.__id__ = id;\n\n        crossDomainFunctionWrapper.origin = origin;\n\n        return crossDomainFunctionWrapper;\n    };\n\n    const crossDomainFunctionWrapper = getDeserializedFunction();\n    crossDomainFunctionWrapper.fireAndForget = getDeserializedFunction({ fireAndForget: true });\n\n    return crossDomainFunctionWrapper;\n}\n","/* @flow */\n\nimport { type CrossDomainWindowType, isWindow, type DomainMatcher } from 'cross-domain-utils/src';\nimport { TYPE, serialize, deserialize, type Thenable } from 'universal-serialize/src';\n\nimport { SERIALIZATION_TYPE } from '../conf';\nimport type { OnType, SendType } from '../types';\n\nimport { serializeFunction, deserializeFunction, type SerializedFunction } from './function';\nimport { serializePromise, deserializePromise, type SerializedPromise } from './promise';\nimport { serializeWindow, deserializeWindow, type SerializedWindow, ProxyWindow } from './window';\n\nexport function serializeMessage<T : mixed>(destination : CrossDomainWindowType | ProxyWindow, domain : DomainMatcher, obj : T, { on, send } : { on : OnType, send : SendType }) : string {\n    return serialize(obj, {\n        [ TYPE.PROMISE ]:  (val : Thenable, key : string) : SerializedPromise => serializePromise(destination, domain, val, key, { on, send }),\n        [ TYPE.FUNCTION ]: (val : Function, key : string) : SerializedFunction => serializeFunction(destination, domain, val, key, { on, send }),\n        [ TYPE.OBJECT ]:   (val : CrossDomainWindowType) : Object | SerializedWindow => {\n            return (isWindow(val) || ProxyWindow.isProxyWindow(val)) ? serializeWindow(destination, domain, val, { on, send }) : val;\n        }\n    });\n}\n\nexport function deserializeMessage<T : mixed>(source : CrossDomainWindowType | ProxyWindow, origin : string, message : string, { on, send } : { on : OnType, send : SendType }) : T {\n    return deserialize(message, {\n        [ SERIALIZATION_TYPE.CROSS_DOMAIN_ZALGO_PROMISE ]: (serializedPromise)  => deserializePromise(source, origin, serializedPromise),\n        [ SERIALIZATION_TYPE.CROSS_DOMAIN_FUNCTION ]:      (serializedFunction) => deserializeFunction(source, origin, serializedFunction, { on, send }),\n        [ SERIALIZATION_TYPE.CROSS_DOMAIN_WINDOW ]:        (serializedWindow)   => deserializeWindow(source, origin, serializedWindow, { on, send })\n    });\n}\n","/* @flow */\n\nimport { type CrossDomainWindowType, type DomainMatcher } from 'cross-domain-utils/src';\nimport { ZalgoPromise } from 'zalgo-promise/src';\nimport { serializeType, type CustomSerializedType, type Thenable } from 'universal-serialize/src';\n\nimport { SERIALIZATION_TYPE } from '../conf';\nimport type { OnType, SendType } from '../types';\n\nimport { serializeFunction, type SerializedFunction } from './function';\nimport { ProxyWindow } from './window';\n\nexport type SerializedPromise = CustomSerializedType<typeof SERIALIZATION_TYPE.CROSS_DOMAIN_ZALGO_PROMISE, {\n    then : SerializedFunction\n}>;\n\nexport function serializePromise(destination : CrossDomainWindowType | ProxyWindow, domain : DomainMatcher, val : Thenable, key : string, { on, send } : { on : OnType, send : SendType }) : SerializedPromise {\n    return serializeType(SERIALIZATION_TYPE.CROSS_DOMAIN_ZALGO_PROMISE, {\n        then: serializeFunction(destination, domain, (resolve, reject) => val.then(resolve, reject), key, { on, send })\n    });\n}\n\nexport function deserializePromise<T>(source : CrossDomainWindowType | ProxyWindow, origin : string, { then } : { then : Function }) : ZalgoPromise<T> {\n    return new ZalgoPromise(then);\n}\n","/* @flow */\n\nimport { isSameDomain, isSameTopWindow, isActuallySameDomain, getActualDomain,\n    getDomain, type CrossDomainWindowType, type DomainMatcher, PROTOCOL } from 'cross-domain-utils/src';\n\nimport { SEND_STRATEGY, WILDCARD } from '../../conf';\nimport { needsGlobalMessagingForBrowser } from '../../lib';\nimport { getGlobal } from '../../global';\nimport { sendBridgeMessage, needsBridgeForBrowser, isBridge } from '../../bridge';\n\nexport const SEND_MESSAGE_STRATEGIES = {};\n\nSEND_MESSAGE_STRATEGIES[SEND_STRATEGY.POST_MESSAGE] = (win : CrossDomainWindowType, serializedMessage : string, domain : DomainMatcher) => {\n\n    if (__TEST__) {\n        if (needsGlobalMessagingForBrowser() && isSameTopWindow(window, win) === false) {\n            return;\n        }\n    }\n\n    let domains;\n\n    if (Array.isArray(domain)) {\n        domains = domain;\n    } else if (typeof domain === 'string') {\n        domains = [ domain ];\n    } else {\n        domains = [ WILDCARD ];\n    }\n\n    domains = domains.map(dom => {\n\n        if (__TEST__) {\n            if (dom.indexOf(PROTOCOL.MOCK) === 0) {\n                if (window.location.protocol === PROTOCOL.FILE) {\n                    return WILDCARD;\n                }\n\n                if (!isActuallySameDomain(win)) {\n                    throw new Error(`Attempting to send messsage to mock domain ${ dom }, but window is actually cross-domain`);\n                }\n\n                // $FlowFixMe\n                return getActualDomain(win);\n\n            }\n        }\n        \n        if (dom.indexOf(PROTOCOL.FILE) === 0) {\n            return WILDCARD;\n        }\n\n        return dom;\n    });\n\n    domains.forEach(dom => {\n        win.postMessage(serializedMessage, dom);\n    });\n};\n\nif (__POST_ROBOT__.__IE_POPUP_SUPPORT__) {\n\n    SEND_MESSAGE_STRATEGIES[SEND_STRATEGY.BRIDGE] = (win : CrossDomainWindowType, serializedMessage : string, domain : string) => {\n\n        if (!needsBridgeForBrowser() && !isBridge()) {\n            return;\n        }\n\n        if (isSameDomain(win)) {\n            throw new Error(`Post message through bridge disabled between same domain windows`);\n        }\n\n        if (isSameTopWindow(window, win) !== false) {\n            throw new Error(`Can only use bridge to communicate between two different windows, not between frames`);\n        }\n\n        sendBridgeMessage(win, domain, serializedMessage);\n    };\n}\n\nif (__POST_ROBOT__.__IE_POPUP_SUPPORT__ || __POST_ROBOT__.__GLOBAL_MESSAGE_SUPPORT__) {\n    \n    SEND_MESSAGE_STRATEGIES[SEND_STRATEGY.GLOBAL] = (win : CrossDomainWindowType, serializedMessage : string) => {\n\n        if (!needsGlobalMessagingForBrowser()) {\n            return;\n        }\n\n        if (!isSameDomain(win)) {\n            throw new Error(`Post message through global disabled between different domain windows`);\n        }\n\n        if (isSameTopWindow(window, win) !== false) {\n            throw new Error(`Can only use global to communicate between two different windows, not between frames`);\n        }\n\n        // $FlowFixMe\n        const foreignGlobal = getGlobal(win);\n\n        if (!foreignGlobal) {\n            throw new Error(`Can not find postRobot global on foreign window`);\n        }\n\n        foreignGlobal.receiveMessage({\n            source: window,\n            origin: getDomain(),\n            data:   serializedMessage\n        });\n    };\n}\n","/* @flow */\n\nimport { isWindowClosed, getDomain, type CrossDomainWindowType, type DomainMatcher } from 'cross-domain-utils/src';\nimport { uniqueID, stringifyError } from 'belter/src';\n\nimport { serializeMessage } from '../../serialize';\nimport type { Message } from '../types';\nimport type { OnType, SendType } from '../../types';\n\nimport { SEND_MESSAGE_STRATEGIES } from './strategies';\n\nexport function sendMessage(win : CrossDomainWindowType, domain : DomainMatcher, message : Message, { on, send } : { on : OnType, send : SendType }) {\n    if (isWindowClosed(win)) {\n        throw new Error('Window is closed');\n    }\n    \n    const serializedMessage = serializeMessage(win, domain, {\n        [ __POST_ROBOT__.__GLOBAL_KEY__ ]: {\n            id:     uniqueID(),\n            origin: getDomain(window),\n            ...message\n        }\n    }, { on, send });\n\n    const strategies = Object.keys(SEND_MESSAGE_STRATEGIES);\n    const errors = [];\n\n    for (const strategyName of strategies) {\n        try {\n            SEND_MESSAGE_STRATEGIES[strategyName](win, serializedMessage, domain);\n        } catch (err) {\n            errors.push(err);\n        }\n    }\n\n    if (errors.length === strategies.length) {\n        throw new Error(`All post-robot messaging strategies failed:\\n\\n${ errors.map(stringifyError).join('\\n\\n') }`);\n    }\n}\n","/* @flow */\n\nimport { getUserAgent } from 'cross-domain-utils/src';\n\nexport function needsGlobalMessagingForBrowser() : boolean {\n\n    if (getUserAgent(window).match(/MSIE|rv:11|trident|edge\\/12|edge\\/13/i)) {\n        return true;\n    }\n\n    return false;\n}\n","/* @flow */\n\nimport { type ZalgoPromise } from 'zalgo-promise/src';\nimport { matchDomain, type CrossDomainWindowType, type DomainMatcher } from 'cross-domain-utils/src';\nimport { isRegex, getOrSet } from 'belter/src';\n\nimport { getWildcard, type WildCard, globalStore, windowStore } from '../global';\nimport { WILDCARD } from '../conf';\n\nexport function resetListeners() {\n    const responseListeners = globalStore('responseListeners');\n    const erroredResponseListeners = globalStore('erroredResponseListeners');\n    responseListeners.reset();\n    erroredResponseListeners.reset();\n}\n\nconst __DOMAIN_REGEX__ = '__domain_regex__';\n\nexport type RequestListenerType = {|\n    handler : ({ source : CrossDomainWindowType, origin : string, data : mixed }) => (mixed | ZalgoPromise<mixed>),\n    handleError : (err : mixed) => void,\n    window : ?CrossDomainWindowType,\n    name : string,\n    domain : DomainMatcher\n|};\n\nexport type ResponseListenerType = {|\n    name : string,\n    win : CrossDomainWindowType,\n    domain : DomainMatcher,\n    promise : ZalgoPromise<*>,\n    ack? : ?boolean\n|};\n\nexport function addResponseListener(hash : string, listener : ResponseListenerType) {\n    const responseListeners = globalStore('responseListeners');\n    responseListeners.set(hash, listener);\n}\n\nexport function getResponseListener(hash : string) : ?ResponseListenerType {\n    const responseListeners = globalStore('responseListeners');\n    return responseListeners.get(hash);\n}\n\nexport function deleteResponseListener(hash : string) {\n    const responseListeners = globalStore('responseListeners');\n    responseListeners.del(hash);\n}\n\nexport function markResponseListenerErrored(hash : string) {\n    const erroredResponseListeners = globalStore('erroredResponseListeners');\n    erroredResponseListeners.set(hash, true);\n}\n\nexport function isResponseListenerErrored(hash : string) : boolean {\n    const erroredResponseListeners = globalStore('erroredResponseListeners');\n    return erroredResponseListeners.has(hash);\n}\n\nexport function getRequestListener({ name, win, domain } : { name : string, win : ?(CrossDomainWindowType | WildCard), domain : ?(string | RegExp) }) : ?RequestListenerType {\n    const requestListeners = windowStore('requestListeners');\n\n    if (win === WILDCARD) {\n        win = null;\n    }\n\n    if (domain === WILDCARD) {\n        domain = null;\n    }\n\n    if (!name) {\n        throw new Error(`Name required to get request listener`);\n    }\n\n    for (const winQualifier of [ win, getWildcard() ]) {\n        if (!winQualifier) {\n            continue;\n        }\n\n        const nameListeners = requestListeners.get(winQualifier);\n\n        if (!nameListeners) {\n            continue;\n        }\n\n        const domainListeners = nameListeners[name];\n\n        if (!domainListeners) {\n            continue;\n        }\n\n        if (domain && typeof domain === 'string') {\n            if (domainListeners[domain]) {\n                return domainListeners[domain];\n            }\n\n            if (domainListeners[__DOMAIN_REGEX__]) {\n                for (const { regex, listener } of domainListeners[__DOMAIN_REGEX__]) {\n                    if (matchDomain(regex, domain)) {\n                        return listener;\n                    }\n                }\n            }\n        }\n\n        if (domainListeners[WILDCARD]) {\n            return domainListeners[WILDCARD];\n        }\n    }\n}\n\nexport function addRequestListener({ name, win, domain } : { name : string, win : ?(CrossDomainWindowType | WildCard), domain : ?DomainMatcher }, listener : RequestListenerType) : { cancel : () => void } {\n    const requestListeners = windowStore('requestListeners');\n\n    if (!name || typeof name !== 'string') {\n        throw new Error(`Name required to add request listener`);\n    }\n\n    if (Array.isArray(win)) {\n        const listenersCollection = [];\n\n        for (const item of win) {\n            listenersCollection.push(addRequestListener({ name, domain, win: item }, listener));\n        }\n\n        return {\n            cancel() {\n                for (const cancelListener of listenersCollection) {\n                    cancelListener.cancel();\n                }\n            }\n        };\n    }\n\n    if (Array.isArray(domain)) {\n        const listenersCollection = [];\n\n        for (const item of domain) {\n            listenersCollection.push(addRequestListener({ name, win, domain: item }, listener));\n        }\n\n        return {\n            cancel() {\n                for (const cancelListener of listenersCollection) {\n                    cancelListener.cancel();\n                }\n            }\n        };\n    }\n\n    const existingListener = getRequestListener({ name, win, domain });\n\n    if (!win || win === WILDCARD) {\n        win = getWildcard();\n    }\n\n    domain = domain || WILDCARD;\n\n    if (existingListener) {\n        if (win && domain) {\n            throw new Error(`Request listener already exists for ${ name } on domain ${ domain.toString() } for ${ win === getWildcard() ? 'wildcard' : 'specified' } window`);\n        } else if (win) {\n            throw new Error(`Request listener already exists for ${ name } for ${ win === getWildcard() ? 'wildcard' : 'specified' } window`);\n        } else if (domain) {\n            throw new Error(`Request listener already exists for ${ name } on domain ${ domain.toString() }`);\n        } else {\n            throw new Error(`Request listener already exists for ${ name }`);\n        }\n    }\n\n    const nameListeners = requestListeners.getOrSet(win, () => ({}));\n    // $FlowFixMe\n    const domainListeners = getOrSet(nameListeners, name, () => ({}));\n\n    const strDomain = domain.toString();\n\n    let regexListeners;\n    let regexListener;\n\n    if (isRegex(domain)) {\n        regexListeners = getOrSet(domainListeners, __DOMAIN_REGEX__, () => []);\n        regexListener = { regex: domain, listener };\n        regexListeners.push(regexListener);\n    } else {\n        domainListeners[strDomain] = listener;\n    }\n\n    return {\n        cancel() {\n            delete domainListeners[strDomain];\n\n            if (regexListener) {\n                regexListeners.splice(regexListeners.indexOf(regexListener, 1));\n\n                if (!regexListeners.length) {\n                    delete domainListeners[__DOMAIN_REGEX__];\n                }\n            }\n\n            if (!Object.keys(domainListeners).length) {\n                // $FlowFixMe\n                delete nameListeners[name];\n            }\n\n            // $FlowFixMe\n            if (win && !Object.keys(nameListeners).length) {\n                requestListeners.del(win);\n            }\n        }\n    };\n}\n","/* @flow */\n\nimport { ZalgoPromise } from 'zalgo-promise/src';\nimport { isWindowClosed, matchDomain, stringifyDomainPattern, type CrossDomainWindowType } from 'cross-domain-utils/src';\nimport { noop } from 'belter/src';\n\nimport { MESSAGE_TYPE, MESSAGE_ACK, MESSAGE_NAME } from '../../conf';\nimport { sendMessage } from '../send';\nimport { getRequestListener, getResponseListener, deleteResponseListener, isResponseListenerErrored } from '../listeners';\nimport type { RequestMessage, AckResponseMessage, SuccessResponseMessage, ErrorResponseMessage } from '../types';\nimport type { OnType, SendType } from '../../types';\n\nexport const RECEIVE_MESSAGE_TYPES = {\n\n    [ MESSAGE_TYPE.REQUEST ](source : CrossDomainWindowType, origin : string, message : RequestMessage, { on, send } : { on : OnType, send : SendType }) : ZalgoPromise<void> {\n\n        const options = getRequestListener({ name: message.name, win: source, domain: origin });\n\n        const logName = (message.name === MESSAGE_NAME.METHOD && message.data && typeof message.data.name === 'string') ? `${ message.data.name }()` : message.name;\n\n        if (__DEBUG__) {\n            // eslint-disable-next-line no-console\n            console.info('receive::req', logName, origin, '\\n\\n', message.data);\n        }\n\n        function sendResponse(type : $Values<typeof MESSAGE_TYPE>, ack? : $Values<typeof MESSAGE_ACK>, response = {}) {\n\n            if (message.fireAndForget || isWindowClosed(source)) {\n                return;\n            }\n\n            if (__DEBUG__ && type !== MESSAGE_TYPE.ACK) {\n                if (ack === MESSAGE_ACK.SUCCESS) {\n                    // $FlowFixMe\n                    console.info('respond::res', logName, origin, '\\n\\n', response.data);  // eslint-disable-line no-console\n                } else if (ack === MESSAGE_ACK.ERROR) {\n                    // $FlowFixMe\n                    console.error('respond::err', logName, origin, '\\n\\n', response.error); // eslint-disable-line no-console\n                }\n            }\n\n            // $FlowFixMe\n            sendMessage(source, origin, {\n                type,\n                ack,\n                hash:   message.hash,\n                name:   message.name,\n                ...response\n            }, { on, send });\n        }\n\n        return ZalgoPromise.all([\n\n            sendResponse(MESSAGE_TYPE.ACK),\n\n            ZalgoPromise.try(() => {\n\n                if (!options) {\n                    throw new Error(`No handler found for post message: ${ message.name } from ${ origin } in ${ window.location.protocol }//${ window.location.host }${ window.location.pathname }`);\n                }\n\n                if (!matchDomain(options.domain, origin)) {\n                    throw new Error(`Request origin ${ origin } does not match domain ${ options.domain.toString() }`);\n                }\n\n                const data = message.data;\n\n                return options.handler({ source, origin, data });\n\n            }).then(data => {\n                return sendResponse(MESSAGE_TYPE.RESPONSE, MESSAGE_ACK.SUCCESS, { data });\n\n            }, error => {\n                return sendResponse(MESSAGE_TYPE.RESPONSE, MESSAGE_ACK.ERROR, { error });\n            })\n\n        ]).then(noop).catch(err => {\n            if (options && options.handleError) {\n                return options.handleError(err);\n            } else {\n                throw err;\n            }\n        });\n    },\n\n    [ MESSAGE_TYPE.ACK ](source : CrossDomainWindowType, origin : string, message : AckResponseMessage) {\n\n        if (isResponseListenerErrored(message.hash)) {\n            return;\n        }\n\n        const options = getResponseListener(message.hash);\n\n        if (!options) {\n            throw new Error(`No handler found for post message ack for message: ${ message.name } from ${ origin } in ${ window.location.protocol }//${ window.location.host }${ window.location.pathname }`);\n        }\n\n        if (!matchDomain(options.domain, origin)) {\n            throw new Error(`Ack origin ${ origin } does not match domain ${ options.domain.toString() }`);\n        }\n\n        if (source !== options.win) {\n            throw new Error(`Ack source does not match registered window`);\n        }\n\n        options.ack = true;\n    },\n\n    [ MESSAGE_TYPE.RESPONSE ](source : CrossDomainWindowType, origin : string, message : SuccessResponseMessage | ErrorResponseMessage) : void | ZalgoPromise<void> {\n\n        if (isResponseListenerErrored(message.hash)) {\n            return;\n        }\n\n        const options = getResponseListener(message.hash);\n\n        if (!options) {\n            throw new Error(`No handler found for post message response for message: ${ message.name } from ${ origin } in ${ window.location.protocol }//${ window.location.host }${ window.location.pathname }`);\n        }\n\n        if (!matchDomain(options.domain, origin)) {\n            throw new Error(`Response origin ${ origin } does not match domain ${ stringifyDomainPattern(options.domain) }`);\n        }\n\n        if (source !== options.win) {\n            throw new Error(`Response source does not match registered window`);\n        }\n\n        deleteResponseListener(message.hash);\n\n        const logName = (message.name === MESSAGE_NAME.METHOD && message.data && typeof message.data.name === 'string') ? `${ message.data.name }()` : message.name;\n\n        if (message.ack === MESSAGE_ACK.ERROR) {\n            if (__DEBUG__) {\n                console.error('receive::err', logName, origin, '\\n\\n', message.error); // eslint-disable-line no-console\n            }\n\n            options.promise.reject(message.error);\n\n        } else if (message.ack === MESSAGE_ACK.SUCCESS) {\n            if (__DEBUG__) {\n                console.info('receive::res', logName, origin, '\\n\\n', message.data); // eslint-disable-line no-console\n            }\n\n            options.promise.resolve({ source, origin, data: message.data });\n        }\n    }\n};\n","/* @flow */\n\nimport { isWindowClosed, type CrossDomainWindowType, getDomain, isSameTopWindow, PROTOCOL  } from 'cross-domain-utils/src';\nimport { addEventListener, noop } from 'belter/src';\n\nimport { markWindowKnown, needsGlobalMessagingForBrowser } from '../../lib';\nimport { deserializeMessage } from '../../serialize';\nimport { getGlobal, globalStore } from '../../global';\nimport type { OnType, SendType, MessageEvent, CancelableType } from '../../types';\n\nimport { RECEIVE_MESSAGE_TYPES } from './types';\n\nfunction parseMessage(message : string, source : CrossDomainWindowType, origin : string, { on, send } : { on : OnType, send : SendType }) : ?Object {\n    let parsedMessage;\n\n    try {\n        parsedMessage = deserializeMessage(source, origin, message, { on, send });\n    } catch (err) {\n        return;\n    }\n\n    if (!parsedMessage) {\n        return;\n    }\n\n    if (typeof parsedMessage !== 'object' || parsedMessage === null) {\n        return;\n    }\n\n    parsedMessage = parsedMessage[__POST_ROBOT__.__GLOBAL_KEY__];\n\n    if (!parsedMessage || typeof parsedMessage !== 'object' || parsedMessage === null) {\n        return;\n    }\n\n    if (!parsedMessage.type || typeof parsedMessage.type !== 'string') {\n        return;\n    }\n\n    if (!RECEIVE_MESSAGE_TYPES[parsedMessage.type]) {\n        return;\n    }\n\n    return parsedMessage;\n}\n\nexport function receiveMessage(event : MessageEvent, { on, send } : { on : OnType, send : SendType }) {\n    const receivedMessages = globalStore('receivedMessages');\n\n    if (!window || window.closed) {\n        throw new Error(`Message recieved in closed window`);\n    }\n\n    try {\n        if (!event.source) {\n            return;\n        }\n    } catch (err) {\n        return;\n    }\n\n    let { source, origin, data } = event;\n\n    if (__TEST__) {\n        // $FlowFixMe\n        origin = getDomain(source);\n    }\n\n    const message = parseMessage(data, source, origin, { on, send });\n\n    if (!message) {\n        return;\n    }\n\n    markWindowKnown(source);\n\n    if (receivedMessages.has(message.id)) {\n        return;\n    }\n\n    receivedMessages.set(message.id, true);\n\n    if (isWindowClosed(source) && !message.fireAndForget) {\n        return;\n    }\n\n    if (message.origin.indexOf(PROTOCOL.FILE) === 0) {\n        origin = message.origin;\n    }\n\n    RECEIVE_MESSAGE_TYPES[message.type](source, origin, message, { on, send });\n}\n\nexport function setupGlobalReceiveMessage({ on, send } : { on : OnType, send : SendType }) {\n    const global = getGlobal();\n    global.receiveMessage = global.receiveMessage || (message => receiveMessage(message, { on, send }));\n}\n\ntype ListenerEvent = {|\n    source : CrossDomainWindowType,\n    origin : string,\n    data : string,\n    sourceElement : CrossDomainWindowType,\n    originalEvent? : { origin : string }\n|};\n\nexport function messageListener(event : ListenerEvent, { on, send } : { on : OnType, send : SendType }) {\n\n    try {\n        noop(event.source);\n    } catch (err) {\n        return;\n    }\n\n    const source = event.source || event.sourceElement;\n    let origin = event.origin || (event.originalEvent && event.originalEvent.origin);\n    const data = event.data;\n\n    if (origin === 'null') {\n        origin = `${ PROTOCOL.FILE }//`;\n    }\n\n    if (!source) {\n        return;\n    }\n\n    if (!origin) {\n        throw new Error(`Post message did not have origin domain`);\n    }\n\n    if (__TEST__) {\n        if (needsGlobalMessagingForBrowser() && isSameTopWindow(source, window) === false) {\n            return;\n        }\n    }\n\n    receiveMessage({ source, origin, data }, { on, send });\n}\n\nexport function listenForMessages({ on, send } : { on : OnType, send : SendType }) : CancelableType {\n    return globalStore().getOrSet('postMessageListeners', () => {\n        // $FlowFixMe\n        return addEventListener(window, 'message', event => {\n            // $FlowFixMe\n            messageListener(event, { on, send });\n        });\n    });\n}\n","/* @flow */\n\nimport { ZalgoPromise } from 'zalgo-promise/src';\n\nimport { addRequestListener, type RequestListenerType } from '../drivers';\nimport { WILDCARD } from '../conf';\nimport type { ServerOptionsType, HandlerType, CancelableType } from '../types';\n\nexport function on(name : string, options : ServerOptionsType | HandlerType, handler : ?HandlerType) : CancelableType {\n\n    if (!name) {\n        throw new Error('Expected name');\n    }\n\n    if (typeof options === 'function') {\n        handler = options;\n        // $FlowFixMe\n        options = {};\n    }\n\n    if (!handler) {\n        throw new Error('Expected handler');\n    }\n\n    options = options || {};\n    options.name = name;\n    options.handler = handler || options.handler;\n\n    const win = options.window;\n    const domain = options.domain;\n\n    const listenerOptions : RequestListenerType = {\n        handler:     options.handler,\n        handleError: options.errorHandler || (err => {\n            throw err;\n        }),\n        window: win,\n        domain: domain || WILDCARD,\n        name\n    };\n\n    const requestListener = addRequestListener({ name, win, domain }, listenerOptions);\n\n    return {\n        cancel() {\n            requestListener.cancel();\n        }\n    };\n}\n\nexport function once(name : string, options? : ServerOptionsType | HandlerType, handler? : HandlerType) : ZalgoPromise<{ source : mixed, origin : string, data : Object }> {\n    \n    // $FlowFixMe\n    options = options || {};\n    if (typeof options === 'function') {\n        handler = options;\n        // $FlowFixMe\n        options = {};\n    }\n\n    const promise = new ZalgoPromise();\n    let listener; // eslint-disable-line prefer-const\n\n    options.errorHandler = (err) => {\n        listener.cancel();\n        promise.reject(err);\n    };\n\n    listener = on(name, options, event => {\n        listener.cancel();\n        promise.resolve(event);\n        if (handler) {\n            return handler(event);\n        }\n    });\n\n    promise.cancel = listener.cancel;\n    return promise;\n}\n","/* @flow */\n\nimport { ZalgoPromise } from 'zalgo-promise/src';\nimport { isAncestor, isWindowClosed, getDomain, matchDomain, type CrossDomainWindowType } from 'cross-domain-utils/src';\nimport { uniqueID, isRegex, noop } from 'belter/src';\n\n\nimport { CHILD_WINDOW_TIMEOUT, MESSAGE_TYPE, WILDCARD, MESSAGE_NAME, ACK_TIMEOUT, RES_TIMEOUT, ACK_TIMEOUT_KNOWN } from '../conf';\nimport { sendMessage, addResponseListener, deleteResponseListener, markResponseListenerErrored, type ResponseListenerType } from '../drivers';\nimport { awaitWindowHello, sayHello, isWindowKnown } from '../lib';\nimport { windowStore } from '../global';\nimport type { RequestOptionsType, ResponseMessageEvent } from '../types';\n\nimport { on } from './on';\n\nexport function send(win : CrossDomainWindowType, name : string, data : ?Object, options? : RequestOptionsType) : ZalgoPromise<ResponseMessageEvent> {\n    \n    // $FlowFixMe\n    options = options || {};\n    let domain = options.domain || WILDCARD;\n    const responseTimeout = options.timeout || RES_TIMEOUT;\n    const childTimeout = options.timeout || CHILD_WINDOW_TIMEOUT;\n    const fireAndForget = options.fireAndForget || false;\n\n    const prom = ZalgoPromise.try(() => {\n        if (!name) {\n            throw new Error('Expected name');\n        }\n\n        if (domain) {\n            if (typeof domain !== 'string' && !Array.isArray(domain) && !isRegex(domain)) {\n                throw new TypeError(`Expected domain to be a string, array, or regex`);\n            }\n        }\n\n        if (isWindowClosed(win)) {\n            throw new Error('Target window is closed');\n        }\n\n        const reqPromises = windowStore('requestPromises').getOrSet(win, () => []);\n\n        // $FlowFixMe\n        const requestPromise = ZalgoPromise.try(() => {\n\n            if (isAncestor(window, win)) {\n                return awaitWindowHello(win, childTimeout);\n            } else if (isRegex(domain)) {\n                return sayHello(win, { send });\n            }\n\n        // $FlowFixMe\n        }).then(({ domain: origin } = {}) => {\n\n            if (isRegex(domain)) {\n                if (!matchDomain(domain, origin)) {\n                    // $FlowFixMe\n                    throw new Error(`Remote window domain ${ origin } does not match regex: ${ domain.source }`);\n                }\n                domain = origin;\n            }\n\n            const logName = (name === MESSAGE_NAME.METHOD && data && typeof data.name === 'string') ? `${ data.name }()` : name;\n\n            if (__DEBUG__) {\n                console.info('send::req', logName, domain, '\\n\\n', data); // eslint-disable-line no-console\n            }\n\n            let hasResult = false;\n\n            const promise = new ZalgoPromise();\n            promise.finally(() => {\n                hasResult = true;\n                reqPromises.splice(reqPromises.indexOf(requestPromise, 1));\n            }).catch(noop);\n\n            const hash = `${ name }_${ uniqueID() }`;\n\n            sendMessage(win, domain, {\n                type: MESSAGE_TYPE.REQUEST,\n                hash,\n                name,\n                data,\n                fireAndForget\n            }, { on, send });\n\n            if (fireAndForget) {\n                return promise.resolve();\n            }\n\n            promise.catch(() => {\n                markResponseListenerErrored(hash);\n                deleteResponseListener(hash);\n            });\n\n            const responseListener : ResponseListenerType = {\n                name,\n                win,\n                domain,\n                promise\n            };\n\n            addResponseListener(hash, responseListener);\n\n            const totalAckTimeout = isWindowKnown(win) ? ACK_TIMEOUT_KNOWN : ACK_TIMEOUT;\n            const totalResTimeout = responseTimeout;\n\n            let ackTimeout = totalAckTimeout;\n            let resTimeout = totalResTimeout;\n\n            let cycleTime = 100;\n\n            const cycle = () => {\n                if (hasResult) {\n                    return;\n                }\n\n                if (isWindowClosed(win)) {\n                    if (!responseListener.ack) {\n                        return promise.reject(new Error(`Window closed for ${ name } before ack`));\n                    } else {\n                        return promise.reject(new Error(`Window closed for ${ name } before response`));\n                    }\n                }\n\n                ackTimeout = Math.max(ackTimeout - cycleTime, 0);\n                if (resTimeout !== -1) {\n                    resTimeout = Math.max(resTimeout - cycleTime, 0);\n                }\n\n                const hasAck = responseListener.ack;\n\n                if (hasAck) {\n                    if (resTimeout === -1) {\n                        return;\n                    }\n\n                    cycleTime = Math.min(resTimeout, 2000);\n\n                } else if (ackTimeout === 0) {\n                    return promise.reject(new Error(`No ack for postMessage ${ logName } in ${ getDomain() } in ${ totalAckTimeout }ms`));\n\n                } else if (resTimeout === 0) {\n                    return promise.reject(new Error(`No response for postMessage ${ logName } in ${ getDomain() } in ${ totalResTimeout }ms`));\n                }\n\n                setTimeout(cycle, cycleTime);\n            };\n\n            setTimeout(cycle, cycleTime);\n\n            return promise;\n        });\n\n        reqPromises.push(requestPromise);\n        return requestPromise;\n    });\n\n    return prom;\n}\n","/* @flow */\n\nimport type { CrossDomainWindowType, DomainMatcher } from 'cross-domain-utils/src';\n\nimport { initHello } from './lib';\nimport { listenForMessages, receiveMessage, setupGlobalReceiveMessage } from './drivers';\nimport { getGlobal } from './global';\nimport { on, send } from './public';\nimport { setupBridge } from './bridge';\nimport { serializeMessage as internalSerializeMessage, deserializeMessage as internalDeserializeMessage, ProxyWindow } from './serialize';\n\nexport function serializeMessage<T>(destination : CrossDomainWindowType | ProxyWindow, domain : DomainMatcher, obj : T) : string {\n    return internalSerializeMessage(destination, domain, obj, { on, send });\n}\n\nexport function deserializeMessage<T : mixed>(source : CrossDomainWindowType | ProxyWindow, origin : string, message : string) : T {\n    return internalDeserializeMessage(source, origin, message, { on, send });\n}\n\nexport function toProxyWindow(win : CrossDomainWindowType | ProxyWindow) : ProxyWindow {\n    return ProxyWindow.toProxyWindow(win, { send });\n}\n\nexport function setup() {\n    if (!getGlobal().initialized) {\n        getGlobal().initialized = true;\n    \n        listenForMessages({ on, send });\n    \n        if (__POST_ROBOT__.__IE_POPUP_SUPPORT__) {\n            setupBridge({ on, send, receiveMessage });\n        }\n\n        initHello({ on, send });\n        setupGlobalReceiveMessage({ on, send });\n    }\n}\n","/* @flow */\n\nimport { isSameDomain, type CrossDomainWindowType } from 'cross-domain-utils/src';\n\nexport function globalFor(win : CrossDomainWindowType) : Object {\n\n    if (!isSameDomain(win)) {\n        throw new Error(`Can not get global for window on different domain`);\n    }\n\n    if (!win[__ZOID__.__GLOBAL_KEY__]) {\n        win[__ZOID__.__GLOBAL_KEY__] = {};\n    }\n\n    return win[__ZOID__.__GLOBAL_KEY__];\n}\n","/* @flow */\n\nimport { ZalgoPromise } from 'zalgo-promise/src';\nimport { toCSS } from 'belter/src';\n\nexport type ProxyElement<T : HTMLElement> = {|\n    resize : ({ width : ?number, height : ?number }) => void,\n    getElement : () => ZalgoPromise<T>\n|};\n\nexport function getProxyElement<T : HTMLElement>(element : T) : ProxyElement<T> {\n    return {\n        resize({ width, height } : { width : ?number, height : ?number }) {\n            if (typeof width === 'number') {\n                element.style.width = toCSS(width);\n            }\n    \n            if (typeof height === 'number') {\n                element.style.height = toCSS(height);\n            }\n        },\n\n        getElement() : ZalgoPromise<T> {\n            return ZalgoPromise.try(() => {\n                if (this.source && this.source !== window) {\n                    throw new Error(`Can not call getElement from a remote window`);\n                }\n    \n                return element;\n            });\n        }\n    };\n}\n","/* @flow */\n\nimport { setup } from './setup';\nimport { setupBridge, openBridge, linkWindow, linkUrl, isBridge, needsBridge, needsBridgeForBrowser, hasBridge,\n    needsBridgeForWin, needsBridgeForDomain, destroyBridges } from './bridge';\n\nexport { ZalgoPromise as Promise } from 'zalgo-promise/src';\n\nexport * from './types';\nexport { ProxyWindow } from './serialize';\nexport { setup, serializeMessage, deserializeMessage, toProxyWindow } from './setup';\nexport { on, once, send } from './public';\nexport { markWindowKnown } from './lib';\nexport { cleanUpWindow } from './clean';\nexport let bridge;\n\nif (__POST_ROBOT__.__IE_POPUP_SUPPORT__) {\n    bridge = { setupBridge, openBridge, linkWindow, linkUrl, isBridge, needsBridge,\n        needsBridgeForBrowser, hasBridge, needsBridgeForWin, needsBridgeForDomain, destroyBridges };\n}\n\nif (__POST_ROBOT__.__AUTO_SETUP__) {\n    setup();\n}\n","/* @flow */\n\nimport { WINDOW_TYPE } from 'cross-domain-utils/src';\n\nexport const ZOID = `zoid`;\n\nexport const POST_MESSAGE = {\n    DELEGATE:       `${ ZOID }_delegate`,\n    ALLOW_DELEGATE: `${ ZOID }_allow_delegate`\n};\n\nexport const PROP_TYPE = {\n    STRING:   `string`,\n    OBJECT:   `object`,\n    FUNCTION: `function`,\n    BOOLEAN:  `boolean`,\n    NUMBER:   `number`,\n    ARRAY:    `array`\n};\n\nexport const INITIAL_PROPS = {\n    RAW: 'raw',\n    UID: 'uid'\n};\n\nexport const WINDOW_REFERENCES = {\n    OPENER: `opener`,\n    TOP:    `top`,\n    PARENT: `parent`,\n    GLOBAL: `global`\n};\n\nexport const PROP_SERIALIZATION = {\n    JSON:   ('json' : 'json'),\n    DOTIFY: ('dotify' : 'dotify'),\n    BASE64: ('base64' : 'base64')\n};\n\nexport const CONTEXT = WINDOW_TYPE;\n\nexport const WILDCARD = '*';\n\nexport const DEFAULT_DIMENSIONS = {\n    WIDTH:  '300px',\n    HEIGHT: '150px'\n};\n\nexport const EVENT = {\n    RENDER:   'zoid-render',\n    RENDERED: 'zoid-rendered',\n    DISPLAY:  'zoid-display',\n    ERROR:    'zoid-error',\n    CLOSE:    'zoid-close',\n    PROPS:    'zoid-props'\n};\n","/* @flow */\n\nimport { getDomain, isSameDomain, type CrossDomainWindowType } from 'cross-domain-utils/src';\n\nimport type { Component } from '../component';\nimport type { PropsType, MixedPropDefinitionType } from '../component/props';\n\nimport type { ChildHelpers } from './index';\n\nexport function normalizeChildProp<T, P>(component : Component<P>, props : (PropsType<P>), key : string, value : T, helpers : ChildHelpers<P>) : ?T  {\n\n    // $FlowFixMe\n    const prop : MixedPropDefinitionType<P> = component.getPropDefinition(key);\n\n    if (!prop) {\n        return value;\n    }\n\n    if (typeof prop.childDecorate === 'function') {\n        return prop.childDecorate({ value, ...helpers });\n    }\n\n    return value;\n}\n\n// eslint-disable-next-line max-params\nexport function normalizeChildProps<P>(parentComponentWindow : CrossDomainWindowType, component : Component<P>, props : (PropsType<P>), origin : string, helpers : ChildHelpers<P>, isUpdate : boolean = false) : (PropsType<P>) {\n\n    const result = {};\n\n    // $FlowFixMe\n    for (const key of Object.keys(props)) {\n        const prop = component.getPropDefinition(key);\n\n        if (prop && prop.sameDomain && (origin !== getDomain(window) || !isSameDomain(parentComponentWindow))) {\n            continue;\n        }\n\n        const value = normalizeChildProp(component, props, key, props[key], helpers);\n\n        result[key] = value;\n        if (prop && prop.alias && !result[prop.alias]) {\n            result[prop.alias] = value;\n        }\n    }\n\n    if (!isUpdate) {\n        for (const key of component.getPropNames()) {\n            if (!props.hasOwnProperty(key)) {\n                result[key] = normalizeChildProp(component, props, key, props[key], helpers);\n            }\n        }\n    }\n\n    // $FlowFixMe\n    return result;\n}\n","/* @flow */\n\nimport { inlineMemoize, stringifyError, base64decode } from 'belter/src';\n\nimport { ZOID } from '../constants';\nimport type { ChildPayload } from '../parent';\n\nfunction parseChildWindowName(windowName : string) : ChildPayload {\n    return inlineMemoize(parseChildWindowName, () => {\n        if (!windowName) {\n            throw new Error(`No window name`);\n        }\n    \n        const [ , zoidcomp, name, encodedPayload ] = windowName.split('__');\n    \n        if (zoidcomp !== ZOID) {\n            throw new Error(`Window not rendered by zoid - got ${ zoidcomp }`);\n        }\n    \n        if (!name) {\n            throw new Error(`Expected component name`);\n        }\n    \n        if (!encodedPayload) {\n            throw new Error(`Expected encoded payload`);\n        }\n    \n        try {\n            return JSON.parse(base64decode(encodedPayload));\n        } catch (err) {\n            throw new Error(`Can not decode window name payload: ${ encodedPayload }: ${ stringifyError(err) }`);\n        }\n    }, [ windowName ]);\n}\n\nexport function getChildPayload() : ?ChildPayload {\n    try {\n        return parseChildWindowName(window.name);\n    } catch (err) {\n        // pass\n    }\n}\n","/* @flow */\n/* eslint max-lines: 0 */\n\nimport { isSameDomain, matchDomain, getDomain, getOpener,\n    getNthParentFromTop, getAncestor, getAllFramesInWindow,\n    type CrossDomainWindowType, onCloseWindow } from 'cross-domain-utils/src';\nimport { markWindowKnown, deserializeMessage } from 'post-robot/src';\nimport { ZalgoPromise } from 'zalgo-promise/src';\nimport { extend, waitForDocumentBody, onResize, getElementSafe, assertExists } from 'belter/src';\n\nimport { globalFor } from '../lib';\nimport { CONTEXT, INITIAL_PROPS, WINDOW_REFERENCES } from '../constants';\nimport type { Component } from '../component';\nimport type { PropsType } from '../component/props';\nimport type { WindowRef, PropRef, ParentExportsType } from '../parent';\n\nimport { normalizeChildProps } from './props';\nimport { getChildPayload } from './window';\n\nexport * from './window';\n\nexport type ChildExportsType<P> = {|\n    updateProps : (props : (PropsType<P>)) => ZalgoPromise<void>,\n    close : () => ZalgoPromise<void>\n|};\n\nexport type ChildHelpers<P> = {|\n    close : () => ZalgoPromise<void>,\n    focus : () => ZalgoPromise<void>,\n    resize : ({ width : ?number, height : ?number }) => ZalgoPromise<void>,\n    onError : (mixed) => ZalgoPromise<void>,\n    onProps : ((PropsType<P>) => void) => void,\n    getParent : () => CrossDomainWindowType\n|};\n\n/*  Child Component\n    ---------------\n\n    This is the portion of code which runs inside the frame or popup window containing the component's implementation.\n\n    When the component author calls myComponent.attach(), it creates a new instance of ChildComponent, which is then\n    responsible for managing the state and messaging back up to the parent, and providing props for the component to\n    utilize.\n*/\n\nexport class ChildComponent<P> {\n\n    component : Component<P>\n    props : PropsType<P>\n    context : string\n    parent : ParentExportsType<P>\n    parentComponentWindow : CrossDomainWindowType\n\n    onPropHandlers : Array<(PropsType<P>) => void> // eslint-disable-line flowtype/no-mutable-array\n    autoResize : { width : boolean, height : boolean, element? : string }\n\n    constructor(component : Component<P>) {\n        ZalgoPromise.try(() => {\n            this.component = component;\n            this.onPropHandlers = [];\n            \n            const childPayload = getChildPayload();\n\n            if (!childPayload) {\n                throw new Error(`No child payload found`);\n            }\n\n            if (childPayload.version !== __ZOID__.__VERSION__) {\n                throw new Error(`Parent window has zoid version ${ childPayload.version }, child window has version ${ __ZOID__.__VERSION__ }`);\n            }\n\n            const { parent, domain, exports, context, props } = childPayload;\n\n            this.context = context;\n            this.parentComponentWindow = this.getParentComponentWindow(parent);\n            this.parent = deserializeMessage(this.parentComponentWindow, domain, exports);\n\n            this.checkParentDomain(domain);\n\n            const initialProps = this.getPropsByRef(this.parentComponentWindow, domain, props);\n            this.setProps(initialProps, domain);\n            markWindowKnown(this.parentComponentWindow);\n            \n            this.watchForClose();\n\n            return this.parent.init(this.buildExports());\n\n        }).then(() => {\n            return this.watchForResize();\n\n        }).catch(err => {\n            this.onError(err);\n        });\n    }\n\n    getHelpers() : ChildHelpers<P> {\n        return {\n            focus:         () => this.focus(),\n            close:         () => this.close(),\n            resize:        ({ width, height }) => this.resize({ width, height }),\n            onError:       (err) => this.onError(err),\n            onProps:       (handler) => this.onProps(handler),\n            getParent:     () => this.parentComponentWindow\n        };\n    }\n\n    checkParentDomain(domain : string) {\n        if (!matchDomain(this.component.allowedParentDomains, domain)) {\n            throw new Error(`Can not be rendered by domain: ${ domain }`);\n        }\n    }\n\n    onProps(handler : Function) {\n        this.onPropHandlers.push(handler);\n    }\n\n    getPropsByRef(parentComponentWindow : CrossDomainWindowType, domain : string, { type, value, uid } : PropRef) : (PropsType<P>) {\n        let props;\n\n        if (type === INITIAL_PROPS.RAW) {\n            props = value;\n        } else if (type === INITIAL_PROPS.UID) {\n            if (!isSameDomain(parentComponentWindow)) {\n                throw new Error(`Parent component window is on a different domain - expected ${ getDomain() } - can not retrieve props`);\n            }\n\n            const global = globalFor(parentComponentWindow);\n            props = assertExists('props', global && global.props[uid]);\n        }\n\n        if (!props) {\n            throw new Error(`Could not find props`);\n        }\n\n        return deserializeMessage(parentComponentWindow, domain, props);\n    }\n\n    getParentComponentWindow(ref : WindowRef) : CrossDomainWindowType {\n        const { type } = ref;\n    \n        if (type === WINDOW_REFERENCES.OPENER) {\n            return assertExists('opener', getOpener(window));\n    \n        } else if (type === WINDOW_REFERENCES.PARENT) {\n            // $FlowFixMe\n            const distance = ref.distance;\n            return assertExists('parent', getNthParentFromTop(window, distance));\n\n        } else if (type === WINDOW_REFERENCES.GLOBAL) {\n            // $FlowFixMe\n            const { uid } = ref;\n            const ancestor = getAncestor(window);\n\n            if (!ancestor) {\n                throw new Error(`Can not find ancestor window`);\n            }\n\n            for (const frame of getAllFramesInWindow(ancestor)) {\n                if (isSameDomain(frame)) {\n                    const global = globalFor(frame);\n\n                    if (global && global.windows && global.windows[uid]) {\n                        return global.windows[uid];\n                    }\n                }\n            }\n        }\n    \n        throw new Error(`Unable to find ${ type } parent component window`);\n    }\n\n    getProps() : PropsType<P> {\n        // $FlowFixMe\n        this.props = this.props || {};\n        return this.props;\n    }\n\n\n    setProps(props : PropsType<P>, origin : string, isUpdate : boolean = false) {\n        const helpers = this.getHelpers();\n        const existingProps = this.getProps();\n        const normalizedProps = normalizeChildProps(this.parentComponentWindow, this.component, props, origin, helpers, isUpdate);\n\n        extend(existingProps, normalizedProps);\n\n        for (const handler of this.onPropHandlers) {\n            handler.call(this, existingProps);\n        }\n    }\n\n    watchForClose() {\n        window.addEventListener('beforeunload', () => {\n            this.parent.checkClose.fireAndForget();\n        });\n\n        window.addEventListener('unload', () => {\n            this.parent.checkClose.fireAndForget();\n        });\n\n        onCloseWindow(this.parentComponentWindow, () => {\n            this.destroy();\n        });\n    }\n\n    getAutoResize() : { width : boolean, height : boolean, element : ?HTMLElement } {\n        let { width = false, height = false, element = 'body' } = this.autoResize || this.component.autoResize || {};\n        element = getElementSafe(element);\n        return { width, height, element };\n    }\n\n    watchForResize() : ?ZalgoPromise<void> {\n        return waitForDocumentBody().then(() => {\n            const { width, height, element } = this.getAutoResize();\n\n            if (!element || (!width && !height) || this.context === CONTEXT.POPUP) {\n                return;\n            }\n\n            onResize(element, ({ width: newWidth, height: newHeight }) => {\n                this.resize({\n                    width:  width ? newWidth : undefined,\n                    height: height ? newHeight : undefined\n                });\n            }, { width, height });\n        });\n    }\n\n    buildExports() : ChildExportsType<P> {\n\n        const self = this;\n\n        return {\n            updateProps(props : (PropsType<P>)) : ZalgoPromise<void> {\n                return ZalgoPromise.try(() => self.setProps(props, this.__origin__, true));\n            },\n\n            close() : ZalgoPromise<void> {\n                return ZalgoPromise.try(() => self.destroy());\n            }\n        };\n    }\n\n    resize({ width, height } : { width : ?number, height : ?number }) : ZalgoPromise<void> {\n        return this.parent.resize.fireAndForget({ width, height });\n    }\n\n    close() : ZalgoPromise<void> {\n        return this.parent.close();\n    }\n    \n    destroy() : ZalgoPromise<void> {\n        return ZalgoPromise.try(() => {\n            window.close();\n        });\n    }\n\n    focus() : ZalgoPromise<void> {\n        return ZalgoPromise.try(() => {\n            window.focus();\n        });\n    }\n\n    onError(err : mixed) : ZalgoPromise<void> {\n        return ZalgoPromise.try(() => {\n            if (this.parent && this.parent.onError) {\n                return this.parent.onError(err);\n            } else {\n                throw err;\n            }\n        });\n    }\n}\n","/* @flow */\n\nimport { ZalgoPromise } from 'zalgo-promise/src';\nimport { cleanUpWindow, ProxyWindow, toProxyWindow } from 'post-robot/src';\nimport { assertSameDomain } from 'cross-domain-utils/src';\nimport { iframe, popup, destroyElement, normalizeDimension, watchElementForClose,\n    awaitFrameWindow, uniqueID } from 'belter/src';\n\nimport { CONTEXT } from '../constants';\nimport { getProxyElement, type ProxyElement } from '../lib';\n\n\nexport type ContextDriverType = {|\n    openOnClick : boolean,\n    openFrame? : () => ProxyElement<HTMLIFrameElement>,\n    open : (?ProxyElement<HTMLIFrameElement>) => ZalgoPromise<ProxyWindow>,\n    openPrerenderFrame? : () => ProxyElement<HTMLIFrameElement>,\n    openPrerender : (ProxyWindow, ?ProxyElement<HTMLIFrameElement>) => ZalgoPromise<ProxyWindow>,\n    resize? : ({ width : ?number, height : ?number }) => void,\n    delegate : $ReadOnlyArray<string>\n|};\n\nexport const RENDER_DRIVERS : { [string] : ContextDriverType } = {};\n\nRENDER_DRIVERS[CONTEXT.IFRAME] = {\n    openOnClick: false,\n\n    openFrame() : ProxyElement<HTMLIFrameElement> {\n        return getProxyElement(iframe({\n            attributes: {\n                title: this.component.name,\n                ...this.component.attributes.iframe\n            }\n        }));\n    },\n\n    open(proxyFrame : ?ProxyElement<HTMLIFrameElement>) : ZalgoPromise<ProxyWindow> {\n        if (!proxyFrame) {\n            throw new Error(`Expected proxy frame to be passed`);\n        }\n\n        return proxyFrame.getElement().then(frame => {\n            return awaitFrameWindow(frame).then(win => {\n\n                const frameWatcher = watchElementForClose(frame, () => this.close());\n                this.clean.register(() => frameWatcher.cancel());\n                this.clean.register(() => destroyElement(frame));\n                this.clean.register(() => cleanUpWindow(win));\n\n                return toProxyWindow(win);\n            });\n        });\n    },\n\n    openPrerenderFrame() : ProxyElement<HTMLIFrameElement> {\n        return getProxyElement(iframe({\n            attributes: {\n                name:  `__zoid_prerender_frame__${ this.component.name }_${ uniqueID() }__`,\n                title: `prerender__${ this.component.name }`,\n                ...this.component.attributes.iframe\n            }\n        }));\n    },\n\n    openPrerender(proxyWin : ProxyWindow, proxyPrerenderFrame : ?ProxyElement<HTMLIFrameElement>) : ZalgoPromise<ProxyWindow> {\n        if (!proxyPrerenderFrame) {\n            throw new Error(`Expected proxy frame to be passed`);\n        }\n        \n        return proxyPrerenderFrame.getElement().then(prerenderFrame => {\n            this.clean.register(() => destroyElement(prerenderFrame));\n\n            return awaitFrameWindow(prerenderFrame).then(prerenderFrameWindow => {\n                return assertSameDomain(prerenderFrameWindow);\n            }).then(win => {\n                return toProxyWindow(win);\n            });\n        });\n    },\n\n    delegate: [\n        'getProxyContainer',\n        'renderContainer',\n        'openFrame',\n        'openPrerenderFrame',\n        'prerender',\n        'open',\n        'openPrerender'\n    ],\n\n    resize({ width, height } : { width : ?number, height : ?number }) {\n        if (this.proxyContainer) {\n            this.proxyContainer.resize({ width, height });\n        }\n    }\n};\n\nif (__ZOID__.__POPUP_SUPPORT__) {\n    RENDER_DRIVERS[CONTEXT.POPUP] = {\n        openOnClick: true,\n\n        open() : ZalgoPromise<ProxyWindow> {\n            return ZalgoPromise.try(() => {\n                let { width, height } = this.component.dimensions;\n\n                width = normalizeDimension(width, window.outerWidth);\n                height = normalizeDimension(height, window.outerWidth);\n\n                const win = popup('', {\n                    width,\n                    height,\n                    ...this.component.attributes.popup\n                });\n\n                this.clean.register(() => {\n                    win.close();\n                    cleanUpWindow(win);\n                });\n\n                return toProxyWindow(win);\n            });\n        },\n\n        openPrerender(proxyWin : ProxyWindow) : ZalgoPromise<ProxyWindow> {\n            return ZalgoPromise.try(() => {\n                return proxyWin;\n            });\n        },\n\n        delegate: [\n            'getProxyContainer',\n            'renderContainer',\n            'setProxyWin'\n        ]\n    };\n}\n","/* @flow */\n\nimport { ZalgoPromise } from 'zalgo-promise/src';\nimport { dotify, isDefined, extend } from 'belter/src';\n\nimport type { Component } from '../component';\nimport type { BuiltInPropsDefinitionType, PropsInputType, PropsType, MixedPropDefinitionType } from '../component/props';\nimport { PROP_SERIALIZATION } from '../constants';\n\nimport type { ParentHelpers } from './index';\n\n/*  Normalize Props\n    ---------------\n\n    Turn props into normalized values, using defaults, function options, etc.\n*/\n\nexport function extendProps<P>(component : Component<P>, props : PropsType<P>, inputProps : PropsInputType<P>, helpers : ParentHelpers<P>, isUpdate : boolean = false) { // eslint-disable-line complexity\n\n    // $FlowFixMe\n    inputProps = inputProps || {};\n    extend(props, inputProps);\n\n    const propNames = isUpdate ? [] : [ ...component.getPropNames() ];\n\n    // $FlowFixMe\n    for (const key of Object.keys(inputProps)) {\n        if (propNames.indexOf(key) === -1) {\n            propNames.push(key);\n        }\n    }\n\n    const aliases = [];\n\n    const { state, close, focus, onError } = helpers;\n\n    for (const key of propNames) {\n        const propDef = component.getPropDefinition(key);\n        // $FlowFixMe\n        let value = inputProps[key];\n\n        if (!propDef) {\n            continue;\n        }\n\n        const alias = propDef.alias;\n        if (alias) {\n            if (!isDefined(value) && isDefined(inputProps[alias])) {\n                value = inputProps[alias];\n            }\n            aliases.push(alias);\n        }\n\n        if (propDef.value) {\n            value = propDef.value({ props, state, close, focus, onError });\n        }\n\n        if (!isDefined(value) && propDef.default) {\n            value = propDef.default({ props, state, close, focus, onError });\n        }\n\n        if (isDefined(value)) {\n            if (propDef.type === 'array' ? !Array.isArray(value) : (typeof value !== propDef.type)) {\n                throw new TypeError(`Prop is not of type ${ propDef.type }: ${ key }`);\n            }\n        }\n        \n        // $FlowFixMe\n        props[key] = value;\n    }\n\n    for (const alias of aliases) {\n        // $FlowFixMe\n        delete props[alias];\n    }\n\n    // $FlowFixMe\n    for (const key of Object.keys(props)) {\n        const propDef = component.getPropDefinition(key);\n        // $FlowFixMe\n        const value = props[key];\n\n        if (!propDef) {\n            continue;\n        }\n\n        if (isDefined(value) && propDef.validate) {\n            // $FlowFixMe\n            propDef.validate({ value, props });\n        }\n\n        if (isDefined(value) && propDef.decorate) {\n            // $FlowFixMe\n            props[key] = propDef.decorate({ value, props, state, close, focus, onError });\n        }\n    }\n\n    for (const key of component.getPropNames()) {\n        const propDef = component.getPropDefinition(key);\n        if (propDef.required !== false && !isDefined(props[key])) {\n            throw new Error(`Expected prop \"${ key }\" to be defined`);\n        }\n    }\n}\n\n// $FlowFixMe\nfunction getQueryParam<T, P>(prop : MixedPropDefinitionType<P>, key : string, value : T) : ZalgoPromise<string> {\n    return ZalgoPromise.try(() => {\n        if (typeof prop.queryParam === 'function') {\n            return prop.queryParam({ value });\n        } else if (typeof prop.queryParam === 'string') {\n            return prop.queryParam;\n        } else {\n            return key;\n        }\n    });\n}\n\n// $FlowFixMe\nfunction getQueryValue<T, P>(prop : MixedPropDefinitionType<P>, key : string, value : T) : ZalgoPromise<mixed> {\n    return ZalgoPromise.try(() => {\n        if (typeof prop.queryValue === 'function' && isDefined(value)) {\n            return prop.queryValue({ value });\n        } else {\n            return value;\n        }\n    });\n}\n\nexport function propsToQuery<P>(propsDef : BuiltInPropsDefinitionType<P>, props : (PropsType<P>)) : ZalgoPromise<{ [string] : string }> {\n\n    const params = {};\n\n    return ZalgoPromise.all(Object.keys(props).map(key => {\n\n        const prop = propsDef[key];\n\n        if (!prop) {\n            return; // eslint-disable-line array-callback-return\n        }\n\n        return ZalgoPromise.resolve().then(() => {\n\n            const value = props[key];\n\n            if (!value) {\n                return;\n            }\n\n            if (!prop.queryParam) {\n                return;\n            }\n\n            return value;\n\n        }).then(value => {\n\n            if (value === null || typeof value === 'undefined') {\n                return;\n            }\n\n            return ZalgoPromise.all([\n                // $FlowFixMe\n                getQueryParam(prop, key, value),\n                // $FlowFixMe\n                getQueryValue(prop, key, value)\n            ]).then(([ queryParam, queryValue ]) => {\n\n                let result;\n\n                if (typeof queryValue === 'boolean') {\n                    result = queryValue.toString();\n                } else if (typeof queryValue === 'string') {\n                    result = queryValue.toString();\n                } else if (typeof queryValue === 'object' && queryValue !== null) {\n\n                    if (prop.serialization === PROP_SERIALIZATION.JSON) {\n                        result = JSON.stringify(queryValue);\n                    } else if (prop.serialization === PROP_SERIALIZATION.BASE64) {\n                        result = btoa(JSON.stringify(queryValue));\n                    } else if (prop.serialization === PROP_SERIALIZATION.DOTIFY || !prop.serialization) {\n                        result = dotify(queryValue, key);\n\n                        for (const dotkey of Object.keys(result)) {\n                            params[dotkey] = result[dotkey];\n                        }\n\n                        return;\n                    }\n\n                } else if (typeof queryValue === 'number') {\n                    result = queryValue.toString();\n                }\n\n                params[queryParam] = result;\n            });\n        });\n\n    })).then(() => {\n        return params;\n    });\n}\n","/* @flow */\n\nimport { type CrossDomainWindowType } from 'cross-domain-utils/src';\nimport { noop } from 'belter/src';\n\nimport { windowStore } from './global';\n\nexport function cleanUpWindow(win : CrossDomainWindowType) {\n    const requestPromises = windowStore('requestPromises');\n    for (const promise of requestPromises.get(win, [])) {\n        promise.reject(new Error(`Window cleaned up before response`)).catch(noop);\n    }\n}\n","/* @flow */\n/* eslint max-lines: 0 */\n\nimport { send, bridge, serializeMessage, ProxyWindow, toProxyWindow } from 'post-robot/src';\nimport { isSameDomain, matchDomain, getDomainFromUrl, isBlankDomain,\n    onCloseWindow, getDomain, type CrossDomainWindowType,\n    getDistanceFromTop, normalizeMockUrl, assertSameDomain } from 'cross-domain-utils/src';\nimport { ZalgoPromise } from 'zalgo-promise/src';\nimport { addEventListener, uniqueID, elementReady, writeElementToWindow, eventEmitter, type EventEmitterType,\n    noop, onResize, extendUrl, appendChild, cleanup, type CleanupType, base64encode,\n    once, stringifyError, destroyElement, getElementSafe } from 'belter/src';\n\nimport { ZOID, POST_MESSAGE, CONTEXT, EVENT,\n    INITIAL_PROPS, WINDOW_REFERENCES } from '../constants';\nimport type { Component, onErrorPropType } from '../component';\nimport { globalFor, getProxyElement, type ProxyElement } from '../lib';\nimport type { PropsInputType, PropsType } from '../component/props';\nimport type { ChildExportsType } from '../child';\nimport type { DimensionsType } from '../types';\n\nimport { RENDER_DRIVERS, type ContextDriverType } from './drivers';\nimport { propsToQuery, extendProps } from './props';\n\nexport type RenderOptionsType<P> = {|\n    uid : string,\n    props : PropsInputType<P>,\n    tag : string,\n    context : string,\n    close : (?string) => ZalgoPromise<void>,\n    focus : () => ZalgoPromise<ProxyWindow>,\n    doc : Document,\n    container? : HTMLElement,\n    dimensions : DimensionsType,\n    state : Object,\n    event : EventEmitterType,\n    frame : ?HTMLIFrameElement,\n    prerenderFrame : ?HTMLIFrameElement\n|};\n\nexport type ParentExportsType<P> = {|\n    init : (ChildExportsType<P>) => ZalgoPromise<void>,\n    close : () => ZalgoPromise<void>,\n    checkClose : () => ZalgoPromise<void>,\n    resize : ({ width? : ?number, height? : ?number }) => ZalgoPromise<void>,\n    onError : (mixed) => ZalgoPromise<void>\n|};\n\nexport type PropRef =\n    {| type : typeof INITIAL_PROPS.RAW, uid? : string, value? : string |};\n\nexport type WindowRef =\n    {| type : typeof WINDOW_REFERENCES.OPENER |} |\n    {| type : typeof WINDOW_REFERENCES.PARENT, distance : number |} |\n    {| type : typeof WINDOW_REFERENCES.GLOBAL, uid : string |};\n\nexport type ChildPayload = {|\n    uid : string,\n    tag : string,\n    version : string,\n    context : $Values<typeof CONTEXT>,\n    domain : string,\n    parent : WindowRef,\n    props : PropRef,\n    exports : string\n|};\n\nexport type StateType = Object;\n\nexport type ParentHelpers<P> = {|\n    state : StateType,\n    close : () => ZalgoPromise<void>,\n    focus : () => ZalgoPromise<void>,\n    resize : ({ width : ?number, height : ?number }) => ZalgoPromise<void>,\n    onError : (mixed) => ZalgoPromise<void>,\n    updateProps : PropsInputType<P> => ZalgoPromise<void>,\n    event : EventEmitterType\n|};\n\nexport class ParentComponent<P> {\n\n    component : Component<P>\n    driver : ContextDriverType\n    clean : CleanupType\n    event : EventEmitterType\n\n    initPromise : ZalgoPromise<void>\n    handledErrors : Array<mixed> // eslint-disable-line flowtype/no-mutable-array\n    \n    props : PropsType<P>\n    state : StateType\n    child : ?ChildExportsType<P>\n\n    proxyWin : ?ProxyWindow\n    proxyContainer : ?ProxyElement<HTMLElement>\n\n    constructor(component : Component<P>, props : PropsInputType<P>) {\n        this.initPromise = new ZalgoPromise();\n        this.handledErrors = [];\n\n        // $FlowFixMe\n        this.props = {};\n\n        this.clean = cleanup(this);\n        this.state = {};\n\n        this.component = component;\n\n        this.setupEvents(props.onError);\n        this.setProps(props);\n        this.component.registerActiveComponent(this);\n        this.clean.register(() => this.component.destroyActiveComponent(this));\n        this.watchForUnload();\n    }\n\n    setupEvents(onError : ?onErrorPropType) {\n        this.event = eventEmitter();\n        \n        this.event.on(EVENT.RENDER,   () => this.props.onRender());\n        this.event.on(EVENT.DISPLAY,  () => this.props.onDisplay());\n        this.event.on(EVENT.RENDERED, () => this.props.onRendered());\n        this.event.on(EVENT.CLOSE,    () => this.props.onClose());\n        this.event.on(EVENT.PROPS,    (props) => this.props.onProps(props));\n\n        this.event.on(EVENT.ERROR, err => {\n            if (this.props && this.props.onError) {\n                return this.props.onError(err);\n            } else if (onError) {\n                return onError(err);\n            } else {\n                return this.initPromise.reject(err).then(() => {\n                    setTimeout(() => {\n                        throw err;\n                    }, 1);\n                });\n            }\n        });\n    }\n\n    render(target : CrossDomainWindowType, container : string | HTMLElement, context : $Values<typeof CONTEXT>) : ZalgoPromise<void> {\n        return ZalgoPromise.try(() => {\n            this.component.log(`render`);\n\n            this.driver = RENDER_DRIVERS[context];\n            const uid = `${ ZOID }-${ this.component.tag }-${ uniqueID() }`;\n            const domain = this.getDomain();\n            const initialDomain = this.getInitialDomain();\n            \n            this.component.checkAllowRender(target, domain, container);\n\n            if (target !== window) {\n                this.delegate(context, target);\n            }\n\n            const tasks = {};\n\n            tasks.init = this.initPromise;\n            tasks.buildUrl = this.buildUrl();\n            tasks.onRender = this.event.trigger(EVENT.RENDER);\n\n            tasks.getProxyContainer = this.getProxyContainer(container);\n\n            tasks.openFrame = this.openFrame();\n            tasks.openPrerenderFrame = this.openPrerenderFrame();\n\n            tasks.renderContainer = ZalgoPromise.all([ tasks.getProxyContainer, tasks.openFrame, tasks.openPrerenderFrame ]).then(([ proxyContainer, proxyFrame, proxyPrerenderFrame ]) => {\n                return this.renderContainer(proxyContainer, { context, uid, proxyFrame, proxyPrerenderFrame });\n            });\n\n            tasks.open = this.driver.openOnClick\n                ? this.open()\n                : tasks.openFrame.then(proxyFrame => this.open(proxyFrame));\n\n            tasks.openPrerender = ZalgoPromise.all([ tasks.open, tasks.openPrerenderFrame ]).then(([ proxyWin, proxyPrerenderFrame ]) => {\n                return this.openPrerender(proxyWin, proxyPrerenderFrame);\n            });\n\n            tasks.setState = ZalgoPromise.all([\n                tasks.open.then(proxyWin => {\n                    this.proxyWin = proxyWin;\n                    return this.setProxyWin(proxyWin);\n                }),\n                tasks.renderContainer.then(proxyContainer => {\n                    this.proxyContainer = proxyContainer;\n                })\n            ]);\n            \n            tasks.prerender = ZalgoPromise.all([ tasks.openPrerender, tasks.setState ]).then(([ proxyPrerenderWin ]) => {\n                return this.prerender(proxyPrerenderWin, { context, uid });\n            });\n\n            tasks.loadUrl = ZalgoPromise.all([ tasks.open, tasks.buildUrl, tasks.setWindowName, tasks.prerender ]).then(([ proxyWin, url ]) => {\n                return proxyWin.setLocation(url);\n            });\n\n            tasks.buildWindowName = tasks.open.then(proxyWin => {\n                return this.buildWindowName({ proxyWin, initialDomain, domain, target, context, uid });\n            });\n\n            tasks.setWindowName =  ZalgoPromise.all([ tasks.open, tasks.buildWindowName ]).then(([ proxyWin, windowName ]) => {\n                return proxyWin.setName(windowName);\n            });\n\n            tasks.watchForClose = tasks.open.then(proxyWin => {\n                return this.watchForClose(proxyWin);\n            });\n\n            tasks.onDisplay = tasks.prerender.then(() => {\n                return this.event.trigger(EVENT.DISPLAY);\n            });\n\n            tasks.openBridge = tasks.open.then(proxyWin => {\n                return this.openBridge(proxyWin, initialDomain, context);\n            });\n\n            tasks.runTimeout = tasks.loadUrl.then(() => {\n                return this.runTimeout();\n            });\n\n            tasks.onRender = tasks.init.then(() => {\n                return this.event.trigger(EVENT.RENDERED);\n            });\n\n            return ZalgoPromise.hash(tasks);\n            \n        }).catch(err => {\n            return ZalgoPromise.all([\n                this.onError(err),\n                this.destroy(err)\n            ]).then(() => {\n                throw err;\n            });\n        }).then(noop);\n    }\n\n    getProxyContainer(container : string | HTMLElement) : ZalgoPromise<ProxyElement<HTMLElement>> {\n        return ZalgoPromise.try(() => {\n            return elementReady(container);\n        }).then(containerElement => {\n            return getProxyElement(containerElement);\n        });\n    }\n\n    buildWindowName({ proxyWin, initialDomain, domain, target, uid, context } : { proxyWin : ProxyWindow, initialDomain : string, domain : string | RegExp, target : CrossDomainWindowType, context : $Values<typeof CONTEXT>, uid : string }) : string {\n        const childPayload = this.buildChildPayload({ proxyWin, initialDomain, domain, target, context, uid });\n        return `__${ ZOID }__${ this.component.name }__${ base64encode(JSON.stringify(childPayload)) }__`;\n    }\n\n    getPropsRef(proxyWin : ProxyWindow, target : CrossDomainWindowType, domain : string | RegExp, uid : string) : PropRef {\n        const value = serializeMessage(proxyWin, domain, this.getPropsForChild(domain));\n\n        const propRef = isSameDomain(target)\n            ? { type: INITIAL_PROPS.RAW, value }\n            : { type: INITIAL_PROPS.UID, uid };\n\n        if (propRef.type === INITIAL_PROPS.UID) {\n            const global = globalFor(window);\n            global.props = global.props || {};\n            global.props[uid] = value;\n\n            this.clean.register(() => {\n                delete global.props[uid];\n            });\n        }\n\n        return propRef;\n    }\n\n    buildChildPayload({ proxyWin, initialDomain, domain, target = window, context, uid } : { proxyWin : ProxyWindow, initialDomain : string, domain : string | RegExp, target : CrossDomainWindowType, context : $Values<typeof CONTEXT>, uid : string } = {}) : ChildPayload {\n        return {\n            uid,\n            context,\n            version: __ZOID__.__VERSION__,\n            domain:  getDomain(window),\n            tag:     this.component.tag,\n            parent:  this.getWindowRef(target, initialDomain, uid, context),\n            props:   this.getPropsRef(proxyWin, target, domain, uid),\n            exports: serializeMessage(proxyWin, domain, this.buildParentExports(proxyWin))\n        };\n    }\n\n    setProxyWin(proxyWin : ProxyWindow) : ZalgoPromise<void> {\n        return ZalgoPromise.try(() => {\n            this.proxyWin = proxyWin;\n        });\n    }\n\n    getHelpers() : ParentHelpers<P> {\n        return {\n            state:       this.state,\n            event:       this.event,\n            close:       () => this.close(),\n            focus:       () => this.focus(),\n            resize:      ({ width, height }) => this.resize({ width, height }),\n            onError:     (err) => this.onError(err),\n            updateProps: (props) => this.updateProps(props)\n        };\n    }\n\n    setProps(props : PropsInputType<P>, isUpdate : boolean = false) {\n        if (this.component.validate) {\n            this.component.validate({ props });\n        }\n\n        const helpers = this.getHelpers();\n        extendProps(this.component, this.props, props, helpers, isUpdate);\n    }\n\n    buildUrl() : ZalgoPromise<string> {\n        return propsToQuery({ ...this.component.props, ...this.component.builtinProps }, this.props).then(query => {\n            return extendUrl(normalizeMockUrl(this.component.getUrl(this.props)), { query });\n        });\n    }\n\n    getDomain() : string | RegExp {\n        return this.component.getDomain(this.props);\n    }\n\n    getInitialDomain() : string {\n        return this.component.getInitialDomain(this.props);\n    }\n\n    getPropsForChild(domain : string | RegExp) : (PropsType<P>) {\n        const result = {};\n\n        for (const key of Object.keys(this.props)) {\n            const prop = this.component.getPropDefinition(key);\n\n            if (prop && prop.sendToChild === false) {\n                continue;\n            }\n\n            if (prop && prop.sameDomain && !matchDomain(domain, getDomain(window))) {\n                continue;\n            }\n\n            // $FlowFixMe\n            result[key] = this.props[key];\n        }\n\n        // $FlowFixMe\n        return result;\n    }\n\n    updateProps(props : PropsInputType<P>) : ZalgoPromise<void> {\n        this.setProps(props, true);\n\n        return this.initPromise.then(() => {\n            if (this.child) {\n                return this.child.updateProps(this.getPropsForChild(this.getDomain()));\n            }\n        });\n    }\n\n    openFrame() : ZalgoPromise<?ProxyElement<HTMLIFrameElement>> {\n        return ZalgoPromise.try(() => {\n            if (this.driver.openFrame) {\n                return this.driver.openFrame.call(this);\n            }\n        });\n    }\n\n    openPrerenderFrame() : ZalgoPromise<?ProxyElement<HTMLIFrameElement>> {\n        return ZalgoPromise.try(() => {\n            if (this.driver.openPrerenderFrame) {\n                return this.driver.openPrerenderFrame.call(this);\n            }\n        });\n    }\n    \n    open(proxyFrame : ?ProxyElement<HTMLIFrameElement>) : ZalgoPromise<ProxyWindow> {\n        return ZalgoPromise.try(() => {\n            this.component.log(`open`);\n\n            const windowProp = this.props.window;\n\n            if (windowProp) {\n                this.clean.register(() => windowProp.close());\n                return toProxyWindow(windowProp);\n            }\n\n            return this.driver.open.call(this, proxyFrame);\n\n        }).then(proxyWin => {\n            this.proxyWin = proxyWin;\n            return proxyWin;\n        });\n    }\n\n    openPrerender(proxyWin : ProxyWindow, proxyPrerenderFrame : ?ProxyElement<HTMLIFrameElement>) : ZalgoPromise<ProxyWindow> {\n        return ZalgoPromise.try(() => {\n            return this.driver.openPrerender.call(this, proxyWin, proxyPrerenderFrame);\n        });\n    }\n\n    focus() : ZalgoPromise<void> {\n        return ZalgoPromise.try(() => {\n            if (this.proxyWin) {\n                return this.proxyWin.focus().then(noop);\n            }\n        });\n    }\n\n    delegate(context : $Values<typeof CONTEXT>, target : CrossDomainWindowType) {\n        this.component.log(`delegate`);\n\n        const props = {};\n        for (const propName of this.component.getPropNames()) {\n            if (this.component.getPropDefinition(propName).allowDelegate) {\n                props[propName] = this.props[propName];\n            }\n        }\n\n        const overridesPromise = send(target, `${ POST_MESSAGE.DELEGATE }_${ this.component.name }`, {\n            context,\n            props,\n            overrides: {\n                event:   this.event,\n                close:   () => this.close(),\n                onError: (err) => this.onError(err)\n            }\n\n        }).then(({ data }) => {\n            this.clean.register(data.destroy);\n            return data.overrides;\n\n        }).catch(err => {\n            throw new Error(`Unable to delegate rendering. Possibly the component is not loaded in the target window.\\n\\n${ stringifyError(err) }`);\n        });\n\n        for (const key of this.driver.delegate) {\n            // $FlowFixMe\n            this[key] = function overriddenFunction() : ZalgoPromise<mixed> {\n                return overridesPromise.then(overrides => {\n                    return overrides[key].apply(this, arguments);\n                });\n            };\n        }\n    }\n\n    getWindowRef(target : CrossDomainWindowType, domain : string, uid : string, context : $Values<typeof CONTEXT>) : WindowRef {\n        \n        if (domain === getDomain(window)) {\n            const global = globalFor(window);\n            global.windows = global.windows || {};\n            global.windows[uid] = window;\n            this.clean.register(() => {\n                delete global.windows[uid];\n            });\n    \n            return { type: WINDOW_REFERENCES.GLOBAL, uid };\n        }\n\n        if (context === CONTEXT.POPUP) {\n            return { type: WINDOW_REFERENCES.OPENER };\n        }\n\n        return { type: WINDOW_REFERENCES.PARENT, distance: getDistanceFromTop(window) };\n    }\n\n    watchForClose(proxyWin : ProxyWindow) : ZalgoPromise<void> {\n        return proxyWin.awaitWindow().then(win => {\n            const closeWindowListener = onCloseWindow(win, () => {\n                this.component.log(`detect_close_child`);\n                return this.close();\n            }, 2000);\n\n            this.clean.register(closeWindowListener.cancel);\n        });\n    }\n\n    watchForUnload() {\n        const unloadWindowListener = addEventListener(window, 'unload', once(() => {\n            this.component.log(`navigate_away`);\n            this.destroy(new Error(`Window navigated away`));\n        }));\n\n        this.clean.register(unloadWindowListener.cancel);\n    }\n\n    runTimeout() : ZalgoPromise<void> {\n        return ZalgoPromise.try(() => {\n            const timeout = this.props.timeout;\n\n            if (timeout) {\n                return this.initPromise.timeout(timeout, new Error(`Loading component timed out after ${ timeout } milliseconds`));\n            }\n        });\n    }\n\n    initChild(child : ChildExportsType<P>) : ZalgoPromise<void> {\n        return ZalgoPromise.try(() => {\n            this.clean.set('child', child);\n            this.initPromise.resolve();\n        });\n    }\n\n    buildParentExports(win : ProxyWindow) : ParentExportsType<P> {\n        const onError    = (err) => this.onError(err);\n        const init       = (child) => this.initChild(child);\n        const close      = () => this.close();\n        const checkClose = () => this.checkClose(win);\n        const resize     = ({ width, height }) => this.resize({ width, height });\n\n        init.onError = onError;\n\n        return { init, close, checkClose, resize, onError };\n    }\n\n    resize({ width, height } : { width? : ?number, height? : ?number }) : ZalgoPromise<void> {\n        return ZalgoPromise.try(() => {\n            if (this.driver.resize) {\n                return this.driver.resize.call(this, { width, height });\n            }\n        });\n    }\n\n    checkClose(win : ProxyWindow) : ZalgoPromise<void> {\n        return win.isClosed().then(closed => {\n            if (closed) {\n                return this.close();\n            }\n\n            return ZalgoPromise.delay(200)\n                .then(() => win.isClosed())\n                .then(secondClosed => {\n                    if (secondClosed) {\n                        return this.close();\n                    }\n                });\n        });\n    }\n\n    close() : ZalgoPromise<void> {\n        return ZalgoPromise.try(() => {\n            this.component.log(`close`);\n            return this.event.trigger(EVENT.CLOSE);\n\n        }).then(() => {\n            if (this.child) {\n                this.child.close.fireAndForget().catch(noop);\n            }\n\n            return this.destroy(new Error(`Window closed`), false);\n        });\n    }\n\n    prerender(proxyPrerenderWin : ProxyWindow, { context, uid } : { context : $Values<typeof CONTEXT>, uid : string }) : ZalgoPromise<void> {\n        return ZalgoPromise.try(() => {\n            const prerenderTemplate = this.component.prerenderTemplate;\n\n            if (!prerenderTemplate) {\n                return;\n            }\n\n            let prerenderWindow = proxyPrerenderWin.getWindow();\n\n            if (!prerenderWindow || !isSameDomain(prerenderWindow) || !isBlankDomain(prerenderWindow)) {\n                return;\n            }\n\n            prerenderWindow = assertSameDomain(prerenderWindow);\n    \n            const doc = prerenderWindow.document;\n            const el = this.renderTemplate(prerenderTemplate, { context, uid, doc });\n\n            if (!el) {\n                return;\n            }\n\n            if (el.ownerDocument !== doc) {\n                throw new Error(`Expected prerender template to have been created with document from child window`);\n            }\n\n            writeElementToWindow(prerenderWindow, el);\n\n            let { width = false, height = false, element = 'body' } = this.component.autoResize || {};\n            element = getElementSafe(element, doc);\n            \n            if (element && (width || height)) {\n                onResize(element, ({ width: newWidth, height: newHeight }) => {\n                    this.resize({\n                        width:  width ? newWidth : undefined,\n                        height: height ? newHeight : undefined\n                    });\n                }, { width, height, win: prerenderWindow });\n            }\n        });\n    }\n\n    renderTemplate(renderer : (RenderOptionsType<P>) => ?HTMLElement, { context, uid, container, doc, frame, prerenderFrame } : { context : $Values<typeof CONTEXT>, uid : string, container? : HTMLElement, doc : Document, frame? : ?HTMLIFrameElement, prerenderFrame? : ?HTMLIFrameElement }) : ?HTMLElement {\n        // $FlowFixMe\n        return renderer.call(this, {\n            container,\n            context,\n            uid,\n            doc,\n            frame,\n            prerenderFrame,\n            focus:      () => this.focus(),\n            close:      () => this.close(),\n            state:      this.state,\n            props:      this.props,\n            tag:        this.component.tag,\n            dimensions: this.component.dimensions,\n            event:      this.event\n        });\n    }\n\n    renderContainer(proxyContainer : ProxyElement<HTMLElement>, { proxyFrame, proxyPrerenderFrame, context, uid } : { context : $Values<typeof CONTEXT>, uid : string, proxyFrame : ?ProxyElement<HTMLIFrameElement>, proxyPrerenderFrame : ?ProxyElement<HTMLIFrameElement> }) : ZalgoPromise<?ProxyElement<HTMLElement>> {\n        return ZalgoPromise.all([\n            proxyContainer.getElement().then(elementReady),\n            // $FlowFixMe\n            proxyFrame ? proxyFrame.getElement() : null,\n            // $FlowFixMe\n            proxyPrerenderFrame ? proxyPrerenderFrame.getElement() : null\n        ]).then(([ container, frame, prerenderFrame ]) => {\n            const innerContainer = this.renderTemplate(this.component.containerTemplate, { context, uid, container, frame, prerenderFrame, doc: document });\n            if (innerContainer) {\n                appendChild(container, innerContainer);\n                this.clean.register(() => destroyElement(innerContainer));\n                this.proxyContainer = getProxyElement(innerContainer);\n                return this.proxyContainer;\n            }\n        });\n    }\n\n    destroy(err? : mixed, trigger? : boolean = true) : ZalgoPromise<void> {\n        return ZalgoPromise.try(() => {\n            if (!err) {\n                trigger = false;\n                err = new Error('Component destroyed');\n            }\n            this.component.log(`destroy`);\n            return this.onError(err, trigger);\n        }).then(() => {\n            return this.clean.all();\n        });\n    }\n\n    onError(err : mixed, trigger? : boolean = true) : ZalgoPromise<void> {\n        return ZalgoPromise.try(() => {\n            if (this.handledErrors.indexOf(err) !== -1) {\n                return;\n            }\n\n            this.handledErrors.push(err);\n            this.initPromise.asyncReject(err);\n\n            if (trigger) {\n                return this.event.trigger(EVENT.ERROR, err);\n            }\n        });\n    }\n\n    openBridge(proxyWin : ProxyWindow, domain : string, context : $Values<typeof CONTEXT>) : ?ZalgoPromise<?CrossDomainWindowType> {\n        if (__POST_ROBOT__.__IE_POPUP_SUPPORT__) {\n            return ZalgoPromise.try(() => {\n                return proxyWin.awaitWindow();\n                \n            }).then(win => {\n                if (!bridge || !bridge.needsBridge({ win, domain }) || bridge.hasBridge(domain, domain)) {\n                    return;\n                }\n\n                const bridgeUrl = this.component.getBridgeUrl();\n\n                if (!bridgeUrl) {\n                    throw new Error(`Bridge needed to render ${ context }`);\n                }\n\n                const bridgeDomain = getDomainFromUrl(bridgeUrl);\n                bridge.linkUrl(win, domain);\n                return bridge.openBridge(normalizeMockUrl(bridgeUrl), bridgeDomain);\n            });\n        }\n    }\n}\n","/* @flow */\n\nimport { onCloseWindow, type CrossDomainWindowType } from 'cross-domain-utils/src';\nimport { ZalgoPromise } from 'zalgo-promise/src';\nimport { ProxyWindow } from 'post-robot/src';\nimport { cleanup, type CleanupType, type EventEmitterType } from 'belter/src';\n\nimport { ParentComponent } from '../parent';\nimport { RENDER_DRIVERS, type ContextDriverType } from '../parent/drivers';\nimport type { Component } from '../component';\n\nexport type DelegatePropsType = {|\n    onClose : () => ?ZalgoPromise<void>,\n    onDisplay : () => ?ZalgoPromise<void>,\n    window : ?ProxyWindow\n|};\n\nexport type DelegateOptionsType = {|\n    context : string,\n    props : DelegatePropsType,\n    overrides : {\n        close : () => ZalgoPromise<void>,\n        onError : (mixed) => ZalgoPromise<void>,\n        event : EventEmitterType\n    }\n|};\n\nexport type DelegateReturnType = {|\n    overrides : Object,\n    destroy : () => ZalgoPromise<void>\n|};\n\nexport class DelegateComponent<P>  {\n\n    component : Component<P>\n    source : CrossDomainWindowType\n    context : string\n    driver : ContextDriverType\n    props : DelegatePropsType\n    clean : CleanupType\n\n    focus : () => ZalgoPromise<void>\n    resize : ({ width? : ?number, height? : ?number }) => ZalgoPromise<void>\n    renderTemplate : Function\n\n    close : () => ZalgoPromise<void>\n    onError : (mixed) => ZalgoPromise<void>\n    event : EventEmitterType\n\n    constructor(component : Component<P>, source : CrossDomainWindowType, options : DelegateOptionsType) {\n        this.component = component;\n        this.context = options.context;\n        this.driver = RENDER_DRIVERS[options.context];\n        this.clean = cleanup(this);\n        \n        this.focus = ParentComponent.prototype.focus;\n        this.resize = ParentComponent.prototype.resize;\n        this.renderTemplate = ParentComponent.prototype.renderTemplate;\n\n        // $FlowFixMe\n        this.props = {};\n        for (const propName of Object.keys(options.props)) {\n            const propDef = this.component.getPropDefinition(propName);\n            if (propDef && propDef.allowDelegate && options.props[propName]) {\n                // $FlowFixMe\n                this.props[propName] = options.props[propName];\n            }\n        }\n\n        this.close   = options.overrides.close;\n        this.onError = options.overrides.onError;\n        this.event   = options.overrides.event;\n\n        this.component.registerActiveComponent(this);\n        this.clean.register(() => this.component.destroyActiveComponent(this));\n\n        this.watchForSourceClose(source);\n    }\n\n    getDelegate() : DelegateReturnType {\n        return {\n            overrides: this.getOverrides(),\n            destroy:   () => this.destroy()\n        };\n    }\n\n    watchForSourceClose(source : CrossDomainWindowType) {\n        const closeSourceWindowListener = onCloseWindow(source, () => this.destroy(), 3000);\n        this.clean.register(closeSourceWindowListener.cancel);\n    }\n\n    getOverrides() : { [string] : mixed } {\n        const overrides = {};\n        const self = this;\n\n        for (const key of this.driver.delegate) {\n            overrides[key] = function delegateOverride() : mixed {\n                // $FlowFixMe\n                return ParentComponent.prototype[key].apply(self, arguments);\n            };\n            overrides[key].__name__ = key;\n        }\n\n        return overrides;\n    }\n\n    destroy() : ZalgoPromise<void> {\n        return this.clean.all();\n    }\n}\n","/* @flow */\n/* eslint react/react-in-jsx-scope: off */\n\nimport { destroyElement } from 'belter/src';\n\nimport { type RenderOptionsType } from '../../parent';\nimport { EVENT } from '../../constants';\n\nconst CLASS = {\n    VISIBLE:   'visible',\n    INVISIBLE: 'invisible'\n};\n\nexport function defaultContainerTemplate<P>({ uid, frame, prerenderFrame, doc, event, dimensions : { width, height } } : RenderOptionsType<P>) : ?HTMLElement {\n    if (__ZOID__.__DEFAULT_CONTAINER__) {\n        if (!frame || !prerenderFrame) {\n            return;\n        }\n    \n        prerenderFrame.classList.add(CLASS.VISIBLE);\n        frame.classList.add(CLASS.INVISIBLE);\n    \n        event.on(EVENT.RENDERED, () => {\n            prerenderFrame.classList.remove(CLASS.VISIBLE);\n            prerenderFrame.classList.add(CLASS.INVISIBLE);\n    \n            frame.classList.remove(CLASS.INVISIBLE);\n            frame.classList.add(CLASS.VISIBLE);\n    \n            setTimeout(() => {\n                destroyElement(prerenderFrame);\n            }, 1);\n        });\n\n        const div = doc.createElement('div');\n        div.setAttribute('id', uid);\n        const style = doc.createElement('style');\n\n        style.appendChild(doc.createTextNode(`\n            #${ uid } {\n                display: inline-block;\n                position: relative;\n                width: ${ width };\n                height: ${ height };\n            }\n\n            #${ uid } > iframe {\n                display: inline-block;\n                position: absolute;\n                width: 100%;\n                height: 100%;\n                top: 0;\n                left: 0;\n                transition: opacity .2s ease-in-out;\n            }\n\n            #${ uid } > iframe.${ CLASS.INVISIBLE } {\n                opacity: 0;\n            }\n\n            #${ uid } > iframe.${ CLASS.VISIBLE } {\n                opacity: 1;\n        }\n        `));\n\n        div.appendChild(frame);\n        div.appendChild(prerenderFrame);\n        div.appendChild(style);\n\n        return div;\n    }\n}\n","/* @flow */\n/* eslint react/react-in-jsx-scope: off */\n\nimport { type RenderOptionsType } from '../../parent';\n\nexport function defaultPrerenderTemplate<P>({ doc } : RenderOptionsType<P>) : ?HTMLElement {\n    if (__ZOID__.__DEFAULT_PRERENDER__) {\n        const html = doc.createElement('html');\n        const body = doc.createElement('body');\n        const style = doc.createElement('style');\n        const spinner = doc.createElement('div');\n        spinner.classList.add('spinner');\n\n        html.appendChild(body);\n        body.appendChild(spinner);\n        body.appendChild(style);\n        style.appendChild(doc.createTextNode(`\n            .spinner {\n                position: fixed;\n                max-height: 60vmin;\n                max-width: 60vmin;\n                height: 40px;\n                width: 40px;\n                top: 50%;\n                left: 50%;\n                box-sizing: border-box;\n                border: 3px solid rgba(0, 0, 0, .2);\n                border-top-color: rgba(33, 128, 192, 0.8);\n                border-radius: 100%;\n                animation: rotation .7s infinite linear;\n            }\n\n            @keyframes rotation {\n                from {\n                    transform: translateX(-50%) translateY(-50%) rotate(0deg);\n                }\n                to {\n                    transform: translateX(-50%) translateY(-50%) rotate(359deg);\n                }\n            }\n        `));\n\n        return html;\n    }\n}\n","/* @flow */\n\nimport { ZalgoPromise } from 'zalgo-promise/src';\nimport { once, noop } from 'belter/src';\nimport { isWindow, type CrossDomainWindowType } from 'cross-domain-utils/src';\nimport { ProxyWindow, toProxyWindow } from 'post-robot/src';\n\nimport { PROP_SERIALIZATION } from '../constants';\n\nexport type EventHandlerType<T> = (T) => void | ZalgoPromise<void>;\n\nexport type timeoutPropType = number;\nexport type windowPropType = CrossDomainWindowType | ProxyWindow;\nexport type closePropType = () => ZalgoPromise<void>;\nexport type focusPropType = () => ZalgoPromise<void>;\nexport type resizePropType = ({ width : ?number, height : ?number }) => ZalgoPromise<void>;\n\nexport type onDisplayPropType = EventHandlerType<void>;\nexport type onRenderedPropType = EventHandlerType<void>;\nexport type onRenderPropType = EventHandlerType<void>;\nexport type onClosePropType = EventHandlerType<void>;\nexport type onErrorPropType = EventHandlerType<mixed>;\nexport type onPropsPropType<P> = ((PropsType<P>) => void) => void; // eslint-disable-line no-use-before-define\n\nexport type PropsInputType<P> = {\n    timeout? : timeoutPropType,\n    window? : windowPropType,\n\n    onDisplay? : onDisplayPropType,\n    onRendered? : onRenderedPropType,\n    onRender? : onRenderPropType,\n    onClose? : onClosePropType,\n    onError? : onErrorPropType,\n    onProps? : onPropsPropType<P>\n} & P;\n\nexport type PropsType<P> = {|\n    timeout? : timeoutPropType,\n    window? : ?windowPropType,\n    close? : ?closePropType,\n    focus? : ?focusPropType,\n    resize? : ?resizePropType,\n\n    onDisplay : onDisplayPropType,\n    onRendered : onRenderedPropType,\n    onRender : onRenderPropType,\n    onClose : onClosePropType,\n    onError : onErrorPropType,\n    onProps : onPropsPropType<P>\n|} & P;\n\ntype PropDefinitionType<T, P, S : string> = {|\n    type : S,\n    alias? : string,\n    value? : ({ props : P, state : Object, close : () => ZalgoPromise<void>, focus : () => ZalgoPromise<void>, onError : (mixed) => ZalgoPromise<void> }) => ?T,\n    required? : boolean,\n    queryParam? : boolean | string | ({ value : T }) => (string | ZalgoPromise<string>),\n    queryValue? : ({ value : T }) => (ZalgoPromise<mixed> | mixed),\n    sendToChild? : boolean,\n    allowDelegate? : boolean,\n    validate? : ({ value : T, props : PropsInputType<P> }) => void,\n    decorate? : ({ value : T, props : PropsType<P>, state : Object, close : () => ZalgoPromise<void>, focus : () => ZalgoPromise<void>, onError : (mixed) => ZalgoPromise<void> }) => T,\n    default? : ({ props : P, state : Object }) => ?T,\n    sameDomain? : boolean,\n    serialization? : $Values<typeof PROP_SERIALIZATION>,\n    childDecorate? : ({ value : T, close : () => ZalgoPromise<void>, focus : () => ZalgoPromise<void>, onError : (mixed) => ZalgoPromise<void>, onProps : ((PropsType<P>) => void) => void, resize : ({ width : ?number, height : ?number }) => ZalgoPromise<void> }) => ?T\n|};\n\nexport type BooleanPropDefinitionType<T : boolean, P> = PropDefinitionType<T, P, 'boolean'>;\nexport type StringPropDefinitionType<T : string, P> = PropDefinitionType<T, P, 'string'>;\nexport type NumberPropDefinitionType<T : number, P> = PropDefinitionType<T, P, 'number'>;\nexport type FunctionPropDefinitionType<T : Function, P> = PropDefinitionType<T, P, 'function'>;\nexport type ArrayPropDefinitionType<T : Array<*>, P> = PropDefinitionType<T, P, 'array'>; // eslint-disable-line flowtype/no-mutable-array\nexport type ObjectPropDefinitionType<T : Object, P> = PropDefinitionType<T, P, 'object'>;\n\nexport type MixedPropDefinitionType<P> = BooleanPropDefinitionType<*, P> | StringPropDefinitionType<*, P> | NumberPropDefinitionType<*, P> | FunctionPropDefinitionType<*, P> | ObjectPropDefinitionType<*, P> | ArrayPropDefinitionType<*, P>;\n\nexport type UserPropsDefinitionType<P> = {\n    [string] : MixedPropDefinitionType<P>\n};\n\n// eslint-disable-next-line flowtype/require-exact-type\nexport type BuiltInPropsDefinitionType<P> = {\n    timeout : NumberPropDefinitionType<timeoutPropType, P>,\n    window : ObjectPropDefinitionType<windowPropType, P>,\n    close : FunctionPropDefinitionType<closePropType, P>,\n    focus : FunctionPropDefinitionType<focusPropType, P>,\n    resize : FunctionPropDefinitionType<resizePropType, P>,\n\n    onDisplay : FunctionPropDefinitionType<onDisplayPropType, P>,\n    onRendered : FunctionPropDefinitionType<onRenderedPropType, P>,\n    onRender : FunctionPropDefinitionType<onRenderPropType, P>,\n    onClose : FunctionPropDefinitionType<onClosePropType, P>,\n    onError : FunctionPropDefinitionType<onErrorPropType, P>,\n    onProps : FunctionPropDefinitionType<onPropsPropType<P>, P>\n};\n\nconst defaultNoop = () => noop;\nconst decorateOnce = ({ value }) => once(value);\n\nexport function getBuiltInProps<P>() : BuiltInPropsDefinitionType<P> {\n    return {\n        window: {\n            type:          'object',\n            sendToChild:   false,\n            required:      false,\n            allowDelegate: true,\n            validate({ value } : { value : CrossDomainWindowType | ProxyWindow }) {\n                if (!isWindow(value) && !ProxyWindow.isProxyWindow(value)) {\n                    throw new Error(`Expected Window or ProxyWindow`);\n                }\n            },\n            decorate({ value } : { value : CrossDomainWindowType | ProxyWindow }) : ProxyWindow {\n                return toProxyWindow(value);\n            }\n        },\n\n        timeout: {\n            type:        'number',\n            required:    false,\n            sendToChild: false\n        },\n\n        close: {\n            type:          'function',\n            required:      false,\n            sendToChild:   false,\n            childDecorate: ({ close }) => close\n        },\n\n        focus: {\n            type:          'function',\n            required:      false,\n            sendToChild:   false,\n            childDecorate: ({ focus }) => focus\n        },\n\n        resize: {\n            type:          'function',\n            required:      false,\n            sendToChild:   false,\n            childDecorate: ({ resize }) => resize\n        },\n\n        getParent: {\n            type:          'function',\n            required:      false,\n            sendToChild:   false,\n            childDecorate: ({ getParent }) => getParent\n        },\n\n        onDisplay: {\n            type:          'function',\n            required:      false,\n            sendToChild:   false,\n            allowDelegate: true,\n            default:       defaultNoop,\n            decorate:      decorateOnce\n        },\n\n        onRendered: {\n            type:        'function',\n            required:    false,\n            sendToChild: false,\n            default:     defaultNoop,\n            decorate:    decorateOnce\n        },\n\n        onRender: {\n            type:        'function',\n            required:    false,\n            sendToChild: false,\n            default:     defaultNoop,\n            decorate:    decorateOnce\n        },\n\n        onClose: {\n            type:          'function',\n            required:      false,\n            sendToChild:   false,\n            allowDelegate: true,\n            default:       defaultNoop,\n            decorate:      decorateOnce\n        },\n\n        onError: {\n            type:          'function',\n            required:      false,\n            sendToChild:   false,\n            childDecorate: ({ onError }) => onError\n        },\n\n        onProps: {\n            type:          'function',\n            required:      false,\n            sendToChild:   false,\n            default:       defaultNoop,\n            childDecorate: ({ onProps }) => onProps\n        }\n    };\n}\n","/* @flow */\n/* eslint max-lines: 0 */\n\nimport { on, send, bridge, toProxyWindow } from 'post-robot/src';\nimport { ZalgoPromise } from 'zalgo-promise/src';\nimport { isWindow, getDomainFromUrl, type CrossDomainWindowType, isSameTopWindow, getDomain, matchDomain, isSameDomain } from 'cross-domain-utils/src';\nimport { isRegex, noop, isElement } from 'belter/src';\n\nimport { ChildComponent, getChildPayload } from '../child';\nimport { ParentComponent, type RenderOptionsType, type ParentHelpers } from '../parent';\nimport { DelegateComponent } from '../delegate';\nimport { CONTEXT, POST_MESSAGE, WILDCARD, DEFAULT_DIMENSIONS } from '../constants';\nimport { react, angular, vue, angular2 } from '../drivers';\nimport type { CssDimensionsType, StringMatcherType } from '../types';\n\nimport { validate } from './validate';\nimport { defaultContainerTemplate, defaultPrerenderTemplate } from './templates';\nimport { getBuiltInProps, type UserPropsDefinitionType, type BuiltInPropsDefinitionType, type PropsInputType, type PropsType, type MixedPropDefinitionType } from './props';\n\ntype LoggerPayload = { [string] : ?string };\n\n// eslint-disable-next-line flowtype/require-exact-type\ntype Logger = {\n    debug : (event : string, payload? : LoggerPayload) => void,\n    info : (event : string, payload? : LoggerPayload) => void,\n    warn : (event : string, payload? : LoggerPayload) => void,\n    error : (event : string, payload? : LoggerPayload) => void\n};\n\n/*  Component\n    ---------\n\n    This is the spec for the component. The idea is, when I call zoid.create(), it will create a new instance\n    of Component with the blueprint needed to set up ParentComponents and ChildComponents.\n\n    This is the one portion of code which is required by -- and shared to -- both the parent and child windows, and\n    contains all of the configuration needed for them to set themselves up.\n*/\n\nexport type ComponentOptionsType<P> = {|\n\n    tag : string,\n\n    url : string | ({ props : PropsType<P> }) => string,\n    domain? : string | RegExp,\n    bridgeUrl? : string,\n\n    props? : UserPropsDefinitionType<P>,\n\n    dimensions? : CssDimensionsType,\n    autoResize? : { width? : boolean, height? : boolean, element? : string },\n\n    allowedParentDomains? : StringMatcherType,\n\n    attributes? : {\n        iframe? : { [string] : string },\n        popup? : { [string] : string }\n    },\n\n    defaultContext? : $Values<typeof CONTEXT>,\n\n    containerTemplate? : (RenderOptionsType<P>) => ?HTMLElement,\n    prerenderTemplate? : (RenderOptionsType<P>) => ?HTMLElement,\n\n    validate? : ({ props : PropsInputType<P> }) => void,\n\n    logger? : Logger\n|};\n\ntype ZoidRenderer = {|\n    render : (container? : string | HTMLElement, context? : $Values<typeof CONTEXT>) => ZalgoPromise<void>,\n    renderTo : (target : CrossDomainWindowType, container? : string, context? : $Values<typeof CONTEXT>) => ZalgoPromise<void>\n|};\n\nexport type ZoidComponentInstance<P> = {| ...ParentHelpers<P>, ...ZoidRenderer |};\n\nexport type ZoidComponent<P> = {|\n    (PropsInputType<P>) : ZoidComponentInstance<P>,\n    driver : (string, mixed) => mixed,\n    isChild : () => boolean,\n    xprops? : PropsType<P>,\n    canRenderTo : (CrossDomainWindowType) => ZalgoPromise<boolean>\n|};\n\nexport class Component<P> {\n\n    tag : string\n    name : string\n    \n    url : string | ({ props : PropsType<P> }) => string\n    domain : void | string | RegExp\n    bridgeUrl : void | string\n\n    props : UserPropsDefinitionType<P>\n    builtinProps : BuiltInPropsDefinitionType<P>\n\n    dimensions : CssDimensionsType\n    autoResize : void | { width? : boolean, height? : boolean, element? : string }\n\n    allowedParentDomains : StringMatcherType\n\n    defaultContext : $Values<typeof CONTEXT>\n    \n    attributes : {\n        iframe? : { [string] : string },\n        popup? : { [string] : string }\n    }\n\n    containerTemplate : (RenderOptionsType<P>) => ?HTMLElement\n    prerenderTemplate : ?(RenderOptionsType<P>) => ?HTMLElement\n\n    validate : void | ({ props : PropsInputType<P> }) => void\n\n    driverCache : { [string] : mixed }\n\n    xprops : ?PropsType<P>\n\n    logger : Logger\n\n    propNames : $ReadOnlyArray<string>\n\n    constructor(options : ComponentOptionsType<P>) {\n        validate(options);\n\n        // The tag name of the component. Used by some drivers (e.g. angular) to turn the component into an html element,\n        // e.g. <my-component>\n\n        this.tag = options.tag;\n        this.name = this.tag.replace(/-/g, '_');\n\n        this.allowedParentDomains = options.allowedParentDomains || WILDCARD;\n\n        if (Component.components[this.tag]) {\n            throw new Error(`Can not register multiple components with the same tag: ${ this.tag }`);\n        }\n\n        // A json based spec describing what kind of props the component accepts. This is used to validate any props before\n        // they are passed down to the child.\n\n        this.builtinProps = getBuiltInProps();\n        this.props = options.props || {};\n\n        // The dimensions of the component, e.g. { width: '300px', height: '150px' }\n\n        const { width = DEFAULT_DIMENSIONS.WIDTH, height = DEFAULT_DIMENSIONS.HEIGHT } = options.dimensions || {};\n        this.dimensions = { width, height };\n\n        this.url = options.url;\n        this.domain = options.domain;\n        this.bridgeUrl = options.bridgeUrl;\n\n        this.attributes = options.attributes || {};\n        this.attributes.iframe = this.attributes.iframe || {};\n        this.attributes.popup = this.attributes.popup || {};\n\n        this.defaultContext = options.defaultContext || CONTEXT.IFRAME;\n\n        this.autoResize = options.autoResize;\n\n        if (options.containerTemplate) {\n            this.containerTemplate = options.containerTemplate;\n        } else if (__ZOID__.__DEFAULT_CONTAINER__) {\n            this.containerTemplate = defaultContainerTemplate;\n        }\n\n        if (options.prerenderTemplate) {\n            this.prerenderTemplate = options.prerenderTemplate;\n        } else if (__ZOID__.__DEFAULT_PRERENDER__) {\n            this.prerenderTemplate = defaultPrerenderTemplate;\n        }\n\n        this.validate = options.validate;\n\n        this.logger = options.logger || {\n            debug: noop,\n            info:  noop,\n            warn:  noop,\n            error: noop\n        };\n\n        this.registerChild();\n        this.listenDelegate();\n\n        Component.components[this.tag] = this;\n    }\n\n    getPropNames() : $ReadOnlyArray<string> {\n        if (this.propNames) {\n            return this.propNames;\n        }\n\n        const propNames = Object.keys(this.props);\n        for (const key of Object.keys(this.builtinProps)) {\n            if (propNames.indexOf(key) === -1) {\n                propNames.push(key);\n            }\n        }\n\n        this.propNames = propNames;\n        return propNames;\n    }\n\n    // $FlowFixMe\n    getPropDefinition(name : string) : MixedPropDefinitionType<P> {\n        // $FlowFixMe\n        return this.props[name] || this.builtinProps[name];\n    }\n\n    driver(name : string, dep : mixed) : mixed {\n        if (__ZOID__.__FRAMEWORK_SUPPORT__) {\n            const drivers = { react, angular, vue, angular2 };\n\n            if (!drivers[name]) {\n                throw new Error(`Could not find driver for framework: ${ name }`);\n            }\n    \n            this.driverCache = this.driverCache || {};\n    \n            if (!this.driverCache[name]) {\n                this.driverCache[name] = drivers[name].register(this, dep);\n            }\n    \n            return this.driverCache[name];\n        } else {\n            throw new Error(`Driver support not enabled`);\n        }\n    }\n\n    registerChild() {\n        if (this.isChild()) {\n            if (window.xprops) {\n                throw new Error(`Can not register ${ this.name } as child - can not attach multiple components to the same window`);\n            }\n\n            const child = new ChildComponent(this);\n            window.xprops = this.xprops = child.getProps();\n        }\n    }\n\n    listenDelegate() {\n        on(`${ POST_MESSAGE.ALLOW_DELEGATE }_${ this.name }`, () => {\n            return true;\n        });\n\n        on(`${ POST_MESSAGE.DELEGATE }_${ this.name }`, ({ source, data: { context, props, overrides } }) => {\n            const delegate = new DelegateComponent(this, source, { context, props, overrides });\n            return delegate.getDelegate();\n        });\n    }\n\n    canRenderTo(win : CrossDomainWindowType) : ZalgoPromise<boolean> {\n        return send(win, `${ POST_MESSAGE.ALLOW_DELEGATE }_${ this.name }`).then(({ data }) => {\n            return data;\n        }).catch(() => {\n            return false;\n        });\n    }\n\n    getUrl(props : PropsType<P>) : string {\n        if (typeof this.url === 'function') {\n            return this.url({ props });\n        }\n\n        return this.url;\n    }\n\n    getInitialDomain(props : PropsType<P>) : string {\n        if (this.domain && typeof this.domain === 'string') {\n            return this.domain;\n        }\n\n        return getDomainFromUrl(this.getUrl(props));\n    }\n\n    getDomain(props : PropsType<P>) : string | RegExp {\n        if (isRegex(this.domain)) {\n            // $FlowFixMe\n            return this.domain;\n        }\n\n        return this.getInitialDomain(props);\n    }\n\n    getBridgeUrl() : ?string {\n        if (this.bridgeUrl) {\n            return this.bridgeUrl;\n        }\n    }\n\n    isChild() : boolean {\n        const payload = getChildPayload();\n        return Boolean(payload && payload.tag === this.tag);\n    }\n\n    getDefaultContainer<T : (string | HTMLElement)>(context : $Values<typeof CONTEXT>, container? : T) : T {\n        if (container) {\n            if (typeof container !== 'string' && !isElement(container)) {\n                throw new TypeError(`Expected string or element selector to be passed`);\n            }\n\n            return container;\n        }\n\n        if (context === CONTEXT.POPUP) {\n            // $FlowFixMe\n            return 'body';\n        }\n\n        throw new Error(`Expected element to be passed to render iframe`);\n    }\n\n    getDefaultContext(context : ?$Values<typeof CONTEXT>, props : PropsInputType<P>) : $Values<typeof CONTEXT> {\n        if (props.window) {\n            return toProxyWindow(props.window).getType();\n        }\n\n        if (context) {\n            if (context !== CONTEXT.IFRAME && context !== CONTEXT.POPUP) {\n                throw new Error(`Unrecognized context: ${ context }`);\n            }\n            \n            return context;\n        }\n\n        return this.defaultContext;\n    }\n\n    init(props : PropsInputType<P>) : ZoidComponentInstance<P> {\n\n        // $FlowFixMe\n        props = props || {};\n        \n        const parent = new ParentComponent(this, props);\n\n        const render = (target, container, context) => ZalgoPromise.try(() => {\n            if (!isWindow(target)) {\n                throw new Error(`Must pass window to renderTo`);\n            }\n\n            context = this.getDefaultContext(context, props);\n            container = this.getDefaultContainer(context, container);\n            return parent.render(target, container, context);\n        });\n\n        return {\n            ...parent.getHelpers(),\n            render:   (container, context) => render(window, container, context),\n            renderTo: (target, container, context) => render(target, container, context)\n        };\n    }\n\n    checkAllowRender(target : CrossDomainWindowType, domain : string | RegExp, container : string | HTMLElement) {\n        if (target === window) {\n            return;\n        }\n\n        if (!isSameTopWindow(window, target)) {\n            throw new Error(`Can only renderTo an adjacent frame`);\n        }\n\n        const origin = getDomain();\n\n        if (!matchDomain(domain, origin) && !isSameDomain(target)) {\n            throw new Error(`Can not render remotely to ${ domain.toString() } - can only render to ${ origin }`);\n        }\n\n        if (container && typeof container !== 'string') {\n            throw new Error(`Container passed to renderTo must be a string selector, got ${ typeof container } }`);\n        }\n    }\n\n    log(event : string, payload? : LoggerPayload) {\n        this.logger.info(`${ this.name }_${ event }`, payload);\n    }\n\n    static components : { [string] : Component<*> } = {}\n    static activeComponents : Array<ParentComponent<*> | DelegateComponent<*>> = [] // eslint-disable-line flowtype/no-mutable-array\n\n    registerActiveComponent<Q>(instance : ParentComponent<Q> | DelegateComponent<Q>) {\n        Component.activeComponents.push(instance);\n    }\n\n    destroyActiveComponent<Q>(instance : ParentComponent<Q> | DelegateComponent<Q>) {\n        Component.activeComponents.splice(Component.activeComponents.indexOf(instance), 1);\n    }\n\n    static destroyAll() : ZalgoPromise<void> {\n        if (bridge) {\n            bridge.destroyBridges();\n        }\n\n        const results = [];\n\n        while (Component.activeComponents.length) {\n            results.push(Component.activeComponents[0].destroy());\n        }\n\n        return ZalgoPromise.all(results).then(noop);\n    }\n}\n\nexport type ComponentDriverType<P, T : mixed> = {|\n    register : (Component<P>, T) => mixed\n|};\n\nexport function create<P>(options : ComponentOptionsType<P>) : ZoidComponent<P> {\n    const component : Component<P> = new Component(options);\n\n    const init = (props) => component.init(props);\n    init.driver = (name, dep) => component.driver(name, dep);\n    init.isChild = () => component.isChild();\n    init.canRenderTo = (win) => component.canRenderTo(win);\n    init.xprops = component.xprops;\n\n    // $FlowFixMe\n    return init;\n}\n\nexport function destroyAll() : ZalgoPromise<void> {\n    return Component.destroyAll();\n}\n","/* @flow */\n\nimport { isPerc, isPx, values } from 'belter/src';\n\nimport { CONTEXT, PROP_TYPE } from '../constants';\n\nimport type { ComponentOptionsType } from './index';\n\nfunction validatePropDefinitions<P>(options : ComponentOptionsType<P>) {\n\n    if (options.props && !(typeof options.props === 'object')) {\n        throw new Error(`Expected options.props to be an object`);\n    }\n\n    const PROP_TYPE_LIST = values(PROP_TYPE);\n\n    if (options.props) {\n        for (const key of Object.keys(options.props)) {\n\n            // $FlowFixMe\n            const prop = options.props[key];\n\n            if (!prop || !(typeof prop === 'object')) {\n                throw new Error(`Expected options.props.${ key } to be an object`);\n            }\n\n            if (!prop.type) {\n                throw new Error(`Expected prop.type`);\n            }\n\n            if (PROP_TYPE_LIST.indexOf(prop.type) === -1) {\n                throw new Error(`Expected prop.type to be one of ${ PROP_TYPE_LIST.join(', ') }`);\n            }\n\n            if (prop.required && prop.default) {\n                throw new Error(`Required prop can not have a default value`);\n            }\n\n            if (prop.type === PROP_TYPE.FUNCTION && prop.queryParam && !prop.queryValue) {\n                throw new Error(`Do not pass queryParam for function prop`);\n            }\n        }\n    }\n}\n\n// eslint-disable-next-line complexity\nexport function validate<P>(options : ?ComponentOptionsType<P>) { // eslint-ignore-line\n\n    if (!options) {\n        throw new Error(`Expected options to be passed`);\n    }\n\n    // eslint-disable-next-line security/detect-unsafe-regex, unicorn/no-unsafe-regex\n    if (!options.tag || !options.tag.match(/^([a-z0-9]+-)+[a-z0-9]+$/)) {\n        throw new Error(`Invalid options.tag: ${ options.tag }`);\n    }\n\n    validatePropDefinitions(options);\n\n    if (options.dimensions) {\n        if (options.dimensions && !isPx(options.dimensions.width) && !isPerc(options.dimensions.width)) {\n            throw new Error(`Expected options.dimensions.width to be a px or % string value`);\n        }\n\n        if (options.dimensions && !isPx(options.dimensions.height) && !isPerc(options.dimensions.height)) {\n            throw new Error(`Expected options.dimensions.height to be a px or % string value`);\n        }\n    }\n\n    if (options.defaultContext) {\n        if (options.defaultContext !== CONTEXT.IFRAME && options.defaultContext !== CONTEXT.POPUP) {\n            throw new Error(`Unsupported context type: ${ options.defaultContext || 'unknown' }`);\n        }\n    }\n\n    if (!options.url) {\n        throw new Error(`Must pass url`);\n    }\n\n    if (typeof options.url !== 'string' && typeof options.url !== 'function') {\n        throw new TypeError(`Expected url to be string or function`);\n    }\n\n    if (options.prerenderTemplate && typeof options.prerenderTemplate !== 'function') {\n        throw new Error(`Expected options.prerenderTemplate to be a function`);\n    }\n\n    if ((options.containerTemplate || !__ZOID__.__DEFAULT_CONTAINER__) && typeof options.containerTemplate !== 'function') {\n        throw new Error(`Expected options.containerTemplate to be a function`);\n    }\n}\n","/* @flow */\n\nexport { PopupOpenError } from 'belter/src';\nexport { create, destroyAll, Component } from './component';\nexport type { ZoidComponent, ZoidComponentInstance } from './component';\nexport type { RenderOptionsType } from './parent';\nexport { PROP_TYPE, PROP_SERIALIZATION, CONTEXT, EVENT } from './constants';\n"],"sourceRoot":""}