{"version":3,"sources":["webpack://zoid/webpack/universalModuleDefinition","webpack://zoid/webpack/bootstrap","webpack://zoid/./node_modules/@babel/runtime/helpers/esm/extends.js","webpack://zoid/./node_modules/zalgo-promise/src/utils.js","webpack://zoid/./node_modules/zalgo-promise/src/exceptions.js","webpack://zoid/./node_modules/zalgo-promise/src/flush.js","webpack://zoid/./node_modules/zalgo-promise/src/promise.js","webpack://zoid/./node_modules/cross-domain-utils/src/util.js","webpack://zoid/./node_modules/cross-domain-utils/src/constants.js","webpack://zoid/./node_modules/cross-domain-utils/src/utils.js","webpack://zoid/./node_modules/cross-domain-safe-weakmap/src/util.js","webpack://zoid/./node_modules/cross-domain-safe-weakmap/src/weakmap.js","webpack://zoid/./node_modules/belter/src/util.js","webpack://zoid/./node_modules/belter/src/dom.js","webpack://zoid/./node_modules/cross-domain-safe-weakmap/src/native.js","webpack://zoid/./node_modules/belter/src/css.js","webpack://zoid/./node_modules/post-robot/src/conf/config.js","webpack://zoid/./node_modules/post-robot/src/conf/constants.js","webpack://zoid/./node_modules/post-robot/src/global.js","webpack://zoid/./node_modules/post-robot/src/lib/hello.js","webpack://zoid/./node_modules/post-robot/src/lib/windows.js","webpack://zoid/./node_modules/universal-serialize/src/constants.js","webpack://zoid/./node_modules/universal-serialize/src/common.js","webpack://zoid/./node_modules/universal-serialize/src/serialize.js","webpack://zoid/./node_modules/universal-serialize/src/serializers/function.js","webpack://zoid/./node_modules/universal-serialize/src/serializers/error.js","webpack://zoid/./node_modules/universal-serialize/src/serializers/promise.js","webpack://zoid/./node_modules/universal-serialize/src/serializers/regex.js","webpack://zoid/./node_modules/universal-serialize/src/serializers/date.js","webpack://zoid/./node_modules/universal-serialize/src/serializers/array.js","webpack://zoid/./node_modules/universal-serialize/src/serializers/object.js","webpack://zoid/./node_modules/universal-serialize/src/serializers/string.js","webpack://zoid/./node_modules/universal-serialize/src/serializers/number.js","webpack://zoid/./node_modules/universal-serialize/src/serializers/boolean.js","webpack://zoid/./node_modules/universal-serialize/src/serializers/null.js","webpack://zoid/./node_modules/universal-serialize/src/deserialize.js","webpack://zoid/./node_modules/post-robot/src/serialize/window.js","webpack://zoid/./node_modules/post-robot/src/bridge/common.js","webpack://zoid/./node_modules/post-robot/src/serialize/function.js","webpack://zoid/./node_modules/post-robot/src/serialize/serialize.js","webpack://zoid/./node_modules/post-robot/src/serialize/promise.js","webpack://zoid/./node_modules/post-robot/src/drivers/send/strategies.js","webpack://zoid/./node_modules/post-robot/src/drivers/send/index.js","webpack://zoid/./node_modules/post-robot/src/lib/compat.js","webpack://zoid/./node_modules/post-robot/src/drivers/listeners.js","webpack://zoid/./node_modules/post-robot/src/drivers/receive/types.js","webpack://zoid/./node_modules/post-robot/src/drivers/receive/index.js","webpack://zoid/./node_modules/post-robot/src/public/on.js","webpack://zoid/./node_modules/post-robot/src/public/send.js","webpack://zoid/./node_modules/post-robot/src/index.js","webpack://zoid/./node_modules/post-robot/src/setup.js","webpack://zoid/./src/lib/global.js","webpack://zoid/./src/lib/serialize.js","webpack://zoid/./src/constants.js","webpack://zoid/./src/child/props.js","webpack://zoid/./src/child/window.js","webpack://zoid/./src/child/index.js","webpack://zoid/./src/parent/drivers.js","webpack://zoid/./src/parent/props.js","webpack://zoid/./node_modules/post-robot/src/clean.js","webpack://zoid/./src/parent/index.js","webpack://zoid/./src/delegate/index.js","webpack://zoid/./src/drivers/react.js","webpack://zoid/./node_modules/@babel/runtime/helpers/esm/inheritsLoose.js","webpack://zoid/./src/drivers/vue.js","webpack://zoid/./src/drivers/angular.js","webpack://zoid/./src/drivers/angular2.js","webpack://zoid/./src/component/templates/container.js","webpack://zoid/./src/component/templates/component.js","webpack://zoid/./src/component/props.js","webpack://zoid/./src/component/component.js","webpack://zoid/./src/component/validate.js","webpack://zoid/./src/index.js"],"names":["root","factory","exports","module","define","amd","self","this","installedModules","__webpack_require__","moduleId","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","hasOwnProperty","p","s","_extends","assign","target","arguments","length","source","apply","isPromise","item","Promise","window","Window","constructor","toString","then","err","flushPromise","dispatchedErrors","possiblyUnhandledPromiseHandlers","activeCount","flushActive","promise","resolve","startActive","endActive","ZalgoPromise","handler","_this","resolved","rejected","errorHandled","error","handlers","dispatching","stack","result","isAsync","res","reject","_proto","prototype","Error","dispatch","_this2","setTimeout","indexOf","push","j","dispatchPossiblyUnhandledError","asyncReject","_this3","_loop","_handlers$i","onSuccess","onError","catch","undefined","finally","onFinally","try","timeout","time","_this4","clearTimeout","toPromise","TypeError","all","promises","count","results","_loop2","prom","hash","keys","map","items","method","onPossiblyUnhandledException","cancel","splice","context","args","delay","flush","isRegex","PROTOCOL","MOCK","FILE","ABOUT","WILDCARD","WINDOW_TYPE","IFRAME","POPUP","IE_WIN_ACCESS_ERROR","isAboutProtocol","win","location","protocol","getParent","parent","getOpener","opener","canReadFromWindow","getActualDomain","host","getDomain","domain","mockDomain","isSameDomain","desc","getOwnPropertyDescriptor","isActuallySameDomain","assertSameDomain","isAncestorParent","child","childParent","getParents","getFrames","frames","len","frame","getAllChildFrames","_i3","_getFrames2","_i5","_getAllChildFrames2","getTop","top","_i7","_getAllChildFrames4","getAllFramesInWindow","concat","iframeWindows","iframeFrames","isWindowClosed","allowMock","closed","message","mockclosed","iframeIndex","collection","safeIndexOf","contentWindow","parentNode","doc","ownerDocument","documentElement","contains","isFrameWindowClosed","getAncestor","anyMatch","collection1","collection2","_i17","item1","_i19","getDistanceFromTop","distance","isSameTopWindow","win1","win2","top1","top2","allFrames1","allFrames2","opener1","opener2","matchDomain","pattern","origin","Array","isArray","Boolean","match","JSON","stringify","some","subpattern","getDomainFromUrl","url","split","slice","join","onCloseWindow","callback","maxtime","Infinity","check","isWindow","obj","objectIDs","awaitFrameLoadPromises","counter","Date","now","CrossDomainSafeWeakMap","weakmap","values","Math","random","WeakMap","freeze","testWeakMap","testKey","set","hasNativeWeakMap","_cleanupClosedWindows","delete","isSafeToReadWrite","entry","writable","index","has","getOrSet","base64encode","str","btoa","Buffer","from","uniqueID","chars","replace","charAt","floor","toISOString","toLowerCase","serializeArgs","subkey","val","uid","getObjectID","memoizePromise","cache","memoizedPromiseFunction","_len2","_key2","reset","inlineMemoize","logic","__inline_memoize_cache__","noop","once","called","stringifyError","level","newErr","extend","safeInterval","loop","defineLazyProp","configurable","arrayFrom","isObjectObject","isPlainObject","replaceObject","replacer","fullKey","itemKey","_loop3","isDefined","cleanup","tasks","cleaned","register","task","pop","assertExists","thing","isDocumentReady","document","body","readyState","urlEncode","waitForDocumentReady","interval","setInterval","clearInterval","parseQuery","queryString","params","_i2","_queryString$split2","pair","decodeURIComponent","extendQuery","originalQuery","props","filter","appendChild","container","isElement","element","Element","nodeType","style","getElementSafe","id","querySelector","elementReady","el","PopupOpenError","awaitFrameLoad","addEventListener","cleanIframes","linkFrameWindow","awaitFrameWindow","loadedFrame","iframe","options","tag","styleText","createElement","class","className","setAttribute","attributes","_i10","_Object$keys2","styleSheet","cssText","createTextNode","html","innerHTML","allowTransparency","backgroundColor","border","isIE","navigator","userAgent","hasAttribute","getElement","event","removeEventListener","destroyElement","removeChild","isElementClosed","onResize","_temp","_ref2","_ref2$width","width","_ref2$height","height","_ref2$interval","_ref2$win","currentWidth","offsetWidth","currentHeight","offsetHeight","observer","newWidth","newHeight","ResizeObserver","observe","MutationObserver","childList","subtree","characterData","disconnect","isPerc","test","isPx","toPx","parseInt","toNum","toCSS","MESSAGE_NAME","METHOD","HELLO","OPEN_TUNNEL","SERIALIZATION_TYPE","CROSS_DOMAIN_ZALGO_PROMISE","CROSS_DOMAIN_FUNCTION","CROSS_DOMAIN_WINDOW","getGlobal","getObj","globalStore","defStore","store","storeKey","defVal","del","WildCard","getWildcard","global","WINDOW_WILDCARD","windowStore","winStore","getStore","getInstanceID","getHelloPromise","sayHello","_ref3","send","instanceID","_ref4","data","getWindowInstanceID","_ref5","_ref6","markWindowKnown","TYPE","FUNCTION","ERROR","PROMISE","REGEX","DATE","ARRAY","OBJECT","STRING","NUMBER","BOOLEAN","NULL","UNDEFINED","isSerializedType","__type__","determineType","serializeType","type","__val__","SERIALIZER","_SERIALIZER","_ref","code","toJSON","defaultSerializers","DESERIALIZER","_DESERIALIZER","RegExp","defaultDeserializers","cleanupProxyWindows","idToProxyWindow","_idToProxyWindow$keys2","shouldClean","getSerializedWindow","windowName","close","closeWindow","getName","focus","isClosed","setLocation","href","setName","frameElement","ProxyWindow","serializedWindow","actualWindow","isProxyWindow","actualWindowPromise","setWindow","getType","isPopup","isIframe","open","getWindow","awaitWindow","matchWindow","_this5","unwrap","serialize","toProxyWindow","deserialize","on","realWin","proxyWindow","addMethod","methodStore","proxyWindowMethods","lookupMethod","serializeFunction","destination","meth","methodSource","listenForFunctionCalls","__id__","__name__","serializeMessage","_serialize","serializers","serializer","serializePromise","deserializeMessage","_deserialize","deserializers","parse","deserializer","serializedPromise","serializedFunction","getDeserializedFunction","opts","crossDomainFunctionWrapper","_arguments","fireAndForget","__origin__","__source__","deserializeFunction","_ref8","SEND_MESSAGE_STRATEGIES","sendMessage","_serializeMessage","serializedMessage","strategies","errors","strategyName","dom","forEach","postMessage","mockUserAgent","getUserAgent","foreignGlobal","receiveMessage","__DOMAIN_REGEX__","getResponseListener","deleteResponseListener","isResponseListenerErrored","getRequestListener","requestListeners","_i4","winQualifier","nameListeners","domainListeners","_i6","_domainListeners$__DO2","_domainListeners$__DO3","listener","regex","RECEIVE_MESSAGE_TYPES","_RECEIVE_MESSAGE_TYPE","sendResponse","ack","response","pathname","handleError","receivedMessages","parsedMessage","parseMessage","requestListener","addRequestListener","listenersCollection","_i8","_win2","_i12","_domain2","_i14","existingListener","regexListeners","regexListener","strDomain","errorHandler","bridge","responseTimeout","childTimeout","validateOptions","actualParent","_i15","_getFrames8","isAncestor","awaitWindowHello","normalizeDomain","targetDomain","logName","responseListener","addResponseListener","reqPromises","markResponseListenerErrored","totalAckTimeout","isWindowKnown","totalResTimeout","ackTimeout","resTimeout","cancelled","max","internalSerializeMessage","internalDeserializeMessage","getProxyObject","ZOID","POST_MESSAGE","PROP_TYPE","PROP_SERIALIZATION","DOTIFY","BASE64","CONTEXT","DEFAULT_DIMENSIONS","WIDTH","HEIGHT","EVENT","RENDER","RENDERED","DISPLAY","CLOSE","PROPS","RESIZE","normalizeChildProp","component","helpers","prop","getPropDefinition","childDecorate","parseChildWindowName","_windowName$split","zoidcomp","encodedPayload","atob","base64decode","getChildPayload","ChildComponent","parentDomain","parentComponentWindow","onPropHandlers","autoResize","childPayload","__ZOID__","version","getParentComponentWindow","checkParentDomain","initialProps","getPropsByRef","setProps","watchForClose","init","buildExports","watchForResize","getHelpers","resize","onProps","getParentDomain","allowedParentDomains","ref","getNthParent","ancestor","_getAllFramesInWindow2","windows","getProps","isUpdate","existingProps","sameDomain","alias","_component$getPropNam2","getPropNames","normalizeChildProps","_this$onPropHandlers2","checkClose","destroy","getAutoResize","_ref3$width","_ref3$height","_ref3$element","_this4$getAutoResize","updateProps","_this6","RENDER_DRIVERS","getQueryParam","queryParam","getQueryValue","queryValue","openOnClick","openFrame","title","proxyFrame","frameWatcher","clean","_requestPromises$get2","cleanUpWindow","openPrerenderFrame","openPrerender","proxyWin","proxyPrerenderFrame","prerenderFrame","prerenderFrameWindow","delegate","ParentComponent","driver","initPromise","handledErrors","state","setupEvents","registerActiveComponent","destroyActiveComponent","watchForUnload","triggered","eventName","handlerList","trigger","_len3","_key3","triggerOnce","_len4","_key4","onRender","onDisplay","onRendered","onClose","render","log","childDomain","getChildDomain","checkAllowRender","buildUrl","getProxyContainer","renderContainer","setState","setProxyWin","prerender","loadUrl","setWindowName","buildWindowName","openBridge","runTimeout","containerElement","buildChildPayload","getPropsRef","getPropsForChild","propRef","_ref7","_ref7$target","getWindowRef","buildParentExports","validate","inputProps","propNames","aliases","propDef","default","_Object$keys4","decorate","required","extendProps","propsDef","builtinProps","serialization","dotify","prefix","newobj","every","_Object$keys6","dotkey","query","originalUrl","originalHash","_url$split","_originalUrl$split","hashString","extendUrl","normalizeMockUrl","getUrl","sendToChild","_this7","_this8","_this9","_this10","windowProp","_this11","_this12","_this13","_this$component$getPr2","propName","allowDelegate","overridesPromise","overrides","_ref9","_this$driver$delegate2","_this14","_this15","_this16","unloadWindowListener","_this17","initChild","_this18","_this19","_ref10","_ref11","_this20","_this21","secondClosed","_this22","proxyPrerenderWin","_ref12","_this23","prerenderTemplate","prerenderWindow","isBlankDomain","renderTemplate","tagName","_arrayFrom2","children","_arrayFrom4","writeElementToWindow","_ref13","_ref13$width","_ref13$height","_ref13$element","_ref14","renderer","_ref15","_this24","dimensions","proxyContainer","_ref16","_this25","_ref17","innerContainer","containerTemplate","_this26","_this27","DelegateComponent","watchForSourceClose","getDelegate","getOverrides","closeSourceWindowListener","react","React","ReactDOM","_React$Component","subClass","superClass","_class","__proto__","componentDidMount","findDOMNode","componentDidUpdate","Component","vue","Vue","inheritAttrs","mounted","$el","$attrs","watch","deep","angular","ng","directive","g","toUpperCase","scope","restrict","controller","$scope","$element","$root","$$phase","$apply","safeApply","instance","$watch","angular2","zoid","AngularComponent","NgModule","ElementRef","NgZone","internalProps","zone","run","ComponentInstance","selector","template","inputs","Class","elementRef","_props","ngOnInit","targetElement","nativeElement","ngDoCheck","obj1","obj2","checked","equals","declarations","CLASS","VISIBLE","INVISIBLE","defaultContainerTemplate","_ref$dimensions","div","cspNonce","classList","add","remove","defaultPrerenderTemplate","spinner","defaultNoop","decorateOnce","bridgeUrl","defaultContext","driverCache","xprops","logger","PROP_TYPE_LIST","validatePropDefinitions","components","_ref$width","_ref$height","popup","debug","info","warn","registerChild","listenDelegate","dep","drivers","isChild","_ref2$data","canRenderTo","getBridgeUrl","payload","getDefaultContainer","getDefaultContext","renderTo","activeComponents","initialized","sourceElement","originalEvent","messageListener","listenForMessages","initHello","destroyAll","destroyBridges","destroyComponents","responseListeners","_responseListeners$ke2","cancelResponseListeners","__webpack_exports__","component_destroy","component_Component"],"mappings":"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","file":"zoid.frameworks.min.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"zoid\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"zoid\"] = factory();\n\telse\n\t\troot[\"zoid\"] = factory();\n})((typeof self !== 'undefined' ? self : this), function() {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 0);\n","export default function _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}","/* @flow */\n\nexport function isPromise(item : mixed) : boolean {\n    try {\n        if (!item) {\n            return false;\n        }\n\n        if (typeof Promise !== 'undefined' && item instanceof Promise) {\n            return true;\n        }\n\n        if (typeof window !== 'undefined' && window.Window && item instanceof window.Window) {\n            return false;\n        }\n\n        if (typeof window !== 'undefined' && window.constructor && item instanceof window.constructor) {\n            return false;\n        }\n\n        let toString = ({}).toString;\n\n        if (toString) {\n            let name = toString.call(item);\n\n            if (name === '[object Window]' || name === '[object global]' || name === '[object DOMWindow]') {\n                return false;\n            }\n        }\n\n        if (typeof item.then === 'function') {\n            return true;\n        }\n    } catch (err) {\n        return false;\n    }\n\n    return false;\n}\n","/* @flow */\n\nimport type { ZalgoPromise } from './promise';\n\nconst dispatchedErrors = [];\nconst possiblyUnhandledPromiseHandlers = [];\n\nexport function dispatchPossiblyUnhandledError<T>(err : mixed, promise : ZalgoPromise<T>) {\n\n    if (dispatchedErrors.indexOf(err) !== -1) {\n        return;\n    }\n\n    dispatchedErrors.push(err);\n\n    setTimeout(() => {\n        if (__DEBUG__) {\n            // $FlowFixMe\n            throw new Error(`${ err.stack || err.toString() }\\n\\nFrom promise:\\n\\n${ promise.stack }`);\n        }\n\n        throw err;\n    }, 1);\n\n    for (let j = 0; j < possiblyUnhandledPromiseHandlers.length; j++) {\n        // $FlowFixMe\n        possiblyUnhandledPromiseHandlers[j](err, promise);\n    }\n}\n\nexport function onPossiblyUnhandledException(handler : (mixed, promise? : ZalgoPromise<*>) => void) : { cancel : () => void } {\n    possiblyUnhandledPromiseHandlers.push(handler);\n\n    return {\n        cancel() {\n            possiblyUnhandledPromiseHandlers.splice(possiblyUnhandledPromiseHandlers.indexOf(handler), 1);\n        }\n    };\n}\n","/* @flow */\n\nimport type { ZalgoPromise } from './promise';\n\nlet activeCount = 0;\nlet flushPromise;\n\nfunction flushActive() {\n    if (!activeCount && flushPromise) {\n        const promise = flushPromise;\n        flushPromise = null;\n        promise.resolve();\n    }\n}\n\nexport function startActive() {\n    activeCount += 1;\n}\n\nexport function endActive() {\n    activeCount -= 1;\n    flushActive();\n}\n\nexport function awaitActive(Zalgo : Class<ZalgoPromise<*>>) : ZalgoPromise<void> { // eslint-disable-line no-undef\n    let promise = flushPromise = flushPromise || new Zalgo();\n    flushActive();\n    return promise;\n}\n","/* @flow */\n\nimport { isPromise } from './utils';\nimport { onPossiblyUnhandledException, dispatchPossiblyUnhandledError } from './exceptions';\nimport { startActive, endActive, awaitActive } from './flush';\n\nexport class ZalgoPromise<R : mixed> {\n\n    resolved : boolean\n    rejected : boolean\n    errorHandled : boolean\n    value : R\n    error : mixed\n    handlers : Array<{\n        promise : ZalgoPromise<*>,\n        onSuccess : void | (result : R) => mixed,\n        onError : void | (error : mixed) => mixed\n    }>\n    dispatching : boolean\n    stack : string\n\n    constructor(handler : ?(resolve : (result : R) => void, reject : (error : mixed) => void) => void) {\n\n        this.resolved = false;\n        this.rejected = false;\n        this.errorHandled = false;\n\n        this.handlers = [];\n\n        if (handler) {\n\n            let result;\n            let error;\n            let resolved = false;\n            let rejected = false;\n            let isAsync = false;\n\n            startActive();\n\n            try {\n                handler(res => {\n                    if (isAsync) {\n                        this.resolve(res);\n                    } else {\n                        resolved = true;\n                        result = res;\n                    }\n\n                }, err => {\n                    if (isAsync) {\n                        this.reject(err);\n                    } else {\n                        rejected = true;\n                        error = err;\n                    }\n                });\n\n            } catch (err) {\n                endActive();\n                this.reject(err);\n                return;\n            }\n\n            endActive();\n\n            isAsync = true;\n\n            if (resolved) {\n                // $FlowFixMe\n                this.resolve(result);\n            } else if (rejected) {\n                this.reject(error);\n            }\n        }\n\n        if (__DEBUG__) {\n            try {\n                throw new Error(`ZalgoPromise`);\n            } catch (err) {\n                this.stack = err.stack;\n            }\n        }\n    }\n\n    resolve(result : R) : ZalgoPromise<R> {\n        if (this.resolved || this.rejected) {\n            return this;\n        }\n\n        if (isPromise(result)) {\n            throw new Error('Can not resolve promise with another promise');\n        }\n\n        this.resolved = true;\n        this.value = result;\n        this.dispatch();\n\n        return this;\n    }\n\n    reject(error : mixed) : ZalgoPromise<R> {\n        if (this.resolved || this.rejected) {\n            return this;\n        }\n\n        if (isPromise(error)) {\n            throw new Error('Can not reject promise with another promise');\n        }\n\n        if (!error) {\n            let err = (error && typeof error.toString === 'function' ? error.toString() : Object.prototype.toString.call(error));\n            error = new Error(`Expected reject to be called with Error, got ${ err }`);\n        }\n\n        this.rejected = true;\n        this.error = error;\n\n        if (!this.errorHandled) {\n            setTimeout(() => {\n                if (!this.errorHandled) {\n                    dispatchPossiblyUnhandledError(error, this);\n                }\n            }, 1);\n        }\n\n        this.dispatch();\n\n        return this;\n    }\n\n    asyncReject(error : mixed) : ZalgoPromise<R> {\n        this.errorHandled = true;\n        this.reject(error);\n        return this;\n    }\n    \n    dispatch() {\n\n        let { dispatching, resolved, rejected, handlers } = this;\n\n        if (dispatching) {\n            return;\n        }\n\n        if (!resolved && !rejected) {\n            return;\n        }\n\n        this.dispatching = true;\n        startActive();\n\n        for (let i = 0; i < handlers.length; i++) {\n\n            let { onSuccess, onError, promise } = handlers[i];\n\n            let result;\n\n            if (resolved) {\n\n                try {\n                    result = onSuccess ? onSuccess(this.value) : this.value;\n                } catch (err) {\n                    promise.reject(err);\n                    continue;\n                }\n\n            } else if (rejected) {\n\n                if (!onError) {\n                    promise.reject(this.error);\n                    continue;\n                }\n\n                try {\n                    result = onError(this.error);\n                } catch (err) {\n                    promise.reject(err);\n                    continue;\n                }\n            }\n\n            if (result instanceof ZalgoPromise && (result.resolved || result.rejected)) {\n\n                if (result.resolved) {\n                    promise.resolve(result.value);\n                } else {\n                    promise.reject(result.error);\n                }\n\n                result.errorHandled = true;\n\n            } else if (isPromise(result)) {\n\n                if (result instanceof ZalgoPromise && (result.resolved || result.rejected)) {\n                    if (result.resolved) {\n                        promise.resolve(result.value);\n                    } else {\n                        promise.reject(result.error);\n                    }\n\n                } else {\n                    // $FlowFixMe\n                    result.then(res => {\n                        promise.resolve(res);\n                    }, err => {\n                        promise.reject(err);\n                    });\n                }\n\n            } else {\n\n                promise.resolve(result);\n            }\n        }\n\n        handlers.length = 0;\n        this.dispatching = false;\n        endActive();\n    }\n\n    then<X : mixed, Y : mixed>(onSuccess : void | (result : R) => (ZalgoPromise<X> | Y), onError : void | (error : mixed) => (ZalgoPromise<X> | Y)) : ZalgoPromise<X | Y> {\n\n        if (onSuccess && typeof onSuccess !== 'function' && !onSuccess.call) {\n            throw new Error('Promise.then expected a function for success handler');\n        }\n\n        if (onError && typeof onError !== 'function' && !onError.call) {\n            throw new Error('Promise.then expected a function for error handler');\n        }\n\n        let promise : ZalgoPromise<X | Y> = new ZalgoPromise();\n\n        this.handlers.push({\n            promise,\n            onSuccess,\n            onError\n        });\n\n        this.errorHandled = true;\n\n        this.dispatch();\n\n        return promise;\n    }\n\n    catch<X : mixed, Y : mixed>(onError : (error : mixed) => ZalgoPromise<X> | Y) : ZalgoPromise<X | Y> {\n        return this.then(undefined, onError);\n    }\n\n    finally(onFinally : () => mixed) : ZalgoPromise<R> {\n\n        if (onFinally && typeof onFinally !== 'function' && !onFinally.call) {\n            throw new Error('Promise.finally expected a function');\n        }\n\n        return this.then((result) => {\n            return ZalgoPromise.try(onFinally)\n                .then(() => {\n                    return result;\n                });\n        }, (err) => {\n            return ZalgoPromise.try(onFinally)\n                .then(() => {\n                    throw err;\n                });\n        });\n    }\n\n    timeout(time : number, err : ?Error) : ZalgoPromise<R> {\n\n        if (this.resolved || this.rejected) {\n            return this;\n        }\n\n        let timeout = setTimeout(() => {\n\n            if (this.resolved || this.rejected) {\n                return;\n            }\n\n            this.reject(err || new Error(`Promise timed out after ${ time }ms`));\n\n        }, time);\n\n        return this.then(result => {\n            clearTimeout(timeout);\n            return result;\n        });\n    }\n\n    // $FlowFixMe\n    toPromise() : Promise<R> {\n        // $FlowFixMe\n        if (typeof Promise === 'undefined') {\n            throw new TypeError(`Could not find Promise`);\n        }\n        // $FlowFixMe\n        return Promise.resolve(this); // eslint-disable-line compat/compat\n    }\n\n    static resolve<X : mixed>(value : X | ZalgoPromise<X>) : ZalgoPromise<X> {\n\n        if (value instanceof ZalgoPromise) {\n            return value;\n        }\n\n        if (isPromise(value)) {\n            // $FlowFixMe\n            return new ZalgoPromise((resolve, reject) => value.then(resolve, reject));\n        }\n\n        return new ZalgoPromise().resolve(value);\n    }\n\n    static reject(error : mixed) : ZalgoPromise<R> {\n        return new ZalgoPromise().reject(error);\n    }\n\n    static asyncReject(error : mixed) : ZalgoPromise<R> {\n        return new ZalgoPromise().asyncReject(error);\n    }\n\n    static all<X : [*] | [*, *] | [*, *, *] | [*, *, *, *] | [*, *, *, *, *] | [*, *, *, *, *, *] | [*, *, *, *, *, *, *] | [*, *, *, *, *, *, *, *] | [*, *, *, *, *, *, *, *, *] | Array<mixed>>(promises : X) : ZalgoPromise<$TupleMap<X, <Y>(ZalgoPromise<Y> | Y) => Y>> { // eslint-disable-line no-undef\n\n        let promise = new ZalgoPromise();\n        let count = promises.length;\n        let results = [];\n\n        if (!count) {\n            promise.resolve(results);\n            return promise;\n        }\n\n        for (let i = 0; i < promises.length; i++) {\n            let prom = promises[i];\n\n            if (prom instanceof ZalgoPromise) {\n                if (prom.resolved) {\n                    results[i] = prom.value;\n                    count -= 1;\n                    continue;\n                }\n            } else if (!isPromise(prom)) {\n                results[i] = prom;\n                count -= 1;\n                continue;\n            }\n\n            ZalgoPromise.resolve(prom).then(result => {\n                results[i] = result;\n                count -= 1;\n                if (count === 0) {\n                    promise.resolve(results);\n                }\n            }, err => {\n                promise.reject(err);\n            });\n        }\n\n        if (count === 0) {\n            promise.resolve(results);\n        }\n\n        return promise;\n    }\n\n    static hash<O : { [string] : * }>(promises : O) : ZalgoPromise<$ObjMap<O, <Y>(ZalgoPromise<Y> | Y) => Y>> { // eslint-disable-line no-undef\n        let result = {};\n        \n        return ZalgoPromise.all(Object.keys(promises).map(key => {\n            return ZalgoPromise.resolve(promises[key]).then(value => {\n                result[key] = value;\n            });\n        })).then(() => {\n            return result;\n        });\n    }\n\n    static map<T, X>(items : Array<T>, method : (T) => (ZalgoPromise<X> | X)) : ZalgoPromise<Array<X>> {\n        // $FlowFixMe\n        return ZalgoPromise.all(items.map(method));\n    }\n\n    static onPossiblyUnhandledException(handler : (err : mixed) => void) : { cancel : () => void } {\n        return onPossiblyUnhandledException(handler);\n    }\n\n    static try<X : mixed, Y : mixed, C : mixed, A : Array<mixed>>(method : (...args : A) => (ZalgoPromise<X> | Y), context : ?C, args : ?A) : ZalgoPromise<X | Y> {\n\n        if (method && typeof method !== 'function' && !method.call) {\n            throw new Error('Promise.try expected a function');\n        }\n\n        let result;\n\n        startActive();\n        \n        try {\n            // $FlowFixMe\n            result = method.apply(context, args || []);\n        } catch (err) {\n            endActive();\n            return ZalgoPromise.reject(err);\n        }\n\n        endActive();\n\n        return ZalgoPromise.resolve(result);\n    }\n\n    static delay(delay : number) : ZalgoPromise<void> {\n        return new ZalgoPromise(resolve => {\n            setTimeout(resolve, delay);\n        });\n    }\n\n    static isPromise(value : mixed) : boolean {\n\n        if (value && value instanceof ZalgoPromise) {\n            return true;\n        }\n\n        return isPromise(value);\n    }\n\n    static flush() : ZalgoPromise<void> {\n        return awaitActive(ZalgoPromise);\n    }\n}\n","/* @flow */\n\nexport function isRegex(item : mixed) : boolean {\n    return Object.prototype.toString.call(item) === '[object RegExp]';\n}\n\n// eslint-disable-next-line no-unused-vars\nexport function noop(...args : Array<mixed>) {\n    // pass\n}\n","/* @flow */\n\nexport const PROTOCOL = {\n    MOCK:  ('mock:' : 'mock:'),\n    FILE:  ('file:' : 'file:'),\n    ABOUT: ('about:' : 'about:')\n};\n\nexport const WILDCARD = '*';\n\nexport const WINDOW_TYPE = {\n    IFRAME: ('iframe' : 'iframe'),\n    POPUP:  ('popup' : 'popup')\n};\n","/* @flow */\n/* eslint max-lines: 0 */\n\nimport { isRegex, noop } from './util';\nimport type { CrossDomainWindowType, SameDomainWindowType, DomainMatcher } from './types';\nimport { PROTOCOL, WILDCARD } from './constants';\n\nlet IE_WIN_ACCESS_ERROR = 'Call was rejected by callee.\\r\\n';\n\nexport function isFileProtocol(win : SameDomainWindowType = window) : boolean {\n    return win.location.protocol === PROTOCOL.FILE;\n}\n\nexport function isAboutProtocol(win : SameDomainWindowType = window) : boolean {\n    return win.location.protocol === PROTOCOL.ABOUT;\n}\n\nexport function getParent(win? : CrossDomainWindowType = window) : ?CrossDomainWindowType {\n\n    if (!win) {\n        return;\n    }\n\n    try {\n        if (win.parent && win.parent !== win) {\n            return win.parent;\n        }\n    } catch (err) {\n        // pass\n    }\n}\n\nexport function getOpener(win? : CrossDomainWindowType = window) : ?CrossDomainWindowType {\n\n    if (!win) {\n        return;\n    }\n\n    // Make sure we're not actually an iframe which has had window.open() called on us\n    if (getParent(win)) {\n        return;\n    }\n\n    try {\n        return win.opener;\n    } catch (err) {\n        // pass\n    }\n}\n\nexport function canReadFromWindow(win : CrossDomainWindowType | SameDomainWindowType) : boolean {\n    try {\n        // $FlowFixMe\n        noop(win && win.location && win.location.href);\n        return true;\n    } catch (err) {\n        // pass\n    }\n\n    return false;\n}\n\nexport function getActualDomain(win : ?SameDomainWindowType) : string {\n\n    win = win || window;\n\n    let location = win.location;\n\n    if (!location) {\n        throw new Error(`Can not read window location`);\n    }\n\n    let protocol = location.protocol;\n\n    if (!protocol) {\n        throw new Error(`Can not read window protocol`);\n    }\n\n    if (protocol === PROTOCOL.FILE) {\n        return `${ PROTOCOL.FILE }//`;\n    }\n\n    if (protocol === PROTOCOL.ABOUT) {\n\n        let parent = getParent(win);\n        if (parent && canReadFromWindow(parent)) {\n            // $FlowFixMe\n            return getActualDomain(parent);\n        }\n\n        return `${ PROTOCOL.ABOUT }//`;\n    }\n\n    let host = location.host;\n\n    if (!host) {\n        throw new Error(`Can not read window host`);\n    }\n\n    return `${ protocol }//${ host }`;\n}\n\nexport function getDomain(win : ?SameDomainWindowType) : string {\n\n    win = win || window;\n\n    let domain = getActualDomain(win);\n\n    if (domain && win.mockDomain && win.mockDomain.indexOf(PROTOCOL.MOCK) === 0) {\n        return win.mockDomain;\n    }\n\n    return domain;\n}\n\nexport function isBlankDomain(win : CrossDomainWindowType) : boolean {\n    try {\n        // $FlowFixMe\n        if (!win.location.href) {\n            return true;\n        }\n\n        if (win.location.href === 'about:blank') {\n            return true;\n        }\n    } catch (err) {\n        // pass\n    }\n\n    return false;\n}\n\nexport function isActuallySameDomain(win : CrossDomainWindowType) : boolean {\n\n    try {\n        if (win === window) {\n            return true;\n        }\n\n    } catch (err) {\n        // pass\n    }\n\n    try {\n        let desc = Object.getOwnPropertyDescriptor(win, 'location');\n\n        if (desc && desc.enumerable === false) {\n            return false;\n        }\n\n    } catch (err) {\n        // pass\n    }\n\n    try {\n        // $FlowFixMe\n        if (isAboutProtocol(win) && canReadFromWindow(win)) {\n            return true;\n        }\n    } catch (err) {\n        // pass\n    }\n\n    try {\n        // $FlowFixMe\n        if (getActualDomain(win) === getActualDomain(window)) {\n            return true;\n        }\n\n    } catch (err) {\n        // pass\n    }\n\n    return false;\n}\n\nexport function isSameDomain(win : CrossDomainWindowType | SameDomainWindowType) : boolean {\n\n    if (!isActuallySameDomain(win)) {\n        return false;\n    }\n\n    try {\n\n        if (win === window) {\n            return true;\n        }\n\n        // $FlowFixMe\n        if (isAboutProtocol(win) && canReadFromWindow(win)) {\n            return true;\n        }\n\n        // $FlowFixMe\n        if (getDomain(window) === getDomain(win)) {\n            return true;\n        }\n\n    } catch (err) {\n        // pass\n    }\n\n    return false;\n}\n\n\nexport function assertSameDomain(win : CrossDomainWindowType | SameDomainWindowType) : SameDomainWindowType {\n    if (!isSameDomain(win)) {\n        throw new Error(`Expected window to be same domain`);\n    }\n\n    // $FlowFixMe\n    return win;\n}\n\nexport function getParents(win : CrossDomainWindowType) : Array<CrossDomainWindowType> {\n\n    let result = [];\n\n    try {\n\n        while (win.parent !== win) {\n            result.push(win.parent);\n            win = win.parent;\n        }\n\n    } catch (err) {\n        // pass\n    }\n\n    return result;\n}\n\nexport function isAncestorParent(parent : CrossDomainWindowType, child : CrossDomainWindowType) : boolean {\n\n    if (!parent || !child) {\n        return false;\n    }\n\n    let childParent = getParent(child);\n\n    if (childParent) {\n        return childParent === parent;\n    }\n\n    if (getParents(child).indexOf(parent) !== -1) {\n        return true;\n    }\n\n    return false;\n}\n\nexport function getFrames(win : CrossDomainWindowType) : Array<CrossDomainWindowType> {\n\n    let result = [];\n\n    let frames;\n\n    try {\n        frames = win.frames;\n    } catch (err) {\n        frames = win;\n    }\n\n    let len;\n\n    try {\n        len = frames.length;\n    } catch (err) {\n        // pass\n    }\n\n    if (len === 0) {\n        return result;\n    }\n\n    if (len) {\n        for (let i = 0; i < len; i++) {\n\n            let frame;\n\n            try {\n                frame = frames[i];\n            } catch (err) {\n                continue;\n            }\n\n            result.push(frame);\n        }\n\n        return result;\n    }\n\n    for (let i = 0; i < 100; i++) {\n        let frame;\n\n        try {\n            frame = frames[i];\n        } catch (err) {\n            return result;\n        }\n\n        if (!frame) {\n            return result;\n        }\n\n        result.push(frame);\n    }\n\n    return result;\n}\n\n\nexport function getAllChildFrames(win : CrossDomainWindowType) : Array<CrossDomainWindowType> {\n\n    let result = [];\n\n    for (let frame of getFrames(win)) {\n        result.push(frame);\n\n        for (let childFrame of getAllChildFrames(frame)) {\n            result.push(childFrame);\n        }\n    }\n\n    return result;\n}\n\nexport function getTop(win : CrossDomainWindowType) : ?CrossDomainWindowType {\n\n    if (!win) {\n        return;\n    }\n\n    try {\n        if (win.top) {\n            return win.top;\n        }\n    } catch (err) {\n        // pass\n    }\n\n    if (getParent(win) === win) {\n        return win;\n    }\n\n    try {\n        if (isAncestorParent(window, win) && window.top) {\n            return window.top;\n        }\n    } catch (err) {\n        // pass\n    }\n\n    try {\n        if (isAncestorParent(win, window) && window.top) {\n            return window.top;\n        }\n    } catch (err) {\n        // pass\n    }\n\n    for (let frame of getAllChildFrames(win)) {\n        try {\n            if (frame.top) {\n                return frame.top;\n            }\n        } catch (err) {\n            // pass\n        }\n\n        if (getParent(frame) === frame) {\n            return frame;\n        }\n    }\n}\n\nexport function getNextOpener(win? : CrossDomainWindowType = window) : ?CrossDomainWindowType {\n    return getOpener(getTop(win) || win);\n}\n\nexport function getUltimateTop(win? : CrossDomainWindowType = window) : CrossDomainWindowType {\n    let opener = getNextOpener(win);\n\n    if (opener) {\n        return getUltimateTop(opener);\n    }\n\n    return top;\n}\n\nexport function getAllFramesInWindow(win : CrossDomainWindowType) : Array<CrossDomainWindowType> {\n    let top = getTop(win);\n\n    if (!top) {\n        throw new Error(`Can not determine top window`);\n    }\n\n    return [ ...getAllChildFrames(top), top ];\n}\n\nexport function getAllWindows(win? : CrossDomainWindowType = window) : $ReadOnlyArray<CrossDomainWindowType> {\n    let frames = getAllFramesInWindow(win);\n    let opener = getNextOpener(win);\n\n    if (opener) {\n        return [ ...getAllWindows(opener), ...frames ];\n    } else {\n        return frames;\n    }\n}\n\nexport function isTop(win : CrossDomainWindowType) : boolean {\n    return win === getTop(win);\n}\n\nexport function isFrameWindowClosed(frame : HTMLIFrameElement) : boolean {\n\n    if (!frame.contentWindow) {\n        return true;\n    }\n\n    if (!frame.parentNode) {\n        return true;\n    }\n\n    let doc = frame.ownerDocument;\n\n    if (doc && doc.documentElement && !doc.documentElement.contains(frame)) {\n        return true;\n    }\n\n    return false;\n}\n\nfunction safeIndexOf<T>(collection : Array<T>, item : T) : number {\n    for (let i = 0; i < collection.length; i++) {\n\n        try {\n            if (collection[i] === item) {\n                return i;\n            }\n        } catch (err) {\n            // pass\n        }\n    }\n\n    return -1;\n}\n\nlet iframeWindows = [];\nlet iframeFrames = [];\n\nexport function isWindowClosed(win : CrossDomainWindowType, allowMock : boolean = true) : boolean {\n\n    try {\n        if (win === window) {\n            return false;\n        }\n    } catch (err) {\n        return true;\n    }\n\n    try {\n        if (!win) {\n            return true;\n        }\n\n    } catch (err) {\n        return true;\n    }\n\n    try {\n        if (win.closed) {\n            return true;\n        }\n\n    } catch (err) {\n\n        // I love you so much IE\n\n        if (err && err.message === IE_WIN_ACCESS_ERROR) {\n            return false;\n        }\n\n        return true;\n    }\n\n\n    if (allowMock && isSameDomain(win)) {\n        try {\n            // $FlowFixMe\n            if (win.mockclosed) {\n                return true;\n            }\n        } catch (err) {\n            // pass\n        }\n    }\n\n    // Mobile safari\n\n    try {\n        if (!win.parent || !win.top) {\n            return true;\n        }\n    } catch (err) {\n        // pass\n    }\n\n    // Yes, this actually happens in IE. win === win errors out when the window\n    // is from an iframe, and the iframe was removed from the page.\n\n    try {\n        noop(win === win); // eslint-disable-line no-self-compare\n    } catch (err) {\n        return true;\n    }\n\n    // IE orphaned frame\n\n    let iframeIndex = safeIndexOf(iframeWindows, win);\n\n    if (iframeIndex !== -1) {\n        let frame = iframeFrames[iframeIndex];\n\n        if (frame && isFrameWindowClosed(frame)) {\n            return true;\n        }\n    }\n\n    return false;\n}\n\nfunction cleanIframes() {\n    for (let i = 0; i < iframeWindows.length; i++) {\n        let closed = false;\n\n        try {\n            closed = iframeWindows[i].closed;\n        } catch (err) {\n            // pass\n        }\n\n        if (closed) {\n            iframeFrames.splice(i, 1);\n            iframeWindows.splice(i, 1);\n        }\n    }\n}\n\nexport function linkFrameWindow(frame : HTMLIFrameElement) {\n\n    cleanIframes();\n\n    if (frame && frame.contentWindow) {\n        try {\n            iframeWindows.push(frame.contentWindow);\n            iframeFrames.push(frame);\n        } catch (err) {\n            // pass\n        }\n    }\n}\n\nexport function getUserAgent(win : ?SameDomainWindowType) : string {\n    win = win || window;\n    return win.navigator.mockUserAgent || win.navigator.userAgent;\n}\n\n\nexport function getFrameByName(win : CrossDomainWindowType, name : string) : ?CrossDomainWindowType {\n\n    let winFrames = getFrames(win);\n\n    for (let childFrame of winFrames) {\n        try {\n            // $FlowFixMe\n            if (isSameDomain(childFrame) && childFrame.name === name && winFrames.indexOf(childFrame) !== -1) {\n                return childFrame;\n            }\n        } catch (err) {\n            // pass\n        }\n    }\n\n    try {\n        // $FlowFixMe\n        if (winFrames.indexOf(win.frames[name]) !== -1) {\n            // $FlowFixMe\n            return win.frames[name];\n        }\n    } catch (err) {\n        // pass\n    }\n\n    try {\n        if (winFrames.indexOf(win[name]) !== -1) {\n            return win[name];\n        }\n    } catch (err) {\n        // pass\n    }\n}\n\nexport function findChildFrameByName(win : CrossDomainWindowType, name : string) : ?CrossDomainWindowType {\n\n    let frame = getFrameByName(win, name);\n\n    if (frame) {\n        return frame;\n    }\n\n    for (let childFrame of getFrames(win)) {\n        let namedFrame = findChildFrameByName(childFrame, name);\n\n        if (namedFrame) {\n            return namedFrame;\n        }\n    }\n}\n\nexport function findFrameByName(win : CrossDomainWindowType, name : string) : ?CrossDomainWindowType {\n\n    let frame;\n\n    frame = getFrameByName(win, name);\n\n    if (frame) {\n        return frame;\n    }\n\n    let top = getTop(win) || win;\n\n    return findChildFrameByName(top, name);\n}\n\nexport function isParent(win : CrossDomainWindowType, frame : CrossDomainWindowType) : boolean {\n\n    let frameParent = getParent(frame);\n\n    if (frameParent) {\n        return frameParent === win;\n    }\n\n    for (let childFrame of getFrames(win)) {\n        if (childFrame === frame) {\n            return true;\n        }\n    }\n\n    return false;\n}\n\nexport function isOpener(parent : CrossDomainWindowType, child : CrossDomainWindowType) : boolean {\n\n    return parent === getOpener(child);\n}\n\nexport function getAncestor(win? : CrossDomainWindowType = window) : ?CrossDomainWindowType {\n    win = win || window;\n\n    let opener = getOpener(win);\n\n    if (opener) {\n        return opener;\n    }\n\n    let parent = getParent(win);\n\n    if (parent) {\n        return parent;\n    }\n}\n\nexport function getAncestors(win : CrossDomainWindowType) : Array<CrossDomainWindowType> {\n\n    let results = [];\n\n    let ancestor = win;\n\n    while (ancestor) {\n        ancestor = getAncestor(ancestor);\n        if (ancestor) {\n            results.push(ancestor);\n        }\n    }\n\n    return results;\n}\n\n\nexport function isAncestor(parent : CrossDomainWindowType, child : CrossDomainWindowType) : boolean {\n\n    let actualParent = getAncestor(child);\n\n    if (actualParent) {\n        if (actualParent === parent) {\n            return true;\n        }\n\n        return false;\n    }\n\n    if (child === parent) {\n        return false;\n    }\n\n    if (getTop(child) === child) {\n        return false;\n    }\n\n    for (let frame of getFrames(parent)) {\n        if (frame === child) {\n            return true;\n        }\n    }\n\n    return false;\n}\n\nexport function isPopup() : boolean {\n    return Boolean(getOpener(window));\n}\n\nexport function isIframe() : boolean {\n    return Boolean(getParent(window));\n}\n\nexport function isFullpage() : boolean {\n    return Boolean(!isIframe() && !isPopup());\n}\n\nfunction anyMatch(collection1, collection2) : boolean {\n\n    for (let item1 of collection1) {\n        for (let item2 of collection2) {\n            if (item1 === item2) {\n                return true;\n            }\n        }\n    }\n\n    return false;\n}\n\nexport function getDistanceFromTop(win : CrossDomainWindowType = window) : number {\n    let distance = 0;\n    let parent = win;\n\n    while (parent) {\n        parent = getParent(parent);\n        if (parent) {\n            distance += 1;\n        }\n    }\n\n    return distance;\n}\n\nexport function getNthParent(win : CrossDomainWindowType, n : number = 1) : ?CrossDomainWindowType {\n    let parent = win;\n\n    for (let i = 0; i < n; i++) {\n        if (!parent) {\n            return;\n        }\n\n        parent = getParent(parent);\n    }\n\n    return parent;\n}\n\nexport function getNthParentFromTop(win : CrossDomainWindowType, n : number = 1) : ?CrossDomainWindowType {\n    return getNthParent(win, getDistanceFromTop(win) - n);\n}\n\nexport function isSameTopWindow(win1 : CrossDomainWindowType, win2 : CrossDomainWindowType) : boolean {\n\n    let top1 = getTop(win1) || win1;\n    let top2 = getTop(win2) || win2;\n\n    try {\n        if (top1 && top2) {\n            if (top1 === top2) {\n                return true;\n            }\n\n            return false;\n        }\n    } catch (err) {\n        // pass\n    }\n\n    let allFrames1 = getAllFramesInWindow(win1);\n    let allFrames2 = getAllFramesInWindow(win2);\n\n    if (anyMatch(allFrames1, allFrames2)) {\n        return true;\n    }\n\n    let opener1 = getOpener(top1);\n    let opener2 = getOpener(top2);\n\n    if (opener1 && anyMatch(getAllFramesInWindow(opener1), allFrames2)) {\n        return false;\n    }\n\n    if (opener2 && anyMatch(getAllFramesInWindow(opener2), allFrames1)) {\n        return false;\n    }\n\n    return false;\n}\n\nexport function matchDomain(pattern : DomainMatcher, origin : DomainMatcher) : boolean {\n\n    if (typeof pattern === 'string') {\n\n        if (typeof origin === 'string') {\n            return pattern === WILDCARD || origin === pattern;\n        }\n\n        if (isRegex(origin)) {\n            return false;\n        }\n\n        if (Array.isArray(origin)) {\n            return false;\n        }\n    }\n\n    if (isRegex(pattern)) {\n\n        if (isRegex(origin)) {\n            return pattern.toString() === origin.toString();\n        }\n\n        if (Array.isArray(origin)) {\n            return false;\n        }\n\n        // $FlowFixMe\n        return Boolean(origin.match(pattern));\n    }\n\n    if (Array.isArray(pattern)) {\n\n        if (Array.isArray(origin)) {\n            return JSON.stringify(pattern) === JSON.stringify(origin);\n        }\n\n        if (isRegex(origin)) {\n            return false;\n        }\n\n        return pattern.some(subpattern => matchDomain(subpattern, origin));\n    }\n\n    return false;\n}\n\nexport function stringifyDomainPattern(pattern : DomainMatcher) : string {\n    if (Array.isArray(pattern)) {\n        return `(${ pattern.join(' | ') })`;\n    } else if (isRegex(pattern)) {\n        return `RegExp(${ pattern.toString() }`;\n    } else {\n        return pattern.toString();\n    }\n}\n\nexport function getDomainFromUrl(url : string) : string {\n\n    let domain;\n\n    if (url.match(/^(https?|mock|file):\\/\\//)) {\n        domain = url;\n    } else {\n        return getDomain();\n    }\n\n    domain = domain.split('/').slice(0, 3).join('/');\n\n    return domain;\n}\n\nexport function onCloseWindow(win : CrossDomainWindowType, callback : Function, delay : number = 1000, maxtime : number = Infinity) : { cancel : () => void } {\n\n    let timeout;\n\n    let check = () => {\n\n        if (isWindowClosed(win)) {\n\n            if (timeout) {\n                clearTimeout(timeout);\n            }\n\n            return callback();\n        }\n\n        if (maxtime <= 0) {\n            clearTimeout(timeout);\n        } else {\n            maxtime -= delay;\n            timeout = setTimeout(check, delay);\n        }\n    };\n\n    check();\n\n    return {\n        cancel() {\n            if (timeout) {\n                clearTimeout(timeout);\n            }\n        }\n    };\n}\n\n// eslint-disable-next-line complexity\nexport function isWindow(obj : Object) : boolean {\n\n    try {\n        if (obj === window) {\n            return true;\n        }\n    } catch (err) {\n        if (err && err.message === IE_WIN_ACCESS_ERROR) {\n            return true;\n        }\n    }\n\n    try {\n        if (Object.prototype.toString.call(obj) === '[object Window]') {\n            return true;\n        }\n    } catch (err) {\n        if (err && err.message === IE_WIN_ACCESS_ERROR) {\n            return true;\n        }\n    }\n\n    try {\n        if (window.Window && obj instanceof window.Window) {\n            return true;\n        }\n    } catch (err) {\n        if (err && err.message === IE_WIN_ACCESS_ERROR) {\n            return true;\n        }\n    }\n\n    try {\n        if (obj && obj.self === obj) {\n            return true;\n        }\n    } catch (err) {\n        if (err && err.message === IE_WIN_ACCESS_ERROR) {\n            return true;\n        }\n    }\n\n    try {\n        if (obj && obj.parent === obj) {\n            return true;\n        }\n    } catch (err) {\n        if (err && err.message === IE_WIN_ACCESS_ERROR) {\n            return true;\n        }\n    }\n\n    try {\n        if (obj && obj.top === obj) {\n            return true;\n        }\n    } catch (err) {\n        if (err && err.message === IE_WIN_ACCESS_ERROR) {\n            return true;\n        }\n    }\n\n    try {\n        noop(obj === obj);  // eslint-disable-line no-self-compare\n\n    } catch (err) {\n        return true;\n    }\n\n    try {\n        noop(obj && obj.__cross_domain_utils_window_check__);\n\n    } catch (err) {\n        return true;\n    }\n\n    return false;\n}\n\nexport function isBrowser() : boolean {\n    return (typeof window !== 'undefined' && typeof window.location !== 'undefined');\n}\n\nexport function isCurrentDomain(domain : string) : boolean {\n    if (!isBrowser()) {\n        return false;\n    }\n\n    return (getDomain() === domain);\n}\n\nexport function isMockDomain(domain : string) : boolean {\n    return domain.indexOf(PROTOCOL.MOCK) === 0;\n}\n\nexport function normalizeMockUrl(url : string) : string {\n    if (!isMockDomain(getDomainFromUrl(url))) {\n        return url;\n    }\n\n    if (!__TEST__) {\n        throw new Error(`Mock urls not supported out of test mode`);\n    }\n\n    return url.replace(/^mock:\\/\\/[^/]+/, getActualDomain(window));\n}\n\nexport function closeWindow(win : CrossDomainWindowType) {\n    try {\n        win.close();\n    } catch (err) {\n        // pass\n    }\n}\n","/* @flow */\n\nexport function safeIndexOf<T>(collection : Array<T>, item : T) : number {\n    for (let i = 0; i < collection.length; i++) {\n\n        try {\n            if (collection[i] === item) {\n                return i;\n            }\n        } catch (err) {\n            // pass\n        }\n    }\n\n    return -1;\n}\n\n// eslint-disable-next-line no-unused-vars\nexport function noop(...args : Array<mixed>) {\n    // pass\n}\n","/* @flow */\n\nimport { isWindow, isWindowClosed } from 'cross-domain-utils/src';\n\nimport { hasNativeWeakMap } from './native';\nimport { noop, safeIndexOf } from './util';\n\nlet defineProperty = Object.defineProperty;\nlet counter = Date.now() % 1e9;\n\nexport class CrossDomainSafeWeakMap<K : Object, V : mixed> {\n\n    name : string\n    weakmap : WeakMap<K, V>\n    keys : Array<K>\n    values : Array<V>\n\n    constructor() {\n        counter += 1;\n\n        // eslint-disable-next-line no-bitwise\n        this.name = `__weakmap_${ Math.random() * 1e9 >>> 0 }__${ counter }`;\n\n        if (hasNativeWeakMap()) {\n            try {\n                this.weakmap = new WeakMap();\n            } catch (err) {\n                // pass\n            }\n        }\n\n        this.keys  = [];\n        this.values = [];\n    }\n\n    _cleanupClosedWindows() {\n\n        let weakmap = this.weakmap;\n        let keys = this.keys;\n\n        for (let i = 0; i < keys.length; i++) {\n            let value = keys[i];\n\n            if (isWindow(value) && isWindowClosed(value)) {\n\n                if (weakmap) {\n                    try {\n                        weakmap.delete(value);\n                    } catch (err) {\n                        // pass\n                    }\n                }\n\n                keys.splice(i, 1);\n                this.values.splice(i, 1);\n\n                i -= 1;\n            }\n        }\n    }\n\n    isSafeToReadWrite(key : K) : boolean {\n\n        if (isWindow(key)) {\n            return false;\n        }\n\n        try {\n            noop(key && key.self);\n            noop(key && key[this.name]);\n        } catch (err) {\n            return false;\n        }\n\n        return true;\n    }\n\n    set(key : K, value : V) {\n\n        if (!key) {\n            throw new Error(`WeakMap expected key`);\n        }\n\n        let weakmap = this.weakmap;\n\n        if (weakmap) {\n            try {\n                weakmap.set(key, value);\n            } catch (err) {\n                delete this.weakmap;\n            }\n        }\n\n        if (this.isSafeToReadWrite(key)) {\n            try {\n                let name = this.name;\n                let entry = key[name];\n\n                if (entry && entry[0] === key) {\n                    entry[1] = value;\n                } else {\n                    defineProperty(key, name, {\n                        value:    [ key, value ],\n                        writable: true\n                    });\n                }\n\n                return;\n\n            } catch (err) {\n                // pass\n            }\n        }\n\n        this._cleanupClosedWindows();\n\n        let keys = this.keys;\n        let values = this.values;\n        let index = safeIndexOf(keys, key);\n\n        if (index === -1) {\n            keys.push(key);\n            values.push(value);\n        } else {\n            values[index] = value;\n        }\n    }\n\n    get(key : K) : V | void {\n\n        if (!key) {\n            throw new Error(`WeakMap expected key`);\n        }\n\n        let weakmap = this.weakmap;\n\n        if (weakmap) {\n            try {\n                if (weakmap.has(key)) {\n                    return weakmap.get(key);\n                }\n                \n            } catch (err) {\n                delete this.weakmap;\n            }\n        }\n\n        if (this.isSafeToReadWrite(key)) {\n            try {\n                let entry = key[this.name];\n\n                if (entry && entry[0] === key) {\n                    return entry[1];\n                }\n\n                return;\n            } catch (err) {\n                // pass\n            }\n        }\n\n        this._cleanupClosedWindows();\n\n        let keys = this.keys;\n        let index = safeIndexOf(keys, key);\n\n        if (index === -1) {\n            return;\n        }\n\n        return this.values[index];\n    }\n\n    delete(key : K) {\n\n        if (!key) {\n            throw new Error(`WeakMap expected key`);\n        }\n\n        let weakmap = this.weakmap;\n\n        if (weakmap) {\n            try {\n                weakmap.delete(key);\n            } catch (err) {\n                delete this.weakmap;\n            }\n        }\n\n        if (this.isSafeToReadWrite(key)) {\n            try {\n                let entry = key[this.name];\n\n                if (entry && entry[0] === key) {\n                    entry[0] = entry[1] = undefined;\n                }\n            } catch (err) {\n                // pass\n            }\n        }\n\n        this._cleanupClosedWindows();\n\n        let keys = this.keys;\n        let index = safeIndexOf(keys, key);\n\n        if (index !== -1) {\n            keys.splice(index, 1);\n            this.values.splice(index, 1);\n        }\n    }\n\n    has(key : K) : boolean {\n\n        if (!key) {\n            throw new Error(`WeakMap expected key`);\n        }\n\n        let weakmap = this.weakmap;\n\n        if (weakmap) {\n            try {\n                if (weakmap.has(key)) {\n                    return true;\n                }\n            } catch (err) {\n                delete this.weakmap;\n            }\n        }\n\n        if (this.isSafeToReadWrite(key)) {\n            try {\n                let entry = key[this.name];\n\n                if (entry && entry[0] === key) {\n                    return true;\n                }\n\n                return false;\n            } catch (err) {\n                // pass\n            }\n        }\n\n        this._cleanupClosedWindows();\n\n        let index = safeIndexOf(this.keys, key);\n        return index !== -1;\n    }\n\n    getOrSet(key : K, getter : () => V) : V {\n        if (this.has(key)) {\n            // $FlowFixMe\n            return this.get(key);\n        }\n\n        let value = getter();\n        this.set(key, value);\n        return value;\n    }\n}\n","/* @flow */\n/* eslint max-lines: 0 */\n\nimport { ZalgoPromise } from 'zalgo-promise/src';\nimport { WeakMap } from 'cross-domain-safe-weakmap/src';\n\nimport type { CancelableType } from './types';\n\nexport function base64encode(str : string) : string {\n    if (typeof btoa === 'function') {\n        return btoa(str);\n    } else if (typeof Buffer !== 'undefined') {\n        return Buffer.from(str, 'utf8').toString('base64');\n    }\n\n    throw new Error(`Can not find window.btoa or Buffer`);\n}\n\nexport function base64decode(str : string) : string {\n    if (typeof window !== 'undefined' && typeof window.atob === 'function') {\n        return window.atob(str);\n    }\n\n    if (typeof Buffer !== 'undefined') {\n        return Buffer.from(str, 'base64').toString('utf8');\n    }\n\n    throw new Error(`Can not find window.atob or Buffer`);\n}\n\nexport function uniqueID() : string {\n\n    let chars = '0123456789abcdef';\n\n    let randomID = 'xxxxxxxxxx'.replace(/./g, () => {\n        return chars.charAt(Math.floor(Math.random() * chars.length));\n    });\n\n    let timeID = base64encode(\n        new Date().toISOString().slice(11, 19).replace('T', '.')\n    ).replace(/[^a-zA-Z0-9]/g, '').toLowerCase();\n\n    return `${ randomID }_${ timeID }`;\n}\n\nexport function getGlobal() : Object {\n    if (typeof window !== 'undefined') {\n        return window;\n    }\n    if (typeof global !== 'undefined') {\n        return global;\n    }\n    if (typeof __GLOBAL__ !== 'undefined') {\n        return __GLOBAL__;\n    }\n    throw new Error(`No global found`);\n}\n\nlet objectIDs;\n\nexport function getObjectID(obj : Object) : string {\n\n    objectIDs = objectIDs || new WeakMap();\n\n    if (obj === null || obj === undefined || (typeof obj !== 'object' && typeof obj !== 'function')) {\n        throw new Error(`Invalid object`);\n    }\n\n    let uid = objectIDs.get(obj);\n\n    if (!uid) {\n        uid = `${ typeof obj }:${ uniqueID() }`;\n        objectIDs.set(obj, uid);\n    }\n\n    return uid;\n}\n\nfunction serializeArgs(args : Array<mixed>) : string {\n    try {\n        return JSON.stringify(Array.prototype.slice.call(args), (subkey, val) => {\n            if (typeof val === 'function') {\n                return `memoize[${ getObjectID(val) }]`;\n            }\n            return val;\n        });\n    } catch (err) {\n        throw new Error(`Arguments not serializable -- can not be used to memoize`);\n    }\n}\n\n// eslint-disable-next-line flowtype/no-weak-types\nexport function memoize<R>(method : (...args : Array<any>) => R, options : { time? : number, name? : string, thisNamespace? : boolean } = {}) : ((...args : Array<any>) => R) {\n    let cacheMap = new WeakMap();\n\n    // eslint-disable-next-line flowtype/no-weak-types\n    function memoizedFunction(...args : Array<any>) : R {\n        let cache = cacheMap.getOrSet(options.thisNamespace ? this : method, () => ({}));\n\n        let key : string = serializeArgs(args);\n\n        let cacheTime = options.time;\n        if (cache[key] && cacheTime && (Date.now() - cache[key].time) < cacheTime) {\n            delete cache[key];\n        }\n\n        if (cache[key]) {\n            return cache[key].value;\n        }\n\n        let time  = Date.now();\n        let value = method.apply(this, arguments);\n\n        cache[key] = { time, value };\n\n        return cache[key].value;\n    }\n\n    memoizedFunction.reset = () => {\n        cacheMap.delete(options.thisNamespace ? this : method);\n    };\n\n    if (options.name) {\n        memoizedFunction.displayName = `${ options.name }:memoized`;\n    }\n\n    return memoizedFunction;\n}\n\n// eslint-disable-next-line flowtype/no-weak-types\nexport function memoizePromise<R>(method : (...args : Array<any>) => ZalgoPromise<R>) : ((...args : Array<any>) => ZalgoPromise<R>) {\n    let cache = {};\n\n    // eslint-disable-next-line flowtype/no-weak-types\n    function memoizedPromiseFunction(...args : Array<any>) : ZalgoPromise<R> {\n        let key : string = serializeArgs(args);\n\n        if (cache.hasOwnProperty(key)) {\n            return cache[key];\n        }\n\n        cache[key] = method.apply(this, arguments)\n            .finally(() => {\n                delete cache[key];\n            });\n\n        return cache[key];\n    }\n\n    memoizedPromiseFunction.reset = () => {\n        cache = {};\n    };\n\n    return memoizedPromiseFunction;\n}\n\n// eslint-disable-next-line flowtype/no-weak-types\nexport function promisify<R>(method : (...args : Array<any>) => R, options : { name? : string } = {}) : ((...args : Array<any>) => ZalgoPromise<R>) {\n    function promisifiedFunction() : ZalgoPromise<R> {\n        return ZalgoPromise.try(method, this, arguments);\n    }\n\n    if (options.name) {\n        promisifiedFunction.displayName = `${ options.name }:promisified`;\n    }\n\n    return promisifiedFunction;\n}\n\n// eslint-disable-next-line flowtype/no-weak-types\nexport function inlineMemoize<R>(method : (...args : Array<any>) => R, logic : (...args : Array<any>) => R, args : Array<any> = []) : R {\n    let cache = method.__inline_memoize_cache__ = method.__inline_memoize_cache__ || {};\n    let key = serializeArgs(args);\n\n    if (cache.hasOwnProperty(key)) {\n        return cache[key];\n    }\n    \n    let result = cache[key] = logic(...args);\n    return result;\n}\n\n// eslint-disable-next-line no-unused-vars\nexport function noop(...args : Array<mixed>) {\n    // pass\n}\n\nexport function once(method : Function) : Function {\n    let called = false;\n\n    return function onceFunction() : mixed {\n        if (!called) {\n            called = true;\n            return method.apply(this, arguments);\n        }\n    };\n}\n\nexport function hashStr(str : string) : number {\n    let hash = 0;\n    for (let i = 0; i < str.length; i++) {\n        hash += str[i].charCodeAt(0) * Math.pow((i % 10) + 1, 5);\n    }\n    return Math.floor(Math.pow(Math.sqrt(hash), 5));\n}\n\nexport function strHashStr(str : string) : string {\n    let hash = '';\n\n    for (let i = 0; i < str.length; i++) {\n        let total = (str[i].charCodeAt(0) * i);\n\n        if (str[i + 1]) {\n            total += (str[i + 1].charCodeAt(0) * (i - 1));\n        }\n\n        hash += String.fromCharCode(97 + (Math.abs(total) % 26));\n    }\n\n    return hash;\n}\n\nexport function match(str : string, pattern : RegExp) : ?string {\n    let regmatch = str.match(pattern);\n    if (regmatch) {\n        return regmatch[1];\n    }\n}\n\nexport function awaitKey<T: mixed>(obj : Object, key : string) : ZalgoPromise<T> {\n    return new ZalgoPromise(resolve => {\n\n        let value = obj[key];\n\n        if (value) {\n            return resolve(value);\n        }\n\n        delete obj[key];\n\n        Object.defineProperty(obj, key, {\n\n            configurable: true,\n\n            set(item) {\n                value = item;\n\n                if (value) {\n                    resolve(value);\n                }\n            },\n\n            get() : mixed {\n                return value;\n            }\n        });\n    });\n}\n\nexport function stringifyError(err : mixed, level : number = 1) : string {\n\n    if (level >= 3) {\n        return 'stringifyError stack overflow';\n    }\n\n    try {\n        if (!err) {\n            return `<unknown error: ${ Object.prototype.toString.call(err) }>`;\n        }\n\n        if (typeof err === 'string') {\n            return err;\n        }\n\n        if (err instanceof Error) {\n            let stack = err && err.stack;\n            let message = err && err.message;\n\n            if (stack && message) {\n                if (stack.indexOf(message) !== -1) {\n                    return stack;\n                } else {\n                    return `${ message }\\n${ stack }`;\n                }\n            } else if (stack) {\n                return stack;\n            } else if (message) {\n                return message;\n            }\n        }\n\n        if (typeof err.toString === 'function') {\n            return err.toString();\n        }\n\n        return Object.prototype.toString.call(err);\n\n    } catch (newErr) { // eslint-disable-line unicorn/catch-error-name\n        return `Error while stringifying error: ${ stringifyError(newErr, level + 1) }`;\n    }\n}\n\nexport function stringifyErrorMessage(err : mixed) : string {\n\n    let defaultMessage = `<unknown error: ${ Object.prototype.toString.call(err) }>`;\n\n    if (!err) {\n        return defaultMessage;\n    }\n\n    if (err instanceof Error) {\n        return err.message || defaultMessage;\n    }\n\n    if (typeof err.message === 'string') {\n        return err.message || defaultMessage;\n    }\n\n    return defaultMessage;\n}\n\nexport function stringify(item : mixed) : string {\n    if (typeof item === 'string') {\n        return item;\n    }\n\n    if (item && typeof item.toString === 'function') {\n        return item.toString();\n    }\n\n    return Object.prototype.toString.call(item);\n}\n\nexport function domainMatches(hostname : string, domain : string) : boolean {\n    hostname = hostname.split('://')[1];\n    let index = hostname.indexOf(domain);\n    return (index !== -1 && hostname.slice(index) === domain);\n}\n\nexport function patchMethod(obj : Object, name : string, handler : Function) {\n    let original = obj[name];\n\n    obj[name] = function patchedMethod() : mixed {\n        return handler({\n            context:      this,\n            args:         Array.prototype.slice.call(arguments),\n            original,\n            callOriginal: () => original.apply(this, arguments)\n        });\n    };\n}\n\nexport function extend<T : Object | Function>(obj : T, source : Object) : T {\n    if (!source) {\n        return obj;\n    }\n\n    if (Object.assign) {\n        return Object.assign(obj, source);\n    }\n\n    for (let key in source) {\n        if (source.hasOwnProperty(key)) {\n            obj[key] = source[key];\n        }\n    }\n\n    return obj;\n}\n\nexport function values<T>(obj : { [string] : T }) : Array<T> {\n    let result = [];\n    for (let key in obj) {\n        if (obj.hasOwnProperty(key)) {\n            result.push(obj[key]);\n        }\n    }\n    return result;\n}\n\nexport function perc(pixels : number, percentage : number) : number {\n    return Math.round((pixels * percentage) / 100);\n}\n\nexport function min(...args : Array<number>) : number {\n    return Math.min(...args);\n}\n\nexport function max(...args : Array<number>) : number {\n    return Math.max(...args);\n}\n\nexport function regexMap<T>(str : string, regexp : RegExp, handler : () => T) : Array<T> {\n    let results = [];\n\n    // $FlowFixMe\n    str.replace(regexp, function regexMapMatcher(item) {\n        results.push(handler ? handler.apply(null, arguments) : item);\n    });\n\n    // $FlowFixMe\n    return results;\n}\n\nexport function svgToBase64(svg : string) : string {\n    return `data:image/svg+xml;base64,${ base64encode(svg) }`;\n}\n\nexport function objFilter<T, R>(obj : { [string] : T }, filter? : (T, ?string) => mixed = Boolean) : { [string] : R } {\n    let result = {};\n\n    for (let key in obj) {\n        if (!obj.hasOwnProperty(key) || !filter(obj[key], key)) {\n            continue;\n        }\n\n        result[key] = obj[key];\n    }\n\n    return result;\n}\n\nexport function identity <T>(item : T) : T {\n    return item;\n}\n\nexport function regexTokenize(text : string, regexp : RegExp) : Array<string> {\n    let result = [];\n    text.replace(regexp, token => {\n        result.push(token);\n        return '';\n    });\n    return result;\n}\n\nexport function promiseDebounce<T>(method : () => ZalgoPromise<T> | T, delay : number = 50) : () => ZalgoPromise<T> {\n\n    let promise;\n    let timeout;\n\n    return function promiseDebouncedMethod() : ZalgoPromise<T> {\n        if (timeout) {\n            clearTimeout(timeout);\n        }\n\n        let localPromise = promise = promise || new ZalgoPromise();\n\n        timeout = setTimeout(() => {\n            promise = null;\n            timeout = null;\n\n            ZalgoPromise.try(method).then(\n                result => { localPromise.resolve(result); },\n                err => { localPromise.reject(err); }\n            );\n        }, delay);\n\n        return localPromise;\n    };\n}\n\nexport function safeInterval(method : Function, time : number) : { cancel : () => void } {\n\n    let timeout;\n\n    function loop() {\n        timeout = setTimeout(() => {\n            method();\n            loop();\n        }, time);\n    }\n\n    loop();\n\n    return {\n        cancel() {\n            clearTimeout(timeout);\n        }\n    };\n}\n\nexport function isInteger(str : string) : boolean {\n    return Boolean(str.match(/^[0-9]+$/));\n}\n\nexport function isFloat(str : string) : boolean {\n    return Boolean(str.match(/^[0-9]+\\.[0-9]+$/));\n}\n\nexport function serializePrimitive(value : string | number | boolean) : string {\n    return value.toString();\n}\n\nexport function deserializePrimitive(value : string) : string | number | boolean {\n    if (value === 'true') {\n        return true;\n    } else if (value === 'false') {\n        return false;\n    } else if (isInteger(value)) {\n        return parseInt(value, 10);\n    } else if (isFloat(value)) {\n        return parseFloat(value);\n    } else {\n        return value;\n    }\n}\n\nexport function dotify(obj : Object, prefix : string = '', newobj : Object = {}) : { [string] : string } {\n    prefix = prefix ? `${ prefix }.` : prefix;\n    for (let key in obj) {\n        if (!obj.hasOwnProperty(key) || obj[key] === undefined || obj[key] === null || typeof obj[key] === 'function') {\n            continue;\n        } else if (obj[key] && Array.isArray(obj[key]) && obj[key].length && obj[key].every(val => typeof val !== 'object')) {\n            newobj[`${ prefix }${ key }[]`] = obj[key].join(',');\n        } else if (obj[key] && typeof obj[key] === 'object') {\n            newobj = dotify(obj[key], `${ prefix }${ key }`, newobj);\n        } else {\n            newobj[`${ prefix }${ key }`] = serializePrimitive(obj[key]);\n        }\n    }\n    return newobj;\n}\n\nexport function undotify(obj : { [string] : string }) : Object {\n    \n    let result = {};\n\n    for (let key in obj) {\n        if (!obj.hasOwnProperty(key) || typeof obj[key] !== 'string') {\n            continue;\n        }\n\n        let value = obj[key];\n\n        if (key.match(/^.+\\[\\]$/)) {\n            key = key.slice(0, key.length - 2);\n            value = value.split(',').map(deserializePrimitive);\n        } else {\n            value = deserializePrimitive(value);\n        }\n\n        let keyResult = result;\n        let parts = key.split('.');\n        for (let i = 0; i < parts.length; i++) {\n            let part = parts[i];\n            let isLast = (i + 1 === parts.length);\n            let isIndex = !isLast && isInteger(parts[i + 1]);\n\n            if (isLast) {\n                // $FlowFixMe\n                keyResult[part] = value;\n            } else {\n                // $FlowFixMe\n                keyResult = keyResult[part] = keyResult[part] || (isIndex ? [] : {});\n            }\n        }\n    }\n\n    return result;\n}\n\nexport type EventEmitterType = {\n    on : (eventName : string, handler : Function) => CancelableType,\n    once : (eventName : string, handler : Function) => CancelableType,\n    trigger : (eventName : string, ...args : $ReadOnlyArray<mixed>) => ZalgoPromise<void>,\n    triggerOnce : (eventName : string, ...args : $ReadOnlyArray<mixed>) => ZalgoPromise<void>\n};\n\nexport function eventEmitter() : EventEmitterType {\n    let triggered = {};\n    let handlers = {};\n\n    return {\n\n        on(eventName : string, handler : Function) : CancelableType {\n            let handlerList = handlers[eventName] = handlers[eventName] || [];\n\n            handlerList.push(handler);\n\n            let cancelled = false;\n\n            return {\n                cancel() {\n                    if (!cancelled) {\n                        cancelled = true;\n                        handlerList.splice(handlerList.indexOf(handler), 1);\n                    }\n\n                }\n            };\n        },\n\n        once(eventName : string, handler : Function) : CancelableType {\n\n            let listener = this.on(eventName, () => {\n                listener.cancel();\n                handler();\n            });\n\n            return listener;\n        },\n\n        trigger(eventName : string, ...args : $ReadOnlyArray<mixed>) : ZalgoPromise<void> {\n\n            let handlerList = handlers[eventName];\n            let promises = [];\n\n            if (handlerList) {\n                for (let handler of handlerList) {\n                    promises.push(ZalgoPromise.try(() => handler(...args)));\n                }\n            }\n\n            return ZalgoPromise.all(promises).then(noop);\n        },\n\n        triggerOnce(eventName : string, ...args : $ReadOnlyArray<mixed>) : ZalgoPromise<void> {\n\n            if (triggered[eventName]) {\n                return ZalgoPromise.resolve();\n            }\n\n            triggered[eventName] = true;\n            return this.trigger(eventName, ...args);\n        }\n    };\n}\n\nexport function camelToDasherize(string : string) : string {\n    return string.replace(/([A-Z])/g, (g) => {\n        return `-${ g.toLowerCase() }`;\n    });\n}\n\nexport function dasherizeToCamel(string : string) : string {\n    return string.replace(/-([a-z])/g, (g) => {\n        return g[1].toUpperCase();\n    });\n}\n\nexport function capitalizeFirstLetter(string : string) : string {\n    return string.charAt(0).toUpperCase() + string.slice(1).toLowerCase();\n}\n\nexport function get(item : Object, path : string, def : mixed) : mixed {\n\n    if (!path) {\n        return def;\n    }\n\n    let pathParts = path.split('.');\n\n    // Loop through each section of our key path\n\n    for (let i = 0; i < pathParts.length; i++) {\n\n        // If we have an object, we can get the key\n        if (typeof item === 'object' && item !== null) {\n            item = item[pathParts[i]];\n\n        // Otherwise, we should return the default (undefined if not provided)\n        } else {\n            return def;\n        }\n    }\n\n    // If our final result is undefined, we should return the default\n\n    return item === undefined ? def : item;\n}\n\nexport function safeTimeout(method : Function, time : number) {\n\n    let interval = safeInterval(() => {\n        time -= 100;\n        if (time <= 0) {\n            interval.cancel();\n            method();\n        }\n    }, 100);\n}\n\nexport function defineLazyProp<T>(obj : Object | Array<mixed>, key : string | number, getter : () => T) {\n    if (Array.isArray(obj)) {\n        if (typeof key !== 'number') {\n            throw new TypeError(`Array key must be number`);\n        }\n    } else if (typeof obj === 'object' && obj !== null) {\n        if (typeof key !== 'string') {\n            throw new TypeError(`Object key must be string`);\n        }\n    }\n    \n    Object.defineProperty(obj, key, {\n        configurable: true,\n        enumerable:   true,\n        get:          () => {\n            // $FlowFixMe\n            delete obj[key];\n            let value = getter();\n            // $FlowFixMe\n            obj[key] = value;\n            return value;\n        },\n        set: (value : T) => {\n            // $FlowFixMe\n            delete obj[key];\n            // $FlowFixMe\n            obj[key] = value;\n        }\n    });\n}\n\nexport function arrayFrom<T>(item : Iterable<T>) : Array<T> { // eslint-disable-line no-undef\n    return Array.prototype.slice.call(item);\n}\n\nexport function isObject(item : mixed) : boolean {\n    return (typeof item === 'object' && item !== null);\n}\n\nexport function isObjectObject(obj : mixed) : boolean {\n    return isObject(obj) && Object.prototype.toString.call(obj) === '[object Object]';\n}\n\nexport function isPlainObject(obj : mixed) : boolean {\n    if (!isObjectObject(obj)) {\n        return false;\n    }\n\n    // $FlowFixMe\n    let constructor = obj.constructor;\n\n    if (typeof constructor !== 'function') {\n        return false;\n    }\n\n    let prototype = constructor.prototype;\n\n    if (!isObjectObject(prototype)) {\n        return false;\n    }\n\n    if (!prototype.hasOwnProperty('isPrototypeOf')) {\n        return false;\n    }\n\n    return true;\n}\n\nexport function replaceObject<T : Object | Array<mixed>> (item : T, replacer : (mixed, string | number, string) => mixed, fullKey : string = '') : T {\n\n    if (Array.isArray(item)) {\n        let length = item.length;\n        let result = [];\n\n        for (let i = 0; i < length; i++) {\n\n            \n            defineLazyProp(result, i, () => {\n                let itemKey = fullKey ? `${ fullKey }.${ i }` : `${ i }`;\n                let el = item[i];\n\n                let child = replacer(el, i, itemKey);\n\n                if (isPlainObject(child) || Array.isArray(child)) {\n                    // $FlowFixMe\n                    child = replaceObject(child, replacer, itemKey);\n                }\n\n                return child;\n            });\n        }\n\n        // $FlowFixMe\n        return result;\n    } else if (isPlainObject(item)) {\n        let result = {};\n\n        for (let key in item) {\n            if (!item.hasOwnProperty(key)) {\n                continue;\n            }\n\n            defineLazyProp(result, key, () => {\n                let itemKey = fullKey ? `${ fullKey }.${ key }` : `${ key }`;\n                // $FlowFixMe\n                let el = item[key];\n\n                let child = replacer(el, key, itemKey);\n\n                if (isPlainObject(child) || Array.isArray(child)) {\n                    // $FlowFixMe\n                    child = replaceObject(child, replacer, itemKey);\n                }\n\n                return child;\n            });\n        }\n\n        // $FlowFixMe\n        return result;\n    } else {\n        throw new Error(`Pass an object or array`);\n    }\n}\n\n\nexport function copyProp(source : Object, target : Object, name : string, def : mixed) {\n    if (source.hasOwnProperty(name)) {\n        let descriptor = Object.getOwnPropertyDescriptor(source, name);\n        // $FlowFixMe\n        Object.defineProperty(target, name, descriptor);\n\n    } else {\n        target[name] = def;\n    }\n}\n\ntype RegexResultType = {\n    text : string,\n    groups : Array<string>,\n    start : number,\n    end : number,\n    length : number,\n    replace : (text : string) => string\n};\n\nexport function regex(pattern : string | RegExp, string : string, start : number = 0) : ?RegexResultType {\n\n    if (typeof pattern === 'string') {\n        // eslint-disable-next-line security/detect-non-literal-regexp\n        pattern = new RegExp(pattern);\n    }\n\n    let result = string.slice(start).match(pattern);\n\n    if (!result) {\n        return;\n    }\n\n    // $FlowFixMe\n    let index : number = result.index;\n    let regmatch = result[0];\n\n    return {\n        text:   regmatch,\n        groups: result.slice(1),\n        start:  start + index,\n        end:    start + index + regmatch.length,\n        length: regmatch.length,\n\n        replace(text : string) : string {\n\n            if (!regmatch) {\n                return '';\n            }\n\n            return `${ regmatch.slice(0, start + index) }${ text }${ regmatch.slice(index + regmatch.length) }`;\n        }\n    };\n}\n\nexport function regexAll(pattern : string | RegExp, string : string) : Array<RegexResultType> {\n\n    let matches = [];\n    let start = 0;\n\n    // eslint-disable-next-line no-constant-condition\n    while (true) {\n        let regmatch = regex(pattern, string, start);\n\n        if (!regmatch) {\n            break;\n        }\n\n        matches.push(regmatch);\n        start = match.end;\n    }\n\n    return matches;\n}\n\nexport function isDefined(value : ?mixed) : boolean {\n    return value !== null && value !== undefined;\n}\n\nexport function cycle(method : Function) : ZalgoPromise<void> {\n    return ZalgoPromise.try(method).then(() => cycle(method));\n}\n\nexport function debounce<T>(method : (...args : Array<mixed>) => T, time : number = 100) : (...args : Array<mixed>) => void {\n\n    let timeout;\n\n    return function debounceWrapper() {\n        clearTimeout(timeout);\n\n        timeout = setTimeout(() => {\n            return method.apply(this, arguments);\n        }, time);\n    };\n}\n\nexport function isRegex(item : mixed) : boolean {\n    return Object.prototype.toString.call(item) === '[object RegExp]';\n}\n\ntype FunctionProxy<T : Function> = (method : T) => T;\n\n// eslint-disable-next-line flowtype/no-weak-types\nexport let weakMapMemoize : FunctionProxy<*> = <R : mixed>(method : (arg : any) => R) : ((...args : Array<any>) => R) => {\n\n    let weakmap = new WeakMap();\n\n    // eslint-disable-next-line flowtype/no-weak-types\n    return function weakmapMemoized(arg : any) : R {\n        return weakmap.getOrSet(arg, () => method.call(this, arg));\n    };\n};\n\ntype FunctionPromiseProxy<R : mixed, T : (...args : $ReadOnlyArray<mixed>) => ZalgoPromise<R>> = (T) => T;\n\n// eslint-disable-next-line flowtype/no-weak-types\nexport let weakMapMemoizePromise : FunctionPromiseProxy<*, *> = <R : mixed>(method : (arg : any) => ZalgoPromise<R>) : ((...args : Array<any>) => ZalgoPromise<R>) => {\n\n    let weakmap = new WeakMap();\n\n    // eslint-disable-next-line flowtype/no-weak-types\n    return function weakmapMemoizedPromise(arg : any) : ZalgoPromise<R> {\n        return weakmap.getOrSet(arg, () =>\n            method.call(this, arg).finally(() => {\n                weakmap.delete(arg);\n            })\n        );\n    };\n};\n\nexport function getOrSet<O : Object, T : mixed>(obj : O, key : string, getter : () => T) : T {\n    if (obj.hasOwnProperty(key)) {\n        return obj[key];\n    }\n\n    const val = getter();\n    obj[key] = val;\n    return val;\n}\n\nexport type CleanupType = {|\n    set : <T : mixed>(string, T) => T, // eslint-disable-line no-undef\n    register : (Function) => void,\n    all : () => ZalgoPromise<void>\n|};\n\nexport function cleanup(obj : Object) : CleanupType {\n\n    const tasks = [];\n    let cleaned = false;\n\n    return {\n        set<T : mixed>(name : string, item : T) : T {\n            if (!cleaned) {\n                obj[name] = item;\n                this.register(() => {\n                    delete obj[name];\n                });\n            }\n            return item;\n        },\n\n        register(method : Function) {\n            if (cleaned) {\n                method();\n            } else {\n                tasks.push(once(method));\n            }\n        },\n\n        all() : ZalgoPromise<void> {\n            const results = [];\n            cleaned = true;\n\n            while (tasks.length) {\n                const task = tasks.pop();\n                results.push(task());\n            }\n\n            return ZalgoPromise.all(results).then(noop);\n        }\n    };\n}\n\nexport function tryCatch<T>(fn : () => T) : {| result : T, error : void |} | {| result : void, error : mixed |} {\n    let result;\n    let error;\n\n    try {\n        result = fn();\n    } catch (err) {\n        error = err;\n    }\n    \n    // $FlowFixMe\n    return { result, error };\n}\n\nexport function removeFromArray<X, T : Array<X>>(arr : T, item : X) {\n    const index = arr.indexOf(item);\n    if (index !== -1) {\n        arr.splice(index, 1);\n    }\n}\n\nexport function assertExists<T>(name : string, thing : void | null | T) : T {\n    if (thing === null || typeof thing === 'undefined') {\n        throw new Error(`Expected ${ name } to be present`);\n    }\n\n    return thing;\n}\n","/* @flow */\n/* eslint max-lines: off */\n\nimport { ZalgoPromise } from 'zalgo-promise/src';\nimport { linkFrameWindow, isWindowClosed,\n    type SameDomainWindowType, type CrossDomainWindowType } from 'cross-domain-utils/src';\nimport { WeakMap } from 'cross-domain-safe-weakmap/src';\n\nimport { inlineMemoize, noop, stringify, capitalizeFirstLetter,\n    once, extend, safeInterval, uniqueID, arrayFrom } from './util';\nimport { isDevice } from './device';\nimport { KEY_CODES } from './constants';\nimport type { CancelableType } from './types';\n\ntype ElementRefType = string | HTMLElement;\n\nexport function isDocumentReady() : boolean {\n    return Boolean(document.body) && document.readyState === 'complete';\n}\n\nexport function urlEncode(str : string) : string {\n    return str.replace(/\\?/g, '%3F').replace(/&/g, '%26').replace(/#/g, '%23').replace(/\\+/g, '%2B');\n}\n\nexport function waitForWindowReady() : ZalgoPromise<void> {\n    return inlineMemoize(waitForWindowReady, () : ZalgoPromise<void> => {\n        return new ZalgoPromise(resolve => {\n            if (isDocumentReady()) {\n                resolve();\n            }\n\n            window.addEventListener('load', () => resolve());\n        });\n    });\n}\n\nexport function waitForDocumentReady() : ZalgoPromise<void> {\n    return inlineMemoize(waitForDocumentReady, () : ZalgoPromise<void> => {\n        return new ZalgoPromise(resolve => {\n\n            if (isDocumentReady()) {\n                return resolve();\n            }\n\n            let interval = setInterval(() => {\n                if (isDocumentReady()) {\n                    clearInterval(interval);\n                    return resolve();\n                }\n            }, 10);\n        });\n    });\n}\n\nexport function waitForDocumentBody() : ZalgoPromise<HTMLBodyElement> {\n    return waitForDocumentReady().then(() => {\n        if (document.body) {\n            return document.body;\n        }\n\n        throw new Error('Document ready but document.body not present');\n    });\n}\n\nexport function parseQuery(queryString : string) : Object {\n    return inlineMemoize(parseQuery, () : Object => {\n        let params = {};\n\n        if (!queryString) {\n            return params;\n        }\n\n        if (queryString.indexOf('=') === -1) {\n            return params;\n        }\n\n        for (let pair of queryString.split('&')) {\n            pair = pair.split('=');\n\n            if (pair[0] && pair[1]) {\n                params[decodeURIComponent(pair[0])] = decodeURIComponent(pair[1]);\n            }\n        }\n\n        return params;\n    }, [ queryString ]);\n}\n\n\nexport function getQueryParam(name : string) : string {\n    return parseQuery(window.location.search.slice(1))[name];\n}\n\nexport function urlWillRedirectPage(url : string) : boolean {\n\n    if (url.indexOf('#') === -1) {\n        return true;\n    }\n\n    if (url.indexOf('#') === 0) {\n        return false;\n    }\n\n    if (url.split('#')[0] === window.location.href.split('#')[0]) {\n        return false;\n    }\n\n    return true;\n}\n\nexport function formatQuery(obj : { [ string ] : string } = {}) : string {\n\n    return Object.keys(obj).filter(key => {\n        return typeof obj[key] === 'string';\n    }).map(key => {\n        return `${ urlEncode(key) }=${ urlEncode(obj[key]) }`;\n    }).join('&');\n}\n\nexport function extendQuery(originalQuery : string, props : { [ string ] : string } = {}) : string {\n\n    if (!props || !Object.keys(props).length) {\n        return originalQuery;\n    }\n\n    return formatQuery({\n        ...parseQuery(originalQuery),\n        ...props\n    });\n}\n\nexport function extendUrl(url : string, options : { query? : { [string] : string }, hash? : { [string] : string } } = {}) : string {\n\n    let query = options.query || {};\n    let hash = options.hash || {};\n\n    let originalUrl;\n    let originalQuery;\n    let originalHash;\n\n    [ originalUrl, originalHash ] = url.split('#');\n    [ originalUrl, originalQuery ] = originalUrl.split('?');\n\n    let queryString = extendQuery(originalQuery, query);\n    let hashString = extendQuery(originalHash, hash);\n\n    if (queryString) {\n        originalUrl = `${ originalUrl }?${ queryString }`;\n    }\n\n    if (hashString) {\n        originalUrl = `${ originalUrl }#${ hashString }`;\n    }\n\n    return originalUrl;\n}\n\nexport function redirect(url : string, win : CrossDomainWindowType = window) : ZalgoPromise<void> {\n    return new ZalgoPromise(resolve => {\n        win.location = url;\n        if (!urlWillRedirectPage(url)) {\n            resolve();\n        }\n    });\n}\n\nexport function hasMetaViewPort() : boolean {\n    let meta = document.querySelector('meta[name=viewport]');\n\n    if (isDevice() && window.screen.width < 660 && !meta) {\n        return false;\n    }\n\n    return true;\n}\n\nexport function isElementVisible(el : HTMLElement) : boolean {\n    return Boolean(el.offsetWidth || el.offsetHeight || el.getClientRects().length);\n}\n\nexport function enablePerformance() : boolean {\n    return inlineMemoize(enablePerformance, () : boolean => {\n        /* eslint-disable compat/compat */\n        return Boolean(\n            window.performance &&\n            performance.now &&\n            performance.timing &&\n            performance.timing.connectEnd &&\n            performance.timing.navigationStart &&\n            (Math.abs(performance.now() - Date.now()) > 1000) &&\n            (performance.now() - (performance.timing.connectEnd - performance.timing.navigationStart)) > 0\n        );\n        /* eslint-enable compat/compat */\n    });\n}\n\nexport function getPageRenderTime() : ZalgoPromise<?number> {\n    return waitForDocumentReady().then(() => {\n\n        if (!enablePerformance()) {\n            return;\n        }\n\n        let timing = window.performance.timing;\n\n        if (timing.connectEnd && timing.domInteractive) {\n            return timing.domInteractive - timing.connectEnd;\n        }\n    });\n}\n\nexport function htmlEncode(html : string = '') : string {\n    return html.toString()\n        .replace(/&/g, '&amp;')\n        .replace(/</g, '&lt;')\n        .replace(/>/g, '&gt;')\n        .replace(/\"/g, '&quot;')\n        .replace(/'/g, '&#39;')\n        .replace(/\\//g, '&#x2F;');\n}\n\nexport function isBrowser() : boolean {\n    return (typeof window !== 'undefined');\n}\n\nexport function querySelectorAll(selector : string, doc : HTMLElement = window.document) : Array<HTMLElement> {\n    return Array.prototype.slice.call(doc.querySelectorAll(selector));\n}\n\nexport function onClick(element : HTMLElement, handler : (Event) => void) {\n    element.addEventListener('touchstart', noop);\n    element.addEventListener('click', handler);\n    element.addEventListener('keypress', (event : Event) => {\n        // $FlowFixMe\n        if (event.keyCode === KEY_CODES.ENTER) {\n            return handler(event);\n        }\n    });\n}\n\nexport function getScript({ host = window.location.host, path } : { host? : string, path : string }) : ?HTMLScriptElement {\n    return inlineMemoize(getScript, () : ?HTMLScriptElement => {\n\n        let url = `${ host }${ path }`;\n        let scripts = Array.prototype.slice.call(document.getElementsByTagName('script'));\n\n        for (let script of scripts) {\n            if (!script.src) {\n                continue;\n            }\n\n            let src = script.src.replace(/^https?:\\/\\//, '').split('?')[0];\n\n            if (src === url) {\n                return script;\n            }\n        }\n    }, [ path ]);\n}\n\nexport function isLocalStorageEnabled() : boolean {\n    return inlineMemoize(isLocalStorageEnabled, () => {\n        try {\n            if (typeof window === 'undefined') {\n                return false;\n            }\n\n            if (window.localStorage) {\n                let value = Math.random().toString();\n                window.localStorage.setItem('__test__localStorage__', value);\n                let result = window.localStorage.getItem('__test__localStorage__');\n                window.localStorage.removeItem('__test__localStorage__');\n                if (value === result) {\n                    return true;\n                }\n            }\n        } catch (err) {\n            // pass\n        }\n        return false;\n    });\n}\n\nexport function getBrowserLocales() : Array<{ country? : string, lang : string }> {\n    let nav = window.navigator;\n\n    let locales = nav.languages\n        ? Array.prototype.slice.apply(nav.languages)\n        : [];\n\n    if (nav.language) {\n        locales.push(nav.language);\n    }\n\n    if (nav.userLanguage) {\n        locales.push(nav.userLanguage);\n    }\n\n    return locales.map(locale => {\n\n        if (locale && locale.match(/^[a-z]{2}[-_][A-Z]{2}$/)) {\n            let [ lang, country ] = locale.split(/[-_]/);\n            return { country, lang };\n        }\n\n        if (locale && locale.match(/^[a-z]{2}$/)) {\n            return { lang: locale };\n        }\n\n        return null;\n\n    }).filter(Boolean);\n}\n\n\nexport function appendChild(container : HTMLElement, child : HTMLElement | Text) {\n    container.appendChild(child);\n}\n\nexport function isElement(element : mixed) : boolean {\n\n    if (element instanceof window.Element) {\n        return true;\n    }\n\n    if (element !== null && typeof element === 'object' && element.nodeType === 1 && typeof element.style === 'object' && typeof element.ownerDocument === 'object') {\n        return true;\n    }\n\n    return false;\n}\n\nexport function getElementSafe(id : ElementRefType, doc : Document | HTMLElement = document) : ?HTMLElement {\n\n    if (isElement(id)) {\n        // $FlowFixMe\n        return id;\n    }\n\n    if (typeof id === 'string') {\n        return doc.querySelector(id);\n    }\n}\n\nexport function getElement(id : ElementRefType, doc : Document | HTMLElement = document) : HTMLElement {\n\n    let element = getElementSafe(id, doc);\n\n    if (element) {\n        return element;\n    }\n\n    throw new Error(`Can not find element: ${ stringify(id) }`);\n}\n\nexport function elementReady(id : ElementRefType) : ZalgoPromise<window.HTMLElement> {\n    return new ZalgoPromise((resolve, reject) => {\n\n        let name = stringify(id);\n        let el = getElementSafe(id);\n\n        if (el) {\n            return resolve(el);\n        }\n\n        if (isDocumentReady()) {\n            return reject(new Error(`Document is ready and element ${ name } does not exist`));\n        }\n\n        let interval = setInterval(() => {\n\n            el = getElementSafe(id);\n\n            if (el) {\n                clearInterval(interval);\n                return resolve(el);\n            }\n\n            if (isDocumentReady()) {\n                clearInterval(interval);\n                return reject(new Error(`Document is ready and element ${ name } does not exist`));\n            }\n        }, 10);\n    });\n}\n\nexport function PopupOpenError(message : string) {\n    this.message = message;\n}\n\nPopupOpenError.prototype = Object.create(Error.prototype);\n\ntype PopupOptions = {|\n    name? : string,\n    width? : number,\n    height? : number,\n    top? : number,\n    left? : number,\n    status? : 0 | 1,\n    resizable? : 0 | 1,\n    toolbar? : 0 | 1,\n    menubar? : 0 | 1,\n    scrollbars? : 0 | 1\n|};\n\nexport function popup(url : string, options? : PopupOptions) : CrossDomainWindowType {\n\n    // $FlowFixMe\n    options = options || {};\n\n    let { width, height } = options;\n\n    let top = 0;\n    let left = 0;\n\n    if (width) {\n        if (window.outerWidth) {\n            left = Math.round((window.outerWidth - width) / 2) + window.screenX;\n        } else if (window.screen.width) {\n            left = Math.round((window.screen.width - width) / 2);\n        }\n    }\n\n    if (height) {\n        if (window.outerHeight) {\n            top = Math.round((window.outerHeight - height) / 2) + window.screenY;\n        } else if (window.screen.height) {\n            top = Math.round((window.screen.height - height) / 2);\n        }\n    }\n\n    options = {\n        top,\n        left,\n        width,\n        height,\n        status:     1,\n        toolbar:    0,\n        menubar:    0,\n        resizable:  1,\n        scrollbars: 1,\n        ...options\n    };\n\n    let name = options.name || '';\n    delete options.name;\n\n    // eslint-disable-next-line array-callback-return\n    let params = Object.keys(options).map(key => {\n        // $FlowFixMe\n        if (options[key]) {\n            return `${ key }=${ stringify(options[key]) }`;\n        }\n    }).filter(Boolean).join(',');\n\n    let win;\n\n    try {\n        win = window.open(url, name, params, true);\n    } catch (err) {\n        throw new PopupOpenError(`Can not open popup window - ${ err.stack || err.message }`);\n    }\n\n    if (isWindowClosed(win)) {\n        let err = new PopupOpenError(`Can not open popup window - blocked`);\n        throw err;\n    }\n\n    window.addEventListener('unload', () => win.close());\n\n    return win;\n}\n\n\nexport function writeToWindow(win : SameDomainWindowType, html : string) {\n    try {\n        win.document.open();\n        win.document.write(html);\n        win.document.close();\n    } catch (err) {\n        try {\n            win.location = `javascript: document.open(); document.write(${ JSON.stringify(html) }); document.close();`;\n        } catch (err2) {\n            // pass\n        }\n    }\n}\n\nexport function writeElementToWindow(win : SameDomainWindowType, el : HTMLElement) {\n\n    let tag = el.tagName.toLowerCase();\n\n    if (tag !== 'html') {\n        throw new Error(`Expected element to be html, got ${ tag }`);\n    }\n\n    let documentElement = win.document.documentElement;\n\n    for (const child of arrayFrom(documentElement.children)) {\n        documentElement.removeChild(child);\n    }\n\n    for (const child of arrayFrom(el.children)) {\n        documentElement.appendChild(child);\n    }\n}\n\nexport function setStyle(el : HTMLElement, styleText : string, doc : Document = window.document) {\n    // $FlowFixMe\n    if (el.styleSheet) {\n        // $FlowFixMe\n        el.styleSheet.cssText = styleText;\n    } else {\n        el.appendChild(doc.createTextNode(styleText));\n    }\n}\n\nexport type ElementOptionsType = {\n    style? : { [ string ] : string },\n    id? : string,\n    class? : ?Array<string>,\n    attributes? : { [ string ] : string },\n    styleSheet? : ?string,\n    html? : ?string\n};\n\nlet awaitFrameLoadPromises : WeakMap<HTMLIFrameElement, ZalgoPromise<HTMLIFrameElement>>;\n\nexport function awaitFrameLoad(frame : HTMLIFrameElement) : ZalgoPromise<HTMLIFrameElement> {\n    awaitFrameLoadPromises = awaitFrameLoadPromises || new WeakMap();\n\n    if (awaitFrameLoadPromises.has(frame)) {\n        let promise = awaitFrameLoadPromises.get(frame);\n        if (promise) {\n            return promise;\n        }\n    }\n\n    let promise = new ZalgoPromise((resolve, reject) => {\n        frame.addEventListener('load', () => {\n            linkFrameWindow(frame);\n            resolve(frame);\n        });\n\n        frame.addEventListener('error', (err : Event) => {\n            if (frame.contentWindow) {\n                resolve(frame);\n            } else {\n                reject(err);\n            }\n        });\n    });\n\n    awaitFrameLoadPromises.set(frame, promise);\n\n    return promise;\n}\n\nexport function awaitFrameWindow(frame : HTMLIFrameElement) : ZalgoPromise<CrossDomainWindowType> {\n    return awaitFrameLoad(frame).then(loadedFrame => {\n\n        if (!loadedFrame.contentWindow) {\n            throw new Error(`Could not find window in iframe`);\n        }\n\n        return loadedFrame.contentWindow;\n    });\n}\n\nexport function createElement(tag : string = 'div', options : ElementOptionsType = {}, container : ?HTMLElement) : HTMLElement {\n\n    tag = tag.toLowerCase();\n    let element = document.createElement(tag);\n\n    if (options.style) {\n        extend(element.style, options.style);\n    }\n\n    if (options.class) {\n        element.className = options.class.join(' ');\n    }\n\n    if (options.id) {\n        element.setAttribute('id', options.id);\n    }\n\n    if (options.attributes) {\n        for (let key of Object.keys(options.attributes)) {\n            element.setAttribute(key, options.attributes[key]);\n        }\n    }\n\n    if (options.styleSheet) {\n        setStyle(element, options.styleSheet);\n    }\n\n    if (container) {\n        appendChild(container, element);\n    }\n\n    if (options.html) {\n        if (tag === 'iframe') {\n            // $FlowFixMe\n            if (!container || !element.contentWindow) {\n                throw new Error(`Iframe html can not be written unless container provided and iframe in DOM`);\n            }\n\n            // $FlowFixMe\n            writeToWindow(element.contentWindow, options.html);\n\n        } else {\n            element.innerHTML = options.html;\n        }\n    }\n\n    return element;\n}\n\n\nexport type IframeElementOptionsType = {\n    style? : { [ string ] : string },\n    class? : ?Array<string>,\n    attributes? : { [ string ] : string },\n    styleSheet? : ?string,\n    html? : ?string,\n    url? : ?string\n};\n\nexport function iframe(options : IframeElementOptionsType = {}, container : ?HTMLElement) : HTMLIFrameElement {\n\n    let attributes = options.attributes || {};\n    let style = options.style || {};\n\n    let frame = createElement('iframe', {\n        attributes: {\n            allowTransparency: 'true',\n            ...attributes\n        },\n        style: {\n            backgroundColor: 'transparent',\n            border:          'none',\n            ...style\n        },\n        html:  options.html,\n        class: options.class\n    });\n\n    const isIE = window.navigator.userAgent.match(/MSIE|Edge/i);\n    \n    if (!frame.hasAttribute('id')) {\n        frame.setAttribute('id', uniqueID());\n    }\n\n    // $FlowFixMe\n    awaitFrameLoad(frame);\n\n    if (container) {\n        let el = getElement(container);\n        el.appendChild(frame);\n    }\n\n    if (options.url || isIE) {\n        frame.setAttribute('src', options.url || 'about:blank');\n    }\n\n    // $FlowFixMe\n    return frame;\n}\n\nexport function addEventListener(obj : HTMLElement, event : string, handler : (event : Event) => void) : CancelableType {\n    obj.addEventListener(event, handler);\n    return {\n        cancel() {\n            obj.removeEventListener(event, handler);\n        }\n    };\n}\n\nexport function bindEvents(element : HTMLElement, eventNames : Array<string>, handler : (event : Event) => void) : CancelableType {\n\n    handler = once(handler);\n\n    for (let eventName of eventNames) {\n        element.addEventListener(eventName, handler);\n    }\n\n    return {\n        cancel: once(() => {\n            for (let eventName of eventNames) {\n                element.removeEventListener(eventName, handler);\n            }\n        })\n    };\n}\n\nconst VENDOR_PREFIXES = [ 'webkit', 'moz', 'ms', 'o' ];\n\nexport function setVendorCSS(element : HTMLElement, name : string, value : string) {\n\n    // $FlowFixMe\n    element.style[name] = value;\n\n    let capitalizedName = capitalizeFirstLetter(name);\n\n    for (let prefix of VENDOR_PREFIXES) {\n        // $FlowFixMe\n        element.style[`${ prefix }${ capitalizedName }`] = value;\n    }\n}\n\nconst ANIMATION_START_EVENTS = [ 'animationstart', 'webkitAnimationStart', 'oAnimationStart', 'MSAnimationStart' ];\nconst ANIMATION_END_EVENTS   = [ 'animationend', 'webkitAnimationEnd', 'oAnimationEnd', 'MSAnimationEnd' ];\n\nexport function animate(element : ElementRefType, name : string, clean : (Function) => void, timeout : number = 1000) : ZalgoPromise<void> {\n    return new ZalgoPromise((resolve, reject) => {\n\n        let el = getElement(element);\n\n        if (!el) {\n            return resolve();\n        }\n\n        let hasStarted = false;\n\n        let startTimeout;\n        let endTimeout;\n        let startEvent;\n        let endEvent;\n\n        function cleanUp() {\n            clearTimeout(startTimeout);\n            clearTimeout(endTimeout);\n            startEvent.cancel();\n            endEvent.cancel();\n        }\n\n        startEvent = bindEvents(el, ANIMATION_START_EVENTS, event => {\n\n            // $FlowFixMe\n            if (event.target !== el || event.animationName !== name) {\n                return;\n            }\n\n            clearTimeout(startTimeout);\n\n            event.stopPropagation();\n\n            startEvent.cancel();\n            hasStarted = true;\n\n            endTimeout = setTimeout(() => {\n                cleanUp();\n                resolve();\n            }, timeout);\n        });\n\n        endEvent = bindEvents(el, ANIMATION_END_EVENTS, event => {\n\n            // $FlowFixMe\n            if (event.target !== el || event.animationName !== name) {\n                return;\n            }\n\n            cleanUp();\n\n            // $FlowFixMe\n            if (typeof event.animationName === 'string' && event.animationName !== name) {\n                return reject(`Expected animation name to be ${ name }, found ${ event.animationName }`);\n            }\n\n            return resolve();\n        });\n\n        setVendorCSS(el, 'animationName', name);\n\n        startTimeout = setTimeout(() => {\n            if (!hasStarted) {\n                cleanUp();\n                return resolve();\n            }\n        }, 200);\n\n        if (clean) {\n            clean(cleanUp);\n        }\n    });\n}\n\nconst STYLE = {\n\n    DISPLAY: {\n        NONE:  'none',\n        BLOCK: 'block'\n    },\n\n    VISIBILITY: {\n        VISIBLE: 'visible',\n        HIDDEN:  'hidden'\n    },\n\n    IMPORTANT: 'important'\n};\n\nexport function makeElementVisible(element : HTMLElement) {\n    element.style.setProperty('visibility', '');\n}\n\nexport function makeElementInvisible(element : HTMLElement) {\n    element.style.setProperty('visibility', STYLE.VISIBILITY.HIDDEN, STYLE.IMPORTANT);\n}\n\n\nexport function showElement(element : HTMLElement) {\n    element.style.setProperty('display', '');\n}\n\nexport function hideElement(element : HTMLElement) {\n    element.style.setProperty('display', STYLE.DISPLAY.NONE, STYLE.IMPORTANT);\n}\n\nexport function destroyElement(element : HTMLElement) {\n    if (element && element.parentNode) {\n        element.parentNode.removeChild(element);\n    }\n}\n\nexport function showAndAnimate(element : HTMLElement, name : string, clean : (Function) => void) : ZalgoPromise<void> {\n    let animation = animate(element, name, clean);\n    showElement(element);\n    return animation;\n}\n\nexport function animateAndHide(element : HTMLElement, name : string, clean : (Function) => void) : ZalgoPromise<void> {\n    return animate(element, name, clean).then(() => {\n        hideElement(element);\n    });\n}\n\nexport function addClass(element : HTMLElement, name : string) {\n    element.classList.add(name);\n}\n\nexport function removeClass(element : HTMLElement, name : string) {\n    element.classList.remove(name);\n}\n\nexport function isElementClosed(el : HTMLElement) : boolean {\n    if (!el || !el.parentNode) {\n        return true;\n    }\n    return false;\n}\n\nexport function watchElementForClose(element : HTMLElement, handler : () => mixed) : CancelableType {\n    handler = once(handler);\n\n    let interval;\n\n    if (isElementClosed(element)) {\n        handler();\n    } else {\n        interval = safeInterval(() => {\n            if (isElementClosed(element)) {\n                interval.cancel();\n                handler();\n            }\n        }, 50);\n    }\n\n    return {\n        cancel() {\n            if (interval) {\n                interval.cancel();\n            }\n        }\n    };\n}\n\nexport function fixScripts(el : HTMLElement, doc : Document = window.document) {\n    for (let script of querySelectorAll('script', el)) {\n        let parentNode = script.parentNode;\n\n        if (!parentNode) {\n            continue;\n        }\n\n        let newScript = doc.createElement('script');\n        newScript.text = script.textContent;\n        parentNode.replaceChild(newScript, script);\n    }\n}\n\ntype OnResizeOptions = {|\n    width? : boolean,\n    height? : boolean,\n    interval? : number,\n    win? : SameDomainWindowType\n|};\n\nexport function onResize(el : HTMLElement, handler : ({ width : number, height : number }) => void, { width = true, height = true, interval = 100, win = window } : OnResizeOptions = {}) : {} {\n    let currentWidth = el.offsetWidth;\n    let currentHeight = el.offsetHeight;\n\n    handler({ width: currentWidth, height: currentHeight });\n\n    let check = () => {\n        let newWidth = el.offsetWidth;\n        let newHeight = el.offsetHeight;\n\n        if ((width && newWidth !== currentWidth) || (height && newHeight !== currentHeight)) {\n            handler({ width: newWidth, height: newHeight });\n        }\n\n        currentWidth = newWidth;\n        currentHeight = newHeight;\n    };\n\n    let observer;\n    let timeout;\n\n    if (typeof win.ResizeObserver !== 'undefined') {\n        observer = new win.ResizeObserver(check);\n        observer.observe(el);\n\n    } else if (typeof win.MutationObserver !== 'undefined') {\n        observer = new win.MutationObserver(check);\n        observer.observe(el, {\n            attributes:    true,\n            childList:     true,\n            subtree:       true,\n            characterData: false\n        });\n        win.addEventListener('resize', check);\n    } else {\n        let loop = () => {\n            check();\n            timeout = setTimeout(loop, interval);\n        };\n        loop();\n    }\n\n    return {\n        cancel: () => {\n            observer.disconnect();\n            window.removeEventListener('resize', check);\n            clearTimeout(timeout);\n        }\n    };\n}\n","/* @flow */\n\nexport function hasNativeWeakMap() : boolean {\n\n    if (typeof WeakMap === 'undefined') {\n        return false;\n    }\n\n    if (typeof Object.freeze === 'undefined') {\n        return false;\n    }\n\n    try {\n\n        let testWeakMap = new WeakMap();\n        let testKey = {};\n        let testValue = '__testvalue__';\n\n        Object.freeze(testKey);\n\n        testWeakMap.set(testKey, testValue);\n\n        if (testWeakMap.get(testKey) === testValue) {\n            return true;\n        }\n\n        return false;\n\n    } catch (err) {\n\n        return false;\n    }\n}\n","/* @flow */\n\nexport function isPerc(str : string) : boolean {\n    return typeof str === 'string' && (/^[0-9]+%$/).test(str);\n}\n\nexport function isPx(str : string) : boolean {\n    return typeof str === 'string' && (/^[0-9]+px$/).test(str);\n}\n\nexport function toNum(val : string | number) : number {\n\n    if (typeof val === 'number') {\n        return val;\n    }\n\n    let match = val.match(/^([0-9]+)(px|%)$/);\n\n    if (!match) {\n        throw new Error(`Could not match css value from ${ val }`);\n    }\n\n    return parseInt(match[1], 10);\n}\n\nexport function toPx(val : number | string) : string {\n    return `${ toNum(val) }px`;\n}\n\nexport function toCSS(val : number | string) : string {\n\n    if (typeof val === 'number') {\n        return toPx(val);\n    }\n\n    return isPerc(val) ? val : toPx(val);\n}\n\nexport function percOf(num : number, perc : string) : number {\n    return parseInt(num * toNum(perc)  / 100, 10);\n}\n\nexport function normalizeDimension(dim : string | number, max : number) : number {\n    if (typeof dim === 'number') {\n        return dim;\n    } else if (isPerc(dim)) {\n        return percOf(max, dim);\n    } else if (isPx(dim)) {\n        return toNum(dim);\n    } else {\n        throw new Error(`Can not normalize dimension: ${ dim }`);\n    }\n}\n","/* @flow */\n\nexport const BRIDGE_TIMEOUT = 5000;\nexport const CHILD_WINDOW_TIMEOUT = 5000;\n\nexport const ACK_TIMEOUT = 2000;\nexport const ACK_TIMEOUT_KNOWN = 10000;\nexport const RES_TIMEOUT = __TEST__ ? 2000 : -1;\nexport const RESPONSE_CYCLE_TIME = 500;\n","/* @flow */\n\nexport const MESSAGE_TYPE = {\n    REQUEST:  ('postrobot_message_request' : 'postrobot_message_request'),\n    RESPONSE: ('postrobot_message_response' : 'postrobot_message_response'),\n    ACK:      ('postrobot_message_ack' : 'postrobot_message_ack')\n};\n\nexport const MESSAGE_ACK = {\n    SUCCESS: ('success' : 'success'),\n    ERROR:   ('error' : 'error')\n};\n\nexport const MESSAGE_NAME = {\n    METHOD:      ('postrobot_method' : 'postrobot_method'),\n    HELLO:       ('postrobot_hello' : 'postrobot_hello'),\n    OPEN_TUNNEL: ('postrobot_open_tunnel' : 'postrobot_open_tunnel')\n};\n\nexport const SEND_STRATEGY = {\n    POST_MESSAGE: ('postrobot_post_message' : 'postrobot_post_message'),\n    BRIDGE:       ('postrobot_bridge' : 'postrobot_bridge'),\n    GLOBAL:       ('postrobot_global' : 'postrobot_global')\n};\n\nexport const BRIDGE_NAME_PREFIX = '__postrobot_bridge__';\nexport const POSTROBOT_PROXY =    '__postrobot_proxy__';\n\nexport const WILDCARD = '*';\n\nexport const SERIALIZATION_TYPE = {\n    CROSS_DOMAIN_ZALGO_PROMISE: ('cross_domain_zalgo_promise' : 'cross_domain_zalgo_promise'),\n    CROSS_DOMAIN_FUNCTION:      ('cross_domain_function' : 'cross_domain_function'),\n    CROSS_DOMAIN_WINDOW:        ('cross_domain_window' : 'cross_domain_window')\n};\n","/* @flow */\n\nimport { type CrossDomainWindowType, type SameDomainWindowType } from 'cross-domain-utils/src';\nimport { WeakMap } from 'cross-domain-safe-weakmap/src';\nimport { getOrSet } from 'belter/src';\n\nexport function getGlobal(win : SameDomainWindowType = window) : Object {\n    if (win !== window) {\n        return win[__POST_ROBOT__.__GLOBAL_KEY__];\n    }\n    const global : Object = win[__POST_ROBOT__.__GLOBAL_KEY__] = win[__POST_ROBOT__.__GLOBAL_KEY__] || {};\n    return global;\n}\n\nexport function deleteGlobal() {\n    delete window[__POST_ROBOT__.__GLOBAL_KEY__];\n}\n\ntype ObjectGetter = () => Object;\nconst getObj : ObjectGetter = () => ({});\n\ntype GetOrSet<T> = ((string, () => T) => T) & ((string, () => void) => void);\n\ntype GlobalStore<T> = {|\n    get : ((string, T) => T) & ((string, void) => T | void),\n    set : (string, T) => T,\n    has : (string) => boolean,\n    del : (string) => void,\n    getOrSet : GetOrSet<T>,\n    reset : () => void,\n    keys : () => $ReadOnlyArray<string>\n|};\n\n// $FlowFixMe\nexport function globalStore<T : mixed>(key? : string = 'store', defStore? : ObjectGetter = getObj) : GlobalStore<T> {\n    return getOrSet(getGlobal(), key, () => {\n        let store = defStore();\n\n        return {\n            has: (storeKey) => {\n                return store.hasOwnProperty(storeKey);\n            },\n            get: (storeKey, defVal) => {\n                // $FlowFixMe\n                return store.hasOwnProperty(storeKey) ? store[storeKey] : defVal;\n            },\n            set: (storeKey, val) => {\n                store[storeKey] = val;\n                return val;\n            },\n            del: (storeKey) => {\n                delete store[storeKey];\n            },\n            getOrSet: (storeKey, getter) => {\n                // $FlowFixMe\n                return getOrSet(store, storeKey, getter);\n            },\n            reset: () => {\n                store = defStore();\n            },\n            keys: () => {\n                return Object.keys(store);\n            }\n        };\n    });\n}\n\nexport class WildCard {}\n\nexport function getWildcard() : WildCard {\n    const global = getGlobal();\n    global.WINDOW_WILDCARD = global.WINDOW_WILDCARD || new WildCard();\n    return global.WINDOW_WILDCARD;\n}\n\ntype WindowStore<T> = {|\n    get : ((CrossDomainWindowType | WildCard, T) => T) & ((CrossDomainWindowType | WildCard, void) => T | void),\n    set : (CrossDomainWindowType | WildCard, T) => T,\n    has : (CrossDomainWindowType | WildCard) => boolean,\n    del : (CrossDomainWindowType | WildCard) => void,\n    getOrSet : (CrossDomainWindowType | WildCard, () => T) => T\n|};\n\n// $FlowFixMe\nexport function windowStore<T>(key? : string = 'store', defStore? : ObjectGetter = getObj) : WindowStore<T> {\n    return globalStore('windowStore').getOrSet(key, () => {\n        const winStore = new WeakMap();\n\n        const getStore = (win : CrossDomainWindowType | WildCard) : ObjectGetter => {\n            return winStore.getOrSet(win, defStore);\n        };\n    \n        return {\n            has: (win) => {\n                const store = getStore(win);\n                return store.hasOwnProperty(key);\n            },\n            get: (win, defVal) => {\n                const store = getStore(win);\n                // $FlowFixMe\n                return store.hasOwnProperty(key) ? store[key] : defVal;\n            },\n            set: (win, val) => {\n                const store = getStore(win);\n                store[key] = val;\n                return val;\n            },\n            del: (win) => {\n                const store = getStore(win);\n                delete store[key];\n            },\n            getOrSet: (win, getter) => {\n                const store = getStore(win);\n                return getOrSet(store, key, getter);\n            }\n        };\n    });\n}\n","/* @flow */\n\nimport { getAncestor, type CrossDomainWindowType } from 'cross-domain-utils/src';\nimport { ZalgoPromise } from 'zalgo-promise/src';\nimport { noop, uniqueID } from 'belter/src';\n\nimport { MESSAGE_NAME, WILDCARD } from '../conf';\nimport { windowStore, globalStore } from '../global';\nimport type { OnType, SendType, CancelableType } from '../types';\n\nfunction getInstanceID() : string {\n    return globalStore('instance').getOrSet('instanceID', uniqueID);\n}\n\nfunction getHelloPromise(win : CrossDomainWindowType) : ZalgoPromise<{ win : CrossDomainWindowType, domain : string }> {\n    const helloPromises = windowStore('helloPromises');\n    return helloPromises.getOrSet(win, () => new ZalgoPromise());\n}\n\nfunction listenForHello({ on } : { on : OnType }) : CancelableType {\n    return on(MESSAGE_NAME.HELLO, { domain: WILDCARD }, ({ source, origin }) => {\n        getHelloPromise(source).resolve({ win: source, domain: origin });\n        return { instanceID: getInstanceID() };\n    });\n}\n\nexport function sayHello(win : CrossDomainWindowType, { send } : { send : SendType }) : ZalgoPromise<{ win : CrossDomainWindowType, domain : string, instanceID : string }> {\n    return send(win, MESSAGE_NAME.HELLO, { instanceID: getInstanceID() }, { domain: WILDCARD, timeout: -1 })\n        .then(({ origin, data: { instanceID } }) => {\n            getHelloPromise(win).resolve({ win, domain: origin });\n            return { win, domain: origin, instanceID };\n        });\n}\n\nexport function getWindowInstanceID(win : CrossDomainWindowType, { send } : { send : SendType }) : ZalgoPromise<string> {\n    return windowStore('windowInstanceIDPromises').getOrSet(win, () => {\n        return sayHello(win, { send }).then(({ instanceID }) => instanceID);\n    });\n}\n\nexport function initHello({ on, send } : { on : OnType, send : SendType }) : CancelableType {\n    return globalStore('builtinListeners').getOrSet('helloListener', () => {\n        const listener = listenForHello({ on });\n\n        const parent = getAncestor();\n        if (parent) {\n            sayHello(parent, { send }).catch(noop);\n        }\n\n        return listener;\n    });\n}\n\nexport function awaitWindowHello(win : CrossDomainWindowType, timeout : number = 5000, name : string = 'Window') : ZalgoPromise<{ win : CrossDomainWindowType, domain : string }> {\n    let promise = getHelloPromise(win);\n\n    if (timeout !== -1) {\n        promise = promise.timeout(timeout, new Error(`${ name } did not load after ${ timeout }ms`));\n    }\n\n    return promise;\n}\n","/* @flow */\n\nimport { type CrossDomainWindowType } from 'cross-domain-utils/src';\n\nimport { windowStore } from '../global';\n\nexport function markWindowKnown(win : CrossDomainWindowType) {\n    const knownWindows = windowStore('knownWindows');\n    knownWindows.set(win, true);\n}\n\nexport function isWindowKnown(win : CrossDomainWindowType) : boolean {\n    const knownWindows = windowStore('knownWindows');\n    return knownWindows.get(win, false);\n}\n","/* @flow */\n\nexport const TYPE = {\n    FUNCTION:  ('function' : 'function'),\n    ERROR:     ('error' : 'error'),\n    PROMISE:   ('promise' : 'promise'),\n    REGEX:     ('regex' : 'regex'),\n    DATE:      ('date' : 'date'),\n    ARRAY:     ('array' : 'array'),\n    OBJECT:    ('object' : 'object'),\n    STRING:    ('string' : 'string'),\n    NUMBER:    ('number' : 'number'),\n    BOOLEAN:   ('boolean' : 'boolean'),\n    NULL:      ('null' : 'null'),\n    UNDEFINED: ('undefined' : 'undefined')\n};\n","/* @flow */\n\nimport { TYPE } from './constants';\nimport type { CustomSerializedType } from './types';\n\nexport function isSerializedType(item : mixed) : boolean {\n    return (typeof item === 'object' && item !== null && typeof item.__type__ === 'string');\n}\n\nexport function determineType(val : mixed) : $Values<typeof TYPE> | void {\n    if (typeof val === 'undefined') {\n        return TYPE.UNDEFINED;\n    }\n\n    if (val === null) {\n        return TYPE.NULL;\n    }\n\n    if (Array.isArray(val)) {\n        return TYPE.ARRAY;\n    }\n\n    if (typeof val === 'function') {\n        return TYPE.FUNCTION;\n    }\n\n    if (typeof val === 'object') {\n\n        if (val instanceof Error) {\n            return TYPE.ERROR;\n        }\n\n        if (typeof val.then === 'function') {\n            return TYPE.PROMISE;\n        }\n\n        if (Object.prototype.toString.call(val) === '[object RegExp]') {\n            return TYPE.REGEX;\n        }\n\n        if (Object.prototype.toString.call(val) === '[object Date]') {\n            return TYPE.DATE;\n        }\n\n        return TYPE.OBJECT;\n    }\n\n    if (typeof val === 'string') {\n        return TYPE.STRING;\n    }\n\n    if (typeof val === 'number') {\n        return TYPE.NUMBER;\n    }\n\n    if (typeof val === 'boolean') {\n        return TYPE.BOOLEAN;\n    }\n}\n\nexport function serializeType<T : string, V : mixed>(type : T, val : V) : CustomSerializedType<T, V> {\n    return {\n        __type__: type,\n        __val__:  val\n    };\n}\n","/* @flow */\n\nimport { TYPE } from './constants';\nimport type { Thenable, CustomSerializedType, NativeSerializedType } from './types';\nimport { determineType, isSerializedType } from './common';\nimport {\n    serializeFunction,\n    serializeError, type SerializedError,\n    serializePromise,\n    serializeRegex, type SerializedRegex,\n    serializeDate, type SerializedDate,\n    serializeArray,\n    serializeObject,\n    serializeString,\n    serializeNumber,\n    serializeBoolean,\n    serializeNull\n} from './serializers';\n\ntype NativeSerializer<V : mixed, S : mixed, T : $Values<typeof TYPE>> = (value : V, key : string) => NativeSerializedType<T, S>;\ntype CustomSerializer<V : mixed, S : mixed, T : string> = (value : V, key : string) => CustomSerializedType<T, S>;\ntype PrimitiveSerializer<V : mixed, S : mixed> = (value : V, key : string) => S;\ntype CustomOrPrimitiveSerializer<V : mixed, T : string> = CustomSerializer<V, *, T> | PrimitiveSerializer<V, *>;\ntype NativeOrCustomOrPrimitiveSerializer<V : mixed, S : mixed, T : string> = NativeSerializer<V, S, T> | CustomOrPrimitiveSerializer<V, T>;\n\ntype Serializers = {|\n    function? : CustomOrPrimitiveSerializer<Function, typeof TYPE.FUNCTION>,\n    error? : NativeOrCustomOrPrimitiveSerializer<Error, SerializedError, typeof TYPE.ERROR>,\n    promise? : CustomOrPrimitiveSerializer<Thenable, typeof TYPE.PROMISE>,\n    regex? : NativeOrCustomOrPrimitiveSerializer<RegExp, SerializedRegex, typeof TYPE.REGEX>,\n    date? : NativeOrCustomOrPrimitiveSerializer<Date, SerializedDate, typeof TYPE.DATE>,\n    array? : CustomOrPrimitiveSerializer<$ReadOnlyArray<mixed>, typeof TYPE.ARRAY>,\n    object? : CustomOrPrimitiveSerializer<Object, typeof TYPE.OBJECT>,\n    string? : CustomOrPrimitiveSerializer<string, typeof TYPE.STRING>,\n    number? : CustomOrPrimitiveSerializer<number, typeof TYPE.NUMBER>,\n    boolean? : CustomOrPrimitiveSerializer<boolean, typeof TYPE.BOOLEAN>,\n    null? : CustomOrPrimitiveSerializer<null, typeof TYPE.NULL>\n|};\n\nconst SERIALIZER : Serializers = {\n    [ TYPE.FUNCTION ]:  serializeFunction,\n    [ TYPE.ERROR ]:     serializeError,\n    [ TYPE.PROMISE ]:   serializePromise,\n    [ TYPE.REGEX ]:     serializeRegex,\n    [ TYPE.DATE ]:      serializeDate,\n    [ TYPE.ARRAY ]:     serializeArray,\n    [ TYPE.OBJECT ]:    serializeObject,\n    [ TYPE.STRING ]:    serializeString,\n    [ TYPE.NUMBER ]:    serializeNumber,\n    [ TYPE.BOOLEAN ]:   serializeBoolean,\n    [ TYPE.NULL ]:      serializeNull\n};\n\n// $FlowFixMe\nconst defaultSerializers : Serializers = {};\n\nexport function serialize<T : mixed>(obj : T, serializers : Serializers = defaultSerializers) : string {\n\n    function replacer(key) : ?mixed {\n        const val = this[key];\n\n        if (isSerializedType(this)) {\n            return val;\n        }\n        \n        const type = determineType(val);\n\n        if (!type) {\n            return val;\n        }\n\n        // $FlowFixMe\n        const serializer = serializers[type] || SERIALIZER[type];\n\n        if (!serializer) {\n            return val;\n        }\n\n        return serializer(val, key);\n    }\n\n    const result = JSON.stringify(obj, replacer);\n\n    if (typeof result === 'undefined') {\n        return TYPE.UNDEFINED;\n    }\n\n    return result;\n}\n","/* @flow */\n\nexport type SerializedFunction = void;\n\nexport function serializeFunction() : SerializedFunction {\n    // pass\n}\n\nexport function deserializeFunction() {\n    throw new Error(`Function serialization is not implemented; nothing to deserialize`);\n}\n","/* @flow */\n\nimport { serializeType } from '../common';\nimport { TYPE } from '../constants';\nimport type { NativeSerializedType } from '../types';\n\nexport type SerializedError = {|\n    message : string,\n    stack : string,\n    code : string | number | void\n|};\n\n// $FlowFixMe\nexport function serializeError({ message, stack, code } : Error) : NativeSerializedType<typeof TYPE.ERROR, SerializedError> {\n    return serializeType(TYPE.ERROR, { message, stack, code });\n}\n\nexport function deserializeError({ message, stack, code } : SerializedError) : Error {\n    const error = new Error(message);\n    // $FlowFixMe\n    error.code = code;\n    error.stack = `${ stack }\\n\\n${ error.stack }`;\n    return error;\n}\n","/* @flow */\n\nexport type SerializedPromise = void;\n\nexport function serializePromise() : SerializedPromise {\n    // pass\n}\n\nexport function deserializePromise() {\n    throw new Error(`Promise serialization is not implemented; nothing to deserialize`);\n}\n","/* @flow */\n\nimport { serializeType } from '../common';\nimport { TYPE } from '../constants';\nimport type { NativeSerializedType } from '../types';\n\nexport type SerializedRegex = string;\n\nexport function serializeRegex(val : RegExp) : NativeSerializedType<typeof TYPE.REGEX, SerializedRegex> {\n    return serializeType(TYPE.REGEX, val.source);\n}\n\nexport function deserializeRegex(val : string) : RegExp {\n    // eslint-disable-next-line security/detect-non-literal-regexp\n    return new RegExp(val);\n}\n","/* @flow */\n\nimport { serializeType } from '../common';\nimport { TYPE } from '../constants';\nimport type { NativeSerializedType } from '../types';\n\nexport type SerializedDate = string;\n\nexport function serializeDate(val : Date) : NativeSerializedType<typeof TYPE.DATE, SerializedDate> {\n    return serializeType(TYPE.DATE, val.toJSON());\n}\n\nexport function deserializeDate(val : string) : Date {\n    return new Date(val);\n}\n","/* @flow */\n\nexport type SerializedArray<T : mixed = mixed> = $ReadOnlyArray<T>;\n\nexport function serializeArray<T : mixed>(val : $ReadOnlyArray<T>) : SerializedArray<T> {\n    return val;\n}\n\nexport function deserializeArray<T : mixed>(val : SerializedArray<T>) : $ReadOnlyArray<T> {\n    return val;\n}\n","/* @flow */\n\nexport type SerializedObject = Object;\n\nexport function serializeObject(val : Object) : SerializedObject {\n    return val;\n}\n\nexport function deserializeObject(val : SerializedObject) : Object {\n    return val;\n}\n","/* @flow */\n\nexport type SerializedString = string;\n\nexport function serializeString(val : string) : SerializedString {\n    return val;\n}\n\nexport function deserializeString(val : SerializedString) : string {\n    return val;\n}\n","/* @flow */\n\nexport type SerializedNumber = number;\n\nexport function serializeNumber(val : number) : SerializedNumber {\n    return val;\n}\n\nexport function deserializeNumber(val : SerializedNumber) : number {\n    return val;\n}\n","/* @flow */\n\nexport type SerializedBoolean = boolean;\n\nexport function serializeBoolean(val : boolean) : SerializedBoolean {\n    return val;\n}\n\nexport function deserializeBoolean(val : SerializedBoolean) : boolean {\n    return val;\n}\n","/* @flow */\n\nexport type SerializedNull = null;\n\nexport function serializeNull(val : null) : SerializedNull {\n    return val;\n}\n\nexport function deserializeNull(val : SerializedNull) : null {\n    return val;\n}\n","/* @flow */\n\nimport type { Thenable } from './types';\nimport { TYPE } from './constants';\nimport { determineType, isSerializedType } from './common';\nimport {\n    deserializeFunction,\n    deserializeError, type SerializedError,\n    deserializePromise,\n    deserializeRegex, type SerializedRegex,\n    deserializeDate, type SerializedDate,\n    deserializeArray,\n    deserializeObject,\n    deserializeString,\n    deserializeNumber,\n    deserializeBoolean,\n    deserializeNull\n} from './serializers';\n\ntype Deserializer<V : mixed, S : mixed> = (serializedValue : S, key : string) => V;\ntype PrimitiveDeserializer<V, S = V> = (serializedValue : S, key : string) => V;\n\ntype Deserializers = {\n    function? : Deserializer<Function, *>,\n    error? : Deserializer<Error, SerializedError>,\n    promise? : Deserializer<Thenable, *>,\n    regex? : Deserializer<RegExp, SerializedRegex>,\n    date? : Deserializer<Date, SerializedDate>,\n    array? : PrimitiveDeserializer<$ReadOnlyArray<mixed>>,\n    object? : PrimitiveDeserializer<Object>,\n    string? : PrimitiveDeserializer<string>,\n    number? : PrimitiveDeserializer<number>,\n    boolean? : PrimitiveDeserializer<boolean>,\n    null? : PrimitiveDeserializer<null>,\n    [string] : Deserializer<mixed, *>\n};\n\n// $FlowFixMe\nconst DESERIALIZER : Deserializers = {\n    [ TYPE.FUNCTION ]:  deserializeFunction,\n    [ TYPE.ERROR ]:     deserializeError,\n    [ TYPE.PROMISE ]:   deserializePromise,\n    [ TYPE.REGEX ]:     deserializeRegex,\n    [ TYPE.DATE ]:      deserializeDate,\n    [ TYPE.ARRAY ]:     deserializeArray,\n    [ TYPE.OBJECT ]:    deserializeObject,\n    [ TYPE.STRING ]:    deserializeString,\n    [ TYPE.NUMBER ]:    deserializeNumber,\n    [ TYPE.BOOLEAN ]:   deserializeBoolean,\n    [ TYPE.NULL ]:      deserializeNull\n};\n\n// $FlowFixMe\nconst defaultDeserializers : Deserializers = {};\n\nexport function deserialize<T : mixed | null | void>(str : string, deserializers : Deserializers = defaultDeserializers) : T {\n    if (str === TYPE.UNDEFINED) {\n        // $FlowFixMe\n        return;\n    }\n\n    function replacer(key, val) : ?mixed {\n        if (isSerializedType(this)) {\n            return val;\n        }\n\n        let type;\n        let value;\n\n        if (isSerializedType(val)) {\n            type = val.__type__;\n            value = val.__val__;\n        } else {\n            type = determineType(val);\n            value = val;\n        }\n\n        if (!type) {\n            return value;\n        }\n\n        // $FlowFixMe\n        const deserializer = deserializers[type] || DESERIALIZER[type];\n\n        if (!deserializer) {\n            return value;\n        }\n\n        return deserializer(value, key);\n    }\n\n    return JSON.parse(str, replacer);\n}\n","/* @flow */\n\nimport { isSameDomain, isWindowClosed, type CrossDomainWindowType, closeWindow,\n    type DomainMatcher, getOpener, WINDOW_TYPE, isWindow, assertSameDomain } from 'cross-domain-utils/src';\nimport { ZalgoPromise } from 'zalgo-promise/src';\nimport { uniqueID, memoizePromise } from 'belter/src';\nimport { serializeType, type CustomSerializedType } from 'universal-serialize/src';\n\nimport { SERIALIZATION_TYPE } from '../conf';\nimport { windowStore, globalStore } from '../global';\nimport { getWindowInstanceID } from '../lib';\nimport { linkWindow } from '../bridge';\nimport type { OnType, SendType } from '../types';\n\nfunction cleanupProxyWindows() {\n    const idToProxyWindow = globalStore('idToProxyWindow');\n    for (const id of idToProxyWindow.keys()) {\n        // $FlowFixMe\n        if (idToProxyWindow.get(id).shouldClean()) {\n            idToProxyWindow.del(id);\n        }\n    }\n}\n\ntype SerializedProxyWindow = {|\n    id : string,\n    type : $Values<typeof WINDOW_TYPE>,\n    close : () => ZalgoPromise<void>,\n    focus : () => ZalgoPromise<void>,\n    isClosed : () => ZalgoPromise<boolean>,\n    setLocation : (string) => ZalgoPromise<void>,\n    getName : () => ZalgoPromise<?string>,\n    setName : (string) => ZalgoPromise<void>,\n    getInstanceID : () => ZalgoPromise<string>\n|};\n\nfunction getSerializedWindow(id : string, win : CrossDomainWindowType, { send } : { send : SendType }) : SerializedProxyWindow {\n    let windowName;\n    \n    return {\n        id,\n        type:          getOpener(win) ? WINDOW_TYPE.POPUP : WINDOW_TYPE.IFRAME,\n        getInstanceID: memoizePromise(() => getWindowInstanceID(win, { send })),\n        close:         () => ZalgoPromise.try(() => {\n            closeWindow(win);\n        }),\n        getName: () => ZalgoPromise.try(() => {\n            if (isWindowClosed(win)) {\n                return;\n            }\n\n            return windowName;\n        }),\n        focus:   () => ZalgoPromise.try(() => {\n            win.focus();\n        }),\n        isClosed: () => ZalgoPromise.try(() => {\n            return isWindowClosed(win);\n        }),\n        setLocation: (href) => ZalgoPromise.try(() => {\n            if (isSameDomain(win)) {\n                try {\n                    if (win.location && typeof win.location.replace === 'function') {\n                        // $FlowFixMe\n                        win.location.replace(href);\n                        return;\n                    }\n                } catch (err) {\n                    // pass\n                }\n            }\n\n            win.location = href;\n        }),\n        setName: (name) => ZalgoPromise.try(() => {\n            if (__POST_ROBOT__.__IE_POPUP_SUPPORT__) {\n                linkWindow({ win, name });\n            }\n\n            win = assertSameDomain(win);\n\n            win.name = name;\n\n            if (win.frameElement) {\n                win.frameElement.setAttribute('name', name);\n            }\n\n            windowName = name;\n        })\n    };\n}\n\nexport class ProxyWindow {\n\n    isProxyWindow : true = true\n    serializedWindow : SerializedProxyWindow\n    actualWindow : CrossDomainWindowType\n    actualWindowPromise : ZalgoPromise<CrossDomainWindowType>\n    send : SendType\n    name : string\n\n    constructor(serializedWindow : SerializedProxyWindow, actualWindow? : ?CrossDomainWindowType, { send } : { send : SendType }) {\n        this.serializedWindow = serializedWindow;\n        this.actualWindowPromise = new ZalgoPromise();\n        this.send = send;\n        if (actualWindow) {\n            this.setWindow(actualWindow);\n        }\n    }\n\n    getType() : $Values<typeof WINDOW_TYPE> {\n        return this.serializedWindow.type;\n    }\n\n    isPopup() : boolean {\n        return this.getType() === WINDOW_TYPE.POPUP;\n    }\n\n    isIframe() : boolean {\n        return this.getType() === WINDOW_TYPE.IFRAME;\n    }\n\n    setLocation(href : string) : ZalgoPromise<ProxyWindow> {\n        return this.serializedWindow.setLocation(href).then(() => this);\n    }\n\n    setName(name : string) : ZalgoPromise<ProxyWindow> {\n        return this.serializedWindow.setName(name).then(() => this);\n    }\n\n    close() : ZalgoPromise<ProxyWindow> {\n        return this.serializedWindow.close().then(() => this);\n    }\n\n    focus() : ZalgoPromise<ProxyWindow> {\n        return ZalgoPromise.try(() => {\n            return ZalgoPromise.all([\n                this.isPopup() && this.serializedWindow.getName().then(name => {\n                    if (name) {\n                        window.open('', name);\n                    }\n                }),\n                this.serializedWindow.focus()\n            ]);\n        }).then(() => this);\n    }\n\n    isClosed() : ZalgoPromise<boolean> {\n        return this.serializedWindow.isClosed();\n    }\n\n    getWindow() : ?CrossDomainWindowType {\n        return this.actualWindow;\n    }\n\n    setWindow(win : CrossDomainWindowType) {\n        this.actualWindow = win;\n        this.serializedWindow = getSerializedWindow(this.serializedWindow.id, win, { send: this.send });\n        this.actualWindowPromise.resolve(win);\n    }\n\n    awaitWindow() : ZalgoPromise<CrossDomainWindowType> {\n        return this.actualWindowPromise;\n    }\n\n    matchWindow(win : CrossDomainWindowType) : ZalgoPromise<boolean> {\n        return ZalgoPromise.try(() => {\n            if (this.actualWindow) {\n                return win === this.actualWindow;\n            }\n            \n            return ZalgoPromise.all([\n                this.getInstanceID(),\n                getWindowInstanceID(win, { send: this.send })\n            ]).then(([ proxyInstanceID, knownWindowInstanceID ]) => {\n                const match = proxyInstanceID === knownWindowInstanceID;\n\n                if (match) {\n                    this.setWindow(win);\n                }\n\n                return match;\n            });\n        });\n    }\n\n    unwrap() : CrossDomainWindowType | ProxyWindow {\n        return this.actualWindow || this;\n    }\n\n    getInstanceID() : ZalgoPromise<string> {\n        return this.serializedWindow.getInstanceID();\n    }\n\n    serialize() : SerializedProxyWindow {\n        return this.serializedWindow;\n    }\n\n    shouldClean() : boolean {\n        return this.actualWindow && isWindowClosed(this.actualWindow);\n    }\n\n    static unwrap(win : CrossDomainWindowType | ProxyWindow) : CrossDomainWindowType | ProxyWindow {\n        return ProxyWindow.isProxyWindow(win)\n            // $FlowFixMe\n            ? win.unwrap()\n            : win;\n    }\n\n    static serialize(win : CrossDomainWindowType | ProxyWindow, { send } : { send : SendType }) : SerializedProxyWindow {\n        cleanupProxyWindows();\n\n        return ProxyWindow.toProxyWindow(win, { send }).serialize();\n    }\n\n    static deserialize(serializedWindow : SerializedProxyWindow, { on, send } : { on : OnType, send : SendType }) : ProxyWindow {\n        cleanupProxyWindows();\n        \n        return globalStore('idToProxyWindow').getOrSet(serializedWindow.id, () => {\n            return new ProxyWindow(serializedWindow, null, { on, send });\n        });\n    }\n\n    static isProxyWindow(obj : CrossDomainWindowType | ProxyWindow) : boolean {\n        // $FlowFixMe\n        return Boolean(obj && !isWindow(obj) && obj.isProxyWindow);\n    }\n\n    static toProxyWindow(win : CrossDomainWindowType | ProxyWindow, { send } : { send : SendType }) : ProxyWindow {\n        cleanupProxyWindows();\n\n        if (ProxyWindow.isProxyWindow(win)) {\n            // $FlowFixMe\n            return win;\n        }\n\n        // $FlowFixMe\n        const realWin : CrossDomainWindowType = win;\n\n        // $FlowFixMe\n        return windowStore('winToProxyWindow').getOrSet(win, () => {\n            const id = uniqueID();\n            const serializedWindow = getSerializedWindow(id, realWin, { send });\n            const proxyWindow = new ProxyWindow(serializedWindow, realWin, { send });\n\n            return globalStore('idToProxyWindow').set(id, proxyWindow);\n        });\n    }\n}\n\nexport type SerializedWindow = CustomSerializedType<typeof SERIALIZATION_TYPE.CROSS_DOMAIN_WINDOW, SerializedProxyWindow>;\n\nexport function serializeWindow(destination : CrossDomainWindowType | ProxyWindow, domain : DomainMatcher, win : CrossDomainWindowType, { send } : { send : SendType }) : SerializedWindow {\n    return serializeType(SERIALIZATION_TYPE.CROSS_DOMAIN_WINDOW, ProxyWindow.serialize(win, { send }));\n}\n\nexport function deserializeWindow(source : CrossDomainWindowType | ProxyWindow, origin : string, win : SerializedProxyWindow, { on, send } : { on : OnType, send : SendType }) : ProxyWindow {\n    return ProxyWindow.deserialize(win, { on, send });\n}\n","/* @flow */\n\nimport { ZalgoPromise } from 'zalgo-promise/src';\nimport { getDomain, isSameDomain, isOpener, isSameTopWindow, matchDomain, getUserAgent, getDomainFromUrl, type CrossDomainWindowType } from 'cross-domain-utils/src';\nimport { noop } from 'belter/src';\n\nimport { BRIDGE_NAME_PREFIX } from '../conf';\nimport { windowStore } from '../global';\n\nexport function needsBridgeForBrowser() : boolean {\n\n    if (getUserAgent(window).match(/MSIE|trident|edge\\/12|edge\\/13/i)) {\n        return true;\n    }\n\n    return false;\n}\n\nexport function needsBridgeForWin(win : CrossDomainWindowType) : boolean {\n\n    if (!isSameTopWindow(window, win)) {\n        return true;\n    }\n\n    return false;\n}\n\nexport function needsBridgeForDomain(domain : ?string, win : ?CrossDomainWindowType) : boolean {\n\n    if (domain) {\n        if (getDomain() !== getDomainFromUrl(domain)) {\n            return true;\n        }\n    } else if (win) {\n        if (!isSameDomain(win))  {\n            return true;\n        }\n    }\n\n    return false;\n}\n\nexport function needsBridge({ win, domain } : { win? : CrossDomainWindowType, domain? : string }) : boolean {\n\n    if (!needsBridgeForBrowser()) {\n        return false;\n    }\n\n    if (domain && !needsBridgeForDomain(domain, win)) {\n        return false;\n    }\n\n    if (win && !needsBridgeForWin(win)) {\n        return false;\n    }\n\n    return true;\n}\n\nexport function getBridgeName(domain : string) : string {\n\n    domain = domain || getDomainFromUrl(domain);\n\n    const sanitizedDomain = domain.replace(/[^a-zA-Z0-9]+/g, '_');\n\n    const id = `${ BRIDGE_NAME_PREFIX }_${ sanitizedDomain }`;\n\n    return id;\n}\n\nexport function isBridge() : boolean {\n    return Boolean(window.name && window.name === getBridgeName(getDomain()));\n}\n\nexport const documentBodyReady = new ZalgoPromise(resolve => {\n\n    if (window.document && window.document.body) {\n        return resolve(window.document.body);\n    }\n\n    const interval = setInterval(() => {\n        if (window.document && window.document.body) {\n            clearInterval(interval);\n            return resolve(window.document.body);\n        }\n    }, 10);\n});\n\nexport function registerRemoteWindow(win : CrossDomainWindowType) {\n    const remoteWindowPromises = windowStore('remoteWindowPromises');\n    remoteWindowPromises.getOrSet(win, () => new ZalgoPromise());\n}\n\nexport function findRemoteWindow(win : CrossDomainWindowType) : ZalgoPromise<(remoteWin : CrossDomainWindowType, message : string, remoteDomain : string) => void> {\n    const remoteWindowPromises = windowStore('remoteWindowPromises');\n    const remoteWinPromise = remoteWindowPromises.get(win);\n\n    if (!remoteWinPromise) {\n        throw new Error(`Remote window promise not found`);\n    }\n\n    return remoteWinPromise;\n}\n\nexport function registerRemoteSendMessage(win : CrossDomainWindowType, domain : string, sendMessage : (message : string) => void) {\n    const sendMessageWrapper = (remoteWin : CrossDomainWindowType, remoteDomain : string, message : string) => {\n        if (remoteWin !== win) {\n            throw new Error(`Remote window does not match window`);\n        }\n\n        if (!matchDomain(remoteDomain, domain)) {\n            throw new Error(`Remote domain ${ remoteDomain } does not match domain ${ domain }`);\n        }\n\n        sendMessage.fireAndForget(message);\n    };\n\n    findRemoteWindow(win).resolve(sendMessageWrapper);\n}\n\nexport function rejectRemoteSendMessage(win : CrossDomainWindowType, err : Error) {\n    findRemoteWindow(win).reject(err).catch(noop);\n}\n\nexport function sendBridgeMessage(win : CrossDomainWindowType, domain : string, message : string) : ZalgoPromise<void> {\n\n    const messagingChild  = isOpener(window, win);\n    const messagingParent = isOpener(win, window);\n\n    if (!messagingChild && !messagingParent) {\n        throw new Error(`Can only send messages to and from parent and popup windows`);\n    }\n\n    return findRemoteWindow(win).then(sendMessage => {\n        return sendMessage(win, domain, message);\n    });\n}\n","/* @flow */\n\nimport { matchDomain, getDomain, type CrossDomainWindowType, type DomainMatcher } from 'cross-domain-utils/src';\nimport { ZalgoPromise } from 'zalgo-promise/src';\nimport { uniqueID, isRegex } from 'belter/src';\nimport { serializeType, type CustomSerializedType } from 'universal-serialize/src';\n\nimport { MESSAGE_NAME, WILDCARD, SERIALIZATION_TYPE } from '../conf';\nimport { windowStore, globalStore } from '../global';\nimport type { OnType, SendType, CancelableType } from '../types';\n\nimport { ProxyWindow } from './window';\n\ntype StoredMethod = {|\n    name : string,\n    domain : DomainMatcher,\n    val : Function,\n    source : CrossDomainWindowType | ProxyWindow\n|};\n\nfunction addMethod(id : string, val : Function, name : string, source : CrossDomainWindowType | ProxyWindow, domain : DomainMatcher) {\n    const methodStore = windowStore('methodStore');\n    const proxyWindowMethods = globalStore('proxyWindowMethods');\n    \n    if (ProxyWindow.isProxyWindow(source)) {\n        proxyWindowMethods.set(id, { val, name, domain, source });\n    } else {\n        proxyWindowMethods.del(id);\n        // $FlowFixMe\n        const methods = methodStore.getOrSet(source, () => ({}));\n        methods[id] = { domain, name, val, source };\n    }\n}\n\nfunction lookupMethod(source : CrossDomainWindowType, id : string) : ?StoredMethod {\n    const methodStore = windowStore('methodStore');\n    const proxyWindowMethods = globalStore('proxyWindowMethods');\n    const methods = methodStore.getOrSet(source, () => ({}));\n    return methods[id] || proxyWindowMethods.get(id);\n}\n\nfunction listenForFunctionCalls({ on } : { on : OnType }) : CancelableType {\n    return globalStore('builtinListeners').getOrSet('functionCalls', () => {\n        return on(MESSAGE_NAME.METHOD, { domain: WILDCARD }, ({ source, origin, data } : { source : CrossDomainWindowType, origin : string, data : Object }) => {\n            const { id, name } = data;\n\n            const meth = lookupMethod(source, id);\n    \n            if (!meth) {\n                throw new Error(`Could not find method '${ data.name }' with id: ${ data.id } in ${ getDomain(window) }`);\n            }\n\n            const { source: methodSource, domain, val } = meth;\n            \n            return ZalgoPromise.try(() => {\n                if (!matchDomain(domain, origin)) {\n                    // $FlowFixMe\n                    throw new Error(`Method '${ data.name }' domain ${ JSON.stringify(isRegex(meth.domain) ? meth.domain.source : meth.domain) } does not match origin ${ origin } in ${ getDomain(window) }`);\n                }\n                \n                if (ProxyWindow.isProxyWindow(methodSource)) {\n                    // $FlowFixMe\n                    return methodSource.matchWindow(source).then(match => {\n                        if (!match) {\n                            throw new Error(`Method call '${ data.name }' failed - proxy window does not match source in ${ getDomain(window) }`);\n                        }\n                    });\n                }\n            }).then(() => {\n                return val.apply({ source, origin }, data.args);\n            }, err => {\n                return ZalgoPromise.try(() => {\n                    if (val.onError) {\n                        return val.onError(err);\n                    }\n                }).then(() => {\n                    // $FlowFixMe\n                    if (err.stack) {\n                        // $FlowFixMe\n                        err.stack = `Remote call to ${ name }()\\n\\n${ err.stack }`;\n                    }\n\n                    throw err;\n                });\n            }).then(result => {\n                return { result, id, name };\n            });\n        });\n    });\n}\n\nexport type SerializedFunction = CustomSerializedType<typeof SERIALIZATION_TYPE.CROSS_DOMAIN_FUNCTION, {\n    id : string,\n    name : string\n}>;\n\nexport function serializeFunction<T>(destination : CrossDomainWindowType | ProxyWindow, domain : DomainMatcher, val : () => ZalgoPromise<T> | T, key : string, { on } : { on : OnType }) : SerializedFunction {\n    listenForFunctionCalls({ on });\n    \n    const id = val.__id__ || uniqueID();\n    destination = ProxyWindow.unwrap(destination);\n    const name = val.__name__ || val.name || key;\n\n    if (ProxyWindow.isProxyWindow(destination)) {\n        addMethod(id, val, name, destination, domain);\n\n        // $FlowFixMe\n        destination.awaitWindow().then(win => {\n            addMethod(id, val, name, win, domain);\n        });\n    } else {\n        addMethod(id, val, name, destination, domain);\n    }\n\n    return serializeType(SERIALIZATION_TYPE.CROSS_DOMAIN_FUNCTION, { id, name });\n}\n\nexport function deserializeFunction<T>(source : CrossDomainWindowType | ProxyWindow, origin : string, { id, name } : { id : string, name : string }, { send } : { send : SendType }) : (...args : $ReadOnlyArray<mixed>) => ZalgoPromise<T> {\n    const getDeserializedFunction = (opts? : Object = {}) => {\n        function crossDomainFunctionWrapper<X : mixed>() : ZalgoPromise<X> {\n            let originalStack;\n    \n            if (__DEBUG__) {\n                originalStack = (new Error(`Original call to ${ name }():`)).stack;\n            }\n    \n            return ProxyWindow.toProxyWindow(source, { send }).awaitWindow().then(win => {\n                const meth = lookupMethod(win, id);\n    \n                if (meth && meth.val !== crossDomainFunctionWrapper) {\n                    return meth.val.apply({ source: window, origin: getDomain() }, arguments);\n                } else {\n                    // $FlowFixMe\n                    const options = { domain: origin, fireAndForget: opts.fireAndForget };\n                    const args = Array.prototype.slice.call(arguments);\n\n                    return send(win, MESSAGE_NAME.METHOD, { id, name, args }, options)\n                        .then(res => {\n                            if (!opts.fireAndForget) {\n                                return res.data.result;\n                            }\n                        });\n                }\n    \n            }).catch(err => {\n                // $FlowFixMe\n                if (__DEBUG__ && originalStack && err.stack) {\n                    // $FlowFixMe\n                    err.stack = `${ err.stack }\\n\\n${ originalStack }`;\n                }\n                throw err;\n            });\n        }\n\n        crossDomainFunctionWrapper.__name__ = name;\n        crossDomainFunctionWrapper.__origin__ = origin;\n        crossDomainFunctionWrapper.__source__ = source;\n        crossDomainFunctionWrapper.__id__ = id;\n\n        crossDomainFunctionWrapper.origin = origin;\n\n        return crossDomainFunctionWrapper;\n    };\n\n    const crossDomainFunctionWrapper = getDeserializedFunction();\n    crossDomainFunctionWrapper.fireAndForget = getDeserializedFunction({ fireAndForget: true });\n\n    return crossDomainFunctionWrapper;\n}\n","/* @flow */\n\nimport { type CrossDomainWindowType, isWindow, type DomainMatcher } from 'cross-domain-utils/src';\nimport { TYPE, serialize, deserialize, type Thenable } from 'universal-serialize/src';\n\nimport { SERIALIZATION_TYPE } from '../conf';\nimport type { OnType, SendType } from '../types';\n\nimport { serializeFunction, deserializeFunction, type SerializedFunction } from './function';\nimport { serializePromise, deserializePromise, type SerializedPromise } from './promise';\nimport { serializeWindow, deserializeWindow, type SerializedWindow, ProxyWindow } from './window';\n\nexport function serializeMessage<T : mixed>(destination : CrossDomainWindowType | ProxyWindow, domain : DomainMatcher, obj : T, { on, send } : { on : OnType, send : SendType }) : string {\n    return serialize(obj, {\n        [ TYPE.PROMISE ]:  (val : Thenable, key : string) : SerializedPromise => serializePromise(destination, domain, val, key, { on, send }),\n        [ TYPE.FUNCTION ]: (val : Function, key : string) : SerializedFunction => serializeFunction(destination, domain, val, key, { on, send }),\n        [ TYPE.OBJECT ]:   (val : CrossDomainWindowType) : Object | SerializedWindow => {\n            return (isWindow(val) || ProxyWindow.isProxyWindow(val)) ? serializeWindow(destination, domain, val, { on, send }) : val;\n        }\n    });\n}\n\nexport function deserializeMessage<T : mixed>(source : CrossDomainWindowType | ProxyWindow, origin : string, message : string, { on, send } : { on : OnType, send : SendType }) : T {\n    return deserialize(message, {\n        [ SERIALIZATION_TYPE.CROSS_DOMAIN_ZALGO_PROMISE ]: (serializedPromise)  => deserializePromise(source, origin, serializedPromise),\n        [ SERIALIZATION_TYPE.CROSS_DOMAIN_FUNCTION ]:      (serializedFunction) => deserializeFunction(source, origin, serializedFunction, { on, send }),\n        [ SERIALIZATION_TYPE.CROSS_DOMAIN_WINDOW ]:        (serializedWindow)   => deserializeWindow(source, origin, serializedWindow, { on, send })\n    });\n}\n","/* @flow */\n\nimport { type CrossDomainWindowType, type DomainMatcher } from 'cross-domain-utils/src';\nimport { ZalgoPromise } from 'zalgo-promise/src';\nimport { serializeType, type CustomSerializedType, type Thenable } from 'universal-serialize/src';\n\nimport { SERIALIZATION_TYPE } from '../conf';\nimport type { OnType, SendType } from '../types';\n\nimport { serializeFunction, type SerializedFunction } from './function';\nimport { ProxyWindow } from './window';\n\nexport type SerializedPromise = CustomSerializedType<typeof SERIALIZATION_TYPE.CROSS_DOMAIN_ZALGO_PROMISE, {\n    then : SerializedFunction\n}>;\n\nexport function serializePromise(destination : CrossDomainWindowType | ProxyWindow, domain : DomainMatcher, val : Thenable, key : string, { on, send } : { on : OnType, send : SendType }) : SerializedPromise {\n    return serializeType(SERIALIZATION_TYPE.CROSS_DOMAIN_ZALGO_PROMISE, {\n        then: serializeFunction(destination, domain, (resolve, reject) => val.then(resolve, reject), key, { on, send })\n    });\n}\n\nexport function deserializePromise<T>(source : CrossDomainWindowType | ProxyWindow, origin : string, { then } : { then : Function }) : ZalgoPromise<T> {\n    return new ZalgoPromise(then);\n}\n","/* @flow */\n\nimport { isSameDomain, isSameTopWindow, isActuallySameDomain, getActualDomain,\n    getDomain, type CrossDomainWindowType, type DomainMatcher, PROTOCOL } from 'cross-domain-utils/src';\n\nimport { SEND_STRATEGY, WILDCARD } from '../../conf';\nimport { needsGlobalMessagingForBrowser } from '../../lib';\nimport { getGlobal } from '../../global';\nimport { sendBridgeMessage, needsBridgeForBrowser, isBridge } from '../../bridge';\n\nexport const SEND_MESSAGE_STRATEGIES = {};\n\nSEND_MESSAGE_STRATEGIES[SEND_STRATEGY.POST_MESSAGE] = (win : CrossDomainWindowType, serializedMessage : string, domain : DomainMatcher) => {\n\n    if (__TEST__) {\n        if (needsGlobalMessagingForBrowser() && isSameTopWindow(window, win) === false) {\n            return;\n        }\n    }\n\n    let domains;\n\n    if (Array.isArray(domain)) {\n        domains = domain;\n    } else if (typeof domain === 'string') {\n        domains = [ domain ];\n    } else {\n        domains = [ WILDCARD ];\n    }\n\n    domains = domains.map(dom => {\n\n        if (__TEST__) {\n            if (dom.indexOf(PROTOCOL.MOCK) === 0) {\n                if (window.location.protocol === PROTOCOL.FILE) {\n                    return WILDCARD;\n                }\n\n                if (!isActuallySameDomain(win)) {\n                    throw new Error(`Attempting to send messsage to mock domain ${ dom }, but window is actually cross-domain`);\n                }\n\n                // $FlowFixMe\n                return getActualDomain(win);\n\n            }\n        }\n        \n        if (dom.indexOf(PROTOCOL.FILE) === 0) {\n            return WILDCARD;\n        }\n\n        return dom;\n    });\n\n    domains.forEach(dom => {\n        win.postMessage(serializedMessage, dom);\n    });\n};\n\nif (__POST_ROBOT__.__IE_POPUP_SUPPORT__) {\n\n    SEND_MESSAGE_STRATEGIES[SEND_STRATEGY.BRIDGE] = (win : CrossDomainWindowType, serializedMessage : string, domain : string) => {\n\n        if (!needsBridgeForBrowser() && !isBridge()) {\n            return;\n        }\n\n        if (isSameDomain(win)) {\n            throw new Error(`Post message through bridge disabled between same domain windows`);\n        }\n\n        if (isSameTopWindow(window, win) !== false) {\n            throw new Error(`Can only use bridge to communicate between two different windows, not between frames`);\n        }\n\n        sendBridgeMessage(win, domain, serializedMessage);\n    };\n}\n\nif (__POST_ROBOT__.__IE_POPUP_SUPPORT__ || __POST_ROBOT__.__GLOBAL_MESSAGE_SUPPORT__) {\n    \n    SEND_MESSAGE_STRATEGIES[SEND_STRATEGY.GLOBAL] = (win : CrossDomainWindowType, serializedMessage : string) => {\n\n        if (!needsGlobalMessagingForBrowser()) {\n            return;\n        }\n\n        if (!isSameDomain(win)) {\n            throw new Error(`Post message through global disabled between different domain windows`);\n        }\n\n        if (isSameTopWindow(window, win) !== false) {\n            throw new Error(`Can only use global to communicate between two different windows, not between frames`);\n        }\n\n        // $FlowFixMe\n        const foreignGlobal = getGlobal(win);\n\n        if (!foreignGlobal) {\n            throw new Error(`Can not find postRobot global on foreign window`);\n        }\n\n        foreignGlobal.receiveMessage({\n            source: window,\n            origin: getDomain(),\n            data:   serializedMessage\n        });\n    };\n}\n","/* @flow */\n\nimport { isWindowClosed, getDomain, type CrossDomainWindowType, type DomainMatcher } from 'cross-domain-utils/src';\nimport { uniqueID, stringifyError } from 'belter/src';\n\nimport { serializeMessage } from '../../serialize';\nimport type { Message } from '../types';\nimport type { OnType, SendType } from '../../types';\n\nimport { SEND_MESSAGE_STRATEGIES } from './strategies';\n\nexport function sendMessage(win : CrossDomainWindowType, domain : DomainMatcher, message : Message, { on, send } : { on : OnType, send : SendType }) {\n    if (isWindowClosed(win)) {\n        throw new Error('Window is closed');\n    }\n    \n    const serializedMessage = serializeMessage(win, domain, {\n        [ __POST_ROBOT__.__GLOBAL_KEY__ ]: {\n            id:     uniqueID(),\n            origin: getDomain(window),\n            ...message\n        }\n    }, { on, send });\n\n    const strategies = Object.keys(SEND_MESSAGE_STRATEGIES);\n    const errors = [];\n\n    for (const strategyName of strategies) {\n        try {\n            SEND_MESSAGE_STRATEGIES[strategyName](win, serializedMessage, domain);\n        } catch (err) {\n            errors.push(err);\n        }\n    }\n\n    if (errors.length === strategies.length) {\n        throw new Error(`All post-robot messaging strategies failed:\\n\\n${ errors.map(stringifyError).join('\\n\\n') }`);\n    }\n}\n","/* @flow */\n\nimport { getUserAgent } from 'cross-domain-utils/src';\n\nexport function needsGlobalMessagingForBrowser() : boolean {\n\n    if (getUserAgent(window).match(/MSIE|rv:11|trident|edge\\/12|edge\\/13/i)) {\n        return true;\n    }\n\n    return false;\n}\n","/* @flow */\n\nimport { type ZalgoPromise } from 'zalgo-promise/src';\nimport { matchDomain, type CrossDomainWindowType, type DomainMatcher } from 'cross-domain-utils/src';\nimport { isRegex, getOrSet } from 'belter/src';\n\nimport { getWildcard, type WildCard, globalStore, windowStore } from '../global';\nimport { WILDCARD } from '../conf';\n\nexport function resetListeners() {\n    const responseListeners = globalStore('responseListeners');\n    const erroredResponseListeners = globalStore('erroredResponseListeners');\n    responseListeners.reset();\n    erroredResponseListeners.reset();\n}\n\nconst __DOMAIN_REGEX__ = '__domain_regex__';\n\nexport type RequestListenerType = {|\n    handler : ({ source : CrossDomainWindowType, origin : string, data : mixed }) => (mixed | ZalgoPromise<mixed>),\n    handleError : (err : mixed) => void,\n    window : ?CrossDomainWindowType,\n    name : string,\n    domain : DomainMatcher\n|};\n\nexport type ResponseListenerType = {|\n    name : string,\n    win : CrossDomainWindowType,\n    domain : DomainMatcher,\n    promise : ZalgoPromise<*>,\n    ack? : ?boolean,\n    cancelled? : ?boolean\n|};\n\nexport function addResponseListener(hash : string, listener : ResponseListenerType) {\n    const responseListeners = globalStore('responseListeners');\n    responseListeners.set(hash, listener);\n}\n\nexport function getResponseListener(hash : string) : ?ResponseListenerType {\n    const responseListeners = globalStore('responseListeners');\n    return responseListeners.get(hash);\n}\n\nexport function deleteResponseListener(hash : string) {\n    const responseListeners = globalStore('responseListeners');\n    responseListeners.del(hash);\n}\n\nexport function cancelResponseListeners() {\n    const responseListeners = globalStore('responseListeners');\n    for (const hash of responseListeners.keys()) {\n        const listener = responseListeners.get(hash);\n        if (listener) {\n            listener.cancelled = true;\n        }\n        responseListeners.del(hash);\n    }\n}\n\nexport function markResponseListenerErrored(hash : string) {\n    const erroredResponseListeners = globalStore('erroredResponseListeners');\n    erroredResponseListeners.set(hash, true);\n}\n\nexport function isResponseListenerErrored(hash : string) : boolean {\n    const erroredResponseListeners = globalStore('erroredResponseListeners');\n    return erroredResponseListeners.has(hash);\n}\n\nexport function getRequestListener({ name, win, domain } : { name : string, win : ?(CrossDomainWindowType | WildCard), domain : ?(string | RegExp) }) : ?RequestListenerType {\n    const requestListeners = windowStore('requestListeners');\n\n    if (win === WILDCARD) {\n        win = null;\n    }\n\n    if (domain === WILDCARD) {\n        domain = null;\n    }\n\n    if (!name) {\n        throw new Error(`Name required to get request listener`);\n    }\n\n    for (const winQualifier of [ win, getWildcard() ]) {\n        if (!winQualifier) {\n            continue;\n        }\n\n        const nameListeners = requestListeners.get(winQualifier);\n\n        if (!nameListeners) {\n            continue;\n        }\n\n        const domainListeners = nameListeners[name];\n\n        if (!domainListeners) {\n            continue;\n        }\n\n        if (domain && typeof domain === 'string') {\n            if (domainListeners[domain]) {\n                return domainListeners[domain];\n            }\n\n            if (domainListeners[__DOMAIN_REGEX__]) {\n                for (const { regex, listener } of domainListeners[__DOMAIN_REGEX__]) {\n                    if (matchDomain(regex, domain)) {\n                        return listener;\n                    }\n                }\n            }\n        }\n\n        if (domainListeners[WILDCARD]) {\n            return domainListeners[WILDCARD];\n        }\n    }\n}\n\nexport function addRequestListener({ name, win, domain } : { name : string, win : ?(CrossDomainWindowType | WildCard), domain : ?DomainMatcher }, listener : RequestListenerType) : { cancel : () => void } {\n    const requestListeners = windowStore('requestListeners');\n\n    if (!name || typeof name !== 'string') {\n        throw new Error(`Name required to add request listener`);\n    }\n\n    if (Array.isArray(win)) {\n        const listenersCollection = [];\n\n        for (const item of win) {\n            listenersCollection.push(addRequestListener({ name, domain, win: item }, listener));\n        }\n\n        return {\n            cancel() {\n                for (const cancelListener of listenersCollection) {\n                    cancelListener.cancel();\n                }\n            }\n        };\n    }\n\n    if (Array.isArray(domain)) {\n        const listenersCollection = [];\n\n        for (const item of domain) {\n            listenersCollection.push(addRequestListener({ name, win, domain: item }, listener));\n        }\n\n        return {\n            cancel() {\n                for (const cancelListener of listenersCollection) {\n                    cancelListener.cancel();\n                }\n            }\n        };\n    }\n\n    const existingListener = getRequestListener({ name, win, domain });\n\n    if (!win || win === WILDCARD) {\n        win = getWildcard();\n    }\n\n    domain = domain || WILDCARD;\n\n    if (existingListener) {\n        if (win && domain) {\n            throw new Error(`Request listener already exists for ${ name } on domain ${ domain.toString() } for ${ win === getWildcard() ? 'wildcard' : 'specified' } window`);\n        } else if (win) {\n            throw new Error(`Request listener already exists for ${ name } for ${ win === getWildcard() ? 'wildcard' : 'specified' } window`);\n        } else if (domain) {\n            throw new Error(`Request listener already exists for ${ name } on domain ${ domain.toString() }`);\n        } else {\n            throw new Error(`Request listener already exists for ${ name }`);\n        }\n    }\n\n    const nameListeners = requestListeners.getOrSet(win, () => ({}));\n    // $FlowFixMe\n    const domainListeners = getOrSet(nameListeners, name, () => ({}));\n\n    const strDomain = domain.toString();\n\n    let regexListeners;\n    let regexListener;\n\n    if (isRegex(domain)) {\n        regexListeners = getOrSet(domainListeners, __DOMAIN_REGEX__, () => []);\n        regexListener = { regex: domain, listener };\n        regexListeners.push(regexListener);\n    } else {\n        domainListeners[strDomain] = listener;\n    }\n\n    return {\n        cancel() {\n            delete domainListeners[strDomain];\n\n            if (regexListener) {\n                regexListeners.splice(regexListeners.indexOf(regexListener, 1));\n\n                if (!regexListeners.length) {\n                    delete domainListeners[__DOMAIN_REGEX__];\n                }\n            }\n\n            if (!Object.keys(domainListeners).length) {\n                // $FlowFixMe\n                delete nameListeners[name];\n            }\n\n            // $FlowFixMe\n            if (win && !Object.keys(nameListeners).length) {\n                requestListeners.del(win);\n            }\n        }\n    };\n}\n","/* @flow */\n\nimport { ZalgoPromise } from 'zalgo-promise/src';\nimport { isWindowClosed, matchDomain, stringifyDomainPattern, type CrossDomainWindowType } from 'cross-domain-utils/src';\nimport { noop } from 'belter/src';\n\nimport { MESSAGE_TYPE, MESSAGE_ACK, MESSAGE_NAME } from '../../conf';\nimport { sendMessage } from '../send';\nimport { getRequestListener, getResponseListener, deleteResponseListener, isResponseListenerErrored } from '../listeners';\nimport type { RequestMessage, AckResponseMessage, SuccessResponseMessage, ErrorResponseMessage } from '../types';\nimport type { OnType, SendType } from '../../types';\n\nexport const RECEIVE_MESSAGE_TYPES = {\n\n    [ MESSAGE_TYPE.REQUEST ](source : CrossDomainWindowType, origin : string, message : RequestMessage, { on, send } : { on : OnType, send : SendType }) : ZalgoPromise<void> {\n\n        const options = getRequestListener({ name: message.name, win: source, domain: origin });\n\n        const logName = (message.name === MESSAGE_NAME.METHOD && message.data && typeof message.data.name === 'string') ? `${ message.data.name }()` : message.name;\n\n        if (__DEBUG__) {\n            // eslint-disable-next-line no-console\n            console.info('receive::req', logName, origin, '\\n\\n', message.data);\n        }\n\n        function sendResponse(type : $Values<typeof MESSAGE_TYPE>, ack? : $Values<typeof MESSAGE_ACK>, response = {}) {\n\n            if (message.fireAndForget || isWindowClosed(source)) {\n                return;\n            }\n\n            if (__DEBUG__ && type !== MESSAGE_TYPE.ACK) {\n                if (ack === MESSAGE_ACK.SUCCESS) {\n                    // $FlowFixMe\n                    console.info('respond::res', logName, origin, '\\n\\n', response.data);  // eslint-disable-line no-console\n                } else if (ack === MESSAGE_ACK.ERROR) {\n                    // $FlowFixMe\n                    console.error('respond::err', logName, origin, '\\n\\n', response.error); // eslint-disable-line no-console\n                }\n            }\n\n            // $FlowFixMe\n            sendMessage(source, origin, {\n                type,\n                ack,\n                hash:   message.hash,\n                name:   message.name,\n                ...response\n            }, { on, send });\n        }\n\n        return ZalgoPromise.all([\n\n            sendResponse(MESSAGE_TYPE.ACK),\n\n            ZalgoPromise.try(() => {\n\n                if (!options) {\n                    throw new Error(`No handler found for post message: ${ message.name } from ${ origin } in ${ window.location.protocol }//${ window.location.host }${ window.location.pathname }`);\n                }\n\n                if (!matchDomain(options.domain, origin)) {\n                    throw new Error(`Request origin ${ origin } does not match domain ${ options.domain.toString() }`);\n                }\n\n                const data = message.data;\n\n                return options.handler({ source, origin, data });\n\n            }).then(data => {\n                return sendResponse(MESSAGE_TYPE.RESPONSE, MESSAGE_ACK.SUCCESS, { data });\n\n            }, error => {\n                return sendResponse(MESSAGE_TYPE.RESPONSE, MESSAGE_ACK.ERROR, { error });\n            })\n\n        ]).then(noop).catch(err => {\n            if (options && options.handleError) {\n                return options.handleError(err);\n            } else {\n                throw err;\n            }\n        });\n    },\n\n    [ MESSAGE_TYPE.ACK ](source : CrossDomainWindowType, origin : string, message : AckResponseMessage) {\n\n        if (isResponseListenerErrored(message.hash)) {\n            return;\n        }\n\n        const options = getResponseListener(message.hash);\n\n        if (!options) {\n            throw new Error(`No handler found for post message ack for message: ${ message.name } from ${ origin } in ${ window.location.protocol }//${ window.location.host }${ window.location.pathname }`);\n        }\n\n        if (!matchDomain(options.domain, origin)) {\n            throw new Error(`Ack origin ${ origin } does not match domain ${ options.domain.toString() }`);\n        }\n\n        if (source !== options.win) {\n            throw new Error(`Ack source does not match registered window`);\n        }\n\n        options.ack = true;\n    },\n\n    [ MESSAGE_TYPE.RESPONSE ](source : CrossDomainWindowType, origin : string, message : SuccessResponseMessage | ErrorResponseMessage) : void | ZalgoPromise<void> {\n\n        if (isResponseListenerErrored(message.hash)) {\n            return;\n        }\n\n        const options = getResponseListener(message.hash);\n\n        if (!options) {\n            throw new Error(`No handler found for post message response for message: ${ message.name } from ${ origin } in ${ window.location.protocol }//${ window.location.host }${ window.location.pathname }`);\n        }\n\n        if (!matchDomain(options.domain, origin)) {\n            throw new Error(`Response origin ${ origin } does not match domain ${ stringifyDomainPattern(options.domain) }`);\n        }\n\n        if (source !== options.win) {\n            throw new Error(`Response source does not match registered window`);\n        }\n\n        deleteResponseListener(message.hash);\n\n        const logName = (message.name === MESSAGE_NAME.METHOD && message.data && typeof message.data.name === 'string') ? `${ message.data.name }()` : message.name;\n\n        if (message.ack === MESSAGE_ACK.ERROR) {\n            if (__DEBUG__) {\n                console.error('receive::err', logName, origin, '\\n\\n', message.error); // eslint-disable-line no-console\n            }\n\n            options.promise.reject(message.error);\n\n        } else if (message.ack === MESSAGE_ACK.SUCCESS) {\n            if (__DEBUG__) {\n                console.info('receive::res', logName, origin, '\\n\\n', message.data); // eslint-disable-line no-console\n            }\n\n            options.promise.resolve({ source, origin, data: message.data });\n        }\n    }\n};\n","/* @flow */\n\nimport { isWindowClosed, type CrossDomainWindowType, getDomain, isSameTopWindow, PROTOCOL  } from 'cross-domain-utils/src';\nimport { addEventListener, noop } from 'belter/src';\n\nimport { markWindowKnown, needsGlobalMessagingForBrowser } from '../../lib';\nimport { deserializeMessage } from '../../serialize';\nimport { getGlobal, globalStore } from '../../global';\nimport type { OnType, SendType, MessageEvent, CancelableType } from '../../types';\n\nimport { RECEIVE_MESSAGE_TYPES } from './types';\n\nfunction parseMessage(message : string, source : CrossDomainWindowType, origin : string, { on, send } : { on : OnType, send : SendType }) : ?Object {\n    let parsedMessage;\n\n    try {\n        parsedMessage = deserializeMessage(source, origin, message, { on, send });\n    } catch (err) {\n        return;\n    }\n\n    if (!parsedMessage) {\n        return;\n    }\n\n    if (typeof parsedMessage !== 'object' || parsedMessage === null) {\n        return;\n    }\n\n    parsedMessage = parsedMessage[__POST_ROBOT__.__GLOBAL_KEY__];\n\n    if (!parsedMessage || typeof parsedMessage !== 'object' || parsedMessage === null) {\n        return;\n    }\n\n    if (!parsedMessage.type || typeof parsedMessage.type !== 'string') {\n        return;\n    }\n\n    if (!RECEIVE_MESSAGE_TYPES[parsedMessage.type]) {\n        return;\n    }\n\n    return parsedMessage;\n}\n\nexport function receiveMessage(event : MessageEvent, { on, send } : { on : OnType, send : SendType }) {\n    const receivedMessages = globalStore('receivedMessages');\n\n    if (!window || window.closed) {\n        throw new Error(`Message recieved in closed window`);\n    }\n\n    try {\n        if (!event.source) {\n            return;\n        }\n    } catch (err) {\n        return;\n    }\n\n    let { source, origin, data } = event;\n\n    if (__TEST__) {\n        // $FlowFixMe\n        origin = getDomain(source);\n    }\n\n    const message = parseMessage(data, source, origin, { on, send });\n\n    if (!message) {\n        return;\n    }\n\n    markWindowKnown(source);\n\n    if (receivedMessages.has(message.id)) {\n        return;\n    }\n\n    receivedMessages.set(message.id, true);\n\n    if (isWindowClosed(source) && !message.fireAndForget) {\n        return;\n    }\n\n    if (message.origin.indexOf(PROTOCOL.FILE) === 0) {\n        origin = `${ PROTOCOL.FILE }//`;\n    }\n\n    RECEIVE_MESSAGE_TYPES[message.type](source, origin, message, { on, send });\n}\n\nexport function setupGlobalReceiveMessage({ on, send } : { on : OnType, send : SendType }) {\n    const global = getGlobal();\n    global.receiveMessage = global.receiveMessage || (message => receiveMessage(message, { on, send }));\n}\n\ntype ListenerEvent = {|\n    source : CrossDomainWindowType,\n    origin : string,\n    data : string,\n    sourceElement : CrossDomainWindowType,\n    originalEvent? : { origin : string }\n|};\n\nexport function messageListener(event : ListenerEvent, { on, send } : { on : OnType, send : SendType }) {\n\n    try {\n        noop(event.source);\n    } catch (err) {\n        return;\n    }\n\n    const source = event.source || event.sourceElement;\n    let origin = event.origin || (event.originalEvent && event.originalEvent.origin);\n    const data = event.data;\n\n    if (origin === 'null') {\n        origin = `${ PROTOCOL.FILE }//`;\n    }\n\n    if (!source) {\n        return;\n    }\n\n    if (!origin) {\n        throw new Error(`Post message did not have origin domain`);\n    }\n\n    if (__TEST__) {\n        if (needsGlobalMessagingForBrowser() && isSameTopWindow(source, window) === false) {\n            return;\n        }\n    }\n\n    receiveMessage({ source, origin, data }, { on, send });\n}\n\nexport function listenForMessages({ on, send } : { on : OnType, send : SendType }) : CancelableType {\n    return globalStore().getOrSet('postMessageListener', () => {\n        // $FlowFixMe\n        return addEventListener(window, 'message', event => {\n            // $FlowFixMe\n            messageListener(event, { on, send });\n        });\n    });\n}\n\nexport function stopListenForMessages() {\n    const listener = globalStore().get('postMessageListener');\n    if (listener) {\n        listener.cancel();\n    }\n}\n","/* @flow */\n\nimport { ZalgoPromise } from 'zalgo-promise/src';\n\nimport { addRequestListener, type RequestListenerType } from '../drivers';\nimport { WILDCARD } from '../conf';\nimport type { ServerOptionsType, HandlerType, CancelableType } from '../types';\n\nexport function on(name : string, options : ServerOptionsType | HandlerType, handler : ?HandlerType) : CancelableType {\n\n    if (!name) {\n        throw new Error('Expected name');\n    }\n\n    if (typeof options === 'function') {\n        handler = options;\n        // $FlowFixMe\n        options = {};\n    }\n\n    if (!handler) {\n        throw new Error('Expected handler');\n    }\n\n    options = options || {};\n    options.name = name;\n    options.handler = handler || options.handler;\n\n    const win = options.window;\n    const domain = options.domain;\n\n    const listenerOptions : RequestListenerType = {\n        handler:     options.handler,\n        handleError: options.errorHandler || (err => {\n            throw err;\n        }),\n        window: win,\n        domain: domain || WILDCARD,\n        name\n    };\n\n    const requestListener = addRequestListener({ name, win, domain }, listenerOptions);\n\n    return {\n        cancel() {\n            requestListener.cancel();\n        }\n    };\n}\n\nexport function once(name : string, options? : ServerOptionsType | HandlerType, handler? : HandlerType) : ZalgoPromise<{ source : mixed, origin : string, data : Object }> {\n    \n    // $FlowFixMe\n    options = options || {};\n    if (typeof options === 'function') {\n        handler = options;\n        // $FlowFixMe\n        options = {};\n    }\n\n    const promise = new ZalgoPromise();\n    let listener; // eslint-disable-line prefer-const\n\n    options.errorHandler = (err) => {\n        listener.cancel();\n        promise.reject(err);\n    };\n\n    listener = on(name, options, event => {\n        listener.cancel();\n        promise.resolve(event);\n        if (handler) {\n            return handler(event);\n        }\n    });\n\n    promise.cancel = listener.cancel;\n    return promise;\n}\n","/* @flow */\n\nimport { ZalgoPromise } from 'zalgo-promise/src';\nimport { isAncestor, isWindowClosed, getDomain, matchDomain, type CrossDomainWindowType, type DomainMatcher } from 'cross-domain-utils/src';\nimport { uniqueID, isRegex, noop, safeInterval, stringify } from 'belter/src';\n\n\nimport { CHILD_WINDOW_TIMEOUT, MESSAGE_TYPE, WILDCARD, MESSAGE_NAME, ACK_TIMEOUT, RES_TIMEOUT, ACK_TIMEOUT_KNOWN, RESPONSE_CYCLE_TIME } from '../conf';\nimport { sendMessage, addResponseListener, deleteResponseListener, markResponseListenerErrored, type ResponseListenerType } from '../drivers';\nimport { awaitWindowHello, sayHello, isWindowKnown } from '../lib';\nimport { windowStore } from '../global';\nimport type { SendType } from '../types';\n\nimport { on } from './on';\n\nfunction validateOptions(name : string, win : CrossDomainWindowType, domain : ?DomainMatcher) {\n    if (!name) {\n        throw new Error('Expected name');\n    }\n\n    if (domain) {\n        if (typeof domain !== 'string' && !Array.isArray(domain) && !isRegex(domain)) {\n            throw new TypeError(`Expected domain to be a string, array, or regex`);\n        }\n    }\n\n    if (isWindowClosed(win)) {\n        throw new Error('Target window is closed');\n    }\n}\n\nfunction normalizeDomain(win : CrossDomainWindowType, domain : DomainMatcher, childTimeout : number, { send } : { send : SendType }) : ZalgoPromise<string | $ReadOnlyArray<string>> {\n    return ZalgoPromise.try(() => {\n        if (isAncestor(window, win)) {\n            return awaitWindowHello(win, childTimeout);\n        } else if (isRegex(domain)) {\n            // $FlowFixMe\n            return sayHello(win, { send });\n        } else {\n            return { domain };\n        }\n    // $FlowFixMe\n    }).then(({ domain: normalizedDomain }) => {\n\n        // $FlowFixMe\n        return normalizedDomain;\n    });\n}\n\nexport const send : SendType = (win, name, data, options) => {\n\n    // $FlowFixMe\n    options = options || {};\n    let domain = options.domain || WILDCARD;\n    const responseTimeout = options.timeout || RES_TIMEOUT;\n    const childTimeout = options.timeout || CHILD_WINDOW_TIMEOUT;\n    const fireAndForget = options.fireAndForget || false;\n\n    // $FlowFixMe\n    return ZalgoPromise.try(() => {\n        validateOptions(name, win, domain);\n        return normalizeDomain(win, domain, childTimeout, { send });\n    }).then(targetDomain => {\n\n        if (!matchDomain(domain, targetDomain)) {\n            throw new Error(`Domain ${ stringify(domain) } does not match ${ stringify(targetDomain) }`);\n        }\n\n        domain = targetDomain;\n\n        const logName = (name === MESSAGE_NAME.METHOD && data && typeof data.name === 'string') ? `${ data.name }()` : name;\n\n        if (__DEBUG__) {\n            console.info('send::req', logName, domain, '\\n\\n', data); // eslint-disable-line no-console\n        }\n\n        const promise = new ZalgoPromise();\n        const hash = `${ name }_${ uniqueID() }`;\n\n        if (!fireAndForget) {\n            const responseListener : ResponseListenerType = { name, win, domain, promise };\n            addResponseListener(hash, responseListener);\n\n            const reqPromises = windowStore('requestPromises').getOrSet(win, () => []);\n            reqPromises.push(promise);\n\n            promise.catch(() => {\n                markResponseListenerErrored(hash);\n                deleteResponseListener(hash);\n            });\n\n            const totalAckTimeout = isWindowKnown(win) ? ACK_TIMEOUT_KNOWN : ACK_TIMEOUT;\n            const totalResTimeout = responseTimeout;\n\n            let ackTimeout = totalAckTimeout;\n            let resTimeout = totalResTimeout;\n        \n            const interval = safeInterval(() => {\n                if (isWindowClosed(win)) {\n                    return promise.reject(new Error(`Window closed for ${ name } before ${ responseListener.ack ? 'response' : 'ack' }`));\n                }\n\n                if (responseListener.cancelled) {\n                    return promise.reject(new Error(`Response listener was cancelled for ${ name }`));\n                }\n\n                ackTimeout = Math.max(ackTimeout - RESPONSE_CYCLE_TIME, 0);\n                if (resTimeout !== -1) {\n                    resTimeout = Math.max(resTimeout - RESPONSE_CYCLE_TIME, 0);\n                }\n\n                if (!responseListener.ack && ackTimeout === 0) {\n                    return promise.reject(new Error(`No ack for postMessage ${ logName } in ${ getDomain() } in ${ totalAckTimeout }ms`));\n\n                } else if (resTimeout === 0) {\n                    return promise.reject(new Error(`No response for postMessage ${ logName } in ${ getDomain() } in ${ totalResTimeout }ms`));\n                }\n            }, RESPONSE_CYCLE_TIME);\n\n            promise.finally(() => {\n                interval.cancel();\n                reqPromises.splice(reqPromises.indexOf(promise, 1));\n            }).catch(noop);\n        }\n\n        sendMessage(win, domain, {\n            type: MESSAGE_TYPE.REQUEST,\n            hash,\n            name,\n            data,\n            fireAndForget\n        }, { on, send });\n    \n        return fireAndForget ? promise.resolve() : promise;\n    });\n};\n","/* @flow */\n\nimport { setup } from './setup';\nimport { setupBridge, openBridge, linkWindow, linkUrl, isBridge, needsBridge, needsBridgeForBrowser, hasBridge,\n    needsBridgeForWin, needsBridgeForDomain, destroyBridges } from './bridge';\n\nexport { ZalgoPromise as Promise } from 'zalgo-promise/src';\n\nexport * from './types';\nexport { ProxyWindow } from './serialize';\nexport { setup, destroy, serializeMessage, deserializeMessage, toProxyWindow } from './setup';\nexport { on, once, send } from './public';\nexport { markWindowKnown } from './lib';\nexport { cleanUpWindow } from './clean';\nexport let bridge;\n\nif (__POST_ROBOT__.__IE_POPUP_SUPPORT__) {\n    bridge = { setupBridge, openBridge, linkWindow, linkUrl, isBridge, needsBridge,\n        needsBridgeForBrowser, hasBridge, needsBridgeForWin, needsBridgeForDomain, destroyBridges };\n}\n\nif (__POST_ROBOT__.__AUTO_SETUP__) {\n    setup();\n}\n","/* @flow */\n\nimport type { CrossDomainWindowType, DomainMatcher } from 'cross-domain-utils/src';\n\nimport { initHello } from './lib';\nimport { listenForMessages, stopListenForMessages, receiveMessage, setupGlobalReceiveMessage, cancelResponseListeners } from './drivers';\nimport { getGlobal, deleteGlobal } from './global';\nimport { on, send } from './public';\nimport { setupBridge } from './bridge';\nimport { serializeMessage as internalSerializeMessage, deserializeMessage as internalDeserializeMessage, ProxyWindow } from './serialize';\n\nexport function serializeMessage<T>(destination : CrossDomainWindowType | ProxyWindow, domain : DomainMatcher, obj : T) : string {\n    return internalSerializeMessage(destination, domain, obj, { on, send });\n}\n\nexport function deserializeMessage<T : mixed>(source : CrossDomainWindowType | ProxyWindow, origin : string, message : string) : T {\n    return internalDeserializeMessage(source, origin, message, { on, send });\n}\n\nexport function toProxyWindow(win : CrossDomainWindowType | ProxyWindow) : ProxyWindow {\n    return ProxyWindow.toProxyWindow(win, { send });\n}\n\nexport function setup() {\n    if (!getGlobal().initialized) {\n        getGlobal().initialized = true;\n    \n        setupGlobalReceiveMessage({ on, send });\n        listenForMessages({ on, send });\n    \n        if (__POST_ROBOT__.__IE_POPUP_SUPPORT__) {\n            setupBridge({ on, send, receiveMessage });\n        }\n\n        initHello({ on, send });\n    }\n}\n\nexport function destroy() {\n    cancelResponseListeners();\n    stopListenForMessages();\n    deleteGlobal();\n}\n","/* @flow */\n\nimport { isSameDomain, type CrossDomainWindowType } from 'cross-domain-utils/src';\n\nexport function getGlobal(win? : CrossDomainWindowType = window) : Object {\n\n    if (!isSameDomain(win)) {\n        throw new Error(`Can not get global for window on different domain`);\n    }\n\n    if (!win[__ZOID__.__GLOBAL_KEY__]) {\n        win[__ZOID__.__GLOBAL_KEY__] = {};\n    }\n\n    return win[__ZOID__.__GLOBAL_KEY__];\n}\n\nexport function destroyGlobal() {\n    delete window[__ZOID__.__GLOBAL_KEY__];\n}\n","/* @flow */\n\nimport { ZalgoPromise } from 'zalgo-promise/src';\n\nexport type ProxyObject<T> = {|\n    get : () => ZalgoPromise<T>\n|};\n\nexport function getProxyObject<T>(obj : T) : ProxyObject<T> {\n    return {\n        get() : ZalgoPromise<T> {\n            return ZalgoPromise.try(() => {\n                if (this.source && this.source !== window) {\n                    throw new Error(`Can not call get on proxy object from a remote window`);\n                }\n    \n                return obj;\n            });\n        }\n    };\n}\n","/* @flow */\n\nimport { WINDOW_TYPE } from 'cross-domain-utils/src';\n\nexport const ZOID = `zoid`;\n\nexport const POST_MESSAGE = {\n    DELEGATE:       `${ ZOID }_delegate`,\n    ALLOW_DELEGATE: `${ ZOID }_allow_delegate`\n};\n\nexport const PROP_TYPE = {\n    STRING:   `string`,\n    OBJECT:   `object`,\n    FUNCTION: `function`,\n    BOOLEAN:  `boolean`,\n    NUMBER:   `number`,\n    ARRAY:    `array`\n};\n\nexport const INITIAL_PROPS = {\n    RAW: 'raw',\n    UID: 'uid'\n};\n\nexport const WINDOW_REFERENCES = {\n    OPENER: `opener`,\n    TOP:    `top`,\n    PARENT: `parent`,\n    GLOBAL: `global`\n};\n\nexport const PROP_SERIALIZATION = {\n    JSON:   ('json' : 'json'),\n    DOTIFY: ('dotify' : 'dotify'),\n    BASE64: ('base64' : 'base64')\n};\n\nexport const CONTEXT = WINDOW_TYPE;\n\nexport const WILDCARD = '*';\n\nexport const DEFAULT_DIMENSIONS = {\n    WIDTH:  '300px',\n    HEIGHT: '150px'\n};\n\nexport const EVENT = {\n    RENDER:   'zoid-render',\n    RENDERED: 'zoid-rendered',\n    DISPLAY:  'zoid-display',\n    ERROR:    'zoid-error',\n    CLOSE:    'zoid-close',\n    PROPS:    'zoid-props',\n    RESIZE:   'zoid-resize'\n};\n","/* @flow */\n\nimport { getDomain, isSameDomain, type CrossDomainWindowType } from 'cross-domain-utils/src';\n\nimport type { Component } from '../component';\nimport type { PropsType, MixedPropDefinitionType } from '../component/props';\n\nimport type { ChildHelpers } from './index';\n\nexport function normalizeChildProp<T, P>(component : Component<P>, props : (PropsType<P>), key : string, value : T, helpers : ChildHelpers<P>) : ?T  {\n\n    // $FlowFixMe\n    const prop : MixedPropDefinitionType<P> = component.getPropDefinition(key);\n\n    if (!prop) {\n        return value;\n    }\n\n    if (typeof prop.childDecorate === 'function') {\n        return prop.childDecorate({ value, ...helpers });\n    }\n\n    return value;\n}\n\n// eslint-disable-next-line max-params\nexport function normalizeChildProps<P>(parentComponentWindow : CrossDomainWindowType, component : Component<P>, props : (PropsType<P>), origin : string, helpers : ChildHelpers<P>, isUpdate : boolean = false) : (PropsType<P>) {\n\n    const result = {};\n\n    // $FlowFixMe\n    for (const key of Object.keys(props)) {\n        const prop = component.getPropDefinition(key);\n\n        if (prop && prop.sameDomain && (origin !== getDomain(window) || !isSameDomain(parentComponentWindow))) {\n            continue;\n        }\n\n        const value = normalizeChildProp(component, props, key, props[key], helpers);\n\n        result[key] = value;\n        if (prop && prop.alias && !result[prop.alias]) {\n            result[prop.alias] = value;\n        }\n    }\n\n    if (!isUpdate) {\n        for (const key of component.getPropNames()) {\n            if (!props.hasOwnProperty(key)) {\n                result[key] = normalizeChildProp(component, props, key, props[key], helpers);\n            }\n        }\n    }\n\n    // $FlowFixMe\n    return result;\n}\n","/* @flow */\n\nimport { inlineMemoize, stringifyError, base64decode } from 'belter/src';\n\nimport { ZOID } from '../constants';\nimport type { ChildPayload } from '../parent';\n\nfunction parseChildWindowName(windowName : string) : ChildPayload {\n    return inlineMemoize(parseChildWindowName, () => {\n        if (!windowName) {\n            throw new Error(`No window name`);\n        }\n    \n        const [ , zoidcomp, name, encodedPayload ] = windowName.split('__');\n    \n        if (zoidcomp !== ZOID) {\n            throw new Error(`Window not rendered by zoid - got ${ zoidcomp }`);\n        }\n    \n        if (!name) {\n            throw new Error(`Expected component name`);\n        }\n    \n        if (!encodedPayload) {\n            throw new Error(`Expected encoded payload`);\n        }\n    \n        try {\n            return JSON.parse(base64decode(encodedPayload));\n        } catch (err) {\n            throw new Error(`Can not decode window name payload: ${ encodedPayload }: ${ stringifyError(err) }`);\n        }\n    }, [ windowName ]);\n}\n\nexport function getChildPayload() : ?ChildPayload {\n    try {\n        return parseChildWindowName(window.name);\n    } catch (err) {\n        // pass\n    }\n}\n","/* @flow */\n/* eslint max-lines: 0 */\n\nimport { isSameDomain, matchDomain, getDomain, getOpener,\n    getNthParentFromTop, getAncestor, getAllFramesInWindow,\n    type CrossDomainWindowType, onCloseWindow } from 'cross-domain-utils/src';\nimport { markWindowKnown, deserializeMessage } from 'post-robot/src';\nimport { ZalgoPromise } from 'zalgo-promise/src';\nimport { extend, waitForDocumentBody, onResize, getElementSafe, assertExists } from 'belter/src';\n\nimport { getGlobal } from '../lib';\nimport { CONTEXT, INITIAL_PROPS, WINDOW_REFERENCES } from '../constants';\nimport type { Component } from '../component';\nimport type { PropsType } from '../component/props';\nimport type { WindowRef, PropRef, ParentExportsType } from '../parent';\n\nimport { normalizeChildProps } from './props';\nimport { getChildPayload } from './window';\n\nexport * from './window';\n\nexport type ChildExportsType<P> = {|\n    updateProps : (props : (PropsType<P>)) => ZalgoPromise<void>,\n    close : () => ZalgoPromise<void>\n|};\n\nexport type ChildHelpers<P> = {|\n    close : () => ZalgoPromise<void>,\n    focus : () => ZalgoPromise<void>,\n    resize : ({ width : ?number, height : ?number }) => ZalgoPromise<void>,\n    onError : (mixed) => ZalgoPromise<void>,\n    onProps : ((PropsType<P>) => void) => void,\n    getParent : () => CrossDomainWindowType,\n    getParentDomain : () => string\n|};\n\n/*  Child Component\n    ---------------\n\n    This is the portion of code which runs inside the frame or popup window containing the component's implementation.\n\n    When the component author calls myComponent.attach(), it creates a new instance of ChildComponent, which is then\n    responsible for managing the state and messaging back up to the parent, and providing props for the component to\n    utilize.\n*/\n\nexport class ChildComponent<P> {\n\n    component : Component<P>\n    props : PropsType<P>\n    context : string\n    parent : ParentExportsType<P>\n    parentDomain : string\n    parentComponentWindow : CrossDomainWindowType\n\n    onPropHandlers : Array<(PropsType<P>) => void> // eslint-disable-line flowtype/no-mutable-array\n    autoResize : { width : boolean, height : boolean, element? : string }\n\n    constructor(component : Component<P>) {\n        ZalgoPromise.try(() => {\n            this.component = component;\n            this.onPropHandlers = [];\n            \n            const childPayload = getChildPayload();\n\n            if (!childPayload) {\n                throw new Error(`No child payload found`);\n            }\n\n            if (childPayload.version !== __ZOID__.__VERSION__) {\n                throw new Error(`Parent window has zoid version ${ childPayload.version }, child window has version ${ __ZOID__.__VERSION__ }`);\n            }\n\n            const { parent, parentDomain, exports, context, props } = childPayload;\n\n            this.context = context;\n            this.parentComponentWindow = this.getParentComponentWindow(parent);\n            this.parentDomain = parentDomain;\n            this.parent = deserializeMessage(this.parentComponentWindow, parentDomain, exports);\n\n            this.checkParentDomain(parentDomain);\n\n            const initialProps = this.getPropsByRef(this.parentComponentWindow, parentDomain, props);\n            this.setProps(initialProps, parentDomain);\n            markWindowKnown(this.parentComponentWindow);\n            \n            this.watchForClose();\n\n            return this.parent.init(this.buildExports());\n\n        }).then(() => {\n            return this.watchForResize();\n\n        }).catch(err => {\n            this.onError(err);\n        });\n    }\n\n    getHelpers() : ChildHelpers<P> {\n        return {\n            focus:           () => this.focus(),\n            close:           () => this.close(),\n            resize:          ({ width, height }) => this.resize({ width, height }),\n            onError:         (err) => this.onError(err),\n            onProps:         (handler) => this.onProps(handler),\n            getParent:       () => this.parentComponentWindow,\n            getParentDomain: () => this.parentDomain\n        };\n    }\n\n    checkParentDomain(domain : string) {\n        if (!matchDomain(this.component.allowedParentDomains, domain)) {\n            throw new Error(`Can not be rendered by domain: ${ domain }`);\n        }\n    }\n\n    onProps(handler : Function) {\n        this.onPropHandlers.push(handler);\n    }\n\n    getPropsByRef(parentComponentWindow : CrossDomainWindowType, domain : string, { type, value, uid } : PropRef) : (PropsType<P>) {\n        let props;\n\n        if (type === INITIAL_PROPS.RAW) {\n            props = value;\n        } else if (type === INITIAL_PROPS.UID) {\n            if (!isSameDomain(parentComponentWindow)) {\n                throw new Error(`Parent component window is on a different domain - expected ${ getDomain() } - can not retrieve props`);\n            }\n\n            const global = getGlobal(parentComponentWindow);\n            props = assertExists('props', global && global.props[uid]);\n        }\n\n        if (!props) {\n            throw new Error(`Could not find props`);\n        }\n\n        return deserializeMessage(parentComponentWindow, domain, props);\n    }\n\n    getParentComponentWindow(ref : WindowRef) : CrossDomainWindowType {\n        const { type } = ref;\n    \n        if (type === WINDOW_REFERENCES.OPENER) {\n            return assertExists('opener', getOpener(window));\n    \n        } else if (type === WINDOW_REFERENCES.PARENT) {\n            // $FlowFixMe\n            const distance = ref.distance;\n            return assertExists('parent', getNthParentFromTop(window, distance));\n\n        } else if (type === WINDOW_REFERENCES.GLOBAL) {\n            // $FlowFixMe\n            const { uid } = ref;\n            const ancestor = getAncestor(window);\n\n            if (!ancestor) {\n                throw new Error(`Can not find ancestor window`);\n            }\n\n            for (const frame of getAllFramesInWindow(ancestor)) {\n                if (isSameDomain(frame)) {\n                    const global = getGlobal(frame);\n\n                    if (global && global.windows && global.windows[uid]) {\n                        return global.windows[uid];\n                    }\n                }\n            }\n        }\n    \n        throw new Error(`Unable to find ${ type } parent component window`);\n    }\n\n    getProps() : PropsType<P> {\n        // $FlowFixMe\n        this.props = this.props || {};\n        return this.props;\n    }\n\n\n    setProps(props : PropsType<P>, origin : string, isUpdate : boolean = false) {\n        const helpers = this.getHelpers();\n        const existingProps = this.getProps();\n        const normalizedProps = normalizeChildProps(this.parentComponentWindow, this.component, props, origin, helpers, isUpdate);\n\n        extend(existingProps, normalizedProps);\n\n        for (const handler of this.onPropHandlers) {\n            handler.call(this, existingProps);\n        }\n    }\n\n    watchForClose() {\n        window.addEventListener('beforeunload', () => {\n            this.parent.checkClose.fireAndForget();\n        });\n\n        window.addEventListener('unload', () => {\n            this.parent.checkClose.fireAndForget();\n        });\n\n        onCloseWindow(this.parentComponentWindow, () => {\n            this.destroy();\n        });\n    }\n\n    getAutoResize() : { width : boolean, height : boolean, element : ?HTMLElement } {\n        let { width = false, height = false, element = 'body' } = this.autoResize || this.component.autoResize || {};\n        element = getElementSafe(element);\n        return { width, height, element };\n    }\n\n    watchForResize() : ?ZalgoPromise<void> {\n        return waitForDocumentBody().then(() => {\n            const { width, height, element } = this.getAutoResize();\n\n            if (!element || (!width && !height) || this.context === CONTEXT.POPUP) {\n                return;\n            }\n\n            onResize(element, ({ width: newWidth, height: newHeight }) => {\n                this.resize({\n                    width:  width ? newWidth : undefined,\n                    height: height ? newHeight : undefined\n                });\n            }, { width, height });\n        });\n    }\n\n    buildExports() : ChildExportsType<P> {\n\n        const self = this;\n\n        return {\n            updateProps(props : (PropsType<P>)) : ZalgoPromise<void> {\n                return ZalgoPromise.try(() => self.setProps(props, this.__origin__, true));\n            },\n\n            close() : ZalgoPromise<void> {\n                return ZalgoPromise.try(() => self.destroy());\n            }\n        };\n    }\n\n    resize({ width, height } : { width : ?number, height : ?number }) : ZalgoPromise<void> {\n        return this.parent.resize.fireAndForget({ width, height });\n    }\n\n    close() : ZalgoPromise<void> {\n        return this.parent.close();\n    }\n    \n    destroy() : ZalgoPromise<void> {\n        return ZalgoPromise.try(() => {\n            window.close();\n        });\n    }\n\n    focus() : ZalgoPromise<void> {\n        return ZalgoPromise.try(() => {\n            window.focus();\n        });\n    }\n\n    onError(err : mixed) : ZalgoPromise<void> {\n        return ZalgoPromise.try(() => {\n            if (this.parent && this.parent.onError) {\n                return this.parent.onError(err);\n            } else {\n                throw err;\n            }\n        });\n    }\n}\n","/* @flow */\n\nimport { ZalgoPromise } from 'zalgo-promise/src';\nimport { cleanUpWindow, ProxyWindow, toProxyWindow } from 'post-robot/src';\nimport { assertSameDomain, closeWindow } from 'cross-domain-utils/src';\nimport { iframe, popup, destroyElement, normalizeDimension, watchElementForClose,\n    awaitFrameWindow, uniqueID } from 'belter/src';\n\nimport { CONTEXT } from '../constants';\nimport { getProxyObject, type ProxyObject } from '../lib';\n\n\nexport type ContextDriverType = {|\n    openOnClick : boolean,\n    openFrame? : () => ProxyObject<HTMLIFrameElement>,\n    open : (?ProxyObject<HTMLIFrameElement>) => ZalgoPromise<ProxyWindow>,\n    openPrerenderFrame? : () => ProxyObject<HTMLIFrameElement>,\n    openPrerender : (ProxyWindow, ?ProxyObject<HTMLIFrameElement>) => ZalgoPromise<ProxyWindow>,\n    resize? : ({ width : ?number, height : ?number }) => void,\n    delegate : $ReadOnlyArray<string>\n|};\n\nexport const RENDER_DRIVERS : { [string] : ContextDriverType } = {};\n\nRENDER_DRIVERS[CONTEXT.IFRAME] = {\n    openOnClick: false,\n\n    openFrame() : ProxyObject<HTMLIFrameElement> {\n        return getProxyObject(iframe({\n            attributes: {\n                title: this.component.name,\n                ...this.component.attributes.iframe\n            }\n        }));\n    },\n\n    open(proxyFrame : ?ProxyObject<HTMLIFrameElement>) : ZalgoPromise<ProxyWindow> {\n        if (!proxyFrame) {\n            throw new Error(`Expected proxy frame to be passed`);\n        }\n\n        return proxyFrame.get().then(frame => {\n            return awaitFrameWindow(frame).then(win => {\n\n                const frameWatcher = watchElementForClose(frame, () => this.close());\n                this.clean.register(() => frameWatcher.cancel());\n                this.clean.register(() => destroyElement(frame));\n                this.clean.register(() => cleanUpWindow(win));\n\n                return toProxyWindow(win);\n            });\n        });\n    },\n\n    openPrerenderFrame() : ProxyObject<HTMLIFrameElement> {\n        return getProxyObject(iframe({\n            attributes: {\n                name:  `__zoid_prerender_frame__${ this.component.name }_${ uniqueID() }__`,\n                title: `prerender__${ this.component.name }`,\n                ...this.component.attributes.iframe\n            }\n        }));\n    },\n\n    openPrerender(proxyWin : ProxyWindow, proxyPrerenderFrame : ?ProxyObject<HTMLIFrameElement>) : ZalgoPromise<ProxyWindow> {\n        if (!proxyPrerenderFrame) {\n            throw new Error(`Expected proxy frame to be passed`);\n        }\n        \n        return proxyPrerenderFrame.get().then(prerenderFrame => {\n            this.clean.register(() => destroyElement(prerenderFrame));\n\n            return awaitFrameWindow(prerenderFrame).then(prerenderFrameWindow => {\n                return assertSameDomain(prerenderFrameWindow);\n            }).then(win => {\n                return toProxyWindow(win);\n            });\n        });\n    },\n\n    delegate: [\n        'getProxyContainer',\n        'renderContainer',\n        'openFrame',\n        'openPrerenderFrame',\n        'prerender',\n        'open',\n        'openPrerender'\n    ]\n};\n\nif (__ZOID__.__POPUP_SUPPORT__) {\n    RENDER_DRIVERS[CONTEXT.POPUP] = {\n        openOnClick: true,\n\n        open() : ZalgoPromise<ProxyWindow> {\n            return ZalgoPromise.try(() => {\n                let { width, height } = this.component.dimensions;\n\n                width = normalizeDimension(width, window.outerWidth);\n                height = normalizeDimension(height, window.outerWidth);\n\n                const win = popup('', {\n                    width,\n                    height,\n                    ...this.component.attributes.popup\n                });\n\n                this.clean.register(() => {\n                    closeWindow(win);\n                    cleanUpWindow(win);\n                });\n\n                return toProxyWindow(win);\n            });\n        },\n\n        openPrerender(proxyWin : ProxyWindow) : ZalgoPromise<ProxyWindow> {\n            return ZalgoPromise.try(() => {\n                return proxyWin;\n            });\n        },\n\n        delegate: [\n            'getProxyContainer',\n            'renderContainer',\n            'setProxyWin'\n        ]\n    };\n}\n","/* @flow */\n\nimport { ZalgoPromise } from 'zalgo-promise/src';\nimport { dotify, isDefined, extend } from 'belter/src';\n\nimport type { Component } from '../component';\nimport type { BuiltInPropsDefinitionType, PropsInputType, PropsType, MixedPropDefinitionType } from '../component/props';\nimport { PROP_SERIALIZATION } from '../constants';\n\nimport type { ParentHelpers } from './index';\n\n/*  Normalize Props\n    ---------------\n\n    Turn props into normalized values, using defaults, function options, etc.\n*/\n\nexport function extendProps<P>(component : Component<P>, props : PropsType<P>, inputProps : PropsInputType<P>, helpers : ParentHelpers<P>, isUpdate : boolean = false) { // eslint-disable-line complexity\n\n    // $FlowFixMe\n    inputProps = inputProps || {};\n    extend(props, inputProps);\n\n    const propNames = isUpdate ? [] : [ ...component.getPropNames() ];\n\n    // $FlowFixMe\n    for (const key of Object.keys(inputProps)) {\n        if (propNames.indexOf(key) === -1) {\n            propNames.push(key);\n        }\n    }\n\n    const aliases = [];\n\n    const { state, close, focus, onError } = helpers;\n\n    for (const key of propNames) {\n        const propDef = component.getPropDefinition(key);\n        // $FlowFixMe\n        let value = inputProps[key];\n\n        if (!propDef) {\n            continue;\n        }\n\n        const alias = propDef.alias;\n        if (alias) {\n            if (!isDefined(value) && isDefined(inputProps[alias])) {\n                value = inputProps[alias];\n            }\n            aliases.push(alias);\n        }\n\n        if (propDef.value) {\n            value = propDef.value({ props, state, close, focus, onError });\n        }\n\n        if (!isDefined(value) && propDef.default) {\n            value = propDef.default({ props, state, close, focus, onError });\n        }\n\n        if (isDefined(value)) {\n            if (propDef.type === 'array' ? !Array.isArray(value) : (typeof value !== propDef.type)) {\n                throw new TypeError(`Prop is not of type ${ propDef.type }: ${ key }`);\n            }\n        }\n        \n        // $FlowFixMe\n        props[key] = value;\n    }\n\n    for (const alias of aliases) {\n        // $FlowFixMe\n        delete props[alias];\n    }\n\n    // $FlowFixMe\n    for (const key of Object.keys(props)) {\n        const propDef = component.getPropDefinition(key);\n        // $FlowFixMe\n        const value = props[key];\n\n        if (!propDef) {\n            continue;\n        }\n\n        if (isDefined(value) && propDef.validate) {\n            // $FlowFixMe\n            propDef.validate({ value, props });\n        }\n\n        if (isDefined(value) && propDef.decorate) {\n            // $FlowFixMe\n            props[key] = propDef.decorate({ value, props, state, close, focus, onError });\n        }\n    }\n\n    for (const key of component.getPropNames()) {\n        const propDef = component.getPropDefinition(key);\n        if (propDef.required !== false && !isDefined(props[key])) {\n            throw new Error(`Expected prop \"${ key }\" to be defined`);\n        }\n    }\n}\n\n// $FlowFixMe\nfunction getQueryParam<T, P>(prop : MixedPropDefinitionType<P>, key : string, value : T) : ZalgoPromise<string> {\n    return ZalgoPromise.try(() => {\n        if (typeof prop.queryParam === 'function') {\n            return prop.queryParam({ value });\n        } else if (typeof prop.queryParam === 'string') {\n            return prop.queryParam;\n        } else {\n            return key;\n        }\n    });\n}\n\n// $FlowFixMe\nfunction getQueryValue<T, P>(prop : MixedPropDefinitionType<P>, key : string, value : T) : ZalgoPromise<mixed> {\n    return ZalgoPromise.try(() => {\n        if (typeof prop.queryValue === 'function' && isDefined(value)) {\n            return prop.queryValue({ value });\n        } else {\n            return value;\n        }\n    });\n}\n\nexport function propsToQuery<P>(propsDef : BuiltInPropsDefinitionType<P>, props : (PropsType<P>)) : ZalgoPromise<{ [string] : string }> {\n\n    const params = {};\n\n    // $FlowFixMe\n    return ZalgoPromise.all(Object.keys(props).map(key => {\n\n        const prop = propsDef[key];\n\n        if (!prop) {\n            return; // eslint-disable-line array-callback-return\n        }\n\n        return ZalgoPromise.resolve().then(() => {\n\n            const value = props[key];\n\n            if (!value) {\n                return;\n            }\n\n            if (!prop.queryParam) {\n                return;\n            }\n\n            return value;\n\n        }).then(value => {\n\n            if (value === null || typeof value === 'undefined') {\n                return;\n            }\n\n            return ZalgoPromise.all([\n                // $FlowFixMe\n                getQueryParam(prop, key, value),\n                // $FlowFixMe\n                getQueryValue(prop, key, value)\n            ]).then(([ queryParam, queryValue ]) => {\n\n                let result;\n\n                if (typeof queryValue === 'boolean') {\n                    result = queryValue.toString();\n                } else if (typeof queryValue === 'string') {\n                    result = queryValue.toString();\n                } else if (typeof queryValue === 'object' && queryValue !== null) {\n\n                    if (prop.serialization === PROP_SERIALIZATION.JSON) {\n                        result = JSON.stringify(queryValue);\n                    } else if (prop.serialization === PROP_SERIALIZATION.BASE64) {\n                        result = btoa(JSON.stringify(queryValue));\n                    } else if (prop.serialization === PROP_SERIALIZATION.DOTIFY || !prop.serialization) {\n                        result = dotify(queryValue, key);\n\n                        for (const dotkey of Object.keys(result)) {\n                            params[dotkey] = result[dotkey];\n                        }\n\n                        return;\n                    }\n\n                } else if (typeof queryValue === 'number') {\n                    result = queryValue.toString();\n                }\n\n                params[queryParam] = result;\n            });\n        });\n\n    })).then(() => {\n        return params;\n    });\n}\n","/* @flow */\n\nimport { type CrossDomainWindowType } from 'cross-domain-utils/src';\nimport { noop } from 'belter/src';\n\nimport { windowStore } from './global';\n\nexport function cleanUpWindow(win : CrossDomainWindowType) {\n    const requestPromises = windowStore('requestPromises');\n    for (const promise of requestPromises.get(win, [])) {\n        promise.reject(new Error(`Window cleaned up before response`)).catch(noop);\n    }\n}\n","/* @flow */\n/* eslint max-lines: 0 */\n\nimport { send, bridge, serializeMessage, ProxyWindow, toProxyWindow } from 'post-robot/src';\nimport { isSameDomain, matchDomain, getDomainFromUrl, isBlankDomain,\n    getDomain, type CrossDomainWindowType,\n    getDistanceFromTop, normalizeMockUrl, assertSameDomain } from 'cross-domain-utils/src';\nimport { ZalgoPromise } from 'zalgo-promise/src';\nimport { addEventListener, uniqueID, elementReady, writeElementToWindow, eventEmitter, type EventEmitterType,\n    noop, onResize, extendUrl, appendChild, cleanup, type CleanupType, base64encode,\n    once, stringifyError, destroyElement, getElementSafe } from 'belter/src';\n\nimport { ZOID, POST_MESSAGE, CONTEXT, EVENT,\n    INITIAL_PROPS, WINDOW_REFERENCES } from '../constants';\nimport type { Component, onErrorPropType } from '../component';\nimport { getGlobal, getProxyObject, type ProxyObject } from '../lib';\nimport type { PropsInputType, PropsType } from '../component/props';\nimport type { ChildExportsType } from '../child';\nimport type { DimensionsType } from '../types';\n\nimport { RENDER_DRIVERS, type ContextDriverType } from './drivers';\nimport { propsToQuery, extendProps } from './props';\n\nexport type RenderOptionsType<P> = {|\n    uid : string,\n    props : PropsInputType<P>,\n    tag : string,\n    context : string,\n    close : (?string) => ZalgoPromise<void>,\n    focus : () => ZalgoPromise<ProxyWindow>,\n    doc : Document,\n    container? : HTMLElement,\n    dimensions : DimensionsType,\n    state : Object,\n    event : EventEmitterType,\n    frame : ?HTMLIFrameElement,\n    prerenderFrame : ?HTMLIFrameElement\n|};\n\nexport type ParentExportsType<P> = {|\n    init : (ChildExportsType<P>) => ZalgoPromise<void>,\n    close : () => ZalgoPromise<void>,\n    checkClose : () => ZalgoPromise<void>,\n    resize : ({ width? : ?number, height? : ?number }) => ZalgoPromise<void>,\n    onError : (mixed) => ZalgoPromise<void>\n|};\n\nexport type PropRef =\n    {| type : typeof INITIAL_PROPS.RAW, uid? : string, value? : string |};\n\nexport type WindowRef =\n    {| type : typeof WINDOW_REFERENCES.OPENER |} |\n    {| type : typeof WINDOW_REFERENCES.PARENT, distance : number |} |\n    {| type : typeof WINDOW_REFERENCES.GLOBAL, uid : string |};\n\nexport type ChildPayload = {|\n    uid : string,\n    tag : string,\n    version : string,\n    context : $Values<typeof CONTEXT>,\n    parentDomain : string,\n    childDomain : string,\n    parent : WindowRef,\n    props : PropRef,\n    exports : string\n|};\n\nexport type StateType = Object;\n\nexport type ParentHelpers<P> = {|\n    state : StateType,\n    close : () => ZalgoPromise<void>,\n    focus : () => ZalgoPromise<void>,\n    resize : ({ width : ?number, height : ?number }) => ZalgoPromise<void>,\n    onError : (mixed) => ZalgoPromise<void>,\n    updateProps : PropsInputType<P> => ZalgoPromise<void>,\n    event : EventEmitterType\n|};\n\nexport class ParentComponent<P> {\n\n    component : Component<P>\n    driver : ContextDriverType\n    clean : CleanupType\n    event : EventEmitterType\n\n    initPromise : ZalgoPromise<void>\n    handledErrors : Array<mixed> // eslint-disable-line flowtype/no-mutable-array\n    \n    props : PropsType<P>\n    state : StateType\n    child : ?ChildExportsType<P>\n\n    proxyWin : ?ProxyWindow\n\n    constructor(component : Component<P>, props : PropsInputType<P>) {\n        this.initPromise = new ZalgoPromise();\n        this.handledErrors = [];\n\n        // $FlowFixMe\n        this.props = {};\n\n        this.clean = cleanup(this);\n        this.state = {};\n\n        this.component = component;\n\n        this.setupEvents(props.onError);\n        this.setProps(props);\n        this.component.registerActiveComponent(this);\n        this.clean.register(() => this.component.destroyActiveComponent(this));\n        this.watchForUnload();\n    }\n\n    setupEvents(onError : ?onErrorPropType) {\n        this.event = eventEmitter();\n        \n        this.event.on(EVENT.RENDER,   () => this.props.onRender());\n        this.event.on(EVENT.DISPLAY,  () => this.props.onDisplay());\n        this.event.on(EVENT.RENDERED, () => this.props.onRendered());\n        this.event.on(EVENT.CLOSE,    () => this.props.onClose());\n        this.event.on(EVENT.PROPS,    (props) => this.props.onProps(props));\n\n        this.event.on(EVENT.ERROR, err => {\n            if (this.props && this.props.onError) {\n                return this.props.onError(err);\n            } else if (onError) {\n                return onError(err);\n            } else {\n                return this.initPromise.reject(err).then(() => {\n                    setTimeout(() => {\n                        throw err;\n                    }, 1);\n                });\n            }\n        });\n    }\n\n    render(target : CrossDomainWindowType, container : string | HTMLElement, context : $Values<typeof CONTEXT>) : ZalgoPromise<void> {\n        return ZalgoPromise.try(() => {\n            this.component.log(`render`);\n\n            this.driver = RENDER_DRIVERS[context];\n            const uid = `${ ZOID }-${ this.component.tag }-${ uniqueID() }`;\n            const domain = this.getDomain();\n            const childDomain = this.getChildDomain();\n            \n            this.component.checkAllowRender(target, domain, container);\n\n            if (target !== window) {\n                this.delegate(context, target);\n            }\n\n            const tasks = {};\n\n            tasks.init = this.initPromise;\n            tasks.buildUrl = this.buildUrl();\n            tasks.onRender = this.event.trigger(EVENT.RENDER);\n\n            tasks.getProxyContainer = this.getProxyContainer(container);\n\n            tasks.openFrame = this.openFrame();\n            tasks.openPrerenderFrame = this.openPrerenderFrame();\n\n            tasks.renderContainer = ZalgoPromise.all([ tasks.getProxyContainer, tasks.openFrame, tasks.openPrerenderFrame ]).then(([ proxyContainer, proxyFrame, proxyPrerenderFrame ]) => {\n                return this.renderContainer(proxyContainer, { context, uid, proxyFrame, proxyPrerenderFrame });\n            });\n\n            tasks.open = this.driver.openOnClick\n                ? this.open()\n                : tasks.openFrame.then(proxyFrame => this.open(proxyFrame));\n\n            tasks.openPrerender = ZalgoPromise.all([ tasks.open, tasks.openPrerenderFrame ]).then(([ proxyWin, proxyPrerenderFrame ]) => {\n                return this.openPrerender(proxyWin, proxyPrerenderFrame);\n            });\n\n            tasks.setState = ZalgoPromise.all([\n                tasks.open.then(proxyWin => {\n                    this.proxyWin = proxyWin;\n                    return this.setProxyWin(proxyWin);\n                })\n            ]);\n            \n            tasks.prerender = ZalgoPromise.all([ tasks.openPrerender, tasks.setState ]).then(([ proxyPrerenderWin ]) => {\n                return this.prerender(proxyPrerenderWin, { context, uid });\n            });\n\n            tasks.loadUrl = ZalgoPromise.all([ tasks.open, tasks.buildUrl, tasks.setWindowName, tasks.prerender ]).then(([ proxyWin, url ]) => {\n                return proxyWin.setLocation(url);\n            });\n\n            tasks.buildWindowName = tasks.open.then(proxyWin => {\n                return this.buildWindowName({ proxyWin, childDomain, domain, target, context, uid });\n            });\n\n            tasks.setWindowName =  ZalgoPromise.all([ tasks.open, tasks.buildWindowName ]).then(([ proxyWin, windowName ]) => {\n                return proxyWin.setName(windowName);\n            });\n\n            tasks.watchForClose = tasks.open.then(proxyWin => {\n                this.watchForClose(proxyWin);\n            });\n\n            tasks.onDisplay = ZalgoPromise.all([ tasks.renderContainer, tasks.prerender ]).then(() => {\n                return this.event.trigger(EVENT.DISPLAY);\n            });\n\n            tasks.openBridge = tasks.open.then(proxyWin => {\n                return this.openBridge(proxyWin, childDomain, context);\n            });\n\n            tasks.runTimeout = tasks.loadUrl.then(() => {\n                return this.runTimeout();\n            });\n\n            tasks.onRender = tasks.init.then(() => {\n                return this.event.trigger(EVENT.RENDERED);\n            });\n\n            return ZalgoPromise.hash(tasks).catch(err => {\n                for (const taskName of Object.keys(tasks)) {\n                    tasks[taskName].reject(err);\n                }\n\n                throw err;\n            });\n            \n        }).catch(err => {\n            return ZalgoPromise.all([\n                this.onError(err),\n                this.destroy(err)\n            ]).then(() => {\n                throw err;\n            });\n        }).then(noop);\n    }\n\n    getProxyContainer(container : string | HTMLElement) : ZalgoPromise<ProxyObject<HTMLElement>> {\n        return ZalgoPromise.try(() => {\n            return elementReady(container);\n        }).then(containerElement => {\n            return getProxyObject(containerElement);\n        });\n    }\n\n    buildWindowName({ proxyWin, childDomain, domain, target, uid, context } : { proxyWin : ProxyWindow, childDomain : string, domain : string | RegExp, target : CrossDomainWindowType, context : $Values<typeof CONTEXT>, uid : string }) : string {\n        const childPayload = this.buildChildPayload({ proxyWin, childDomain, domain, target, context, uid });\n        return `__${ ZOID }__${ this.component.name }__${ base64encode(JSON.stringify(childPayload)) }__`;\n    }\n\n    getPropsRef(proxyWin : ProxyWindow, childDomain : string, domain : string | RegExp, uid : string) : PropRef {\n        const value = serializeMessage(proxyWin, domain, this.getPropsForChild(domain));\n\n        const propRef = (childDomain === getDomain())\n            ? { type: INITIAL_PROPS.UID, uid }\n            : { type: INITIAL_PROPS.RAW, value };\n\n        if (propRef.type === INITIAL_PROPS.UID) {\n            const global = getGlobal(window);\n            global.props = global.props || {};\n            global.props[uid] = value;\n\n            this.clean.register(() => {\n                delete global.props[uid];\n            });\n        }\n\n        return propRef;\n    }\n\n    buildChildPayload({ proxyWin, childDomain, domain, target = window, context, uid } : { proxyWin : ProxyWindow, childDomain : string, domain : string | RegExp, target : CrossDomainWindowType, context : $Values<typeof CONTEXT>, uid : string } = {}) : ChildPayload {\n        return {\n            uid,\n            context,\n            version:      __ZOID__.__VERSION__,\n            childDomain,\n            parentDomain: getDomain(window),\n            tag:          this.component.tag,\n            parent:       this.getWindowRef(target, childDomain, uid, context),\n            props:        this.getPropsRef(proxyWin, childDomain, domain, uid),\n            exports:      serializeMessage(proxyWin, domain, this.buildParentExports(proxyWin))\n        };\n    }\n\n    setProxyWin(proxyWin : ProxyWindow) : ZalgoPromise<void> {\n        return ZalgoPromise.try(() => {\n            this.proxyWin = proxyWin;\n        });\n    }\n\n    getHelpers() : ParentHelpers<P> {\n        return {\n            state:       this.state,\n            event:       this.event,\n            close:       () => this.close(),\n            focus:       () => this.focus(),\n            resize:      ({ width, height }) => this.resize({ width, height }),\n            onError:     (err) => this.onError(err),\n            updateProps: (props) => this.updateProps(props)\n        };\n    }\n\n    setProps(props : PropsInputType<P>, isUpdate : boolean = false) {\n        if (this.component.validate) {\n            this.component.validate({ props });\n        }\n\n        const helpers = this.getHelpers();\n        extendProps(this.component, this.props, props, helpers, isUpdate);\n    }\n\n    buildUrl() : ZalgoPromise<string> {\n        return propsToQuery({ ...this.component.props, ...this.component.builtinProps }, this.props).then(query => {\n            return extendUrl(normalizeMockUrl(this.component.getUrl(this.props)), { query });\n        });\n    }\n\n    getDomain() : string | RegExp {\n        return this.component.getDomain(this.props);\n    }\n\n    getChildDomain() : string {\n        return this.component.getChildDomain(this.props);\n    }\n\n    getPropsForChild(domain : string | RegExp) : (PropsType<P>) {\n        const result = {};\n\n        for (const key of Object.keys(this.props)) {\n            const prop = this.component.getPropDefinition(key);\n\n            if (prop && prop.sendToChild === false) {\n                continue;\n            }\n\n            if (prop && prop.sameDomain && !matchDomain(domain, getDomain(window))) {\n                continue;\n            }\n\n            // $FlowFixMe\n            result[key] = this.props[key];\n        }\n\n        // $FlowFixMe\n        return result;\n    }\n\n    updateProps(props : PropsInputType<P>) : ZalgoPromise<void> {\n        this.setProps(props, true);\n\n        return this.initPromise.then(() => {\n            if (this.child) {\n                return this.child.updateProps(this.getPropsForChild(this.getDomain())).catch(err => {\n                    if (!this.child || !this.proxyWin) {\n                        return;\n                    }\n\n                    return this.checkClose(this.proxyWin).then(() => {\n                        if (this.child) {\n                            throw err;\n                        }\n                    });\n                });\n            }\n        });\n    }\n\n    openFrame() : ZalgoPromise<?ProxyObject<HTMLIFrameElement>> {\n        return ZalgoPromise.try(() => {\n            if (this.driver.openFrame) {\n                return this.driver.openFrame.call(this);\n            }\n        });\n    }\n\n    openPrerenderFrame() : ZalgoPromise<?ProxyObject<HTMLIFrameElement>> {\n        return ZalgoPromise.try(() => {\n            if (this.driver.openPrerenderFrame) {\n                return this.driver.openPrerenderFrame.call(this);\n            }\n        });\n    }\n    \n    open(proxyFrame : ?ProxyObject<HTMLIFrameElement>) : ZalgoPromise<ProxyWindow> {\n        return ZalgoPromise.try(() => {\n            this.component.log(`open`);\n\n            const windowProp = this.props.window;\n\n            if (windowProp) {\n                this.clean.register(() => windowProp.close());\n                return toProxyWindow(windowProp);\n            }\n\n            return this.driver.open.call(this, proxyFrame);\n\n        }).then(proxyWin => {\n            this.proxyWin = proxyWin;\n            return proxyWin;\n        });\n    }\n\n    openPrerender(proxyWin : ProxyWindow, proxyPrerenderFrame : ?ProxyObject<HTMLIFrameElement>) : ZalgoPromise<ProxyWindow> {\n        return ZalgoPromise.try(() => {\n            return this.driver.openPrerender.call(this, proxyWin, proxyPrerenderFrame);\n        });\n    }\n\n    focus() : ZalgoPromise<void> {\n        return ZalgoPromise.try(() => {\n            if (this.proxyWin) {\n                return this.proxyWin.focus().then(noop);\n            }\n        });\n    }\n\n    delegate(context : $Values<typeof CONTEXT>, target : CrossDomainWindowType) {\n        this.component.log(`delegate`);\n\n        const props = {};\n        for (const propName of this.component.getPropNames()) {\n            if (this.component.getPropDefinition(propName).allowDelegate) {\n                props[propName] = this.props[propName];\n            }\n        }\n\n        const overridesPromise = send(target, `${ POST_MESSAGE.DELEGATE }_${ this.component.name }`, {\n            context,\n            props,\n            overrides: {\n                event:   this.event,\n                close:   () => this.close(),\n                onError: (err) => this.onError(err)\n            }\n\n        }).then(({ data }) => {\n            this.clean.register(data.destroy);\n            return data.overrides;\n\n        }).catch(err => {\n            throw new Error(`Unable to delegate rendering. Possibly the component is not loaded in the target window.\\n\\n${ stringifyError(err) }`);\n        });\n\n        for (const key of this.driver.delegate) {\n            // $FlowFixMe\n            this[key] = function overriddenFunction() : ZalgoPromise<mixed> {\n                return overridesPromise.then(overrides => {\n                    return overrides[key].apply(this, arguments);\n                });\n            };\n        }\n    }\n\n    getWindowRef(target : CrossDomainWindowType, domain : string, uid : string, context : $Values<typeof CONTEXT>) : WindowRef {\n        \n        if (domain === getDomain(window)) {\n            const global = getGlobal(window);\n            global.windows = global.windows || {};\n            global.windows[uid] = window;\n            this.clean.register(() => {\n                delete global.windows[uid];\n            });\n    \n            return { type: WINDOW_REFERENCES.GLOBAL, uid };\n        }\n\n        if (context === CONTEXT.POPUP) {\n            return { type: WINDOW_REFERENCES.OPENER };\n        }\n\n        return { type: WINDOW_REFERENCES.PARENT, distance: getDistanceFromTop(window) };\n    }\n\n    watchForClose(proxyWin : ProxyWindow) : ZalgoPromise<void> {\n        let cancelled = false;\n\n        this.clean.register(() => {\n            cancelled = true;\n        });\n\n        return ZalgoPromise.delay(2000).then(() => {\n            return proxyWin.isClosed();\n        }).then(isClosed => {\n            if (isClosed) {\n                this.component.log(`detect_close_child`);\n                return this.close();\n            } else if (!cancelled) {\n                return this.watchForClose(proxyWin);\n            }\n        });\n    }\n\n    watchForUnload() {\n        const unloadWindowListener = addEventListener(window, 'unload', once(() => {\n            this.component.log(`navigate_away`);\n            this.destroy(new Error(`Window navigated away`));\n        }));\n\n        this.clean.register(unloadWindowListener.cancel);\n    }\n\n    runTimeout() : ZalgoPromise<void> {\n        return ZalgoPromise.try(() => {\n            const timeout = this.props.timeout;\n\n            if (timeout) {\n                return this.initPromise.timeout(timeout, new Error(`Loading component timed out after ${ timeout } milliseconds`));\n            }\n        });\n    }\n\n    initChild(child : ChildExportsType<P>) : ZalgoPromise<void> {\n        return ZalgoPromise.try(() => {\n            this.clean.set('child', child);\n            this.initPromise.resolve();\n        });\n    }\n\n    buildParentExports(win : ProxyWindow) : ParentExportsType<P> {\n        const onError    = (err) => this.onError(err);\n        const init       = (child) => this.initChild(child);\n        const close      = () => this.close();\n        const checkClose = () => this.checkClose(win);\n        const resize     = ({ width, height }) => this.resize({ width, height });\n\n        init.onError = onError;\n\n        return { init, close, checkClose, resize, onError };\n    }\n\n    resize({ width, height } : { width? : ?number, height? : ?number }) : ZalgoPromise<void> {\n        return ZalgoPromise.try(() => {\n            this.event.trigger(EVENT.RESIZE, { width, height });\n        });\n    }\n\n    checkClose(win : ProxyWindow) : ZalgoPromise<void> {\n        return win.isClosed().then(closed => {\n            if (closed) {\n                return this.close();\n            }\n\n            return ZalgoPromise.delay(200)\n                .then(() => win.isClosed())\n                .then(secondClosed => {\n                    if (secondClosed) {\n                        return this.close();\n                    }\n                });\n        });\n    }\n\n    close() : ZalgoPromise<void> {\n        return ZalgoPromise.try(() => {\n            this.component.log(`close`);\n            return this.event.trigger(EVENT.CLOSE);\n\n        }).then(() => {\n            if (this.child) {\n                this.child.close.fireAndForget().catch(noop);\n            }\n\n            return this.destroy(new Error(`Window closed`), false);\n        });\n    }\n\n    prerender(proxyPrerenderWin : ProxyWindow, { context, uid } : { context : $Values<typeof CONTEXT>, uid : string }) : ZalgoPromise<void> {\n        return ZalgoPromise.try(() => {\n            const prerenderTemplate = this.component.prerenderTemplate;\n\n            if (!prerenderTemplate) {\n                return;\n            }\n\n            let prerenderWindow = proxyPrerenderWin.getWindow();\n\n            if (!prerenderWindow || !isSameDomain(prerenderWindow) || !isBlankDomain(prerenderWindow)) {\n                return;\n            }\n\n            prerenderWindow = assertSameDomain(prerenderWindow);\n    \n            const doc = prerenderWindow.document;\n            const el = this.renderTemplate(prerenderTemplate, { context, uid, doc });\n\n            if (!el) {\n                return;\n            }\n\n            if (el.ownerDocument !== doc) {\n                throw new Error(`Expected prerender template to have been created with document from child window`);\n            }\n\n            writeElementToWindow(prerenderWindow, el);\n\n            let { width = false, height = false, element = 'body' } = this.component.autoResize || {};\n            element = getElementSafe(element, doc);\n            \n            if (element && (width || height)) {\n                onResize(element, ({ width: newWidth, height: newHeight }) => {\n                    this.resize({\n                        width:  width ? newWidth : undefined,\n                        height: height ? newHeight : undefined\n                    });\n                }, { width, height, win: prerenderWindow });\n            }\n        });\n    }\n\n    renderTemplate(renderer : (RenderOptionsType<P>) => ?HTMLElement, { context, uid, container, doc, frame, prerenderFrame } : { context : $Values<typeof CONTEXT>, uid : string, container? : HTMLElement, doc : Document, frame? : ?HTMLIFrameElement, prerenderFrame? : ?HTMLIFrameElement }) : ?HTMLElement {\n        // $FlowFixMe\n        return renderer.call(this, {\n            container,\n            context,\n            uid,\n            doc,\n            frame,\n            prerenderFrame,\n            focus:      () => this.focus(),\n            close:      () => this.close(),\n            state:      this.state,\n            props:      this.props,\n            tag:        this.component.tag,\n            dimensions: this.component.dimensions,\n            event:      this.event\n        });\n    }\n\n    renderContainer(proxyContainer : ProxyObject<HTMLElement>, { proxyFrame, proxyPrerenderFrame, context, uid } : { context : $Values<typeof CONTEXT>, uid : string, proxyFrame : ?ProxyObject<HTMLIFrameElement>, proxyPrerenderFrame : ?ProxyObject<HTMLIFrameElement> }) : ZalgoPromise<?ProxyObject<HTMLElement>> {\n        return ZalgoPromise.all([\n            proxyContainer.get().then(elementReady),\n            // $FlowFixMe\n            proxyFrame ? proxyFrame.get() : null,\n            // $FlowFixMe\n            proxyPrerenderFrame ? proxyPrerenderFrame.get() : null\n        ]).then(([ container, frame, prerenderFrame ]) => {\n            const innerContainer = this.renderTemplate(this.component.containerTemplate, { context, uid, container, frame, prerenderFrame, doc: document });\n            if (innerContainer) {\n                appendChild(container, innerContainer);\n                this.clean.register(() => destroyElement(innerContainer));\n                return getProxyObject(innerContainer);\n            }\n        });\n    }\n\n    destroy(err? : mixed, trigger? : boolean = true) : ZalgoPromise<void> {\n        return ZalgoPromise.try(() => {\n            if (!err) {\n                trigger = false;\n                err = new Error('Component destroyed');\n            }\n            this.component.log(`destroy`);\n            return this.onError(err, trigger);\n        }).then(() => {\n            return this.clean.all();\n        });\n    }\n\n    onError(err : mixed, trigger? : boolean = true) : ZalgoPromise<void> {\n        return ZalgoPromise.try(() => {\n            if (this.handledErrors.indexOf(err) !== -1) {\n                return;\n            }\n\n            this.handledErrors.push(err);\n            this.initPromise.asyncReject(err);\n\n            if (trigger) {\n                return this.event.trigger(EVENT.ERROR, err);\n            }\n        });\n    }\n\n    openBridge(proxyWin : ProxyWindow, domain : string, context : $Values<typeof CONTEXT>) : ?ZalgoPromise<?CrossDomainWindowType> {\n        if (__POST_ROBOT__.__IE_POPUP_SUPPORT__) {\n            return ZalgoPromise.try(() => {\n                return proxyWin.awaitWindow();\n                \n            }).then(win => {\n                if (!bridge || !bridge.needsBridge({ win, domain }) || bridge.hasBridge(domain, domain)) {\n                    return;\n                }\n\n                const bridgeUrl = this.component.getBridgeUrl();\n\n                if (!bridgeUrl) {\n                    throw new Error(`Bridge needed to render ${ context }`);\n                }\n\n                const bridgeDomain = getDomainFromUrl(bridgeUrl);\n                bridge.linkUrl(win, domain);\n                return bridge.openBridge(normalizeMockUrl(bridgeUrl), bridgeDomain);\n            });\n        }\n    }\n}\n","/* @flow */\n\nimport { onCloseWindow, type CrossDomainWindowType } from 'cross-domain-utils/src';\nimport { ZalgoPromise } from 'zalgo-promise/src';\nimport { ProxyWindow } from 'post-robot/src';\nimport { cleanup, type CleanupType, type EventEmitterType } from 'belter/src';\n\nimport { ParentComponent } from '../parent';\nimport { RENDER_DRIVERS, type ContextDriverType } from '../parent/drivers';\nimport type { Component } from '../component';\n\nexport type DelegatePropsType = {|\n    onClose : () => ?ZalgoPromise<void>,\n    onDisplay : () => ?ZalgoPromise<void>,\n    window : ?ProxyWindow\n|};\n\nexport type DelegateOptionsType = {|\n    context : string,\n    props : DelegatePropsType,\n    overrides : {\n        close : () => ZalgoPromise<void>,\n        onError : (mixed) => ZalgoPromise<void>,\n        event : EventEmitterType\n    }\n|};\n\nexport type DelegateReturnType = {|\n    overrides : Object,\n    destroy : () => ZalgoPromise<void>\n|};\n\nexport class DelegateComponent<P>  {\n\n    component : Component<P>\n    source : CrossDomainWindowType\n    context : string\n    driver : ContextDriverType\n    props : DelegatePropsType\n    clean : CleanupType\n\n    focus : () => ZalgoPromise<void>\n    resize : ({ width? : ?number, height? : ?number }) => ZalgoPromise<void>\n    renderTemplate : Function\n\n    close : () => ZalgoPromise<void>\n    onError : (mixed) => ZalgoPromise<void>\n    event : EventEmitterType\n\n    constructor(component : Component<P>, source : CrossDomainWindowType, options : DelegateOptionsType) {\n        this.component = component;\n        this.context = options.context;\n        this.driver = RENDER_DRIVERS[options.context];\n        this.clean = cleanup(this);\n        \n        this.focus = ParentComponent.prototype.focus;\n        this.resize = ParentComponent.prototype.resize;\n        this.renderTemplate = ParentComponent.prototype.renderTemplate;\n\n        // $FlowFixMe\n        this.props = {};\n        for (const propName of Object.keys(options.props)) {\n            const propDef = this.component.getPropDefinition(propName);\n            if (propDef && propDef.allowDelegate && options.props[propName]) {\n                // $FlowFixMe\n                this.props[propName] = options.props[propName];\n            }\n        }\n\n        this.close   = options.overrides.close;\n        this.onError = options.overrides.onError;\n        this.event   = options.overrides.event;\n\n        this.component.registerActiveComponent(this);\n        this.clean.register(() => this.component.destroyActiveComponent(this));\n\n        this.watchForSourceClose(source);\n    }\n\n    getDelegate() : DelegateReturnType {\n        return {\n            overrides: this.getOverrides(),\n            destroy:   () => this.destroy()\n        };\n    }\n\n    watchForSourceClose(source : CrossDomainWindowType) {\n        const closeSourceWindowListener = onCloseWindow(source, () => this.destroy(), 3000);\n        this.clean.register(closeSourceWindowListener.cancel);\n    }\n\n    getOverrides() : { [string] : mixed } {\n        const overrides = {};\n        const self = this;\n\n        for (const key of this.driver.delegate) {\n            overrides[key] = function delegateOverride() : mixed {\n                // $FlowFixMe\n                return ParentComponent.prototype[key].apply(self, arguments);\n            };\n            overrides[key].__name__ = key;\n        }\n\n        return overrides;\n    }\n\n    destroy() : ZalgoPromise<void> {\n        return this.clean.all();\n    }\n}\n","/* @flow */\n/* eslint react/no-deprecated: off, react/no-find-dom-node: off, react/display-name: off, react/no-did-mount-set-state: off, react/destructuring-assignment: off, react/prop-types: off */\n\nimport { extend, noop } from 'belter/src';\n\nimport type { Component, ComponentDriverType } from '../component';\nimport { CONTEXT } from '../constants';\n\ndeclare class ReactClassType {\n\n}\n\ntype ReactElementType = {|\n\n|};\n\ndeclare class __ReactComponent {\n\n}\n\ntype ReactType = {|\n    Component : __ReactComponent,\n    createClass : ({ render : () => ReactElementType, componentDidMount : () => void, componentDidUpdate : () => void }) => (typeof ReactClassType),\n    createElement : (string, ?{ [string] : mixed }, ...children : $ReadOnlyArray<ReactElementType>) => ReactElementType\n|};\n\ntype ReactDomType = {|\n    findDOMNode : (typeof ReactClassType) => HTMLElement\n|};\n\ntype ReactLibraryType = {|\n    React : ReactType,\n    ReactDOM : ReactDomType\n|};\n\nexport const react : ComponentDriverType<*, ReactLibraryType> = {\n\n    register(component : Component<*>, { React, ReactDOM } : ReactLibraryType) : (typeof ReactClassType) {\n\n        // $FlowFixMe\n        return class extends React.Component {\n            render() : ReactElementType {\n                return React.createElement('div', null);\n            }\n\n            componentDidMount() {\n                component.log(`instantiate_react_component`);\n\n                // $FlowFixMe\n                const el = ReactDOM.findDOMNode(this);\n\n                const parent = component.init(extend({}, this.props));\n                parent.render(el, CONTEXT.IFRAME);\n                this.setState({ parent });\n            }\n\n            componentDidUpdate() {\n\n                if (this.state && this.state.parent) {\n                    this.state.parent.updateProps(extend({}, this.props)).catch(noop);\n                }\n            }\n        };\n    }\n};\n","export default function _inheritsLoose(subClass, superClass) {\n  subClass.prototype = Object.create(superClass.prototype);\n  subClass.prototype.constructor = subClass;\n  subClass.__proto__ = superClass;\n}","/* @flow */\n\nimport { extend, noop } from 'belter/src';\n\nimport type { Component, ComponentDriverType } from '../component';\nimport { CONTEXT } from '../constants';\n\ntype VueComponent = {|\n    render : (Function) => Element,\n    inheritAttrs : boolean,\n    mounted : () => void,\n    watch : {|\n        $attrs : {|\n            deep : boolean,\n            handler : () => void\n        |}\n    |}\n|};\n\ntype RegisteredVueComponent = {|\n    \n|};\n\ntype VueType = {|\n    component : (string, VueComponent) => RegisteredVueComponent\n|};\n\nexport const vue : ComponentDriverType<*, VueType> = {\n\n    register<P>(component : Component<P>, Vue : VueType) : RegisteredVueComponent {\n\n        return Vue.component(component.tag, {\n            render(createElement) : Element {\n                return createElement('div');\n            },\n\n            inheritAttrs: false,\n\n            mounted() {\n                const el = this.$el;\n\n                // $FlowFixMe\n                this.parent = component.init(extend({}, this.$attrs));\n                this.parent.render(el, CONTEXT.IFRAME);\n            },\n\n            watch: {\n                $attrs: {\n                    handler: function handler() {\n                        if (this.parent && this.$attrs) {\n                            this.parent.updateProps(extend({}, this.$attrs)).catch(noop);\n                        }\n                    },\n                    deep: true\n                }\n            }\n        });\n    }\n};\n","/* @flow */\n\nimport { dasherizeToCamel, replaceObject, noop } from 'belter/src';\n\nimport type { Component, ComponentDriverType } from '../component';\nimport { CONTEXT } from '../constants';\n\ntype AngularModule = {|\n    directive : (string, () => {\n        scope : { [string] : '=' | '@' },\n        restrict : string,\n        controller : $ReadOnlyArray<string | Function>\n    }) => AngularModule\n|};\n\ntype Angular = {|\n    module : (string, $ReadOnlyArray<string>) => AngularModule\n|};\n\nexport const angular : ComponentDriverType<*, Angular> = {\n\n    register(component : Component<*>, ng : Angular) : AngularModule {\n\n        const module = ng.module(component.tag, []).directive(dasherizeToCamel(component.tag), () => {\n\n            const scope = {};\n\n            for (const key of component.getPropNames()) {\n                scope[key] = '=';\n            }\n\n            scope.props = '=';\n\n            return {\n                scope,\n\n                restrict: 'E',\n\n                controller: [ '$scope', '$element', ($scope, $element) => {\n                    component.log(`instantiate_angular_component`);\n\n                    function safeApply() {\n                        if ($scope.$root.$$phase !== '$apply' && $scope.$root.$$phase !== '$digest') {\n                            try {\n                                $scope.$apply();\n                            } catch (err) {\n                                // pass\n                            }\n                        }\n                    }\n\n                    const getProps = () => {\n                        return replaceObject($scope.props, item => {\n                            if (typeof item === 'function') {\n                                return function angularWrapped() : mixed {\n                                    const result = item.apply(this, arguments);\n                                    safeApply();\n                                    return result;\n                                };\n                            }\n                            return item;\n                        });\n                    };\n\n                    const instance = component.init(getProps());\n                    instance.render($element[0], CONTEXT.IFRAME);\n\n                    $scope.$watch(() => {\n                        instance.updateProps(getProps()).catch(noop);\n                    });\n                } ]\n            };\n        });\n\n        return module;\n    }\n};\n","/* @flow */\n/* eslint new-cap: 0 */\n\nimport { replaceObject } from 'belter/src';\n\nimport type { Component, ComponentDriverType } from '../component';\nimport { CONTEXT } from '../constants';\n\ntype Angular2Injection = {||};\n\ntype Angular2Component = {||};\n\ntype Angular2Module = {||};\n\ntype Angular2 = {|\n    Component : ({ selector : string, template : string, inputs : $ReadOnlyArray<string> }) => {\n        Class : ({ constructor : $ReadOnlyArray<Angular2Injection | Function>, ngOnInit : () => void, ngDoCheck : () => void }) => Angular2Component\n    },\n    NgModule : ({ declarations : $ReadOnlyArray<Angular2Component>, exports : $ReadOnlyArray<Angular2Component> }) => {\n        Class : ({ constructor : () => void }) => Angular2Module\n    },\n    ElementRef : Angular2Injection,\n    NgZone : Angular2Injection\n|};\n\nconst equals = (obj1, obj2) => {\n    const checked = {};\n\n    for (const key in obj1) {\n        if (obj1.hasOwnProperty(key)) {\n            checked[key] = true;\n\n            if (obj1[key] !== obj2[key]) {\n                return false;\n            }\n        }\n    }\n\n    for (const key in obj2) {\n        if (!checked[key]) {\n            return false;\n        }\n    }\n\n    return true;\n};\n\nexport const angular2 : ComponentDriverType<*, Angular2> = {\n\n    register(zoid : Component<*>, { Component : AngularComponent, NgModule, ElementRef, NgZone }) : Angular2Module {\n\n        zoid.log('initializing angular2 component');\n\n        const getProps = (component) => {\n            return replaceObject({ ...component.internalProps, ...component.props }, item => {\n                if (typeof item === 'function') {\n                    return function angular2Wrapped() : void {\n                        return component.zone.run(() => item.apply(this, arguments));\n                    };\n                }\n                return item;\n            });\n        };\n\n        const ComponentInstance =\n            AngularComponent({\n                selector: zoid.tag,\n                template: '<div></div>',\n                inputs:   [ 'props' ]\n            }).Class({\n                constructor: [ ElementRef, NgZone, function angularConstructor(elementRef, zone) {\n                    this._props = {};\n                    this.elementRef = elementRef;\n                    this.zone = zone;\n                } ],\n                ngOnInit () {\n                    const targetElement = this.elementRef.nativeElement;\n                    \n                    this.parent = zoid.init(getProps(this));\n                    this.parent.render(targetElement, CONTEXT.IFRAME);\n                },\n                ngDoCheck() {\n                    if (this.parent && !equals(this._props, this.props)) {\n                        this._props = { ...this.props };\n                        this.parent.updateProps(getProps(this));\n                    }\n                }\n            });\n\n\n        const ModuleInstance = NgModule({\n            declarations: [ ComponentInstance ],\n            exports:      [ ComponentInstance ]\n        }).Class({\n            constructor () {\n                // pass\n            }\n        });\n\n        return ModuleInstance;\n    }\n};\n","/* @flow */\n/* eslint react/react-in-jsx-scope: off */\n\nimport { destroyElement, toCSS } from 'belter/src';\n\nimport { type RenderOptionsType } from '../../parent';\nimport { EVENT } from '../../constants';\n\nconst CLASS = {\n    VISIBLE:   'visible',\n    INVISIBLE: 'invisible'\n};\n\nexport function defaultContainerTemplate<P>({ uid, frame, prerenderFrame, doc, props, event, dimensions : { width, height } } : RenderOptionsType<P>) : ?HTMLElement {\n    if (__ZOID__.__DEFAULT_CONTAINER__) {\n        if (!frame || !prerenderFrame) {\n            return;\n        }\n\n        const div = doc.createElement('div');\n        div.setAttribute('id', uid);\n        const style = doc.createElement('style');\n        if (props.cspNonce) {\n            style.setAttribute('nonce', props.cspNonce);\n        }\n\n        style.appendChild(doc.createTextNode(`\n            #${ uid } {\n                display: inline-block;\n                position: relative;\n                width: ${ width };\n                height: ${ height };\n            }\n\n            #${ uid } > iframe {\n                display: inline-block;\n                position: absolute;\n                width: 100%;\n                height: 100%;\n                top: 0;\n                left: 0;\n                transition: opacity .2s ease-in-out;\n            }\n\n            #${ uid } > iframe.${ CLASS.INVISIBLE } {\n                opacity: 0;\n            }\n\n            #${ uid } > iframe.${ CLASS.VISIBLE } {\n                opacity: 1;\n        }\n        `));\n\n        div.appendChild(frame);\n        div.appendChild(prerenderFrame);\n        div.appendChild(style);\n\n        prerenderFrame.classList.add(CLASS.VISIBLE);\n        frame.classList.add(CLASS.INVISIBLE);\n    \n        event.on(EVENT.RENDERED, () => {\n            prerenderFrame.classList.remove(CLASS.VISIBLE);\n            prerenderFrame.classList.add(CLASS.INVISIBLE);\n    \n            frame.classList.remove(CLASS.INVISIBLE);\n            frame.classList.add(CLASS.VISIBLE);\n    \n            setTimeout(() => {\n                destroyElement(prerenderFrame);\n            }, 1);\n        });\n\n        event.on(EVENT.RESIZE, ({ width: newWidth, height: newHeight }) => {\n            if (typeof newWidth === 'number') {\n                div.style.width = toCSS(newWidth);\n            }\n    \n            if (typeof newHeight === 'number') {\n                div.style.height = toCSS(newHeight);\n            }\n        });\n\n        return div;\n    }\n}\n","/* @flow */\n/* eslint react/react-in-jsx-scope: off */\n\nimport { type RenderOptionsType } from '../../parent';\n\nexport function defaultPrerenderTemplate<P>({ doc, props } : RenderOptionsType<P>) : ?HTMLElement {\n    if (__ZOID__.__DEFAULT_PRERENDER__) {\n        const html = doc.createElement('html');\n        const body = doc.createElement('body');\n        const style = doc.createElement('style');\n        const spinner = doc.createElement('div');\n        spinner.classList.add('spinner');\n\n        if (props.cspNonce) {\n            style.setAttribute('nonce', props.cspNonce);\n        }\n\n        html.appendChild(body);\n        body.appendChild(spinner);\n        body.appendChild(style);\n        style.appendChild(doc.createTextNode(`\n            html, body {\n                width: 100%;\n                height: 100%;\n            }\n\n            .spinner {\n                position: fixed;\n                max-height: 60vmin;\n                max-width: 60vmin;\n                height: 40px;\n                width: 40px;\n                top: 50%;\n                left: 50%;\n                box-sizing: border-box;\n                border: 3px solid rgba(0, 0, 0, .2);\n                border-top-color: rgba(33, 128, 192, 0.8);\n                border-radius: 100%;\n                animation: rotation .7s infinite linear;\n            }\n\n            @keyframes rotation {\n                from {\n                    transform: translateX(-50%) translateY(-50%) rotate(0deg);\n                }\n                to {\n                    transform: translateX(-50%) translateY(-50%) rotate(359deg);\n                }\n            }\n        `));\n\n        return html;\n    }\n}\n","/* @flow */\n\nimport { ZalgoPromise } from 'zalgo-promise/src';\nimport { once, noop } from 'belter/src';\nimport { isWindow, type CrossDomainWindowType } from 'cross-domain-utils/src';\nimport { ProxyWindow, toProxyWindow } from 'post-robot/src';\n\nimport { PROP_SERIALIZATION } from '../constants';\n\nexport type EventHandlerType<T> = (T) => void | ZalgoPromise<void>;\n\nexport type timeoutPropType = number;\nexport type windowPropType = CrossDomainWindowType | ProxyWindow;\nexport type cspNoncePropType = string;\nexport type closePropType = () => ZalgoPromise<void>;\nexport type focusPropType = () => ZalgoPromise<void>;\nexport type resizePropType = ({ width : ?number, height : ?number }) => ZalgoPromise<void>;\n\nexport type onDisplayPropType = EventHandlerType<void>;\nexport type onRenderedPropType = EventHandlerType<void>;\nexport type onRenderPropType = EventHandlerType<void>;\nexport type onClosePropType = EventHandlerType<void>;\nexport type onErrorPropType = EventHandlerType<mixed>;\nexport type onPropsPropType<P> = ((PropsType<P>) => void) => void; // eslint-disable-line no-use-before-define\n\nexport type PropsInputType<P> = {\n    timeout? : timeoutPropType,\n    window? : windowPropType,\n    cspNonce? : cspNoncePropType,\n\n    onDisplay? : onDisplayPropType,\n    onRendered? : onRenderedPropType,\n    onRender? : onRenderPropType,\n    onClose? : onClosePropType,\n    onError? : onErrorPropType,\n    onProps? : onPropsPropType<P>\n} & P;\n\nexport type PropsType<P> = {|\n    timeout? : timeoutPropType,\n    window? : ?windowPropType,\n    close? : ?closePropType,\n    focus? : ?focusPropType,\n    resize? : ?resizePropType,\n    cspNonce? : ?cspNoncePropType,\n\n    onDisplay : onDisplayPropType,\n    onRendered : onRenderedPropType,\n    onRender : onRenderPropType,\n    onClose : onClosePropType,\n    onError : onErrorPropType,\n    onProps : onPropsPropType<P>\n|} & P;\n\ntype PropDefinitionType<T, P, S : string> = {|\n    type : S,\n    alias? : string,\n    value? : ({ props : P, state : Object, close : () => ZalgoPromise<void>, focus : () => ZalgoPromise<void>, onError : (mixed) => ZalgoPromise<void> }) => ?T,\n    required? : boolean,\n    queryParam? : boolean | string | ({ value : T }) => (string | ZalgoPromise<string>),\n    queryValue? : ({ value : T }) => (ZalgoPromise<mixed> | mixed),\n    sendToChild? : boolean,\n    allowDelegate? : boolean,\n    validate? : ({ value : T, props : PropsInputType<P> }) => void,\n    decorate? : ({ value : T, props : PropsType<P>, state : Object, close : () => ZalgoPromise<void>, focus : () => ZalgoPromise<void>, onError : (mixed) => ZalgoPromise<void> }) => T,\n    default? : ({ props : P, state : Object }) => ?T,\n    sameDomain? : boolean,\n    serialization? : $Values<typeof PROP_SERIALIZATION>,\n    childDecorate? : ({ value : T, close : () => ZalgoPromise<void>, focus : () => ZalgoPromise<void>, onError : (mixed) => ZalgoPromise<void>, onProps : ((PropsType<P>) => void) => void, resize : ({ width : ?number, height : ?number }) => ZalgoPromise<void> }) => ?T\n|};\n\nexport type BooleanPropDefinitionType<T : boolean, P> = PropDefinitionType<T, P, 'boolean'>;\nexport type StringPropDefinitionType<T : string, P> = PropDefinitionType<T, P, 'string'>;\nexport type NumberPropDefinitionType<T : number, P> = PropDefinitionType<T, P, 'number'>;\nexport type FunctionPropDefinitionType<T : Function, P> = PropDefinitionType<T, P, 'function'>;\nexport type ArrayPropDefinitionType<T : Array<*>, P> = PropDefinitionType<T, P, 'array'>; // eslint-disable-line flowtype/no-mutable-array\nexport type ObjectPropDefinitionType<T : Object, P> = PropDefinitionType<T, P, 'object'>;\n\nexport type MixedPropDefinitionType<P> = BooleanPropDefinitionType<*, P> | StringPropDefinitionType<*, P> | NumberPropDefinitionType<*, P> | FunctionPropDefinitionType<*, P> | ObjectPropDefinitionType<*, P> | ArrayPropDefinitionType<*, P>;\n\nexport type UserPropsDefinitionType<P> = {\n    [string] : MixedPropDefinitionType<P>\n};\n\n// eslint-disable-next-line flowtype/require-exact-type\nexport type BuiltInPropsDefinitionType<P> = {\n    timeout : NumberPropDefinitionType<timeoutPropType, P>,\n    window : ObjectPropDefinitionType<windowPropType, P>,\n    close : FunctionPropDefinitionType<closePropType, P>,\n    focus : FunctionPropDefinitionType<focusPropType, P>,\n    resize : FunctionPropDefinitionType<resizePropType, P>,\n\n    onDisplay : FunctionPropDefinitionType<onDisplayPropType, P>,\n    onRendered : FunctionPropDefinitionType<onRenderedPropType, P>,\n    onRender : FunctionPropDefinitionType<onRenderPropType, P>,\n    onClose : FunctionPropDefinitionType<onClosePropType, P>,\n    onError : FunctionPropDefinitionType<onErrorPropType, P>,\n    onProps : FunctionPropDefinitionType<onPropsPropType<P>, P>\n};\n\nconst defaultNoop = () => noop;\nconst decorateOnce = ({ value }) => once(value);\n\nexport function getBuiltInProps<P>() : BuiltInPropsDefinitionType<P> {\n    return {\n        window: {\n            type:          'object',\n            sendToChild:   false,\n            required:      false,\n            allowDelegate: true,\n            validate({ value } : { value : CrossDomainWindowType | ProxyWindow }) {\n                if (!isWindow(value) && !ProxyWindow.isProxyWindow(value)) {\n                    throw new Error(`Expected Window or ProxyWindow`);\n                }\n            },\n            decorate({ value } : { value : CrossDomainWindowType | ProxyWindow }) : ProxyWindow {\n                return toProxyWindow(value);\n            }\n        },\n\n        timeout: {\n            type:        'number',\n            required:    false,\n            sendToChild: false\n        },\n\n        close: {\n            type:          'function',\n            required:      false,\n            sendToChild:   false,\n            childDecorate: ({ close }) => close\n        },\n\n        focus: {\n            type:          'function',\n            required:      false,\n            sendToChild:   false,\n            childDecorate: ({ focus }) => focus\n        },\n\n        resize: {\n            type:          'function',\n            required:      false,\n            sendToChild:   false,\n            childDecorate: ({ resize }) => resize\n        },\n\n        cspNonce: {\n            type:     'string',\n            required: false\n        },\n\n        getParent: {\n            type:          'function',\n            required:      false,\n            sendToChild:   false,\n            childDecorate: ({ getParent }) => getParent\n        },\n\n        getParentDomain: {\n            type:          'function',\n            required:      false,\n            sendToChild:   false,\n            childDecorate: ({ getParentDomain }) => getParentDomain\n        },\n\n        onDisplay: {\n            type:          'function',\n            required:      false,\n            sendToChild:   false,\n            allowDelegate: true,\n            default:       defaultNoop,\n            decorate:      decorateOnce\n        },\n\n        onRendered: {\n            type:        'function',\n            required:    false,\n            sendToChild: false,\n            default:     defaultNoop,\n            decorate:    decorateOnce\n        },\n\n        onRender: {\n            type:        'function',\n            required:    false,\n            sendToChild: false,\n            default:     defaultNoop,\n            decorate:    decorateOnce\n        },\n\n        onClose: {\n            type:          'function',\n            required:      false,\n            sendToChild:   false,\n            allowDelegate: true,\n            default:       defaultNoop,\n            decorate:      decorateOnce\n        },\n\n        onError: {\n            type:          'function',\n            required:      false,\n            sendToChild:   false,\n            childDecorate: ({ onError }) => onError\n        },\n\n        onProps: {\n            type:          'function',\n            required:      false,\n            sendToChild:   false,\n            default:       defaultNoop,\n            childDecorate: ({ onProps }) => onProps\n        }\n    };\n}\n","/* @flow */\n/* eslint max-lines: 0 */\n\nimport { setup as setupPostRobot, on, send, bridge, toProxyWindow, destroy as destroyPostRobot } from 'post-robot/src';\nimport { ZalgoPromise } from 'zalgo-promise/src';\nimport { isWindow, getDomainFromUrl, type CrossDomainWindowType, isSameTopWindow, getDomain, matchDomain, isSameDomain } from 'cross-domain-utils/src';\nimport { isRegex, noop, isElement } from 'belter/src';\n\nimport { ChildComponent, getChildPayload } from '../child';\nimport { ParentComponent, type RenderOptionsType, type ParentHelpers } from '../parent';\nimport { DelegateComponent } from '../delegate';\nimport { CONTEXT, POST_MESSAGE, WILDCARD, DEFAULT_DIMENSIONS } from '../constants';\nimport { react, angular, vue, angular2 } from '../drivers';\nimport { getGlobal, destroyGlobal } from '../lib';\nimport type { CssDimensionsType, StringMatcherType } from '../types';\n\nimport { validate } from './validate';\nimport { defaultContainerTemplate, defaultPrerenderTemplate } from './templates';\nimport { getBuiltInProps, type UserPropsDefinitionType, type BuiltInPropsDefinitionType, type PropsInputType, type PropsType, type MixedPropDefinitionType } from './props';\n\ntype LoggerPayload = { [string] : ?string };\n\n// eslint-disable-next-line flowtype/require-exact-type\ntype Logger = {\n    debug : (event : string, payload? : LoggerPayload) => any, // eslint-disable-line flowtype/no-weak-types\n    info : (event : string, payload? : LoggerPayload) => any, // eslint-disable-line flowtype/no-weak-types\n    warn : (event : string, payload? : LoggerPayload) => any, // eslint-disable-line flowtype/no-weak-types\n    error : (event : string, payload? : LoggerPayload) => any // eslint-disable-line flowtype/no-weak-types\n};\n\n/*  Component\n    ---------\n\n    This is the spec for the component. The idea is, when I call zoid.create(), it will create a new instance\n    of Component with the blueprint needed to set up ParentComponents and ChildComponents.\n\n    This is the one portion of code which is required by -- and shared to -- both the parent and child windows, and\n    contains all of the configuration needed for them to set themselves up.\n*/\n\nexport type ComponentOptionsType<P> = {|\n\n    tag : string,\n\n    url : string | ({ props : PropsType<P> }) => string,\n    domain? : string | RegExp,\n    bridgeUrl? : string,\n\n    props? : UserPropsDefinitionType<P>,\n\n    dimensions? : CssDimensionsType,\n    autoResize? : { width? : boolean, height? : boolean, element? : string },\n\n    allowedParentDomains? : StringMatcherType,\n\n    attributes? : {\n        iframe? : { [string] : string },\n        popup? : { [string] : string }\n    },\n\n    defaultContext? : $Values<typeof CONTEXT>,\n\n    containerTemplate? : (RenderOptionsType<P>) => ?HTMLElement,\n    prerenderTemplate? : (RenderOptionsType<P>) => ?HTMLElement,\n\n    validate? : ({ props : PropsInputType<P> }) => void,\n\n    logger? : Logger\n|};\n\ntype ZoidRenderer = {|\n    render : (container? : string | HTMLElement, context? : $Values<typeof CONTEXT>) => ZalgoPromise<void>,\n    renderTo : (target : CrossDomainWindowType, container? : string, context? : $Values<typeof CONTEXT>) => ZalgoPromise<void>\n|};\n\nexport type ZoidComponentInstance<P> = {| ...ParentHelpers<P>, ...ZoidRenderer |};\n\nexport type ZoidComponent<P> = {|\n    (PropsInputType<P>) : ZoidComponentInstance<P>,\n    driver : (string, mixed) => mixed,\n    isChild : () => boolean,\n    xprops? : PropsType<P>,\n    canRenderTo : (CrossDomainWindowType) => ZalgoPromise<boolean>\n|};\n\nexport class Component<P> {\n\n    tag : string\n    name : string\n    \n    url : string | ({ props : PropsType<P> }) => string\n    domain : void | string | RegExp\n    bridgeUrl : void | string\n\n    props : UserPropsDefinitionType<P>\n    builtinProps : BuiltInPropsDefinitionType<P>\n\n    dimensions : CssDimensionsType\n    autoResize : void | { width? : boolean, height? : boolean, element? : string }\n\n    allowedParentDomains : StringMatcherType\n\n    defaultContext : $Values<typeof CONTEXT>\n    \n    attributes : {\n        iframe? : { [string] : string },\n        popup? : { [string] : string }\n    }\n\n    containerTemplate : (RenderOptionsType<P>) => ?HTMLElement\n    prerenderTemplate : ?(RenderOptionsType<P>) => ?HTMLElement\n\n    validate : void | ({ props : PropsInputType<P> }) => void\n\n    driverCache : { [string] : mixed }\n\n    xprops : ?PropsType<P>\n\n    logger : Logger\n\n    propNames : $ReadOnlyArray<string>\n\n    constructor(options : ComponentOptionsType<P>) {\n        validate(options);\n\n        // The tag name of the component. Used by some drivers (e.g. angular) to turn the component into an html element,\n        // e.g. <my-component>\n\n        this.tag = options.tag;\n        this.name = this.tag.replace(/-/g, '_');\n\n        this.allowedParentDomains = options.allowedParentDomains || WILDCARD;\n\n        const global = getGlobal();\n        global.components = global.components || {};\n\n        if (global.components[this.tag]) {\n            throw new Error(`Can not register multiple components with the same tag: ${ this.tag }`);\n        }\n\n        // A json based spec describing what kind of props the component accepts. This is used to validate any props before\n        // they are passed down to the child.\n\n        this.builtinProps = getBuiltInProps();\n        this.props = options.props || {};\n\n        // The dimensions of the component, e.g. { width: '300px', height: '150px' }\n\n        const { width = DEFAULT_DIMENSIONS.WIDTH, height = DEFAULT_DIMENSIONS.HEIGHT } = options.dimensions || {};\n        this.dimensions = { width, height };\n\n        this.url = options.url;\n        this.domain = options.domain;\n        this.bridgeUrl = options.bridgeUrl;\n\n        this.attributes = options.attributes || {};\n        this.attributes.iframe = this.attributes.iframe || {};\n        this.attributes.popup = this.attributes.popup || {};\n\n        this.defaultContext = options.defaultContext || CONTEXT.IFRAME;\n\n        this.autoResize = options.autoResize;\n\n        if (options.containerTemplate) {\n            this.containerTemplate = options.containerTemplate;\n        } else if (__ZOID__.__DEFAULT_CONTAINER__) {\n            this.containerTemplate = defaultContainerTemplate;\n        }\n\n        if (options.prerenderTemplate) {\n            this.prerenderTemplate = options.prerenderTemplate;\n        } else if (__ZOID__.__DEFAULT_PRERENDER__) {\n            this.prerenderTemplate = defaultPrerenderTemplate;\n        }\n\n        this.validate = options.validate;\n\n        this.logger = options.logger || {\n            debug: noop,\n            info:  noop,\n            warn:  noop,\n            error: noop\n        };\n\n        this.registerChild();\n        this.listenDelegate();\n\n        global.components[this.tag] = this;\n    }\n\n    getPropNames() : $ReadOnlyArray<string> {\n        if (this.propNames) {\n            return this.propNames;\n        }\n\n        const propNames = Object.keys(this.props);\n        for (const key of Object.keys(this.builtinProps)) {\n            if (propNames.indexOf(key) === -1) {\n                propNames.push(key);\n            }\n        }\n\n        this.propNames = propNames;\n        return propNames;\n    }\n\n    // $FlowFixMe\n    getPropDefinition(name : string) : MixedPropDefinitionType<P> {\n        // $FlowFixMe\n        return this.props[name] || this.builtinProps[name];\n    }\n\n    driver(name : string, dep : mixed) : mixed {\n        if (__ZOID__.__FRAMEWORK_SUPPORT__) {\n            const drivers = { react, angular, vue, angular2 };\n\n            if (!drivers[name]) {\n                throw new Error(`Could not find driver for framework: ${ name }`);\n            }\n    \n            this.driverCache = this.driverCache || {};\n    \n            if (!this.driverCache[name]) {\n                this.driverCache[name] = drivers[name].register(this, dep);\n            }\n    \n            return this.driverCache[name];\n        } else {\n            throw new Error(`Driver support not enabled`);\n        }\n    }\n\n    registerChild() {\n        if (this.isChild()) {\n            if (window.xprops) {\n                throw new Error(`Can not register ${ this.name } as child - can not attach multiple components to the same window`);\n            }\n\n            const child = new ChildComponent(this);\n            window.xprops = this.xprops = child.getProps();\n        }\n    }\n\n    listenDelegate() {\n        on(`${ POST_MESSAGE.ALLOW_DELEGATE }_${ this.name }`, () => {\n            return true;\n        });\n\n        on(`${ POST_MESSAGE.DELEGATE }_${ this.name }`, ({ source, data: { context, props, overrides } }) => {\n            const delegate = new DelegateComponent(this, source, { context, props, overrides });\n            return delegate.getDelegate();\n        });\n    }\n\n    canRenderTo(win : CrossDomainWindowType) : ZalgoPromise<boolean> {\n        return send(win, `${ POST_MESSAGE.ALLOW_DELEGATE }_${ this.name }`).then(({ data }) => {\n            return data;\n        }).catch(() => {\n            return false;\n        });\n    }\n\n    getUrl(props : PropsType<P>) : string {\n        if (typeof this.url === 'function') {\n            return this.url({ props });\n        }\n\n        return this.url;\n    }\n\n    getChildDomain(props : PropsType<P>) : string {\n        if (this.domain && typeof this.domain === 'string') {\n            return this.domain;\n        }\n\n        return getDomainFromUrl(this.getUrl(props));\n    }\n\n    getDomain(props : PropsType<P>) : string | RegExp {\n        if (isRegex(this.domain)) {\n            // $FlowFixMe\n            return this.domain;\n        }\n\n        return this.getChildDomain(props);\n    }\n\n    getBridgeUrl() : ?string {\n        if (this.bridgeUrl) {\n            return this.bridgeUrl;\n        }\n    }\n\n    isChild() : boolean {\n        const payload = getChildPayload();\n        return Boolean(payload && payload.tag === this.tag && payload.childDomain === getDomain());\n    }\n\n    getDefaultContainer<T : (string | HTMLElement)>(context : $Values<typeof CONTEXT>, container? : T) : T {\n        if (container) {\n            if (typeof container !== 'string' && !isElement(container)) {\n                throw new TypeError(`Expected string or element selector to be passed`);\n            }\n\n            return container;\n        }\n\n        if (context === CONTEXT.POPUP) {\n            // $FlowFixMe\n            return 'body';\n        }\n\n        throw new Error(`Expected element to be passed to render iframe`);\n    }\n\n    getDefaultContext(context : ?$Values<typeof CONTEXT>, props : PropsInputType<P>) : $Values<typeof CONTEXT> {\n        if (props.window) {\n            return toProxyWindow(props.window).getType();\n        }\n\n        if (context) {\n            if (context !== CONTEXT.IFRAME && context !== CONTEXT.POPUP) {\n                throw new Error(`Unrecognized context: ${ context }`);\n            }\n            \n            return context;\n        }\n\n        return this.defaultContext;\n    }\n\n    init(props : PropsInputType<P>) : ZoidComponentInstance<P> {\n\n        // $FlowFixMe\n        props = props || {};\n        \n        const parent = new ParentComponent(this, props);\n\n        const render = (target, container, context) => ZalgoPromise.try(() => {\n            if (!isWindow(target)) {\n                throw new Error(`Must pass window to renderTo`);\n            }\n\n            context = this.getDefaultContext(context, props);\n            container = this.getDefaultContainer(context, container);\n            return parent.render(target, container, context);\n        });\n\n        return {\n            ...parent.getHelpers(),\n            render:   (container, context) => render(window, container, context),\n            renderTo: (target, container, context) => render(target, container, context)\n        };\n    }\n\n    checkAllowRender(target : CrossDomainWindowType, domain : string | RegExp, container : string | HTMLElement) {\n        if (target === window) {\n            return;\n        }\n\n        if (!isSameTopWindow(window, target)) {\n            throw new Error(`Can only renderTo an adjacent frame`);\n        }\n\n        const origin = getDomain();\n\n        if (!matchDomain(domain, origin) && !isSameDomain(target)) {\n            throw new Error(`Can not render remotely to ${ domain.toString() } - can only render to ${ origin }`);\n        }\n\n        if (container && typeof container !== 'string') {\n            throw new Error(`Container passed to renderTo must be a string selector, got ${ typeof container } }`);\n        }\n    }\n\n    log(event : string, payload? : LoggerPayload) {\n        this.logger.info(`${ this.name }_${ event }`, payload);\n    }\n\n    registerActiveComponent<Q>(instance : ParentComponent<Q> | DelegateComponent<Q>) {\n        const global = getGlobal();\n        global.activeComponents = global.activeComponents || [];\n        global.activeComponents.push(instance);\n    }\n\n    destroyActiveComponent<Q>(instance : ParentComponent<Q> | DelegateComponent<Q>) {\n        const global = getGlobal();\n        global.activeComponents = global.activeComponents || [];\n        global.activeComponents.splice(global.activeComponents.indexOf(instance), 1);\n    }\n}\n\nexport type ComponentDriverType<P, T : mixed> = {|\n    register : (Component<P>, T) => mixed\n|};\n\nexport function create<P>(options : ComponentOptionsType<P>) : ZoidComponent<P> {\n    setupPostRobot();\n\n    const component : Component<P> = new Component(options);\n\n    const init = (props) => component.init(props);\n    init.driver = (name, dep) => component.driver(name, dep);\n    init.isChild = () => component.isChild();\n    init.canRenderTo = (win) => component.canRenderTo(win);\n    init.xprops = component.xprops;\n\n    // $FlowFixMe\n    return init;\n}\n\nexport function destroyAll() : ZalgoPromise<void> {\n    if (bridge) {\n        bridge.destroyBridges();\n    }\n\n    const results = [];\n\n    const global = getGlobal();\n    global.activeComponents = global.activeComponents || [];\n    while (global.activeComponents.length) {\n        results.push(global.activeComponents[0].destroy(new Error(`zoid desroyed all`), false));\n    }\n\n    return ZalgoPromise.all(results).then(noop);\n}\n\nexport const destroyComponents = destroyAll;\n\nexport function destroy() {\n    destroyAll();\n    destroyGlobal();\n    destroyPostRobot();\n}\n","/* @flow */\n\nimport { isPerc, isPx, values } from 'belter/src';\n\nimport { CONTEXT, PROP_TYPE } from '../constants';\n\nimport type { ComponentOptionsType } from './index';\n\nfunction validatePropDefinitions<P>(options : ComponentOptionsType<P>) {\n\n    if (options.props && !(typeof options.props === 'object')) {\n        throw new Error(`Expected options.props to be an object`);\n    }\n\n    const PROP_TYPE_LIST = values(PROP_TYPE);\n\n    if (options.props) {\n        for (const key of Object.keys(options.props)) {\n\n            // $FlowFixMe\n            const prop = options.props[key];\n\n            if (!prop || !(typeof prop === 'object')) {\n                throw new Error(`Expected options.props.${ key } to be an object`);\n            }\n\n            if (!prop.type) {\n                throw new Error(`Expected prop.type`);\n            }\n\n            if (PROP_TYPE_LIST.indexOf(prop.type) === -1) {\n                throw new Error(`Expected prop.type to be one of ${ PROP_TYPE_LIST.join(', ') }`);\n            }\n\n            if (prop.required && prop.default) {\n                throw new Error(`Required prop can not have a default value`);\n            }\n\n            if (prop.type === PROP_TYPE.FUNCTION && prop.queryParam && !prop.queryValue) {\n                throw new Error(`Do not pass queryParam for function prop`);\n            }\n        }\n    }\n}\n\n// eslint-disable-next-line complexity\nexport function validate<P>(options : ?ComponentOptionsType<P>) { // eslint-ignore-line\n\n    if (!options) {\n        throw new Error(`Expected options to be passed`);\n    }\n\n    // eslint-disable-next-line security/detect-unsafe-regex, unicorn/no-unsafe-regex\n    if (!options.tag || !options.tag.match(/^([a-z0-9]+-)+[a-z0-9]+$/)) {\n        throw new Error(`Invalid options.tag: ${ options.tag }`);\n    }\n\n    validatePropDefinitions(options);\n\n    if (options.dimensions) {\n        if (options.dimensions && !isPx(options.dimensions.width) && !isPerc(options.dimensions.width)) {\n            throw new Error(`Expected options.dimensions.width to be a px or % string value`);\n        }\n\n        if (options.dimensions && !isPx(options.dimensions.height) && !isPerc(options.dimensions.height)) {\n            throw new Error(`Expected options.dimensions.height to be a px or % string value`);\n        }\n    }\n\n    if (options.defaultContext) {\n        if (options.defaultContext !== CONTEXT.IFRAME && options.defaultContext !== CONTEXT.POPUP) {\n            throw new Error(`Unsupported context type: ${ options.defaultContext || 'unknown' }`);\n        }\n    }\n\n    if (!options.url) {\n        throw new Error(`Must pass url`);\n    }\n\n    if (typeof options.url !== 'string' && typeof options.url !== 'function') {\n        throw new TypeError(`Expected url to be string or function`);\n    }\n\n    if (options.prerenderTemplate && typeof options.prerenderTemplate !== 'function') {\n        throw new Error(`Expected options.prerenderTemplate to be a function`);\n    }\n\n    if ((options.containerTemplate || !__ZOID__.__DEFAULT_CONTAINER__) && typeof options.containerTemplate !== 'function') {\n        throw new Error(`Expected options.containerTemplate to be a function`);\n    }\n}\n","/* @flow */\n\nexport { PopupOpenError } from 'belter/src';\nexport { create, destroy, destroyComponents, destroyAll, Component } from './component';\nexport type { ZoidComponent, ZoidComponentInstance } from './component';\nexport type { RenderOptionsType } from './parent';\nexport { PROP_TYPE, PROP_SERIALIZATION, CONTEXT, EVENT } from './constants';\n"],"sourceRoot":""}