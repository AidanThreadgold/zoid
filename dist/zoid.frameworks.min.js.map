{"version":3,"sources":["webpack://zoid/webpack/universalModuleDefinition","webpack://zoid/webpack/bootstrap","webpack://zoid/./node_modules/belter/src/index.js","webpack://zoid/./node_modules/zalgo-promise/src/utils.js","webpack://zoid/./node_modules/zalgo-promise/src/global.js","webpack://zoid/./node_modules/zalgo-promise/src/promise.js","webpack://zoid/./node_modules/zalgo-promise/src/exceptions.js","webpack://zoid/./node_modules/zalgo-promise/src/index.js","webpack://zoid/./node_modules/cross-domain-utils/src/index.js","webpack://zoid/./src/constants.js","webpack://zoid/./node_modules/belter/src/util.js","webpack://zoid/./node_modules/@babel/runtime/helpers/esm/extends.js","webpack://zoid/./node_modules/cross-domain-utils/src/constants.js","webpack://zoid/./node_modules/cross-domain-safe-weakmap/src/util.js","webpack://zoid/./node_modules/cross-domain-safe-weakmap/src/weakmap.js","webpack://zoid/./node_modules/cross-domain-safe-weakmap/src/native.js","webpack://zoid/./node_modules/cross-domain-safe-weakmap/src/index.js","webpack://zoid/./node_modules/@babel/runtime/helpers/esm/inheritsLoose.js","webpack://zoid/./node_modules/belter/src/device.js","webpack://zoid/./node_modules/belter/src/storage.js","webpack://zoid/./node_modules/belter/src/dom.js","webpack://zoid/./node_modules/belter/src/experiment.js","webpack://zoid/./node_modules/belter/src/global.js","webpack://zoid/./node_modules/belter/src/http.js","webpack://zoid/./node_modules/belter/src/decorators.js","webpack://zoid/./node_modules/belter/src/css.js","webpack://zoid/./node_modules/belter/src/test.js","webpack://zoid/./node_modules/cross-domain-utils/src/util.js","webpack://zoid/./node_modules/cross-domain-utils/src/utils.js","webpack://zoid/./node_modules/@babel/runtime/helpers/esm/applyDecoratedDescriptor.js","webpack://zoid/./node_modules/post-robot/src/conf/constants.js","webpack://zoid/./node_modules/post-robot/src/conf/config.js","webpack://zoid/./node_modules/post-robot/src/global.js","webpack://zoid/./node_modules/post-robot/src/lib/hello.js","webpack://zoid/./node_modules/post-robot/src/lib/windows.js","webpack://zoid/./node_modules/universal-serialize/src/constants.js","webpack://zoid/./node_modules/universal-serialize/src/common.js","webpack://zoid/./node_modules/universal-serialize/src/serialize.js","webpack://zoid/./node_modules/universal-serialize/src/serializers/function.js","webpack://zoid/./node_modules/universal-serialize/src/serializers/error.js","webpack://zoid/./node_modules/universal-serialize/src/serializers/promise.js","webpack://zoid/./node_modules/universal-serialize/src/serializers/regex.js","webpack://zoid/./node_modules/universal-serialize/src/serializers/date.js","webpack://zoid/./node_modules/universal-serialize/src/serializers/array.js","webpack://zoid/./node_modules/universal-serialize/src/serializers/object.js","webpack://zoid/./node_modules/universal-serialize/src/serializers/string.js","webpack://zoid/./node_modules/universal-serialize/src/serializers/number.js","webpack://zoid/./node_modules/universal-serialize/src/serializers/boolean.js","webpack://zoid/./node_modules/universal-serialize/src/serializers/null.js","webpack://zoid/./node_modules/universal-serialize/src/deserialize.js","webpack://zoid/./node_modules/post-robot/src/serialize/window.js","webpack://zoid/./node_modules/post-robot/src/serialize/function.js","webpack://zoid/./node_modules/post-robot/src/serialize/serialize.js","webpack://zoid/./node_modules/post-robot/src/serialize/promise.js","webpack://zoid/./node_modules/post-robot/src/drivers/send/strategies.js","webpack://zoid/./node_modules/post-robot/src/drivers/send/index.js","webpack://zoid/./node_modules/post-robot/src/lib/compat.js","webpack://zoid/./node_modules/post-robot/src/drivers/listeners.js","webpack://zoid/./node_modules/post-robot/src/drivers/receive/types.js","webpack://zoid/./node_modules/post-robot/src/drivers/receive/index.js","webpack://zoid/./node_modules/post-robot/src/public/client.js","webpack://zoid/./node_modules/post-robot/src/public/server.js","webpack://zoid/./node_modules/post-robot/src/public/config.js","webpack://zoid/./node_modules/post-robot/src/public/index.js","webpack://zoid/./node_modules/post-robot/src/clean.js","webpack://zoid/./node_modules/post-robot/src/interface.js","webpack://zoid/./node_modules/post-robot/src/index.js","webpack://zoid/./src/lib/global.js","webpack://zoid/./src/lib/window.js","webpack://zoid/./src/lib/serialize.js","webpack://zoid/./src/child/props.js","webpack://zoid/./src/child/index.js","webpack://zoid/./src/parent/drivers.js","webpack://zoid/./src/parent/index.js","webpack://zoid/./src/parent/props.js","webpack://zoid/./src/delegate/index.js","webpack://zoid/./node_modules/jsx-pragmatic/src/node.js","webpack://zoid/./node_modules/jsx-pragmatic/src/renderers/dom.js","webpack://zoid/./src/component/templates/container.jsx","webpack://zoid/./src/component/templates/component.jsx","webpack://zoid/./src/component/component.js","webpack://zoid/./src/component/validate.js","webpack://zoid/./src/component/props.js","webpack://zoid/./src/index.js","webpack://zoid/./src/drivers/react.js","webpack://zoid/./src/drivers/vue.js","webpack://zoid/./src/drivers/angular.js","webpack://zoid/./src/drivers/angular2.js","webpack://zoid/./src/drivers/index.js"],"names":["root","factory","exports","module","define","amd","self","this","installedModules","__webpack_require__","moduleId","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","_dom__WEBPACK_IMPORTED_MODULE_1__","__webpack_exports__","_util__WEBPACK_IMPORTED_MODULE_5__","_types__WEBPACK_IMPORTED_MODULE_7__","_decorators__WEBPACK_IMPORTED_MODULE_8__","_css__WEBPACK_IMPORTED_MODULE_9__","isPromise","item","Promise","window","Window","constructor","toString","then","err","getGlobal","glob","global","TypeError","zalgoGlobal","__zalgopromise__","flushPromises","activeCount","possiblyUnhandledPromiseHandlers","dispatchedErrors","ZalgoPromise","handler","_this","resolved","rejected","errorHandled","error","handlers","dispatching","stack","result","isAsync","res","resolve","reject","_proto","Error","dispatch","_this2","setTimeout","promise","indexOf","push","j","length","dispatchPossiblyUnhandledError","asyncReject","_this3","_loop","_handlers$i","onSuccess","onError","flushQueue","catch","undefined","finally","onFinally","try","timeout","time","_this4","clearTimeout","toPromise","all","promises","count","results","_loop2","prom","hash","keys","map","items","method","onPossiblyUnhandledException","cancel","splice","context","args","apply","delay","flush","promisesToFlush","_i2","promise_ZalgoPromise","_utils__WEBPACK_IMPORTED_MODULE_0__","_types__WEBPACK_IMPORTED_MODULE_1__","_constants__WEBPACK_IMPORTED_MODULE_2__","ZOID","__ZOID__","POST_MESSAGE","PROP_TYPE","INITIAL_PROPS","WINDOW_REFERENCES","PROP_SERIALIZATION","CONTEXT","CLASS","WILDCARD","DEFAULT_DIMENSIONS","cross_domain_utils_src__WEBPACK_IMPORTED_MODULE_0__","DELEGATE","ALLOW_DELEGATE","STRING","OBJECT","FUNCTION","BOOLEAN","NUMBER","ARRAY","RAW","UID","OPENER","TOP","PARENT","GLOBAL","JSON","DOTIFY","BASE64","WINDOW_TYPE","OUTLET","COMPONENT_FRAME","PRERENDER_FRAME","VISIBLE","INVISIBLE","WIDTH","HEIGHT","base64encode","base64decode","uniqueID","memoize","memoizePromise","promisify","inlineMemoize","noop","once","stringifyError","stringify","extend","values","safeInterval","dotify","dasherizeToCamel","capitalizeFirstLetter","replaceObject","isDefined","isRegex","weakMapMemoizePromise","getOrSet","cleanup","tryCatch","removeFromArray","objectIDs","zalgo_promise_src__WEBPACK_IMPORTED_MODULE_0__","cross_domain_safe_weakmap_src__WEBPACK_IMPORTED_MODULE_1__","str","btoa","Buffer","from","atob","chars","replace","charAt","Math","floor","random","Date","toISOString","slice","toLowerCase","__GLOBAL__","serializeArgs","Array","subkey","val","obj","WeakMap","uid","set","getObjectID","options","cacheMap","memoizedFunction","_len","arguments","_key","cache","thisNamespace","cacheTime","now","reset","delete","displayName","memoizedPromiseFunction","_len2","_key2","promisifiedFunction","logic","__inline_memoize_cache__","called","level","message","newErr","source","assign","loop","prefix","newobj","isArray","every","join","string","g","toUpperCase","defineLazyProp","configurable","isObjectObject","isPlainObject","replacer","fullKey","itemKey","el","child","_loop3","weakmap","arg","_this5","tasks","cleaned","register","task","pop","fn","arr","index","_extends","target","PROTOCOL","MOCK","FILE","ABOUT","IFRAME","POPUP","safeIndexOf","collection","counter","CrossDomainSafeWeakMap","freeze","testWeakMap","testKey","testValue","hasNativeWeakMap","_cleanupClosedWindows","isWindow","isWindowClosed","isSafeToReadWrite","entry","writable","has","weakmap_CrossDomainSafeWeakMap","_inheritsLoose","subClass","superClass","__proto__","isDevice","navigator","mockUserAgent","userAgent","match","getStorage","_util__WEBPACK_IMPORTED_MODULE_0__","_ref","_ref$version","version","_ref$lifetime","lifetime","accessedStorage","STORAGE_KEY","getState","storage","localStorageEnabled","isLocalStorageEnabled","rawStorage","localStorage","getItem","parse","id","setItem","getSession","session","__session__","created","guid","getID","getSessionState","state","getSessionID","awaitFrameLoadPromises","isDocumentReady","Boolean","document","body","readyState","urlEncode","waitForDocumentReady","interval","setInterval","clearInterval","waitForDocumentBody","parseQuery","queryString","params","_queryString$split2","split","pair","decodeURIComponent","extendQuery","originalQuery","props","esm_extends","filter","extendUrl","url","originalUrl","originalHash","query","_url$split","_originalUrl$split","hashString","removeItem","appendChild","container","isElement","element","Element","nodeType","style","ownerDocument","getElementSafe","doc","querySelector","elementReady","PopupOpenError","writeElementToWindow","win","tag","tagName","documentElement","children","removeChild","awaitFrameLoad","frame","addEventListener","linkFrameWindow","contentWindow","awaitFrameWindow","loadedFrame","createElement","styleText","class","className","attributes","_i6","_Object$keys2","setAttribute","styleSheet","cssText","createTextNode","html","open","write","close","location","err2","writeToWindow","innerHTML","iframe","attempts","getElement","frameBorder","allowTransparency","backgroundColor","event","removeEventListener","destroyElement","parentNode","addClass","classList","add","removeClass","remove","isElementClosed","watchElementForClose","onResize","_temp","_ref2","_ref2$width","width","_ref2$height","height","_ref2$interval","_ref2$win","currentWidth","offsetWidth","currentHeight","offsetHeight","observer","check","newWidth","newHeight","ResizeObserver","observe","MutationObserver","childList","subtree","characterData","disconnect","memoized","descriptor","isPerc","test","isPx","toPx","parseInt","toNum","toCSS","getParent","getOpener","getActualDomain","getDomain","isBlankDomain","isActuallySameDomain","isSameDomain","assertSameDomain","getTop","getAllFramesInWindow","isTop","getUserAgent","getAncestor","isAncestor","getDistanceFromTop","getNthParentFromTop","isSameTopWindow","matchDomain","stringifyDomainPattern","getDomainFromUrl","onCloseWindow","normalizeMockUrl","IE_WIN_ACCESS_ERROR","isAboutProtocol","protocol","parent","opener","canReadFromWindow","href","host","domain","mockDomain","desc","getOwnPropertyDescriptor","isAncestorParent","childParent","getParents","getFrames","frames","len","getAllChildFrames","_i3","_getFrames2","_i5","_getAllChildFrames2","childFrame","top","_i7","_getAllChildFrames4","concat","iframeWindows","iframeFrames","allowMock","closed","mockclosed","iframeIndex","contains","isFrameWindowClosed","cleanIframes","actualParent","_i15","_getFrames8","anyMatch","collection1","collection2","_i17","item1","_i19","distance","getNthParent","win1","win2","top1","top2","allFrames1","allFrames2","opener1","opener2","pattern","origin","some","subpattern","callback","maxtime","Infinity","__cross_domain_utils_window_check__","_applyDecoratedDescriptor","decorators","forEach","initializer","reverse","reduce","decorator","MESSAGE_TYPE","REQUEST","RESPONSE","ACK","MESSAGE_NAME","METHOD","HELLO","OPEN_TUNNEL","WINDOW_PROP","POSTROBOT","SERIALIZATION_TYPE","CROSS_DOMAIN_ZALGO_PROMISE","CROSS_DOMAIN_FUNCTION","CROSS_DOMAIN_WINDOW","CONFIG","BRIDGE_TIMEOUT","CHILD_WINDOW_TIMEOUT","ACK_TIMEOUT","ACK_TIMEOUT_KNOWN","RES_TIMEOUT","ALLOWED_POST_MESSAGE_METHODS","_ALLOWED_POST_MESSAGE","winStore","windowStore","getObj","defStore","getStore","defVal","store","del","globalStore","storeKey","instanceID","helloPromises","getHelloPromise","listenForHello","on","sayHello","send","data","getWindowInstanceID","_ref3","knownWindows","markWindowKnown","TYPE","ERROR","PROMISE","REGEX","DATE","NULL","UNDEFINED","isSerializedType","__type__","determineType","serializeType","type","__val__","SERIALIZER","_SERIALIZER","code","toJSON","defaultSerializers","DESERIALIZER","_DESERIALIZER","RegExp","defaultDeserializers","winToProxyWindow","idToProxyWindow","cleanupProxyWindows","_idToProxyWindow$keys2","shouldClean","ProxyWindow","serializedWindow","actualWindow","isProxyWindow","actualWindowPromise","setWindow","getInstanceID","getType","isPopup","isIframe","setLocation","setName","frameElement","focus","isClosed","matchWindow","_this6","unwrap","awaitWindow","serialize","toProxyWindow","deserialize","methodStore","proxyWindowMethods","addMethod","lookupMethod","listeningForFunctions","listenForFunctionCalls","meth","methodSource","serializeFunction","destination","__id__","__name__","serializeMessage","_serialize","serializers","serializer","deserializeMessage","_deserialize","deserializers","deserializer","serializedPromise","serializedFunction","crossDomainFunctionWrapper","getDeserializedFunction","opts","_arguments","fireAndForget","__origin__","__source__","SEND_MESSAGE_STRATEGIES","sendMessage","_serializeMessage","serializedMessage","messages","strategyName","success","status","dom","postMessage","foreignGlobal","receiveMessage","responseListeners","requestListeners","erroredResponseListeners","WINDOW_WILDCARD","__DOMAIN_REGEX__","getResponseListener","deleteResponseListener","isResponseListenerErrored","getRequestListener","winQualifier","nameListeners","domainListeners","_i4","_domainListeners$__DO2","_domainListeners$__DO3","regex","listener","RECEIVE_MESSAGE_TYPES","_RECEIVE_MESSAGE_TYPE","sendResponse","ack","response","pathname","handleError","respond","receivedMessages","parsedMessage","parseMessage","messageListener","messageEvent","sourceElement","originalEvent","requestPromises","request","targetWindow","getElementById","HTMLIFrameElement","hasResult","reqPromises","requestPromise","awaitWindowHello","_temp2","actualDomain","responseListener","totalAckTimeout","totalResTimeout","ackTimeout","resTimeout","cycleTime","cycle","max","min","sendToParent","client","listen","listenerOptions","errorHandler","requestListener","addRequestListener","_ref4","listenersCollection","_win2","_i8","_i10","_domain2","_i12","existingListener","regexListeners","regexListener","strDomain","onceFunction","errorOnClose","onceListener","disable","cleanUpWindow","_requestPromises$get2","bridge","initialized","openTunnelToOpener","initHello","INTERFACE","globalFor","localGlobal","parseChildWindowName","_window$name$split","zoidcomp","encodedPayload","isZoidComponentWindow","getProxyElement","resize","normalizeChildProp","component","helpers","prop","getPropDefinition","onPropsChange","childDecorate","ChildComponent","_class","parentComponentWindow","onPropHandlers","autoResize","_parseChildWindowName","getWindowByRef","checkParentDomain","initialProps","getPropsByRef","setProps","watchForClose","init","buildExports","watchForResize","getHelpers","allowedParentDomains","ref","ancestor","_getAllFramesInWindow2","windows","getProps","isUpdate","existingProps","normalizedProps","sameDomain","alias","_component$getPropNam2","getPropNames","normalizeChildProps","_this$onPropHandlers2","checkClose","destroy","enableAutoResize","_ref3$width","_ref3$height","_ref3$element","getAutoResize","_ref4$width","_ref4$height","_ref4$element","_this4$getAutoResize","_ref5","updateProps","_ref6","RENDER_DRIVERS","renderedIntoContainer","proxyOutlet","outlet","title","frameWatcher","clean","proxyWin","proxyFrame","openPrerender","proxyElement","prerenderFrame","prerenderFrameWindow","proxyPrerenderWin","proxyPrerenderFrame","switchPrerender","delegate","ParentComponent","parent_class","driver","initPromise","registerActiveComponent","destroyActiveComponent","watchForUnload","render","log","initialDomain","getInitialDomain","checkAllowRender","buildUrl","onRender","getProxyContainer","renderContainer","proxyContainer","buildWindowName","setWindowName","windowName","prerender","onDisplay","openBridge","loadUrl","_ref7","runTimeout","onRendered","containerElement","_ref8","childPayload","buildChildPayload","getPropsRef","getPropsForChild","propRef","_ref9","_ref9$target","getWindowRef","buildParentExports","_ref10","validate","instance","propNames","aliases","propDef","default","_Object$keys4","decorate","normalizeProps","_this$component$getPr2","required","propsDef","builtinProps","queryParam","queryValue","serialization","_Object$keys6","dotkey","getUrl","sendToChild","windowProp","_ref11","_this7","_ref12","_this8","_this9","_this$component$getPr4","propName","allowDelegate","overridesPromise","overrides","_ref13","_this$driver$delegate2","_this10","_this11","closeWindowListener","_this12","unloadWindowListener","_this13","initChild","_this14","_this15","_ref14","_ref15","_this16","_this17","secondClosed","_this18","onClose","_ref16","_this19","_ref17","prerenderWindow","renderTemplate","prerenderTemplate","_ref18","_ref18$width","_ref18$height","_ref18$element","_ref19","renderer","_ref20","_this20","dimensions","_ref21","_this21","innerContainer","containerTemplate","outletWatcher","_this22","_this23","DelegateComponent","watchForSourceClose","getDelegate","getOverrides","closeSourceWindowListener","Node","isElementNode","isTextNode","isFragmentNode","ElementNode","_Node","inheritsLoose","_proto2","getTag","isTag","getText","TextNode","_Node2","text","_proto3","FragmentNode","_Node3","_proto4","normalizeChild","normalizeChildren","normalizedChild","_normalizedChild$chil2","subchild","node","DOM_EVENT","onBlur","onCancel","onClick","onContextMenu","onCopy","onCut","onAuxClick","onDoubleClick","onDragEnd","onDragStart","onDrop","onFocus","onInput","onInvalid","onKeyDown","onKeyPress","onKeyUp","onMouseDown","onMouseUp","onPaste","onPause","onPlay","onPointerCancel","onPointerDown","onPointerUp","onRateChange","onReset","onSeeked","onSubmit","onTouchCancel","onTouchEnd","onTouchStart","onVolumeChange","onAbort","onAnimationEnd","onAnimationIteration","onAnimationStart","onCanPlay","onCanPlayThrough","onDrag","onDragEnter","onDragExit","onDragLeave","onDragOver","onDurationChange","onEmptied","onEncrypted","onEnded","onGotPointerCapture","onLoad","onLoadedData","onLoadedMetadata","onLoadStart","onLostPointerCapture","onMouseMove","onMouseOut","onMouseOver","onPlaying","onPointerMove","onPointerOut","onPointerOver","onProgress","onScroll","onSeeking","onStalled","onSuspend","onTimeUpdate","onToggle","onTouchMove","onTransitionEnd","onWaiting","onWheel","CREATE_ELEMENT","_CREATE_ELEMENT","ADD_CHILDREN","_ADD_CHILDREN","firstChild","docElement","domRenderer","_ref9$doc","addProps","ELEMENT_PROP","_el$querySelectorAll2","querySelectorAll","script","newScript","textContent","replaceChild","fixScripts","addChildren","defaultContainerTemplate","_ref$dimensions","defaultPrerenderTemplate","drivers","require","Component","component_temp","_class2","bridgeUrl","defaultContext","driverCache","xprops","logger","PROP_TYPE_LIST","validatePropDefinitions","components","onChange","_ref$width","_ref$height","popup","debug","info","warn","registerChild","listenDelegate","dep","isChild","_ref2$data","canRenderTo","getBridgeUrl","getDefaultContainer","getDefaultContext","renderTo","payload","activeComponents","destroyAll","destroyBridges","component_class","src","component_destroyAll","component_Component","constants","react","React","ReactDOM","_React$Component","componentDidMount","findDOMNode","setState","componentDidUpdate","vue","Vue","inheritAttrs","mounted","$el","$attrs","watch","deep","angular","ng","directive","scope","restrict","controller","$scope","$element","$root","$$phase","$apply","safeApply","$watch","angular2","zoid","AngularComponent","NgModule","ElementRef","NgZone","internalProps","zone","run","ComponentInstance","selector","template","inputs","Class","elementRef","_props","ngOnInit","targetElement","nativeElement","ngDoCheck","obj1","obj2","checked","equals","declarations"],"mappings":"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","file":"zoid.frameworks.min.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"zoid\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"zoid\"] = factory();\n\telse\n\t\troot[\"zoid\"] = factory();\n})((typeof self !== 'undefined' ? self : this), function() {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 21);\n","/* @flow */\n\nexport * from './device';\nexport * from './dom';\nexport * from './experiment';\nexport * from './global';\nexport * from './storage';\nexport * from './util';\nexport * from './http';\nexport * from './types';\nexport * from './decorators';\nexport * from './css';\nexport * from './test';\n","/* @flow */\n\nexport function isPromise(item : mixed) : boolean {\n    try {\n        if (!item) {\n            return false;\n        }\n\n        if (typeof Promise !== 'undefined' && item instanceof Promise) {\n            return true;\n        }\n\n        if (typeof window !== 'undefined' && window.Window && item instanceof window.Window) {\n            return false;\n        }\n\n        if (typeof window !== 'undefined' && window.constructor && item instanceof window.constructor) {\n            return false;\n        }\n\n        let toString = ({}).toString;\n\n        if (toString) {\n            let name = toString.call(item);\n\n            if (name === '[object Window]' || name === '[object global]' || name === '[object DOMWindow]') {\n                return false;\n            }\n        }\n\n        if (typeof item.then === 'function') {\n            return true;\n        }\n    } catch (err) {\n        return false;\n    }\n\n    return false;\n}\n","/* @flow */\n\nimport type { ZalgoPromise } from './promise';\n\ntype ZalgoGlobalType = {\n    flushPromises : Array<ZalgoPromise<mixed>>,\n    activeCount : number,\n    possiblyUnhandledPromiseHandlers : Array<<T>(mixed, ZalgoPromise<T>) => void>, // eslint-disable-line no-undef\n    dispatchedErrors : Array<mixed>\n};\n\nexport function getGlobal() : ZalgoGlobalType {\n\n    let glob;\n\n    if (typeof window !== 'undefined') {\n        glob = window;\n    } else if (typeof global !== 'undefined') {\n        glob = global;\n    } else {\n        throw new TypeError(`Can not find global`);\n    }\n\n    let zalgoGlobal = glob.__zalgopromise__ = glob.__zalgopromise__ || {};\n    zalgoGlobal.flushPromises = zalgoGlobal.flushPromises || [];\n    zalgoGlobal.activeCount = zalgoGlobal.activeCount || 0;\n    zalgoGlobal.possiblyUnhandledPromiseHandlers = zalgoGlobal.possiblyUnhandledPromiseHandlers || [];\n    zalgoGlobal.dispatchedErrors = zalgoGlobal.dispatchedErrors || [];\n\n    return zalgoGlobal;\n}\n","/* @flow */\n\nimport { isPromise } from './utils';\nimport { onPossiblyUnhandledException, dispatchPossiblyUnhandledError } from './exceptions';\nimport { getGlobal } from './global';\n\nexport class ZalgoPromise<R : mixed> {\n\n    resolved : boolean\n    rejected : boolean\n    errorHandled : boolean\n    value : R\n    error : mixed\n    handlers : Array<{\n        promise : ZalgoPromise<*>,\n        onSuccess : void | (result : R) => mixed,\n        onError : void | (error : mixed) => mixed\n    }>\n    dispatching : boolean\n    stack : string\n\n    constructor(handler : ?(resolve : (result : R) => void, reject : (error : mixed) => void) => void) {\n\n        this.resolved = false;\n        this.rejected = false;\n        this.errorHandled = false;\n\n        this.handlers = [];\n\n        if (handler) {\n\n            let result;\n            let error;\n            let resolved = false;\n            let rejected = false;\n            let isAsync = false;\n\n            try {\n                handler(res => {\n                    if (isAsync) {\n                        this.resolve(res);\n                    } else {\n                        resolved = true;\n                        result = res;\n                    }\n\n                }, err => {\n                    if (isAsync) {\n                        this.reject(err);\n                    } else {\n                        rejected = true;\n                        error = err;\n                    }\n                });\n\n            } catch (err) {\n                this.reject(err);\n                return;\n            }\n\n            isAsync = true;\n\n            if (resolved) {\n                // $FlowFixMe\n                this.resolve(result);\n            } else if (rejected) {\n                this.reject(error);\n            }\n        }\n\n        if (__DEBUG__) {\n            try {\n                throw new Error(`ZalgoPromise`);\n            } catch (err) {\n                this.stack = err.stack;\n            }\n        }\n    }\n\n    resolve(result : R) : ZalgoPromise<R> {\n        if (this.resolved || this.rejected) {\n            return this;\n        }\n\n        if (isPromise(result)) {\n            throw new Error('Can not resolve promise with another promise');\n        }\n\n        this.resolved = true;\n        this.value = result;\n        this.dispatch();\n\n        return this;\n    }\n\n    reject(error : mixed) : ZalgoPromise<R> {\n        if (this.resolved || this.rejected) {\n            return this;\n        }\n\n        if (isPromise(error)) {\n            throw new Error('Can not reject promise with another promise');\n        }\n\n        if (!error) {\n            let err = (error && typeof error.toString === 'function' ? error.toString() : Object.prototype.toString.call(error));\n            error = new Error(`Expected reject to be called with Error, got ${ err }`);\n        }\n\n        this.rejected = true;\n        this.error = error;\n\n        if (!this.errorHandled) {\n            setTimeout(() => {\n                if (!this.errorHandled) {\n                    dispatchPossiblyUnhandledError(error, this);\n                }\n            }, 1);\n        }\n\n        this.dispatch();\n\n        return this;\n    }\n\n    asyncReject(error : mixed) : ZalgoPromise<R> {\n        this.errorHandled = true;\n        this.reject(error);\n        return this;\n    }\n\n    // eslint-disable-next-line complexity\n    dispatch() {\n\n        let { dispatching, resolved, rejected, handlers } = this;\n\n        if (dispatching) {\n            return;\n        }\n\n        if (!resolved && !rejected) {\n            return;\n        }\n\n        this.dispatching = true;\n        getGlobal().activeCount += 1;\n\n        for (let i = 0; i < handlers.length; i++) {\n\n            let { onSuccess, onError, promise } = handlers[i];\n\n            let result;\n\n            if (resolved) {\n\n                try {\n                    result = onSuccess ? onSuccess(this.value) : this.value;\n                } catch (err) {\n                    promise.reject(err);\n                    continue;\n                }\n\n            } else if (rejected) {\n\n                if (!onError) {\n                    promise.reject(this.error);\n                    continue;\n                }\n\n                try {\n                    result = onError(this.error);\n                } catch (err) {\n                    promise.reject(err);\n                    continue;\n                }\n            }\n\n            if (result instanceof ZalgoPromise && (result.resolved || result.rejected)) {\n\n                if (result.resolved) {\n                    promise.resolve(result.value);\n                } else {\n                    promise.reject(result.error);\n                }\n\n                result.errorHandled = true;\n\n            } else if (isPromise(result)) {\n\n                if (result instanceof ZalgoPromise && (result.resolved || result.rejected)) {\n                    if (result.resolved) {\n                        promise.resolve(result.value);\n                    } else {\n                        promise.reject(result.error);\n                    }\n\n                } else {\n                    // $FlowFixMe\n                    result.then(res => {\n                        promise.resolve(res);\n                    }, err => {\n                        promise.reject(err);\n                    });\n                }\n\n            } else {\n\n                promise.resolve(result);\n            }\n        }\n\n        handlers.length = 0;\n        this.dispatching = false;\n        getGlobal().activeCount -= 1;\n\n        if (getGlobal().activeCount === 0) {\n            ZalgoPromise.flushQueue();\n        }\n    }\n\n    then<X : mixed, Y : mixed>(onSuccess : void | (result : R) => (ZalgoPromise<X> | Y), onError : void | (error : mixed) => (ZalgoPromise<X> | Y)) : ZalgoPromise<X | Y> {\n\n        if (onSuccess && typeof onSuccess !== 'function' && !onSuccess.call) {\n            throw new Error('Promise.then expected a function for success handler');\n        }\n\n        if (onError && typeof onError !== 'function' && !onError.call) {\n            throw new Error('Promise.then expected a function for error handler');\n        }\n\n        let promise : ZalgoPromise<X | Y> = new ZalgoPromise();\n\n        this.handlers.push({\n            promise,\n            onSuccess,\n            onError\n        });\n\n        this.errorHandled = true;\n\n        this.dispatch();\n\n        return promise;\n    }\n\n    catch<X : mixed, Y : mixed>(onError : (error : mixed) => ZalgoPromise<X> | Y) : ZalgoPromise<X | Y> {\n        return this.then(undefined, onError);\n    }\n\n    finally(onFinally : () => mixed) : ZalgoPromise<R> {\n\n        if (onFinally && typeof onFinally !== 'function' && !onFinally.call) {\n            throw new Error('Promise.finally expected a function');\n        }\n\n        return this.then((result) => {\n            return ZalgoPromise.try(onFinally)\n                .then(() => {\n                    return result;\n                });\n        }, (err) => {\n            return ZalgoPromise.try(onFinally)\n                .then(() => {\n                    throw err;\n                });\n        });\n    }\n\n    timeout(time : number, err : ?Error) : ZalgoPromise<R> {\n\n        if (this.resolved || this.rejected) {\n            return this;\n        }\n\n        let timeout = setTimeout(() => {\n\n            if (this.resolved || this.rejected) {\n                return;\n            }\n\n            this.reject(err || new Error(`Promise timed out after ${ time }ms`));\n\n        }, time);\n\n        return this.then(result => {\n            clearTimeout(timeout);\n            return result;\n        });\n    }\n\n    // $FlowFixMe\n    toPromise() : Promise<R> {\n        // $FlowFixMe\n        if (typeof Promise === 'undefined') {\n            throw new TypeError(`Could not find Promise`);\n        }\n        // $FlowFixMe\n        return Promise.resolve(this); // eslint-disable-line compat/compat\n    }\n\n    static resolve<X : mixed>(value : X | ZalgoPromise<X>) : ZalgoPromise<X> {\n\n        if (value instanceof ZalgoPromise) {\n            return value;\n        }\n\n        if (isPromise(value)) {\n            // $FlowFixMe\n            return new ZalgoPromise((resolve, reject) => value.then(resolve, reject));\n        }\n\n        return new ZalgoPromise().resolve(value);\n    }\n\n    static reject(error : mixed) : ZalgoPromise<R> {\n        return new ZalgoPromise().reject(error);\n    }\n\n    static asyncReject(error : mixed) : ZalgoPromise<R> {\n        return new ZalgoPromise().asyncReject(error);\n    }\n\n    static all<X : [*] | [*, *] | [*, *, *] | [*, *, *, *] | [*, *, *, *, *] | [*, *, *, *, *, *] | [*, *, *, *, *, *, *] | [*, *, *, *, *, *, *, *] | [*, *, *, *, *, *, *, *, *] | Array<mixed>>(promises : X) : ZalgoPromise<$TupleMap<X, <Y>(ZalgoPromise<Y> | Y) => Y>> { // eslint-disable-line no-undef\n\n        let promise = new ZalgoPromise();\n        let count = promises.length;\n        let results = [];\n\n        if (!count) {\n            promise.resolve(results);\n            return promise;\n        }\n\n        for (let i = 0; i < promises.length; i++) {\n            let prom = promises[i];\n\n            if (prom instanceof ZalgoPromise) {\n                if (prom.resolved) {\n                    results[i] = prom.value;\n                    count -= 1;\n                    continue;\n                }\n            } else if (!isPromise(prom)) {\n                results[i] = prom;\n                count -= 1;\n                continue;\n            }\n\n            ZalgoPromise.resolve(prom).then(result => {\n                results[i] = result;\n                count -= 1;\n                if (count === 0) {\n                    promise.resolve(results);\n                }\n            }, err => {\n                promise.reject(err);\n            });\n        }\n\n        if (count === 0) {\n            promise.resolve(results);\n        }\n\n        return promise;\n    }\n\n    static hash<O : { [string] : * }>(promises : O) : ZalgoPromise<$ObjMap<O, <Y>(ZalgoPromise<Y> | Y) => Y>> { // eslint-disable-line no-undef\n        let result = {};\n        \n        return ZalgoPromise.all(Object.keys(promises).map(key => {\n            return ZalgoPromise.resolve(promises[key]).then(value => {\n                result[key] = value;\n            });\n        })).then(() => {\n            return result;\n        });\n    }\n\n    static map<T, X>(items : Array<T>, method : (T) => (ZalgoPromise<X> | X)) : ZalgoPromise<Array<X>> {\n        // $FlowFixMe\n        return ZalgoPromise.all(items.map(method));\n    }\n\n    static onPossiblyUnhandledException(handler : (err : mixed) => void) : { cancel : () => void } {\n        return onPossiblyUnhandledException(handler);\n    }\n\n    static try<X : mixed, Y : mixed, C : mixed, A : Array<mixed>>(method : (...args : A) => (ZalgoPromise<X> | Y), context : ?C, args : ?A) : ZalgoPromise<X | Y> {\n\n        if (method && typeof method !== 'function' && !method.call) {\n            throw new Error('Promise.try expected a function');\n        }\n\n        let result;\n        \n        try {\n            // $FlowFixMe\n            result = method.apply(context, args || []);\n        } catch (err) {\n            return ZalgoPromise.reject(err);\n        }\n\n        return ZalgoPromise.resolve(result);\n    }\n\n    static delay(delay : number) : ZalgoPromise<void> {\n        return new ZalgoPromise(resolve => {\n            setTimeout(resolve, delay);\n        });\n    }\n\n    static isPromise(value : mixed) : boolean {\n\n        if (value && value instanceof ZalgoPromise) {\n            return true;\n        }\n\n        return isPromise(value);\n    }\n\n    static flush() : ZalgoPromise<void> {\n        let promise = new ZalgoPromise();\n        getGlobal().flushPromises.push(promise);\n\n        if (getGlobal().activeCount === 0) {\n            ZalgoPromise.flushQueue();\n        }\n\n        return promise;\n    }\n\n    static flushQueue() {\n        let promisesToFlush = getGlobal().flushPromises;\n        getGlobal().flushPromises = [];\n\n        for (let promise of promisesToFlush) {\n            promise.resolve();\n        }\n    }\n}\n","/* @flow */\n\nimport { getGlobal } from './global';\nimport type { ZalgoPromise } from './promise';\n\nexport function dispatchPossiblyUnhandledError<T>(err : mixed, promise : ZalgoPromise<T>) {\n\n    if (getGlobal().dispatchedErrors.indexOf(err) !== -1) {\n        return;\n    }\n\n    getGlobal().dispatchedErrors.push(err);\n\n    setTimeout(() => {\n        if (__DEBUG__) {\n            // $FlowFixMe\n            throw new Error(`${ err.stack || err.toString() }\\n\\nFrom promise:\\n\\n${ promise.stack }`);\n        }\n\n        throw err;\n    }, 1);\n\n    for (let j = 0; j < getGlobal().possiblyUnhandledPromiseHandlers.length; j++) {\n        getGlobal().possiblyUnhandledPromiseHandlers[j](err, promise);\n    }\n}\n\nexport function onPossiblyUnhandledException(handler : (mixed) => void) : { cancel : () => void } {\n    getGlobal().possiblyUnhandledPromiseHandlers.push(handler);\n\n    return {\n        cancel() {\n            getGlobal().possiblyUnhandledPromiseHandlers.splice(getGlobal().possiblyUnhandledPromiseHandlers.indexOf(handler), 1);\n        }\n    };\n}\n","/* @flow */\n\nexport { ZalgoPromise } from './promise';\n","/* @flow */\n\nexport * from './utils';\nexport * from './types';\nexport * from './constants';\n","/* @flow */\n\nimport { WINDOW_TYPE } from 'cross-domain-utils/src';\n\nexport const ZOID = `zoid`;\n\nexport const __ZOID__ = `__${ ZOID }__`;\n\nexport const POST_MESSAGE = {\n    DELEGATE:       `${ ZOID }_delegate`,\n    ALLOW_DELEGATE: `${ ZOID }_allow_delegate`\n};\n\nexport const PROP_TYPE = {\n    STRING:   `string`,\n    OBJECT:   `object`,\n    FUNCTION: `function`,\n    BOOLEAN:  `boolean`,\n    NUMBER:   `number`,\n    ARRAY:    `array`\n};\n\nexport const INITIAL_PROPS = {\n    RAW: 'raw',\n    UID: 'uid'\n};\n\nexport const WINDOW_REFERENCES = {\n    OPENER: `opener`,\n    TOP:    `top`,\n    PARENT: `parent`,\n    GLOBAL: `global`\n};\n\nexport const PROP_SERIALIZATION = {\n    JSON:   ('json' : 'json'),\n    DOTIFY: ('dotify' : 'dotify'),\n    BASE64: ('base64' : 'base64')\n};\n\nexport const CONTEXT = WINDOW_TYPE;\n\nexport const CLASS = {\n    OUTLET:            `${ ZOID }-outlet`,\n    COMPONENT_FRAME:   `${ ZOID }-component-frame`,\n    PRERENDER_FRAME:   `${ ZOID }-prerender-frame`,\n    VISIBLE:           `${ ZOID }-visible`,\n    INVISIBLE:         `${ ZOID }-invisible`\n};\n\nexport const WILDCARD = '*';\n\nexport const DEFAULT_DIMENSIONS = {\n    WIDTH:  '300px',\n    HEIGHT: '150px'\n};\n","/* @flow */\n/* eslint max-lines: 0 */\n\nimport { ZalgoPromise } from 'zalgo-promise/src';\nimport { WeakMap } from 'cross-domain-safe-weakmap/src';\n\nimport type { CancelableType } from './types';\n\nexport function base64encode(str : string) : string {\n    if (typeof btoa === 'function') {\n        return btoa(str);\n    } else if (typeof Buffer !== 'undefined') {\n        return Buffer.from(str, 'utf8').toString('base64');\n    }\n\n    throw new Error(`Can not find window.btoa or Buffer`);\n}\n\nexport function base64decode(str : string) : string {\n    if (typeof window !== 'undefined' && typeof window.atob === 'function') {\n        return window.atob(str);\n    }\n\n    if (typeof Buffer !== 'undefined') {\n        return Buffer.from(str, 'base64').toString('utf8');\n    }\n\n    throw new Error(`Can not find window.atob or Buffer`);\n}\n\nexport function uniqueID() : string {\n\n    let chars = '0123456789abcdef';\n\n    let randomID = 'xxxxxxxxxx'.replace(/./g, () => {\n        return chars.charAt(Math.floor(Math.random() * chars.length));\n    });\n\n    let timeID = base64encode(\n        new Date().toISOString().slice(11, 19).replace('T', '.')\n    ).replace(/[^a-zA-Z0-9]/g, '').toLowerCase();\n\n    return `${ randomID }_${ timeID }`;\n}\n\nexport function getGlobal() : Object {\n    if (typeof window !== 'undefined') {\n        return window;\n    }\n    if (typeof global !== 'undefined') {\n        return global;\n    }\n    if (typeof __GLOBAL__ !== 'undefined') {\n        return __GLOBAL__;\n    }\n    throw new Error(`No global found`);\n}\n\nlet objectIDs;\n\nexport function getObjectID(obj : Object) : string {\n\n    objectIDs = objectIDs || new WeakMap();\n\n    if (obj === null || obj === undefined || (typeof obj !== 'object' && typeof obj !== 'function')) {\n        throw new Error(`Invalid object`);\n    }\n\n    let uid = objectIDs.get(obj);\n\n    if (!uid) {\n        uid = `${ typeof obj }:${ uniqueID() }`;\n        objectIDs.set(obj, uid);\n    }\n\n    return uid;\n}\n\nfunction serializeArgs(args : Array<mixed>) : string {\n    try {\n        return JSON.stringify(Array.prototype.slice.call(args), (subkey, val) => {\n            if (typeof val === 'function') {\n                return `memoize[${ getObjectID(val) }]`;\n            }\n            return val;\n        });\n    } catch (err) {\n        throw new Error(`Arguments not serializable -- can not be used to memoize`);\n    }\n}\n\n// eslint-disable-next-line flowtype/no-weak-types\nexport function memoize<R>(method : (...args : Array<any>) => R, options : { time? : number, name? : string, thisNamespace? : boolean } = {}) : ((...args : Array<any>) => R) {\n    let cacheMap = new WeakMap();\n\n    // eslint-disable-next-line flowtype/no-weak-types\n    function memoizedFunction(...args : Array<any>) : R {\n        let cache = cacheMap.getOrSet(options.thisNamespace ? this : method, () => ({}));\n\n        let key : string = serializeArgs(args);\n\n        let cacheTime = options.time;\n        if (cache[key] && cacheTime && (Date.now() - cache[key].time) < cacheTime) {\n            delete cache[key];\n        }\n\n        if (cache[key]) {\n            return cache[key].value;\n        }\n\n        let time  = Date.now();\n        let value = method.apply(this, arguments);\n\n        cache[key] = { time, value };\n\n        return cache[key].value;\n    }\n\n    memoizedFunction.reset = () => {\n        cacheMap.delete(options.thisNamespace ? this : method);\n    };\n\n    if (options.name) {\n        memoizedFunction.displayName = `${ options.name }:memoized`;\n    }\n\n    return memoizedFunction;\n}\n\n// eslint-disable-next-line flowtype/no-weak-types\nexport function memoizePromise<R>(method : (...args : Array<any>) => ZalgoPromise<R>) : ((...args : Array<any>) => ZalgoPromise<R>) {\n    let cache = {};\n\n    // eslint-disable-next-line flowtype/no-weak-types\n    function memoizedPromiseFunction(...args : Array<any>) : ZalgoPromise<R> {\n        let key : string = serializeArgs(args);\n\n        if (cache.hasOwnProperty(key)) {\n            return cache[key];\n        }\n\n        cache[key] = method.apply(this, arguments)\n            .finally(() => {\n                delete cache[key];\n            });\n\n        return cache[key];\n    }\n\n    memoizedPromiseFunction.reset = () => {\n        cache = {};\n    };\n\n    return memoizedPromiseFunction;\n}\n\n// eslint-disable-next-line flowtype/no-weak-types\nexport function promisify<R>(method : (...args : Array<any>) => R, options : { name? : string } = {}) : ((...args : Array<any>) => ZalgoPromise<R>) {\n    function promisifiedFunction() : ZalgoPromise<R> {\n        return ZalgoPromise.try(method, this, arguments);\n    }\n\n    if (options.name) {\n        promisifiedFunction.displayName = `${ options.name }:promisified`;\n    }\n\n    return promisifiedFunction;\n}\n\n// eslint-disable-next-line flowtype/no-weak-types\nexport function inlineMemoize<R>(method : (...args : Array<any>) => R, logic : (...args : Array<any>) => R, args : Array<any> = []) : R {\n    let cache = method.__inline_memoize_cache__ = method.__inline_memoize_cache__ || {};\n    let key = serializeArgs(args);\n\n    if (cache.hasOwnProperty(key)) {\n        return cache[key];\n    }\n    \n    let result = cache[key] = logic(...args);\n    return result;\n}\n\n// eslint-disable-next-line no-unused-vars\nexport function noop(...args : Array<mixed>) {\n    // pass\n}\n\nexport function once(method : Function) : Function {\n    let called = false;\n\n    return function onceFunction() : mixed {\n        if (!called) {\n            called = true;\n            return method.apply(this, arguments);\n        }\n    };\n}\n\nexport function hashStr(str : string) : number {\n    let hash = 0;\n    for (let i = 0; i < str.length; i++) {\n        hash += str[i].charCodeAt(0) * Math.pow((i % 10) + 1, 5);\n    }\n    return Math.floor(Math.pow(Math.sqrt(hash), 5));\n}\n\nexport function strHashStr(str : string) : string {\n    let hash = '';\n\n    for (let i = 0; i < str.length; i++) {\n        let total = (str[i].charCodeAt(0) * i);\n\n        if (str[i + 1]) {\n            total += (str[i + 1].charCodeAt(0) * (i - 1));\n        }\n\n        hash += String.fromCharCode(97 + (Math.abs(total) % 26));\n    }\n\n    return hash;\n}\n\nexport function match(str : string, pattern : RegExp) : ?string {\n    let regmatch = str.match(pattern);\n    if (regmatch) {\n        return regmatch[1];\n    }\n}\n\nexport function awaitKey<T: mixed>(obj : Object, key : string) : ZalgoPromise<T> {\n    return new ZalgoPromise(resolve => {\n\n        let value = obj[key];\n\n        if (value) {\n            return resolve(value);\n        }\n\n        delete obj[key];\n\n        Object.defineProperty(obj, key, {\n\n            configurable: true,\n\n            set(item) {\n                value = item;\n\n                if (value) {\n                    resolve(value);\n                }\n            },\n\n            get() : mixed {\n                return value;\n            }\n        });\n    });\n}\n\nexport function stringifyError(err : mixed, level : number = 1) : string {\n\n    if (level >= 3) {\n        return 'stringifyError stack overflow';\n    }\n\n    try {\n        if (!err) {\n            return `<unknown error: ${ Object.prototype.toString.call(err) }>`;\n        }\n\n        if (typeof err === 'string') {\n            return err;\n        }\n\n        if (err instanceof Error) {\n            let stack = err && err.stack;\n            let message = err && err.message;\n\n            if (stack && message) {\n                if (stack.indexOf(message) !== -1) {\n                    return stack;\n                } else {\n                    return `${ message }\\n${ stack }`;\n                }\n            } else if (stack) {\n                return stack;\n            } else if (message) {\n                return message;\n            }\n        }\n\n        if (typeof err.toString === 'function') {\n            return err.toString();\n        }\n\n        return Object.prototype.toString.call(err);\n\n    } catch (newErr) { // eslint-disable-line unicorn/catch-error-name\n        return `Error while stringifying error: ${ stringifyError(newErr, level + 1) }`;\n    }\n}\n\nexport function stringifyErrorMessage(err : mixed) : string {\n\n    let defaultMessage = `<unknown error: ${ Object.prototype.toString.call(err) }>`;\n\n    if (!err) {\n        return defaultMessage;\n    }\n\n    if (err instanceof Error) {\n        return err.message || defaultMessage;\n    }\n\n    if (typeof err.message === 'string') {\n        return err.message || defaultMessage;\n    }\n\n    return defaultMessage;\n}\n\nexport function stringify(item : mixed) : string {\n    if (typeof item === 'string') {\n        return item;\n    }\n\n    if (item && typeof item.toString === 'function') {\n        return item.toString();\n    }\n\n    return Object.prototype.toString.call(item);\n}\n\nexport function domainMatches(hostname : string, domain : string) : boolean {\n    hostname = hostname.split('://')[1];\n    let index = hostname.indexOf(domain);\n    return (index !== -1 && hostname.slice(index) === domain);\n}\n\nexport function patchMethod(obj : Object, name : string, handler : Function) {\n    let original = obj[name];\n\n    obj[name] = function patchedMethod() : mixed {\n        return handler({\n            context:      this,\n            args:         Array.prototype.slice.call(arguments),\n            original,\n            callOriginal: () => original.apply(this, arguments)\n        });\n    };\n}\n\nexport function extend<T : Object | Function>(obj : T, source : Object) : T {\n    if (!source) {\n        return obj;\n    }\n\n    if (Object.assign) {\n        return Object.assign(obj, source);\n    }\n\n    for (let key in source) {\n        if (source.hasOwnProperty(key)) {\n            obj[key] = source[key];\n        }\n    }\n\n    return obj;\n}\n\nexport function values<T>(obj : { [string] : T }) : Array<T> {\n    let result = [];\n    for (let key in obj) {\n        if (obj.hasOwnProperty(key)) {\n            result.push(obj[key]);\n        }\n    }\n    return result;\n}\n\nexport function perc(pixels : number, percentage : number) : number {\n    return Math.round((pixels * percentage) / 100);\n}\n\nexport function min(...args : Array<number>) : number {\n    return Math.min(...args);\n}\n\nexport function max(...args : Array<number>) : number {\n    return Math.max(...args);\n}\n\nexport function regexMap<T>(str : string, regexp : RegExp, handler : () => T) : Array<T> {\n    let results = [];\n\n    // $FlowFixMe\n    str.replace(regexp, function regexMapMatcher(item) {\n        results.push(handler ? handler.apply(null, arguments) : item);\n    });\n\n    // $FlowFixMe\n    return results;\n}\n\nexport function svgToBase64(svg : string) : string {\n    return `data:image/svg+xml;base64,${ base64encode(svg) }`;\n}\n\nexport function objFilter<T, R>(obj : { [string] : T }, filter? : (T, ?string) => mixed = Boolean) : { [string] : R } {\n    let result = {};\n\n    for (let key in obj) {\n        if (!obj.hasOwnProperty(key) || !filter(obj[key], key)) {\n            continue;\n        }\n\n        result[key] = obj[key];\n    }\n\n    return result;\n}\n\nexport function identity <T>(item : T) : T {\n    return item;\n}\n\nexport function regexTokenize(text : string, regexp : RegExp) : Array<string> {\n    let result = [];\n    text.replace(regexp, token => {\n        result.push(token);\n        return '';\n    });\n    return result;\n}\n\nexport function promiseDebounce<T>(method : () => ZalgoPromise<T> | T, delay : number = 50) : () => ZalgoPromise<T> {\n\n    let promise;\n    let timeout;\n\n    return function promiseDebouncedMethod() : ZalgoPromise<T> {\n        if (timeout) {\n            clearTimeout(timeout);\n        }\n\n        let localPromise = promise = promise || new ZalgoPromise();\n\n        timeout = setTimeout(() => {\n            promise = null;\n            timeout = null;\n\n            ZalgoPromise.try(method).then(\n                result => { localPromise.resolve(result); },\n                err => { localPromise.reject(err); }\n            );\n        }, delay);\n\n        return localPromise;\n    };\n}\n\nexport function safeInterval(method : Function, time : number) : { cancel : () => void } {\n\n    let timeout;\n\n    function loop() {\n        timeout = setTimeout(() => {\n            method();\n            loop();\n        }, time);\n    }\n\n    loop();\n\n    return {\n        cancel() {\n            clearTimeout(timeout);\n        }\n    };\n}\n\nexport function isInteger(str : string) : boolean {\n    return Boolean(str.match(/^[0-9]+$/));\n}\n\nexport function isFloat(str : string) : boolean {\n    return Boolean(str.match(/^[0-9]+\\.[0-9]+$/));\n}\n\nexport function serializePrimitive(value : string | number | boolean) : string {\n    return value.toString();\n}\n\nexport function deserializePrimitive(value : string) : string | number | boolean {\n    if (value === 'true') {\n        return true;\n    } else if (value === 'false') {\n        return false;\n    } else if (isInteger(value)) {\n        return parseInt(value, 10);\n    } else if (isFloat(value)) {\n        return parseFloat(value);\n    } else {\n        return value;\n    }\n}\n\nexport function dotify(obj : Object, prefix : string = '', newobj : Object = {}) : { [string] : string } {\n    prefix = prefix ? `${ prefix }.` : prefix;\n    for (let key in obj) {\n        if (!obj.hasOwnProperty(key) || obj[key] === undefined || obj[key] === null || typeof obj[key] === 'function') {\n            continue;\n        } else if (obj[key] && Array.isArray(obj[key]) && obj[key].length && obj[key].every(val => typeof val !== 'object')) {\n            newobj[`${ prefix }${ key }[]`] = obj[key].join(',');\n        } else if (obj[key] && typeof obj[key] === 'object') {\n            newobj = dotify(obj[key], `${ prefix }${ key }`, newobj);\n        } else {\n            newobj[`${ prefix }${ key }`] = serializePrimitive(obj[key]);\n        }\n    }\n    return newobj;\n}\n\nexport function undotify(obj : { [string] : string }) : Object {\n    \n    let result = {};\n\n    for (let key in obj) {\n        if (!obj.hasOwnProperty(key) || typeof obj[key] !== 'string') {\n            continue;\n        }\n\n        let value = obj[key];\n\n        if (key.match(/^.+\\[\\]$/)) {\n            key = key.slice(0, key.length - 2);\n            value = value.split(',').map(deserializePrimitive);\n        } else {\n            value = deserializePrimitive(value);\n        }\n\n        let keyResult = result;\n        let parts = key.split('.');\n        for (let i = 0; i < parts.length; i++) {\n            let part = parts[i];\n            let isLast = (i + 1 === parts.length);\n            let isIndex = !isLast && isInteger(parts[i + 1]);\n\n            if (isLast) {\n                // $FlowFixMe\n                keyResult[part] = value;\n            } else {\n                // $FlowFixMe\n                keyResult = keyResult[part] = keyResult[part] || (isIndex ? [] : {});\n            }\n        }\n    }\n\n    return result;\n}\n\nexport type EventEmitterType = {\n    on : (eventName : string, handler : Function) => CancelableType,\n    once : (eventName : string, handler : Function) => CancelableType,\n    trigger : (eventName : string, ...args : $ReadOnlyArray<mixed>) => ZalgoPromise<void>,\n    triggerOnce : (eventName : string, ...args : $ReadOnlyArray<mixed>) => ZalgoPromise<void>\n};\n\nexport function eventEmitter() : EventEmitterType {\n    let triggered = {};\n    let handlers = {};\n\n    return {\n\n        on(eventName : string, handler : Function) : CancelableType {\n            let handlerList = handlers[eventName] = handlers[eventName] || [];\n\n            handlerList.push(handler);\n\n            let cancelled = false;\n\n            return {\n                cancel() {\n                    if (!cancelled) {\n                        cancelled = true;\n                        handlerList.splice(handlerList.indexOf(handler), 1);\n                    }\n\n                }\n            };\n        },\n\n        once(eventName : string, handler : Function) : CancelableType {\n\n            let listener = this.on(eventName, () => {\n                listener.cancel();\n                handler();\n            });\n\n            return listener;\n        },\n\n        trigger(eventName : string, ...args : $ReadOnlyArray<mixed>) : ZalgoPromise<void> {\n\n            let handlerList = handlers[eventName];\n            let promises = [];\n\n            if (handlerList) {\n                for (let handler of handlerList) {\n                    promises.push(ZalgoPromise.try(() => handler(...args)));\n                }\n            }\n\n            return ZalgoPromise.all(promises).then(noop);\n        },\n\n        triggerOnce(eventName : string, ...args : $ReadOnlyArray<mixed>) : ZalgoPromise<void> {\n\n            if (triggered[eventName]) {\n                return ZalgoPromise.resolve();\n            }\n\n            triggered[eventName] = true;\n            return this.trigger(eventName, ...args);\n        }\n    };\n}\n\nexport function camelToDasherize(string : string) : string {\n    return string.replace(/([A-Z])/g, (g) => {\n        return `-${ g.toLowerCase() }`;\n    });\n}\n\nexport function dasherizeToCamel(string : string) : string {\n    return string.replace(/-([a-z])/g, (g) => {\n        return g[1].toUpperCase();\n    });\n}\n\nexport function capitalizeFirstLetter(string : string) : string {\n    return string.charAt(0).toUpperCase() + string.slice(1).toLowerCase();\n}\n\nexport function get(item : Object, path : string, def : mixed) : mixed {\n\n    if (!path) {\n        return def;\n    }\n\n    let pathParts = path.split('.');\n\n    // Loop through each section of our key path\n\n    for (let i = 0; i < pathParts.length; i++) {\n\n        // If we have an object, we can get the key\n        if (typeof item === 'object' && item !== null) {\n            item = item[pathParts[i]];\n\n        // Otherwise, we should return the default (undefined if not provided)\n        } else {\n            return def;\n        }\n    }\n\n    // If our final result is undefined, we should return the default\n\n    return item === undefined ? def : item;\n}\n\nexport function safeTimeout(method : Function, time : number) {\n\n    let interval = safeInterval(() => {\n        time -= 100;\n        if (time <= 0) {\n            interval.cancel();\n            method();\n        }\n    }, 100);\n}\n\nexport function defineLazyProp<T>(obj : Object | Array<mixed>, key : string | number, getter : () => T) {\n    if (Array.isArray(obj)) {\n        if (typeof key !== 'number') {\n            throw new TypeError(`Array key must be number`);\n        }\n    } else if (typeof obj === 'object' && obj !== null) {\n        if (typeof key !== 'string') {\n            throw new TypeError(`Object key must be string`);\n        }\n    }\n    \n    Object.defineProperty(obj, key, {\n        configurable: true,\n        enumerable:   true,\n        get:          () => {\n            // $FlowFixMe\n            delete obj[key];\n            let value = getter();\n            // $FlowFixMe\n            obj[key] = value;\n            return value;\n        },\n        set: (value : T) => {\n            // $FlowFixMe\n            delete obj[key];\n            // $FlowFixMe\n            obj[key] = value;\n        }\n    });\n}\n\nexport function isObject(item : mixed) : boolean {\n    return (typeof item === 'object' && item !== null);\n}\n\nexport function isObjectObject(obj : mixed) : boolean {\n    return isObject(obj) && Object.prototype.toString.call(obj) === '[object Object]';\n}\n\nexport function isPlainObject(obj : mixed) : boolean {\n    if (!isObjectObject(obj)) {\n        return false;\n    }\n\n    // $FlowFixMe\n    let constructor = obj.constructor;\n\n    if (typeof constructor !== 'function') {\n        return false;\n    }\n\n    let prototype = constructor.prototype;\n\n    if (!isObjectObject(prototype)) {\n        return false;\n    }\n\n    if (!prototype.hasOwnProperty('isPrototypeOf')) {\n        return false;\n    }\n\n    return true;\n}\n\nexport function replaceObject<T : Object | Array<mixed>> (item : T, replacer : (mixed, string | number, string) => mixed, fullKey : string = '') : T {\n\n    if (Array.isArray(item)) {\n        let length = item.length;\n        let result = [];\n\n        for (let i = 0; i < length; i++) {\n\n            \n            defineLazyProp(result, i, () => {\n                let itemKey = fullKey ? `${ fullKey }.${ i }` : `${ i }`;\n                let el = item[i];\n\n                let child = replacer(el, i, itemKey);\n\n                if (isPlainObject(child) || Array.isArray(child)) {\n                    // $FlowFixMe\n                    child = replaceObject(child, replacer, itemKey);\n                }\n\n                return child;\n            });\n        }\n\n        // $FlowFixMe\n        return result;\n    } else if (isPlainObject(item)) {\n        let result = {};\n\n        for (let key in item) {\n            if (!item.hasOwnProperty(key)) {\n                continue;\n            }\n\n            defineLazyProp(result, key, () => {\n                let itemKey = fullKey ? `${ fullKey }.${ key }` : `${ key }`;\n                // $FlowFixMe\n                let el = item[key];\n\n                let child = replacer(el, key, itemKey);\n\n                if (isPlainObject(child) || Array.isArray(child)) {\n                    // $FlowFixMe\n                    child = replaceObject(child, replacer, itemKey);\n                }\n\n                return child;\n            });\n        }\n\n        // $FlowFixMe\n        return result;\n    } else {\n        throw new Error(`Pass an object or array`);\n    }\n}\n\n\nexport function copyProp(source : Object, target : Object, name : string, def : mixed) {\n    if (source.hasOwnProperty(name)) {\n        let descriptor = Object.getOwnPropertyDescriptor(source, name);\n        // $FlowFixMe\n        Object.defineProperty(target, name, descriptor);\n\n    } else {\n        target[name] = def;\n    }\n}\n\ntype RegexResultType = {\n    text : string,\n    groups : Array<string>,\n    start : number,\n    end : number,\n    length : number,\n    replace : (text : string) => string\n};\n\nexport function regex(pattern : string | RegExp, string : string, start : number = 0) : ?RegexResultType {\n\n    if (typeof pattern === 'string') {\n        // eslint-disable-next-line security/detect-non-literal-regexp\n        pattern = new RegExp(pattern);\n    }\n\n    let result = string.slice(start).match(pattern);\n\n    if (!result) {\n        return;\n    }\n\n    // $FlowFixMe\n    let index : number = result.index;\n    let regmatch = result[0];\n\n    return {\n        text:   regmatch,\n        groups: result.slice(1),\n        start:  start + index,\n        end:    start + index + regmatch.length,\n        length: regmatch.length,\n\n        replace(text : string) : string {\n\n            if (!regmatch) {\n                return '';\n            }\n\n            return `${ regmatch.slice(0, start + index) }${ text }${ regmatch.slice(index + regmatch.length) }`;\n        }\n    };\n}\n\nexport function regexAll(pattern : string | RegExp, string : string) : Array<RegexResultType> {\n\n    let matches = [];\n    let start = 0;\n\n    // eslint-disable-next-line no-constant-condition\n    while (true) {\n        let regmatch = regex(pattern, string, start);\n\n        if (!regmatch) {\n            break;\n        }\n\n        matches.push(regmatch);\n        start = match.end;\n    }\n\n    return matches;\n}\n\nexport function isDefined(value : ?mixed) : boolean {\n    return value !== null && value !== undefined;\n}\n\nexport function cycle(method : Function) : ZalgoPromise<void> {\n    return ZalgoPromise.try(method).then(() => cycle(method));\n}\n\nexport function debounce<T>(method : (...args : Array<mixed>) => T, time : number = 100) : (...args : Array<mixed>) => void {\n\n    let timeout;\n\n    return function debounceWrapper() {\n        clearTimeout(timeout);\n\n        timeout = setTimeout(() => {\n            return method.apply(this, arguments);\n        }, time);\n    };\n}\n\nexport function isRegex(item : mixed) : boolean {\n    return Object.prototype.toString.call(item) === '[object RegExp]';\n}\n\ntype FunctionProxy<T : Function> = (method : T) => T;\n\n// eslint-disable-next-line flowtype/no-weak-types\nexport let weakMapMemoize : FunctionProxy<*> = <R : mixed>(method : (arg : any) => R) : ((...args : Array<any>) => R) => {\n\n    let weakmap = new WeakMap();\n\n    // eslint-disable-next-line flowtype/no-weak-types\n    return function weakmapMemoized(arg : any) : R {\n        return weakmap.getOrSet(arg, () => method.call(this, arg));\n    };\n};\n\ntype FunctionPromiseProxy<R : mixed, T : (...args : $ReadOnlyArray<mixed>) => ZalgoPromise<R>> = (T) => T;\n\n// eslint-disable-next-line flowtype/no-weak-types\nexport let weakMapMemoizePromise : FunctionPromiseProxy<*, *> = <R : mixed>(method : (arg : any) => ZalgoPromise<R>) : ((...args : Array<any>) => ZalgoPromise<R>) => {\n\n    let weakmap = new WeakMap();\n\n    // eslint-disable-next-line flowtype/no-weak-types\n    return function weakmapMemoizedPromise(arg : any) : ZalgoPromise<R> {\n        return weakmap.getOrSet(arg, () =>\n            method.call(this, arg).finally(() => {\n                weakmap.delete(arg);\n            })\n        );\n    };\n};\n\nexport function getOrSet<O : Object, T : mixed>(obj : O, key : string, getter : () => T) : T {\n    if (obj.hasOwnProperty(key)) {\n        return obj[key];\n    }\n\n    const val = getter();\n    obj[key] = val;\n    return val;\n}\n\nexport type CleanupType = {|\n    set : <T : mixed>(string, T) => T, // eslint-disable-line no-undef\n    register : (Function) => void,\n    all : () => ZalgoPromise<void>\n|};\n\nexport function cleanup(obj : Object) : CleanupType {\n\n    const tasks = [];\n    let cleaned = false;\n\n    return {\n        set<T : mixed>(name : string, item : T) : T {\n            if (!cleaned) {\n                obj[name] = item;\n                this.register(() => {\n                    delete obj[name];\n                });\n            }\n            return item;\n        },\n\n        register(method : Function) {\n            if (cleaned) {\n                method();\n            } else {\n                tasks.push(once(method));\n            }\n        },\n\n        all() : ZalgoPromise<void> {\n            const results = [];\n            cleaned = true;\n\n            while (tasks.length) {\n                const task = tasks.pop();\n                results.push(task());\n            }\n\n            return ZalgoPromise.all(results).then(noop);\n        }\n    };\n}\n\nexport function tryCatch<T>(fn : () => T) : {| result : T, error : void |} | {| result : void, error : mixed |} {\n    let result;\n    let error;\n\n    try {\n        result = fn();\n    } catch (err) {\n        error = err;\n    }\n    \n    // $FlowFixMe\n    return { result, error };\n}\n\nexport function removeFromArray<X, T : Array<X>>(arr : T, item : X) {\n    const index = arr.indexOf(item);\n    if (index !== -1) {\n        arr.splice(index, 1);\n    }\n}\n","export default function _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}","/* @flow */\n\nexport const PROTOCOL = {\n    MOCK:  ('mock:' : 'mock:'),\n    FILE:  ('file:' : 'file:'),\n    ABOUT: ('about:' : 'about:')\n};\n\nexport const WILDCARD = '*';\n\nexport const WINDOW_TYPE = {\n    IFRAME: ('iframe' : 'iframe'),\n    POPUP:  ('popup' : 'popup')\n};\n","/* @flow */\n\nexport function safeIndexOf<T>(collection : Array<T>, item : T) : number {\n    for (let i = 0; i < collection.length; i++) {\n\n        try {\n            if (collection[i] === item) {\n                return i;\n            }\n        } catch (err) {\n            // pass\n        }\n    }\n\n    return -1;\n}\n\n// eslint-disable-next-line no-unused-vars\nexport function noop(...args : Array<mixed>) {\n    // pass\n}\n","/* @flow */\n\nimport { isWindow, isWindowClosed } from 'cross-domain-utils/src';\n\nimport { hasNativeWeakMap } from './native';\nimport { noop, safeIndexOf } from './util';\n\nlet defineProperty = Object.defineProperty;\nlet counter = Date.now() % 1e9;\n\nexport class CrossDomainSafeWeakMap<K : Object, V : mixed> {\n\n    name : string\n    weakmap : WeakMap<K, V>\n    keys : Array<K>\n    values : Array<V>\n\n    constructor() {\n        counter += 1;\n\n        // eslint-disable-next-line no-bitwise\n        this.name = `__weakmap_${ Math.random() * 1e9 >>> 0 }__${ counter }`;\n\n        if (hasNativeWeakMap()) {\n            try {\n                this.weakmap = new WeakMap();\n            } catch (err) {\n                // pass\n            }\n        }\n\n        this.keys  = [];\n        this.values = [];\n    }\n\n    _cleanupClosedWindows() {\n\n        let weakmap = this.weakmap;\n        let keys = this.keys;\n\n        for (let i = 0; i < keys.length; i++) {\n            let value = keys[i];\n\n            if (isWindow(value) && isWindowClosed(value)) {\n\n                if (weakmap) {\n                    try {\n                        weakmap.delete(value);\n                    } catch (err) {\n                        // pass\n                    }\n                }\n\n                keys.splice(i, 1);\n                this.values.splice(i, 1);\n\n                i -= 1;\n            }\n        }\n    }\n\n    isSafeToReadWrite(key : K) : boolean {\n\n        if (isWindow(key)) {\n            return false;\n        }\n\n        try {\n            noop(key && key.self);\n            noop(key && key[this.name]);\n        } catch (err) {\n            return false;\n        }\n\n        return true;\n    }\n\n    set(key : K, value : V) {\n\n        if (!key) {\n            throw new Error(`WeakMap expected key`);\n        }\n\n        let weakmap = this.weakmap;\n\n        if (weakmap) {\n            try {\n                weakmap.set(key, value);\n            } catch (err) {\n                delete this.weakmap;\n            }\n        }\n\n        if (!this.isSafeToReadWrite(key)) {\n\n            this._cleanupClosedWindows();\n\n            let keys = this.keys;\n            let values = this.values;\n            let index = safeIndexOf(keys, key);\n\n            if (index === -1) {\n                keys.push(key);\n                values.push(value);\n            } else {\n                values[index] = value;\n            }\n\n        } else {\n\n            let name = this.name;\n            let entry = key[name];\n\n            if (entry && entry[0] === key) {\n                entry[1] = value;\n            } else {\n                defineProperty(key, name, {\n                    value:    [ key, value ],\n                    writable: true\n                });\n            }\n        }\n    }\n\n    get(key : K) : V | void {\n\n        if (!key) {\n            throw new Error(`WeakMap expected key`);\n        }\n\n        let weakmap = this.weakmap;\n\n        if (weakmap) {\n            try {\n                if (weakmap.has(key)) {\n                    return weakmap.get(key);\n                }\n            } catch (err) {\n                delete this.weakmap;\n            }\n        }\n\n        if (!this.isSafeToReadWrite(key)) {\n\n            this._cleanupClosedWindows();\n\n            let keys = this.keys;\n            let index = safeIndexOf(keys, key);\n\n            if (index === -1) {\n                return;\n            }\n\n            return this.values[index];\n\n        } else {\n\n            let entry = key[this.name];\n\n            if (entry && entry[0] === key) {\n                return entry[1];\n            }\n        }\n    }\n\n    delete(key : K) {\n\n        if (!key) {\n            throw new Error(`WeakMap expected key`);\n        }\n\n        let weakmap = this.weakmap;\n\n        if (weakmap) {\n            try {\n                weakmap.delete(key);\n            } catch (err) {\n                delete this.weakmap;\n            }\n        }\n\n        if (!this.isSafeToReadWrite(key)) {\n\n            this._cleanupClosedWindows();\n\n            let keys = this.keys;\n            let index = safeIndexOf(keys, key);\n\n            if (index !== -1) {\n                keys.splice(index, 1);\n                this.values.splice(index, 1);\n            }\n\n        } else {\n\n            let entry = key[this.name];\n\n            if (entry && entry[0] === key) {\n                entry[0] = entry[1] = undefined;\n            }\n        }\n    }\n\n    has(key : K) : boolean {\n\n        if (!key) {\n            throw new Error(`WeakMap expected key`);\n        }\n\n        let weakmap = this.weakmap;\n\n        if (weakmap) {\n            try {\n                if (weakmap.has(key)) {\n                    return true;\n                }\n            } catch (err) {\n                delete this.weakmap;\n            }\n        }\n\n        if (!this.isSafeToReadWrite(key)) {\n\n            this._cleanupClosedWindows();\n\n            let index = safeIndexOf(this.keys, key);\n            return index !== -1;\n\n        } else {\n\n            let entry = key[this.name];\n\n            if (entry && entry[0] === key) {\n                return true;\n            }\n\n            return false;\n        }\n    }\n\n    getOrSet(key : K, getter : () => V) : V {\n        if (this.has(key)) {\n            // $FlowFixMe\n            return this.get(key);\n        }\n\n        let value = getter();\n        this.set(key, value);\n        return value;\n    }\n}\n","/* @flow */\n\nexport function hasNativeWeakMap() : boolean {\n\n    if (typeof WeakMap === 'undefined') {\n        return false;\n    }\n\n    if (typeof Object.freeze === 'undefined') {\n        return false;\n    }\n\n    try {\n\n        let testWeakMap = new WeakMap();\n        let testKey = {};\n        let testValue = '__testvalue__';\n\n        Object.freeze(testKey);\n\n        testWeakMap.set(testKey, testValue);\n\n        if (testWeakMap.get(testKey) === testValue) {\n            return true;\n        }\n\n        return false;\n\n    } catch (err) {\n\n        return false;\n    }\n}\n","/* @flow */\n\n// eslint-disable-next-line import/no-namespace\nimport * as INTERFACE from './interface';\n\nexport * from './interface';\nexport default INTERFACE;\n","export default function _inheritsLoose(subClass, superClass) {\n  subClass.prototype = Object.create(superClass.prototype);\n  subClass.prototype.constructor = subClass;\n  subClass.__proto__ = superClass;\n}","/* @flow */\n\nexport function getUserAgent() : string {\n    return window.navigator.mockUserAgent || window.navigator.userAgent;\n}\n\nexport function isDevice() : boolean {\n    let userAgent = getUserAgent();\n    if (userAgent.match(/Android|webOS|iPhone|iPad|iPod|bada|Symbian|Palm|CriOS|BlackBerry|IEMobile|WindowsMobile|Opera Mini/i)) {\n        return true;\n    }\n\n    return false;\n}\n\nexport function isWebView() : boolean {\n    let userAgent = getUserAgent();\n    return (/(iPhone|iPod|iPad|Macintosh).*AppleWebKit(?!.*Safari)/i).test(userAgent) ||\n        (/\\bwv\\b/).test(userAgent) ||\n    (/Android.*Version\\/(\\d)\\.(\\d)/i).test(userAgent);\n}\n\nexport function isStandAlone() : boolean {\n    return (window.navigator.standalone === true || window.matchMedia('(display-mode: standalone)').matches);\n}\n\nexport function isFacebookWebView(ua? : string = getUserAgent()) : boolean {\n    return (ua.indexOf('FBAN') !== -1) || (ua.indexOf('FBAV') !== -1);\n}\n\nexport function isFirefoxIOS(ua? : string = getUserAgent()) : boolean {\n    return (/FxiOS/i).test(ua);\n}\n\nexport function isEdgeIOS(ua? : string = getUserAgent()) : boolean {\n    return (/EdgiOS/i).test(ua);\n}\n\nexport function isOperaMini(ua? : string = getUserAgent()) : boolean {\n    return ua.indexOf('Opera Mini') > -1;\n}\n\nexport function isAndroid(ua? : string = getUserAgent()) : boolean {\n    return (/Android/).test(ua);\n}\n\nexport function isIos(ua? : string = getUserAgent()) : boolean {\n    return (/iPhone|iPod|iPad/).test(ua);\n}\n\nexport function isGoogleSearchApp(ua? : string = getUserAgent()) : boolean {\n    return (/\\bGSA\\b/).test(ua);\n}\n\nexport function isQQBrowser(ua? : string = getUserAgent()) : boolean {\n    return (/QQBrowser/).test(ua);\n}\n\nexport function isIosWebview(ua? : string = getUserAgent()) : boolean {\n    if (isIos(ua)) {\n        if (isGoogleSearchApp(ua)) {\n            return true;\n        }\n        return (/.+AppleWebKit(?!.*Safari)/).test(ua);\n    }\n    return false;\n}\n\nexport function isAndroidWebview(ua? : string = getUserAgent()) : boolean {\n    if (isAndroid(ua)) {\n        return (/Version\\/[\\d.]+/).test(ua) && !isOperaMini(ua);\n    }\n    return false;\n}\n\nexport function isIE() : boolean {\n\n    if (window.document.documentMode) {\n        return true;\n    }\n\n    return Boolean(\n        window.navigator &&\n        window.navigator.userAgent &&\n        (/Edge|MSIE|rv:11/i).test(window.navigator.userAgent)\n    );\n}\n\nexport function isIECompHeader() : boolean {\n    let mHttp = window.document.querySelector('meta[http-equiv=\"X-UA-Compatible\"]');\n    let mContent = window.document.querySelector('meta[content=\"IE=edge\"]');\n    if (mHttp && mContent) {\n        return true;\n    }\n    return false;\n}\n\nexport function isElectron() : boolean {\n    if (typeof process !== 'undefined' && process.versions && process.versions.electron) {\n        return true;\n    }\n    return false;\n}\n\nexport function isIEIntranet() : boolean {\n\n    // This status check only works for older versions of IE with document.documentMode set\n\n    if (window.document.documentMode) {\n        try {\n            let status = window.status;\n\n            window.status = 'testIntranetMode';\n\n            if (window.status === 'testIntranetMode') {\n                window.status = status;\n\n                return true;\n            }\n\n            return false;\n\n        } catch (err) {\n\n            return false;\n        }\n    }\n\n    return false;\n}\n\nexport function isMacOsCna() : boolean {\n    let userAgent = getUserAgent();\n    return (/Macintosh.*AppleWebKit(?!.*Safari)/i).test(userAgent);\n}\n\nexport function supportsPopups(ua? : string = getUserAgent()) : boolean {\n    return !(isIosWebview(ua) || isAndroidWebview(ua) || isOperaMini(ua) ||\n        isFirefoxIOS(ua) || isEdgeIOS(ua) || isFacebookWebView(ua) || isQQBrowser(ua) || isElectron() || isMacOsCna() || isStandAlone());\n}\n","/* @flow */\n\nimport { uniqueID, getGlobal, inlineMemoize } from './util';\nimport { isLocalStorageEnabled } from './dom';\n\ntype Getter<T> = <T>(handler : (Object) => T) => T;\n\nexport type Storage = {\n    getState : Getter<*>,\n    getID : () => string,\n    getSessionState : Getter<*>,\n    getSessionID : () => string\n};\n\nexport function getStorage({ name, version = 'latest', lifetime = (5 * 60 * 1000) } : { name : string, version? : string, lifetime? : number }) : Storage {\n    return inlineMemoize(getStorage, () => {\n        const STORAGE_KEY = `__${ name }_${ version }_storage__`;\n\n        let accessedStorage;\n\n        function getState<T>(handler : (storage : Object) => T) : T {\n\n            let localStorageEnabled = isLocalStorageEnabled();\n            let storage;\n\n            if (accessedStorage) {\n                storage = accessedStorage;\n            }\n\n            if (!storage && localStorageEnabled) {\n                let rawStorage = window.localStorage.getItem(STORAGE_KEY);\n\n                if (rawStorage) {\n                    storage = JSON.parse(rawStorage);\n                }\n            }\n\n            if (!storage) {\n                storage = getGlobal()[STORAGE_KEY];\n            }\n\n            if (!storage) {\n                storage = {\n                    id: uniqueID()\n                };\n            }\n\n            if (!storage.id) {\n                storage.id = uniqueID();\n            }\n\n            accessedStorage = storage;\n\n            let result = handler(storage);\n\n            if (localStorageEnabled) {\n                window.localStorage.setItem(STORAGE_KEY, JSON.stringify(storage));\n            } else {\n                getGlobal()[STORAGE_KEY] = storage;\n            }\n\n            accessedStorage = null;\n\n            return result;\n        }\n\n        function getID() : string {\n            return getState(storage => storage.id);\n        }\n\n        function getSession<T>(handler : (state : Object) => T) : T {\n            return getState(storage => {\n\n                let session = storage.__session__;\n                let now = Date.now();\n\n                if (session && ((now - session.created) > lifetime)) {\n                    session = null;\n                }\n\n                if (!session) {\n                    session = {\n                        guid:    uniqueID(),\n                        created: now\n                    };\n                }\n\n                storage.__session__ = session;\n\n                return handler(session);\n            });\n        }\n\n        function getSessionState<T>(handler : (state : Object) => T) : T {\n            return getSession(session => {\n                session.state = session.state || {};\n                return handler(session.state);\n            });\n        }\n\n        function getSessionID() : string {\n            return getSession(session => session.guid);\n        }\n\n        return {\n            getState,\n            getID,\n            getSessionState,\n            getSessionID\n        };\n    }, [ { name, version, lifetime } ]);\n}\n","/* @flow */\n/* eslint max-lines: off */\n\nimport { ZalgoPromise } from 'zalgo-promise/src';\nimport { linkFrameWindow, isWindowClosed,\n    type SameDomainWindowType, type CrossDomainWindowType } from 'cross-domain-utils/src';\nimport { WeakMap } from 'cross-domain-safe-weakmap/src';\n\nimport { inlineMemoize, noop, stringify, capitalizeFirstLetter,\n    once, extend, safeInterval } from './util';\nimport { isDevice } from './device';\nimport { KEY_CODES } from './constants';\nimport type { CancelableType } from './types';\n\ntype ElementRefType = string | HTMLElement;\n\nexport function isDocumentReady() : boolean {\n    return Boolean(document.body) && document.readyState === 'complete';\n}\n\nexport function urlEncode(str : string) : string {\n    return str.replace(/\\?/g, '%3F').replace(/&/g, '%26').replace(/#/g, '%23').replace(/\\+/g, '%2B');\n}\n\nexport function waitForWindowReady() : ZalgoPromise<void> {\n    return inlineMemoize(waitForWindowReady, () : ZalgoPromise<void> => {\n        return new ZalgoPromise(resolve => {\n            if (isDocumentReady()) {\n                resolve();\n            }\n\n            window.addEventListener('load', () => resolve());\n        });\n    });\n}\n\nexport function waitForDocumentReady() : ZalgoPromise<void> {\n    return inlineMemoize(waitForDocumentReady, () : ZalgoPromise<void> => {\n        return new ZalgoPromise(resolve => {\n\n            if (isDocumentReady()) {\n                return resolve();\n            }\n\n            let interval = setInterval(() => {\n                if (isDocumentReady()) {\n                    clearInterval(interval);\n                    return resolve();\n                }\n            }, 10);\n        });\n    });\n}\n\nexport function waitForDocumentBody() : ZalgoPromise<HTMLBodyElement> {\n    return waitForDocumentReady().then(() => {\n        if (document.body) {\n            return document.body;\n        }\n\n        throw new Error('Document ready but document.body not present');\n    });\n}\n\nexport function parseQuery(queryString : string) : Object {\n    return inlineMemoize(parseQuery, () : Object => {\n        let params = {};\n\n        if (!queryString) {\n            return params;\n        }\n\n        if (queryString.indexOf('=') === -1) {\n            return params;\n        }\n\n        for (let pair of queryString.split('&')) {\n            pair = pair.split('=');\n\n            if (pair[0] && pair[1]) {\n                params[decodeURIComponent(pair[0])] = decodeURIComponent(pair[1]);\n            }\n        }\n\n        return params;\n    }, [ queryString ]);\n}\n\n\nexport function getQueryParam(name : string) : string {\n    return parseQuery(window.location.search.slice(1))[name];\n}\n\nexport function urlWillRedirectPage(url : string) : boolean {\n\n    if (url.indexOf('#') === -1) {\n        return true;\n    }\n\n    if (url.indexOf('#') === 0) {\n        return false;\n    }\n\n    if (url.split('#')[0] === window.location.href.split('#')[0]) {\n        return false;\n    }\n\n    return true;\n}\n\nexport function formatQuery(obj : { [ string ] : string } = {}) : string {\n\n    return Object.keys(obj).filter(key => {\n        return typeof obj[key] === 'string';\n    }).map(key => {\n        return `${ urlEncode(key) }=${ urlEncode(obj[key]) }`;\n    }).join('&');\n}\n\nexport function extendQuery(originalQuery : string, props : { [ string ] : string } = {}) : string {\n\n    if (!props || !Object.keys(props).length) {\n        return originalQuery;\n    }\n\n    return formatQuery({\n        ...parseQuery(originalQuery),\n        ...props\n    });\n}\n\nexport function extendUrl(url : string, options : { query? : { [string] : string }, hash? : { [string] : string } } = {}) : string {\n\n    let query = options.query || {};\n    let hash = options.hash || {};\n\n    let originalUrl;\n    let originalQuery;\n    let originalHash;\n\n    [ originalUrl, originalHash ] = url.split('#');\n    [ originalUrl, originalQuery ] = originalUrl.split('?');\n\n    let queryString = extendQuery(originalQuery, query);\n    let hashString = extendQuery(originalHash, hash);\n\n    if (queryString) {\n        originalUrl = `${ originalUrl }?${ queryString }`;\n    }\n\n    if (hashString) {\n        originalUrl = `${ originalUrl }#${ hashString }`;\n    }\n\n    return originalUrl;\n}\n\nexport function redirect(url : string, win : CrossDomainWindowType = window) : ZalgoPromise<void> {\n    return new ZalgoPromise(resolve => {\n        win.location = url;\n        if (!urlWillRedirectPage(url)) {\n            resolve();\n        }\n    });\n}\n\nexport function hasMetaViewPort() : boolean {\n    let meta = document.querySelector('meta[name=viewport]');\n\n    if (isDevice() && window.screen.width < 660 && !meta) {\n        return false;\n    }\n\n    return true;\n}\n\nexport function isElementVisible(el : HTMLElement) : boolean {\n    return Boolean(el.offsetWidth || el.offsetHeight || el.getClientRects().length);\n}\n\nexport function enablePerformance() : boolean {\n    return inlineMemoize(enablePerformance, () : boolean => {\n        /* eslint-disable compat/compat */\n        return Boolean(\n            window.performance &&\n            performance.now &&\n            performance.timing &&\n            performance.timing.connectEnd &&\n            performance.timing.navigationStart &&\n            (Math.abs(performance.now() - Date.now()) > 1000) &&\n            (performance.now() - (performance.timing.connectEnd - performance.timing.navigationStart)) > 0\n        );\n        /* eslint-enable compat/compat */\n    });\n}\n\nexport function getPageRenderTime() : ZalgoPromise<?number> {\n    return waitForDocumentReady().then(() => {\n\n        if (!enablePerformance()) {\n            return;\n        }\n\n        let timing = window.performance.timing;\n\n        if (timing.connectEnd && timing.domInteractive) {\n            return timing.domInteractive - timing.connectEnd;\n        }\n    });\n}\n\nexport function htmlEncode(html : string = '') : string {\n    return html.toString()\n        .replace(/&/g, '&amp;')\n        .replace(/</g, '&lt;')\n        .replace(/>/g, '&gt;')\n        .replace(/\"/g, '&quot;')\n        .replace(/'/g, '&#39;')\n        .replace(/\\//g, '&#x2F;');\n}\n\nexport function isBrowser() : boolean {\n    return (typeof window !== 'undefined');\n}\n\nexport function querySelectorAll(selector : string, doc : HTMLElement = window.document) : Array<Element> {\n    return Array.prototype.slice.call(doc.querySelectorAll(selector));\n}\n\nexport function onClick(element : Element, handler : (Event) => void) {\n    element.addEventListener('touchstart', noop);\n    element.addEventListener('click', handler);\n    element.addEventListener('keypress', (event : Event) => {\n        // $FlowFixMe\n        if (event.keyCode === KEY_CODES.ENTER) {\n            return handler(event);\n        }\n    });\n}\n\nexport function getScript({ host = window.location.host, path } : { host? : string, path : string }) : ?HTMLScriptElement {\n    return inlineMemoize(getScript, () : ?HTMLScriptElement => {\n\n        let url = `${ host }${ path }`;\n        let scripts = Array.prototype.slice.call(document.getElementsByTagName('script'));\n\n        for (let script of scripts) {\n            if (!script.src) {\n                continue;\n            }\n\n            let src = script.src.replace(/^https?:\\/\\//, '').split('?')[0];\n\n            if (src === url) {\n                return script;\n            }\n        }\n    }, [ path ]);\n}\n\nexport function isLocalStorageEnabled() : boolean {\n    return inlineMemoize(isLocalStorageEnabled, () => {\n        try {\n            if (typeof window === 'undefined') {\n                return false;\n            }\n\n            if (window.localStorage) {\n                let value = Math.random().toString();\n                window.localStorage.setItem('__test__localStorage__', value);\n                let result = window.localStorage.getItem('__test__localStorage__');\n                window.localStorage.removeItem('__test__localStorage__');\n                if (value === result) {\n                    return true;\n                }\n            }\n        } catch (err) {\n            // pass\n        }\n        return false;\n    });\n}\n\nexport function getBrowserLocales() : Array<{ country? : string, lang : string }> {\n    let nav = window.navigator;\n\n    let locales = nav.languages\n        ? Array.prototype.slice.apply(nav.languages)\n        : [];\n\n    if (nav.language) {\n        locales.push(nav.language);\n    }\n\n    if (nav.userLanguage) {\n        locales.push(nav.userLanguage);\n    }\n\n    return locales.map(locale => {\n\n        if (locale && locale.match(/^[a-z]{2}[-_][A-Z]{2}$/)) {\n            let [ lang, country ] = locale.split(/[-_]/);\n            return { country, lang };\n        }\n\n        if (locale && locale.match(/^[a-z]{2}$/)) {\n            return { lang: locale };\n        }\n\n        return null;\n\n    }).filter(Boolean);\n}\n\n\nexport function appendChild(container : HTMLElement, child : HTMLElement | Text) {\n    container.appendChild(child);\n}\n\nexport function isElement(element : mixed) : boolean {\n\n    if (element instanceof window.Element) {\n        return true;\n    }\n\n    if (element !== null && typeof element === 'object' && element.nodeType === 1 && typeof element.style === 'object' && typeof element.ownerDocument === 'object') {\n        return true;\n    }\n\n    return false;\n}\n\nexport function getElementSafe(id : ElementRefType, doc : Document | HTMLElement = document) : ?HTMLElement {\n\n    if (isElement(id)) {\n        // $FlowFixMe\n        return id;\n    }\n\n    if (typeof id === 'string') {\n        return doc.querySelector(id);\n    }\n}\n\nexport function getElement(id : ElementRefType, doc : Document | HTMLElement = document) : HTMLElement {\n\n    let element = getElementSafe(id, doc);\n\n    if (element) {\n        return element;\n    }\n\n    throw new Error(`Can not find element: ${ stringify(id) }`);\n}\n\nexport function elementReady(id : ElementRefType) : ZalgoPromise<window.HTMLElement> {\n    return new ZalgoPromise((resolve, reject) => {\n\n        let name = stringify(id);\n        let el = getElementSafe(id);\n\n        if (el) {\n            return resolve(el);\n        }\n\n        if (isDocumentReady()) {\n            return reject(new Error(`Document is ready and element ${ name } does not exist`));\n        }\n\n        let interval = setInterval(() => {\n\n            el = getElementSafe(id);\n\n            if (el) {\n                clearInterval(interval);\n                return resolve(el);\n            }\n\n            if (isDocumentReady()) {\n                clearInterval(interval);\n                return reject(new Error(`Document is ready and element ${ name } does not exist`));\n            }\n        }, 10);\n    });\n}\n\nexport function PopupOpenError(message : string) {\n    this.message = message;\n}\n\nPopupOpenError.prototype = Object.create(Error.prototype);\n\ntype PopupOptions = {|\n    name? : string,\n    width? : number,\n    height? : number,\n    top? : number,\n    left? : number,\n    status? : 0 | 1,\n    resizable? : 0 | 1,\n    toolbar? : 0 | 1,\n    menubar? : 0 | 1,\n    scrollbars? : 0 | 1\n|};\n\nexport function popup(url : string, options? : PopupOptions) : CrossDomainWindowType {\n\n    // $FlowFixMe\n    options = options || {};\n\n    let { width, height } = options;\n\n    let top = 0;\n    let left = 0;\n\n    if (width) {\n        if (window.outerWidth) {\n            left = Math.round((window.outerWidth - width) / 2) + window.screenX;\n        } else if (window.screen.width) {\n            left = Math.round((window.screen.width - width) / 2);\n        }\n    }\n\n    if (height) {\n        if (window.outerHeight) {\n            top = Math.round((window.outerHeight - height) / 2) + window.screenY;\n        } else if (window.screen.height) {\n            top = Math.round((window.screen.height - height) / 2);\n        }\n    }\n\n    options = {\n        top,\n        left,\n        width,\n        height,\n        status:     1,\n        toolbar:    0,\n        menubar:    0,\n        resizable:  1,\n        scrollbars: 1,\n        ...options\n    };\n\n    let name = options.name || '';\n    delete options.name;\n\n    // eslint-disable-next-line array-callback-return\n    let params = Object.keys(options).map(key => {\n        // $FlowFixMe\n        if (options[key]) {\n            return `${ key }=${ stringify(options[key]) }`;\n        }\n    }).filter(Boolean).join(',');\n\n    let win;\n\n    try {\n        win = window.open(url, name, params, true);\n    } catch (err) {\n        throw new PopupOpenError(`Can not open popup window - ${ err.stack || err.message }`);\n    }\n\n    if (isWindowClosed(win)) {\n        let err = new PopupOpenError(`Can not open popup window - blocked`);\n        throw err;\n    }\n\n    window.addEventListener('unload', () => win.close());\n\n    return win;\n}\n\n\nexport function writeToWindow(win : SameDomainWindowType, html : string) {\n    try {\n        win.document.open();\n        win.document.write(html);\n        win.document.close();\n    } catch (err) {\n        try {\n            win.location = `javascript: document.open(); document.write(${ JSON.stringify(html) }); document.close();`;\n        } catch (err2) {\n            // pass\n        }\n    }\n}\n\nexport function writeElementToWindow(win : SameDomainWindowType, el : HTMLElement) {\n\n    let tag = el.tagName.toLowerCase();\n\n    if (tag !== 'html') {\n        throw new Error(`Expected element to be html, got ${ tag }`);\n    }\n\n    let documentElement = win.document.documentElement;\n\n    while (documentElement.children && documentElement.children.length) {\n        documentElement.removeChild(documentElement.children[0]);\n    }\n\n    while (el.children.length) {\n        documentElement.appendChild(el.children[0]);\n    }\n}\n\nexport function setStyle(el : HTMLElement, styleText : string, doc : Document = window.document) {\n    // $FlowFixMe\n    if (el.styleSheet) {\n        // $FlowFixMe\n        el.styleSheet.cssText = styleText;\n    } else {\n        el.appendChild(doc.createTextNode(styleText));\n    }\n}\n\nexport type ElementOptionsType = {\n    style? : { [ string ] : string },\n    class? : ?Array<string>,\n    attributes? : { [ string ] : string },\n    styleSheet? : ?string,\n    html? : ?string\n};\n\nlet awaitFrameLoadPromises : WeakMap<HTMLIFrameElement, ZalgoPromise<HTMLIFrameElement>>;\n\nexport function awaitFrameLoad(frame : HTMLIFrameElement) : ZalgoPromise<HTMLIFrameElement> {\n    awaitFrameLoadPromises = awaitFrameLoadPromises || new WeakMap();\n\n    if (awaitFrameLoadPromises.has(frame)) {\n        let promise = awaitFrameLoadPromises.get(frame);\n        if (promise) {\n            return promise;\n        }\n    }\n\n    let promise = new ZalgoPromise((resolve, reject) => {\n        frame.addEventListener('load', () => {\n            linkFrameWindow(frame);\n            resolve(frame);\n        });\n\n        frame.addEventListener('error', (err : Event) => {\n            if (frame.contentWindow) {\n                resolve(frame);\n            } else {\n                reject(err);\n            }\n        });\n    });\n\n    awaitFrameLoadPromises.set(frame, promise);\n\n    return promise;\n}\n\nexport function awaitFrameWindow(frame : HTMLIFrameElement) : ZalgoPromise<CrossDomainWindowType> {\n\n    if (frame.contentWindow) {\n        return ZalgoPromise.resolve(frame.contentWindow);\n    }\n\n    return awaitFrameLoad(frame).then(loadedFrame => {\n\n        if (!loadedFrame.contentWindow) {\n            throw new Error(`Could not find window in iframe`);\n        }\n\n        return loadedFrame.contentWindow;\n    });\n}\n\nexport function createElement(tag : string = 'div', options : ElementOptionsType = {}, container : ?HTMLElement) : HTMLElement {\n\n    tag = tag.toLowerCase();\n    let element = document.createElement(tag);\n\n    if (options.style) {\n        extend(element.style, options.style);\n    }\n\n    if (options.class) {\n        element.className = options.class.join(' ');\n    }\n\n    if (options.attributes) {\n        for (let key of Object.keys(options.attributes)) {\n            element.setAttribute(key, options.attributes[key]);\n        }\n    }\n\n    if (options.styleSheet) {\n        setStyle(element, options.styleSheet);\n    }\n\n    if (container) {\n        appendChild(container, element);\n    }\n\n    if (options.html) {\n        if (tag === 'iframe') {\n            // $FlowFixMe\n            if (!container || !element.contentWindow) {\n                throw new Error(`Iframe html can not be written unless container provided and iframe in DOM`);\n            }\n\n            // $FlowFixMe\n            writeToWindow(element.contentWindow, options.html);\n\n        } else {\n            element.innerHTML = options.html;\n        }\n    }\n\n    return element;\n}\n\n\nexport type IframeElementOptionsType = {\n    style? : { [ string ] : string },\n    class? : ?Array<string>,\n    attributes? : { [ string ] : string },\n    styleSheet? : ?string,\n    html? : ?string,\n    url? : ?string\n};\n\nexport function iframe(options : IframeElementOptionsType = {}, container : HTMLElement, attempts : number = 3) : HTMLIFrameElement {\n\n    let el = getElement(container);\n\n    let attributes = options.attributes || {};\n    let style = options.style || {};\n\n    let frame = createElement('iframe', {\n        attributes: {\n            frameBorder:       '0',\n            allowTransparency: 'true',\n            ...attributes\n        },\n        style: {\n            backgroundColor: 'transparent',\n            ...style\n        },\n        html:  options.html,\n        class: options.class\n    });\n\n    // $FlowFixMe\n    awaitFrameLoad(frame);\n\n    el.appendChild(frame);\n\n    // $FlowFixMe\n    let win = frame.contentWindow;\n\n    if (win) {\n        try {\n            // $FlowFixMe\n            noop(win.name);\n        } catch (err) {\n            el.removeChild(frame);\n\n            if (!attempts) {\n                throw new Error(`Frame is cross-domain: ${ err.stack }`);\n            }\n\n            return iframe(options, container, attempts - 1);\n        }\n    }\n\n    if (options.url || window.navigator.userAgent.match(/MSIE|Edge/i)) {\n        frame.setAttribute('src', options.url || 'about:blank');\n    }\n\n    // $FlowFixMe\n    return frame;\n}\n\nexport function addEventListener(obj : HTMLElement, event : string, handler : (event : Event) => void) : CancelableType {\n    obj.addEventListener(event, handler);\n    return {\n        cancel() {\n            obj.removeEventListener(event, handler);\n        }\n    };\n}\n\nexport function bindEvents(element : HTMLElement, eventNames : Array<string>, handler : (event : Event) => void) : CancelableType {\n\n    handler = once(handler);\n\n    for (let eventName of eventNames) {\n        element.addEventListener(eventName, handler);\n    }\n\n    return {\n        cancel: once(() => {\n            for (let eventName of eventNames) {\n                element.removeEventListener(eventName, handler);\n            }\n        })\n    };\n}\n\nconst VENDOR_PREFIXES = [ 'webkit', 'moz', 'ms', 'o' ];\n\nexport function setVendorCSS(element : HTMLElement, name : string, value : string) {\n\n    // $FlowFixMe\n    element.style[name] = value;\n\n    let capitalizedName = capitalizeFirstLetter(name);\n\n    for (let prefix of VENDOR_PREFIXES) {\n        // $FlowFixMe\n        element.style[`${ prefix }${ capitalizedName }`] = value;\n    }\n}\n\nfunction isValidAnimation(element : HTMLElement, name : string) : boolean {\n\n    let CSSRule = window.CSSRule;\n\n    const KEYFRAMES_RULE = CSSRule.KEYFRAMES_RULE || CSSRule.WEBKIT_KEYFRAMES_RULE || CSSRule.MOZ_KEYFRAMES_RULE ||\n        CSSRule.O_KEYFRAMES_RULE || CSSRule.MS_KEYFRAMES_RULE;\n\n    let stylesheets = element.ownerDocument.styleSheets;\n\n    try {\n        for (let i = 0; i < stylesheets.length; i++) {\n\n            // $FlowFixMe\n            let cssRules = stylesheets[i].cssRules;\n\n            if (!cssRules) {\n                continue;\n            }\n\n            for (let j = 0; j < cssRules.length; j++) {\n\n                let cssRule = cssRules[j];\n\n                if (!cssRule) {\n                    continue;\n                }\n\n                if (cssRule.type === KEYFRAMES_RULE && cssRule.name === name) {\n                    return true;\n                }\n            }\n        }\n    } catch (err) {\n\n        return false;\n    }\n\n\n    return false;\n}\n\n\nconst ANIMATION_START_EVENTS = [ 'animationstart', 'webkitAnimationStart', 'oAnimationStart', 'MSAnimationStart' ];\nconst ANIMATION_END_EVENTS   = [ 'animationend', 'webkitAnimationEnd', 'oAnimationEnd', 'MSAnimationEnd' ];\n\nexport function animate(element : ElementRefType, name : string, clean : (Function) => void, timeout : number = 1000) : ZalgoPromise<void> {\n    return new ZalgoPromise((resolve, reject) => {\n\n        let el = getElement(element);\n\n        if (!el || !isValidAnimation(el, name)) {\n            return resolve();\n        }\n\n        let hasStarted = false;\n\n        let startTimeout;\n        let endTimeout;\n        let startEvent;\n        let endEvent;\n\n        function cleanUp() {\n            clearTimeout(startTimeout);\n            clearTimeout(endTimeout);\n            startEvent.cancel();\n            endEvent.cancel();\n        }\n\n        startEvent = bindEvents(el, ANIMATION_START_EVENTS, event => {\n\n            // $FlowFixMe\n            if (event.target !== el || event.animationName !== name) {\n                return;\n            }\n\n            clearTimeout(startTimeout);\n\n            event.stopPropagation();\n\n            startEvent.cancel();\n            hasStarted = true;\n\n            endTimeout = setTimeout(() => {\n                cleanUp();\n                resolve();\n            }, timeout);\n        });\n\n        endEvent = bindEvents(el, ANIMATION_END_EVENTS, event => {\n\n            // $FlowFixMe\n            if (event.target !== el || event.animationName !== name) {\n                return;\n            }\n\n            cleanUp();\n\n            // $FlowFixMe\n            if (typeof event.animationName === 'string' && event.animationName !== name) {\n                return reject(`Expected animation name to be ${ name }, found ${ event.animationName }`);\n            }\n\n            return resolve();\n        });\n\n        setVendorCSS(el, 'animationName', name);\n\n        startTimeout = setTimeout(() => {\n            if (!hasStarted) {\n                cleanUp();\n                return resolve();\n            }\n        }, 200);\n\n        if (clean) {\n            clean(cleanUp);\n        }\n    });\n}\n\nconst STYLE = {\n\n    DISPLAY: {\n        NONE:  'none',\n        BLOCK: 'block'\n    },\n\n    VISIBILITY: {\n        VISIBLE: 'visible',\n        HIDDEN:  'hidden'\n    },\n\n    IMPORTANT: 'important'\n};\n\nexport function makeElementVisible(element : HTMLElement) {\n    element.style.setProperty('visibility', '');\n}\n\nexport function makeElementInvisible(element : HTMLElement) {\n    element.style.setProperty('visibility', STYLE.VISIBILITY.HIDDEN, STYLE.IMPORTANT);\n}\n\n\nexport function showElement(element : HTMLElement) {\n    element.style.setProperty('display', '');\n}\n\nexport function hideElement(element : HTMLElement) {\n    element.style.setProperty('display', STYLE.DISPLAY.NONE, STYLE.IMPORTANT);\n}\n\nexport function destroyElement(element : HTMLElement) {\n    if (element && element.parentNode) {\n        element.parentNode.removeChild(element);\n    }\n}\n\nexport function showAndAnimate(element : HTMLElement, name : string, clean : (Function) => void) : ZalgoPromise<void> {\n    let animation = animate(element, name, clean);\n    showElement(element);\n    return animation;\n}\n\nexport function animateAndHide(element : HTMLElement, name : string, clean : (Function) => void) : ZalgoPromise<void> {\n    return animate(element, name, clean).then(() => {\n        hideElement(element);\n    });\n}\n\nexport function addClass(element : HTMLElement, name : string) {\n    element.classList.add(name);\n}\n\nexport function removeClass(element : HTMLElement, name : string) {\n    element.classList.remove(name);\n}\n\nexport function isElementClosed(el : HTMLElement) : boolean {\n    if (!el || !el.parentNode) {\n        return true;\n    }\n    return false;\n}\n\nexport function watchElementForClose(element : HTMLElement, handler : () => mixed) : CancelableType {\n    handler = once(handler);\n\n    let interval;\n\n    if (isElementClosed(element)) {\n        handler();\n    } else {\n        interval = safeInterval(() => {\n            if (isElementClosed(element)) {\n                interval.cancel();\n                handler();\n            }\n        }, 50);\n    }\n\n    return {\n        cancel() {\n            if (interval) {\n                interval.cancel();\n            }\n        }\n    };\n}\n\nexport function fixScripts(el : HTMLElement, doc : Document = window.document) {\n    for (let script of querySelectorAll('script', el)) {\n        let parentNode = script.parentNode;\n\n        if (!parentNode) {\n            continue;\n        }\n\n        let newScript = doc.createElement('script');\n        newScript.text = script.textContent;\n        parentNode.replaceChild(newScript, script);\n    }\n}\n\ntype OnResizeOptions = {|\n    width? : boolean,\n    height? : boolean,\n    interval? : number,\n    win? : SameDomainWindowType\n|};\n\nexport function onResize(el : HTMLElement, handler : ({ width : number, height : number }) => void, { width = true, height = true, interval = 100, win = window } : OnResizeOptions = {}) : {} {\n    let currentWidth = el.offsetWidth;\n    let currentHeight = el.offsetHeight;\n\n    handler({ width: currentWidth, height: currentHeight });\n\n    let check = () => {\n        let newWidth = el.offsetWidth;\n        let newHeight = el.offsetHeight;\n\n        if ((width && newWidth !== currentWidth) || (height && newHeight !== currentHeight)) {\n            handler({ width: newWidth, height: newHeight });\n        }\n\n        currentWidth = newWidth;\n        currentHeight = newHeight;\n    };\n\n    let observer;\n    let timeout;\n\n    if (typeof win.ResizeObserver !== 'undefined') {\n        observer = new win.ResizeObserver(check);\n        observer.observe(el);\n\n    } else if (typeof win.MutationObserver !== 'undefined') {\n        observer = new win.MutationObserver(check);\n        observer.observe(el, {\n            attributes:    true,\n            childList:     true,\n            subtree:       true,\n            characterData: false\n        });\n        win.addEventListener('resize', check);\n    } else {\n        let loop = () => {\n            check();\n            timeout = setTimeout(loop, interval);\n        };\n        loop();\n    }\n\n    return {\n        cancel: () => {\n            observer.disconnect();\n            window.removeEventListener('resize', check);\n            clearTimeout(timeout);\n        }\n    };\n}\n","/* @flow */\n\nimport { noop } from './util';\nimport { getStorage } from './storage';\n\nfunction getBelterExperimentStorage() : Object {\n    return getStorage({ name: 'belter_experiment' });\n}\n\nfunction isEventUnique(name : string) : boolean {\n    return getBelterExperimentStorage().getSessionState(state => {\n        state.loggedBeacons = state.loggedBeacons || [];\n\n        if (state.loggedBeacons.indexOf(name) === -1) {\n            state.loggedBeacons.push(name);\n            return true;\n        }\n\n        return false;\n    });\n}\n\nexport type Experiment = {\n    isEnabled : () => boolean,\n    isDisabled : () => boolean,\n    getTreatment : () => string,\n    log : (string, payload? : { [string] : ?string }) => Experiment,\n    logStart : (payload? : { [string] : ?string }) => Experiment,\n    logComplete : (payload? : { [string] : ?string }) => Experiment\n};\n\nfunction getThrottlePercentile(name : string) : number {\n    return getBelterExperimentStorage().getState(state => {\n        state.throttlePercentiles = state.throttlePercentiles || {};\n        state.throttlePercentiles[name] = state.throttlePercentiles[name] || Math.floor(Math.random() * 100);\n        return state.throttlePercentiles[name];\n    });\n}\n\nconst THROTTLE_GROUP = {\n    TEST:     'test',\n    CONTROL:  'control',\n    THROTTLE: 'throttle'\n};\n\ntype ExperimentOptions = {\n    name : string,\n    sample? : number,\n    logTreatment? : ({ name : string, treatment : string }) => void,\n    logCheckpoint? : ({ name : string, treatment : string, checkpoint : string, payload? : { [string] : ?string } }) => void\n};\n\nexport function experiment({ name, sample = 50, logTreatment = noop, logCheckpoint = noop } : ExperimentOptions) : Experiment {\n\n    let throttle = getThrottlePercentile(name);\n\n    let group;\n\n    if (throttle < sample) {\n        group = THROTTLE_GROUP.TEST;\n    } else if ((sample >= 50) || ((sample <= throttle) && (throttle < (sample * 2)))) {\n        group = THROTTLE_GROUP.CONTROL;\n    } else {\n        group = THROTTLE_GROUP.THROTTLE;\n    }\n\n    let treatment = `${ name }_${ group }`;\n\n    let started = false;\n    let forced = false;\n\n    try {\n        if (window.localStorage && window.localStorage.getItem(name)) {\n            forced = true;\n        }\n    } catch (err) {\n        // pass\n    }\n\n    return {\n\n        isEnabled() : boolean {\n            return (group === THROTTLE_GROUP.TEST) || forced;\n        },\n\n        isDisabled() : boolean {\n            return (group !== THROTTLE_GROUP.TEST) && !forced;\n        },\n\n        getTreatment() : string {\n            return treatment;\n        },\n\n        log(checkpoint : string, payload? : { [string] : ?string } = {}) : Experiment {\n            if (!started) {\n                return this;\n            }\n\n            if (isEventUnique(`${ name }_${ treatment }`)) {\n                logTreatment({ name, treatment });\n            }\n\n            if (isEventUnique(`${ name }_${ treatment }_${ checkpoint }`)) {\n                logCheckpoint({ name, treatment, checkpoint, payload });\n            }\n\n            return this;\n        },\n\n        logStart(payload? : { [string] : ?string } = {}) : Experiment {\n            started = true;\n            return this.log(`start`, payload);\n        },\n\n        logComplete(payload? : { [string] : ?string } = {}) : Experiment {\n            return this.log(`complete`, payload);\n        }\n    };\n}\n","/* @flow */\n\nimport { getGlobal } from './util';\n\nexport function getGlobalNameSpace<T : Object>({ name, version = 'latest' } : { name : string, version? : string }) : { get : (string, defValue? : T) => T } {\n\n    let global = getGlobal();\n    let globalKey = `__${ name }__${ version }_global__`;\n\n    let namespace = global[globalKey] = global[globalKey] || {};\n\n    return {\n        get: (key : string, defValue? : T) : T => {\n            // $FlowFixMe\n            defValue = defValue || {};\n            let item = namespace[key] = namespace[key] || defValue;\n            return item;\n        }\n    };\n}\n","/* @flow */\n\nimport { ZalgoPromise } from 'zalgo-promise/src';\nimport { type SameDomainWindowType } from 'cross-domain-utils/src';\n\ntype RequestOptionsType = {\n    url : string,\n    method? : string,\n    headers? : { [key : string] : string },\n    json? : $ReadOnlyArray<mixed> | Object,\n    data? : { [key : string] : string },\n    body? : string,\n    win? : SameDomainWindowType,\n    timeout? : number\n};\n\ntype ResponseType = {\n    status : number,\n    headers : { [string] : string },\n    body : Object\n};\n\nconst HEADERS = {\n    CONTENT_TYPE: 'content-type',\n    ACCEPT:       'accept'\n};\n\nlet headerBuilders = [];\n\nfunction parseHeaders(rawHeaders : string = '') : { [string] : string } {\n    let result = {};\n    for (let line of rawHeaders.trim().split('\\n')) {\n        let [ key, ...values ] = line.split(':');\n        result[key.toLowerCase()] = values.join(':').trim();\n    }\n    return result;\n}\n\nexport function request({ url, method = 'get', headers = {}, json, data, body, win = window, timeout = 0 } : RequestOptionsType) : ZalgoPromise<ResponseType> {\n    return new ZalgoPromise((resolve, reject) => {\n\n        if ((json && data) || (json && body) || (data && json)) {\n            throw new Error(`Only options.json or options.data or options.body should be passed`);\n        }\n\n        let normalizedHeaders = {};\n\n        for (let key of Object.keys(headers)) {\n            normalizedHeaders[key.toLowerCase()] = headers[key];\n        }\n\n        if (json) {\n            normalizedHeaders[HEADERS.CONTENT_TYPE] = normalizedHeaders[HEADERS.CONTENT_TYPE] || 'application/json';\n        } else if (data || body) {\n            normalizedHeaders[HEADERS.CONTENT_TYPE] = normalizedHeaders[HEADERS.CONTENT_TYPE] || 'application/x-www-form-urlencoded; charset=utf-8';\n        }\n\n        normalizedHeaders[HEADERS.ACCEPT] = normalizedHeaders[HEADERS.ACCEPT] || 'application/json';\n\n        for (let headerBuilder of headerBuilders) {\n            let builtHeaders = headerBuilder();\n\n            for (let key of Object.keys(builtHeaders)) {\n                normalizedHeaders[key.toLowerCase()] = builtHeaders[key];\n            }\n        }\n\n        let xhr = new win.XMLHttpRequest();\n\n        xhr.addEventListener('load', function xhrLoad() : void {\n\n            let responseHeaders = parseHeaders(this.getAllResponseHeaders());\n\n            if (!this.status) {\n                return reject(new Error(`Request to ${ method.toLowerCase() } ${ url } failed: no response status code.`));\n            }\n            \n            let contentType = responseHeaders['content-type'];\n            let isJSON = contentType && (contentType.indexOf('application/json') === 0 || contentType.indexOf('text/json') === 0);\n            let responseBody = this.responseText;\n\n            try {\n                responseBody = JSON.parse(responseBody);\n            } catch (err) {\n                if (isJSON) {\n                    return reject(new Error(`Invalid json: ${ this.responseText }.`));\n                }\n            }\n\n            let res = {\n                status:  this.status,\n                headers: responseHeaders,\n                body:    responseBody\n            };\n\n            return resolve(res);\n\n        }, false);\n\n        xhr.addEventListener('error', (evt) => {\n            reject(new Error(`Request to ${ method.toLowerCase() } ${ url } failed: ${ evt.toString() }.`));\n        }, false);\n\n        xhr.open(method, url, true);\n\n        for (let key in normalizedHeaders) {\n            if (normalizedHeaders.hasOwnProperty(key)) {\n                xhr.setRequestHeader(key, normalizedHeaders[key]);\n            }\n        }\n\n        if (json) {\n            body = JSON.stringify(json);\n        } else if (data) {\n            body = Object.keys(data).map(key => {\n                return `${ encodeURIComponent(key) }=${ data ? encodeURIComponent(data[key]) : '' }`;\n            }).join('&');\n        }\n\n        xhr.timeout = timeout;\n        xhr.ontimeout = function xhrTimeout() {\n            reject(new Error(`Request to ${ method.toLowerCase() } ${ url } has timed out`));\n        };\n\n        xhr.send(body);\n    });\n}\n\nexport function addHeaderBuilder(method : () => { [string] : string }) {\n    headerBuilders.push(method);\n}\n","/* @flow */\n\nimport { memoize, promisify } from './util';\n\nexport function memoized(target : Object, name : string, descriptor : Object) {\n    descriptor.value = memoize(descriptor.value, { name, thisNamespace: true });\n}\n\nexport function promise(target : Object, name : string, descriptor : Object) {\n    descriptor.value = promisify(descriptor.value, { name });\n}\n","/* @flow */\n\nexport function isPerc(str : string) : boolean {\n    return typeof str === 'string' && (/^[0-9]+%$/).test(str);\n}\n\nexport function isPx(str : string) : boolean {\n    return typeof str === 'string' && (/^[0-9]+px$/).test(str);\n}\n\nexport function toNum(val : string | number) : number {\n\n    if (typeof val === 'number') {\n        return val;\n    }\n\n    let match = val.match(/^([0-9]+)(px|%)$/);\n\n    if (!match) {\n        throw new Error(`Could not match css value from ${ val }`);\n    }\n\n    return parseInt(match[1], 10);\n}\n\nexport function toPx(val : number | string) : string {\n    return `${ toNum(val) }px`;\n}\n\nexport function toCSS(val : number | string) : string {\n\n    if (typeof val === 'number') {\n        return toPx(val);\n    }\n\n    return isPerc(val) ? val : toPx(val);\n}\n\nexport function percOf(num : number, perc : string) : number {\n    return parseInt(num * toNum(perc)  / 100, 10);\n}\n\nexport function normalizeDimension(dim : string | number, max : number) : number {\n    if (typeof dim === 'number') {\n        return dim;\n    } else if (isPerc(dim)) {\n        return percOf(max, dim);\n    } else if (isPx(dim)) {\n        return toNum(dim);\n    } else {\n        throw new Error(`Can not normalize dimension: ${ dim }`);\n    }\n}\n","/* @flow */\n\nimport { ZalgoPromise } from 'zalgo-promise/src';\n\nimport { noop, tryCatch, removeFromArray } from './util';\n\ntype Prom<X> = Promise<X> | ZalgoPromise<X>; // eslint-disable-line no-restricted-globals, promise/no-native\n\ntype Handler = <T, A : $ReadOnlyArray<mixed>>(name : string, fn? : (...args : A) => T) => (...args : A) => T; // eslint-disable-line no-undef\ntype Wrapper<T> = ({ expect : Handler, avoid : Handler, expectError : Handler, error : Handler }) => (Prom<T> | void);\n\nexport function wrapPromise<T>(method : Wrapper<T>, { timeout = 5000 } : { timeout? : number } = {}) : ZalgoPromise<void> {\n    let expected : Array<string> = [];\n    let promises : Array<ZalgoPromise<*>> = [];\n\n    let timer = setTimeout(() => {\n        if (expected) {\n            promises.push(ZalgoPromise.asyncReject(new Error(`Expected ${ expected[0] } to be called`)));\n        }\n    }, timeout);\n\n    let expect : Handler = (name, fn = noop) => {\n        expected.push(name);\n        \n        // $FlowFixMe\n        return function expectWrapper(...args) : * {\n            removeFromArray(expected, name);\n\n            // $FlowFixMe\n            let { result, error } = tryCatch(() => fn.call(this, ...args));\n\n            if (error) {\n                promises.push(ZalgoPromise.asyncReject(error));\n                throw error;\n            }\n\n            promises.push(ZalgoPromise.resolve(result));\n            return result;\n        };\n    };\n\n    let avoid : Handler = (name : string, fn = noop) => {\n\n        // $FlowFixMe\n        return function avoidWrapper(...args) : * {\n            promises.push(ZalgoPromise.asyncReject(new Error(`Expected ${ name } to not be called`)));\n            // $FlowFixMe\n            return fn.call(this, ...args);\n        };\n    };\n\n    let expectError : Handler = (name, fn = noop) => {\n        expected.push(name);\n\n        // $FlowFixMe\n        return function expectErrorWrapper(...args) : * {\n            removeFromArray(expected, name);\n\n            // $FlowFixMe\n            let { result, error } = tryCatch(() => fn.call(this, ...args));\n\n            if (error) {\n                throw error;\n            }\n\n            promises.push(ZalgoPromise.resolve(result).then(() => {\n                throw new Error(`Expected ${ name } to throw an error`);\n            }, noop));\n            return result;\n        };\n    };\n\n    promises.push(ZalgoPromise.try(() => method({ expect, avoid, expectError, error: avoid })));\n\n    let drain = () => {\n        return ZalgoPromise.try(() => {\n            if (promises.length) {\n                return promises.pop();\n            }\n        }).then(() => {\n            if (promises.length) {\n                return drain();\n            }\n            if (expected.length) {\n                return ZalgoPromise.delay(10).then(drain);\n            }\n        });\n    };\n\n    return drain().then(() => {\n        clearTimeout(timer);\n    });\n}\n","/* @flow */\n\nexport function isRegex(item : mixed) : boolean {\n    return Object.prototype.toString.call(item) === '[object RegExp]';\n}\n\n// eslint-disable-next-line no-unused-vars\nexport function noop(...args : Array<mixed>) {\n    // pass\n}\n","/* @flow */\n/* eslint max-lines: 0 */\n\nimport { isRegex, noop } from './util';\nimport type { CrossDomainWindowType, SameDomainWindowType, DomainMatcher } from './types';\nimport { PROTOCOL, WILDCARD } from './constants';\n\nlet IE_WIN_ACCESS_ERROR = 'Call was rejected by callee.\\r\\n';\n\nexport function isFileProtocol(win : SameDomainWindowType = window) : boolean {\n    return win.location.protocol === PROTOCOL.FILE;\n}\n\nexport function isAboutProtocol(win : SameDomainWindowType = window) : boolean {\n    return win.location.protocol === PROTOCOL.ABOUT;\n}\n\nexport function getParent(win : ?CrossDomainWindowType) : ?CrossDomainWindowType {\n\n    if (!win) {\n        return;\n    }\n\n    try {\n        if (win.parent && win.parent !== win) {\n            return win.parent;\n        }\n    } catch (err) {\n        // pass\n    }\n}\n\nexport function getOpener(win : ?CrossDomainWindowType) : ?CrossDomainWindowType {\n\n    if (!win) {\n        return;\n    }\n\n    // Make sure we're not actually an iframe which has had window.open() called on us\n    if (getParent(win)) {\n        return;\n    }\n\n    try {\n        return win.opener;\n    } catch (err) {\n        // pass\n    }\n}\n\nexport function canReadFromWindow(win : CrossDomainWindowType | SameDomainWindowType) : boolean {\n    try {\n        // $FlowFixMe\n        noop(win && win.location && win.location.href);\n        return true;\n    } catch (err) {\n        // pass\n    }\n\n    return false;\n}\n\nexport function getActualDomain(win : ?SameDomainWindowType) : string {\n\n    win = win || window;\n\n    let location = win.location;\n\n    if (!location) {\n        throw new Error(`Can not read window location`);\n    }\n\n    let protocol = location.protocol;\n\n    if (!protocol) {\n        throw new Error(`Can not read window protocol`);\n    }\n\n    if (protocol === PROTOCOL.FILE) {\n        return `${ PROTOCOL.FILE }//`;\n    }\n\n    if (protocol === PROTOCOL.ABOUT) {\n\n        let parent = getParent(win);\n        if (parent && canReadFromWindow(parent)) {\n            // $FlowFixMe\n            return getActualDomain(parent);\n        }\n\n        return `${ PROTOCOL.ABOUT }//`;\n    }\n\n    let host = location.host;\n\n    if (!host) {\n        throw new Error(`Can not read window host`);\n    }\n\n    return `${ protocol }//${ host }`;\n}\n\nexport function getDomain(win : ?SameDomainWindowType) : string {\n\n    win = win || window;\n\n    let domain = getActualDomain(win);\n\n    if (domain && win.mockDomain && win.mockDomain.indexOf(PROTOCOL.MOCK) === 0) {\n        return win.mockDomain;\n    }\n\n    return domain;\n}\n\nexport function isBlankDomain(win : CrossDomainWindowType) : boolean {\n    try {\n        // $FlowFixMe\n        if (!win.location.href) {\n            return true;\n        }\n\n        if (win.location.href === 'about:blank') {\n            return true;\n        }\n    } catch (err) {\n        // pass\n    }\n\n    return false;\n}\n\nexport function isActuallySameDomain(win : CrossDomainWindowType) : boolean {\n\n    try {\n        if (win === window) {\n            return true;\n        }\n\n    } catch (err) {\n        // pass\n    }\n\n    try {\n        let desc = Object.getOwnPropertyDescriptor(win, 'location');\n\n        if (desc && desc.enumerable === false) {\n            return false;\n        }\n\n    } catch (err) {\n        // pass\n    }\n\n    try {\n        // $FlowFixMe\n        if (isAboutProtocol(win) && canReadFromWindow(win)) {\n            return true;\n        }\n    } catch (err) {\n        // pass\n    }\n\n    try {\n        // $FlowFixMe\n        if (getActualDomain(win) === getActualDomain(window)) {\n            return true;\n        }\n\n    } catch (err) {\n        // pass\n    }\n\n    return false;\n}\n\nexport function isSameDomain(win : CrossDomainWindowType | SameDomainWindowType) : boolean {\n\n    if (!isActuallySameDomain(win)) {\n        return false;\n    }\n\n    try {\n\n        if (win === window) {\n            return true;\n        }\n\n        // $FlowFixMe\n        if (isAboutProtocol(win) && canReadFromWindow(win)) {\n            return true;\n        }\n\n        // $FlowFixMe\n        if (getDomain(window) === getDomain(win)) {\n            return true;\n        }\n\n    } catch (err) {\n        // pass\n    }\n\n    return false;\n}\n\n\nexport function assertSameDomain(win : CrossDomainWindowType | SameDomainWindowType) : SameDomainWindowType {\n    if (!isSameDomain(win)) {\n        throw new Error(`Expected window to be same domain`);\n    }\n\n    // $FlowFixMe\n    return win;\n}\n\nexport function getParents(win : CrossDomainWindowType) : Array<CrossDomainWindowType> {\n\n    let result = [];\n\n    try {\n\n        while (win.parent !== win) {\n            result.push(win.parent);\n            win = win.parent;\n        }\n\n    } catch (err) {\n        // pass\n    }\n\n    return result;\n}\n\nexport function isAncestorParent(parent : CrossDomainWindowType, child : CrossDomainWindowType) : boolean {\n\n    if (!parent || !child) {\n        return false;\n    }\n\n    let childParent = getParent(child);\n\n    if (childParent) {\n        return childParent === parent;\n    }\n\n    if (getParents(child).indexOf(parent) !== -1) {\n        return true;\n    }\n\n    return false;\n}\n\nexport function getFrames(win : CrossDomainWindowType) : Array<CrossDomainWindowType> {\n\n    let result = [];\n\n    let frames;\n\n    try {\n        frames = win.frames;\n    } catch (err) {\n        frames = win;\n    }\n\n    let len;\n\n    try {\n        len = frames.length;\n    } catch (err) {\n        // pass\n    }\n\n    if (len === 0) {\n        return result;\n    }\n\n    if (len) {\n        for (let i = 0; i < len; i++) {\n\n            let frame;\n\n            try {\n                frame = frames[i];\n            } catch (err) {\n                continue;\n            }\n\n            result.push(frame);\n        }\n\n        return result;\n    }\n\n    for (let i = 0; i < 100; i++) {\n        let frame;\n\n        try {\n            frame = frames[i];\n        } catch (err) {\n            return result;\n        }\n\n        if (!frame) {\n            return result;\n        }\n\n        result.push(frame);\n    }\n\n    return result;\n}\n\n\nexport function getAllChildFrames(win : CrossDomainWindowType) : Array<CrossDomainWindowType> {\n\n    let result = [];\n\n    for (let frame of getFrames(win)) {\n        result.push(frame);\n\n        for (let childFrame of getAllChildFrames(frame)) {\n            result.push(childFrame);\n        }\n    }\n\n    return result;\n}\n\nexport function getTop(win : CrossDomainWindowType) : ?CrossDomainWindowType {\n\n    if (!win) {\n        return;\n    }\n\n    try {\n        if (win.top) {\n            return win.top;\n        }\n    } catch (err) {\n        // pass\n    }\n\n    if (getParent(win) === win) {\n        return win;\n    }\n\n    try {\n        if (isAncestorParent(window, win) && window.top) {\n            return window.top;\n        }\n    } catch (err) {\n        // pass\n    }\n\n    try {\n        if (isAncestorParent(win, window) && window.top) {\n            return window.top;\n        }\n    } catch (err) {\n        // pass\n    }\n\n    for (let frame of getAllChildFrames(win)) {\n        try {\n            if (frame.top) {\n                return frame.top;\n            }\n        } catch (err) {\n            // pass\n        }\n\n        if (getParent(frame) === frame) {\n            return frame;\n        }\n    }\n}\n\nexport function getNextOpener(win? : CrossDomainWindowType = window) : ?CrossDomainWindowType {\n    return getOpener(getTop(win) || win);\n}\n\nexport function getUltimateTop(win? : CrossDomainWindowType = window) : CrossDomainWindowType {\n    let opener = getNextOpener(win);\n\n    if (opener) {\n        return getUltimateTop(opener);\n    }\n\n    return top;\n}\n\nexport function getAllFramesInWindow(win : CrossDomainWindowType) : Array<CrossDomainWindowType> {\n    let top = getTop(win);\n\n    if (!top) {\n        throw new Error(`Can not determine top window`);\n    }\n\n    return [ ...getAllChildFrames(top), top ];\n}\n\nexport function getAllWindows(win? : CrossDomainWindowType = window) : $ReadOnlyArray<CrossDomainWindowType> {\n    let frames = getAllFramesInWindow(win);\n    let opener = getNextOpener(win);\n\n    if (opener) {\n        return [ ...getAllWindows(opener), ...frames ];\n    } else {\n        return frames;\n    }\n}\n\nexport function isTop(win : CrossDomainWindowType) : boolean {\n    return win === getTop(win);\n}\n\nexport function isFrameWindowClosed(frame : HTMLIFrameElement) : boolean {\n\n    if (!frame.contentWindow) {\n        return true;\n    }\n\n    if (!frame.parentNode) {\n        return true;\n    }\n\n    let doc = frame.ownerDocument;\n\n    if (doc && doc.documentElement && !doc.documentElement.contains(frame)) {\n        return true;\n    }\n\n    return false;\n}\n\nfunction safeIndexOf<T>(collection : Array<T>, item : T) : number {\n    for (let i = 0; i < collection.length; i++) {\n\n        try {\n            if (collection[i] === item) {\n                return i;\n            }\n        } catch (err) {\n            // pass\n        }\n    }\n\n    return -1;\n}\n\nlet iframeWindows = [];\nlet iframeFrames = [];\n\nexport function isWindowClosed(win : CrossDomainWindowType, allowMock : boolean = true) : boolean {\n\n    try {\n        if (win === window) {\n            return false;\n        }\n    } catch (err) {\n        return true;\n    }\n\n    try {\n        if (!win) {\n            return true;\n        }\n\n    } catch (err) {\n        return true;\n    }\n\n    try {\n        if (win.closed) {\n            return true;\n        }\n\n    } catch (err) {\n\n        // I love you so much IE\n\n        if (err && err.message === IE_WIN_ACCESS_ERROR) {\n            return false;\n        }\n\n        return true;\n    }\n\n\n    if (allowMock && isSameDomain(win)) {\n        try {\n            // $FlowFixMe\n            if (win.mockclosed) {\n                return true;\n            }\n        } catch (err) {\n            // pass\n        }\n    }\n\n    // Mobile safari\n\n    try {\n        if (!win.parent || !win.top) {\n            return true;\n        }\n    } catch (err) {\n        // pass\n    }\n\n    // Yes, this actually happens in IE. win === win errors out when the window\n    // is from an iframe, and the iframe was removed from the page.\n\n    try {\n        noop(win === win); // eslint-disable-line no-self-compare\n    } catch (err) {\n        return true;\n    }\n\n    // IE orphaned frame\n\n    let iframeIndex = safeIndexOf(iframeWindows, win);\n\n    if (iframeIndex !== -1) {\n        let frame = iframeFrames[iframeIndex];\n\n        if (frame && isFrameWindowClosed(frame)) {\n            return true;\n        }\n    }\n\n    return false;\n}\n\nfunction cleanIframes() {\n    for (let i = 0; i < iframeWindows.length; i++) {\n        let closed = false;\n\n        try {\n            closed = iframeWindows[i].closed;\n        } catch (err) {\n            // pass\n        }\n\n        if (closed) {\n            iframeFrames.splice(i, 1);\n            iframeWindows.splice(i, 1);\n        }\n    }\n}\n\nexport function linkFrameWindow(frame : HTMLIFrameElement) {\n\n    cleanIframes();\n\n    if (frame && frame.contentWindow) {\n        try {\n            iframeWindows.push(frame.contentWindow);\n            iframeFrames.push(frame);\n        } catch (err) {\n            // pass\n        }\n    }\n}\n\nexport function getUserAgent(win : ?SameDomainWindowType) : string {\n    win = win || window;\n    return win.navigator.mockUserAgent || win.navigator.userAgent;\n}\n\n\nexport function getFrameByName(win : CrossDomainWindowType, name : string) : ?CrossDomainWindowType {\n\n    let winFrames = getFrames(win);\n\n    for (let childFrame of winFrames) {\n        try {\n            // $FlowFixMe\n            if (isSameDomain(childFrame) && childFrame.name === name && winFrames.indexOf(childFrame) !== -1) {\n                return childFrame;\n            }\n        } catch (err) {\n            // pass\n        }\n    }\n\n    try {\n        // $FlowFixMe\n        if (winFrames.indexOf(win.frames[name]) !== -1) {\n            // $FlowFixMe\n            return win.frames[name];\n        }\n    } catch (err) {\n        // pass\n    }\n\n    try {\n        if (winFrames.indexOf(win[name]) !== -1) {\n            return win[name];\n        }\n    } catch (err) {\n        // pass\n    }\n}\n\nexport function findChildFrameByName(win : CrossDomainWindowType, name : string) : ?CrossDomainWindowType {\n\n    let frame = getFrameByName(win, name);\n\n    if (frame) {\n        return frame;\n    }\n\n    for (let childFrame of getFrames(win)) {\n        let namedFrame = findChildFrameByName(childFrame, name);\n\n        if (namedFrame) {\n            return namedFrame;\n        }\n    }\n}\n\nexport function findFrameByName(win : CrossDomainWindowType, name : string) : ?CrossDomainWindowType {\n\n    let frame;\n\n    frame = getFrameByName(win, name);\n\n    if (frame) {\n        return frame;\n    }\n\n    let top = getTop(win) || win;\n\n    return findChildFrameByName(top, name);\n}\n\nexport function isParent(win : CrossDomainWindowType, frame : CrossDomainWindowType) : boolean {\n\n    let frameParent = getParent(frame);\n\n    if (frameParent) {\n        return frameParent === win;\n    }\n\n    for (let childFrame of getFrames(win)) {\n        if (childFrame === frame) {\n            return true;\n        }\n    }\n\n    return false;\n}\n\nexport function isOpener(parent : CrossDomainWindowType, child : CrossDomainWindowType) : boolean {\n\n    return parent === getOpener(child);\n}\n\nexport function getAncestor(win : ?CrossDomainWindowType) : ?CrossDomainWindowType {\n    win = win || window;\n\n    let opener = getOpener(win);\n\n    if (opener) {\n        return opener;\n    }\n\n    let parent = getParent(win);\n\n    if (parent) {\n        return parent;\n    }\n}\n\nexport function getAncestors(win : CrossDomainWindowType) : Array<CrossDomainWindowType> {\n\n    let results = [];\n\n    let ancestor = win;\n\n    while (ancestor) {\n        ancestor = getAncestor(ancestor);\n        if (ancestor) {\n            results.push(ancestor);\n        }\n    }\n\n    return results;\n}\n\n\nexport function isAncestor(parent : CrossDomainWindowType, child : CrossDomainWindowType) : boolean {\n\n    let actualParent = getAncestor(child);\n\n    if (actualParent) {\n        if (actualParent === parent) {\n            return true;\n        }\n\n        return false;\n    }\n\n    if (child === parent) {\n        return false;\n    }\n\n    if (getTop(child) === child) {\n        return false;\n    }\n\n    for (let frame of getFrames(parent)) {\n        if (frame === child) {\n            return true;\n        }\n    }\n\n    return false;\n}\n\nexport function isPopup() : boolean {\n    return Boolean(getOpener(window));\n}\n\nexport function isIframe() : boolean {\n    return Boolean(getParent(window));\n}\n\nexport function isFullpage() : boolean {\n    return Boolean(!isIframe() && !isPopup());\n}\n\nfunction anyMatch(collection1, collection2) : boolean {\n\n    for (let item1 of collection1) {\n        for (let item2 of collection2) {\n            if (item1 === item2) {\n                return true;\n            }\n        }\n    }\n\n    return false;\n}\n\nexport function getDistanceFromTop(win : CrossDomainWindowType = window) : number {\n    let distance = 0;\n    let parent = win;\n\n    while (parent) {\n        parent = getParent(parent);\n        if (parent) {\n            distance += 1;\n        }\n    }\n\n    return distance;\n}\n\nexport function getNthParent(win : CrossDomainWindowType, n : number = 1) : ?CrossDomainWindowType {\n    let parent = win;\n\n    for (let i = 0; i < n; i++) {\n        if (!parent) {\n            return;\n        }\n\n        parent = getParent(parent);\n    }\n\n    return parent;\n}\n\nexport function getNthParentFromTop(win : CrossDomainWindowType, n : number = 1) : ?CrossDomainWindowType {\n    return getNthParent(win, getDistanceFromTop(win) - n);\n}\n\nexport function isSameTopWindow(win1 : CrossDomainWindowType, win2 : CrossDomainWindowType) : boolean {\n\n    let top1 = getTop(win1) || win1;\n    let top2 = getTop(win2) || win2;\n\n    try {\n        if (top1 && top2) {\n            if (top1 === top2) {\n                return true;\n            }\n\n            return false;\n        }\n    } catch (err) {\n        // pass\n    }\n\n    let allFrames1 = getAllFramesInWindow(win1);\n    let allFrames2 = getAllFramesInWindow(win2);\n\n    if (anyMatch(allFrames1, allFrames2)) {\n        return true;\n    }\n\n    let opener1 = getOpener(top1);\n    let opener2 = getOpener(top2);\n\n    if (opener1 && anyMatch(getAllFramesInWindow(opener1), allFrames2)) {\n        return false;\n    }\n\n    if (opener2 && anyMatch(getAllFramesInWindow(opener2), allFrames1)) {\n        return false;\n    }\n\n    return false;\n}\n\nexport function matchDomain(pattern : DomainMatcher, origin : DomainMatcher) : boolean {\n\n    if (typeof pattern === 'string') {\n\n        if (typeof origin === 'string') {\n            return pattern === WILDCARD || origin === pattern;\n        }\n\n        if (isRegex(origin)) {\n            return false;\n        }\n\n        if (Array.isArray(origin)) {\n            return false;\n        }\n    }\n\n    if (isRegex(pattern)) {\n\n        if (isRegex(origin)) {\n            return pattern.toString() === origin.toString();\n        }\n\n        if (Array.isArray(origin)) {\n            return false;\n        }\n\n        // $FlowFixMe\n        return Boolean(origin.match(pattern));\n    }\n\n    if (Array.isArray(pattern)) {\n\n        if (Array.isArray(origin)) {\n            return JSON.stringify(pattern) === JSON.stringify(origin);\n        }\n\n        if (isRegex(origin)) {\n            return false;\n        }\n\n        return pattern.some(subpattern => matchDomain(subpattern, origin));\n    }\n\n    return false;\n}\n\nexport function stringifyDomainPattern(pattern : DomainMatcher) : string {\n    if (Array.isArray(pattern)) {\n        return `(${ pattern.join(' | ') })`;\n    } else if (isRegex(pattern)) {\n        return `RegExp(${ pattern.toString() }`;\n    } else {\n        return pattern.toString();\n    }\n}\n\nexport function getDomainFromUrl(url : string) : string {\n\n    let domain;\n\n    if (url.match(/^(https?|mock|file):\\/\\//)) {\n        domain = url;\n    } else {\n        return getDomain();\n    }\n\n    domain = domain.split('/').slice(0, 3).join('/');\n\n    return domain;\n}\n\nexport function onCloseWindow(win : CrossDomainWindowType, callback : Function, delay : number = 1000, maxtime : number = Infinity) : { cancel : () => void } {\n\n    let timeout;\n\n    let check = () => {\n\n        if (isWindowClosed(win)) {\n\n            if (timeout) {\n                clearTimeout(timeout);\n            }\n\n            return callback();\n        }\n\n        if (maxtime <= 0) {\n            clearTimeout(timeout);\n        } else {\n            maxtime -= delay;\n            timeout = setTimeout(check, delay);\n        }\n    };\n\n    check();\n\n    return {\n        cancel() {\n            if (timeout) {\n                clearTimeout(timeout);\n            }\n        }\n    };\n}\n\n// eslint-disable-next-line complexity\nexport function isWindow(obj : Object) : boolean {\n\n    try {\n        if (obj === window) {\n            return true;\n        }\n    } catch (err) {\n        if (err && err.message === IE_WIN_ACCESS_ERROR) {\n            return true;\n        }\n    }\n\n    try {\n        if (Object.prototype.toString.call(obj) === '[object Window]') {\n            return true;\n        }\n    } catch (err) {\n        if (err && err.message === IE_WIN_ACCESS_ERROR) {\n            return true;\n        }\n    }\n\n    try {\n        if (window.Window && obj instanceof window.Window) {\n            return true;\n        }\n    } catch (err) {\n        if (err && err.message === IE_WIN_ACCESS_ERROR) {\n            return true;\n        }\n    }\n\n    try {\n        if (obj && obj.self === obj) {\n            return true;\n        }\n    } catch (err) {\n        if (err && err.message === IE_WIN_ACCESS_ERROR) {\n            return true;\n        }\n    }\n\n    try {\n        if (obj && obj.parent === obj) {\n            return true;\n        }\n    } catch (err) {\n        if (err && err.message === IE_WIN_ACCESS_ERROR) {\n            return true;\n        }\n    }\n\n    try {\n        if (obj && obj.top === obj) {\n            return true;\n        }\n    } catch (err) {\n        if (err && err.message === IE_WIN_ACCESS_ERROR) {\n            return true;\n        }\n    }\n\n    try {\n        noop(obj === obj);  // eslint-disable-line no-self-compare\n\n    } catch (err) {\n        return true;\n    }\n\n    try {\n        noop(obj && obj.__cross_domain_utils_window_check__);\n\n    } catch (err) {\n        return true;\n    }\n\n    return false;\n}\n\nexport function isBrowser() : boolean {\n    return (typeof window !== 'undefined' && typeof window.location !== 'undefined');\n}\n\nexport function isCurrentDomain(domain : string) : boolean {\n    if (!isBrowser()) {\n        return false;\n    }\n\n    return (getDomain() === domain);\n}\n\nexport function isMockDomain(domain : string) : boolean {\n    return domain.indexOf(PROTOCOL.MOCK) === 0;\n}\n\nexport function normalizeMockUrl(url : string) : string {\n    if (!isMockDomain(getDomainFromUrl(url))) {\n        return url;\n    }\n\n    if (!__TEST__) {\n        throw new Error(`Mock urls not supported out of test mode`);\n    }\n\n    return url.replace(/^mock:\\/\\/[^/]+/, getActualDomain(window));\n}\n","export default function _applyDecoratedDescriptor(target, property, decorators, descriptor, context) {\n  var desc = {};\n  Object['ke' + 'ys'](descriptor).forEach(function (key) {\n    desc[key] = descriptor[key];\n  });\n  desc.enumerable = !!desc.enumerable;\n  desc.configurable = !!desc.configurable;\n\n  if ('value' in desc || desc.initializer) {\n    desc.writable = true;\n  }\n\n  desc = decorators.slice().reverse().reduce(function (desc, decorator) {\n    return decorator(target, property, desc) || desc;\n  }, desc);\n\n  if (context && desc.initializer !== void 0) {\n    desc.value = desc.initializer ? desc.initializer.call(context) : void 0;\n    desc.initializer = undefined;\n  }\n\n  if (desc.initializer === void 0) {\n    Object['define' + 'Property'](target, property, desc);\n    desc = null;\n  }\n\n  return desc;\n}","/* @flow */\n\nexport const MESSAGE_TYPE = {\n    REQUEST:  ('postrobot_message_request' : 'postrobot_message_request'),\n    RESPONSE: ('postrobot_message_response' : 'postrobot_message_response'),\n    ACK:      ('postrobot_message_ack' : 'postrobot_message_ack')\n};\n\nexport const MESSAGE_ACK = {\n    SUCCESS: ('success' : 'success'),\n    ERROR:   ('error' : 'error')\n};\n\nexport const MESSAGE_NAME = {\n    METHOD:      ('postrobot_method' : 'postrobot_method'),\n    HELLO:       ('postrobot_hello' : 'postrobot_hello'),\n    OPEN_TUNNEL: ('postrobot_open_tunnel' : 'postrobot_open_tunnel')\n};\n\nexport const WINDOW_PROP = {\n    POSTROBOT: ('__postRobot__' : '__postRobot__')\n};\n\nexport const SEND_STRATEGY = {\n    POST_MESSAGE: ('postrobot_post_message' : 'postrobot_post_message'),\n    BRIDGE:       ('postrobot_bridge' : 'postrobot_bridge'),\n    GLOBAL:       ('postrobot_global' : 'postrobot_global')\n};\n\nexport const PROTOCOL = {\n    MOCK: ('mock:' : 'mock:'),\n    FILE: ('file:' : 'file:')\n};\n\nexport const BRIDGE_NAME_PREFIX = '__postrobot_bridge__';\nexport const POSTROBOT_PROXY =    '__postrobot_proxy__';\n\nexport const WILDCARD = '*';\n\nexport const SERIALIZATION_TYPE = {\n    CROSS_DOMAIN_ZALGO_PROMISE: ('cross_domain_zalgo_promise' : 'cross_domain_zalgo_promise'),\n    CROSS_DOMAIN_FUNCTION:      ('cross_domain_function' : 'cross_domain_function'),\n    CROSS_DOMAIN_WINDOW:        ('cross_domain_window' : 'cross_domain_window')\n};\n","/* @flow */\n\nimport { SEND_STRATEGY } from './constants';\n\nexport let CONFIG : Object = {\n    BRIDGE_TIMEOUT:       5000,\n    CHILD_WINDOW_TIMEOUT: 5000,\n\n    ACK_TIMEOUT:       2000,\n    ACK_TIMEOUT_KNOWN: 10000,\n    RES_TIMEOUT:       __TEST__ ? 2000 : -1,\n    \n    ALLOWED_POST_MESSAGE_METHODS: {\n        [ SEND_STRATEGY.POST_MESSAGE ]: true,\n        [ SEND_STRATEGY.BRIDGE ]:       true,\n        [ SEND_STRATEGY.GLOBAL ]:       true\n    }\n};\n","/* @flow */\n\nimport { type CrossDomainWindowType } from 'cross-domain-utils/src';\nimport { WeakMap } from 'cross-domain-safe-weakmap/src';\nimport { getOrSet } from 'belter/src';\n\nimport { WINDOW_PROP } from './conf';\n\nexport let global : Object = window[WINDOW_PROP.POSTROBOT] = window[WINDOW_PROP.POSTROBOT] || {};\nlet winStore = global.windowStore = global.windowStore || new WeakMap();\n\ntype WindowStore<T> = {|\n    get : ((CrossDomainWindowType, T) => T) & ((CrossDomainWindowType, void) => T | void),\n    set : (CrossDomainWindowType, T) => T,\n    has : (CrossDomainWindowType) => boolean,\n    del : (CrossDomainWindowType) => void,\n    getOrSet : (CrossDomainWindowType, () => T) => T\n|};\n\ntype ObjectGetter = () => Object;\n\nlet getObj : ObjectGetter = () => ({});\n\n// $FlowFixMe\nexport function windowStore<T>(key : string, defStore? : ObjectGetter = getObj) : WindowStore<T> {\n\n    function getStore(win : CrossDomainWindowType) : ObjectGetter {\n        return winStore.getOrSet(win, defStore);\n    }\n\n    return {\n        has: (win) => {\n            let store = getStore(win);\n            return store.hasOwnProperty(key);\n        },\n        get: (win, defVal) => {\n            let store = getStore(win);\n            // $FlowFixMe\n            return store.hasOwnProperty(key) ? store[key] : defVal;\n        },\n        set: (win, val) => {\n            let store = getStore(win);\n            store[key] = val;\n            return val;\n        },\n        del: (win) => {\n            let store = getStore(win);\n            delete store[key];\n        },\n        getOrSet: (win, getter) => {\n            let store = getStore(win);\n            if (store.hasOwnProperty(key)) {\n                return store[key];\n            }\n            let val = getter();\n            store[key] = val;\n            return val;\n        }\n    };\n}\n\ntype GlobalStore<T> = {|\n    get : ((string, T) => T) & ((string, void) => T | void),\n    set : (string, T) => T,\n    has : (string) => boolean,\n    del : (string) => void,\n    getOrSet : (string, () => T) => T,\n    reset : () => void,\n    keys : () => $ReadOnlyArray<string>\n|};\n\n// $FlowFixMe\nexport function globalStore<T : mixed>(key : string, defStore? : ObjectGetter = getObj) : GlobalStore<T> {\n    let store = getOrSet(global, key, defStore);\n\n    return {\n        has: (storeKey) => {\n            return store.hasOwnProperty(storeKey);\n        },\n        get: (storeKey, defVal) => {\n            // $FlowFixMe\n            return store.hasOwnProperty(storeKey) ? store[storeKey] : defVal;\n        },\n        set: (storeKey, val) => {\n            store[storeKey] = val;\n            return val;\n        },\n        del: (storeKey) => {\n            delete store[storeKey];\n        },\n        getOrSet: (storeKey, getter) => {\n            if (store.hasOwnProperty(storeKey)) {\n                return store[storeKey];\n            }\n            let val = getter();\n            store[storeKey] = val;\n            return val;\n        },\n        reset: () => {\n            store = defStore();\n        },\n        keys: () => {\n            return Object.keys(store);\n        }\n    };\n}\n","/* @flow */\n\nimport { getAncestor, type CrossDomainWindowType } from 'cross-domain-utils/src';\nimport { ZalgoPromise } from 'zalgo-promise/src';\nimport { noop, uniqueID, once, weakMapMemoizePromise } from 'belter/src';\n\nimport { MESSAGE_NAME, WILDCARD } from '../conf';\nimport { global, windowStore } from '../global';\n\nglobal.instanceID = global.instanceID || uniqueID();\nlet helloPromises = windowStore('helloPromises');\n\nfunction getHelloPromise(win : CrossDomainWindowType) : ZalgoPromise<{ win : CrossDomainWindowType, domain : string }> {\n    return helloPromises.getOrSet(win, () => new ZalgoPromise());\n}\n\nconst listenForHello = once(() => {\n    global.on(MESSAGE_NAME.HELLO, { domain: WILDCARD }, ({ source, origin }) => {\n        getHelloPromise(source).resolve({ win: source, domain: origin });\n        return { instanceID: global.instanceID };\n    });\n});\n\nexport function sayHello(win : CrossDomainWindowType) : ZalgoPromise<{ win : CrossDomainWindowType, domain : string, instanceID : string }> {\n    return global.send(win, MESSAGE_NAME.HELLO, { instanceID: global.instanceID }, { domain: WILDCARD, timeout: -1 })\n        .then(({ origin, data: { instanceID } }) => {\n            getHelloPromise(win).resolve({ win, domain: origin });\n            return { win, domain: origin, instanceID };\n        });\n}\n\nexport let getWindowInstanceID = weakMapMemoizePromise((win : CrossDomainWindowType) : ZalgoPromise<string> => {\n    return sayHello(win).then(({ instanceID }) => instanceID);\n});\n\nexport function initHello() {\n    listenForHello();\n\n    let parent = getAncestor();\n    if (parent) {\n        sayHello(parent).catch(noop);\n    }\n}\n\nexport function awaitWindowHello(win : CrossDomainWindowType, timeout : number = 5000, name : string = 'Window') : ZalgoPromise<{ win : CrossDomainWindowType, domain : string }> {\n    let promise = getHelloPromise(win);\n\n    if (timeout !== -1) {\n        promise = promise.timeout(timeout, new Error(`${ name } did not load after ${ timeout }ms`));\n    }\n\n    return promise;\n}\n","/* @flow */\n\nimport { type CrossDomainWindowType } from 'cross-domain-utils/src';\n\nimport { windowStore } from '../global';\n\nlet knownWindows = windowStore('knownWindows');\n\nexport function markWindowKnown(win : CrossDomainWindowType) {\n    knownWindows.set(win, true);\n}\n\nexport function isWindowKnown(win : CrossDomainWindowType) : boolean {\n    return knownWindows.get(win, false);\n}\n","/* @flow */\n\nexport const TYPE = {\n    FUNCTION:  ('function' : 'function'),\n    ERROR:     ('error' : 'error'),\n    PROMISE:   ('promise' : 'promise'),\n    REGEX:     ('regex' : 'regex'),\n    DATE:      ('date' : 'date'),\n    ARRAY:     ('array' : 'array'),\n    OBJECT:    ('object' : 'object'),\n    STRING:    ('string' : 'string'),\n    NUMBER:    ('number' : 'number'),\n    BOOLEAN:   ('boolean' : 'boolean'),\n    NULL:      ('null' : 'null'),\n    UNDEFINED: ('undefined' : 'undefined')\n};\n","/* @flow */\n\nimport { TYPE } from './constants';\nimport type { CustomSerializedType } from './types';\n\nexport function isSerializedType(item : mixed) : boolean {\n    return (typeof item === 'object' && item !== null && typeof item.__type__ === 'string');\n}\n\nexport function determineType(val : mixed) : $Values<typeof TYPE> | void {\n    if (typeof val === 'undefined') {\n        return TYPE.UNDEFINED;\n    }\n\n    if (val === null) {\n        return TYPE.NULL;\n    }\n\n    if (Array.isArray(val)) {\n        return TYPE.ARRAY;\n    }\n\n    if (typeof val === 'function') {\n        return TYPE.FUNCTION;\n    }\n\n    if (typeof val === 'object') {\n\n        if (val instanceof Error) {\n            return TYPE.ERROR;\n        }\n\n        if (typeof val.then === 'function') {\n            return TYPE.PROMISE;\n        }\n\n        if (Object.prototype.toString.call(val) === '[object RegExp]') {\n            return TYPE.REGEX;\n        }\n\n        if (Object.prototype.toString.call(val) === '[object Date]') {\n            return TYPE.DATE;\n        }\n\n        return TYPE.OBJECT;\n    }\n\n    if (typeof val === 'string') {\n        return TYPE.STRING;\n    }\n\n    if (typeof val === 'number') {\n        return TYPE.NUMBER;\n    }\n\n    if (typeof val === 'boolean') {\n        return TYPE.BOOLEAN;\n    }\n}\n\nexport function serializeType<T : string, V : mixed>(type : T, val : V) : CustomSerializedType<T, V> {\n    return {\n        __type__: type,\n        __val__:  val\n    };\n}\n","/* @flow */\n\nimport { TYPE } from './constants';\nimport type { Thenable, CustomSerializedType, NativeSerializedType } from './types';\nimport { determineType, isSerializedType } from './common';\nimport {\n    serializeFunction,\n    serializeError, type SerializedError,\n    serializePromise,\n    serializeRegex, type SerializedRegex,\n    serializeDate, type SerializedDate,\n    serializeArray,\n    serializeObject,\n    serializeString,\n    serializeNumber,\n    serializeBoolean,\n    serializeNull\n} from './serializers';\n\ntype NativeSerializer<V : mixed, S : mixed, T : $Values<typeof TYPE>> = (value : V, key : string) => NativeSerializedType<T, S>;\ntype CustomSerializer<V : mixed, S : mixed, T : string> = (value : V, key : string) => CustomSerializedType<T, S>;\ntype PrimitiveSerializer<V : mixed, S : mixed> = (value : V, key : string) => S;\ntype CustomOrPrimitiveSerializer<V : mixed, T : string> = CustomSerializer<V, *, T> | PrimitiveSerializer<V, *>;\ntype NativeOrCustomOrPrimitiveSerializer<V : mixed, S : mixed, T : string> = NativeSerializer<V, S, T> | CustomOrPrimitiveSerializer<V, T>;\n\ntype Serializers = {|\n    function? : CustomOrPrimitiveSerializer<Function, typeof TYPE.FUNCTION>,\n    error? : NativeOrCustomOrPrimitiveSerializer<Error, SerializedError, typeof TYPE.ERROR>,\n    promise? : CustomOrPrimitiveSerializer<Thenable, typeof TYPE.PROMISE>,\n    regex? : NativeOrCustomOrPrimitiveSerializer<RegExp, SerializedRegex, typeof TYPE.REGEX>,\n    date? : NativeOrCustomOrPrimitiveSerializer<Date, SerializedDate, typeof TYPE.DATE>,\n    array? : CustomOrPrimitiveSerializer<$ReadOnlyArray<mixed>, typeof TYPE.ARRAY>,\n    object? : CustomOrPrimitiveSerializer<Object, typeof TYPE.OBJECT>,\n    string? : CustomOrPrimitiveSerializer<string, typeof TYPE.STRING>,\n    number? : CustomOrPrimitiveSerializer<number, typeof TYPE.NUMBER>,\n    boolean? : CustomOrPrimitiveSerializer<boolean, typeof TYPE.BOOLEAN>,\n    null? : CustomOrPrimitiveSerializer<null, typeof TYPE.NULL>\n|};\n\nconst SERIALIZER : Serializers = {\n    [ TYPE.FUNCTION ]:  serializeFunction,\n    [ TYPE.ERROR ]:     serializeError,\n    [ TYPE.PROMISE ]:   serializePromise,\n    [ TYPE.REGEX ]:     serializeRegex,\n    [ TYPE.DATE ]:      serializeDate,\n    [ TYPE.ARRAY ]:     serializeArray,\n    [ TYPE.OBJECT ]:    serializeObject,\n    [ TYPE.STRING ]:    serializeString,\n    [ TYPE.NUMBER ]:    serializeNumber,\n    [ TYPE.BOOLEAN ]:   serializeBoolean,\n    [ TYPE.NULL ]:      serializeNull\n};\n\n// $FlowFixMe\nconst defaultSerializers : Serializers = {};\n\nexport function serialize<T : mixed>(obj : T, serializers : Serializers = defaultSerializers) : string {\n\n    function replacer(key) : ?mixed {\n        const val = this[key];\n\n        if (isSerializedType(this)) {\n            return val;\n        }\n        \n        const type = determineType(val);\n\n        if (!type) {\n            return val;\n        }\n\n        // $FlowFixMe\n        const serializer = serializers[type] || SERIALIZER[type];\n\n        if (!serializer) {\n            return val;\n        }\n\n        return serializer(val, key);\n    }\n\n    const result = JSON.stringify(obj, replacer);\n\n    if (typeof result === 'undefined') {\n        return TYPE.UNDEFINED;\n    }\n\n    return result;\n}\n","/* @flow */\n\nexport type SerializedFunction = void;\n\nexport function serializeFunction() : SerializedFunction {\n    // pass\n}\n\nexport function deserializeFunction() {\n    throw new Error(`Function serialization is not implemented; nothing to deserialize`);\n}\n","/* @flow */\n\nimport { serializeType } from '../common';\nimport { TYPE } from '../constants';\nimport type { NativeSerializedType } from '../types';\n\nexport type SerializedError = {|\n    message : string,\n    stack : string,\n    code : string | number | void\n|};\n\n// $FlowFixMe\nexport function serializeError({ message, stack, code } : Error) : NativeSerializedType<typeof TYPE.ERROR, SerializedError> {\n    return serializeType(TYPE.ERROR, { message, stack, code });\n}\n\nexport function deserializeError({ message, stack, code } : SerializedError) : Error {\n    const error = new Error(message);\n    // $FlowFixMe\n    error.code = code;\n    error.stack = `${ stack }\\n\\n${ error.stack }`;\n    return error;\n}\n","/* @flow */\n\nexport type SerializedPromise = void;\n\nexport function serializePromise() : SerializedPromise {\n    // pass\n}\n\nexport function deserializePromise() {\n    throw new Error(`Promise serialization is not implemented; nothing to deserialize`);\n}\n","/* @flow */\n\nimport { serializeType } from '../common';\nimport { TYPE } from '../constants';\nimport type { NativeSerializedType } from '../types';\n\nexport type SerializedRegex = string;\n\nexport function serializeRegex(val : RegExp) : NativeSerializedType<typeof TYPE.REGEX, SerializedRegex> {\n    return serializeType(TYPE.REGEX, val.source);\n}\n\nexport function deserializeRegex(val : string) : RegExp {\n    // eslint-disable-next-line security/detect-non-literal-regexp\n    return new RegExp(val);\n}\n","/* @flow */\n\nimport { serializeType } from '../common';\nimport { TYPE } from '../constants';\nimport type { NativeSerializedType } from '../types';\n\nexport type SerializedDate = string;\n\nexport function serializeDate(val : Date) : NativeSerializedType<typeof TYPE.DATE, SerializedDate> {\n    return serializeType(TYPE.DATE, val.toJSON());\n}\n\nexport function deserializeDate(val : string) : Date {\n    return new Date(val);\n}\n","/* @flow */\n\nexport type SerializedArray<T : mixed = mixed> = $ReadOnlyArray<T>;\n\nexport function serializeArray<T : mixed>(val : $ReadOnlyArray<T>) : SerializedArray<T> {\n    return val;\n}\n\nexport function deserializeArray<T : mixed>(val : SerializedArray<T>) : $ReadOnlyArray<T> {\n    return val;\n}\n","/* @flow */\n\nexport type SerializedObject = Object;\n\nexport function serializeObject(val : Object) : SerializedObject {\n    return val;\n}\n\nexport function deserializeObject(val : SerializedObject) : Object {\n    return val;\n}\n","/* @flow */\n\nexport type SerializedString = string;\n\nexport function serializeString(val : string) : SerializedString {\n    return val;\n}\n\nexport function deserializeString(val : SerializedString) : string {\n    return val;\n}\n","/* @flow */\n\nexport type SerializedNumber = number;\n\nexport function serializeNumber(val : number) : SerializedNumber {\n    return val;\n}\n\nexport function deserializeNumber(val : SerializedNumber) : number {\n    return val;\n}\n","/* @flow */\n\nexport type SerializedBoolean = boolean;\n\nexport function serializeBoolean(val : boolean) : SerializedBoolean {\n    return val;\n}\n\nexport function deserializeBoolean(val : SerializedBoolean) : boolean {\n    return val;\n}\n","/* @flow */\n\nexport type SerializedNull = null;\n\nexport function serializeNull(val : null) : SerializedNull {\n    return val;\n}\n\nexport function deserializeNull(val : SerializedNull) : null {\n    return val;\n}\n","/* @flow */\n\nimport type { Thenable } from './types';\nimport { TYPE } from './constants';\nimport { determineType, isSerializedType } from './common';\nimport {\n    deserializeFunction,\n    deserializeError, type SerializedError,\n    deserializePromise,\n    deserializeRegex, type SerializedRegex,\n    deserializeDate, type SerializedDate,\n    deserializeArray,\n    deserializeObject,\n    deserializeString,\n    deserializeNumber,\n    deserializeBoolean,\n    deserializeNull\n} from './serializers';\n\ntype Deserializer<V : mixed, S : mixed> = (serializedValue : S, key : string) => V;\ntype PrimitiveDeserializer<V, S = V> = (serializedValue : S, key : string) => V;\n\ntype Deserializers = {\n    function? : Deserializer<Function, *>,\n    error? : Deserializer<Error, SerializedError>,\n    promise? : Deserializer<Thenable, *>,\n    regex? : Deserializer<RegExp, SerializedRegex>,\n    date? : Deserializer<Date, SerializedDate>,\n    array? : PrimitiveDeserializer<$ReadOnlyArray<mixed>>,\n    object? : PrimitiveDeserializer<Object>,\n    string? : PrimitiveDeserializer<string>,\n    number? : PrimitiveDeserializer<number>,\n    boolean? : PrimitiveDeserializer<boolean>,\n    null? : PrimitiveDeserializer<null>,\n    [string] : Deserializer<mixed, *>\n};\n\n// $FlowFixMe\nconst DESERIALIZER : Deserializers = {\n    [ TYPE.FUNCTION ]:  deserializeFunction,\n    [ TYPE.ERROR ]:     deserializeError,\n    [ TYPE.PROMISE ]:   deserializePromise,\n    [ TYPE.REGEX ]:     deserializeRegex,\n    [ TYPE.DATE ]:      deserializeDate,\n    [ TYPE.ARRAY ]:     deserializeArray,\n    [ TYPE.OBJECT ]:    deserializeObject,\n    [ TYPE.STRING ]:    deserializeString,\n    [ TYPE.NUMBER ]:    deserializeNumber,\n    [ TYPE.BOOLEAN ]:   deserializeBoolean,\n    [ TYPE.NULL ]:      deserializeNull\n};\n\n// $FlowFixMe\nconst defaultDeserializers : Deserializers = {};\n\nexport function deserialize<T : mixed | null | void>(str : string, deserializers : Deserializers = defaultDeserializers) : T {\n    if (str === TYPE.UNDEFINED) {\n        // $FlowFixMe\n        return;\n    }\n\n    function replacer(key, val) : ?mixed {\n        if (isSerializedType(this)) {\n            return val;\n        }\n\n        let type;\n        let value;\n\n        if (isSerializedType(val)) {\n            type = val.__type__;\n            value = val.__val__;\n        } else {\n            type = determineType(val);\n            value = val;\n        }\n\n        if (!type) {\n            return value;\n        }\n\n        // $FlowFixMe\n        const deserializer = deserializers[type] || DESERIALIZER[type];\n\n        if (!deserializer) {\n            return value;\n        }\n\n        return deserializer(value, key);\n    }\n\n    return JSON.parse(str, replacer);\n}\n","/* @flow */\n\nimport { isSameDomain, isWindowClosed, type CrossDomainWindowType, type DomainMatcher, getOpener, WINDOW_TYPE, isWindow } from 'cross-domain-utils/src';\nimport { ZalgoPromise } from 'zalgo-promise/src';\nimport { uniqueID, memoizePromise } from 'belter/src';\nimport { serializeType, type CustomSerializedType } from 'universal-serialize/src';\n\nimport { SERIALIZATION_TYPE } from '../conf';\nimport { windowStore, globalStore } from '../global';\nimport { getWindowInstanceID } from '../lib';\n\nlet winToProxyWindow = windowStore('winToProxyWindow');\nlet idToProxyWindow = globalStore('idToProxyWindow');\n\nfunction cleanupProxyWindows() {\n    for (let id of idToProxyWindow.keys()) {\n        // $FlowFixMe\n        if (idToProxyWindow.get(id).shouldClean()) {\n            idToProxyWindow.del(id);\n        }\n    }\n}\n\ntype SerializedProxyWindow = {|\n    id : string,\n    type : $Values<typeof WINDOW_TYPE>,\n    close : () => ZalgoPromise<void>,\n    focus : () => ZalgoPromise<void>,\n    isClosed : () => ZalgoPromise<boolean>,\n    setLocation : (string) => ZalgoPromise<void>,\n    setName : (string) => ZalgoPromise<void>,\n    getInstanceID : () => ZalgoPromise<string>\n|};\n\nexport class ProxyWindow {\n\n    isProxyWindow : true = true\n    serializedWindow : SerializedProxyWindow\n    actualWindow : CrossDomainWindowType\n    actualWindowPromise : ZalgoPromise<CrossDomainWindowType>\n\n    constructor(serializedWindow : SerializedProxyWindow, actualWindow? : CrossDomainWindowType) {\n        this.serializedWindow = serializedWindow;\n        this.actualWindowPromise = new ZalgoPromise();\n        if (actualWindow) {\n            this.setWindow(actualWindow);\n        }\n        this.serializedWindow.getInstanceID = memoizePromise(this.serializedWindow.getInstanceID);\n    }\n\n    getType() : $Values<typeof WINDOW_TYPE> {\n        return this.serializedWindow.type;\n    }\n\n    isPopup() : boolean {\n        return this.getType() === WINDOW_TYPE.POPUP;\n    }\n\n    isIframe() : boolean {\n        return this.getType() === WINDOW_TYPE.IFRAME;\n    }\n\n    setLocation(href : string) : ZalgoPromise<ProxyWindow> {\n        return ZalgoPromise.try(() => {\n            if (this.actualWindow) {\n                this.actualWindow.location = href;\n            } else {\n                return this.serializedWindow.setLocation(href);\n            }\n        }).then(() => this);\n    }\n\n    setName(name : string) : ZalgoPromise<ProxyWindow> {\n        return ZalgoPromise.try(() => {\n            if (this.actualWindow) {\n                if (!isSameDomain(this.actualWindow)) {\n                    throw new Error(`Can not set name for window on different domain`);\n                }\n                // $FlowFixMe\n                this.actualWindow.name = name;\n                // $FlowFixMe\n                if (this.actualWindow.frameElement) {\n                    // $FlowFixMe\n                    this.actualWindow.frameElement.setAttribute('name', name);\n                }\n\n                if (__POST_ROBOT__.__IE_POPUP_SUPPORT__) {\n                    const { linkWindow } = require('../bridge');\n                    linkWindow({ win: this.actualWindow, name });\n                }\n\n            } else {\n                return this.serializedWindow.setName(name);\n            }\n        }).then(() => this);\n    }\n\n    close() : ZalgoPromise<ProxyWindow> {\n        return ZalgoPromise.try(() => {\n            if (this.actualWindow) {\n                this.actualWindow.close();\n            } else {\n                return this.serializedWindow.close();\n            }\n        }).then(() => this);\n    }\n\n    focus() : ZalgoPromise<ProxyWindow> {\n        return ZalgoPromise.try(() => {\n            if (this.actualWindow) {\n                this.actualWindow.focus();\n            }\n            return this.serializedWindow.focus();\n        }).then(() => this);\n    }\n\n    isClosed() : ZalgoPromise<boolean> {\n        return ZalgoPromise.try(() => {\n            if (this.actualWindow) {\n                return isWindowClosed(this.actualWindow);\n            } else {\n                return this.serializedWindow.isClosed();\n            }\n        });\n    }\n\n    setWindow(win : CrossDomainWindowType) {\n        this.actualWindow = win;\n        this.actualWindowPromise.resolve(win);\n    }\n\n    matchWindow(win : CrossDomainWindowType) : ZalgoPromise<boolean> {\n        return ZalgoPromise.try(() => {\n            if (this.actualWindow) {\n                return win === this.actualWindow;\n            }\n            \n            return ZalgoPromise.all([\n                this.getInstanceID(),\n                getWindowInstanceID(win)\n            ]).then(([ proxyInstanceID, knownWindowInstanceID ]) => {\n                let match = proxyInstanceID === knownWindowInstanceID;\n\n                if (match) {\n                    this.setWindow(win);\n                }\n\n                return match;\n            });\n        });\n    }\n\n    unwrap() : CrossDomainWindowType | ProxyWindow {\n        return this.actualWindow || this;\n    }\n\n    awaitWindow() : ZalgoPromise<CrossDomainWindowType> {\n        return this.actualWindowPromise;\n    }\n\n    getInstanceID() : ZalgoPromise<string> {\n        if (this.actualWindow) {\n            return getWindowInstanceID(this.actualWindow);\n        } else {\n            return this.serializedWindow.getInstanceID();\n        }\n    }\n\n    serialize() : SerializedProxyWindow {\n        return this.serializedWindow;\n    }\n\n    shouldClean() : boolean {\n        return this.actualWindow && isWindowClosed(this.actualWindow);\n    }\n\n    static unwrap(win : CrossDomainWindowType | ProxyWindow) : CrossDomainWindowType | ProxyWindow {\n        return ProxyWindow.isProxyWindow(win)\n            // $FlowFixMe\n            ? win.unwrap()\n            : win;\n    }\n\n    static serialize(win : CrossDomainWindowType | ProxyWindow) : SerializedProxyWindow {\n        cleanupProxyWindows();\n\n        return ProxyWindow.toProxyWindow(win).serialize();\n    }\n\n    static deserialize(serializedWindow : SerializedProxyWindow) : ProxyWindow {\n        cleanupProxyWindows();\n        \n        return idToProxyWindow.getOrSet(serializedWindow.id, () => {\n            return new ProxyWindow(serializedWindow);\n        });\n    }\n\n    static isProxyWindow(obj : CrossDomainWindowType | ProxyWindow) : boolean {\n        // $FlowFixMe\n        return Boolean(obj && !isWindow(obj) && obj.isProxyWindow);\n    }\n\n    static toProxyWindow(win : CrossDomainWindowType | ProxyWindow) : ProxyWindow {\n        cleanupProxyWindows();\n\n        if (ProxyWindow.isProxyWindow(win)) {\n            // $FlowFixMe\n            return win;\n        }\n\n        // $FlowFixMe\n        return winToProxyWindow.getOrSet(win, () => {\n            let id = uniqueID();\n\n            return idToProxyWindow.set(id, new ProxyWindow({\n                id,\n                // $FlowFixMe\n                type:          getOpener(win) ? WINDOW_TYPE.POPUP : WINDOW_TYPE.IFRAME,\n                getInstanceID: () => getWindowInstanceID(win),\n                close:         () => ZalgoPromise.try(() => {\n                    win.close();\n                }),\n                focus:         () => ZalgoPromise.try(() => {\n                    win.focus();\n                }),\n                isClosed:      () => ZalgoPromise.try(() => {\n                    // $FlowFixMe\n                    return isWindowClosed(win);\n                }),\n                setLocation:   (href) => ZalgoPromise.try(() => {\n                    // $FlowFixMe\n                    if (isSameDomain(win)) {\n                        try {\n                            if (win.location && typeof win.location.replace === 'function') {\n                                // $FlowFixMe\n                                win.location.replace(href);\n                                return;\n                            }\n                        } catch (err) {\n                            // pass\n                        }\n                    }\n    \n                    // $FlowFixMe\n                    win.location = href;\n                }),\n                setName:       (name) => ZalgoPromise.try(() => {\n                    if (__POST_ROBOT__.__IE_POPUP_SUPPORT__) {\n                        const { linkWindow } = require('../bridge');\n                        // $FlowFixMe\n                        linkWindow({ win, name });\n                    }\n                    // $FlowFixMe\n                    win.name = name;\n                })\n            // $FlowFixMe\n            }, win));\n        });\n    }\n}\n\nexport type SerializedWindow = CustomSerializedType<typeof SERIALIZATION_TYPE.CROSS_DOMAIN_WINDOW, SerializedProxyWindow>;\n\nexport function serializeWindow(destination : CrossDomainWindowType | ProxyWindow, domain : DomainMatcher, win : CrossDomainWindowType) : SerializedWindow {\n    return serializeType(SERIALIZATION_TYPE.CROSS_DOMAIN_WINDOW, ProxyWindow.serialize(win));\n}\n\nexport function deserializeWindow(source : CrossDomainWindowType | ProxyWindow, origin : string, win : SerializedProxyWindow) : ProxyWindow {\n    return ProxyWindow.deserialize(win);\n}\n","/* @flow */\n\nimport { matchDomain, getDomain, type CrossDomainWindowType, type DomainMatcher } from 'cross-domain-utils/src';\nimport { ZalgoPromise } from 'zalgo-promise/src';\nimport { once, uniqueID, isRegex } from 'belter/src';\nimport { serializeType, type CustomSerializedType } from 'universal-serialize/src';\n\nimport { MESSAGE_NAME, WILDCARD, SERIALIZATION_TYPE } from '../conf';\nimport { global, windowStore, globalStore } from '../global';\n\nimport { ProxyWindow } from './window';\n\nlet methodStore = windowStore('methodStore');\nlet proxyWindowMethods = globalStore('proxyWindowMethods');\nglobal.listeningForFunctions = global.listeningForFunctions || false;\n\ntype StoredMethod = {|\n    name : string,\n    domain : DomainMatcher,\n    val : Function,\n    source : CrossDomainWindowType | ProxyWindow\n|};\n\nfunction addMethod(id : string, val : Function, name : string, source : CrossDomainWindowType | ProxyWindow, domain : DomainMatcher) {\n    if (ProxyWindow.isProxyWindow(source)) {\n        proxyWindowMethods.set(id, { val, name, domain, source });\n    } else {\n        proxyWindowMethods.del(id);\n        // $FlowFixMe\n        let methods = methodStore.getOrSet(source, () => ({}));\n        methods[id] = { domain, name, val, source };\n    }\n}\n\nfunction lookupMethod(source : CrossDomainWindowType, id : string) : ?StoredMethod {\n    let methods = methodStore.getOrSet(source, () => ({}));\n    return methods[id] || proxyWindowMethods.get(id);\n}\n\nconst listenForFunctionCalls = once(() => {\n    if (global.listeningForFunctions) {\n        return;\n    }\n\n    global.listeningForFunctions = true;\n\n    global.on(MESSAGE_NAME.METHOD, { origin: WILDCARD }, ({ source, origin, data } : { source : CrossDomainWindowType, origin : string, data : Object }) => {\n        let { id, name } = data;\n        \n        return ZalgoPromise.try(() => {\n            let meth = lookupMethod(source, id);\n\n            if (!meth) {\n                throw new Error(`Could not find method '${ data.name }' with id: ${ data.id } in ${ getDomain(window) }`);\n            }\n\n            let { source: methodSource, domain, val } = meth;\n\n            return ZalgoPromise.try(() => {\n                if (!matchDomain(domain, origin)) {\n                    // $FlowFixMe\n                    throw new Error(`Method '${ data.name }' domain ${ JSON.stringify(isRegex(meth.domain) ? meth.domain.source : meth.domain) } does not match origin ${ origin } in ${ getDomain(window) }`);\n                }\n                \n                if (ProxyWindow.isProxyWindow(methodSource)) {\n                    // $FlowFixMe\n                    return methodSource.matchWindow(source).then(match => { // eslint-disable-line max-nested-callbacks\n                        if (!match) {\n                            throw new Error(`Method call '${ data.name }' failed - proxy window does not match source in ${ getDomain(window) }`);\n                        }\n                    });\n                }\n            }).then(() => {\n                return val.apply({ source, origin }, data.args);\n            }, err => {\n                return ZalgoPromise.try(() => { // eslint-disable-line max-nested-callbacks\n                    if (val.onError) {\n                        return val.onError(err);\n                    }\n                }).then(() => { // eslint-disable-line max-nested-callbacks\n                    throw err;\n                });\n            }).then(result => {\n                return { result, id, name };\n            });\n        });\n    });\n});\n\nexport type SerializedFunction = CustomSerializedType<typeof SERIALIZATION_TYPE.CROSS_DOMAIN_FUNCTION, {\n    id : string,\n    name : string\n}>;\n\nexport function serializeFunction<T>(destination : CrossDomainWindowType | ProxyWindow, domain : DomainMatcher, val : () => ZalgoPromise<T> | T, key : string) : SerializedFunction {\n    listenForFunctionCalls();\n    \n    let id = val.__id__ || uniqueID();\n    destination = ProxyWindow.unwrap(destination);\n    let name = val.__name__ || val.name || key;\n\n    if (ProxyWindow.isProxyWindow(destination)) {\n        addMethod(id, val, name, destination, domain);\n\n        // $FlowFixMe\n        destination.awaitWindow().then(win => {\n            addMethod(id, val, name, win, domain);\n        });\n    } else {\n        addMethod(id, val, name, destination, domain);\n    }\n\n    return serializeType(SERIALIZATION_TYPE.CROSS_DOMAIN_FUNCTION, { id, name });\n}\n\nexport function deserializeFunction<T>(source : CrossDomainWindowType | ProxyWindow, origin : string, { id, name } : { id : string, name : string }) : (...args : $ReadOnlyArray<mixed>) => ZalgoPromise<T> {\n    const getDeserializedFunction = (opts? : Object = {}) => {\n        function crossDomainFunctionWrapper<X : mixed>() : ZalgoPromise<X> {\n            let originalStack;\n    \n            if (__DEBUG__) {\n                originalStack = (new Error(`Original call to ${ name }():`)).stack;\n            }\n    \n            return ProxyWindow.toProxyWindow(source).awaitWindow().then(win => {\n                let meth = lookupMethod(win, id);\n    \n                if (meth && meth.val !== crossDomainFunctionWrapper) {\n                    return meth.val.apply({ source: window, origin: getDomain() }, arguments);\n                } else {\n                    return global.send(win, MESSAGE_NAME.METHOD, { id, name, args: Array.prototype.slice.call(arguments) }, { domain: origin, fireAndForget: opts.fireAndForget })\n                        .then(res => {\n                            if (!opts.fireAndForget) {\n                                return res.data.result;\n                            }\n                        });\n                }\n    \n            }).catch(err => {\n                // $FlowFixMe\n                if (__DEBUG__ && originalStack && err.stack) {\n                    // $FlowFixMe\n                    err.stack = `${ err.stack }\\n\\n${ originalStack }`;\n                }\n                throw err;\n            });\n        }\n\n        crossDomainFunctionWrapper.__name__ = name;\n        crossDomainFunctionWrapper.__origin__ = origin;\n        crossDomainFunctionWrapper.__source__ = source;\n        crossDomainFunctionWrapper.__id__ = id;\n\n        crossDomainFunctionWrapper.origin = origin;\n\n        return crossDomainFunctionWrapper;\n    };\n\n    let crossDomainFunctionWrapper = getDeserializedFunction();\n    crossDomainFunctionWrapper.fireAndForget = getDeserializedFunction({ fireAndForget: true });\n\n    return crossDomainFunctionWrapper;\n}\n","/* @flow */\n\nimport { type CrossDomainWindowType, isWindow, type DomainMatcher } from 'cross-domain-utils/src';\nimport { TYPE, serialize, deserialize, type Thenable } from 'universal-serialize/src';\n\nimport { SERIALIZATION_TYPE } from '../conf';\n\nimport { serializeFunction, deserializeFunction, type SerializedFunction } from './function';\nimport { serializePromise, deserializePromise, type SerializedPromise } from './promise';\nimport { serializeWindow, deserializeWindow, type SerializedWindow, ProxyWindow } from './window';\n\nexport function serializeMessage<T : mixed>(destination : CrossDomainWindowType | ProxyWindow, domain : DomainMatcher, obj : T) : string {\n    return serialize(obj, {\n        [ TYPE.PROMISE ]:  (val : Thenable, key : string) : SerializedPromise => serializePromise(destination, domain, val, key),\n        [ TYPE.FUNCTION ]: (val : Function, key : string) : SerializedFunction => serializeFunction(destination, domain, val, key),\n        [ TYPE.OBJECT ]:   (val : CrossDomainWindowType) : Object | SerializedWindow => {\n            return (isWindow(val) || ProxyWindow.isProxyWindow(val)) ? serializeWindow(destination, domain, val) : val;\n        }\n    });\n}\n\nexport function deserializeMessage<T : mixed>(source : CrossDomainWindowType | ProxyWindow, origin : string, message : string) : T {\n    return deserialize(message, {\n        [ SERIALIZATION_TYPE.CROSS_DOMAIN_ZALGO_PROMISE ]: (serializedPromise)  => deserializePromise(source, origin, serializedPromise),\n        [ SERIALIZATION_TYPE.CROSS_DOMAIN_FUNCTION ]:      (serializedFunction) => deserializeFunction(source, origin, serializedFunction),\n        [ SERIALIZATION_TYPE.CROSS_DOMAIN_WINDOW ]:        (serializedWindow)   => deserializeWindow(source, origin, serializedWindow)\n    });\n}\n","/* @flow */\n\nimport { type CrossDomainWindowType, type DomainMatcher } from 'cross-domain-utils/src';\nimport { ZalgoPromise } from 'zalgo-promise/src';\nimport { serializeType, type CustomSerializedType, type Thenable } from 'universal-serialize/src';\n\nimport { SERIALIZATION_TYPE } from '../conf';\n\nimport { serializeFunction, type SerializedFunction } from './function';\nimport { ProxyWindow } from './window';\n\nexport type SerializedPromise = CustomSerializedType<typeof SERIALIZATION_TYPE.CROSS_DOMAIN_ZALGO_PROMISE, {\n    then : SerializedFunction\n}>;\n\nexport function serializePromise(destination : CrossDomainWindowType | ProxyWindow, domain : DomainMatcher, val : Thenable, key : string) : SerializedPromise {\n    return serializeType(SERIALIZATION_TYPE.CROSS_DOMAIN_ZALGO_PROMISE, {\n        then: serializeFunction(destination, domain, (resolve, reject) => val.then(resolve, reject), key)\n    });\n}\n\nexport function deserializePromise<T>(source : CrossDomainWindowType | ProxyWindow, origin : string, { then } : { then : Function }) : ZalgoPromise<T> {\n    return new ZalgoPromise(then);\n}\n","/* @flow */\n\nimport { isSameDomain, isSameTopWindow, isActuallySameDomain, getActualDomain, getDomain, type CrossDomainWindowType, type DomainMatcher } from 'cross-domain-utils/src';\n\nimport { SEND_STRATEGY, PROTOCOL, WILDCARD, WINDOW_PROP } from '../../conf';\nimport { needsGlobalMessagingForBrowser } from '../../lib';\n\nexport let SEND_MESSAGE_STRATEGIES = {};\n\n\nSEND_MESSAGE_STRATEGIES[SEND_STRATEGY.POST_MESSAGE] = (win : CrossDomainWindowType, serializedMessage : string, domain : DomainMatcher) => {\n\n    if (__TEST__) {\n        if (needsGlobalMessagingForBrowser() && isSameTopWindow(window, win) === false) {\n            return;\n        }\n    }\n\n    let domains;\n\n    if (Array.isArray(domain)) {\n        domains = domain;\n    } else if (typeof domain === 'string') {\n        domains = [ domain ];\n    } else {\n        domains = [ WILDCARD ];\n    }\n\n    domains = domains.map(dom => {\n\n        if (dom.indexOf(PROTOCOL.MOCK) === 0) {\n\n            if (window.location.protocol === PROTOCOL.FILE) {\n                return WILDCARD;\n            }\n\n            if (!isActuallySameDomain(win)) {\n                throw new Error(`Attempting to send messsage to mock domain ${ dom }, but window is actually cross-domain`);\n            }\n\n            // $FlowFixMe\n            return getActualDomain(win);\n        }\n\n        if (dom.indexOf(PROTOCOL.FILE) === 0) {\n            return WILDCARD;\n        }\n\n        return dom;\n    });\n\n    domains.forEach(dom => {\n        return win.postMessage(serializedMessage, dom);\n    });\n};\n\nif (__POST_ROBOT__.__IE_POPUP_SUPPORT__) {\n\n    let { sendBridgeMessage, needsBridgeForBrowser, isBridge } = require('../../bridge');\n\n    SEND_MESSAGE_STRATEGIES[SEND_STRATEGY.BRIDGE] = (win : CrossDomainWindowType, serializedMessage : string, domain : string) => {\n\n        if (!needsBridgeForBrowser() && !isBridge()) {\n            return;\n        }\n\n        if (isSameDomain(win)) {\n            throw new Error(`Post message through bridge disabled between same domain windows`);\n        }\n\n        if (isSameTopWindow(window, win) !== false) {\n            throw new Error(`Can only use bridge to communicate between two different windows, not between frames`);\n        }\n\n        return sendBridgeMessage(win, domain, serializedMessage);\n    };\n}\n\nif (__POST_ROBOT__.__IE_POPUP_SUPPORT__ || __POST_ROBOT__.__GLOBAL_MESSAGE_SUPPORT__) {\n    \n    SEND_MESSAGE_STRATEGIES[SEND_STRATEGY.GLOBAL] = (win : CrossDomainWindowType, serializedMessage : string) => {\n\n        if (!needsGlobalMessagingForBrowser()) {\n            return;\n        }\n\n        if (!isSameDomain(win)) {\n            throw new Error(`Post message through global disabled between different domain windows`);\n        }\n\n        if (isSameTopWindow(window, win) !== false) {\n            throw new Error(`Can only use global to communicate between two different windows, not between frames`);\n        }\n\n        // $FlowFixMe\n        let foreignGlobal = win[WINDOW_PROP.POSTROBOT];\n\n        if (!foreignGlobal) {\n            throw new Error(`Can not find postRobot global on foreign window`);\n        }\n\n        return foreignGlobal.receiveMessage({\n            source: window,\n            origin: getDomain(),\n            data:   serializedMessage\n        });\n    };\n}\n","/* @flow */\n\nimport { isWindowClosed, type CrossDomainWindowType } from 'cross-domain-utils/src';\nimport { ZalgoPromise } from 'zalgo-promise/src';\nimport { uniqueID, stringifyError } from 'belter/src';\n\nimport { CONFIG, WINDOW_PROP } from '../../conf';\nimport { serializeMessage } from '../../serialize';\nimport type { Message } from '../types';\n\nimport { SEND_MESSAGE_STRATEGIES } from './strategies';\n\nexport function sendMessage(win : CrossDomainWindowType, domain : string | $ReadOnlyArray<string>, message : Message) : ZalgoPromise<void> {\n    return ZalgoPromise.try(() => {\n\n        if (isWindowClosed(win)) {\n            throw new Error('Window is closed');\n        }\n        \n        const serializedMessage = serializeMessage(win, domain, {\n            [ WINDOW_PROP.POSTROBOT ]: {\n                id: uniqueID(),\n                ...message\n            }\n        });\n\n\n        let messages = [];\n\n        return ZalgoPromise.map(Object.keys(SEND_MESSAGE_STRATEGIES), strategyName => {\n\n            return ZalgoPromise.try(() => {\n\n                if (!CONFIG.ALLOWED_POST_MESSAGE_METHODS[strategyName]) {\n                    throw new Error(`Strategy disallowed: ${ strategyName }`);\n                }\n\n                return SEND_MESSAGE_STRATEGIES[strategyName](win, serializedMessage, domain);\n\n            }).then(() => {\n                messages.push(`${ strategyName }: success`);\n                return true;\n            }, err => {\n                messages.push(`${ strategyName }: ${ stringifyError(err) }\\n`);\n                return false;\n            });\n\n        }).then(results => {\n\n            let success = results.some(Boolean);\n            let status = `${ message.type } ${ message.name } ${ success ? 'success' : 'error' }:\\n  - ${ messages.join('\\n  - ') }\\n`;\n\n            if (!success) {\n                throw new Error(status);\n            }\n        });\n    });\n}\n","/* @flow */\n\nimport { getUserAgent } from 'cross-domain-utils/src';\n\nexport function needsGlobalMessagingForBrowser() : boolean {\n\n    if (getUserAgent(window).match(/MSIE|rv:11|trident|edge\\/12|edge\\/13/i)) {\n        return true;\n    }\n\n    return false;\n}\n","/* @flow */\n\nimport { type ZalgoPromise } from 'zalgo-promise/src';\nimport { matchDomain, type CrossDomainWindowType, type DomainMatcher } from 'cross-domain-utils/src';\nimport { isRegex, getOrSet } from 'belter/src';\n\nimport { global, globalStore, windowStore } from '../global';\nimport { WILDCARD } from '../conf';\n\nlet responseListeners = globalStore('responseListeners');\nlet requestListeners = windowStore('requestListeners');\nlet erroredResponseListeners = globalStore('erroredResponseListeners');\n\nexport function resetListeners() {\n    responseListeners.reset();\n    erroredResponseListeners.reset();\n}\n\nglobal.WINDOW_WILDCARD = global.WINDOW_WILDCARD || new (function WindowWildcard() { /* pass */ })();\n\nconst __DOMAIN_REGEX__ = '__domain_regex__';\n\nexport type RequestListenerType = {\n    handler : ({ source : CrossDomainWindowType, origin : string, data : mixed }) => (mixed | ZalgoPromise<mixed>),\n    handleError : (err : mixed) => void,\n    window : ?CrossDomainWindowType,\n    name : string,\n    domain : DomainMatcher\n};\n\nexport type ResponseListenerType = {\n    name : string,\n    window : CrossDomainWindowType,\n    domain : DomainMatcher,\n    respond : (err : ?mixed, result : ?mixed) => void,\n    ack? : ?boolean\n};\n\nexport function addResponseListener(hash : string, listener : ResponseListenerType) {\n    responseListeners.set(hash, listener);\n}\n\nexport function getResponseListener(hash : string) : ?ResponseListenerType {\n    return responseListeners.get(hash);\n}\n\nexport function deleteResponseListener(hash : string) {\n    responseListeners.del(hash);\n}\n\nexport function markResponseListenerErrored(hash : string) {\n    erroredResponseListeners.set(hash, true);\n}\n\nexport function isResponseListenerErrored(hash : string) : boolean {\n    return erroredResponseListeners.has(hash);\n}\n\nexport function getRequestListener({ name, win, domain } : { name : string, win : ?CrossDomainWindowType, domain : ?(string | RegExp) }) : ?RequestListenerType {\n\n    if (win === WILDCARD) {\n        win = null;\n    }\n\n    if (domain === WILDCARD) {\n        domain = null;\n    }\n\n    if (!name) {\n        throw new Error(`Name required to get request listener`);\n    }\n\n    for (let winQualifier of [ win, global.WINDOW_WILDCARD ]) {\n        if (!winQualifier) {\n            continue;\n        }\n\n        let nameListeners = requestListeners.get(winQualifier);\n\n        if (!nameListeners) {\n            continue;\n        }\n\n        let domainListeners = nameListeners[name];\n\n        if (!domainListeners) {\n            continue;\n        }\n\n        if (domain && typeof domain === 'string') {\n            if (domainListeners[domain]) {\n                return domainListeners[domain];\n            }\n\n            if (domainListeners[__DOMAIN_REGEX__]) {\n                for (let { regex, listener } of domainListeners[__DOMAIN_REGEX__]) {\n                    if (matchDomain(regex, domain)) {\n                        return listener;\n                    }\n                }\n            }\n        }\n\n        if (domainListeners[WILDCARD]) {\n            return domainListeners[WILDCARD];\n        }\n    }\n}\n\nexport function addRequestListener({ name, win, domain } : { name : string, win : ?CrossDomainWindowType, domain : ?DomainMatcher }, listener : RequestListenerType) : { cancel : () => void } {\n\n    if (!name || typeof name !== 'string') {\n        throw new Error(`Name required to add request listener`);\n    }\n\n    if (Array.isArray(win)) {\n        let listenersCollection = [];\n\n        for (let item of win) {\n            listenersCollection.push(addRequestListener({ name, domain, win: item }, listener));\n        }\n\n        return {\n            cancel() {\n                for (let cancelListener of listenersCollection) {\n                    cancelListener.cancel();\n                }\n            }\n        };\n    }\n\n    if (Array.isArray(domain)) {\n        let listenersCollection = [];\n\n        for (let item of domain) {\n            listenersCollection.push(addRequestListener({ name, win, domain: item }, listener));\n        }\n\n        return {\n            cancel() {\n                for (let cancelListener of listenersCollection) {\n                    cancelListener.cancel();\n                }\n            }\n        };\n    }\n\n    let existingListener = getRequestListener({ name, win, domain });\n\n    if (!win || win === WILDCARD) {\n        win = global.WINDOW_WILDCARD;\n    }\n\n    domain = domain || WILDCARD;\n\n    if (existingListener) {\n        if (win && domain) {\n            throw new Error(`Request listener already exists for ${ name } on domain ${ domain.toString() } for ${ win === global.WINDOW_WILDCARD ? 'wildcard' : 'specified' } window`);\n        } else if (win) {\n            throw new Error(`Request listener already exists for ${ name } for ${ win === global.WINDOW_WILDCARD ? 'wildcard' : 'specified' } window`);\n        } else if (domain) {\n            throw new Error(`Request listener already exists for ${ name } on domain ${ domain.toString() }`);\n        } else {\n            throw new Error(`Request listener already exists for ${ name }`);\n        }\n    }\n\n    let nameListeners = requestListeners.getOrSet(win, () => ({}));\n    // $FlowFixMe\n    let domainListeners = getOrSet(nameListeners, name, () => ({}));\n\n    let strDomain = domain.toString();\n\n    let regexListeners;\n    let regexListener;\n\n    if (isRegex(domain)) {\n        regexListeners = getOrSet(domainListeners, __DOMAIN_REGEX__, () => []);\n        regexListener = { regex: domain, listener };\n        regexListeners.push(regexListener);\n    } else {\n        domainListeners[strDomain] = listener;\n    }\n\n    return {\n        cancel() {\n            delete domainListeners[strDomain];\n\n            if (regexListener) {\n                regexListeners.splice(regexListeners.indexOf(regexListener, 1));\n\n                if (!regexListeners.length) {\n                    delete domainListeners[__DOMAIN_REGEX__];\n                }\n            }\n\n            if (!Object.keys(domainListeners).length) {\n                // $FlowFixMe\n                delete nameListeners[name];\n            }\n\n            // $FlowFixMe\n            if (win && !Object.keys(nameListeners).length) {\n                requestListeners.del(win);\n            }\n        }\n    };\n}\n","/* @flow */\n\nimport { ZalgoPromise } from 'zalgo-promise/src';\nimport { isWindowClosed, matchDomain, stringifyDomainPattern, type CrossDomainWindowType } from 'cross-domain-utils/src';\nimport { noop } from 'belter/src';\n\nimport { MESSAGE_TYPE, MESSAGE_ACK, MESSAGE_NAME } from '../../conf';\nimport { sendMessage } from '../send';\nimport { getRequestListener, getResponseListener, deleteResponseListener, isResponseListenerErrored } from '../listeners';\nimport type { RequestMessage, AckResponseMessage, SuccessResponseMessage, ErrorResponseMessage } from '../types';\n\nexport let RECEIVE_MESSAGE_TYPES = {\n\n    [ MESSAGE_TYPE.REQUEST ](source : CrossDomainWindowType, origin : string, message : RequestMessage) : ZalgoPromise<void> {\n\n        let options = getRequestListener({ name: message.name, win: source, domain: origin });\n\n        const logName = (message.name === MESSAGE_NAME.METHOD && message.data && typeof message.data.name === 'string') ? `${ message.data.name }()` : message.name;\n\n        if (__DEBUG__) {\n            // eslint-disable-next-line no-console\n            console.info('receive::req', logName, origin, '\\n\\n', message.data);\n        }\n\n        function sendResponse(type : $Values<typeof MESSAGE_TYPE>, ack? : $Values<typeof MESSAGE_ACK>, response = {}) : ZalgoPromise<void> {\n\n            if (message.fireAndForget || isWindowClosed(source)) {\n                return ZalgoPromise.resolve();\n            }\n\n            if (__DEBUG__ && type !== MESSAGE_TYPE.ACK) {\n                if (ack === MESSAGE_ACK.SUCCESS) {\n                    // $FlowFixMe\n                    console.info('respond::res', logName, origin, '\\n\\n', response.data);  // eslint-disable-line no-console\n                } else if (ack === MESSAGE_ACK.ERROR) {\n                    // $FlowFixMe\n                    console.error('respond::err', logName, origin, '\\n\\n', response.error); // eslint-disable-line no-console\n                }\n            }\n\n            // $FlowFixMe\n            return sendMessage(source, origin, {\n                type,\n                ack,\n                hash:   message.hash,\n                name:   message.name,\n                ...response\n            });\n        }\n\n        return ZalgoPromise.all([\n\n            sendResponse(MESSAGE_TYPE.ACK),\n\n            ZalgoPromise.try(() => {\n\n                if (!options) {\n                    throw new Error(`No handler found for post message: ${ message.name } from ${ origin } in ${ window.location.protocol }//${ window.location.host }${ window.location.pathname }`);\n                }\n\n                if (!matchDomain(options.domain, origin)) {\n                    throw new Error(`Request origin ${ origin } does not match domain ${ options.domain.toString() }`);\n                }\n\n                let data = message.data;\n\n                return options.handler({ source, origin, data });\n\n            }).then(data => {\n                return sendResponse(MESSAGE_TYPE.RESPONSE, MESSAGE_ACK.SUCCESS, { data });\n\n            }, error => {\n                return sendResponse(MESSAGE_TYPE.RESPONSE, MESSAGE_ACK.ERROR, { error });\n            })\n\n        ]).then(noop).catch(err => {\n            if (options && options.handleError) {\n                return options.handleError(err);\n            } else {\n                throw err;\n            }\n        });\n    },\n\n    [ MESSAGE_TYPE.ACK ](source : CrossDomainWindowType, origin : string, message : AckResponseMessage) {\n\n        if (isResponseListenerErrored(message.hash)) {\n            return;\n        }\n\n        let options = getResponseListener(message.hash);\n\n        if (!options) {\n            throw new Error(`No handler found for post message ack for message: ${ message.name } from ${ origin } in ${ window.location.protocol }//${ window.location.host }${ window.location.pathname }`);\n        }\n\n        if (!matchDomain(options.domain, origin)) {\n            throw new Error(`Ack origin ${ origin } does not match domain ${ options.domain.toString() }`);\n        }\n\n        options.ack = true;\n    },\n\n    [ MESSAGE_TYPE.RESPONSE ](source : CrossDomainWindowType, origin : string, message : SuccessResponseMessage | ErrorResponseMessage) : void | ZalgoPromise<void> {\n\n        if (isResponseListenerErrored(message.hash)) {\n            return;\n        }\n\n        let options = getResponseListener(message.hash);\n\n        if (!options) {\n            throw new Error(`No handler found for post message response for message: ${ message.name } from ${ origin } in ${ window.location.protocol }//${ window.location.host }${ window.location.pathname }`);\n        }\n\n        if (!matchDomain(options.domain, origin)) {\n            throw new Error(`Response origin ${ origin } does not match domain ${ stringifyDomainPattern(options.domain) }`);\n        }\n\n        deleteResponseListener(message.hash);\n\n        if (message.ack === MESSAGE_ACK.ERROR) {\n            return options.respond(message.error, null);\n        } else if (message.ack === MESSAGE_ACK.SUCCESS) {\n            let data = message.data;\n            return options.respond(null, { source, origin, data });\n        }\n    }\n};\n","/* @flow */\n\nimport { isWindowClosed, type CrossDomainWindowType, getDomain, isSameTopWindow } from 'cross-domain-utils/src';\nimport { addEventListener, noop } from 'belter/src';\n\nimport { WINDOW_PROP } from '../../conf';\nimport { markWindowKnown, needsGlobalMessagingForBrowser } from '../../lib';\nimport { deserializeMessage } from '../../serialize';\nimport { global, globalStore } from '../../global';\n\nimport { RECEIVE_MESSAGE_TYPES } from './types';\n\nlet receivedMessages = globalStore('receivedMessages');\n\ntype MessageEvent = {\n    source : CrossDomainWindowType,\n    origin : string,\n    data : string\n};\n\nfunction parseMessage(message : string, source : CrossDomainWindowType, origin : string) : ?Object {\n\n    let parsedMessage;\n\n    try {\n        parsedMessage = deserializeMessage(source, origin, message);\n    } catch (err) {\n        return;\n    }\n\n    if (!parsedMessage) {\n        return;\n    }\n\n    if (typeof parsedMessage !== 'object' || parsedMessage === null) {\n        return;\n    }\n\n    parsedMessage = parsedMessage[WINDOW_PROP.POSTROBOT];\n\n    if (!parsedMessage || typeof parsedMessage !== 'object' || parsedMessage === null) {\n        return;\n    }\n\n    if (!parsedMessage.type || typeof parsedMessage.type !== 'string') {\n        return;\n    }\n\n    if (!RECEIVE_MESSAGE_TYPES[parsedMessage.type]) {\n        return;\n    }\n\n    return parsedMessage;\n}\n\nexport function receiveMessage(event : MessageEvent) {\n\n    if (!window || window.closed) {\n        throw new Error(`Message recieved in closed window`);\n    }\n\n    try {\n        if (!event.source) {\n            return;\n        }\n    } catch (err) {\n        return;\n    }\n\n    let { source, origin, data } = event;\n\n    if (__TEST__) {\n        // $FlowFixMe\n        origin = getDomain(source);\n    }\n\n    let message = parseMessage(data, source, origin);\n\n    if (!message) {\n        return;\n    }\n\n    markWindowKnown(source);\n\n    if (receivedMessages.has(message.id)) {\n        return;\n    }\n\n    receivedMessages.set(message.id, true);\n\n    if (isWindowClosed(source) && !message.fireAndForget) {\n        return;\n    }\n\n    RECEIVE_MESSAGE_TYPES[message.type](source, origin, message);\n}\n\nexport function messageListener(event : { source : CrossDomainWindowType, origin : string, data : string, sourceElement : CrossDomainWindowType, originalEvent? : { origin : string } }) {\n\n    try {\n        noop(event.source);\n    } catch (err) {\n        return;\n    }\n\n    // $FlowFixMe\n    let messageEvent : MessageEvent = {\n        source: event.source || event.sourceElement,\n        origin: event.origin || (event.originalEvent && event.originalEvent.origin),\n        data:   event.data\n    };\n\n    if (!messageEvent.source) {\n        return;\n    }\n\n    if (!messageEvent.origin) {\n        throw new Error(`Post message did not have origin domain`);\n    }\n\n    if (__TEST__) {\n        if (needsGlobalMessagingForBrowser() && isSameTopWindow(messageEvent.source, window) === false) {\n            return;\n        }\n    }\n\n    receiveMessage(messageEvent);\n}\n\nexport function listenForMessages() {\n    // $FlowFixMe\n    addEventListener(window, 'message', messageListener);\n}\n\nglobal.receiveMessage = receiveMessage;\n","/* @flow */\n\nimport { ZalgoPromise } from 'zalgo-promise/src';\nimport { getAncestor, isAncestor, isWindowClosed, getDomain, matchDomain, type CrossDomainWindowType, type DomainMatcher } from 'cross-domain-utils/src';\nimport { uniqueID, isRegex } from 'belter/src';\n\n\nimport { CONFIG, MESSAGE_TYPE, WILDCARD, MESSAGE_NAME } from '../conf';\nimport { sendMessage, addResponseListener, deleteResponseListener, markResponseListenerErrored, type ResponseListenerType } from '../drivers';\nimport { awaitWindowHello, sayHello, isWindowKnown } from '../lib';\nimport { global, windowStore } from '../global';\n\nexport let requestPromises = windowStore('requestPromises');\n\ntype WindowResolverType = CrossDomainWindowType | string | HTMLIFrameElement;\n\ntype RequestOptionsType = {\n    window? : ?WindowResolverType,\n    domain? : ?DomainMatcher,\n    name? : ?string,\n    data? : ?Object,\n    fireAndForget? : ?boolean,\n    timeout? : ?number\n};\n\ntype ResponseMessageEvent = {\n    source : CrossDomainWindowType,\n    origin : string,\n    data : Object\n};\n\nexport function request(options : RequestOptionsType) : ZalgoPromise<ResponseMessageEvent> {\n\n    let prom = ZalgoPromise.try(() => {\n\n        if (!options.name) {\n            throw new Error('Expected options.name');\n        }\n\n        let name = options.name;\n        let targetWindow : ?CrossDomainWindowType;\n        let domain : DomainMatcher;\n\n        if (typeof options.window === 'string') {\n            let el = document.getElementById(options.window);\n\n            if (!el) {\n                throw new Error(`Expected options.window ${ Object.prototype.toString.call(options.window) } to be a valid element id`);\n            }\n\n            if (el.tagName.toLowerCase() !== 'iframe') {\n                throw new Error(`Expected options.window ${ Object.prototype.toString.call(options.window) } to be an iframe`);\n            }\n\n            // $FlowFixMe\n            if (!el.contentWindow) {\n                throw new Error('Iframe must have contentWindow.  Make sure it has a src attribute and is in the DOM.');\n            }\n\n            // $FlowFixMe\n            targetWindow = el.contentWindow;\n\n        } else if (options.window instanceof HTMLIFrameElement) {\n\n            if (options.window.tagName.toLowerCase() !== 'iframe') {\n                throw new Error(`Expected options.window ${ Object.prototype.toString.call(options.window) } to be an iframe`);\n            }\n\n            if (options.window && !options.window.contentWindow) {\n                throw new Error('Iframe must have contentWindow.  Make sure it has a src attribute and is in the DOM.');\n            }\n\n            if (options.window && options.window.contentWindow) {\n                // $FlowFixMe\n                targetWindow = options.window.contentWindow;\n            }\n        } else {\n            targetWindow = options.window;\n        }\n\n        if (!targetWindow) {\n            throw new Error('Expected options.window to be a window object, iframe, or iframe element id.');\n        }\n\n        const win = targetWindow;\n\n        domain = options.domain || WILDCARD;\n\n        let hash = `${ options.name }_${ uniqueID() }`;\n\n        if (isWindowClosed(win)) {\n            throw new Error('Target window is closed');\n        }\n\n        let hasResult = false;\n\n        let reqPromises = requestPromises.getOrSet(win, () => []);\n\n        let requestPromise = ZalgoPromise.try(() => {\n\n            if (isAncestor(window, win)) {\n                return awaitWindowHello(win, options.timeout || CONFIG.CHILD_WINDOW_TIMEOUT);\n            }\n\n        }).then(({ domain: origin } = {}) => {\n\n            if (isRegex(domain) && !origin) {\n                return sayHello(win);\n            }\n\n        }).then(({ domain: origin } = {}) => {\n\n            if (isRegex(domain)) {\n                if (!matchDomain(domain, origin)) {\n                    throw new Error(`Remote window domain ${ origin } does not match regex: ${ domain.toString() }`);\n                }\n\n                domain = origin;\n            }\n\n            if (typeof domain !== 'string' && !Array.isArray(domain)) {\n                throw new TypeError(`Expected domain to be a string or array`);\n            }\n\n            const actualDomain = domain;\n            const logName = (name === MESSAGE_NAME.METHOD && options.data && typeof options.data.name === 'string') ? `${ options.data.name }()` : name;\n\n            return new ZalgoPromise((resolve, reject) => {\n\n                let responseListener : ResponseListenerType;\n\n                if (!options.fireAndForget) {\n                    responseListener = {\n                        name,\n                        window: win,\n                        domain: actualDomain,\n                        respond(err, result) {\n                            if (!err) {\n                                hasResult = true;\n                                reqPromises.splice(reqPromises.indexOf(requestPromise, 1));\n                            }\n\n                            if (err) {\n                                if (__DEBUG__) {\n                                    // eslint-disable-next-line no-console\n                                    console.error('receive::err', logName, domain, '\\n\\n', err);\n                                }\n                                reject(err);\n                            } else {\n                                if (__DEBUG__) {\n                                    // eslint-disable-next-line no-console\n                                    console.info('receive::res', logName, domain, '\\n\\n', result);\n                                }\n                                resolve(result);\n                            }\n                        }\n                    };\n\n                    addResponseListener(hash, responseListener);\n                }\n\n                if (__DEBUG__) {\n                    // eslint-disable-next-line no-console\n                    console.info('send::req', logName, domain, '\\n\\n', options.data);\n                }\n\n                sendMessage(win, actualDomain, {\n                    type:          MESSAGE_TYPE.REQUEST,\n                    hash,\n                    name,\n                    data:          options.data,\n                    fireAndForget: Boolean(options.fireAndForget)\n                }).catch(reject);\n\n                if (options.fireAndForget) {\n                    return resolve();\n                }\n\n                let totalAckTimeout = isWindowKnown(win) ? CONFIG.ACK_TIMEOUT_KNOWN : CONFIG.ACK_TIMEOUT;\n                let totalResTimeout = options.timeout || CONFIG.RES_TIMEOUT;\n\n                let ackTimeout = totalAckTimeout;\n                let resTimeout = totalResTimeout;\n\n                let cycleTime = 100;\n\n                let cycle = () => {\n\n                    if (hasResult) {\n                        return;\n                    }\n\n                    if (isWindowClosed(win)) {\n\n                        if (!responseListener.ack) {\n                            return reject(new Error(`Window closed for ${ name } before ack`));\n                        }\n\n                        return reject(new Error(`Window closed for ${ name } before response`));\n                    }\n\n                    ackTimeout = Math.max(ackTimeout - cycleTime, 0);\n                    if (resTimeout !== -1) {\n                        resTimeout = Math.max(resTimeout - cycleTime, 0);\n                    }\n\n                    let hasAck = responseListener.ack;\n\n                    if (hasAck) {\n\n                        if (resTimeout === -1) {\n                            return;\n                        }\n\n                        cycleTime = Math.min(resTimeout, 2000);\n\n                    } else if (ackTimeout === 0) {\n                        return reject(new Error(`No ack for postMessage ${ name } in ${ getDomain() } in ${ totalAckTimeout }ms`));\n\n                    } else if (resTimeout === 0) {\n                        return reject(new Error(`No response for postMessage ${ name } in ${ getDomain() } in ${ totalResTimeout }ms`));\n                    }\n\n                    setTimeout(cycle, cycleTime);\n                };\n\n                setTimeout(cycle, cycleTime);\n            });\n        });\n\n        requestPromise.catch(() => {\n            markResponseListenerErrored(hash);\n            deleteResponseListener(hash);\n        });\n\n        reqPromises.push(requestPromise);\n\n        return requestPromise;\n    });\n\n    return prom;\n}\n\nexport function send(window : WindowResolverType, name : string, data : ?Object, options : ?RequestOptionsType) : ZalgoPromise<ResponseMessageEvent> {\n\n    options = options || {};\n    options.window = window;\n    options.name = name;\n    options.data = data;\n\n    return request(options);\n}\n\nexport function sendToParent(name : string, data : ?Object, options : ?RequestOptionsType) : ZalgoPromise<ResponseMessageEvent> {\n\n    let win = getAncestor();\n\n    if (!win) {\n        return new ZalgoPromise((resolve, reject) => reject(new Error('Window does not have a parent')));\n    }\n\n    return send(win, name, data, options);\n}\n\nexport function client(options : RequestOptionsType = {}) : { send : (string, ?Object) => ZalgoPromise<ResponseMessageEvent> } {\n\n    if (!options.window) {\n        throw new Error(`Expected options.window`);\n    }\n\n    const win = options.window;\n\n    return {\n        send(name : string, data : ?Object) : ZalgoPromise<ResponseMessageEvent> {\n            return send(win, name, data, options);\n        }\n    };\n}\n\nglobal.send = send;\n","/* @flow */\n\nimport { isWindowClosed, type CrossDomainWindowType, type DomainMatcher } from 'cross-domain-utils/src';\nimport { ZalgoPromise } from 'zalgo-promise/src';\nimport { once as onceFunction, safeInterval } from 'belter/src';\n\nimport { addRequestListener, type RequestListenerType } from '../drivers';\nimport { WILDCARD } from '../conf';\nimport { global } from '../global';\n\ntype ErrorHandlerType = (err : mixed) => void;\ntype HandlerType = ({ source : CrossDomainWindowType, origin : string, data : mixed }) => (void | mixed | ZalgoPromise<mixed>);\n\ntype ServerOptionsType = {\n    handler? : ?HandlerType,\n    errorHandler? : ?ErrorHandlerType,\n    window? : CrossDomainWindowType,\n    name? : ?string,\n    domain? : ?DomainMatcher,\n    once? : ?boolean,\n    errorOnClose? : ?boolean\n};\n\nexport function listen(options : ServerOptionsType) : { cancel : () => void } {\n\n    if (!options.name) {\n        throw new Error('Expected options.name');\n    }\n\n    if (!options.handler) {\n        throw new Error('Expected options.handler');\n    }\n\n    const name = options.name;\n    const win = options.window;\n    const domain = options.domain;\n\n    let listenerOptions : RequestListenerType = {\n        handler:     options.handler,\n        handleError: options.errorHandler || (err => {\n            throw err;\n        }),\n        window: win,\n        domain: domain || WILDCARD,\n        name\n    };\n\n    let requestListener = addRequestListener({ name, win, domain }, listenerOptions);\n\n    if (options.once) {\n        let handler = listenerOptions.handler;\n        listenerOptions.handler = onceFunction(function listenOnce() : mixed | ZalgoPromise<mixed> {\n            requestListener.cancel();\n            return handler.apply(this, arguments);\n        });\n    }\n\n    if (listenerOptions.window && options.errorOnClose) {\n        let interval = safeInterval(() => {\n            if (win && typeof win === 'object' && isWindowClosed(win)) {\n                interval.cancel();\n                listenerOptions.handleError(new Error('Post message target window is closed'));\n            }\n        }, 50);\n    }\n\n    return {\n        cancel() {\n            requestListener.cancel();\n        }\n    };\n}\n\nexport function on(name : string, options : ServerOptionsType | HandlerType, handler : ?HandlerType) : { cancel : () => void } {\n\n    if (typeof options === 'function') {\n        handler = options;\n        options = {};\n    }\n\n    options = options || {};\n\n    options.name = name;\n    options.handler = handler || options.handler;\n\n    return listen(options);\n}\n\nexport function once(name : string, options : ?(ServerOptionsType | HandlerType) = {}, handler : ?HandlerType) : ZalgoPromise<{ source : mixed, origin : string, data : Object }> {\n\n    if (typeof options === 'function') {\n        handler = options;\n        options = {};\n    }\n\n    options = options || {};\n    handler = handler || options.handler;\n    let errorHandler = options.errorHandler;\n\n    let promise = new ZalgoPromise((resolve, reject) => {\n\n        options = options || {};\n\n        options.name = name;\n        options.once = true;\n\n        options.handler = (event) => {\n            resolve(event);\n            if (handler) {\n                return handler(event);\n            }\n        };\n\n        options.errorHandler = (err) => {\n            reject(err);\n            if (errorHandler) {\n                return errorHandler(err);\n            }\n        };\n    });\n\n    let onceListener = listen(options);\n    promise.cancel = onceListener.cancel;\n\n    return promise;\n}\n\nexport function listener(options : ServerOptionsType = {}) : { on : (name : string, handler : HandlerType) => { cancel : () => void } } {\n\n    return {\n        on(name : string, handler : HandlerType) : { cancel : () => void } {\n            return on(name, options, handler);\n        }\n    };\n}\n\nglobal.on = on;\n","/* @flow */\n\nimport { WINDOW_PROP } from '../conf';\nimport { messageListener } from '../drivers';\n\nexport { CONFIG } from '../conf';\n\nexport function disable() {\n    delete window[WINDOW_PROP.POSTROBOT];\n    window.removeEventListener('message', messageListener);\n}\n","/* @flow */\n\nimport { getAncestor } from 'cross-domain-utils/src';\n\nexport * from './client';\nexport * from './server';\nexport * from './config';\n\nexport let parent = getAncestor();\n","/* @flow */\n\nimport { type CrossDomainWindowType } from 'cross-domain-utils/src';\nimport { noop } from 'belter/src';\n\nimport { requestPromises } from './public';\n\nexport function cleanUpWindow(win : CrossDomainWindowType) {\n    for (let promise of requestPromises.get(win, [])) {\n        promise.reject(new Error(`Window cleaned up before response`)).catch(noop);\n    }\n}\n","/* @flow */\n\nimport { initHello } from './lib';\nimport { listenForMessages } from './drivers';\nimport { global } from './global';\n\nexport * from './public';\nexport { markWindowKnown } from './lib';\nexport { serializeMessage, deserializeMessage, ProxyWindow } from './serialize';\nexport { cleanUpWindow } from './clean';\nexport { ZalgoPromise as Promise } from 'zalgo-promise/src';\nexport let bridge = __POST_ROBOT__.__IE_POPUP_SUPPORT__ ? require('./bridge/interface') : null;\n\nif (!global.initialized) {\n    global.initialized = true;\n\n    listenForMessages();\n\n    if (bridge) {\n        bridge.openTunnelToOpener();\n    }\n\n    initHello();\n}\n","/* @flow */\n\n// eslint-disable-next-line import/no-namespace\nimport * as INTERFACE from './interface';\n\nexport * from './interface';\nexport default INTERFACE;\n","/* @flow */\n\nimport { isSameDomain, type CrossDomainWindowType } from 'cross-domain-utils/src';\n\nimport { __ZOID__ } from '../constants';\n\nexport function globalFor(win : CrossDomainWindowType) : ?Object {\n\n    if (!isSameDomain(win)) {\n        return;\n    }\n\n    if (!win[__ZOID__]) {\n        win[__ZOID__] = {};\n    }\n\n    return win[__ZOID__];\n}\n\nexport function localGlobal() : Object {\n    const global = globalFor(window);\n\n    if (!global) {\n        throw new Error(`Could not get local global`);\n    }\n\n    return global;\n}\n\nexport const global = localGlobal();\n","/* @flow */\n\nimport { memoize, stringifyError, base64encode, base64decode } from 'belter/src';\n\nimport { ZOID } from '../constants';\nimport type { ChildPayload } from '../parent';\n\nexport function buildChildWindowName(name : string, childPayload : ChildPayload) : string {\n    return `__${ ZOID }__${ name }__${ base64encode(JSON.stringify(childPayload)) }__`;\n}\n\nexport const parseChildWindowName = memoize(() : ChildPayload => {\n    if (!window.name) {\n        throw new Error(`No window name`);\n    }\n\n    const [ , zoidcomp, name, encodedPayload ] = window.name.split('__');\n\n    if (zoidcomp !== ZOID) {\n        throw new Error(`Window not rendered by zoid - got ${ zoidcomp }`);\n    }\n\n    if (!name) {\n        throw new Error(`Expected component name`);\n    }\n\n    if (!encodedPayload) {\n        throw new Error(`Expected encoded payload`);\n    }\n\n    try {\n        return JSON.parse(base64decode(encodedPayload));\n    } catch (err) {\n        throw new Error(`Can not decode window name payload: ${ encodedPayload }: ${ stringifyError(err) }`);\n    }\n});\n\nexport const isZoidComponentWindow = memoize(() => {\n    try {\n        parseChildWindowName();\n    } catch (err) {\n        return false;\n    }\n\n    return true;\n});\n","/* @flow */\n\nimport { ZalgoPromise } from 'zalgo-promise/src';\nimport { toCSS } from 'belter/src';\n\nexport type ProxyElement = {|\n    resize : ({ width : ?number, height : ?number }) => void,\n    getElement : () => ZalgoPromise<HTMLElement>\n|};\n\nexport function getProxyElement(element : HTMLElement) : ProxyElement {\n    return {\n        resize({ width, height } : { width : ?number, height : ?number }) {\n            if (typeof width === 'number') {\n                element.style.width = toCSS(width);\n            }\n    \n            if (typeof height === 'number') {\n                element.style.height = toCSS(height);\n            }\n        },\n\n        getElement() : ZalgoPromise<HTMLElement> {\n            return ZalgoPromise.try(() => {\n                if (this.source && this.source !== window) {\n                    throw new Error(`Can not call getElement from a remote window`);\n                }\n    \n                return element;\n            });\n        }\n    };\n}\n","/* @flow */\n\nimport { getDomain, isSameDomain, type CrossDomainWindowType } from 'cross-domain-utils/src';\n\nimport type { Component } from '../component';\nimport type { PropsType, MixedPropDefinitionType } from '../component/props';\n\nimport type { ChildHelpers } from './index';\n\nexport function normalizeChildProp<T, P>(component : Component<P>, props : (PropsType<P>), key : string, value : T, helpers : ChildHelpers<P>) : ?T  {\n\n    // $FlowFixMe\n    const prop : MixedPropDefinitionType<P> = component.getPropDefinition(key);\n\n    if (!prop) {\n        return value;\n    }\n\n    const { focus, close, resize, onError, onPropsChange } = helpers;\n\n    if (typeof prop.childDecorate === 'function') {\n        return prop.childDecorate({ value, focus, close, resize, onError, onPropsChange });\n    }\n\n    return value;\n}\n\n// eslint-disable-next-line max-params\nexport function normalizeChildProps<P>(parentComponentWindow : CrossDomainWindowType, component : Component<P>, props : (PropsType<P>), origin : string, helpers : ChildHelpers<P>, isUpdate : boolean = false) : (PropsType<P>) {\n\n    const result = {};\n\n    // $FlowFixMe\n    for (const key of Object.keys(props)) {\n        const prop = component.getPropDefinition(key);\n\n        if (prop && prop.sameDomain && (origin !== getDomain(window) || !isSameDomain(parentComponentWindow))) {\n            continue;\n        }\n\n        const value = normalizeChildProp(component, props, key, props[key], helpers);\n\n        result[key] = value;\n        if (prop && prop.alias && !result[prop.alias]) {\n            result[prop.alias] = value;\n        }\n    }\n\n    if (!isUpdate) {\n        for (const key of component.getPropNames()) {\n            if (!props.hasOwnProperty(key)) {\n                result[key] = normalizeChildProp(component, props, key, props[key], helpers);\n            }\n        }\n    }\n\n    // $FlowFixMe\n    return result;\n}\n","/* @flow */\n/* eslint max-lines: 0 */\n\nimport { isSameDomain, matchDomain, getDomain, getOpener, getTop, getParent,\n    getNthParentFromTop, getAncestor, getAllFramesInWindow, type CrossDomainWindowType, onCloseWindow } from 'cross-domain-utils/src';\nimport { markWindowKnown, deserializeMessage } from 'post-robot/src';\nimport { ZalgoPromise } from 'zalgo-promise/src';\nimport { extend, memoized, waitForDocumentBody, onResize, getElementSafe } from 'belter/src';\n\nimport { parseChildWindowName, globalFor } from '../lib';\nimport { CONTEXT, INITIAL_PROPS, WINDOW_REFERENCES } from '../constants';\nimport type { Component } from '../component';\nimport type { PropsType } from '../component/props';\nimport type { WindowRef, PropRef, ParentExportsType } from '../parent';\n\nimport { normalizeChildProps } from './props';\n\nexport type ChildExportsType<P> = {|\n    updateProps : (props : (PropsType<P>)) => ZalgoPromise<void>,\n    close : () => ZalgoPromise<void>\n|};\n\nexport type ChildHelpers<P> = {|\n    close : () => ZalgoPromise<void>,\n    focus : () => ZalgoPromise<void>,\n    resize : ({ width : ?number, height : ?number }) => ZalgoPromise<void>,\n    onError : (mixed) => ZalgoPromise<void>,\n    onPropsChange : ((PropsType<P>) => void) => void\n|};\n\n/*  Child Component\n    ---------------\n\n    This is the portion of code which runs inside the frame or popup window containing the component's implementation.\n\n    When the component author calls myComponent.attach(), it creates a new instance of ChildComponent, which is then\n    responsible for managing the state and messaging back up to the parent, and providing props for the component to\n    utilize.\n*/\n\nexport class ChildComponent<P> {\n\n    component : Component<P>\n    props : PropsType<P>\n    context : string\n    parent : ParentExportsType<P>\n    parentComponentWindow : CrossDomainWindowType\n\n    onPropHandlers : Array<(PropsType<P>) => void> // eslint-disable-line flowtype/no-mutable-array\n    autoResize : { width : boolean, height : boolean, element? : string }\n\n    constructor(component : Component<P>) {\n        ZalgoPromise.try(() => {\n            this.component = component;\n            this.onPropHandlers = [];\n            \n            const { parent, domain, exports, context, props } = parseChildWindowName();\n\n            this.context = context;\n            this.parentComponentWindow = this.getWindowByRef(parent);\n            this.parent = deserializeMessage(this.parentComponentWindow, domain, exports);\n\n            this.checkParentDomain(domain);\n\n            const initialProps = this.getPropsByRef(this.parentComponentWindow, domain, props);\n            this.setProps(initialProps, domain);\n            markWindowKnown(this.parentComponentWindow);\n            \n            this.watchForClose();\n\n            return this.parent.init(this.buildExports());\n\n        }).then(() => {\n            return this.watchForResize();\n\n        }).catch(err => {\n            this.onError(err);\n        });\n    }\n\n    getHelpers() : ChildHelpers<P> {\n        return {\n            focus:         () => this.focus(),\n            close:         () => this.close(),\n            resize:        ({ width, height }) => this.resize({ width, height }),\n            onError:       (err) => this.onError(err),\n            onPropsChange: (handler) => this.onPropsChange(handler)\n        };\n    }\n\n    checkParentDomain(domain : string) {\n        if (!matchDomain(this.component.allowedParentDomains, domain)) {\n            throw new Error(`Can not be rendered by domain: ${ domain }`);\n        }\n    }\n\n    onPropsChange(handler : Function) {\n        this.onPropHandlers.push(handler);\n    }\n\n    getPropsByRef(parentComponentWindow : CrossDomainWindowType, domain : string, { type, value, uid } : PropRef) : (PropsType<P>) {\n        let props;\n\n        if (type === INITIAL_PROPS.RAW) {\n            props = value;\n        } else if (type === INITIAL_PROPS.UID) {\n\n            if (!isSameDomain(parentComponentWindow)) {\n                if (window.location.protocol === 'file:') {\n                    throw new Error(`Can not get props from file:// domain`);\n                }\n\n                throw new Error(`Parent component window is on a different domain - expected ${ getDomain() } - can not retrieve props`);\n            }\n\n            const global = globalFor(parentComponentWindow);\n\n            if (!global) {\n                throw new Error(`Can not find global for parent component - can not retrieve props`);\n            }\n\n            props = global.props[uid];\n        }\n\n        if (!props) {\n            throw new Error(`Initial props not found`);\n        }\n\n        return deserializeMessage(parentComponentWindow, domain, props);\n    }\n\n    getWindowByRef(ref : WindowRef) : CrossDomainWindowType {\n        const { type } = ref;\n        let result;\n    \n        if (type === WINDOW_REFERENCES.OPENER) {\n            result = getOpener(window);\n    \n        } else if (type === WINDOW_REFERENCES.TOP) {\n            result = getTop(window);\n    \n        } else if (type === WINDOW_REFERENCES.PARENT) {\n            // $FlowFixMe\n            const { distance } = ref;\n    \n            if (distance) {\n                result = getNthParentFromTop(window, distance);\n            } else {\n                result = getParent(window);\n            }\n        }\n    \n        if (type === WINDOW_REFERENCES.GLOBAL) {\n            // $FlowFixMe\n            const { uid } = ref;\n            const ancestor = getAncestor(window);\n    \n            if (ancestor) {\n                for (const frame of getAllFramesInWindow(ancestor)) {\n                    const global = globalFor(frame);\n    \n                    if (global && global.windows && global.windows[uid]) {\n                        result = global.windows[uid];\n                        break;\n                    }\n                }\n            }\n        }\n    \n        if (!result) {\n            throw new Error(`Unable to find ${ type } window`);\n        }\n    \n        return result;\n    }\n\n    getProps() : PropsType<P> {\n        // $FlowFixMe\n        this.props = this.props || {};\n        return this.props;\n    }\n\n\n    setProps(props : PropsType<P>, origin : string, isUpdate : boolean = false) {\n        const helpers = this.getHelpers();\n        const existingProps = this.getProps();\n        const normalizedProps = normalizeChildProps(this.parentComponentWindow, this.component, props, origin, helpers, isUpdate);\n\n        extend(existingProps, normalizedProps);\n\n        for (const handler of this.onPropHandlers) {\n            handler.call(this, existingProps);\n        }\n    }\n\n    watchForClose() {\n        window.addEventListener('beforeunload', () => {\n            this.parent.checkClose.fireAndForget();\n        });\n\n        window.addEventListener('unload', () => {\n            this.parent.checkClose.fireAndForget();\n        });\n\n        onCloseWindow(this.parentComponentWindow, () => {\n            this.destroy();\n        });\n    }\n\n    enableAutoResize({ width = false, height = true, element = 'body' } : { width : boolean, height : boolean, element : string } = {}) {\n        this.autoResize = { width, height, element };\n        this.watchForResize();\n    }\n\n    getAutoResize() : { width : boolean, height : boolean, element : ?HTMLElement } {\n        let { width = false, height = false, element = 'body' } = this.autoResize || this.component.autoResize || {};\n        element = getElementSafe(element);\n        return { width, height, element };\n    }\n\n    @memoized\n    watchForResize() : ?ZalgoPromise<void> {\n        return waitForDocumentBody().then(() => {\n            const { width, height, element } = this.getAutoResize();\n\n            if (!element) {\n                return;\n            }\n\n            if (!width && !height) {\n                return;\n            }\n    \n            if (this.context === CONTEXT.POPUP) {\n                return;\n            }\n\n            onResize(element, ({ width: newWidth, height: newHeight }) => {\n                this.resize({\n                    width:  width ? newWidth : undefined,\n                    height: height ? newHeight : undefined\n                });\n            }, { width, height });\n        });\n    }\n\n    buildExports() : ChildExportsType<P> {\n\n        const self = this;\n\n        return {\n            updateProps(props : (PropsType<P>)) : ZalgoPromise<void> {\n                return ZalgoPromise.try(() => self.setProps(props, this.__origin__, true));\n            },\n\n            close() : ZalgoPromise<void> {\n                return ZalgoPromise.try(() => self.destroy());\n            }\n        };\n    }\n\n    resize({ width, height } : { width : ?number, height : ?number }) : ZalgoPromise<void> {\n        return this.parent.resize.fireAndForget({ width, height });\n    }\n\n    close() : ZalgoPromise<void> {\n        return this.parent.close();\n    }\n    \n    destroy() : ZalgoPromise<void> {\n        return ZalgoPromise.try(() => {\n            window.close();\n        });\n    }\n\n    focus() : ZalgoPromise<void> {\n        return ZalgoPromise.try(() => {\n            window.focus();\n        });\n    }\n\n    onError(err : mixed) : ZalgoPromise<void> {\n        return ZalgoPromise.try(() => {\n            if (this.parent && this.parent.onError) {\n                return this.parent.onError(err);\n            } else {\n                throw err;\n            }\n        });\n    }\n}\n","/* @flow */\n\nimport { ZalgoPromise } from 'zalgo-promise/src';\nimport { cleanUpWindow, ProxyWindow } from 'post-robot/src';\nimport { assertSameDomain } from 'cross-domain-utils/src';\nimport { iframe, popup, destroyElement, normalizeDimension, watchElementForClose,\n    awaitFrameWindow, addClass, removeClass, uniqueID } from 'belter/src';\n\nimport { CONTEXT, CLASS } from '../constants';\nimport { getProxyElement, type ProxyElement } from '../lib';\n\n\nexport type ContextDriverType = {|\n    renderedIntoContainer : boolean,\n\n    open : (?ProxyElement) => ZalgoPromise<{ proxyWin : ProxyWindow, proxyFrame? : ProxyElement }>,\n    openPrerender : (ProxyWindow, ProxyElement) => ZalgoPromise<{ proxyPrerenderWin : ProxyWindow, proxyPrerenderFrame? : ProxyElement }>,\n\n    resize? : ({ width : ?number, height : ?number }) => void,\n    switchPrerender? : ({ proxyFrame : ProxyElement, proxyPrerenderFrame : ProxyElement }) => ZalgoPromise<void>,\n\n    delegate : $ReadOnlyArray<string>\n|};\n\nexport const RENDER_DRIVERS : { [string] : ContextDriverType } = {};\n\nRENDER_DRIVERS[CONTEXT.IFRAME] = {\n    renderedIntoContainer: true,\n\n    open(proxyOutlet) : ZalgoPromise<{ proxyWin : ProxyWindow, proxyFrame? : ProxyElement }> {\n        if (!proxyOutlet) {\n            throw new Error(`Expected container element to be passed`);\n        }\n\n        return proxyOutlet.getElement().then(outlet => {\n            const frame = iframe({\n                attributes: {\n                    title: this.component.name,\n                    ...this.component.attributes.iframe\n                },\n                class: [\n                    CLASS.COMPONENT_FRAME,\n                    CLASS.INVISIBLE\n                ]\n            }, outlet);\n\n            const frameWatcher = watchElementForClose(frame, () => this.close());\n            this.clean.register(() => frameWatcher.cancel());\n            this.clean.register(() => destroyElement(frame));\n    \n            return awaitFrameWindow(frame).then(win => {\n                this.clean.register(() => cleanUpWindow(win));\n\n                return {\n                    proxyWin:   ProxyWindow.toProxyWindow(win),\n                    proxyFrame: getProxyElement(frame)\n                };\n            });\n        });\n    },\n\n    openPrerender(proxyWin : ProxyWindow, proxyElement : ProxyElement) : ZalgoPromise<{ proxyPrerenderWin : ProxyWindow, proxyPrerenderFrame? : ProxyElement }> {\n        return proxyElement.getElement().then(element => {\n            const prerenderFrame = iframe({\n                attributes: {\n                    name: `__zoid_prerender_frame__${ this.component.name }_${ uniqueID() }__`,\n                    ...this.component.attributes.iframe\n                },\n                class: [\n                    CLASS.PRERENDER_FRAME,\n                    CLASS.VISIBLE\n                ]\n            }, element);\n\n            this.clean.register(() => destroyElement(prerenderFrame));\n\n            return awaitFrameWindow(prerenderFrame).then(prerenderFrameWindow => {\n                return assertSameDomain(prerenderFrameWindow);\n            }).then(win => {\n                return {\n                    proxyPrerenderWin:   ProxyWindow.toProxyWindow(win),\n                    proxyPrerenderFrame: getProxyElement(prerenderFrame)\n                };\n            });\n        });\n    },\n\n    switchPrerender({ proxyFrame, proxyPrerenderFrame } : { proxyFrame : ProxyElement, proxyPrerenderFrame : ProxyElement }) : ZalgoPromise<void> {\n        return ZalgoPromise.all([\n            proxyFrame.getElement(),\n            proxyPrerenderFrame.getElement()\n        ]).then(([ frame, prerenderFrame ]) => {\n            addClass(prerenderFrame, CLASS.INVISIBLE);\n            removeClass(prerenderFrame, CLASS.VISIBLE);\n            addClass(frame, CLASS.VISIBLE);\n            removeClass(frame, CLASS.INVISIBLE);\n            setTimeout(() => destroyElement(prerenderFrame), 1);\n        });\n    },\n\n    delegate: [\n        'getProxyContainer',\n        'renderContainer',\n        'prerender',\n        'switchPrerender',\n        'open'\n    ],\n\n    resize({ width, height } : { width : ?number, height : ?number }) {\n        this.proxyOutlet.resize({ width, height });\n    }\n};\n\nif (__ZOID__.__POPUP_SUPPORT__) {\n    RENDER_DRIVERS[CONTEXT.POPUP] = {\n        renderedIntoContainer: false,\n\n        open() : ZalgoPromise<{ proxyWin : ProxyWindow, proxyFrame? : ProxyElement }> {\n            return ZalgoPromise.try(() => {\n                let { width, height } = this.component.dimensions;\n\n                width = normalizeDimension(width, window.outerWidth);\n                height = normalizeDimension(height, window.outerWidth);\n\n                const win = popup('', {\n                    width,\n                    height,\n                    ...this.component.attributes.popup\n                });\n\n                this.clean.register(() => {\n                    win.close();\n                    cleanUpWindow(win);\n                });\n\n                return {\n                    proxyWin: ProxyWindow.toProxyWindow(win)\n                };\n            });\n        },\n\n        openPrerender(proxyWin : ProxyWindow) : ZalgoPromise<{ proxyPrerenderWin : ProxyWindow, proxyPrerenderFrame? : ProxyElement }> {\n            return ZalgoPromise.try(() => {\n                return {\n                    proxyPrerenderWin: proxyWin\n                };\n            });\n        },\n\n        delegate: [\n            'getProxyContainer',\n            'renderContainer'\n        ]\n    };\n}\n","/* @flow */\n/* eslint max-lines: 0 */\n\nimport { send, bridge, serializeMessage, ProxyWindow } from 'post-robot/src';\nimport { isSameDomain, matchDomain, getDomainFromUrl, isBlankDomain,\n    onCloseWindow, getDomain, type CrossDomainWindowType, getDistanceFromTop, isTop, normalizeMockUrl, assertSameDomain } from 'cross-domain-utils/src';\nimport { ZalgoPromise } from 'zalgo-promise/src';\nimport { addEventListener, uniqueID, elementReady, writeElementToWindow,\n    noop, onResize, extend, extendUrl, memoized, appendChild, cleanup, type CleanupType,\n    once, stringifyError, destroyElement, isDefined, createElement, getElementSafe, watchElementForClose } from 'belter/src';\n\nimport { POST_MESSAGE, CONTEXT, CLASS,\n    INITIAL_PROPS, WINDOW_REFERENCES } from '../constants';\nimport type { Component, onErrorPropType } from '../component';\nimport { global, buildChildWindowName, getProxyElement, type ProxyElement } from '../lib';\nimport type { PropsInputType, PropsType } from '../component/props';\nimport type { ChildExportsType } from '../child';\nimport type { DimensionsType } from '../types';\n\nimport { RENDER_DRIVERS, type ContextDriverType } from './drivers';\nimport { propsToQuery, normalizeProps } from './props';\n\nglobal.props = global.props || {};\nglobal.windows = global.windows || {};\n\nexport type RenderOptionsType<P> = {|\n    uid : string,\n    props : PropsInputType<P>,\n    tag : string,\n    context : string,\n    outlet : HTMLElement,\n    close : (?string) => ZalgoPromise<void>,\n    focus : () => ZalgoPromise<ProxyWindow>,\n    doc : Document,\n    container? : HTMLElement,\n    dimensions : DimensionsType,\n    state : Object\n|};\n\nexport type ParentExportsType<P> = {|\n    init : (ChildExportsType<P>) => ZalgoPromise<void>,\n    close : () => ZalgoPromise<void>,\n    checkClose : () => ZalgoPromise<void>,\n    resize : ({ width? : ?number, height? : ?number }) => ZalgoPromise<void>,\n    onError : (mixed) => ZalgoPromise<void>\n|};\n\nexport type PropRef =\n    {| type : typeof INITIAL_PROPS.RAW, uid? : string, value? : string |};\n\nexport type WindowRef =\n    {| type : typeof WINDOW_REFERENCES.OPENER |} |\n    {| type : typeof WINDOW_REFERENCES.TOP |} |\n    {| type : typeof WINDOW_REFERENCES.PARENT, distance : number |} |\n    {| type : typeof WINDOW_REFERENCES.GLOBAL, uid : string |};\n\nexport type ChildPayload = {|\n    uid : string,\n    tag : string,\n    context : $Values<typeof CONTEXT>,\n    domain : string,\n    parent : WindowRef,\n    props : PropRef,\n    exports : string\n|};\n\nexport type StateType = Object;\n\nexport type ParentHelpers<P> = {|\n    state : StateType,\n    close : () => ZalgoPromise<void>,\n    focus : () => ZalgoPromise<void>,\n    resize : ({ width : ?number, height : ?number }) => ZalgoPromise<void>,\n    onError : (mixed) => ZalgoPromise<void>,\n    updateProps : PropsInputType<P> => ZalgoPromise<void>\n|};\n\nexport class ParentComponent<P> {\n\n    component : Component<P>\n    driver : ContextDriverType\n    clean : CleanupType\n\n    initPromise : ZalgoPromise<void>\n    \n    props : PropsType<P>\n    state : StateType\n    child : ?ChildExportsType<P>\n\n    proxyWin : ?ProxyWindow\n    proxyOutlet : ?ProxyElement\n\n    constructor(component : Component<P>, props : PropsInputType<P>) {\n        try {\n            this.initPromise = new ZalgoPromise();\n            this.clean = cleanup(this);\n            this.state = {};\n\n            this.component = component;\n    \n            this.setProps(props);\n            this.component.registerActiveComponent(this);\n            this.clean.register(() => this.component.destroyActiveComponent(this));\n            this.watchForUnload();\n\n        } catch (err) {\n            this.onError(err, props.onError).catch(noop);\n            throw err;\n        }\n    }\n\n    render(target : CrossDomainWindowType, container : string | HTMLElement, context : $Values<typeof CONTEXT>) : ZalgoPromise<void> {\n        return ZalgoPromise.try(() => {\n            this.component.log(`render`);\n\n            this.driver = RENDER_DRIVERS[context];\n            const uid = `${ this.component.tag }-${ uniqueID() }`;\n            const domain = this.getDomain();\n            const initialDomain = this.getInitialDomain();\n            \n            this.component.checkAllowRender(target, domain, container);\n\n            if (target !== window) {\n                this.delegate(context, target);\n            }\n\n            const tasks = {};\n\n            tasks.init = this.initPromise;\n            tasks.buildUrl = this.buildUrl();\n            tasks.onRender = this.props.onRender();\n\n            tasks.getProxyContainer = this.getProxyContainer(container);\n\n            tasks.renderContainer = tasks.getProxyContainer.then(proxyContainer => {\n                return this.renderContainer(proxyContainer, { context, uid });\n            });\n\n            tasks.open = this.driver.renderedIntoContainer\n                ? tasks.renderContainer.then(proxyOutlet => this.open(proxyOutlet))\n                : this.open();\n\n            tasks.buildWindowName = tasks.open.then(({ proxyWin }) => {\n                return this.buildWindowName({ proxyWin, initialDomain, domain, target, context, uid });\n            });\n\n            tasks.setWindowName =  ZalgoPromise.all([ tasks.open, tasks.buildWindowName ]).then(([ { proxyWin }, windowName ]) => {\n                return proxyWin.setName(windowName);\n            });\n\n            tasks.watchForClose = tasks.open.then(({ proxyWin }) => {\n                return this.watchForClose(proxyWin);\n            });\n\n            tasks.prerender = ZalgoPromise.all([ tasks.open, tasks.renderContainer ]).then(([ { proxyWin }, proxyOutlet ]) => {\n                return this.prerender(proxyWin, proxyOutlet, { context, uid });\n            });\n\n            tasks.onDisplay = tasks.prerender.then(() => {\n                return this.props.onDisplay();\n            });\n\n            tasks.openBridge = tasks.open.then(({ proxyWin }) => {\n                return this.openBridge(proxyWin, initialDomain, context);\n            });\n\n            tasks.loadUrl = ZalgoPromise.all([ tasks.open, tasks.buildUrl, tasks.setWindowName ]).then(([ { proxyWin }, url ]) => {\n                return proxyWin.setLocation(url);\n            });\n\n            tasks.switchPrerender = ZalgoPromise.all([ tasks.open, tasks.prerender, tasks.init ]).then(([ { proxyFrame }, { proxyPrerenderFrame } ]) => {\n                return this.switchPrerender({ proxyFrame, proxyPrerenderFrame });\n            });\n\n            tasks.runTimeout = tasks.loadUrl.then(() => {\n                return this.runTimeout();\n            });\n\n            tasks.onRender = tasks.init.then(() => {\n                return this.props.onRendered();\n            });\n\n            return ZalgoPromise.hash(tasks);\n            \n        }).catch(err => {\n            return ZalgoPromise.all([\n                this.onError(err),\n                this.destroy(err)\n            ]);\n        }).then(noop);\n    }\n\n    getProxyContainer(container : string | HTMLElement) : ZalgoPromise<ProxyElement> {\n        return ZalgoPromise.try(() => {\n            return elementReady(container);\n        }).then(containerElement => {\n            return getProxyElement(containerElement);\n        });\n    }\n\n    buildWindowName({ proxyWin, initialDomain, domain, target, uid, context } : { proxyWin : ProxyWindow, initialDomain : string, domain : string | RegExp, target : CrossDomainWindowType, context : $Values<typeof CONTEXT>, uid : string }) : string {\n        return buildChildWindowName(this.component.name, this.buildChildPayload({ proxyWin, initialDomain, domain, target, context, uid }));\n    }\n\n    getPropsRef(proxyWin : ProxyWindow, target : CrossDomainWindowType, domain : string | RegExp, uid : string) : PropRef {\n        const value = serializeMessage(proxyWin, domain, this.getPropsForChild(domain));\n\n        const propRef = isSameDomain(target)\n            ? { type: INITIAL_PROPS.RAW, value }\n            : { type: INITIAL_PROPS.UID, uid };\n\n        if (propRef.type === INITIAL_PROPS.UID) {\n            global.props[uid] = value;\n\n            this.clean.register(() => {\n                delete global.props[uid];\n            });\n        }\n\n        return propRef;\n    }\n\n    buildChildPayload({ proxyWin, initialDomain, domain, target = window, context, uid } : { proxyWin : ProxyWindow, initialDomain : string, domain : string | RegExp, target : CrossDomainWindowType, context : $Values<typeof CONTEXT>, uid : string } = {}) : ChildPayload {\n        return {\n            uid,\n            context,\n            domain:  getDomain(window),\n            tag:     this.component.tag,\n            parent:  this.getWindowRef(target, initialDomain, uid, context),\n            props:   this.getPropsRef(proxyWin, target, domain, uid),\n            exports: serializeMessage(proxyWin, domain, this.buildParentExports(proxyWin))\n        };\n    }\n\n    getHelpers() : ParentHelpers<P> {\n        return {\n            state:       this.state,\n            close:       () => this.close(),\n            focus:       () => this.focus(),\n            resize:      ({ width, height }) => this.resize({ width, height }),\n            onError:     (err) => this.onError(err),\n            updateProps: (props) => this.updateProps(props)\n        };\n    }\n\n    setProps(props : PropsInputType<P>, isUpdate : boolean = false) {\n        if (this.component.validate) {\n            this.component.validate({ props });\n        }\n\n        const helpers = this.getHelpers();\n\n        // $FlowFixMe\n        this.props = this.props || {};\n        extend(this.props, normalizeProps(this.component, this, props, helpers, isUpdate));\n\n        for (const key of this.component.getPropNames()) {\n            const propDef = this.component.getPropDefinition(key);\n            if (propDef.required !== false && !isDefined(this.props[key])) {\n                throw new Error(`Expected prop \"${ key }\" to be defined`);\n            }\n        }\n    }\n\n    buildUrl() : ZalgoPromise<string> {\n        return propsToQuery({ ...this.component.props, ...this.component.builtinProps }, this.props).then(query => {\n            return extendUrl(normalizeMockUrl(this.component.getUrl(this.props)), { query });\n        });\n    }\n\n    getDomain() : string | RegExp {\n        return this.component.getDomain(this.props);\n    }\n\n    getInitialDomain() : string {\n        return this.component.getInitialDomain(this.props);\n    }\n\n    getPropsForChild(domain : string | RegExp) : (PropsType<P>) {\n        const result = {};\n\n        for (const key of Object.keys(this.props)) {\n            const prop = this.component.getPropDefinition(key);\n\n            if (prop && prop.sendToChild === false) {\n                continue;\n            }\n\n            if (prop && prop.sameDomain && !matchDomain(domain, getDomain(window))) {\n                continue;\n            }\n\n            // $FlowFixMe\n            result[key] = this.props[key];\n        }\n\n        // $FlowFixMe\n        return result;\n    }\n\n    updateProps(props : PropsInputType<P>) : ZalgoPromise<void> {\n        this.setProps(props, true);\n\n        return this.initPromise.then(() => {\n            if (this.child) {\n                return this.child.updateProps(this.getPropsForChild(this.getDomain()));\n            }\n        });\n    }\n    \n    open(proxyOutlet? : ProxyElement) : ZalgoPromise<{ proxyWin : ProxyWindow, proxyFrame? : ProxyElement }> {\n        return ZalgoPromise.try(() => {\n            this.component.log(`open`);\n\n            const windowProp = this.props.window;\n\n            if (windowProp) {\n                this.clean.register(() => windowProp.close());\n                // $FlowFixMe\n                return {\n                    proxyWin: ProxyWindow.toProxyWindow(windowProp)\n                };\n            }\n\n            return this.driver.open.call(this, proxyOutlet);\n\n        }).then(({ proxyWin, proxyFrame }) => {\n            this.proxyWin = proxyWin;\n\n            return { proxyWin, proxyFrame };\n        });\n    }\n\n    focus() : ZalgoPromise<void> {\n        return ZalgoPromise.try(() => {\n            if (this.proxyWin) {\n                return this.proxyWin.focus().then(noop);\n            }\n        });\n    }\n\n    switchPrerender({ proxyFrame, proxyPrerenderFrame } : { proxyFrame : ?ProxyElement, proxyPrerenderFrame : ?ProxyElement }) : ZalgoPromise<void> {\n        return ZalgoPromise.try(() => {\n            if (this.driver.switchPrerender) {\n                if (this.props.window) {\n                    return;\n                }\n\n                if (!proxyFrame || !proxyPrerenderFrame) {\n                    throw new Error(`Expected to have both proxy frame and proxy prerender frame to switch`);\n                }\n\n                return this.driver.switchPrerender.call(this, { proxyFrame, proxyPrerenderFrame });\n            }\n        });\n    }\n\n    delegate(context : $Values<typeof CONTEXT>, target : CrossDomainWindowType) {\n        this.component.log(`delegate`);\n\n        const props = {};\n        for (const propName of this.component.getPropNames()) {\n            if (this.component.getPropDefinition(propName).allowDelegate) {\n                props[propName] = this.props[propName];\n            }\n        }\n\n        const overridesPromise = send(target, `${ POST_MESSAGE.DELEGATE }_${ this.component.name }`, {\n            context,\n            props,\n            overrides: {\n                close:   () => this.close(),\n                onError: (err) => this.onError(err)\n            }\n\n        }).then(({ data }) => {\n            this.clean.register(data.destroy);\n            return data.overrides;\n\n        }).catch(err => {\n            throw new Error(`Unable to delegate rendering. Possibly the component is not loaded in the target window.\\n\\n${ stringifyError(err) }`);\n        });\n\n        for (const key of this.driver.delegate) {\n            // $FlowFixMe\n            this[key] = function overriddenFunction() : ZalgoPromise<mixed> {\n                return overridesPromise.then(overrides => {\n                    return overrides[key].apply(this, arguments);\n                });\n            };\n        }\n    }\n\n    getWindowRef(target : CrossDomainWindowType, domain : string, uid : string, context : $Values<typeof CONTEXT>) : WindowRef {\n        \n        if (domain === getDomain(window)) {\n            global.windows[uid] = window;\n            this.clean.register(() => {\n                delete global.windows[uid];\n            });\n    \n            return { type: WINDOW_REFERENCES.GLOBAL, uid };\n        }\n\n        if (context === CONTEXT.POPUP) {\n            return { type: WINDOW_REFERENCES.OPENER };\n        }\n\n        if (isTop(window)) {\n            return { type: WINDOW_REFERENCES.TOP };\n        }\n\n        return { type: WINDOW_REFERENCES.PARENT, distance: getDistanceFromTop(window) };\n    }\n\n    watchForClose(proxyWin : ProxyWindow) : ZalgoPromise<void> {\n        return proxyWin.awaitWindow().then(win => {\n            const closeWindowListener = onCloseWindow(win, () => {\n                this.component.log(`detect_close_child`);\n                return this.close();\n            }, 2000);\n\n            this.clean.register(closeWindowListener.cancel);\n        });\n    }\n\n    watchForUnload() {\n        const unloadWindowListener = addEventListener(window, 'unload', once(() => {\n            this.component.log(`navigate_away`);\n            this.destroy(new Error(`Window navigated away`));\n        }));\n\n        this.clean.register(unloadWindowListener.cancel);\n    }\n\n    runTimeout() : ZalgoPromise<void> {\n        return ZalgoPromise.try(() => {\n            const timeout = this.props.timeout;\n\n            if (timeout) {\n                return this.initPromise.timeout(timeout, new Error(`Loading component timed out after ${ timeout } milliseconds`));\n            }\n        });\n    }\n\n    initChild(child : ChildExportsType<P>) : ZalgoPromise<void> {\n        return ZalgoPromise.try(() => {\n            this.clean.set('child', child);\n            this.initPromise.resolve();\n        });\n    }\n\n    buildParentExports(win : ProxyWindow) : ParentExportsType<P> {\n        const onError    = (err) => this.onError(err);\n        const init       = (child) => this.initChild(child);\n        const close      = () => this.close();\n        const checkClose = () => this.checkClose(win);\n        const resize     = ({ width, height }) => this.resize({ width, height });\n\n        init.onError = onError;\n\n        return { init, close, checkClose, resize, onError };\n    }\n\n    resize({ width, height } : { width? : ?number, height? : ?number }) : ZalgoPromise<void> {\n        return ZalgoPromise.try(() => {\n            if (this.driver.resize) {\n                return this.driver.resize.call(this, { width, height });\n            }\n        });\n    }\n\n    checkClose(win : ProxyWindow) : ZalgoPromise<void> {\n        return win.isClosed().then(closed => {\n            if (closed) {\n                return this.close();\n            }\n\n            return ZalgoPromise.delay(200)\n                .then(() => win.isClosed())\n                .then(secondClosed => {\n                    if (secondClosed) {\n                        return this.close();\n                    }\n                });\n        });\n    }\n\n    @memoized\n    close() : ZalgoPromise<void> {\n        return ZalgoPromise.try(() => {\n            this.component.log(`close`);\n            return this.props.onClose();\n\n        }).then(() => {\n            if (this.child) {\n                this.child.close.fireAndForget().catch(noop);\n            }\n\n            return this.destroy(new Error(`Window closed`));\n        });\n    }\n\n    prerender(proxyWin : ProxyWindow, proxyElement : ProxyElement, { context, uid } : { context : $Values<typeof CONTEXT>, uid : string }) : ZalgoPromise<{ proxyPrerenderWin : ProxyWindow, proxyPrerenderFrame : ?ProxyElement }> {\n        return ZalgoPromise.try(() => {\n            return this.driver.openPrerender.call(this, proxyWin, proxyElement);\n            \n        }).then(({ proxyPrerenderWin, proxyPrerenderFrame }) => {\n            return proxyPrerenderWin.awaitWindow().then(prerenderWindow => {\n\n                if (!isSameDomain(prerenderWindow) || !isBlankDomain(prerenderWindow)) {\n                    return { proxyPrerenderWin, proxyPrerenderFrame };\n                }\n\n                prerenderWindow = assertSameDomain(prerenderWindow);\n        \n                const doc = prerenderWindow.document;\n                const el = this.renderTemplate(this.component.prerenderTemplate, { context, uid, document: doc });\n    \n                if (el.ownerDocument !== doc) {\n                    throw new Error(`Expected prerender template to have been created with document from child window`);\n                }\n    \n                writeElementToWindow(prerenderWindow, el);\n    \n                let { width = false, height = false, element = 'body' } = this.component.autoResize || {};\n                element = getElementSafe(element, doc);\n                \n                if (element && (width || height)) {\n                    onResize(element, ({ width: newWidth, height: newHeight }) => {\n                        this.resize({\n                            width:  width ? newWidth : undefined,\n                            height: height ? newHeight : undefined\n                        });\n                    }, { width, height, win: prerenderWindow });\n                }\n    \n                return { proxyPrerenderWin, proxyPrerenderFrame };\n            });\n        });\n    }\n\n    renderTemplate(renderer : (RenderOptionsType<P>) => HTMLElement, { context, uid, container, document, outlet } : { context : $Values<typeof CONTEXT>, uid : string, container? : HTMLElement, document? : Document, outlet? : HTMLElement }) : HTMLElement {\n        // $FlowFixMe\n        return renderer.call(this, {\n            container,\n            outlet,\n            context,\n            uid,\n            focus:      () => this.focus(),\n            close:      () => this.close(),\n            state:      this.state,\n            props:      this.props,\n            tag:        this.component.tag,\n            doc:        document,\n            dimensions: this.component.dimensions\n        });\n    }\n\n    renderContainer(proxyContainer : ProxyElement, { context, uid } : { context : $Values<typeof CONTEXT>, uid : string }) : ZalgoPromise<ProxyElement> {\n        return ZalgoPromise.try(() => {\n            return proxyContainer.getElement();\n\n        }).then(element => {\n            return elementReady(element);\n\n        }).then(container => {\n            const outlet = createElement('div', {\n                class: [ CLASS.OUTLET ]\n            });\n\n            const innerContainer = this.renderTemplate(this.component.containerTemplate, { context, uid, container, outlet });\n            appendChild(container, innerContainer);\n\n            const outletWatcher = watchElementForClose(outlet, () => this.close());\n            this.clean.register(() => outletWatcher.cancel());\n            this.clean.register(() => destroyElement(outlet));\n            this.clean.register(() => destroyElement(innerContainer));\n\n            this.proxyOutlet = getProxyElement(outlet);\n            return this.proxyOutlet;\n        });\n    }\n\n    destroy(err : mixed = new Error(`Component destroyed before render complete`)) : ZalgoPromise<void> {\n        return ZalgoPromise.try(() => {\n            this.component.log(`destroy`);\n            this.initPromise.asyncReject(err);\n            return this.clean.all();\n        });\n    }\n\n    onError(err : mixed, onError? : onErrorPropType) : ZalgoPromise<void> {\n        // eslint-disable-next-line promise/no-promise-in-callback\n        return ZalgoPromise.try(() => {\n            this.initPromise.asyncReject(err);\n\n            if (!onError && this.props && this.props.onError) {\n                onError = this.props.onError;\n            }\n    \n            if (onError) {\n                return onError(err);\n            }\n\n        }).then(() => {\n            return this.initPromise;\n            \n        }).then(() => {\n            throw err;\n        });\n    }\n\n    openBridge(proxyWin : ProxyWindow, domain : string, context : $Values<typeof CONTEXT>) : ?ZalgoPromise<?CrossDomainWindowType> {\n        if (__POST_ROBOT__.__IE_POPUP_SUPPORT__) {\n            return ZalgoPromise.try(() => {\n                return proxyWin.awaitWindow();\n                \n            }).then(win => {\n                if (!bridge || !bridge.needsBridge({ win, domain }) || bridge.hasBridge(domain, domain)) {\n                    return;\n                }\n\n                const bridgeUrl = this.component.getBridgeUrl();\n\n                if (!bridgeUrl) {\n                    throw new Error(`Bridge needed to render ${ context }`);\n                }\n\n                const bridgeDomain = getDomainFromUrl(bridgeUrl);\n                bridge.linkUrl(win, domain);\n                return bridge.openBridge(normalizeMockUrl(bridgeUrl), bridgeDomain);\n            });\n        }\n    }\n}\n","/* @flow */\n\nimport { ZalgoPromise } from 'zalgo-promise/src';\nimport { dotify, isDefined } from 'belter/src';\n\nimport type { Component } from '../component';\nimport type { BuiltInPropsDefinitionType, PropsInputType, PropsType, MixedPropDefinitionType } from '../component/props';\nimport { PROP_SERIALIZATION } from '../constants';\n\nimport type { ParentComponent, ParentHelpers } from './index';\n\n/*  Normalize Props\n    ---------------\n\n    Turn props into normalized values, using defaults, function options, etc.\n*/\n\nexport function normalizeProps<P>(component : Component<P>, instance : ParentComponent<P>, props : PropsInputType<P>, helpers : ParentHelpers<P>, isUpdate : boolean = false) : (PropsType<P>) { // eslint-disable-line complexity\n\n    // $FlowFixMe\n    props = props || {};\n    const result : $Shape<P> = { ...props }; // eslint-disable-line no-undef\n\n    const propNames = isUpdate\n        ? []\n        : [ ...component.getPropNames() ];\n\n    // $FlowFixMe\n    for (const key of Object.keys(props)) {\n        if (propNames.indexOf(key) === -1) {\n            propNames.push(key);\n        }\n    }\n\n    const aliases = [];\n\n    const { state, close, focus, onError } = helpers;\n\n    for (const key of propNames) {\n        const propDef = component.getPropDefinition(key);\n        // $FlowFixMe\n        let value = props[key];\n\n        if (!propDef) {\n            continue;\n        }\n\n        const alias = propDef.alias;\n        if (alias) {\n            if (!isDefined(value) && isDefined(props[alias])) {\n                value = props[alias];\n            }\n            aliases.push(alias);\n        }\n\n        if (propDef.value) {\n            value = propDef.value({ props: result, state, close, focus, onError });\n        }\n\n        if (!isDefined(value) && propDef.default) {\n            value = propDef.default({ props: result, state, close, focus, onError });\n        }\n\n        if (isDefined(value)) {\n            if (propDef.type === 'array' ? !Array.isArray(value) : (typeof value !== propDef.type)) {\n                throw new TypeError(`Prop is not of type ${ propDef.type }: ${ key }`);\n            }\n        }\n        \n        // $FlowFixMe\n        result[key] = value;\n    }\n\n    for (const alias of aliases) {\n        // $FlowFixMe\n        delete result[alias];\n    }\n\n    // $FlowFixMe\n    for (const key of Object.keys(result)) {\n        const propDef = component.getPropDefinition(key);\n        // $FlowFixMe\n        const value = result[key];\n\n        if (!propDef) {\n            continue;\n        }\n\n        if (isDefined(value) && propDef.validate) {\n            // $FlowFixMe\n            propDef.validate({ value, props: result });\n        }\n\n        if (isDefined(value) && propDef.decorate) {\n            // $FlowFixMe\n            result[key] = propDef.decorate({ value, props: result, state, close, focus, onError });\n        }\n    }\n\n    // $FlowFixMe\n    return result;\n}\n\n// $FlowFixMe\nfunction getQueryParam<T, P>(prop : MixedPropDefinitionType<P>, key : string, value : T) : ZalgoPromise<string> {\n    return ZalgoPromise.try(() => {\n        if (typeof prop.queryParam === 'function') {\n            return prop.queryParam({ value });\n        } else if (typeof prop.queryParam === 'string') {\n            return prop.queryParam;\n        } else {\n            return key;\n        }\n    });\n}\n\n// $FlowFixMe\nfunction getQueryValue<T, P>(prop : MixedPropDefinitionType<P>, key : string, value : T) : ZalgoPromise<mixed> {\n    return ZalgoPromise.try(() => {\n        if (typeof prop.queryValue === 'function' && isDefined(value)) {\n            return prop.queryValue({ value });\n        } else {\n            return value;\n        }\n    });\n}\n\nexport function propsToQuery<P>(propsDef : BuiltInPropsDefinitionType<P>, props : (PropsType<P>)) : ZalgoPromise<{ [string] : string }> {\n\n    const params = {};\n\n    return ZalgoPromise.all(Object.keys(props).map(key => {\n\n        const prop = propsDef[key];\n\n        if (!prop) {\n            return; // eslint-disable-line array-callback-return\n        }\n\n        return ZalgoPromise.resolve().then(() => {\n\n            const value = props[key];\n\n            if (!value) {\n                return;\n            }\n\n            if (!prop.queryParam) {\n                return;\n            }\n\n            return value;\n\n        }).then(value => {\n\n            if (value === null || typeof value === 'undefined') {\n                return;\n            }\n\n            return ZalgoPromise.all([\n                // $FlowFixMe\n                getQueryParam(prop, key, value),\n                // $FlowFixMe\n                getQueryValue(prop, key, value)\n            ]).then(([ queryParam, queryValue ]) => {\n\n                let result;\n\n                if (typeof queryValue === 'boolean') {\n                    result = queryValue.toString();\n                } else if (typeof queryValue === 'string') {\n                    result = queryValue.toString();\n                } else if (typeof queryValue === 'object' && queryValue !== null) {\n\n                    if (prop.serialization === PROP_SERIALIZATION.JSON) {\n                        result = JSON.stringify(queryValue);\n                    } else if (prop.serialization === PROP_SERIALIZATION.BASE64) {\n                        result = btoa(JSON.stringify(queryValue));\n                    } else if (prop.serialization === PROP_SERIALIZATION.DOTIFY || !prop.serialization) {\n                        result = dotify(queryValue, key);\n\n                        for (const dotkey of Object.keys(result)) {\n                            params[dotkey] = result[dotkey];\n                        }\n\n                        return;\n                    }\n\n                } else if (typeof queryValue === 'number') {\n                    result = queryValue.toString();\n                }\n\n                params[queryParam] = result;\n            });\n        });\n\n    })).then(() => {\n        return params;\n    });\n}\n","/* @flow */\n\nimport { onCloseWindow, type CrossDomainWindowType } from 'cross-domain-utils/src';\nimport { ZalgoPromise } from 'zalgo-promise/src';\nimport { ProxyWindow } from 'post-robot/src';\nimport { cleanup, type CleanupType } from 'belter/src';\n\nimport { ParentComponent } from '../parent';\nimport { RENDER_DRIVERS, type ContextDriverType } from '../parent/drivers';\nimport type { Component } from '../component';\n\nexport type DelegatePropsType = {|\n    onClose : () => ?ZalgoPromise<void>,\n    onDisplay : () => ?ZalgoPromise<void>,\n    window : ?ProxyWindow\n|};\n\nexport type DelegateOptionsType = {|\n    context : string,\n    props : DelegatePropsType,\n    overrides : {\n        close : () => ZalgoPromise<void>,\n        onError : (mixed) => ZalgoPromise<void>,\n        focus : () => ZalgoPromise<void>\n    }\n|};\n\nexport type DelegateReturnType = {|\n    overrides : Object,\n    destroy : () => ZalgoPromise<void>\n|};\n\nexport class DelegateComponent<P>  {\n\n    component : Component<P>\n    source : CrossDomainWindowType\n    context : string\n    driver : ContextDriverType\n    props : DelegatePropsType\n    clean : CleanupType\n\n    close : () => ZalgoPromise<void>\n    onError : (mixed) => ZalgoPromise<void>\n    focus : () => ZalgoPromise<void>\n\n    constructor(component : Component<P>, source : CrossDomainWindowType, options : DelegateOptionsType) {\n        this.component = component;\n        this.context = options.context;\n        this.driver = RENDER_DRIVERS[options.context];\n        this.clean = cleanup(this);\n        \n        // $FlowFixMe\n        this.focus = ParentComponent.prototype.close;\n        // $FlowFixMe\n        this.resize = ParentComponent.prototype.resize;\n        // $FlowFixMe\n        this.renderTemplate = ParentComponent.prototype.renderTemplate;\n\n        // $FlowFixMe\n        this.props = {};\n        for (const propName of Object.keys(options.props)) {\n            if (options.props[propName] && this.component.getPropDefinition(propName) && this.component.getPropDefinition(propName).allowDelegate) {\n                this.props[propName] = options.props[propName];\n            }\n        }\n\n        this.close     = options.overrides.close;\n        this.onError   = options.overrides.onError;\n\n        this.component.registerActiveComponent(this);\n        this.clean.register(() => this.component.destroyActiveComponent(this));\n\n        this.watchForSourceClose(source);\n    }\n\n    getDelegate() : DelegateReturnType {\n        return {\n            overrides: this.getOverrides(),\n            destroy:   () => this.destroy()\n        };\n    }\n\n    watchForSourceClose(source : CrossDomainWindowType) {\n        const closeSourceWindowListener = onCloseWindow(source, () => this.destroy(), 3000);\n        this.clean.register(closeSourceWindowListener.cancel);\n    }\n\n    getOverrides() : { [string] : mixed } {\n        const overrides = {};\n        const self = this;\n\n        for (const key of this.driver.delegate) {\n            overrides[key] = function delegateOverride() : mixed {\n                // $FlowFixMe\n                return ParentComponent.prototype[key].apply(self, arguments);\n            };\n        }\n\n        return overrides;\n    }\n\n    destroy() : ZalgoPromise<void> {\n        return this.clean.all();\n    }\n}\n","/* @flow */\n\nexport type NodePropsType = { [string] : mixed };\n// eslint-disable-next-line no-use-before-define\nexport type NodeType = ElementNode | TextNode | FragmentNode;\n// eslint-disable-next-line no-use-before-define\nexport type NodeChildrenType = $ReadOnlyArray<ElementNode | TextNode>;\nexport type NodeRenderer<T> = (string, NodePropsType, NodeChildrenType) => T;\nexport type NodeRendererFactory<T, O = Object> = (O | void) => NodeRenderer<T>;\n\nclass Node {\n    isElementNode() : boolean {\n        return false;\n    }\n\n    isTextNode() : boolean {\n        return false;\n    }\n\n    isFragmentNode() : boolean {\n        return false;\n    }\n}\n\nexport class ElementNode extends Node {\n    name : string\n    props : NodePropsType\n    children : NodeChildrenType\n    onRender : ?<T>(T) => void // eslint-disable-line no-undef\n\n    constructor(name : string, props : NodePropsType, children : NodeChildrenType) {\n        super();\n        this.name = name;\n        this.props = props;\n        this.children = children;\n\n        if (typeof props.onRender === 'function') {\n            this.onRender = props.onRender;\n            delete props.onRender;\n        }\n    }\n\n    getTag() : string {\n        return this.name;\n    }\n\n    isTag(name : string) : boolean {\n        return name === this.name;\n    }\n\n    isElementNode() : boolean {\n        return true;\n    }\n\n    render<T>(renderer : NodeRenderer<T>) : T {\n        const element = renderer(this.name, this.props, this.children);\n        if (this.onRender) {\n            this.onRender(element);\n        }\n        return element;\n    }\n\n    getText() : string {\n        throw new Error(`Can not get text of an element node`);\n    }\n}\n\nexport class TextNode extends Node {\n    text : string\n\n    constructor(text : string) {\n        super();\n        this.text = text;\n    }\n\n    getTag() : string {\n        throw new Error(`Can not get tag of text node`);\n    }\n\n    isTag(name : string) : boolean { // eslint-disable-line no-unused-vars\n        throw new Error(`Can not check tag of text node`);\n    }\n\n    isTextNode() : boolean {\n        return true;\n    }\n\n    render<T>(renderer : NodeRenderer<T>) : T { // eslint-disable-line no-unused-vars\n        throw new Error(`Can not render a text node`);\n    }\n\n    getText() : string {\n        return this.text;\n    }\n}\n\nexport class FragmentNode extends Node {\n    children : NodeChildrenType\n\n    constructor(children : NodeChildrenType) {\n        super();\n        this.children = children;\n    }\n\n    getTag() : string {\n        throw new Error(`Can not get tag of fragment node`);\n    }\n\n    isTag(name : string) : boolean { // eslint-disable-line no-unused-vars\n        throw new Error(`Can not check tag of fragment node`);\n    }\n\n    isFragmentNode() : boolean {\n        return true;\n    }\n\n    render<T>(renderer : NodeRenderer<T>) : $ReadOnlyArray<T> { // eslint-disable-line no-unused-vars\n        throw new Error(`Can not render a fragment node`);\n    }\n\n    getText() : string {\n        throw new Error(`Can not get text of a fragment node`);\n    }\n}\n\ntype JsxChildType = $ReadOnlyArray<JsxChildType> | NodeType | string;\ntype NullableJsxChildType = $ReadOnlyArray<NullableJsxChildType> | NodeType | string | null | void;\n\nfunction normalizeChild(child : NullableJsxChildType) : NodeType | void {\n    if (typeof child === 'string') {\n        return new TextNode(child);\n\n    } else if (child instanceof ElementNode || child instanceof TextNode || child instanceof FragmentNode) {\n        return child;\n\n    } else if (Array.isArray(child)) {\n        return new FragmentNode(normalizeChildren(child)); // eslint-disable-line no-use-before-define\n\n    } else if (child === null || typeof child === 'undefined') {\n        return; // eslint-disable-line no-useless-return\n\n    } else {\n        throw new Error(`Child node must be string or instance of jsx-pragmatic node; got ${ typeof child }`);\n    }\n}\n\nfunction normalizeChildren(children : $ReadOnlyArray<NullableJsxChildType>) : NodeChildrenType {\n    const result = [];\n\n    for (const child of children) {\n        const normalizedChild = normalizeChild(child);\n\n        if (!normalizedChild) {\n            continue;\n        }\n\n        if (normalizedChild instanceof FragmentNode) {\n            for (const subchild of normalizedChild.children) {\n                result.push(subchild);\n            }\n        } else {\n            result.push(normalizedChild);\n        }\n    }\n\n    return result;\n}\n\ntype JSXElementBuilder<P : NodePropsType> = (\n    element : string,\n    props : P | null,\n    ...children : $ReadOnlyArray<NullableJsxChildType>\n) => ElementNode;\n\ntype JSXElementFunctionBuilder<P : NodePropsType> = (\n    element : (P, $ReadOnlyArray<JsxChildType>) => ElementNode,\n    props : P | null,\n    ...children : $ReadOnlyArray<NullableJsxChildType>\n) => ElementNode;\n\ntype JSXTextFunctionBuilder<P : NodePropsType> = (\n    element : (P, $ReadOnlyArray<JsxChildType>) => string | TextNode,\n    props : P | null,\n    ...children : $ReadOnlyArray<NullableJsxChildType>\n) => TextNode;\n\ntype JSXFragmentFunctionBuilder<P : NodePropsType> = (\n    element : (P, $ReadOnlyArray<JsxChildType>) => FragmentNode | $ReadOnlyArray<NullableJsxChildType>,\n    props : P | null,\n    ...children : $ReadOnlyArray<NullableJsxChildType>\n) => FragmentNode;\n\ntype JSXEmptyFunctionBuilder<P : NodePropsType> = (\n    element : (P, $ReadOnlyArray<JsxChildType>) => null | void,\n    props : P | null,\n    ...children : $ReadOnlyArray<NullableJsxChildType>\n) => void;\n\ntype JSXBuilder<P : NodePropsType> = JSXElementBuilder<P> & JSXElementFunctionBuilder<P> & JSXTextFunctionBuilder<P> & JSXFragmentFunctionBuilder<P> & JSXEmptyFunctionBuilder<P>;\n\nexport const node : JSXBuilder<*> = <P : NodePropsType>(element, props : P | null, ...children) => {\n    if (typeof element === 'string') {\n        return new ElementNode(element, props || {}, normalizeChildren(children));\n    }\n\n    if (typeof element === 'function') {\n        // $FlowFixMe\n        return normalizeChild(element(props || {}, normalizeChildren(children)));\n    }\n    \n    throw new TypeError(`Expected jsx Element to be a string or a function`);\n};\n\nexport function Fragment(props : NodePropsType, ...children : $ReadOnlyArray<JsxChildType>) : FragmentNode {\n    \n    if (props && Object.keys(props).length) {\n        throw new Error(`Do not pass props to Fragment`);\n    }\n\n    return new FragmentNode(normalizeChildren(children));\n}\n","/* @flow */\n\nimport type { NodeChildrenType, NodePropsType, NodeRendererFactory, NodeRenderer } from '../node';\n\nconst ELEMENT_TAG = {\n    HTML:    'html',\n    IFRAME:  'iframe',\n    SCRIPT:  'script',\n    NODE:    'node',\n    DEFAULT: 'default'\n};\n\nconst ELEMENT_PROP = {\n    INNER_HTML: 'innerHTML',\n    EL:         'el'\n};\n\nconst DOM_EVENT = {\n    onBlur:               'blur',\n    onCancel:             'cancel',\n    onClick:              'click',\n    onClose:              'close',\n    onContextMenu:        'contextMenu',\n    onCopy:               'copy',\n    onCut:                'cut',\n    onAuxClick:           'auxClick',\n    onDoubleClick:        'doubleClick',\n    onDragEnd:            'dragEnd',\n    onDragStart:          'dragStart',\n    onDrop:               'drop',\n    onFocus:              'focus',\n    onInput:              'input',\n    onInvalid:            'invalid',\n    onKeyDown:            'keyDown',\n    onKeyPress:           'keyPress',\n    onKeyUp:              'keyUp',\n    onMouseDown:          'mouseDown',\n    onMouseUp:            'mouseUp',\n    onPaste:              'paste',\n    onPause:              'pause',\n    onPlay:               'play',\n    onPointerCancel:      'pointerCancel',\n    onPointerDown:        'pointerDown',\n    onPointerUp:          'pointerUp',\n    onRateChange:         'rateChange',\n    onReset:              'reset',\n    onSeeked:             'seeked',\n    onSubmit:             'submit',\n    onTouchCancel:        'touchCancel',\n    onTouchEnd:           'touchEnd',\n    onTouchStart:         'touchStart',\n    onVolumeChange:       'volumeChange',\n    onAbort:              'abort',\n    onAnimationEnd:       'animationEnd',\n    onAnimationIteration: 'animationIteration',\n    onAnimationStart:     'animationStart',\n    onCanPlay:            'canPlay',\n    onCanPlayThrough:     'canPlayThrough',\n    onDrag:               'drag',\n    onDragEnter:          'dragEnter',\n    onDragExit:           'dragExit',\n    onDragLeave:          'dragLeave',\n    onDragOver:           'dragOver',\n    onDurationChange:     'durationChange',\n    onEmptied:            'emptied',\n    onEncrypted:          'encrypted',\n    onEnded:              'ended',\n    onError:              'error',\n    onGotPointerCapture:  'gotPointerCapture',\n    onLoad:               'load',\n    onLoadedData:         'loadedData',\n    onLoadedMetadata:     'loadedMetadata',\n    onLoadStart:          'loadStart',\n    onLostPointerCapture: 'lostPointerCapture',\n    onMouseMove:          'mouseMove',\n    onMouseOut:           'mouseOut',\n    onMouseOver:          'mouseOver',\n    onPlaying:            'playing',\n    onPointerMove:        'pointerMove',\n    onPointerOut:         'pointerOut',\n    onPointerOver:        'pointerOver',\n    onProgress:           'progress',\n    onScroll:             'scroll',\n    onSeeking:            'seeking',\n    onStalled:            'stalled',\n    onSuspend:            'suspend',\n    onTimeUpdate:         'timeUpdate',\n    onToggle:             'toggle',\n    onTouchMove:          'touchMove',\n    onTransitionEnd:      'transitionEnd',\n    onWaiting:            'waiting',\n    onWheel:              'wheel'\n};\n\nfunction fixScripts(el : HTMLElement, doc : Document = window.document) {\n    for (const script of el.querySelectorAll('script')) {\n        const parentNode = script.parentNode;\n\n        if (!parentNode) {\n            continue;\n        }\n\n        const newScript = doc.createElement('script');\n        // $FlowFixMe\n        newScript.text = script.textContent;\n        parentNode.replaceChild(newScript, script);\n    }\n}\n\ntype CreateElementOptions = {|\n    doc : Document,\n    name : string,\n    props : NodePropsType\n|};\n\nconst CREATE_ELEMENT : { [string] : (CreateElementOptions) => HTMLElement } = {\n\n    [ ELEMENT_TAG.NODE ]: ({ props } : CreateElementOptions) => {\n        if (!props[ELEMENT_PROP.EL]) {\n            throw new Error(`Must pass ${ ELEMENT_PROP.EL } prop to ${ ELEMENT_TAG.NODE } element`);\n        }\n\n        if (Object.keys(props).length > 1) {\n            throw new Error(`Must not pass any prop other than ${ ELEMENT_PROP.EL } to ${ ELEMENT_TAG.NODE } element`);\n        }\n\n        // $FlowFixMe\n        return props[ELEMENT_PROP.EL];\n    },\n\n    [ ELEMENT_TAG.DEFAULT ]: ({ name, doc } : CreateElementOptions) => {\n        return doc.createElement(name);\n    }\n};\n\nfunction createElement({ doc, name, props } : CreateElementOptions) : HTMLElement {\n    const elementCreator = CREATE_ELEMENT[name] || CREATE_ELEMENT[ELEMENT_TAG.DEFAULT];\n    return elementCreator({ name, props, doc });\n}\n\ntype AddPropsOptions = {|\n    el : HTMLElement,\n    props : NodePropsType\n|};\n\nfunction addProps({ el, props } : AddPropsOptions) {\n    for (const prop of Object.keys(props)) {\n        const val = props[prop];\n\n        if (val === null || typeof val === 'undefined' || prop === ELEMENT_PROP.EL || prop === ELEMENT_PROP.INNER_HTML) {\n            continue;\n        }\n\n        if (DOM_EVENT.hasOwnProperty(prop)) {\n            if (typeof val !== 'undefined' && typeof val !== 'function') {\n                throw new TypeError(`Prop ${ prop } must be function`);\n            }\n\n            el.addEventListener(DOM_EVENT[prop], val);\n\n        } else if (typeof val === 'string' || typeof val === 'number') {\n            el.setAttribute(prop, val.toString());\n\n        } else if (typeof val === 'boolean') {\n            if (val === true) {\n                el.setAttribute(prop, '');\n            }\n\n        } else {\n            throw new TypeError(`Can not render prop ${ prop } of type ${ typeof val }`);\n        }\n    }\n}\n\ntype AddChildrenOptions = {|\n    el : HTMLElement,\n    name : string,\n    children : NodeChildrenType,\n    doc : Document,\n    props : NodePropsType,\n    domRenderer : NodeRenderer<HTMLElement>\n|};\n\nconst ADD_CHILDREN : { [string] : (AddChildrenOptions) => void } = {\n\n    [ ELEMENT_TAG.IFRAME ]: ({ el, children } : AddChildrenOptions) => {\n        const firstChild = children[0];\n\n        if (children.length > 1 || !firstChild.isElementNode()) {\n            throw new Error(`Expected only single element node as child of ${ ELEMENT_TAG.IFRAME } element`);\n        }\n\n        if (!firstChild.isTag(ELEMENT_TAG.HTML)) {\n            throw new Error(`Expected element to be inserted into frame to be html, got ${ firstChild.getTag() }`);\n        }\n    \n        el.addEventListener('load', () => {\n\n            // $FlowFixMe\n            const win = el.contentWindow;\n    \n            if (!win) {\n                throw new Error(`Expected frame to have contentWindow`);\n            }\n\n            const doc = win.document;\n            const docElement = doc.documentElement;\n\n            while (docElement.children && docElement.children.length) {\n                docElement.removeChild(docElement.children[0]);\n            }\n\n            // eslint-disable-next-line no-use-before-define\n            const child = firstChild.render(dom({ doc }));\n        \n            while (child.children.length) {\n                docElement.appendChild(child.children[0]);\n            }\n        });\n    },\n\n    [ ELEMENT_TAG.SCRIPT ]: ({ el, children } : AddChildrenOptions) => {\n        const firstChild = children[0];\n\n        if (children.length !== 1 || !firstChild.isTextNode()) {\n            throw new Error(`Expected only single text node as child of ${ ELEMENT_TAG.SCRIPT } element`);\n        }\n        \n        // $FlowFixMe\n        el.text = firstChild.getText();\n    },\n\n    [ ELEMENT_TAG.DEFAULT ]: ({ el, children, doc, domRenderer } : AddChildrenOptions) => {\n        for (const child of children) {\n            if (child.isTextNode()) {\n                el.appendChild(doc.createTextNode(child.getText()));\n            } else {\n                el.appendChild(child.render(domRenderer));\n            }\n        }\n    }\n};\n\nfunction addChildren({ el, name, props, children, doc, domRenderer } : AddChildrenOptions) {\n    if (props.hasOwnProperty(ELEMENT_PROP.INNER_HTML)) {\n\n        if (children.length >= 1) {\n            throw new Error(`Expected no children to be passed when ${ ELEMENT_PROP.INNER_HTML } prop is set`);\n        }\n\n        const html = props[ELEMENT_PROP.INNER_HTML];\n\n        if (typeof html !== 'string') {\n            throw new TypeError(`${ ELEMENT_PROP.INNER_HTML } prop must be string`);\n        }\n\n        if (name === ELEMENT_TAG.SCRIPT) {\n            // $FlowFixMe\n            el.text = html;\n        } else {\n            el.innerHTML = html;\n            fixScripts(el, doc);\n        }\n\n    } else {\n        const addChildrenToElement = ADD_CHILDREN[name] || ADD_CHILDREN[ELEMENT_TAG.DEFAULT];\n        addChildrenToElement({ el, name, props, children, doc, domRenderer });\n    }\n}\n\n\nexport const dom : NodeRendererFactory<HTMLElement> = ({ doc = document } : { doc? : Document } = {}) => {\n    const domRenderer = (name, props, children) => {\n        const el = createElement({ name, props, doc });\n        addProps({ el, props });\n        addChildren({ el, name, props, children, doc, domRenderer });\n        return el;\n    };\n\n    return domRenderer;\n};\n","/* @flow */\n/* @jsx node */\n/* eslint react/react-in-jsx-scope: off */\n\nimport { node, dom } from 'jsx-pragmatic/src';\n\nimport { type RenderOptionsType } from '../../parent';\nimport { CLASS } from '../../constants';\n\nexport function defaultContainerTemplate<P>({ uid, outlet, doc, dimensions : { width, height } } : RenderOptionsType<P>) : HTMLElement {\n\n    return (\n        <div id={ uid }>\n            <style>\n                {`\n                    #${ uid } > .${ CLASS.OUTLET } {\n                        width: ${ width };\n                        height: ${ height };\n                        display: inline-block;\n                        position: relative;\n                    }\n\n                    #${ uid } > .${ CLASS.OUTLET } > iframe {\n                        height: 100%;\n                        width: 100%;\n                        position: absolute;\n                        top: 0;\n                        left: 0;\n                        transition: opacity .2s ease-in-out;\n                    }\n\n                    #${ uid } > .${ CLASS.OUTLET } > iframe.${ CLASS.VISIBLE } {\n                        opacity: 1;\n                    }\n\n                    #${ uid } > .${ CLASS.OUTLET } > iframe.${ CLASS.INVISIBLE } {\n                        opacity: 0;\n                    }\n                `}\n            </style>\n\n            <node el={ outlet } />\n        </div>\n    ).render(dom({ doc }));\n}\n","/* @flow */\n/** @jsx node */\n/* eslint react/react-in-jsx-scope: off */\n\nimport { node, dom } from 'jsx-pragmatic/src';\n\nimport { type RenderOptionsType } from '../../parent';\n\nexport function defaultPrerenderTemplate<P>({ doc } : RenderOptionsType<P>) : HTMLElement {\n    return (\n        <html>\n            <head>\n                <style>\n                    {`\n                        html, body {\n                            width: 100%;\n                            height: 100%;\n                            overflow: hidden;\n                            top: 0;\n                            left: 0;\n                            margin: 0;\n                            text-align: center;\n                        }\n\n                        .spinner {\n                            position: absolute;\n                            max-height: 60vmin;\n                            max-width: 60vmin;\n                            height: 40px;\n                            width: 40px;\n                            top: 50%;\n                            left: 50%;\n                            transform: translateX(-50%) translateY(-50%);\n                            z-index: 10;\n                        }\n\n                        .spinner .loader {\n                            height: 100%;\n                            width: 100%;\n                            box-sizing: border-box;\n                            border: 3px solid rgba(0, 0, 0, .2);\n                            border-top-color: rgba(33, 128, 192, 0.8);\n                            border-radius: 100%;\n                            animation: rotation .7s infinite linear;\n\n                        }\n\n                        @keyframes rotation {\n                            from {\n                                transform: rotate(0deg)\n                            }\n                            to {\n                                transform: rotate(359deg)\n                            }\n                        }\n                    `}\n                </style>\n            </head>\n            <body>\n                <div class=\"spinner\">\n                    <div id=\"loader\" class=\"loader\" />\n                </div>\n            </body>\n        </html>\n    ).render(dom({ doc }));\n}\n","/* @flow */\n/* eslint max-lines: 0 */\n\nimport { on, send, ProxyWindow, bridge } from 'post-robot/src';\nimport { ZalgoPromise } from 'zalgo-promise/src';\nimport { isWindow, getDomainFromUrl, type CrossDomainWindowType, isSameTopWindow, getDomain, matchDomain, isSameDomain } from 'cross-domain-utils/src';\nimport { memoize, isRegex, noop, isElement } from 'belter/src';\n\nimport { ChildComponent } from '../child';\nimport { ParentComponent, type RenderOptionsType, type ParentHelpers } from '../parent';\nimport { DelegateComponent } from '../delegate';\nimport { CONTEXT, POST_MESSAGE, WILDCARD, DEFAULT_DIMENSIONS } from '../constants';\nimport { isZoidComponentWindow, parseChildWindowName } from '../lib';\nimport type { CssDimensionsType, StringMatcherType } from '../types';\n\nimport { validate } from './validate';\nimport { defaultContainerTemplate, defaultPrerenderTemplate } from './templates';\nimport { getInternalProps, type UserPropsDefinitionType, type BuiltInPropsDefinitionType, type PropsInputType, type PropsType, type MixedPropDefinitionType } from './props';\n\nconst drivers = __ZOID__.__FRAMEWORK_SUPPORT__\n    ? require('../drivers')\n    : {};\n\ntype LoggerPayload = { [string] : ?string };\n\n// eslint-disable-next-line flowtype/require-exact-type\ntype Logger = {\n    debug : (event : string, payload? : LoggerPayload) => void,\n    info : (event : string, payload? : LoggerPayload) => void,\n    warn : (event : string, payload? : LoggerPayload) => void,\n    error : (event : string, payload? : LoggerPayload) => void\n};\n\n/*  Component\n    ---------\n\n    This is the spec for the component. The idea is, when I call zoid.create(), it will create a new instance\n    of Component with the blueprint needed to set up ParentComponents and ChildComponents.\n\n    This is the one portion of code which is required by -- and shared to -- both the parent and child windows, and\n    contains all of the configuration needed for them to set themselves up.\n*/\n\nexport type ComponentOptionsType<P> = {|\n\n    tag : string,\n\n    url : string | ({ props : PropsType<P> }) => string,\n    domain? : string | RegExp,\n    bridgeUrl? : string,\n\n    props? : UserPropsDefinitionType<P>,\n\n    dimensions? : CssDimensionsType,\n    autoResize? : { width? : boolean, height? : boolean, element? : string },\n\n    allowedParentDomains? : StringMatcherType,\n\n    attributes? : {\n        iframe? : { [string] : string },\n        popup? : { [string] : string }\n    },\n\n    defaultContext? : $Values<typeof CONTEXT>,\n\n    containerTemplate? : (RenderOptionsType<P>) => HTMLElement,\n    prerenderTemplate? : (RenderOptionsType<P>) => HTMLElement,\n\n    validate? : ({ props : PropsInputType<P> }) => void,\n\n    logger? : Logger\n|};\n\ntype ZoidRenderer = {|\n    render : (container? : string | HTMLElement, context? : $Values<typeof CONTEXT>) => ZalgoPromise<void>,\n    renderTo : (target : CrossDomainWindowType, container? : string, context? : $Values<typeof CONTEXT>) => ZalgoPromise<void>\n|};\n\nexport type ZoidComponentInstance<P> = {| ...ParentHelpers<P>, ...ZoidRenderer |};\n\nexport type ZoidComponent<P> = {|\n    (PropsInputType<P>) : ZoidComponentInstance<P>,\n    driver : (string, mixed) => mixed,\n    isChild : () => boolean,\n    xprops? : PropsType<P>,\n    canRenderTo : (CrossDomainWindowType) => ZalgoPromise<boolean>\n|};\n\nexport class Component<P> {\n\n    tag : string\n    name : string\n    \n    url : string | ({ props : PropsType<P> }) => string\n    domain : void | string | RegExp\n    bridgeUrl : void | string\n\n    props : UserPropsDefinitionType<P>\n    builtinProps : BuiltInPropsDefinitionType<P>\n\n    dimensions : CssDimensionsType\n    autoResize : void | { width? : boolean, height? : boolean, element? : string }\n\n    allowedParentDomains : StringMatcherType\n\n    defaultContext : $Values<typeof CONTEXT>\n    \n    attributes : {\n        iframe? : { [string] : string },\n        popup? : { [string] : string }\n    }\n\n    containerTemplate : (RenderOptionsType<P>) => HTMLElement\n    prerenderTemplate : (RenderOptionsType<P>) => HTMLElement\n\n    validate : void | ({ props : PropsInputType<P> }) => void\n\n    driverCache : { [string] : mixed }\n\n    xprops : ?PropsType<P>\n\n    logger : Logger\n\n    constructor(options : ComponentOptionsType<P>) {\n        validate(options);\n\n        // The tag name of the component. Used by some drivers (e.g. angular) to turn the component into an html element,\n        // e.g. <my-component>\n\n        this.tag = options.tag;\n        this.name = this.tag.replace(/-/g, '_');\n\n        this.allowedParentDomains = options.allowedParentDomains || WILDCARD;\n\n        if (Component.components[this.tag]) {\n            throw new Error(`Can not register multiple components with the same tag: ${ this.tag }`);\n        }\n\n        // A json based spec describing what kind of props the component accepts. This is used to validate any props before\n        // they are passed down to the child.\n\n        this.builtinProps = getInternalProps();\n        this.props = options.props || {};\n\n        // The dimensions of the component, e.g. { width: '300px', height: '150px' }\n\n        const { width = DEFAULT_DIMENSIONS.WIDTH, height = DEFAULT_DIMENSIONS.HEIGHT } = options.dimensions || {};\n        this.dimensions = { width, height };\n\n        this.url = options.url;\n        this.domain = options.domain;\n        this.bridgeUrl = options.bridgeUrl;\n\n        this.attributes = options.attributes || {};\n        this.attributes.iframe = this.attributes.iframe || {};\n        this.attributes.popup = this.attributes.popup || {};\n\n        this.defaultContext = options.defaultContext || CONTEXT.IFRAME;\n\n        this.autoResize = options.autoResize;\n\n        this.containerTemplate = options.containerTemplate || defaultContainerTemplate;\n        this.prerenderTemplate = options.prerenderTemplate || defaultPrerenderTemplate;\n\n        this.validate = options.validate;\n\n        this.logger = options.logger || {\n            debug: noop,\n            info:  noop,\n            warn:  noop,\n            error: noop\n        };\n\n        this.registerChild();\n        this.listenDelegate();\n\n        Component.components[this.tag] = this;\n    }\n\n    @memoize\n    getPropNames() : $ReadOnlyArray<string> {\n        const props = Object.keys(this.props);\n\n        for (const key of Object.keys(this.builtinProps)) {\n            if (props.indexOf(key) === -1) {\n                props.push(key);\n            }\n        }\n\n        return props;\n    }\n\n    // $FlowFixMe\n    getPropDefinition(name : string) : MixedPropDefinitionType<P> {\n        // $FlowFixMe\n        return this.props[name] || this.builtinProps[name];\n    }\n\n    driver(name : string, dep : mixed) : mixed {\n        if (!drivers[name]) {\n            throw new Error(`Could not find driver for framework: ${ name }`);\n        }\n\n        this.driverCache = this.driverCache || {};\n\n        if (!this.driverCache[name]) {\n            this.driverCache[name] = drivers[name].register(this, dep);\n        }\n\n        return this.driverCache[name];\n    }\n\n    registerChild() {\n        if (this.isChild()) {\n            if (window.xprops) {\n                throw new Error(`Can not register ${ this.name } as child - can not attach multiple components to the same window`);\n            }\n\n            const child = new ChildComponent(this);\n            window.xprops = this.xprops = child.getProps();\n        }\n    }\n\n    listenDelegate() {\n        on(`${ POST_MESSAGE.ALLOW_DELEGATE }_${ this.name }`, () => {\n            return true;\n        });\n\n        on(`${ POST_MESSAGE.DELEGATE }_${ this.name }`, ({ source, data: { context, props, overrides } }) => {\n            const delegate = new DelegateComponent(this, source, { context, props, overrides });\n            return delegate.getDelegate();\n        });\n    }\n\n    canRenderTo(win : CrossDomainWindowType) : ZalgoPromise<boolean> {\n        return send(win, `${ POST_MESSAGE.ALLOW_DELEGATE }_${ this.name }`).then(({ data }) => {\n            return data;\n        }).catch(() => {\n            return false;\n        });\n    }\n\n    getUrl(props : PropsType<P>) : string {\n        if (typeof this.url === 'function') {\n            return this.url({ props });\n        }\n\n        return this.url;\n    }\n\n    getInitialDomain(props : PropsType<P>) : string {\n        if (this.domain && typeof this.domain === 'string') {\n            return this.domain;\n        }\n\n        return getDomainFromUrl(this.getUrl(props));\n    }\n\n    getDomain(props : PropsType<P>) : string | RegExp {\n        if (isRegex(this.domain)) {\n            // $FlowFixMe\n            return this.domain;\n        }\n\n        return this.getInitialDomain(props);\n    }\n\n    getBridgeUrl() : ?string {\n        if (this.bridgeUrl) {\n            return this.bridgeUrl;\n        }\n    }\n\n    isChild() : boolean {\n        return isZoidComponentWindow() && parseChildWindowName().tag === this.tag;\n    }\n\n    getDefaultContainer<T : (string | HTMLElement)>(context : $Values<typeof CONTEXT>, container? : T) : T {\n        if (container) {\n            if (typeof container !== 'string' && !isElement(container)) {\n                throw new TypeError(`Expected string or element selector to be passed`);\n            }\n\n            return container;\n        }\n\n        if (context === CONTEXT.POPUP) {\n            // $FlowFixMe\n            return 'body';\n        }\n\n        throw new Error(`Expected element to be passed to render iframe`);\n    }\n\n    getDefaultContext(context : ?$Values<typeof CONTEXT>, props : PropsInputType<P>) : $Values<typeof CONTEXT> {\n        if (props.window) {\n            return ProxyWindow.toProxyWindow(props.window).getType();\n        }\n\n        if (context) {\n            if (context !== CONTEXT.IFRAME && context !== CONTEXT.POPUP) {\n                throw new Error(`Unrecognized context: ${ context }`);\n            }\n            \n            return context;\n        }\n\n        return this.defaultContext;\n    }\n\n    init(props : PropsInputType<P>) : ZoidComponentInstance<P> {\n\n        // $FlowFixMe\n        props = props || {};\n        \n        const parent = new ParentComponent(this, props);\n\n        const render = (target, container, context) => ZalgoPromise.try(() => {\n            if (!isWindow(target)) {\n                throw new Error(`Must pass window to renderTo`);\n            }\n\n            context = this.getDefaultContext(context, props);\n            container = this.getDefaultContainer(context, container);\n            return parent.render(target, container, context);\n        });\n\n        return {\n            ...parent.getHelpers(),\n            render:   (container, context) => render(window, container, context),\n            renderTo: (target, container, context) => render(target, container, context)\n        };\n    }\n\n    checkAllowRender(target : CrossDomainWindowType, domain : string | RegExp, container : string | HTMLElement) {\n        if (target === window) {\n            return;\n        }\n\n        if (!isSameTopWindow(window, target)) {\n            throw new Error(`Can only renderTo an adjacent frame`);\n        }\n\n        const origin = getDomain();\n\n        if (!matchDomain(domain, origin) && !isSameDomain(target)) {\n            throw new Error(`Can not render remotely to ${ domain.toString() } - can only render to ${ origin }`);\n        }\n\n        if (container && typeof container !== 'string') {\n            throw new Error(`Container passed to renderTo must be a string selector, got ${ typeof container } }`);\n        }\n    }\n\n    log(event : string, payload? : LoggerPayload) {\n        this.logger.info(`${ this.name }_${ event }`, payload);\n    }\n\n    static components : { [string] : Component<*> } = {}\n    static activeComponents : Array<ParentComponent<*> | DelegateComponent<*>> = [] // eslint-disable-line flowtype/no-mutable-array\n\n    registerActiveComponent<Q>(instance : ParentComponent<Q> | DelegateComponent<Q>) {\n        Component.activeComponents.push(instance);\n    }\n\n    destroyActiveComponent<Q>(instance : ParentComponent<Q> | DelegateComponent<Q>) {\n        Component.activeComponents.splice(Component.activeComponents.indexOf(instance), 1);\n    }\n\n    static destroyAll() : ZalgoPromise<void> {\n        if (bridge) {\n            bridge.destroyBridges();\n        }\n\n        const results = [];\n\n        while (Component.activeComponents.length) {\n            results.push(Component.activeComponents[0].destroy());\n        }\n\n        return ZalgoPromise.all(results).then(noop);\n    }\n}\n\nexport type ComponentDriverType<P, T : mixed> = {|\n    register : (Component<P>, T) => mixed\n|};\n\nexport function create<P>(options : ComponentOptionsType<P>) : ZoidComponent<P> {\n    const component : Component<P> = new Component(options);\n\n    const init = (props) => component.init(props);\n    init.driver = (name, dep) => component.driver(name, dep);\n    init.isChild = () => component.isChild();\n    init.canRenderTo = (win) => component.canRenderTo(win);\n    init.xprops = component.xprops;\n\n    // $FlowFixMe\n    return init;\n}\n\nexport function destroyAll() : ZalgoPromise<void> {\n    return Component.destroyAll();\n}\n","/* @flow */\n\nimport { isPerc, isPx, values } from 'belter/src';\n\nimport { CONTEXT, PROP_TYPE } from '../constants';\n\nimport type { ComponentOptionsType } from './index';\n\nfunction validatePropDefinitions<P>(options : ComponentOptionsType<P>) {\n\n    if (options.props && !(typeof options.props === 'object')) {\n        throw new Error(`Expected options.props to be an object`);\n    }\n\n    const PROP_TYPE_LIST = values(PROP_TYPE);\n\n    if (options.props) {\n        for (const key of Object.keys(options.props)) {\n\n            // $FlowFixMe\n            const prop = options.props[key];\n\n            if (!prop || !(typeof prop === 'object')) {\n                throw new Error(`Expected options.props.${ key } to be an object`);\n            }\n\n            if (!prop.type) {\n                throw new Error(`Expected prop.type`);\n            }\n\n            if (PROP_TYPE_LIST.indexOf(prop.type) === -1) {\n                throw new Error(`Expected prop.type to be one of ${ PROP_TYPE_LIST.join(', ') }`);\n            }\n\n            if (prop.required && prop.default) {\n                throw new Error(`Required prop can not have a default value`);\n            }\n\n            if (prop.type === PROP_TYPE.FUNCTION && prop.queryParam && !prop.queryValue) {\n                throw new Error(`Do not pass queryParam for function prop`);\n            }\n        }\n    }\n}\n\n// eslint-disable-next-line complexity\nexport function validate<P>(options : ?ComponentOptionsType<P>) { // eslint-ignore-line\n\n    if (!options) {\n        throw new Error(`Expected options to be passed`);\n    }\n\n    // eslint-disable-next-line security/detect-unsafe-regex, unicorn/no-unsafe-regex\n    if (!options.tag || !options.tag.match(/^([a-z0-9]+-)+[a-z0-9]+$/)) {\n        throw new Error(`Invalid options.tag: ${ options.tag }`);\n    }\n\n    validatePropDefinitions(options);\n\n    if (options.dimensions) {\n        if (options.dimensions && !isPx(options.dimensions.width) && !isPerc(options.dimensions.width)) {\n            throw new Error(`Expected options.dimensions.width to be a px or % string value`);\n        }\n\n        if (options.dimensions && !isPx(options.dimensions.height) && !isPerc(options.dimensions.height)) {\n            throw new Error(`Expected options.dimensions.height to be a px or % string value`);\n        }\n    }\n\n    if (options.defaultContext) {\n        if (options.defaultContext !== CONTEXT.IFRAME && options.defaultContext !== CONTEXT.POPUP) {\n            throw new Error(`Unsupported context type: ${ options.defaultContext || 'unknown' }`);\n        }\n    }\n\n    if (!options.url) {\n        throw new Error(`Must pass url`);\n    }\n\n    if (typeof options.url !== 'string' && typeof options.url !== 'function') {\n        throw new TypeError(`Expected url to be string or function`);\n    }\n\n    if (options.prerenderTemplate && typeof options.prerenderTemplate !== 'function') {\n        throw new Error(`Expected options.prerenderTemplate to be a function`);\n    }\n\n    if (options.containerTemplate && typeof options.containerTemplate !== 'function') {\n        throw new Error(`Expected options.containerTemplate to be a function`);\n    }\n}\n","/* @flow */\n\nimport { ZalgoPromise } from 'zalgo-promise/src';\nimport { once, noop } from 'belter/src';\nimport { isWindow, type CrossDomainWindowType } from 'cross-domain-utils/src';\nimport { ProxyWindow } from 'post-robot/src/serialize/window';\n\nimport { PROP_SERIALIZATION } from '../constants';\n\nexport type EventHandlerType<T> = (T) => void | ZalgoPromise<void>;\n\nexport type timeoutPropType = number;\nexport type windowPropType = CrossDomainWindowType | ProxyWindow;\nexport type closePropType = () => ZalgoPromise<void>;\nexport type focusPropType = () => ZalgoPromise<void>;\nexport type resizePropType = ({ width : ?number, height : ?number }) => ZalgoPromise<void>;\n\nexport type onDisplayPropType = EventHandlerType<void>;\nexport type onRenderedPropType = EventHandlerType<void>;\nexport type onRenderPropType = EventHandlerType<void>;\nexport type onClosePropType = EventHandlerType<void>;\nexport type onErrorPropType = EventHandlerType<mixed>;\nexport type onChangePropType<P> = ((PropsType<P>) => void) => void; // eslint-disable-line no-use-before-define\n\nexport type PropsInputType<P> = {\n    timeout? : timeoutPropType,\n    window? : windowPropType,\n\n    onDisplay? : onDisplayPropType,\n    onRendered? : onRenderedPropType,\n    onRender? : onRenderPropType,\n    onClose? : onClosePropType,\n    onError? : onErrorPropType\n} & P;\n\nexport type PropsType<P> = {|\n    timeout? : timeoutPropType,\n    window? : ?windowPropType,\n    close? : ?closePropType,\n    focus? : ?focusPropType,\n    resize? : ?resizePropType,\n\n    onDisplay : onDisplayPropType,\n    onRendered : onRenderedPropType,\n    onRender : onRenderPropType,\n    onClose : onClosePropType,\n    onError : onErrorPropType,\n    onChange : onChangePropType<P>\n|} & P;\n\ntype PropDefinitionType<T, P, S : string> = {|\n    type : S,\n    alias? : string,\n    value? : ({ props : P, state : Object, close : () => ZalgoPromise<void>, focus : () => ZalgoPromise<void>, onError : (mixed) => ZalgoPromise<void> }) => ?T,\n    required? : boolean,\n    queryParam? : boolean | string | ({ value : T }) => (string | ZalgoPromise<string>),\n    queryValue? : ({ value : T }) => (ZalgoPromise<mixed> | mixed),\n    sendToChild? : boolean,\n    allowDelegate? : boolean,\n    validate? : ({ value : T, props : PropsInputType<P> }) => void,\n    decorate? : ({ value : T, props : PropsType<P>, state : Object, close : () => ZalgoPromise<void>, focus : () => ZalgoPromise<void>, onError : (mixed) => ZalgoPromise<void> }) => T,\n    default? : ({ props : P, state : Object }) => ?T,\n    sameDomain? : boolean,\n    serialization? : $Values<typeof PROP_SERIALIZATION>,\n    childDecorate? : ({ value : T, close : () => ZalgoPromise<void>, focus : () => ZalgoPromise<void>, onError : (mixed) => ZalgoPromise<void>, onPropsChange : ((PropsType<P>) => void) => void, resize : ({ width : ?number, height : ?number }) => ZalgoPromise<void> }) => ?T\n|};\n\nexport type BooleanPropDefinitionType<T : boolean, P> = PropDefinitionType<T, P, 'boolean'>;\nexport type StringPropDefinitionType<T : string, P> = PropDefinitionType<T, P, 'string'>;\nexport type NumberPropDefinitionType<T : number, P> = PropDefinitionType<T, P, 'number'>;\nexport type FunctionPropDefinitionType<T : Function, P> = PropDefinitionType<T, P, 'function'>;\nexport type ArrayPropDefinitionType<T : Array<*>, P> = PropDefinitionType<T, P, 'array'>; // eslint-disable-line flowtype/no-mutable-array\nexport type ObjectPropDefinitionType<T : Object, P> = PropDefinitionType<T, P, 'object'>;\n\nexport type MixedPropDefinitionType<P> = BooleanPropDefinitionType<*, P> | StringPropDefinitionType<*, P> | NumberPropDefinitionType<*, P> | FunctionPropDefinitionType<*, P> | ObjectPropDefinitionType<*, P> | ArrayPropDefinitionType<*, P>;\n\nexport type UserPropsDefinitionType<P> = {\n    [string] : MixedPropDefinitionType<P>\n};\n\n// eslint-disable-next-line flowtype/require-exact-type\nexport type BuiltInPropsDefinitionType<P> = {\n    timeout : NumberPropDefinitionType<timeoutPropType, P>,\n    window : ObjectPropDefinitionType<windowPropType, P>,\n    close : FunctionPropDefinitionType<closePropType, P>,\n    focus : FunctionPropDefinitionType<focusPropType, P>,\n    resize : FunctionPropDefinitionType<resizePropType, P>,\n\n    onDisplay : FunctionPropDefinitionType<onDisplayPropType, P>,\n    onRendered : FunctionPropDefinitionType<onRenderedPropType, P>,\n    onRender : FunctionPropDefinitionType<onRenderPropType, P>,\n    onClose : FunctionPropDefinitionType<onClosePropType, P>,\n    onError : FunctionPropDefinitionType<onErrorPropType, P>,\n    onChange : FunctionPropDefinitionType<onChangePropType<P>, P>\n};\n\nexport function getInternalProps<P>() : BuiltInPropsDefinitionType<P> {\n    return {\n        window: {\n            type:          'object',\n            sendToChild:   false,\n            required:      false,\n            allowDelegate: true,\n            validate({ value } : { value : CrossDomainWindowType | ProxyWindow }) {\n                if (!isWindow(value) && !ProxyWindow.isProxyWindow(value)) {\n                    throw new Error(`Expected Window or ProxyWindow`);\n                }\n            },\n            decorate({ value } : { value : CrossDomainWindowType | ProxyWindow }) : ProxyWindow {\n                return ProxyWindow.toProxyWindow(value);\n            }\n        },\n\n        timeout: {\n            type:        'number',\n            required:    false,\n            sendToChild: false\n        },\n\n        close: {\n            type:          'function',\n            required:      false,\n            sendToChild:   false,\n            childDecorate: ({ close }) => {\n                return close;\n            }\n        },\n\n        focus: {\n            type:          'function',\n            required:      false,\n            sendToChild:   false,\n            childDecorate: ({ focus }) => {\n                return focus;\n            }\n        },\n\n        resize: {\n            type:          'function',\n            required:      false,\n            sendToChild:   false,\n            childDecorate: ({ resize }) => {\n                return resize;\n            }\n        },\n\n        onDisplay: {\n            type:          'function',\n            required:      false,\n            sendToChild:   false,\n            allowDelegate: true,\n            default:       () => noop,\n            decorate:      ({ value }) => once(value)\n        },\n\n        onRendered: {\n            type:        'function',\n            required:    false,\n            sendToChild: false,\n            default:     () => noop,\n            decorate:    ({ value }) => once(value)\n        },\n\n        onRender: {\n            type:        'function',\n            required:    false,\n            sendToChild: false,\n            default:     () => noop,\n            decorate:    ({ value }) => once(value)\n        },\n\n        onClose: {\n            type:          'function',\n            required:      false,\n            sendToChild:   false,\n            allowDelegate: true,\n            default:       () => noop,\n            decorate:      ({ value }) => once(value)\n        },\n\n        onError: {\n            type:          'function',\n            required:      false,\n            sendToChild:   false,\n            childDecorate: ({ onError }) => {\n                return function childOnError(err : mixed) : ZalgoPromise<void> {\n                    return onError(err);\n                };\n            }\n        },\n\n        onChange: {\n            type:          'function',\n            required:      false,\n            sendToChild:   false,\n            childDecorate: ({ onPropsChange }) => {\n                return onPropsChange;\n            }\n        }\n    };\n}\n","/* @flow */\n\nexport { PopupOpenError } from 'belter/src';\nexport { create, destroyAll, Component } from './component';\nexport type { ZoidComponent } from './component';\nexport { PROP_TYPE, PROP_SERIALIZATION, CONTEXT, CLASS } from './constants';\n","/* @flow */\n/* eslint react/no-deprecated: off, react/no-find-dom-node: off, react/display-name: off, react/no-did-mount-set-state: off, react/destructuring-assignment: off, react/prop-types: off */\n\nimport { extend, noop } from 'belter/src';\n\nimport type { Component, ComponentDriverType } from '../component';\nimport { CONTEXT } from '../constants';\n\ndeclare class ReactClassType {\n\n}\n\ntype ReactElementType = {|\n\n|};\n\ndeclare class __ReactComponent {\n\n}\n\ntype ReactType = {|\n    Component : __ReactComponent,\n    createClass : ({ render : () => ReactElementType, componentDidMount : () => void, componentDidUpdate : () => void }) => (typeof ReactClassType),\n    createElement : (string, ?{ [string] : mixed }, ...children : $ReadOnlyArray<ReactElementType>) => ReactElementType\n|};\n\ntype ReactDomType = {|\n    findDOMNode : (typeof ReactClassType) => HTMLElement\n|};\n\ntype ReactLibraryType = {|\n    React : ReactType,\n    ReactDOM : ReactDomType\n|};\n\nexport const react : ComponentDriverType<*, ReactLibraryType> = {\n\n    register(component : Component<*>, { React, ReactDOM } : ReactLibraryType) : (typeof ReactClassType) {\n\n        // $FlowFixMe\n        return class extends React.Component {\n            render() : ReactElementType {\n                return React.createElement('div', null);\n            }\n\n            componentDidMount() {\n                component.log(`instantiate_react_component`);\n\n                // $FlowFixMe\n                const el = ReactDOM.findDOMNode(this);\n\n                const parent = component.init(extend({}, this.props));\n                parent.render(el, CONTEXT.IFRAME);\n                this.setState({ parent });\n            }\n\n            componentDidUpdate() {\n\n                if (this.state && this.state.parent) {\n                    this.state.parent.updateProps(extend({}, this.props)).catch(noop);\n                }\n            }\n        };\n    }\n};\n","/* @flow */\n\nimport { extend, noop } from 'belter/src';\n\nimport type { Component, ComponentDriverType } from '../component';\nimport { CONTEXT } from '../constants';\n\ntype VueComponent = {|\n    render : (Function) => Element,\n    inheritAttrs : boolean,\n    mounted : () => void,\n    watch : {|\n        $attrs : {|\n            deep : boolean,\n            handler : () => void\n        |}\n    |}\n|};\n\ntype RegisteredVueComponent = {|\n    \n|};\n\ntype VueType = {|\n    component : (string, VueComponent) => RegisteredVueComponent\n|};\n\nexport const vue : ComponentDriverType<*, VueType> = {\n\n    register<P>(component : Component<P>, Vue : VueType) : RegisteredVueComponent {\n\n        return Vue.component(component.tag, {\n            render(createElement) : Element {\n                return createElement('div');\n            },\n\n            inheritAttrs: false,\n\n            mounted() {\n                const el = this.$el;\n\n                // $FlowFixMe\n                this.parent = component.init(extend({}, this.$attrs));\n                this.parent.render(el, CONTEXT.IFRAME);\n            },\n\n            watch: {\n                $attrs: {\n                    handler: function onChange() {\n                        if (this.parent && this.$attrs) {\n                            this.parent.updateProps(extend({}, this.$attrs)).catch(noop);\n                        }\n                    },\n                    deep: true\n                }\n            }\n        });\n    }\n};\n","/* @flow */\n\nimport { dasherizeToCamel, replaceObject, noop } from 'belter/src';\n\nimport type { Component, ComponentDriverType } from '../component';\nimport { CONTEXT } from '../constants';\n\ntype AngularModule = {|\n    directive : (string, () => {\n        scope : { [string] : '=' | '@' },\n        restrict : string,\n        controller : $ReadOnlyArray<string | Function>\n    }) => AngularModule\n|};\n\ntype Angular = {|\n    module : (string, $ReadOnlyArray<string>) => AngularModule\n|};\n\nexport const angular : ComponentDriverType<*, Angular> = {\n\n    register(component : Component<*>, ng : Angular) : AngularModule {\n\n        const module = ng.module(component.tag, []).directive(dasherizeToCamel(component.tag), () => {\n\n            const scope = {};\n\n            for (const key of component.getPropNames()) {\n                scope[key] = '=';\n            }\n\n            scope.props = '=';\n\n            return {\n                scope,\n\n                restrict: 'E',\n\n                controller: [ '$scope', '$element', ($scope, $element) => {\n                    component.log(`instantiate_angular_component`);\n\n                    function safeApply() {\n                        if ($scope.$root.$$phase !== '$apply' && $scope.$root.$$phase !== '$digest') {\n                            try {\n                                $scope.$apply();\n                            } catch (err) {\n                                // pass\n                            }\n                        }\n                    }\n\n                    const getProps = () => {\n                        return replaceObject($scope.props, item => {\n                            if (typeof item === 'function') {\n                                return function angularWrapped() : mixed {\n                                    const result = item.apply(this, arguments);\n                                    safeApply();\n                                    return result;\n                                };\n                            }\n                            return item;\n                        });\n                    };\n\n                    const instance = component.init(getProps());\n                    instance.render($element[0], CONTEXT.IFRAME);\n\n                    $scope.$watch(() => {\n                        instance.updateProps(getProps()).catch(noop);\n                    });\n                } ]\n            };\n        });\n\n        return module;\n    }\n};\n","/* @flow */\n/* eslint new-cap: 0 */\n\nimport { replaceObject } from 'belter/src';\n\nimport type { Component, ComponentDriverType } from '../component';\nimport { CONTEXT } from '../constants';\n\ntype Angular2Injection = {||};\n\ntype Angular2Component = {||};\n\ntype Angular2Module = {||};\n\ntype Angular2 = {|\n    Component : ({ selector : string, template : string, inputs : $ReadOnlyArray<string> }) => {\n        Class : ({ constructor : $ReadOnlyArray<Angular2Injection | Function>, ngOnInit : () => void, ngDoCheck : () => void }) => Angular2Component\n    },\n    NgModule : ({ declarations : $ReadOnlyArray<Angular2Component>, exports : $ReadOnlyArray<Angular2Component> }) => {\n        Class : ({ constructor : () => void }) => Angular2Module\n    },\n    ElementRef : Angular2Injection,\n    NgZone : Angular2Injection\n|};\n\nconst equals = (obj1, obj2) => {\n    const checked = {};\n\n    for (const key in obj1) {\n        if (obj1.hasOwnProperty(key)) {\n            checked[key] = true;\n\n            if (obj1[key] !== obj2[key]) {\n                return false;\n            }\n        }\n    }\n\n    for (const key in obj2) {\n        if (!checked[key]) {\n            return false;\n        }\n    }\n\n    return true;\n};\n\nexport const angular2 : ComponentDriverType<*, Angular2> = {\n\n    register(zoid : Component<*>, { Component : AngularComponent, NgModule, ElementRef, NgZone }) : Angular2Module {\n\n        zoid.log('initializing angular2 component');\n\n        const getProps = (component) => {\n            return replaceObject({ ...component.internalProps, ...component.props }, item => {\n                if (typeof item === 'function') {\n                    return function angular2Wrapped() : void {\n                        return component.zone.run(() => item.apply(this, arguments));\n                    };\n                }\n                return item;\n            });\n        };\n\n        const ComponentInstance =\n            AngularComponent({\n                selector: zoid.tag,\n                template: '<div></div>',\n                inputs:   [ 'props' ]\n            }).Class({\n                constructor: [ ElementRef, NgZone, function angularConstructor(elementRef, zone) {\n                    this._props = {};\n                    this.elementRef = elementRef;\n                    this.zone = zone;\n                } ],\n                ngOnInit () {\n                    const targetElement = this.elementRef.nativeElement;\n                    \n                    this.parent = zoid.init(getProps(this));\n                    this.parent.render(targetElement, CONTEXT.IFRAME);\n                },\n                ngDoCheck() {\n                    if (this.parent && !equals(this._props, this.props)) {\n                        this._props = { ...this.props };\n                        this.parent.updateProps(getProps(this));\n                    }\n                }\n            });\n\n\n        const ModuleInstance = NgModule({\n            declarations: [ ComponentInstance ],\n            exports:      [ ComponentInstance ]\n        }).Class({\n            constructor () {\n                // pass\n            }\n        });\n\n        return ModuleInstance;\n    }\n};\n","/* @flow */\n\nexport * from './react';\nexport * from './vue';\nexport * from './angular';\nexport * from './angular2';\n"],"sourceRoot":""}