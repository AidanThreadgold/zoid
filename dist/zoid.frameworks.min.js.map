{"version":3,"sources":["webpack://zoid/webpack/universalModuleDefinition","webpack://zoid/webpack/bootstrap","webpack://zoid/./node_modules/@babel/runtime/helpers/esm/extends.js","webpack://zoid/./node_modules/zalgo-promise/src/utils.js","webpack://zoid/./node_modules/zalgo-promise/src/exceptions.js","webpack://zoid/./node_modules/zalgo-promise/src/flush.js","webpack://zoid/./node_modules/zalgo-promise/src/promise.js","webpack://zoid/./node_modules/cross-domain-utils/src/util.js","webpack://zoid/./node_modules/cross-domain-utils/src/constants.js","webpack://zoid/./node_modules/cross-domain-utils/src/utils.js","webpack://zoid/./node_modules/cross-domain-safe-weakmap/src/util.js","webpack://zoid/./node_modules/cross-domain-safe-weakmap/src/weakmap.js","webpack://zoid/./node_modules/belter/src/util.js","webpack://zoid/./node_modules/belter/src/dom.js","webpack://zoid/./node_modules/cross-domain-safe-weakmap/src/native.js","webpack://zoid/./node_modules/belter/src/css.js","webpack://zoid/./node_modules/post-robot/src/conf/config.js","webpack://zoid/./node_modules/post-robot/src/conf/constants.js","webpack://zoid/./node_modules/post-robot/src/global.js","webpack://zoid/./node_modules/post-robot/src/lib/hello.js","webpack://zoid/./node_modules/post-robot/src/lib/windows.js","webpack://zoid/./node_modules/universal-serialize/src/constants.js","webpack://zoid/./node_modules/universal-serialize/src/common.js","webpack://zoid/./node_modules/universal-serialize/src/serialize.js","webpack://zoid/./node_modules/universal-serialize/src/serializers/function.js","webpack://zoid/./node_modules/universal-serialize/src/serializers/error.js","webpack://zoid/./node_modules/universal-serialize/src/serializers/promise.js","webpack://zoid/./node_modules/universal-serialize/src/serializers/regex.js","webpack://zoid/./node_modules/universal-serialize/src/serializers/date.js","webpack://zoid/./node_modules/universal-serialize/src/serializers/array.js","webpack://zoid/./node_modules/universal-serialize/src/serializers/object.js","webpack://zoid/./node_modules/universal-serialize/src/serializers/string.js","webpack://zoid/./node_modules/universal-serialize/src/serializers/number.js","webpack://zoid/./node_modules/universal-serialize/src/serializers/boolean.js","webpack://zoid/./node_modules/universal-serialize/src/serializers/null.js","webpack://zoid/./node_modules/universal-serialize/src/deserialize.js","webpack://zoid/./node_modules/post-robot/src/serialize/window.js","webpack://zoid/./node_modules/post-robot/src/bridge/common.js","webpack://zoid/./node_modules/post-robot/src/serialize/function.js","webpack://zoid/./node_modules/post-robot/src/serialize/serialize.js","webpack://zoid/./node_modules/post-robot/src/serialize/promise.js","webpack://zoid/./node_modules/post-robot/src/drivers/send/strategies.js","webpack://zoid/./node_modules/post-robot/src/drivers/send/index.js","webpack://zoid/./node_modules/post-robot/src/lib/compat.js","webpack://zoid/./node_modules/post-robot/src/drivers/listeners.js","webpack://zoid/./node_modules/post-robot/src/drivers/receive/types.js","webpack://zoid/./node_modules/post-robot/src/drivers/receive/index.js","webpack://zoid/./node_modules/post-robot/src/public/on.js","webpack://zoid/./node_modules/post-robot/src/public/send.js","webpack://zoid/./node_modules/post-robot/src/setup.js","webpack://zoid/./src/lib/global.js","webpack://zoid/./src/lib/serialize.js","webpack://zoid/./node_modules/post-robot/src/index.js","webpack://zoid/./src/constants.js","webpack://zoid/./src/child/props.js","webpack://zoid/./src/child/window.js","webpack://zoid/./src/child/index.js","webpack://zoid/./src/parent/drivers.js","webpack://zoid/./src/parent/props.js","webpack://zoid/./node_modules/post-robot/src/clean.js","webpack://zoid/./src/parent/index.js","webpack://zoid/./src/delegate/index.js","webpack://zoid/./node_modules/@babel/runtime/helpers/esm/inheritsLoose.js","webpack://zoid/./src/drivers/react.js","webpack://zoid/./src/drivers/vue.js","webpack://zoid/./src/drivers/angular.js","webpack://zoid/./src/drivers/angular2.js","webpack://zoid/./node_modules/jsx-pragmatic/src/node.js","webpack://zoid/./node_modules/jsx-pragmatic/src/renderers/dom.js","webpack://zoid/./src/component/templates/container.jsx","webpack://zoid/./src/component/templates/component.jsx","webpack://zoid/./src/component/props.js","webpack://zoid/./src/component/component.js","webpack://zoid/./src/component/validate.js","webpack://zoid/./src/index.js"],"names":["root","factory","exports","module","define","amd","self","this","installedModules","__webpack_require__","moduleId","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","_extends","assign","target","arguments","length","source","apply","isPromise","item","Promise","window","Window","constructor","toString","then","err","flushPromise","dispatchedErrors","possiblyUnhandledPromiseHandlers","activeCount","flushActive","promise","resolve","startActive","endActive","ZalgoPromise","handler","_this","resolved","rejected","errorHandled","error","handlers","dispatching","stack","result","isAsync","res","reject","_proto","Error","dispatch","_this2","setTimeout","indexOf","push","j","dispatchPossiblyUnhandledError","asyncReject","_this3","_loop","_handlers$i","onSuccess","onError","catch","undefined","finally","onFinally","try","timeout","time","_this4","clearTimeout","toPromise","TypeError","all","promises","count","results","_loop2","prom","hash","keys","map","items","method","onPossiblyUnhandledException","cancel","splice","context","args","delay","flush","isRegex","PROTOCOL","MOCK","FILE","ABOUT","WILDCARD","WINDOW_TYPE","IFRAME","POPUP","IE_WIN_ACCESS_ERROR","isAboutProtocol","win","location","protocol","getParent","parent","getOpener","opener","canReadFromWindow","href","getActualDomain","host","getDomain","domain","mockDomain","isActuallySameDomain","desc","getOwnPropertyDescriptor","isSameDomain","assertSameDomain","isAncestorParent","child","childParent","getParents","getFrames","frames","len","frame","getAllChildFrames","_i3","_getFrames2","_i5","_getAllChildFrames2","childFrame","getTop","top","_i7","_getAllChildFrames4","getAllFramesInWindow","concat","iframeWindows","iframeFrames","isWindowClosed","allowMock","closed","message","mockclosed","iframeIndex","collection","safeIndexOf","contentWindow","parentNode","doc","ownerDocument","documentElement","contains","isFrameWindowClosed","getAncestor","anyMatch","collection1","collection2","_i17","item1","_i19","getDistanceFromTop","distance","isSameTopWindow","win1","win2","top1","top2","allFrames1","allFrames2","opener1","opener2","matchDomain","pattern","origin","Array","isArray","Boolean","match","JSON","stringify","some","subpattern","getDomainFromUrl","url","split","slice","join","onCloseWindow","callback","maxtime","Infinity","check","isWindow","obj","__cross_domain_utils_window_check__","objectIDs","awaitFrameLoadPromises","counter","Date","now","CrossDomainSafeWeakMap","weakmap","values","Math","random","WeakMap","freeze","testWeakMap","testKey","set","hasNativeWeakMap","_cleanupClosedWindows","delete","isSafeToReadWrite","entry","writable","index","has","getOrSet","base64encode","str","btoa","Buffer","from","uniqueID","chars","replace","charAt","floor","toISOString","toLowerCase","serializeArgs","subkey","val","uid","getObjectID","inlineMemoize","logic","cache","__inline_memoize_cache__","noop","once","called","stringifyError","level","newErr","extend","defineLazyProp","configurable","isObjectObject","isPlainObject","replaceObject","replacer","fullKey","itemKey","el","_loop3","isDefined","cleanup","tasks","cleaned","register","task","pop","assertExists","thing","isDocumentReady","document","body","readyState","urlEncode","waitForDocumentReady","interval","setInterval","clearInterval","parseQuery","queryString","params","_i2","_queryString$split2","pair","decodeURIComponent","extendQuery","originalQuery","props","filter","appendChild","container","isElement","element","Element","nodeType","style","getElementSafe","id","querySelector","elementReady","PopupOpenError","awaitFrameLoad","addEventListener","cleanIframes","linkFrameWindow","awaitFrameWindow","loadedFrame","iframe","options","attempts","attributes","tag","styleText","createElement","class","className","setAttribute","_i6","_Object$keys2","styleSheet","cssText","createTextNode","html","innerHTML","frameBorder","allowTransparency","backgroundColor","getElement","removeChild","navigator","userAgent","event","removeEventListener","destroyElement","isElementClosed","onResize","_temp","_ref2","_ref2$width","width","_ref2$height","height","_ref2$interval","_ref2$win","currentWidth","offsetWidth","currentHeight","offsetHeight","observer","newWidth","newHeight","ResizeObserver","observe","MutationObserver","childList","subtree","characterData","loop","disconnect","isPerc","test","isPx","toPx","parseInt","toNum","toCSS","CHILD_WINDOW_TIMEOUT","ACK_TIMEOUT","ACK_TIMEOUT_KNOWN","RES_TIMEOUT","MESSAGE_TYPE","REQUEST","RESPONSE","ACK","MESSAGE_NAME","METHOD","HELLO","OPEN_TUNNEL","SERIALIZATION_TYPE","CROSS_DOMAIN_ZALGO_PROMISE","CROSS_DOMAIN_FUNCTION","CROSS_DOMAIN_WINDOW","getGlobal","getObj","globalStore","defStore","store","storeKey","defVal","del","reset","WildCard","getWildcard","global","WINDOW_WILDCARD","windowStore","winStore","getStore","getInstanceID","getHelloPromise","sayHello","_ref3","send","instanceID","_ref4","data","getWindowInstanceID","_ref5","_ref6","markWindowKnown","TYPE","FUNCTION","ERROR","PROMISE","REGEX","DATE","ARRAY","OBJECT","STRING","NUMBER","BOOLEAN","NULL","UNDEFINED","isSerializedType","__type__","determineType","serializeType","type","__val__","SERIALIZER","_SERIALIZER","_ref","code","toJSON","defaultSerializers","DESERIALIZER","_DESERIALIZER","RegExp","defaultDeserializers","cleanupProxyWindows","idToProxyWindow","_idToProxyWindow$keys2","shouldClean","ProxyWindow","serializedWindow","actualWindow","isProxyWindow","actualWindowPromise","setWindow","memoizedPromiseFunction","_len2","_key2","memoizePromise","getType","isPopup","isIframe","setLocation","setName","frameElement","close","focus","isClosed","_this5","getWindow","awaitWindow","matchWindow","_this6","unwrap","serialize","toProxyWindow","deserialize","on","addMethod","methodStore","proxyWindowMethods","lookupMethod","serializeFunction","destination","meth","methodSource","listenForFunctionCalls","__id__","__name__","serializeMessage","_serialize","serializers","serializer","serializePromise","serializeWindow","deserializeMessage","_deserialize","deserializers","parse","deserializer","serializedPromise","serializedFunction","getDeserializedFunction","opts","crossDomainFunctionWrapper","_arguments","fireAndForget","__origin__","__source__","deserializeFunction","_ref7","deserializeWindow","SEND_MESSAGE_STRATEGIES","sendMessage","_serializeMessage","serializedMessage","success","strategyName","dom","forEach","postMessage","mockUserAgent","getUserAgent","foreignGlobal","receiveMessage","__DOMAIN_REGEX__","getResponseListener","deleteResponseListener","isResponseListenerErrored","getRequestListener","requestListeners","winQualifier","nameListeners","domainListeners","_i4","_domainListeners$__DO2","_domainListeners$__DO3","regex","listener","RECEIVE_MESSAGE_TYPES","_RECEIVE_MESSAGE_TYPE","sendResponse","ack","response","pathname","handleError","receivedMessages","parsedMessage","parseMessage","requestListener","addRequestListener","listenersCollection","_win2","_i8","_i10","_domain2","_i12","existingListener","regexListeners","regexListener","strDomain","errorHandler","responseTimeout","childTimeout","reqPromises","requestPromise","actualParent","_i15","_getFrames8","isAncestor","awaitWindowHello","hasResult","markResponseListenerErrored","responseListener","addResponseListener","totalAckTimeout","isWindowKnown","totalResTimeout","ackTimeout","resTimeout","cycleTime","cycle","max","min","internalSerializeMessage","internalDeserializeMessage","globalFor","getProxyElement","resize","initialized","messageEvent","sourceElement","originalEvent","messageListener","listenForMessages","initHello","setup","ZOID","POST_MESSAGE","PROP_TYPE","PROP_SERIALIZATION","DOTIFY","BASE64","CONTEXT","DEFAULT_DIMENSIONS","WIDTH","HEIGHT","EVENT","RENDER","RENDERED","DISPLAY","CLOSE","PROPS","normalizeChildProp","component","helpers","prop","getPropDefinition","childDecorate","parseChildWindowName","windowName","_windowName$split","zoidcomp","encodedPayload","atob","base64decode","getChildPayload","ChildComponent","parentComponentWindow","onPropHandlers","autoResize","childPayload","getParentComponentWindow","checkParentDomain","initialProps","getPropsByRef","setProps","watchForClose","init","buildExports","watchForResize","getHelpers","onProps","allowedParentDomains","ref","getNthParent","ancestor","_getAllFramesInWindow2","windows","getProps","isUpdate","existingProps","sameDomain","alias","_component$getPropNam2","getPropNames","normalizeChildProps","_this$onPropHandlers2","checkClose","destroy","getAutoResize","_ref3$width","_ref3$height","_ref3$element","_this4$getAutoResize","updateProps","RENDER_DRIVERS","getQueryParam","queryParam","getQueryValue","queryValue","openOnClick","openFrame","title","open","proxyFrame","frameWatcher","clean","_requestPromises$get2","cleanUpWindow","openPrerenderFrame","openPrerender","proxyWin","proxyPrerenderFrame","prerenderFrame","prerenderFrameWindow","delegate","proxyContainer","ParentComponent","driver","initPromise","state","setupEvents","registerActiveComponent","destroyActiveComponent","watchForUnload","triggered","eventName","handlerList","cancelled","trigger","_len3","_key3","triggerOnce","_len4","_key4","onRender","onDisplay","onRendered","onClose","render","log","initialDomain","getInitialDomain","checkAllowRender","buildUrl","getProxyContainer","renderContainer","setState","setProxyWin","prerender","proxyPrerenderWin","loadUrl","setWindowName","buildWindowName","openBridge","runTimeout","containerElement","buildChildPayload","getPropsRef","getPropsForChild","propRef","_ref7$target","getWindowRef","buildParentExports","_ref8","validate","instance","propNames","aliases","propDef","default","_Object$keys4","decorate","normalizeProps","_this$component$getPr2","required","propsDef","builtinProps","serialization","dotify","prefix","newobj","every","_Object$keys6","dotkey","query","originalUrl","originalHash","_url$split","_originalUrl$split","hashString","extendUrl","normalizeMockUrl","getUrl","sendToChild","_this7","_this8","_this9","_this10","windowProp","_this11","_this12","_this13","_this$component$getPr4","propName","allowDelegate","overridesPromise","overrides","_ref9","_this$driver$delegate2","_this14","_this15","closeWindowListener","_this16","unloadWindowListener","_this17","initChild","_this18","_this19","_ref10","_ref11","_this20","_this21","secondClosed","_this22","_ref12","_this23","prerenderTemplate","prerenderWindow","isBlankDomain","renderTemplate","tagName","children","writeElementToWindow","_ref13","_ref13$width","_ref13$height","_ref13$element","_ref14","renderer","_ref15","_this24","dimensions","_ref16","_this25","_ref17","innerContainer","containerTemplate","_this26","_this27","DelegateComponent","watchForSourceClose","getDelegate","getOverrides","closeSourceWindowListener","_inheritsLoose","subClass","superClass","__proto__","react","React","ReactDOM","_React$Component","_class","componentDidMount","findDOMNode","componentDidUpdate","Component","vue","Vue","inheritAttrs","mounted","$el","$attrs","watch","deep","angular","ng","directive","g","toUpperCase","scope","restrict","controller","$scope","$element","$root","$$phase","$apply","safeApply","$watch","angular2","zoid","AngularComponent","NgModule","ElementRef","NgZone","internalProps","zone","run","ComponentInstance","selector","template","inputs","Class","elementRef","_props","ngOnInit","targetElement","nativeElement","ngDoCheck","obj1","obj2","checked","equals","declarations","Node","isElementNode","isTextNode","isFragmentNode","ElementNode","_Node","_proto2","getTag","isTag","getText","TextNode","_Node2","text","_proto3","FragmentNode","_Node3","_proto4","normalizeChild","normalizeChildren","normalizedChild","_normalizedChild$chil2","subchild","node","_len","_key","ELEMENT_TAG","ELEMENT_PROP","CREATE_ELEMENT","_CREATE_ELEMENT","ADD_CHILDREN","_ADD_CHILDREN","firstChild","docElement","domRenderer","_ref9$doc","addProps","_el$querySelectorAll2","querySelectorAll","script","newScript","textContent","replaceChild","fixScripts","addChildren","CLASS","VISIBLE","INVISIBLE","defaultContainerTemplate","_ref$dimensions","classList","add","remove","defaultPrerenderTemplate","defaultNoop","decorateOnce","bridgeUrl","defaultContext","driverCache","xprops","logger","PROP_TYPE_LIST","validatePropDefinitions","components","_ref$width","_ref$height","popup","debug","info","warn","registerChild","listenDelegate","dep","drivers","isChild","_ref2$data","canRenderTo","getBridgeUrl","payload","getDefaultContainer","getDefaultContext","renderTo","activeComponents","destroyAll","__webpack_exports__","component_destroyAll","component_Component"],"mappings":"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","file":"zoid.frameworks.min.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"zoid\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"zoid\"] = factory();\n\telse\n\t\troot[\"zoid\"] = factory();\n})((typeof self !== 'undefined' ? self : this), function() {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 0);\n","export default function _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}","/* @flow */\n\nexport function isPromise(item : mixed) : boolean {\n    try {\n        if (!item) {\n            return false;\n        }\n\n        if (typeof Promise !== 'undefined' && item instanceof Promise) {\n            return true;\n        }\n\n        if (typeof window !== 'undefined' && window.Window && item instanceof window.Window) {\n            return false;\n        }\n\n        if (typeof window !== 'undefined' && window.constructor && item instanceof window.constructor) {\n            return false;\n        }\n\n        let toString = ({}).toString;\n\n        if (toString) {\n            let name = toString.call(item);\n\n            if (name === '[object Window]' || name === '[object global]' || name === '[object DOMWindow]') {\n                return false;\n            }\n        }\n\n        if (typeof item.then === 'function') {\n            return true;\n        }\n    } catch (err) {\n        return false;\n    }\n\n    return false;\n}\n","/* @flow */\n\nimport type { ZalgoPromise } from './promise';\n\nconst dispatchedErrors = [];\nconst possiblyUnhandledPromiseHandlers = [];\n\nexport function dispatchPossiblyUnhandledError<T>(err : mixed, promise : ZalgoPromise<T>) {\n\n    if (dispatchedErrors.indexOf(err) !== -1) {\n        return;\n    }\n\n    dispatchedErrors.push(err);\n\n    setTimeout(() => {\n        if (__DEBUG__) {\n            // $FlowFixMe\n            throw new Error(`${ err.stack || err.toString() }\\n\\nFrom promise:\\n\\n${ promise.stack }`);\n        }\n\n        throw err;\n    }, 1);\n\n    for (let j = 0; j < possiblyUnhandledPromiseHandlers.length; j++) {\n        // $FlowFixMe\n        possiblyUnhandledPromiseHandlers[j](err, promise);\n    }\n}\n\nexport function onPossiblyUnhandledException(handler : (mixed, promise? : ZalgoPromise<*>) => void) : { cancel : () => void } {\n    possiblyUnhandledPromiseHandlers.push(handler);\n\n    return {\n        cancel() {\n            possiblyUnhandledPromiseHandlers.splice(possiblyUnhandledPromiseHandlers.indexOf(handler), 1);\n        }\n    };\n}\n","/* @flow */\n\nimport type { ZalgoPromise } from './promise';\n\nlet activeCount = 0;\nlet flushPromise;\n\nfunction flushActive() {\n    if (!activeCount && flushPromise) {\n        const promise = flushPromise;\n        flushPromise = null;\n        promise.resolve();\n    }\n}\n\nexport function startActive() {\n    activeCount += 1;\n}\n\nexport function endActive() {\n    activeCount -= 1;\n    flushActive();\n}\n\nexport function awaitActive(Zalgo : Class<ZalgoPromise<*>>) : ZalgoPromise<void> { // eslint-disable-line no-undef\n    let promise = flushPromise = flushPromise || new Zalgo();\n    flushActive();\n    return promise;\n}\n","/* @flow */\n\nimport { isPromise } from './utils';\nimport { onPossiblyUnhandledException, dispatchPossiblyUnhandledError } from './exceptions';\nimport { startActive, endActive, awaitActive } from './flush';\n\nexport class ZalgoPromise<R : mixed> {\n\n    resolved : boolean\n    rejected : boolean\n    errorHandled : boolean\n    value : R\n    error : mixed\n    handlers : Array<{\n        promise : ZalgoPromise<*>,\n        onSuccess : void | (result : R) => mixed,\n        onError : void | (error : mixed) => mixed\n    }>\n    dispatching : boolean\n    stack : string\n\n    constructor(handler : ?(resolve : (result : R) => void, reject : (error : mixed) => void) => void) {\n\n        this.resolved = false;\n        this.rejected = false;\n        this.errorHandled = false;\n\n        this.handlers = [];\n\n        if (handler) {\n\n            let result;\n            let error;\n            let resolved = false;\n            let rejected = false;\n            let isAsync = false;\n\n            startActive();\n\n            try {\n                handler(res => {\n                    if (isAsync) {\n                        this.resolve(res);\n                    } else {\n                        resolved = true;\n                        result = res;\n                    }\n\n                }, err => {\n                    if (isAsync) {\n                        this.reject(err);\n                    } else {\n                        rejected = true;\n                        error = err;\n                    }\n                });\n\n            } catch (err) {\n                endActive();\n                this.reject(err);\n                return;\n            }\n\n            endActive();\n\n            isAsync = true;\n\n            if (resolved) {\n                // $FlowFixMe\n                this.resolve(result);\n            } else if (rejected) {\n                this.reject(error);\n            }\n        }\n\n        if (__DEBUG__) {\n            try {\n                throw new Error(`ZalgoPromise`);\n            } catch (err) {\n                this.stack = err.stack;\n            }\n        }\n    }\n\n    resolve(result : R) : ZalgoPromise<R> {\n        if (this.resolved || this.rejected) {\n            return this;\n        }\n\n        if (isPromise(result)) {\n            throw new Error('Can not resolve promise with another promise');\n        }\n\n        this.resolved = true;\n        this.value = result;\n        this.dispatch();\n\n        return this;\n    }\n\n    reject(error : mixed) : ZalgoPromise<R> {\n        if (this.resolved || this.rejected) {\n            return this;\n        }\n\n        if (isPromise(error)) {\n            throw new Error('Can not reject promise with another promise');\n        }\n\n        if (!error) {\n            let err = (error && typeof error.toString === 'function' ? error.toString() : Object.prototype.toString.call(error));\n            error = new Error(`Expected reject to be called with Error, got ${ err }`);\n        }\n\n        this.rejected = true;\n        this.error = error;\n\n        if (!this.errorHandled) {\n            setTimeout(() => {\n                if (!this.errorHandled) {\n                    dispatchPossiblyUnhandledError(error, this);\n                }\n            }, 1);\n        }\n\n        this.dispatch();\n\n        return this;\n    }\n\n    asyncReject(error : mixed) : ZalgoPromise<R> {\n        this.errorHandled = true;\n        this.reject(error);\n        return this;\n    }\n    \n    dispatch() {\n\n        let { dispatching, resolved, rejected, handlers } = this;\n\n        if (dispatching) {\n            return;\n        }\n\n        if (!resolved && !rejected) {\n            return;\n        }\n\n        this.dispatching = true;\n        startActive();\n\n        for (let i = 0; i < handlers.length; i++) {\n\n            let { onSuccess, onError, promise } = handlers[i];\n\n            let result;\n\n            if (resolved) {\n\n                try {\n                    result = onSuccess ? onSuccess(this.value) : this.value;\n                } catch (err) {\n                    promise.reject(err);\n                    continue;\n                }\n\n            } else if (rejected) {\n\n                if (!onError) {\n                    promise.reject(this.error);\n                    continue;\n                }\n\n                try {\n                    result = onError(this.error);\n                } catch (err) {\n                    promise.reject(err);\n                    continue;\n                }\n            }\n\n            if (result instanceof ZalgoPromise && (result.resolved || result.rejected)) {\n\n                if (result.resolved) {\n                    promise.resolve(result.value);\n                } else {\n                    promise.reject(result.error);\n                }\n\n                result.errorHandled = true;\n\n            } else if (isPromise(result)) {\n\n                if (result instanceof ZalgoPromise && (result.resolved || result.rejected)) {\n                    if (result.resolved) {\n                        promise.resolve(result.value);\n                    } else {\n                        promise.reject(result.error);\n                    }\n\n                } else {\n                    // $FlowFixMe\n                    result.then(res => {\n                        promise.resolve(res);\n                    }, err => {\n                        promise.reject(err);\n                    });\n                }\n\n            } else {\n\n                promise.resolve(result);\n            }\n        }\n\n        handlers.length = 0;\n        this.dispatching = false;\n        endActive();\n    }\n\n    then<X : mixed, Y : mixed>(onSuccess : void | (result : R) => (ZalgoPromise<X> | Y), onError : void | (error : mixed) => (ZalgoPromise<X> | Y)) : ZalgoPromise<X | Y> {\n\n        if (onSuccess && typeof onSuccess !== 'function' && !onSuccess.call) {\n            throw new Error('Promise.then expected a function for success handler');\n        }\n\n        if (onError && typeof onError !== 'function' && !onError.call) {\n            throw new Error('Promise.then expected a function for error handler');\n        }\n\n        let promise : ZalgoPromise<X | Y> = new ZalgoPromise();\n\n        this.handlers.push({\n            promise,\n            onSuccess,\n            onError\n        });\n\n        this.errorHandled = true;\n\n        this.dispatch();\n\n        return promise;\n    }\n\n    catch<X : mixed, Y : mixed>(onError : (error : mixed) => ZalgoPromise<X> | Y) : ZalgoPromise<X | Y> {\n        return this.then(undefined, onError);\n    }\n\n    finally(onFinally : () => mixed) : ZalgoPromise<R> {\n\n        if (onFinally && typeof onFinally !== 'function' && !onFinally.call) {\n            throw new Error('Promise.finally expected a function');\n        }\n\n        return this.then((result) => {\n            return ZalgoPromise.try(onFinally)\n                .then(() => {\n                    return result;\n                });\n        }, (err) => {\n            return ZalgoPromise.try(onFinally)\n                .then(() => {\n                    throw err;\n                });\n        });\n    }\n\n    timeout(time : number, err : ?Error) : ZalgoPromise<R> {\n\n        if (this.resolved || this.rejected) {\n            return this;\n        }\n\n        let timeout = setTimeout(() => {\n\n            if (this.resolved || this.rejected) {\n                return;\n            }\n\n            this.reject(err || new Error(`Promise timed out after ${ time }ms`));\n\n        }, time);\n\n        return this.then(result => {\n            clearTimeout(timeout);\n            return result;\n        });\n    }\n\n    // $FlowFixMe\n    toPromise() : Promise<R> {\n        // $FlowFixMe\n        if (typeof Promise === 'undefined') {\n            throw new TypeError(`Could not find Promise`);\n        }\n        // $FlowFixMe\n        return Promise.resolve(this); // eslint-disable-line compat/compat\n    }\n\n    static resolve<X : mixed>(value : X | ZalgoPromise<X>) : ZalgoPromise<X> {\n\n        if (value instanceof ZalgoPromise) {\n            return value;\n        }\n\n        if (isPromise(value)) {\n            // $FlowFixMe\n            return new ZalgoPromise((resolve, reject) => value.then(resolve, reject));\n        }\n\n        return new ZalgoPromise().resolve(value);\n    }\n\n    static reject(error : mixed) : ZalgoPromise<R> {\n        return new ZalgoPromise().reject(error);\n    }\n\n    static asyncReject(error : mixed) : ZalgoPromise<R> {\n        return new ZalgoPromise().asyncReject(error);\n    }\n\n    static all<X : [*] | [*, *] | [*, *, *] | [*, *, *, *] | [*, *, *, *, *] | [*, *, *, *, *, *] | [*, *, *, *, *, *, *] | [*, *, *, *, *, *, *, *] | [*, *, *, *, *, *, *, *, *] | Array<mixed>>(promises : X) : ZalgoPromise<$TupleMap<X, <Y>(ZalgoPromise<Y> | Y) => Y>> { // eslint-disable-line no-undef\n\n        let promise = new ZalgoPromise();\n        let count = promises.length;\n        let results = [];\n\n        if (!count) {\n            promise.resolve(results);\n            return promise;\n        }\n\n        for (let i = 0; i < promises.length; i++) {\n            let prom = promises[i];\n\n            if (prom instanceof ZalgoPromise) {\n                if (prom.resolved) {\n                    results[i] = prom.value;\n                    count -= 1;\n                    continue;\n                }\n            } else if (!isPromise(prom)) {\n                results[i] = prom;\n                count -= 1;\n                continue;\n            }\n\n            ZalgoPromise.resolve(prom).then(result => {\n                results[i] = result;\n                count -= 1;\n                if (count === 0) {\n                    promise.resolve(results);\n                }\n            }, err => {\n                promise.reject(err);\n            });\n        }\n\n        if (count === 0) {\n            promise.resolve(results);\n        }\n\n        return promise;\n    }\n\n    static hash<O : { [string] : * }>(promises : O) : ZalgoPromise<$ObjMap<O, <Y>(ZalgoPromise<Y> | Y) => Y>> { // eslint-disable-line no-undef\n        let result = {};\n        \n        return ZalgoPromise.all(Object.keys(promises).map(key => {\n            return ZalgoPromise.resolve(promises[key]).then(value => {\n                result[key] = value;\n            });\n        })).then(() => {\n            return result;\n        });\n    }\n\n    static map<T, X>(items : Array<T>, method : (T) => (ZalgoPromise<X> | X)) : ZalgoPromise<Array<X>> {\n        // $FlowFixMe\n        return ZalgoPromise.all(items.map(method));\n    }\n\n    static onPossiblyUnhandledException(handler : (err : mixed) => void) : { cancel : () => void } {\n        return onPossiblyUnhandledException(handler);\n    }\n\n    static try<X : mixed, Y : mixed, C : mixed, A : Array<mixed>>(method : (...args : A) => (ZalgoPromise<X> | Y), context : ?C, args : ?A) : ZalgoPromise<X | Y> {\n\n        if (method && typeof method !== 'function' && !method.call) {\n            throw new Error('Promise.try expected a function');\n        }\n\n        let result;\n\n        startActive();\n        \n        try {\n            // $FlowFixMe\n            result = method.apply(context, args || []);\n        } catch (err) {\n            endActive();\n            return ZalgoPromise.reject(err);\n        }\n\n        endActive();\n\n        return ZalgoPromise.resolve(result);\n    }\n\n    static delay(delay : number) : ZalgoPromise<void> {\n        return new ZalgoPromise(resolve => {\n            setTimeout(resolve, delay);\n        });\n    }\n\n    static isPromise(value : mixed) : boolean {\n\n        if (value && value instanceof ZalgoPromise) {\n            return true;\n        }\n\n        return isPromise(value);\n    }\n\n    static flush() : ZalgoPromise<void> {\n        return awaitActive(ZalgoPromise);\n    }\n}\n","/* @flow */\n\nexport function isRegex(item : mixed) : boolean {\n    return Object.prototype.toString.call(item) === '[object RegExp]';\n}\n\n// eslint-disable-next-line no-unused-vars\nexport function noop(...args : Array<mixed>) {\n    // pass\n}\n","/* @flow */\n\nexport const PROTOCOL = {\n    MOCK:  ('mock:' : 'mock:'),\n    FILE:  ('file:' : 'file:'),\n    ABOUT: ('about:' : 'about:')\n};\n\nexport const WILDCARD = '*';\n\nexport const WINDOW_TYPE = {\n    IFRAME: ('iframe' : 'iframe'),\n    POPUP:  ('popup' : 'popup')\n};\n","/* @flow */\n/* eslint max-lines: 0 */\n\nimport { isRegex, noop } from './util';\nimport type { CrossDomainWindowType, SameDomainWindowType, DomainMatcher } from './types';\nimport { PROTOCOL, WILDCARD } from './constants';\n\nlet IE_WIN_ACCESS_ERROR = 'Call was rejected by callee.\\r\\n';\n\nexport function isFileProtocol(win : SameDomainWindowType = window) : boolean {\n    return win.location.protocol === PROTOCOL.FILE;\n}\n\nexport function isAboutProtocol(win : SameDomainWindowType = window) : boolean {\n    return win.location.protocol === PROTOCOL.ABOUT;\n}\n\nexport function getParent(win : ?CrossDomainWindowType) : ?CrossDomainWindowType {\n\n    if (!win) {\n        return;\n    }\n\n    try {\n        if (win.parent && win.parent !== win) {\n            return win.parent;\n        }\n    } catch (err) {\n        // pass\n    }\n}\n\nexport function getOpener(win : ?CrossDomainWindowType) : ?CrossDomainWindowType {\n\n    if (!win) {\n        return;\n    }\n\n    // Make sure we're not actually an iframe which has had window.open() called on us\n    if (getParent(win)) {\n        return;\n    }\n\n    try {\n        return win.opener;\n    } catch (err) {\n        // pass\n    }\n}\n\nexport function canReadFromWindow(win : CrossDomainWindowType | SameDomainWindowType) : boolean {\n    try {\n        // $FlowFixMe\n        noop(win && win.location && win.location.href);\n        return true;\n    } catch (err) {\n        // pass\n    }\n\n    return false;\n}\n\nexport function getActualDomain(win : ?SameDomainWindowType) : string {\n\n    win = win || window;\n\n    let location = win.location;\n\n    if (!location) {\n        throw new Error(`Can not read window location`);\n    }\n\n    let protocol = location.protocol;\n\n    if (!protocol) {\n        throw new Error(`Can not read window protocol`);\n    }\n\n    if (protocol === PROTOCOL.FILE) {\n        return `${ PROTOCOL.FILE }//`;\n    }\n\n    if (protocol === PROTOCOL.ABOUT) {\n\n        let parent = getParent(win);\n        if (parent && canReadFromWindow(parent)) {\n            // $FlowFixMe\n            return getActualDomain(parent);\n        }\n\n        return `${ PROTOCOL.ABOUT }//`;\n    }\n\n    let host = location.host;\n\n    if (!host) {\n        throw new Error(`Can not read window host`);\n    }\n\n    return `${ protocol }//${ host }`;\n}\n\nexport function getDomain(win : ?SameDomainWindowType) : string {\n\n    win = win || window;\n\n    let domain = getActualDomain(win);\n\n    if (domain && win.mockDomain && win.mockDomain.indexOf(PROTOCOL.MOCK) === 0) {\n        return win.mockDomain;\n    }\n\n    return domain;\n}\n\nexport function isBlankDomain(win : CrossDomainWindowType) : boolean {\n    try {\n        // $FlowFixMe\n        if (!win.location.href) {\n            return true;\n        }\n\n        if (win.location.href === 'about:blank') {\n            return true;\n        }\n    } catch (err) {\n        // pass\n    }\n\n    return false;\n}\n\nexport function isActuallySameDomain(win : CrossDomainWindowType) : boolean {\n\n    try {\n        if (win === window) {\n            return true;\n        }\n\n    } catch (err) {\n        // pass\n    }\n\n    try {\n        let desc = Object.getOwnPropertyDescriptor(win, 'location');\n\n        if (desc && desc.enumerable === false) {\n            return false;\n        }\n\n    } catch (err) {\n        // pass\n    }\n\n    try {\n        // $FlowFixMe\n        if (isAboutProtocol(win) && canReadFromWindow(win)) {\n            return true;\n        }\n    } catch (err) {\n        // pass\n    }\n\n    try {\n        // $FlowFixMe\n        if (getActualDomain(win) === getActualDomain(window)) {\n            return true;\n        }\n\n    } catch (err) {\n        // pass\n    }\n\n    return false;\n}\n\nexport function isSameDomain(win : CrossDomainWindowType | SameDomainWindowType) : boolean {\n\n    if (!isActuallySameDomain(win)) {\n        return false;\n    }\n\n    try {\n\n        if (win === window) {\n            return true;\n        }\n\n        // $FlowFixMe\n        if (isAboutProtocol(win) && canReadFromWindow(win)) {\n            return true;\n        }\n\n        // $FlowFixMe\n        if (getDomain(window) === getDomain(win)) {\n            return true;\n        }\n\n    } catch (err) {\n        // pass\n    }\n\n    return false;\n}\n\n\nexport function assertSameDomain(win : CrossDomainWindowType | SameDomainWindowType) : SameDomainWindowType {\n    if (!isSameDomain(win)) {\n        throw new Error(`Expected window to be same domain`);\n    }\n\n    // $FlowFixMe\n    return win;\n}\n\nexport function getParents(win : CrossDomainWindowType) : Array<CrossDomainWindowType> {\n\n    let result = [];\n\n    try {\n\n        while (win.parent !== win) {\n            result.push(win.parent);\n            win = win.parent;\n        }\n\n    } catch (err) {\n        // pass\n    }\n\n    return result;\n}\n\nexport function isAncestorParent(parent : CrossDomainWindowType, child : CrossDomainWindowType) : boolean {\n\n    if (!parent || !child) {\n        return false;\n    }\n\n    let childParent = getParent(child);\n\n    if (childParent) {\n        return childParent === parent;\n    }\n\n    if (getParents(child).indexOf(parent) !== -1) {\n        return true;\n    }\n\n    return false;\n}\n\nexport function getFrames(win : CrossDomainWindowType) : Array<CrossDomainWindowType> {\n\n    let result = [];\n\n    let frames;\n\n    try {\n        frames = win.frames;\n    } catch (err) {\n        frames = win;\n    }\n\n    let len;\n\n    try {\n        len = frames.length;\n    } catch (err) {\n        // pass\n    }\n\n    if (len === 0) {\n        return result;\n    }\n\n    if (len) {\n        for (let i = 0; i < len; i++) {\n\n            let frame;\n\n            try {\n                frame = frames[i];\n            } catch (err) {\n                continue;\n            }\n\n            result.push(frame);\n        }\n\n        return result;\n    }\n\n    for (let i = 0; i < 100; i++) {\n        let frame;\n\n        try {\n            frame = frames[i];\n        } catch (err) {\n            return result;\n        }\n\n        if (!frame) {\n            return result;\n        }\n\n        result.push(frame);\n    }\n\n    return result;\n}\n\n\nexport function getAllChildFrames(win : CrossDomainWindowType) : Array<CrossDomainWindowType> {\n\n    let result = [];\n\n    for (let frame of getFrames(win)) {\n        result.push(frame);\n\n        for (let childFrame of getAllChildFrames(frame)) {\n            result.push(childFrame);\n        }\n    }\n\n    return result;\n}\n\nexport function getTop(win : CrossDomainWindowType) : ?CrossDomainWindowType {\n\n    if (!win) {\n        return;\n    }\n\n    try {\n        if (win.top) {\n            return win.top;\n        }\n    } catch (err) {\n        // pass\n    }\n\n    if (getParent(win) === win) {\n        return win;\n    }\n\n    try {\n        if (isAncestorParent(window, win) && window.top) {\n            return window.top;\n        }\n    } catch (err) {\n        // pass\n    }\n\n    try {\n        if (isAncestorParent(win, window) && window.top) {\n            return window.top;\n        }\n    } catch (err) {\n        // pass\n    }\n\n    for (let frame of getAllChildFrames(win)) {\n        try {\n            if (frame.top) {\n                return frame.top;\n            }\n        } catch (err) {\n            // pass\n        }\n\n        if (getParent(frame) === frame) {\n            return frame;\n        }\n    }\n}\n\nexport function getNextOpener(win? : CrossDomainWindowType = window) : ?CrossDomainWindowType {\n    return getOpener(getTop(win) || win);\n}\n\nexport function getUltimateTop(win? : CrossDomainWindowType = window) : CrossDomainWindowType {\n    let opener = getNextOpener(win);\n\n    if (opener) {\n        return getUltimateTop(opener);\n    }\n\n    return top;\n}\n\nexport function getAllFramesInWindow(win : CrossDomainWindowType) : Array<CrossDomainWindowType> {\n    let top = getTop(win);\n\n    if (!top) {\n        throw new Error(`Can not determine top window`);\n    }\n\n    return [ ...getAllChildFrames(top), top ];\n}\n\nexport function getAllWindows(win? : CrossDomainWindowType = window) : $ReadOnlyArray<CrossDomainWindowType> {\n    let frames = getAllFramesInWindow(win);\n    let opener = getNextOpener(win);\n\n    if (opener) {\n        return [ ...getAllWindows(opener), ...frames ];\n    } else {\n        return frames;\n    }\n}\n\nexport function isTop(win : CrossDomainWindowType) : boolean {\n    return win === getTop(win);\n}\n\nexport function isFrameWindowClosed(frame : HTMLIFrameElement) : boolean {\n\n    if (!frame.contentWindow) {\n        return true;\n    }\n\n    if (!frame.parentNode) {\n        return true;\n    }\n\n    let doc = frame.ownerDocument;\n\n    if (doc && doc.documentElement && !doc.documentElement.contains(frame)) {\n        return true;\n    }\n\n    return false;\n}\n\nfunction safeIndexOf<T>(collection : Array<T>, item : T) : number {\n    for (let i = 0; i < collection.length; i++) {\n\n        try {\n            if (collection[i] === item) {\n                return i;\n            }\n        } catch (err) {\n            // pass\n        }\n    }\n\n    return -1;\n}\n\nlet iframeWindows = [];\nlet iframeFrames = [];\n\nexport function isWindowClosed(win : CrossDomainWindowType, allowMock : boolean = true) : boolean {\n\n    try {\n        if (win === window) {\n            return false;\n        }\n    } catch (err) {\n        return true;\n    }\n\n    try {\n        if (!win) {\n            return true;\n        }\n\n    } catch (err) {\n        return true;\n    }\n\n    try {\n        if (win.closed) {\n            return true;\n        }\n\n    } catch (err) {\n\n        // I love you so much IE\n\n        if (err && err.message === IE_WIN_ACCESS_ERROR) {\n            return false;\n        }\n\n        return true;\n    }\n\n\n    if (allowMock && isSameDomain(win)) {\n        try {\n            // $FlowFixMe\n            if (win.mockclosed) {\n                return true;\n            }\n        } catch (err) {\n            // pass\n        }\n    }\n\n    // Mobile safari\n\n    try {\n        if (!win.parent || !win.top) {\n            return true;\n        }\n    } catch (err) {\n        // pass\n    }\n\n    // Yes, this actually happens in IE. win === win errors out when the window\n    // is from an iframe, and the iframe was removed from the page.\n\n    try {\n        noop(win === win); // eslint-disable-line no-self-compare\n    } catch (err) {\n        return true;\n    }\n\n    // IE orphaned frame\n\n    let iframeIndex = safeIndexOf(iframeWindows, win);\n\n    if (iframeIndex !== -1) {\n        let frame = iframeFrames[iframeIndex];\n\n        if (frame && isFrameWindowClosed(frame)) {\n            return true;\n        }\n    }\n\n    return false;\n}\n\nfunction cleanIframes() {\n    for (let i = 0; i < iframeWindows.length; i++) {\n        let closed = false;\n\n        try {\n            closed = iframeWindows[i].closed;\n        } catch (err) {\n            // pass\n        }\n\n        if (closed) {\n            iframeFrames.splice(i, 1);\n            iframeWindows.splice(i, 1);\n        }\n    }\n}\n\nexport function linkFrameWindow(frame : HTMLIFrameElement) {\n\n    cleanIframes();\n\n    if (frame && frame.contentWindow) {\n        try {\n            iframeWindows.push(frame.contentWindow);\n            iframeFrames.push(frame);\n        } catch (err) {\n            // pass\n        }\n    }\n}\n\nexport function getUserAgent(win : ?SameDomainWindowType) : string {\n    win = win || window;\n    return win.navigator.mockUserAgent || win.navigator.userAgent;\n}\n\n\nexport function getFrameByName(win : CrossDomainWindowType, name : string) : ?CrossDomainWindowType {\n\n    let winFrames = getFrames(win);\n\n    for (let childFrame of winFrames) {\n        try {\n            // $FlowFixMe\n            if (isSameDomain(childFrame) && childFrame.name === name && winFrames.indexOf(childFrame) !== -1) {\n                return childFrame;\n            }\n        } catch (err) {\n            // pass\n        }\n    }\n\n    try {\n        // $FlowFixMe\n        if (winFrames.indexOf(win.frames[name]) !== -1) {\n            // $FlowFixMe\n            return win.frames[name];\n        }\n    } catch (err) {\n        // pass\n    }\n\n    try {\n        if (winFrames.indexOf(win[name]) !== -1) {\n            return win[name];\n        }\n    } catch (err) {\n        // pass\n    }\n}\n\nexport function findChildFrameByName(win : CrossDomainWindowType, name : string) : ?CrossDomainWindowType {\n\n    let frame = getFrameByName(win, name);\n\n    if (frame) {\n        return frame;\n    }\n\n    for (let childFrame of getFrames(win)) {\n        let namedFrame = findChildFrameByName(childFrame, name);\n\n        if (namedFrame) {\n            return namedFrame;\n        }\n    }\n}\n\nexport function findFrameByName(win : CrossDomainWindowType, name : string) : ?CrossDomainWindowType {\n\n    let frame;\n\n    frame = getFrameByName(win, name);\n\n    if (frame) {\n        return frame;\n    }\n\n    let top = getTop(win) || win;\n\n    return findChildFrameByName(top, name);\n}\n\nexport function isParent(win : CrossDomainWindowType, frame : CrossDomainWindowType) : boolean {\n\n    let frameParent = getParent(frame);\n\n    if (frameParent) {\n        return frameParent === win;\n    }\n\n    for (let childFrame of getFrames(win)) {\n        if (childFrame === frame) {\n            return true;\n        }\n    }\n\n    return false;\n}\n\nexport function isOpener(parent : CrossDomainWindowType, child : CrossDomainWindowType) : boolean {\n\n    return parent === getOpener(child);\n}\n\nexport function getAncestor(win : ?CrossDomainWindowType) : ?CrossDomainWindowType {\n    win = win || window;\n\n    let opener = getOpener(win);\n\n    if (opener) {\n        return opener;\n    }\n\n    let parent = getParent(win);\n\n    if (parent) {\n        return parent;\n    }\n}\n\nexport function getAncestors(win : CrossDomainWindowType) : Array<CrossDomainWindowType> {\n\n    let results = [];\n\n    let ancestor = win;\n\n    while (ancestor) {\n        ancestor = getAncestor(ancestor);\n        if (ancestor) {\n            results.push(ancestor);\n        }\n    }\n\n    return results;\n}\n\n\nexport function isAncestor(parent : CrossDomainWindowType, child : CrossDomainWindowType) : boolean {\n\n    let actualParent = getAncestor(child);\n\n    if (actualParent) {\n        if (actualParent === parent) {\n            return true;\n        }\n\n        return false;\n    }\n\n    if (child === parent) {\n        return false;\n    }\n\n    if (getTop(child) === child) {\n        return false;\n    }\n\n    for (let frame of getFrames(parent)) {\n        if (frame === child) {\n            return true;\n        }\n    }\n\n    return false;\n}\n\nexport function isPopup() : boolean {\n    return Boolean(getOpener(window));\n}\n\nexport function isIframe() : boolean {\n    return Boolean(getParent(window));\n}\n\nexport function isFullpage() : boolean {\n    return Boolean(!isIframe() && !isPopup());\n}\n\nfunction anyMatch(collection1, collection2) : boolean {\n\n    for (let item1 of collection1) {\n        for (let item2 of collection2) {\n            if (item1 === item2) {\n                return true;\n            }\n        }\n    }\n\n    return false;\n}\n\nexport function getDistanceFromTop(win : CrossDomainWindowType = window) : number {\n    let distance = 0;\n    let parent = win;\n\n    while (parent) {\n        parent = getParent(parent);\n        if (parent) {\n            distance += 1;\n        }\n    }\n\n    return distance;\n}\n\nexport function getNthParent(win : CrossDomainWindowType, n : number = 1) : ?CrossDomainWindowType {\n    let parent = win;\n\n    for (let i = 0; i < n; i++) {\n        if (!parent) {\n            return;\n        }\n\n        parent = getParent(parent);\n    }\n\n    return parent;\n}\n\nexport function getNthParentFromTop(win : CrossDomainWindowType, n : number = 1) : ?CrossDomainWindowType {\n    return getNthParent(win, getDistanceFromTop(win) - n);\n}\n\nexport function isSameTopWindow(win1 : CrossDomainWindowType, win2 : CrossDomainWindowType) : boolean {\n\n    let top1 = getTop(win1) || win1;\n    let top2 = getTop(win2) || win2;\n\n    try {\n        if (top1 && top2) {\n            if (top1 === top2) {\n                return true;\n            }\n\n            return false;\n        }\n    } catch (err) {\n        // pass\n    }\n\n    let allFrames1 = getAllFramesInWindow(win1);\n    let allFrames2 = getAllFramesInWindow(win2);\n\n    if (anyMatch(allFrames1, allFrames2)) {\n        return true;\n    }\n\n    let opener1 = getOpener(top1);\n    let opener2 = getOpener(top2);\n\n    if (opener1 && anyMatch(getAllFramesInWindow(opener1), allFrames2)) {\n        return false;\n    }\n\n    if (opener2 && anyMatch(getAllFramesInWindow(opener2), allFrames1)) {\n        return false;\n    }\n\n    return false;\n}\n\nexport function matchDomain(pattern : DomainMatcher, origin : DomainMatcher) : boolean {\n\n    if (typeof pattern === 'string') {\n\n        if (typeof origin === 'string') {\n            return pattern === WILDCARD || origin === pattern;\n        }\n\n        if (isRegex(origin)) {\n            return false;\n        }\n\n        if (Array.isArray(origin)) {\n            return false;\n        }\n    }\n\n    if (isRegex(pattern)) {\n\n        if (isRegex(origin)) {\n            return pattern.toString() === origin.toString();\n        }\n\n        if (Array.isArray(origin)) {\n            return false;\n        }\n\n        // $FlowFixMe\n        return Boolean(origin.match(pattern));\n    }\n\n    if (Array.isArray(pattern)) {\n\n        if (Array.isArray(origin)) {\n            return JSON.stringify(pattern) === JSON.stringify(origin);\n        }\n\n        if (isRegex(origin)) {\n            return false;\n        }\n\n        return pattern.some(subpattern => matchDomain(subpattern, origin));\n    }\n\n    return false;\n}\n\nexport function stringifyDomainPattern(pattern : DomainMatcher) : string {\n    if (Array.isArray(pattern)) {\n        return `(${ pattern.join(' | ') })`;\n    } else if (isRegex(pattern)) {\n        return `RegExp(${ pattern.toString() }`;\n    } else {\n        return pattern.toString();\n    }\n}\n\nexport function getDomainFromUrl(url : string) : string {\n\n    let domain;\n\n    if (url.match(/^(https?|mock|file):\\/\\//)) {\n        domain = url;\n    } else {\n        return getDomain();\n    }\n\n    domain = domain.split('/').slice(0, 3).join('/');\n\n    return domain;\n}\n\nexport function onCloseWindow(win : CrossDomainWindowType, callback : Function, delay : number = 1000, maxtime : number = Infinity) : { cancel : () => void } {\n\n    let timeout;\n\n    let check = () => {\n\n        if (isWindowClosed(win)) {\n\n            if (timeout) {\n                clearTimeout(timeout);\n            }\n\n            return callback();\n        }\n\n        if (maxtime <= 0) {\n            clearTimeout(timeout);\n        } else {\n            maxtime -= delay;\n            timeout = setTimeout(check, delay);\n        }\n    };\n\n    check();\n\n    return {\n        cancel() {\n            if (timeout) {\n                clearTimeout(timeout);\n            }\n        }\n    };\n}\n\n// eslint-disable-next-line complexity\nexport function isWindow(obj : Object) : boolean {\n\n    try {\n        if (obj === window) {\n            return true;\n        }\n    } catch (err) {\n        if (err && err.message === IE_WIN_ACCESS_ERROR) {\n            return true;\n        }\n    }\n\n    try {\n        if (Object.prototype.toString.call(obj) === '[object Window]') {\n            return true;\n        }\n    } catch (err) {\n        if (err && err.message === IE_WIN_ACCESS_ERROR) {\n            return true;\n        }\n    }\n\n    try {\n        if (window.Window && obj instanceof window.Window) {\n            return true;\n        }\n    } catch (err) {\n        if (err && err.message === IE_WIN_ACCESS_ERROR) {\n            return true;\n        }\n    }\n\n    try {\n        if (obj && obj.self === obj) {\n            return true;\n        }\n    } catch (err) {\n        if (err && err.message === IE_WIN_ACCESS_ERROR) {\n            return true;\n        }\n    }\n\n    try {\n        if (obj && obj.parent === obj) {\n            return true;\n        }\n    } catch (err) {\n        if (err && err.message === IE_WIN_ACCESS_ERROR) {\n            return true;\n        }\n    }\n\n    try {\n        if (obj && obj.top === obj) {\n            return true;\n        }\n    } catch (err) {\n        if (err && err.message === IE_WIN_ACCESS_ERROR) {\n            return true;\n        }\n    }\n\n    try {\n        noop(obj === obj);  // eslint-disable-line no-self-compare\n\n    } catch (err) {\n        return true;\n    }\n\n    try {\n        noop(obj && obj.__cross_domain_utils_window_check__);\n\n    } catch (err) {\n        return true;\n    }\n\n    return false;\n}\n\nexport function isBrowser() : boolean {\n    return (typeof window !== 'undefined' && typeof window.location !== 'undefined');\n}\n\nexport function isCurrentDomain(domain : string) : boolean {\n    if (!isBrowser()) {\n        return false;\n    }\n\n    return (getDomain() === domain);\n}\n\nexport function isMockDomain(domain : string) : boolean {\n    return domain.indexOf(PROTOCOL.MOCK) === 0;\n}\n\nexport function normalizeMockUrl(url : string) : string {\n    if (!isMockDomain(getDomainFromUrl(url))) {\n        return url;\n    }\n\n    if (!__TEST__) {\n        throw new Error(`Mock urls not supported out of test mode`);\n    }\n\n    return url.replace(/^mock:\\/\\/[^/]+/, getActualDomain(window));\n}\n","/* @flow */\n\nexport function safeIndexOf<T>(collection : Array<T>, item : T) : number {\n    for (let i = 0; i < collection.length; i++) {\n\n        try {\n            if (collection[i] === item) {\n                return i;\n            }\n        } catch (err) {\n            // pass\n        }\n    }\n\n    return -1;\n}\n\n// eslint-disable-next-line no-unused-vars\nexport function noop(...args : Array<mixed>) {\n    // pass\n}\n","/* @flow */\n\nimport { isWindow, isWindowClosed } from 'cross-domain-utils/src';\n\nimport { hasNativeWeakMap } from './native';\nimport { noop, safeIndexOf } from './util';\n\nlet defineProperty = Object.defineProperty;\nlet counter = Date.now() % 1e9;\n\nexport class CrossDomainSafeWeakMap<K : Object, V : mixed> {\n\n    name : string\n    weakmap : WeakMap<K, V>\n    keys : Array<K>\n    values : Array<V>\n\n    constructor() {\n        counter += 1;\n\n        // eslint-disable-next-line no-bitwise\n        this.name = `__weakmap_${ Math.random() * 1e9 >>> 0 }__${ counter }`;\n\n        if (hasNativeWeakMap()) {\n            try {\n                this.weakmap = new WeakMap();\n            } catch (err) {\n                // pass\n            }\n        }\n\n        this.keys  = [];\n        this.values = [];\n    }\n\n    _cleanupClosedWindows() {\n\n        let weakmap = this.weakmap;\n        let keys = this.keys;\n\n        for (let i = 0; i < keys.length; i++) {\n            let value = keys[i];\n\n            if (isWindow(value) && isWindowClosed(value)) {\n\n                if (weakmap) {\n                    try {\n                        weakmap.delete(value);\n                    } catch (err) {\n                        // pass\n                    }\n                }\n\n                keys.splice(i, 1);\n                this.values.splice(i, 1);\n\n                i -= 1;\n            }\n        }\n    }\n\n    isSafeToReadWrite(key : K) : boolean {\n\n        if (isWindow(key)) {\n            return false;\n        }\n\n        try {\n            noop(key && key.self);\n            noop(key && key[this.name]);\n        } catch (err) {\n            return false;\n        }\n\n        return true;\n    }\n\n    set(key : K, value : V) {\n\n        if (!key) {\n            throw new Error(`WeakMap expected key`);\n        }\n\n        let weakmap = this.weakmap;\n\n        if (weakmap) {\n            try {\n                weakmap.set(key, value);\n            } catch (err) {\n                delete this.weakmap;\n            }\n        }\n\n        if (!this.isSafeToReadWrite(key)) {\n\n            this._cleanupClosedWindows();\n\n            let keys = this.keys;\n            let values = this.values;\n            let index = safeIndexOf(keys, key);\n\n            if (index === -1) {\n                keys.push(key);\n                values.push(value);\n            } else {\n                values[index] = value;\n            }\n\n        } else {\n\n            let name = this.name;\n            let entry = key[name];\n\n            if (entry && entry[0] === key) {\n                entry[1] = value;\n            } else {\n                defineProperty(key, name, {\n                    value:    [ key, value ],\n                    writable: true\n                });\n            }\n        }\n    }\n\n    get(key : K) : V | void {\n\n        if (!key) {\n            throw new Error(`WeakMap expected key`);\n        }\n\n        let weakmap = this.weakmap;\n\n        if (weakmap) {\n            try {\n                if (weakmap.has(key)) {\n                    return weakmap.get(key);\n                }\n            } catch (err) {\n                delete this.weakmap;\n            }\n        }\n\n        if (!this.isSafeToReadWrite(key)) {\n\n            this._cleanupClosedWindows();\n\n            let keys = this.keys;\n            let index = safeIndexOf(keys, key);\n\n            if (index === -1) {\n                return;\n            }\n\n            return this.values[index];\n\n        } else {\n\n            let entry = key[this.name];\n\n            if (entry && entry[0] === key) {\n                return entry[1];\n            }\n        }\n    }\n\n    delete(key : K) {\n\n        if (!key) {\n            throw new Error(`WeakMap expected key`);\n        }\n\n        let weakmap = this.weakmap;\n\n        if (weakmap) {\n            try {\n                weakmap.delete(key);\n            } catch (err) {\n                delete this.weakmap;\n            }\n        }\n\n        if (!this.isSafeToReadWrite(key)) {\n\n            this._cleanupClosedWindows();\n\n            let keys = this.keys;\n            let index = safeIndexOf(keys, key);\n\n            if (index !== -1) {\n                keys.splice(index, 1);\n                this.values.splice(index, 1);\n            }\n\n        } else {\n\n            let entry = key[this.name];\n\n            if (entry && entry[0] === key) {\n                entry[0] = entry[1] = undefined;\n            }\n        }\n    }\n\n    has(key : K) : boolean {\n\n        if (!key) {\n            throw new Error(`WeakMap expected key`);\n        }\n\n        let weakmap = this.weakmap;\n\n        if (weakmap) {\n            try {\n                if (weakmap.has(key)) {\n                    return true;\n                }\n            } catch (err) {\n                delete this.weakmap;\n            }\n        }\n\n        if (!this.isSafeToReadWrite(key)) {\n\n            this._cleanupClosedWindows();\n\n            let index = safeIndexOf(this.keys, key);\n            return index !== -1;\n\n        } else {\n\n            let entry = key[this.name];\n\n            if (entry && entry[0] === key) {\n                return true;\n            }\n\n            return false;\n        }\n    }\n\n    getOrSet(key : K, getter : () => V) : V {\n        if (this.has(key)) {\n            // $FlowFixMe\n            return this.get(key);\n        }\n\n        let value = getter();\n        this.set(key, value);\n        return value;\n    }\n}\n","/* @flow */\n/* eslint max-lines: 0 */\n\nimport { ZalgoPromise } from 'zalgo-promise/src';\nimport { WeakMap } from 'cross-domain-safe-weakmap/src';\n\nimport type { CancelableType } from './types';\n\nexport function base64encode(str : string) : string {\n    if (typeof btoa === 'function') {\n        return btoa(str);\n    } else if (typeof Buffer !== 'undefined') {\n        return Buffer.from(str, 'utf8').toString('base64');\n    }\n\n    throw new Error(`Can not find window.btoa or Buffer`);\n}\n\nexport function base64decode(str : string) : string {\n    if (typeof window !== 'undefined' && typeof window.atob === 'function') {\n        return window.atob(str);\n    }\n\n    if (typeof Buffer !== 'undefined') {\n        return Buffer.from(str, 'base64').toString('utf8');\n    }\n\n    throw new Error(`Can not find window.atob or Buffer`);\n}\n\nexport function uniqueID() : string {\n\n    let chars = '0123456789abcdef';\n\n    let randomID = 'xxxxxxxxxx'.replace(/./g, () => {\n        return chars.charAt(Math.floor(Math.random() * chars.length));\n    });\n\n    let timeID = base64encode(\n        new Date().toISOString().slice(11, 19).replace('T', '.')\n    ).replace(/[^a-zA-Z0-9]/g, '').toLowerCase();\n\n    return `${ randomID }_${ timeID }`;\n}\n\nexport function getGlobal() : Object {\n    if (typeof window !== 'undefined') {\n        return window;\n    }\n    if (typeof global !== 'undefined') {\n        return global;\n    }\n    if (typeof __GLOBAL__ !== 'undefined') {\n        return __GLOBAL__;\n    }\n    throw new Error(`No global found`);\n}\n\nlet objectIDs;\n\nexport function getObjectID(obj : Object) : string {\n\n    objectIDs = objectIDs || new WeakMap();\n\n    if (obj === null || obj === undefined || (typeof obj !== 'object' && typeof obj !== 'function')) {\n        throw new Error(`Invalid object`);\n    }\n\n    let uid = objectIDs.get(obj);\n\n    if (!uid) {\n        uid = `${ typeof obj }:${ uniqueID() }`;\n        objectIDs.set(obj, uid);\n    }\n\n    return uid;\n}\n\nfunction serializeArgs(args : Array<mixed>) : string {\n    try {\n        return JSON.stringify(Array.prototype.slice.call(args), (subkey, val) => {\n            if (typeof val === 'function') {\n                return `memoize[${ getObjectID(val) }]`;\n            }\n            return val;\n        });\n    } catch (err) {\n        throw new Error(`Arguments not serializable -- can not be used to memoize`);\n    }\n}\n\n// eslint-disable-next-line flowtype/no-weak-types\nexport function memoize<R>(method : (...args : Array<any>) => R, options : { time? : number, name? : string, thisNamespace? : boolean } = {}) : ((...args : Array<any>) => R) {\n    let cacheMap = new WeakMap();\n\n    // eslint-disable-next-line flowtype/no-weak-types\n    function memoizedFunction(...args : Array<any>) : R {\n        let cache = cacheMap.getOrSet(options.thisNamespace ? this : method, () => ({}));\n\n        let key : string = serializeArgs(args);\n\n        let cacheTime = options.time;\n        if (cache[key] && cacheTime && (Date.now() - cache[key].time) < cacheTime) {\n            delete cache[key];\n        }\n\n        if (cache[key]) {\n            return cache[key].value;\n        }\n\n        let time  = Date.now();\n        let value = method.apply(this, arguments);\n\n        cache[key] = { time, value };\n\n        return cache[key].value;\n    }\n\n    memoizedFunction.reset = () => {\n        cacheMap.delete(options.thisNamespace ? this : method);\n    };\n\n    if (options.name) {\n        memoizedFunction.displayName = `${ options.name }:memoized`;\n    }\n\n    return memoizedFunction;\n}\n\n// eslint-disable-next-line flowtype/no-weak-types\nexport function memoizePromise<R>(method : (...args : Array<any>) => ZalgoPromise<R>) : ((...args : Array<any>) => ZalgoPromise<R>) {\n    let cache = {};\n\n    // eslint-disable-next-line flowtype/no-weak-types\n    function memoizedPromiseFunction(...args : Array<any>) : ZalgoPromise<R> {\n        let key : string = serializeArgs(args);\n\n        if (cache.hasOwnProperty(key)) {\n            return cache[key];\n        }\n\n        cache[key] = method.apply(this, arguments)\n            .finally(() => {\n                delete cache[key];\n            });\n\n        return cache[key];\n    }\n\n    memoizedPromiseFunction.reset = () => {\n        cache = {};\n    };\n\n    return memoizedPromiseFunction;\n}\n\n// eslint-disable-next-line flowtype/no-weak-types\nexport function promisify<R>(method : (...args : Array<any>) => R, options : { name? : string } = {}) : ((...args : Array<any>) => ZalgoPromise<R>) {\n    function promisifiedFunction() : ZalgoPromise<R> {\n        return ZalgoPromise.try(method, this, arguments);\n    }\n\n    if (options.name) {\n        promisifiedFunction.displayName = `${ options.name }:promisified`;\n    }\n\n    return promisifiedFunction;\n}\n\n// eslint-disable-next-line flowtype/no-weak-types\nexport function inlineMemoize<R>(method : (...args : Array<any>) => R, logic : (...args : Array<any>) => R, args : Array<any> = []) : R {\n    let cache = method.__inline_memoize_cache__ = method.__inline_memoize_cache__ || {};\n    let key = serializeArgs(args);\n\n    if (cache.hasOwnProperty(key)) {\n        return cache[key];\n    }\n    \n    let result = cache[key] = logic(...args);\n    return result;\n}\n\n// eslint-disable-next-line no-unused-vars\nexport function noop(...args : Array<mixed>) {\n    // pass\n}\n\nexport function once(method : Function) : Function {\n    let called = false;\n\n    return function onceFunction() : mixed {\n        if (!called) {\n            called = true;\n            return method.apply(this, arguments);\n        }\n    };\n}\n\nexport function hashStr(str : string) : number {\n    let hash = 0;\n    for (let i = 0; i < str.length; i++) {\n        hash += str[i].charCodeAt(0) * Math.pow((i % 10) + 1, 5);\n    }\n    return Math.floor(Math.pow(Math.sqrt(hash), 5));\n}\n\nexport function strHashStr(str : string) : string {\n    let hash = '';\n\n    for (let i = 0; i < str.length; i++) {\n        let total = (str[i].charCodeAt(0) * i);\n\n        if (str[i + 1]) {\n            total += (str[i + 1].charCodeAt(0) * (i - 1));\n        }\n\n        hash += String.fromCharCode(97 + (Math.abs(total) % 26));\n    }\n\n    return hash;\n}\n\nexport function match(str : string, pattern : RegExp) : ?string {\n    let regmatch = str.match(pattern);\n    if (regmatch) {\n        return regmatch[1];\n    }\n}\n\nexport function awaitKey<T: mixed>(obj : Object, key : string) : ZalgoPromise<T> {\n    return new ZalgoPromise(resolve => {\n\n        let value = obj[key];\n\n        if (value) {\n            return resolve(value);\n        }\n\n        delete obj[key];\n\n        Object.defineProperty(obj, key, {\n\n            configurable: true,\n\n            set(item) {\n                value = item;\n\n                if (value) {\n                    resolve(value);\n                }\n            },\n\n            get() : mixed {\n                return value;\n            }\n        });\n    });\n}\n\nexport function stringifyError(err : mixed, level : number = 1) : string {\n\n    if (level >= 3) {\n        return 'stringifyError stack overflow';\n    }\n\n    try {\n        if (!err) {\n            return `<unknown error: ${ Object.prototype.toString.call(err) }>`;\n        }\n\n        if (typeof err === 'string') {\n            return err;\n        }\n\n        if (err instanceof Error) {\n            let stack = err && err.stack;\n            let message = err && err.message;\n\n            if (stack && message) {\n                if (stack.indexOf(message) !== -1) {\n                    return stack;\n                } else {\n                    return `${ message }\\n${ stack }`;\n                }\n            } else if (stack) {\n                return stack;\n            } else if (message) {\n                return message;\n            }\n        }\n\n        if (typeof err.toString === 'function') {\n            return err.toString();\n        }\n\n        return Object.prototype.toString.call(err);\n\n    } catch (newErr) { // eslint-disable-line unicorn/catch-error-name\n        return `Error while stringifying error: ${ stringifyError(newErr, level + 1) }`;\n    }\n}\n\nexport function stringifyErrorMessage(err : mixed) : string {\n\n    let defaultMessage = `<unknown error: ${ Object.prototype.toString.call(err) }>`;\n\n    if (!err) {\n        return defaultMessage;\n    }\n\n    if (err instanceof Error) {\n        return err.message || defaultMessage;\n    }\n\n    if (typeof err.message === 'string') {\n        return err.message || defaultMessage;\n    }\n\n    return defaultMessage;\n}\n\nexport function stringify(item : mixed) : string {\n    if (typeof item === 'string') {\n        return item;\n    }\n\n    if (item && typeof item.toString === 'function') {\n        return item.toString();\n    }\n\n    return Object.prototype.toString.call(item);\n}\n\nexport function domainMatches(hostname : string, domain : string) : boolean {\n    hostname = hostname.split('://')[1];\n    let index = hostname.indexOf(domain);\n    return (index !== -1 && hostname.slice(index) === domain);\n}\n\nexport function patchMethod(obj : Object, name : string, handler : Function) {\n    let original = obj[name];\n\n    obj[name] = function patchedMethod() : mixed {\n        return handler({\n            context:      this,\n            args:         Array.prototype.slice.call(arguments),\n            original,\n            callOriginal: () => original.apply(this, arguments)\n        });\n    };\n}\n\nexport function extend<T : Object | Function>(obj : T, source : Object) : T {\n    if (!source) {\n        return obj;\n    }\n\n    if (Object.assign) {\n        return Object.assign(obj, source);\n    }\n\n    for (let key in source) {\n        if (source.hasOwnProperty(key)) {\n            obj[key] = source[key];\n        }\n    }\n\n    return obj;\n}\n\nexport function values<T>(obj : { [string] : T }) : Array<T> {\n    let result = [];\n    for (let key in obj) {\n        if (obj.hasOwnProperty(key)) {\n            result.push(obj[key]);\n        }\n    }\n    return result;\n}\n\nexport function perc(pixels : number, percentage : number) : number {\n    return Math.round((pixels * percentage) / 100);\n}\n\nexport function min(...args : Array<number>) : number {\n    return Math.min(...args);\n}\n\nexport function max(...args : Array<number>) : number {\n    return Math.max(...args);\n}\n\nexport function regexMap<T>(str : string, regexp : RegExp, handler : () => T) : Array<T> {\n    let results = [];\n\n    // $FlowFixMe\n    str.replace(regexp, function regexMapMatcher(item) {\n        results.push(handler ? handler.apply(null, arguments) : item);\n    });\n\n    // $FlowFixMe\n    return results;\n}\n\nexport function svgToBase64(svg : string) : string {\n    return `data:image/svg+xml;base64,${ base64encode(svg) }`;\n}\n\nexport function objFilter<T, R>(obj : { [string] : T }, filter? : (T, ?string) => mixed = Boolean) : { [string] : R } {\n    let result = {};\n\n    for (let key in obj) {\n        if (!obj.hasOwnProperty(key) || !filter(obj[key], key)) {\n            continue;\n        }\n\n        result[key] = obj[key];\n    }\n\n    return result;\n}\n\nexport function identity <T>(item : T) : T {\n    return item;\n}\n\nexport function regexTokenize(text : string, regexp : RegExp) : Array<string> {\n    let result = [];\n    text.replace(regexp, token => {\n        result.push(token);\n        return '';\n    });\n    return result;\n}\n\nexport function promiseDebounce<T>(method : () => ZalgoPromise<T> | T, delay : number = 50) : () => ZalgoPromise<T> {\n\n    let promise;\n    let timeout;\n\n    return function promiseDebouncedMethod() : ZalgoPromise<T> {\n        if (timeout) {\n            clearTimeout(timeout);\n        }\n\n        let localPromise = promise = promise || new ZalgoPromise();\n\n        timeout = setTimeout(() => {\n            promise = null;\n            timeout = null;\n\n            ZalgoPromise.try(method).then(\n                result => { localPromise.resolve(result); },\n                err => { localPromise.reject(err); }\n            );\n        }, delay);\n\n        return localPromise;\n    };\n}\n\nexport function safeInterval(method : Function, time : number) : { cancel : () => void } {\n\n    let timeout;\n\n    function loop() {\n        timeout = setTimeout(() => {\n            method();\n            loop();\n        }, time);\n    }\n\n    loop();\n\n    return {\n        cancel() {\n            clearTimeout(timeout);\n        }\n    };\n}\n\nexport function isInteger(str : string) : boolean {\n    return Boolean(str.match(/^[0-9]+$/));\n}\n\nexport function isFloat(str : string) : boolean {\n    return Boolean(str.match(/^[0-9]+\\.[0-9]+$/));\n}\n\nexport function serializePrimitive(value : string | number | boolean) : string {\n    return value.toString();\n}\n\nexport function deserializePrimitive(value : string) : string | number | boolean {\n    if (value === 'true') {\n        return true;\n    } else if (value === 'false') {\n        return false;\n    } else if (isInteger(value)) {\n        return parseInt(value, 10);\n    } else if (isFloat(value)) {\n        return parseFloat(value);\n    } else {\n        return value;\n    }\n}\n\nexport function dotify(obj : Object, prefix : string = '', newobj : Object = {}) : { [string] : string } {\n    prefix = prefix ? `${ prefix }.` : prefix;\n    for (let key in obj) {\n        if (!obj.hasOwnProperty(key) || obj[key] === undefined || obj[key] === null || typeof obj[key] === 'function') {\n            continue;\n        } else if (obj[key] && Array.isArray(obj[key]) && obj[key].length && obj[key].every(val => typeof val !== 'object')) {\n            newobj[`${ prefix }${ key }[]`] = obj[key].join(',');\n        } else if (obj[key] && typeof obj[key] === 'object') {\n            newobj = dotify(obj[key], `${ prefix }${ key }`, newobj);\n        } else {\n            newobj[`${ prefix }${ key }`] = serializePrimitive(obj[key]);\n        }\n    }\n    return newobj;\n}\n\nexport function undotify(obj : { [string] : string }) : Object {\n    \n    let result = {};\n\n    for (let key in obj) {\n        if (!obj.hasOwnProperty(key) || typeof obj[key] !== 'string') {\n            continue;\n        }\n\n        let value = obj[key];\n\n        if (key.match(/^.+\\[\\]$/)) {\n            key = key.slice(0, key.length - 2);\n            value = value.split(',').map(deserializePrimitive);\n        } else {\n            value = deserializePrimitive(value);\n        }\n\n        let keyResult = result;\n        let parts = key.split('.');\n        for (let i = 0; i < parts.length; i++) {\n            let part = parts[i];\n            let isLast = (i + 1 === parts.length);\n            let isIndex = !isLast && isInteger(parts[i + 1]);\n\n            if (isLast) {\n                // $FlowFixMe\n                keyResult[part] = value;\n            } else {\n                // $FlowFixMe\n                keyResult = keyResult[part] = keyResult[part] || (isIndex ? [] : {});\n            }\n        }\n    }\n\n    return result;\n}\n\nexport type EventEmitterType = {\n    on : (eventName : string, handler : Function) => CancelableType,\n    once : (eventName : string, handler : Function) => CancelableType,\n    trigger : (eventName : string, ...args : $ReadOnlyArray<mixed>) => ZalgoPromise<void>,\n    triggerOnce : (eventName : string, ...args : $ReadOnlyArray<mixed>) => ZalgoPromise<void>\n};\n\nexport function eventEmitter() : EventEmitterType {\n    let triggered = {};\n    let handlers = {};\n\n    return {\n\n        on(eventName : string, handler : Function) : CancelableType {\n            let handlerList = handlers[eventName] = handlers[eventName] || [];\n\n            handlerList.push(handler);\n\n            let cancelled = false;\n\n            return {\n                cancel() {\n                    if (!cancelled) {\n                        cancelled = true;\n                        handlerList.splice(handlerList.indexOf(handler), 1);\n                    }\n\n                }\n            };\n        },\n\n        once(eventName : string, handler : Function) : CancelableType {\n\n            let listener = this.on(eventName, () => {\n                listener.cancel();\n                handler();\n            });\n\n            return listener;\n        },\n\n        trigger(eventName : string, ...args : $ReadOnlyArray<mixed>) : ZalgoPromise<void> {\n\n            let handlerList = handlers[eventName];\n            let promises = [];\n\n            if (handlerList) {\n                for (let handler of handlerList) {\n                    promises.push(ZalgoPromise.try(() => handler(...args)));\n                }\n            }\n\n            return ZalgoPromise.all(promises).then(noop);\n        },\n\n        triggerOnce(eventName : string, ...args : $ReadOnlyArray<mixed>) : ZalgoPromise<void> {\n\n            if (triggered[eventName]) {\n                return ZalgoPromise.resolve();\n            }\n\n            triggered[eventName] = true;\n            return this.trigger(eventName, ...args);\n        }\n    };\n}\n\nexport function camelToDasherize(string : string) : string {\n    return string.replace(/([A-Z])/g, (g) => {\n        return `-${ g.toLowerCase() }`;\n    });\n}\n\nexport function dasherizeToCamel(string : string) : string {\n    return string.replace(/-([a-z])/g, (g) => {\n        return g[1].toUpperCase();\n    });\n}\n\nexport function capitalizeFirstLetter(string : string) : string {\n    return string.charAt(0).toUpperCase() + string.slice(1).toLowerCase();\n}\n\nexport function get(item : Object, path : string, def : mixed) : mixed {\n\n    if (!path) {\n        return def;\n    }\n\n    let pathParts = path.split('.');\n\n    // Loop through each section of our key path\n\n    for (let i = 0; i < pathParts.length; i++) {\n\n        // If we have an object, we can get the key\n        if (typeof item === 'object' && item !== null) {\n            item = item[pathParts[i]];\n\n        // Otherwise, we should return the default (undefined if not provided)\n        } else {\n            return def;\n        }\n    }\n\n    // If our final result is undefined, we should return the default\n\n    return item === undefined ? def : item;\n}\n\nexport function safeTimeout(method : Function, time : number) {\n\n    let interval = safeInterval(() => {\n        time -= 100;\n        if (time <= 0) {\n            interval.cancel();\n            method();\n        }\n    }, 100);\n}\n\nexport function defineLazyProp<T>(obj : Object | Array<mixed>, key : string | number, getter : () => T) {\n    if (Array.isArray(obj)) {\n        if (typeof key !== 'number') {\n            throw new TypeError(`Array key must be number`);\n        }\n    } else if (typeof obj === 'object' && obj !== null) {\n        if (typeof key !== 'string') {\n            throw new TypeError(`Object key must be string`);\n        }\n    }\n    \n    Object.defineProperty(obj, key, {\n        configurable: true,\n        enumerable:   true,\n        get:          () => {\n            // $FlowFixMe\n            delete obj[key];\n            let value = getter();\n            // $FlowFixMe\n            obj[key] = value;\n            return value;\n        },\n        set: (value : T) => {\n            // $FlowFixMe\n            delete obj[key];\n            // $FlowFixMe\n            obj[key] = value;\n        }\n    });\n}\n\nexport function isObject(item : mixed) : boolean {\n    return (typeof item === 'object' && item !== null);\n}\n\nexport function isObjectObject(obj : mixed) : boolean {\n    return isObject(obj) && Object.prototype.toString.call(obj) === '[object Object]';\n}\n\nexport function isPlainObject(obj : mixed) : boolean {\n    if (!isObjectObject(obj)) {\n        return false;\n    }\n\n    // $FlowFixMe\n    let constructor = obj.constructor;\n\n    if (typeof constructor !== 'function') {\n        return false;\n    }\n\n    let prototype = constructor.prototype;\n\n    if (!isObjectObject(prototype)) {\n        return false;\n    }\n\n    if (!prototype.hasOwnProperty('isPrototypeOf')) {\n        return false;\n    }\n\n    return true;\n}\n\nexport function replaceObject<T : Object | Array<mixed>> (item : T, replacer : (mixed, string | number, string) => mixed, fullKey : string = '') : T {\n\n    if (Array.isArray(item)) {\n        let length = item.length;\n        let result = [];\n\n        for (let i = 0; i < length; i++) {\n\n            \n            defineLazyProp(result, i, () => {\n                let itemKey = fullKey ? `${ fullKey }.${ i }` : `${ i }`;\n                let el = item[i];\n\n                let child = replacer(el, i, itemKey);\n\n                if (isPlainObject(child) || Array.isArray(child)) {\n                    // $FlowFixMe\n                    child = replaceObject(child, replacer, itemKey);\n                }\n\n                return child;\n            });\n        }\n\n        // $FlowFixMe\n        return result;\n    } else if (isPlainObject(item)) {\n        let result = {};\n\n        for (let key in item) {\n            if (!item.hasOwnProperty(key)) {\n                continue;\n            }\n\n            defineLazyProp(result, key, () => {\n                let itemKey = fullKey ? `${ fullKey }.${ key }` : `${ key }`;\n                // $FlowFixMe\n                let el = item[key];\n\n                let child = replacer(el, key, itemKey);\n\n                if (isPlainObject(child) || Array.isArray(child)) {\n                    // $FlowFixMe\n                    child = replaceObject(child, replacer, itemKey);\n                }\n\n                return child;\n            });\n        }\n\n        // $FlowFixMe\n        return result;\n    } else {\n        throw new Error(`Pass an object or array`);\n    }\n}\n\n\nexport function copyProp(source : Object, target : Object, name : string, def : mixed) {\n    if (source.hasOwnProperty(name)) {\n        let descriptor = Object.getOwnPropertyDescriptor(source, name);\n        // $FlowFixMe\n        Object.defineProperty(target, name, descriptor);\n\n    } else {\n        target[name] = def;\n    }\n}\n\ntype RegexResultType = {\n    text : string,\n    groups : Array<string>,\n    start : number,\n    end : number,\n    length : number,\n    replace : (text : string) => string\n};\n\nexport function regex(pattern : string | RegExp, string : string, start : number = 0) : ?RegexResultType {\n\n    if (typeof pattern === 'string') {\n        // eslint-disable-next-line security/detect-non-literal-regexp\n        pattern = new RegExp(pattern);\n    }\n\n    let result = string.slice(start).match(pattern);\n\n    if (!result) {\n        return;\n    }\n\n    // $FlowFixMe\n    let index : number = result.index;\n    let regmatch = result[0];\n\n    return {\n        text:   regmatch,\n        groups: result.slice(1),\n        start:  start + index,\n        end:    start + index + regmatch.length,\n        length: regmatch.length,\n\n        replace(text : string) : string {\n\n            if (!regmatch) {\n                return '';\n            }\n\n            return `${ regmatch.slice(0, start + index) }${ text }${ regmatch.slice(index + regmatch.length) }`;\n        }\n    };\n}\n\nexport function regexAll(pattern : string | RegExp, string : string) : Array<RegexResultType> {\n\n    let matches = [];\n    let start = 0;\n\n    // eslint-disable-next-line no-constant-condition\n    while (true) {\n        let regmatch = regex(pattern, string, start);\n\n        if (!regmatch) {\n            break;\n        }\n\n        matches.push(regmatch);\n        start = match.end;\n    }\n\n    return matches;\n}\n\nexport function isDefined(value : ?mixed) : boolean {\n    return value !== null && value !== undefined;\n}\n\nexport function cycle(method : Function) : ZalgoPromise<void> {\n    return ZalgoPromise.try(method).then(() => cycle(method));\n}\n\nexport function debounce<T>(method : (...args : Array<mixed>) => T, time : number = 100) : (...args : Array<mixed>) => void {\n\n    let timeout;\n\n    return function debounceWrapper() {\n        clearTimeout(timeout);\n\n        timeout = setTimeout(() => {\n            return method.apply(this, arguments);\n        }, time);\n    };\n}\n\nexport function isRegex(item : mixed) : boolean {\n    return Object.prototype.toString.call(item) === '[object RegExp]';\n}\n\ntype FunctionProxy<T : Function> = (method : T) => T;\n\n// eslint-disable-next-line flowtype/no-weak-types\nexport let weakMapMemoize : FunctionProxy<*> = <R : mixed>(method : (arg : any) => R) : ((...args : Array<any>) => R) => {\n\n    let weakmap = new WeakMap();\n\n    // eslint-disable-next-line flowtype/no-weak-types\n    return function weakmapMemoized(arg : any) : R {\n        return weakmap.getOrSet(arg, () => method.call(this, arg));\n    };\n};\n\ntype FunctionPromiseProxy<R : mixed, T : (...args : $ReadOnlyArray<mixed>) => ZalgoPromise<R>> = (T) => T;\n\n// eslint-disable-next-line flowtype/no-weak-types\nexport let weakMapMemoizePromise : FunctionPromiseProxy<*, *> = <R : mixed>(method : (arg : any) => ZalgoPromise<R>) : ((...args : Array<any>) => ZalgoPromise<R>) => {\n\n    let weakmap = new WeakMap();\n\n    // eslint-disable-next-line flowtype/no-weak-types\n    return function weakmapMemoizedPromise(arg : any) : ZalgoPromise<R> {\n        return weakmap.getOrSet(arg, () =>\n            method.call(this, arg).finally(() => {\n                weakmap.delete(arg);\n            })\n        );\n    };\n};\n\nexport function getOrSet<O : Object, T : mixed>(obj : O, key : string, getter : () => T) : T {\n    if (obj.hasOwnProperty(key)) {\n        return obj[key];\n    }\n\n    const val = getter();\n    obj[key] = val;\n    return val;\n}\n\nexport type CleanupType = {|\n    set : <T : mixed>(string, T) => T, // eslint-disable-line no-undef\n    register : (Function) => void,\n    all : () => ZalgoPromise<void>\n|};\n\nexport function cleanup(obj : Object) : CleanupType {\n\n    const tasks = [];\n    let cleaned = false;\n\n    return {\n        set<T : mixed>(name : string, item : T) : T {\n            if (!cleaned) {\n                obj[name] = item;\n                this.register(() => {\n                    delete obj[name];\n                });\n            }\n            return item;\n        },\n\n        register(method : Function) {\n            if (cleaned) {\n                method();\n            } else {\n                tasks.push(once(method));\n            }\n        },\n\n        all() : ZalgoPromise<void> {\n            const results = [];\n            cleaned = true;\n\n            while (tasks.length) {\n                const task = tasks.pop();\n                results.push(task());\n            }\n\n            return ZalgoPromise.all(results).then(noop);\n        }\n    };\n}\n\nexport function tryCatch<T>(fn : () => T) : {| result : T, error : void |} | {| result : void, error : mixed |} {\n    let result;\n    let error;\n\n    try {\n        result = fn();\n    } catch (err) {\n        error = err;\n    }\n    \n    // $FlowFixMe\n    return { result, error };\n}\n\nexport function removeFromArray<X, T : Array<X>>(arr : T, item : X) {\n    const index = arr.indexOf(item);\n    if (index !== -1) {\n        arr.splice(index, 1);\n    }\n}\n\nexport function assertExists<T>(name : string, thing : void | null | T) : T {\n    if (thing === null || typeof thing === 'undefined') {\n        throw new Error(`Expected ${ name } to be present`);\n    }\n\n    return thing;\n}\n","/* @flow */\n/* eslint max-lines: off */\n\nimport { ZalgoPromise } from 'zalgo-promise/src';\nimport { linkFrameWindow, isWindowClosed,\n    type SameDomainWindowType, type CrossDomainWindowType } from 'cross-domain-utils/src';\nimport { WeakMap } from 'cross-domain-safe-weakmap/src';\n\nimport { inlineMemoize, noop, stringify, capitalizeFirstLetter,\n    once, extend, safeInterval } from './util';\nimport { isDevice } from './device';\nimport { KEY_CODES } from './constants';\nimport type { CancelableType } from './types';\n\ntype ElementRefType = string | HTMLElement;\n\nexport function isDocumentReady() : boolean {\n    return Boolean(document.body) && document.readyState === 'complete';\n}\n\nexport function urlEncode(str : string) : string {\n    return str.replace(/\\?/g, '%3F').replace(/&/g, '%26').replace(/#/g, '%23').replace(/\\+/g, '%2B');\n}\n\nexport function waitForWindowReady() : ZalgoPromise<void> {\n    return inlineMemoize(waitForWindowReady, () : ZalgoPromise<void> => {\n        return new ZalgoPromise(resolve => {\n            if (isDocumentReady()) {\n                resolve();\n            }\n\n            window.addEventListener('load', () => resolve());\n        });\n    });\n}\n\nexport function waitForDocumentReady() : ZalgoPromise<void> {\n    return inlineMemoize(waitForDocumentReady, () : ZalgoPromise<void> => {\n        return new ZalgoPromise(resolve => {\n\n            if (isDocumentReady()) {\n                return resolve();\n            }\n\n            let interval = setInterval(() => {\n                if (isDocumentReady()) {\n                    clearInterval(interval);\n                    return resolve();\n                }\n            }, 10);\n        });\n    });\n}\n\nexport function waitForDocumentBody() : ZalgoPromise<HTMLBodyElement> {\n    return waitForDocumentReady().then(() => {\n        if (document.body) {\n            return document.body;\n        }\n\n        throw new Error('Document ready but document.body not present');\n    });\n}\n\nexport function parseQuery(queryString : string) : Object {\n    return inlineMemoize(parseQuery, () : Object => {\n        let params = {};\n\n        if (!queryString) {\n            return params;\n        }\n\n        if (queryString.indexOf('=') === -1) {\n            return params;\n        }\n\n        for (let pair of queryString.split('&')) {\n            pair = pair.split('=');\n\n            if (pair[0] && pair[1]) {\n                params[decodeURIComponent(pair[0])] = decodeURIComponent(pair[1]);\n            }\n        }\n\n        return params;\n    }, [ queryString ]);\n}\n\n\nexport function getQueryParam(name : string) : string {\n    return parseQuery(window.location.search.slice(1))[name];\n}\n\nexport function urlWillRedirectPage(url : string) : boolean {\n\n    if (url.indexOf('#') === -1) {\n        return true;\n    }\n\n    if (url.indexOf('#') === 0) {\n        return false;\n    }\n\n    if (url.split('#')[0] === window.location.href.split('#')[0]) {\n        return false;\n    }\n\n    return true;\n}\n\nexport function formatQuery(obj : { [ string ] : string } = {}) : string {\n\n    return Object.keys(obj).filter(key => {\n        return typeof obj[key] === 'string';\n    }).map(key => {\n        return `${ urlEncode(key) }=${ urlEncode(obj[key]) }`;\n    }).join('&');\n}\n\nexport function extendQuery(originalQuery : string, props : { [ string ] : string } = {}) : string {\n\n    if (!props || !Object.keys(props).length) {\n        return originalQuery;\n    }\n\n    return formatQuery({\n        ...parseQuery(originalQuery),\n        ...props\n    });\n}\n\nexport function extendUrl(url : string, options : { query? : { [string] : string }, hash? : { [string] : string } } = {}) : string {\n\n    let query = options.query || {};\n    let hash = options.hash || {};\n\n    let originalUrl;\n    let originalQuery;\n    let originalHash;\n\n    [ originalUrl, originalHash ] = url.split('#');\n    [ originalUrl, originalQuery ] = originalUrl.split('?');\n\n    let queryString = extendQuery(originalQuery, query);\n    let hashString = extendQuery(originalHash, hash);\n\n    if (queryString) {\n        originalUrl = `${ originalUrl }?${ queryString }`;\n    }\n\n    if (hashString) {\n        originalUrl = `${ originalUrl }#${ hashString }`;\n    }\n\n    return originalUrl;\n}\n\nexport function redirect(url : string, win : CrossDomainWindowType = window) : ZalgoPromise<void> {\n    return new ZalgoPromise(resolve => {\n        win.location = url;\n        if (!urlWillRedirectPage(url)) {\n            resolve();\n        }\n    });\n}\n\nexport function hasMetaViewPort() : boolean {\n    let meta = document.querySelector('meta[name=viewport]');\n\n    if (isDevice() && window.screen.width < 660 && !meta) {\n        return false;\n    }\n\n    return true;\n}\n\nexport function isElementVisible(el : HTMLElement) : boolean {\n    return Boolean(el.offsetWidth || el.offsetHeight || el.getClientRects().length);\n}\n\nexport function enablePerformance() : boolean {\n    return inlineMemoize(enablePerformance, () : boolean => {\n        /* eslint-disable compat/compat */\n        return Boolean(\n            window.performance &&\n            performance.now &&\n            performance.timing &&\n            performance.timing.connectEnd &&\n            performance.timing.navigationStart &&\n            (Math.abs(performance.now() - Date.now()) > 1000) &&\n            (performance.now() - (performance.timing.connectEnd - performance.timing.navigationStart)) > 0\n        );\n        /* eslint-enable compat/compat */\n    });\n}\n\nexport function getPageRenderTime() : ZalgoPromise<?number> {\n    return waitForDocumentReady().then(() => {\n\n        if (!enablePerformance()) {\n            return;\n        }\n\n        let timing = window.performance.timing;\n\n        if (timing.connectEnd && timing.domInteractive) {\n            return timing.domInteractive - timing.connectEnd;\n        }\n    });\n}\n\nexport function htmlEncode(html : string = '') : string {\n    return html.toString()\n        .replace(/&/g, '&amp;')\n        .replace(/</g, '&lt;')\n        .replace(/>/g, '&gt;')\n        .replace(/\"/g, '&quot;')\n        .replace(/'/g, '&#39;')\n        .replace(/\\//g, '&#x2F;');\n}\n\nexport function isBrowser() : boolean {\n    return (typeof window !== 'undefined');\n}\n\nexport function querySelectorAll(selector : string, doc : HTMLElement = window.document) : Array<Element> {\n    return Array.prototype.slice.call(doc.querySelectorAll(selector));\n}\n\nexport function onClick(element : Element, handler : (Event) => void) {\n    element.addEventListener('touchstart', noop);\n    element.addEventListener('click', handler);\n    element.addEventListener('keypress', (event : Event) => {\n        // $FlowFixMe\n        if (event.keyCode === KEY_CODES.ENTER) {\n            return handler(event);\n        }\n    });\n}\n\nexport function getScript({ host = window.location.host, path } : { host? : string, path : string }) : ?HTMLScriptElement {\n    return inlineMemoize(getScript, () : ?HTMLScriptElement => {\n\n        let url = `${ host }${ path }`;\n        let scripts = Array.prototype.slice.call(document.getElementsByTagName('script'));\n\n        for (let script of scripts) {\n            if (!script.src) {\n                continue;\n            }\n\n            let src = script.src.replace(/^https?:\\/\\//, '').split('?')[0];\n\n            if (src === url) {\n                return script;\n            }\n        }\n    }, [ path ]);\n}\n\nexport function isLocalStorageEnabled() : boolean {\n    return inlineMemoize(isLocalStorageEnabled, () => {\n        try {\n            if (typeof window === 'undefined') {\n                return false;\n            }\n\n            if (window.localStorage) {\n                let value = Math.random().toString();\n                window.localStorage.setItem('__test__localStorage__', value);\n                let result = window.localStorage.getItem('__test__localStorage__');\n                window.localStorage.removeItem('__test__localStorage__');\n                if (value === result) {\n                    return true;\n                }\n            }\n        } catch (err) {\n            // pass\n        }\n        return false;\n    });\n}\n\nexport function getBrowserLocales() : Array<{ country? : string, lang : string }> {\n    let nav = window.navigator;\n\n    let locales = nav.languages\n        ? Array.prototype.slice.apply(nav.languages)\n        : [];\n\n    if (nav.language) {\n        locales.push(nav.language);\n    }\n\n    if (nav.userLanguage) {\n        locales.push(nav.userLanguage);\n    }\n\n    return locales.map(locale => {\n\n        if (locale && locale.match(/^[a-z]{2}[-_][A-Z]{2}$/)) {\n            let [ lang, country ] = locale.split(/[-_]/);\n            return { country, lang };\n        }\n\n        if (locale && locale.match(/^[a-z]{2}$/)) {\n            return { lang: locale };\n        }\n\n        return null;\n\n    }).filter(Boolean);\n}\n\n\nexport function appendChild(container : HTMLElement, child : HTMLElement | Text) {\n    container.appendChild(child);\n}\n\nexport function isElement(element : mixed) : boolean {\n\n    if (element instanceof window.Element) {\n        return true;\n    }\n\n    if (element !== null && typeof element === 'object' && element.nodeType === 1 && typeof element.style === 'object' && typeof element.ownerDocument === 'object') {\n        return true;\n    }\n\n    return false;\n}\n\nexport function getElementSafe(id : ElementRefType, doc : Document | HTMLElement = document) : ?HTMLElement {\n\n    if (isElement(id)) {\n        // $FlowFixMe\n        return id;\n    }\n\n    if (typeof id === 'string') {\n        return doc.querySelector(id);\n    }\n}\n\nexport function getElement(id : ElementRefType, doc : Document | HTMLElement = document) : HTMLElement {\n\n    let element = getElementSafe(id, doc);\n\n    if (element) {\n        return element;\n    }\n\n    throw new Error(`Can not find element: ${ stringify(id) }`);\n}\n\nexport function elementReady(id : ElementRefType) : ZalgoPromise<window.HTMLElement> {\n    return new ZalgoPromise((resolve, reject) => {\n\n        let name = stringify(id);\n        let el = getElementSafe(id);\n\n        if (el) {\n            return resolve(el);\n        }\n\n        if (isDocumentReady()) {\n            return reject(new Error(`Document is ready and element ${ name } does not exist`));\n        }\n\n        let interval = setInterval(() => {\n\n            el = getElementSafe(id);\n\n            if (el) {\n                clearInterval(interval);\n                return resolve(el);\n            }\n\n            if (isDocumentReady()) {\n                clearInterval(interval);\n                return reject(new Error(`Document is ready and element ${ name } does not exist`));\n            }\n        }, 10);\n    });\n}\n\nexport function PopupOpenError(message : string) {\n    this.message = message;\n}\n\nPopupOpenError.prototype = Object.create(Error.prototype);\n\ntype PopupOptions = {|\n    name? : string,\n    width? : number,\n    height? : number,\n    top? : number,\n    left? : number,\n    status? : 0 | 1,\n    resizable? : 0 | 1,\n    toolbar? : 0 | 1,\n    menubar? : 0 | 1,\n    scrollbars? : 0 | 1\n|};\n\nexport function popup(url : string, options? : PopupOptions) : CrossDomainWindowType {\n\n    // $FlowFixMe\n    options = options || {};\n\n    let { width, height } = options;\n\n    let top = 0;\n    let left = 0;\n\n    if (width) {\n        if (window.outerWidth) {\n            left = Math.round((window.outerWidth - width) / 2) + window.screenX;\n        } else if (window.screen.width) {\n            left = Math.round((window.screen.width - width) / 2);\n        }\n    }\n\n    if (height) {\n        if (window.outerHeight) {\n            top = Math.round((window.outerHeight - height) / 2) + window.screenY;\n        } else if (window.screen.height) {\n            top = Math.round((window.screen.height - height) / 2);\n        }\n    }\n\n    options = {\n        top,\n        left,\n        width,\n        height,\n        status:     1,\n        toolbar:    0,\n        menubar:    0,\n        resizable:  1,\n        scrollbars: 1,\n        ...options\n    };\n\n    let name = options.name || '';\n    delete options.name;\n\n    // eslint-disable-next-line array-callback-return\n    let params = Object.keys(options).map(key => {\n        // $FlowFixMe\n        if (options[key]) {\n            return `${ key }=${ stringify(options[key]) }`;\n        }\n    }).filter(Boolean).join(',');\n\n    let win;\n\n    try {\n        win = window.open(url, name, params, true);\n    } catch (err) {\n        throw new PopupOpenError(`Can not open popup window - ${ err.stack || err.message }`);\n    }\n\n    if (isWindowClosed(win)) {\n        let err = new PopupOpenError(`Can not open popup window - blocked`);\n        throw err;\n    }\n\n    window.addEventListener('unload', () => win.close());\n\n    return win;\n}\n\n\nexport function writeToWindow(win : SameDomainWindowType, html : string) {\n    try {\n        win.document.open();\n        win.document.write(html);\n        win.document.close();\n    } catch (err) {\n        try {\n            win.location = `javascript: document.open(); document.write(${ JSON.stringify(html) }); document.close();`;\n        } catch (err2) {\n            // pass\n        }\n    }\n}\n\nexport function writeElementToWindow(win : SameDomainWindowType, el : HTMLElement) {\n\n    let tag = el.tagName.toLowerCase();\n\n    if (tag !== 'html') {\n        throw new Error(`Expected element to be html, got ${ tag }`);\n    }\n\n    let documentElement = win.document.documentElement;\n\n    while (documentElement.children && documentElement.children.length) {\n        documentElement.removeChild(documentElement.children[0]);\n    }\n\n    while (el.children.length) {\n        documentElement.appendChild(el.children[0]);\n    }\n}\n\nexport function setStyle(el : HTMLElement, styleText : string, doc : Document = window.document) {\n    // $FlowFixMe\n    if (el.styleSheet) {\n        // $FlowFixMe\n        el.styleSheet.cssText = styleText;\n    } else {\n        el.appendChild(doc.createTextNode(styleText));\n    }\n}\n\nexport type ElementOptionsType = {\n    style? : { [ string ] : string },\n    id? : string,\n    class? : ?Array<string>,\n    attributes? : { [ string ] : string },\n    styleSheet? : ?string,\n    html? : ?string\n};\n\nlet awaitFrameLoadPromises : WeakMap<HTMLIFrameElement, ZalgoPromise<HTMLIFrameElement>>;\n\nexport function awaitFrameLoad(frame : HTMLIFrameElement) : ZalgoPromise<HTMLIFrameElement> {\n    awaitFrameLoadPromises = awaitFrameLoadPromises || new WeakMap();\n\n    if (awaitFrameLoadPromises.has(frame)) {\n        let promise = awaitFrameLoadPromises.get(frame);\n        if (promise) {\n            return promise;\n        }\n    }\n\n    let promise = new ZalgoPromise((resolve, reject) => {\n        frame.addEventListener('load', () => {\n            linkFrameWindow(frame);\n            resolve(frame);\n        });\n\n        frame.addEventListener('error', (err : Event) => {\n            if (frame.contentWindow) {\n                resolve(frame);\n            } else {\n                reject(err);\n            }\n        });\n    });\n\n    awaitFrameLoadPromises.set(frame, promise);\n\n    return promise;\n}\n\nexport function awaitFrameWindow(frame : HTMLIFrameElement) : ZalgoPromise<CrossDomainWindowType> {\n\n    if (frame.contentWindow) {\n        return ZalgoPromise.resolve(frame.contentWindow);\n    }\n\n    return awaitFrameLoad(frame).then(loadedFrame => {\n\n        if (!loadedFrame.contentWindow) {\n            throw new Error(`Could not find window in iframe`);\n        }\n\n        return loadedFrame.contentWindow;\n    });\n}\n\nexport function createElement(tag : string = 'div', options : ElementOptionsType = {}, container : ?HTMLElement) : HTMLElement {\n\n    tag = tag.toLowerCase();\n    let element = document.createElement(tag);\n\n    if (options.style) {\n        extend(element.style, options.style);\n    }\n\n    if (options.class) {\n        element.className = options.class.join(' ');\n    }\n\n    if (options.id) {\n        element.setAttribute('id', options.id);\n    }\n\n    if (options.attributes) {\n        for (let key of Object.keys(options.attributes)) {\n            element.setAttribute(key, options.attributes[key]);\n        }\n    }\n\n    if (options.styleSheet) {\n        setStyle(element, options.styleSheet);\n    }\n\n    if (container) {\n        appendChild(container, element);\n    }\n\n    if (options.html) {\n        if (tag === 'iframe') {\n            // $FlowFixMe\n            if (!container || !element.contentWindow) {\n                throw new Error(`Iframe html can not be written unless container provided and iframe in DOM`);\n            }\n\n            // $FlowFixMe\n            writeToWindow(element.contentWindow, options.html);\n\n        } else {\n            element.innerHTML = options.html;\n        }\n    }\n\n    return element;\n}\n\n\nexport type IframeElementOptionsType = {\n    style? : { [ string ] : string },\n    class? : ?Array<string>,\n    attributes? : { [ string ] : string },\n    styleSheet? : ?string,\n    html? : ?string,\n    url? : ?string\n};\n\nexport function iframe(options : IframeElementOptionsType = {}, container : ?HTMLElement, attempts : number = 3) : HTMLIFrameElement {\n\n    let attributes = options.attributes || {};\n    let style = options.style || {};\n\n    let frame = createElement('iframe', {\n        attributes: {\n            frameBorder:       '0',\n            allowTransparency: 'true',\n            ...attributes\n        },\n        style: {\n            backgroundColor: 'transparent',\n            ...style\n        },\n        html:  options.html,\n        class: options.class\n    });\n\n    // $FlowFixMe\n    awaitFrameLoad(frame);\n\n    if (container) {\n        let el = getElement(container);\n        el.appendChild(frame);\n    \n        // $FlowFixMe\n        let win = frame.contentWindow;\n    \n        if (win) {\n            try {\n                // $FlowFixMe\n                noop(win.name);\n            } catch (err) {\n                el.removeChild(frame);\n    \n                if (!attempts) {\n                    throw new Error(`Frame is cross-domain: ${ err.stack }`);\n                }\n    \n                return iframe(options, container, attempts - 1);\n            }\n        }\n    }\n\n    if (options.url || window.navigator.userAgent.match(/MSIE|Edge/i)) {\n        frame.setAttribute('src', options.url || 'about:blank');\n    }\n\n    // $FlowFixMe\n    return frame;\n}\n\nexport function addEventListener(obj : HTMLElement, event : string, handler : (event : Event) => void) : CancelableType {\n    obj.addEventListener(event, handler);\n    return {\n        cancel() {\n            obj.removeEventListener(event, handler);\n        }\n    };\n}\n\nexport function bindEvents(element : HTMLElement, eventNames : Array<string>, handler : (event : Event) => void) : CancelableType {\n\n    handler = once(handler);\n\n    for (let eventName of eventNames) {\n        element.addEventListener(eventName, handler);\n    }\n\n    return {\n        cancel: once(() => {\n            for (let eventName of eventNames) {\n                element.removeEventListener(eventName, handler);\n            }\n        })\n    };\n}\n\nconst VENDOR_PREFIXES = [ 'webkit', 'moz', 'ms', 'o' ];\n\nexport function setVendorCSS(element : HTMLElement, name : string, value : string) {\n\n    // $FlowFixMe\n    element.style[name] = value;\n\n    let capitalizedName = capitalizeFirstLetter(name);\n\n    for (let prefix of VENDOR_PREFIXES) {\n        // $FlowFixMe\n        element.style[`${ prefix }${ capitalizedName }`] = value;\n    }\n}\n\nconst ANIMATION_START_EVENTS = [ 'animationstart', 'webkitAnimationStart', 'oAnimationStart', 'MSAnimationStart' ];\nconst ANIMATION_END_EVENTS   = [ 'animationend', 'webkitAnimationEnd', 'oAnimationEnd', 'MSAnimationEnd' ];\n\nexport function animate(element : ElementRefType, name : string, clean : (Function) => void, timeout : number = 1000) : ZalgoPromise<void> {\n    return new ZalgoPromise((resolve, reject) => {\n\n        let el = getElement(element);\n\n        if (!el) {\n            return resolve();\n        }\n\n        let hasStarted = false;\n\n        let startTimeout;\n        let endTimeout;\n        let startEvent;\n        let endEvent;\n\n        function cleanUp() {\n            clearTimeout(startTimeout);\n            clearTimeout(endTimeout);\n            startEvent.cancel();\n            endEvent.cancel();\n        }\n\n        startEvent = bindEvents(el, ANIMATION_START_EVENTS, event => {\n\n            // $FlowFixMe\n            if (event.target !== el || event.animationName !== name) {\n                return;\n            }\n\n            clearTimeout(startTimeout);\n\n            event.stopPropagation();\n\n            startEvent.cancel();\n            hasStarted = true;\n\n            endTimeout = setTimeout(() => {\n                cleanUp();\n                resolve();\n            }, timeout);\n        });\n\n        endEvent = bindEvents(el, ANIMATION_END_EVENTS, event => {\n\n            // $FlowFixMe\n            if (event.target !== el || event.animationName !== name) {\n                return;\n            }\n\n            cleanUp();\n\n            // $FlowFixMe\n            if (typeof event.animationName === 'string' && event.animationName !== name) {\n                return reject(`Expected animation name to be ${ name }, found ${ event.animationName }`);\n            }\n\n            return resolve();\n        });\n\n        setVendorCSS(el, 'animationName', name);\n\n        startTimeout = setTimeout(() => {\n            if (!hasStarted) {\n                cleanUp();\n                return resolve();\n            }\n        }, 200);\n\n        if (clean) {\n            clean(cleanUp);\n        }\n    });\n}\n\nconst STYLE = {\n\n    DISPLAY: {\n        NONE:  'none',\n        BLOCK: 'block'\n    },\n\n    VISIBILITY: {\n        VISIBLE: 'visible',\n        HIDDEN:  'hidden'\n    },\n\n    IMPORTANT: 'important'\n};\n\nexport function makeElementVisible(element : HTMLElement) {\n    element.style.setProperty('visibility', '');\n}\n\nexport function makeElementInvisible(element : HTMLElement) {\n    element.style.setProperty('visibility', STYLE.VISIBILITY.HIDDEN, STYLE.IMPORTANT);\n}\n\n\nexport function showElement(element : HTMLElement) {\n    element.style.setProperty('display', '');\n}\n\nexport function hideElement(element : HTMLElement) {\n    element.style.setProperty('display', STYLE.DISPLAY.NONE, STYLE.IMPORTANT);\n}\n\nexport function destroyElement(element : HTMLElement) {\n    if (element && element.parentNode) {\n        element.parentNode.removeChild(element);\n    }\n}\n\nexport function showAndAnimate(element : HTMLElement, name : string, clean : (Function) => void) : ZalgoPromise<void> {\n    let animation = animate(element, name, clean);\n    showElement(element);\n    return animation;\n}\n\nexport function animateAndHide(element : HTMLElement, name : string, clean : (Function) => void) : ZalgoPromise<void> {\n    return animate(element, name, clean).then(() => {\n        hideElement(element);\n    });\n}\n\nexport function addClass(element : HTMLElement, name : string) {\n    element.classList.add(name);\n}\n\nexport function removeClass(element : HTMLElement, name : string) {\n    element.classList.remove(name);\n}\n\nexport function isElementClosed(el : HTMLElement) : boolean {\n    if (!el || !el.parentNode) {\n        return true;\n    }\n    return false;\n}\n\nexport function watchElementForClose(element : HTMLElement, handler : () => mixed) : CancelableType {\n    handler = once(handler);\n\n    let interval;\n\n    if (isElementClosed(element)) {\n        handler();\n    } else {\n        interval = safeInterval(() => {\n            if (isElementClosed(element)) {\n                interval.cancel();\n                handler();\n            }\n        }, 50);\n    }\n\n    return {\n        cancel() {\n            if (interval) {\n                interval.cancel();\n            }\n        }\n    };\n}\n\nexport function fixScripts(el : HTMLElement, doc : Document = window.document) {\n    for (let script of querySelectorAll('script', el)) {\n        let parentNode = script.parentNode;\n\n        if (!parentNode) {\n            continue;\n        }\n\n        let newScript = doc.createElement('script');\n        newScript.text = script.textContent;\n        parentNode.replaceChild(newScript, script);\n    }\n}\n\ntype OnResizeOptions = {|\n    width? : boolean,\n    height? : boolean,\n    interval? : number,\n    win? : SameDomainWindowType\n|};\n\nexport function onResize(el : HTMLElement, handler : ({ width : number, height : number }) => void, { width = true, height = true, interval = 100, win = window } : OnResizeOptions = {}) : {} {\n    let currentWidth = el.offsetWidth;\n    let currentHeight = el.offsetHeight;\n\n    handler({ width: currentWidth, height: currentHeight });\n\n    let check = () => {\n        let newWidth = el.offsetWidth;\n        let newHeight = el.offsetHeight;\n\n        if ((width && newWidth !== currentWidth) || (height && newHeight !== currentHeight)) {\n            handler({ width: newWidth, height: newHeight });\n        }\n\n        currentWidth = newWidth;\n        currentHeight = newHeight;\n    };\n\n    let observer;\n    let timeout;\n\n    if (typeof win.ResizeObserver !== 'undefined') {\n        observer = new win.ResizeObserver(check);\n        observer.observe(el);\n\n    } else if (typeof win.MutationObserver !== 'undefined') {\n        observer = new win.MutationObserver(check);\n        observer.observe(el, {\n            attributes:    true,\n            childList:     true,\n            subtree:       true,\n            characterData: false\n        });\n        win.addEventListener('resize', check);\n    } else {\n        let loop = () => {\n            check();\n            timeout = setTimeout(loop, interval);\n        };\n        loop();\n    }\n\n    return {\n        cancel: () => {\n            observer.disconnect();\n            window.removeEventListener('resize', check);\n            clearTimeout(timeout);\n        }\n    };\n}\n","/* @flow */\n\nexport function hasNativeWeakMap() : boolean {\n\n    if (typeof WeakMap === 'undefined') {\n        return false;\n    }\n\n    if (typeof Object.freeze === 'undefined') {\n        return false;\n    }\n\n    try {\n\n        let testWeakMap = new WeakMap();\n        let testKey = {};\n        let testValue = '__testvalue__';\n\n        Object.freeze(testKey);\n\n        testWeakMap.set(testKey, testValue);\n\n        if (testWeakMap.get(testKey) === testValue) {\n            return true;\n        }\n\n        return false;\n\n    } catch (err) {\n\n        return false;\n    }\n}\n","/* @flow */\n\nexport function isPerc(str : string) : boolean {\n    return typeof str === 'string' && (/^[0-9]+%$/).test(str);\n}\n\nexport function isPx(str : string) : boolean {\n    return typeof str === 'string' && (/^[0-9]+px$/).test(str);\n}\n\nexport function toNum(val : string | number) : number {\n\n    if (typeof val === 'number') {\n        return val;\n    }\n\n    let match = val.match(/^([0-9]+)(px|%)$/);\n\n    if (!match) {\n        throw new Error(`Could not match css value from ${ val }`);\n    }\n\n    return parseInt(match[1], 10);\n}\n\nexport function toPx(val : number | string) : string {\n    return `${ toNum(val) }px`;\n}\n\nexport function toCSS(val : number | string) : string {\n\n    if (typeof val === 'number') {\n        return toPx(val);\n    }\n\n    return isPerc(val) ? val : toPx(val);\n}\n\nexport function percOf(num : number, perc : string) : number {\n    return parseInt(num * toNum(perc)  / 100, 10);\n}\n\nexport function normalizeDimension(dim : string | number, max : number) : number {\n    if (typeof dim === 'number') {\n        return dim;\n    } else if (isPerc(dim)) {\n        return percOf(max, dim);\n    } else if (isPx(dim)) {\n        return toNum(dim);\n    } else {\n        throw new Error(`Can not normalize dimension: ${ dim }`);\n    }\n}\n","/* @flow */\n\nexport const BRIDGE_TIMEOUT = 5000;\nexport const CHILD_WINDOW_TIMEOUT = 5000;\n\nexport const ACK_TIMEOUT = 2000;\nexport const ACK_TIMEOUT_KNOWN = 10000;\nexport const RES_TIMEOUT = __TEST__ ? 2000 : -1;\n","/* @flow */\n\nexport const MESSAGE_TYPE = {\n    REQUEST:  ('postrobot_message_request' : 'postrobot_message_request'),\n    RESPONSE: ('postrobot_message_response' : 'postrobot_message_response'),\n    ACK:      ('postrobot_message_ack' : 'postrobot_message_ack')\n};\n\nexport const MESSAGE_ACK = {\n    SUCCESS: ('success' : 'success'),\n    ERROR:   ('error' : 'error')\n};\n\nexport const MESSAGE_NAME = {\n    METHOD:      ('postrobot_method' : 'postrobot_method'),\n    HELLO:       ('postrobot_hello' : 'postrobot_hello'),\n    OPEN_TUNNEL: ('postrobot_open_tunnel' : 'postrobot_open_tunnel')\n};\n\nexport const SEND_STRATEGY = {\n    POST_MESSAGE: ('postrobot_post_message' : 'postrobot_post_message'),\n    BRIDGE:       ('postrobot_bridge' : 'postrobot_bridge'),\n    GLOBAL:       ('postrobot_global' : 'postrobot_global')\n};\n\nexport const BRIDGE_NAME_PREFIX = '__postrobot_bridge__';\nexport const POSTROBOT_PROXY =    '__postrobot_proxy__';\n\nexport const WILDCARD = '*';\n\nexport const SERIALIZATION_TYPE = {\n    CROSS_DOMAIN_ZALGO_PROMISE: ('cross_domain_zalgo_promise' : 'cross_domain_zalgo_promise'),\n    CROSS_DOMAIN_FUNCTION:      ('cross_domain_function' : 'cross_domain_function'),\n    CROSS_DOMAIN_WINDOW:        ('cross_domain_window' : 'cross_domain_window')\n};\n","/* @flow */\n\nimport { type CrossDomainWindowType, type SameDomainWindowType } from 'cross-domain-utils/src';\nimport { WeakMap } from 'cross-domain-safe-weakmap/src';\nimport { getOrSet } from 'belter/src';\n\nexport function getGlobal(win : SameDomainWindowType = window) : Object {\n    if (win !== window) {\n        return win[__POST_ROBOT__.__GLOBAL_KEY__];\n    }\n    const global : Object = win[__POST_ROBOT__.__GLOBAL_KEY__] = win[__POST_ROBOT__.__GLOBAL_KEY__] || {};\n    return global;\n}\n\ntype ObjectGetter = () => Object;\nconst getObj : ObjectGetter = () => ({});\n\ntype GetOrSet<T> = ((string, () => T) => T) & ((string, () => void) => void);\n\ntype GlobalStore<T> = {|\n    get : ((string, T) => T) & ((string, void) => T | void),\n    set : (string, T) => T,\n    has : (string) => boolean,\n    del : (string) => void,\n    getOrSet : GetOrSet<T>,\n    reset : () => void,\n    keys : () => $ReadOnlyArray<string>\n|};\n\n// $FlowFixMe\nexport function globalStore<T : mixed>(key? : string = 'store', defStore? : ObjectGetter = getObj) : GlobalStore<T> {\n    return getOrSet(getGlobal(), key, () => {\n        let store = defStore();\n\n        return {\n            has: (storeKey) => {\n                return store.hasOwnProperty(storeKey);\n            },\n            get: (storeKey, defVal) => {\n                // $FlowFixMe\n                return store.hasOwnProperty(storeKey) ? store[storeKey] : defVal;\n            },\n            set: (storeKey, val) => {\n                store[storeKey] = val;\n                return val;\n            },\n            del: (storeKey) => {\n                delete store[storeKey];\n            },\n            getOrSet: (storeKey, getter) => {\n                // $FlowFixMe\n                return getOrSet(store, storeKey, getter);\n            },\n            reset: () => {\n                store = defStore();\n            },\n            keys: () => {\n                return Object.keys(store);\n            }\n        };\n    });\n}\n\nexport class WildCard {}\n\nexport function getWildcard() : WildCard {\n    const global = getGlobal();\n    global.WINDOW_WILDCARD = global.WINDOW_WILDCARD || new WildCard();\n    return global.WINDOW_WILDCARD;\n}\n\ntype WindowStore<T> = {|\n    get : ((CrossDomainWindowType | WildCard, T) => T) & ((CrossDomainWindowType | WildCard, void) => T | void),\n    set : (CrossDomainWindowType | WildCard, T) => T,\n    has : (CrossDomainWindowType | WildCard) => boolean,\n    del : (CrossDomainWindowType | WildCard) => void,\n    getOrSet : (CrossDomainWindowType | WildCard, () => T) => T\n|};\n\n// $FlowFixMe\nexport function windowStore<T>(key? : string = 'store', defStore? : ObjectGetter = getObj) : WindowStore<T> {\n    return globalStore('windowStore').getOrSet(key, () => {\n        const winStore = new WeakMap();\n\n        const getStore = (win : CrossDomainWindowType | WildCard) : ObjectGetter => {\n            return winStore.getOrSet(win, defStore);\n        };\n    \n        return {\n            has: (win) => {\n                const store = getStore(win);\n                return store.hasOwnProperty(key);\n            },\n            get: (win, defVal) => {\n                const store = getStore(win);\n                // $FlowFixMe\n                return store.hasOwnProperty(key) ? store[key] : defVal;\n            },\n            set: (win, val) => {\n                const store = getStore(win);\n                store[key] = val;\n                return val;\n            },\n            del: (win) => {\n                const store = getStore(win);\n                delete store[key];\n            },\n            getOrSet: (win, getter) => {\n                const store = getStore(win);\n                return getOrSet(store, key, getter);\n            }\n        };\n    });\n}\n","/* @flow */\n\nimport { getAncestor, type CrossDomainWindowType } from 'cross-domain-utils/src';\nimport { ZalgoPromise } from 'zalgo-promise/src';\nimport { noop, uniqueID } from 'belter/src';\n\nimport { MESSAGE_NAME, WILDCARD } from '../conf';\nimport { windowStore, globalStore } from '../global';\nimport type { OnType, SendType, CancelableType } from '../types';\n\nfunction getInstanceID() : string {\n    return globalStore('instance').getOrSet('instanceID', uniqueID);\n}\n\nfunction getHelloPromise(win : CrossDomainWindowType) : ZalgoPromise<{ win : CrossDomainWindowType, domain : string }> {\n    const helloPromises = windowStore('helloPromises');\n    return helloPromises.getOrSet(win, () => new ZalgoPromise());\n}\n\nfunction listenForHello({ on } : { on : OnType }) : CancelableType {\n    return on(MESSAGE_NAME.HELLO, { domain: WILDCARD }, ({ source, origin }) => {\n        getHelloPromise(source).resolve({ win: source, domain: origin });\n        return { instanceID: getInstanceID() };\n    });\n}\n\nexport function sayHello(win : CrossDomainWindowType, { send } : { send : SendType }) : ZalgoPromise<{ win : CrossDomainWindowType, domain : string, instanceID : string }> {\n    return send(win, MESSAGE_NAME.HELLO, { instanceID: getInstanceID() }, { domain: WILDCARD, timeout: -1 })\n        .then(({ origin, data: { instanceID } }) => {\n            getHelloPromise(win).resolve({ win, domain: origin });\n            return { win, domain: origin, instanceID };\n        });\n}\n\nexport function getWindowInstanceID(win : CrossDomainWindowType, { send } : { send : SendType }) : ZalgoPromise<string> {\n    return windowStore('windowInstanceIDPromises').getOrSet(win, () => {\n        return sayHello(win, { send }).then(({ instanceID }) => instanceID);\n    });\n}\n\nexport function initHello({ on, send } : { on : OnType, send : SendType }) : CancelableType {\n    return globalStore('builtinListeners').getOrSet('helloListener', () => {\n        const listener = listenForHello({ on });\n\n        const parent = getAncestor();\n        if (parent) {\n            sayHello(parent, { send }).catch(noop);\n        }\n\n        return listener;\n    });\n}\n\nexport function awaitWindowHello(win : CrossDomainWindowType, timeout : number = 5000, name : string = 'Window') : ZalgoPromise<{ win : CrossDomainWindowType, domain : string }> {\n    let promise = getHelloPromise(win);\n\n    if (timeout !== -1) {\n        promise = promise.timeout(timeout, new Error(`${ name } did not load after ${ timeout }ms`));\n    }\n\n    return promise;\n}\n","/* @flow */\n\nimport { type CrossDomainWindowType } from 'cross-domain-utils/src';\n\nimport { windowStore } from '../global';\n\nexport function markWindowKnown(win : CrossDomainWindowType) {\n    const knownWindows = windowStore('knownWindows');\n    knownWindows.set(win, true);\n}\n\nexport function isWindowKnown(win : CrossDomainWindowType) : boolean {\n    const knownWindows = windowStore('knownWindows');\n    return knownWindows.get(win, false);\n}\n","/* @flow */\n\nexport const TYPE = {\n    FUNCTION:  ('function' : 'function'),\n    ERROR:     ('error' : 'error'),\n    PROMISE:   ('promise' : 'promise'),\n    REGEX:     ('regex' : 'regex'),\n    DATE:      ('date' : 'date'),\n    ARRAY:     ('array' : 'array'),\n    OBJECT:    ('object' : 'object'),\n    STRING:    ('string' : 'string'),\n    NUMBER:    ('number' : 'number'),\n    BOOLEAN:   ('boolean' : 'boolean'),\n    NULL:      ('null' : 'null'),\n    UNDEFINED: ('undefined' : 'undefined')\n};\n","/* @flow */\n\nimport { TYPE } from './constants';\nimport type { CustomSerializedType } from './types';\n\nexport function isSerializedType(item : mixed) : boolean {\n    return (typeof item === 'object' && item !== null && typeof item.__type__ === 'string');\n}\n\nexport function determineType(val : mixed) : $Values<typeof TYPE> | void {\n    if (typeof val === 'undefined') {\n        return TYPE.UNDEFINED;\n    }\n\n    if (val === null) {\n        return TYPE.NULL;\n    }\n\n    if (Array.isArray(val)) {\n        return TYPE.ARRAY;\n    }\n\n    if (typeof val === 'function') {\n        return TYPE.FUNCTION;\n    }\n\n    if (typeof val === 'object') {\n\n        if (val instanceof Error) {\n            return TYPE.ERROR;\n        }\n\n        if (typeof val.then === 'function') {\n            return TYPE.PROMISE;\n        }\n\n        if (Object.prototype.toString.call(val) === '[object RegExp]') {\n            return TYPE.REGEX;\n        }\n\n        if (Object.prototype.toString.call(val) === '[object Date]') {\n            return TYPE.DATE;\n        }\n\n        return TYPE.OBJECT;\n    }\n\n    if (typeof val === 'string') {\n        return TYPE.STRING;\n    }\n\n    if (typeof val === 'number') {\n        return TYPE.NUMBER;\n    }\n\n    if (typeof val === 'boolean') {\n        return TYPE.BOOLEAN;\n    }\n}\n\nexport function serializeType<T : string, V : mixed>(type : T, val : V) : CustomSerializedType<T, V> {\n    return {\n        __type__: type,\n        __val__:  val\n    };\n}\n","/* @flow */\n\nimport { TYPE } from './constants';\nimport type { Thenable, CustomSerializedType, NativeSerializedType } from './types';\nimport { determineType, isSerializedType } from './common';\nimport {\n    serializeFunction,\n    serializeError, type SerializedError,\n    serializePromise,\n    serializeRegex, type SerializedRegex,\n    serializeDate, type SerializedDate,\n    serializeArray,\n    serializeObject,\n    serializeString,\n    serializeNumber,\n    serializeBoolean,\n    serializeNull\n} from './serializers';\n\ntype NativeSerializer<V : mixed, S : mixed, T : $Values<typeof TYPE>> = (value : V, key : string) => NativeSerializedType<T, S>;\ntype CustomSerializer<V : mixed, S : mixed, T : string> = (value : V, key : string) => CustomSerializedType<T, S>;\ntype PrimitiveSerializer<V : mixed, S : mixed> = (value : V, key : string) => S;\ntype CustomOrPrimitiveSerializer<V : mixed, T : string> = CustomSerializer<V, *, T> | PrimitiveSerializer<V, *>;\ntype NativeOrCustomOrPrimitiveSerializer<V : mixed, S : mixed, T : string> = NativeSerializer<V, S, T> | CustomOrPrimitiveSerializer<V, T>;\n\ntype Serializers = {|\n    function? : CustomOrPrimitiveSerializer<Function, typeof TYPE.FUNCTION>,\n    error? : NativeOrCustomOrPrimitiveSerializer<Error, SerializedError, typeof TYPE.ERROR>,\n    promise? : CustomOrPrimitiveSerializer<Thenable, typeof TYPE.PROMISE>,\n    regex? : NativeOrCustomOrPrimitiveSerializer<RegExp, SerializedRegex, typeof TYPE.REGEX>,\n    date? : NativeOrCustomOrPrimitiveSerializer<Date, SerializedDate, typeof TYPE.DATE>,\n    array? : CustomOrPrimitiveSerializer<$ReadOnlyArray<mixed>, typeof TYPE.ARRAY>,\n    object? : CustomOrPrimitiveSerializer<Object, typeof TYPE.OBJECT>,\n    string? : CustomOrPrimitiveSerializer<string, typeof TYPE.STRING>,\n    number? : CustomOrPrimitiveSerializer<number, typeof TYPE.NUMBER>,\n    boolean? : CustomOrPrimitiveSerializer<boolean, typeof TYPE.BOOLEAN>,\n    null? : CustomOrPrimitiveSerializer<null, typeof TYPE.NULL>\n|};\n\nconst SERIALIZER : Serializers = {\n    [ TYPE.FUNCTION ]:  serializeFunction,\n    [ TYPE.ERROR ]:     serializeError,\n    [ TYPE.PROMISE ]:   serializePromise,\n    [ TYPE.REGEX ]:     serializeRegex,\n    [ TYPE.DATE ]:      serializeDate,\n    [ TYPE.ARRAY ]:     serializeArray,\n    [ TYPE.OBJECT ]:    serializeObject,\n    [ TYPE.STRING ]:    serializeString,\n    [ TYPE.NUMBER ]:    serializeNumber,\n    [ TYPE.BOOLEAN ]:   serializeBoolean,\n    [ TYPE.NULL ]:      serializeNull\n};\n\n// $FlowFixMe\nconst defaultSerializers : Serializers = {};\n\nexport function serialize<T : mixed>(obj : T, serializers : Serializers = defaultSerializers) : string {\n\n    function replacer(key) : ?mixed {\n        const val = this[key];\n\n        if (isSerializedType(this)) {\n            return val;\n        }\n        \n        const type = determineType(val);\n\n        if (!type) {\n            return val;\n        }\n\n        // $FlowFixMe\n        const serializer = serializers[type] || SERIALIZER[type];\n\n        if (!serializer) {\n            return val;\n        }\n\n        return serializer(val, key);\n    }\n\n    const result = JSON.stringify(obj, replacer);\n\n    if (typeof result === 'undefined') {\n        return TYPE.UNDEFINED;\n    }\n\n    return result;\n}\n","/* @flow */\n\nexport type SerializedFunction = void;\n\nexport function serializeFunction() : SerializedFunction {\n    // pass\n}\n\nexport function deserializeFunction() {\n    throw new Error(`Function serialization is not implemented; nothing to deserialize`);\n}\n","/* @flow */\n\nimport { serializeType } from '../common';\nimport { TYPE } from '../constants';\nimport type { NativeSerializedType } from '../types';\n\nexport type SerializedError = {|\n    message : string,\n    stack : string,\n    code : string | number | void\n|};\n\n// $FlowFixMe\nexport function serializeError({ message, stack, code } : Error) : NativeSerializedType<typeof TYPE.ERROR, SerializedError> {\n    return serializeType(TYPE.ERROR, { message, stack, code });\n}\n\nexport function deserializeError({ message, stack, code } : SerializedError) : Error {\n    const error = new Error(message);\n    // $FlowFixMe\n    error.code = code;\n    error.stack = `${ stack }\\n\\n${ error.stack }`;\n    return error;\n}\n","/* @flow */\n\nexport type SerializedPromise = void;\n\nexport function serializePromise() : SerializedPromise {\n    // pass\n}\n\nexport function deserializePromise() {\n    throw new Error(`Promise serialization is not implemented; nothing to deserialize`);\n}\n","/* @flow */\n\nimport { serializeType } from '../common';\nimport { TYPE } from '../constants';\nimport type { NativeSerializedType } from '../types';\n\nexport type SerializedRegex = string;\n\nexport function serializeRegex(val : RegExp) : NativeSerializedType<typeof TYPE.REGEX, SerializedRegex> {\n    return serializeType(TYPE.REGEX, val.source);\n}\n\nexport function deserializeRegex(val : string) : RegExp {\n    // eslint-disable-next-line security/detect-non-literal-regexp\n    return new RegExp(val);\n}\n","/* @flow */\n\nimport { serializeType } from '../common';\nimport { TYPE } from '../constants';\nimport type { NativeSerializedType } from '../types';\n\nexport type SerializedDate = string;\n\nexport function serializeDate(val : Date) : NativeSerializedType<typeof TYPE.DATE, SerializedDate> {\n    return serializeType(TYPE.DATE, val.toJSON());\n}\n\nexport function deserializeDate(val : string) : Date {\n    return new Date(val);\n}\n","/* @flow */\n\nexport type SerializedArray<T : mixed = mixed> = $ReadOnlyArray<T>;\n\nexport function serializeArray<T : mixed>(val : $ReadOnlyArray<T>) : SerializedArray<T> {\n    return val;\n}\n\nexport function deserializeArray<T : mixed>(val : SerializedArray<T>) : $ReadOnlyArray<T> {\n    return val;\n}\n","/* @flow */\n\nexport type SerializedObject = Object;\n\nexport function serializeObject(val : Object) : SerializedObject {\n    return val;\n}\n\nexport function deserializeObject(val : SerializedObject) : Object {\n    return val;\n}\n","/* @flow */\n\nexport type SerializedString = string;\n\nexport function serializeString(val : string) : SerializedString {\n    return val;\n}\n\nexport function deserializeString(val : SerializedString) : string {\n    return val;\n}\n","/* @flow */\n\nexport type SerializedNumber = number;\n\nexport function serializeNumber(val : number) : SerializedNumber {\n    return val;\n}\n\nexport function deserializeNumber(val : SerializedNumber) : number {\n    return val;\n}\n","/* @flow */\n\nexport type SerializedBoolean = boolean;\n\nexport function serializeBoolean(val : boolean) : SerializedBoolean {\n    return val;\n}\n\nexport function deserializeBoolean(val : SerializedBoolean) : boolean {\n    return val;\n}\n","/* @flow */\n\nexport type SerializedNull = null;\n\nexport function serializeNull(val : null) : SerializedNull {\n    return val;\n}\n\nexport function deserializeNull(val : SerializedNull) : null {\n    return val;\n}\n","/* @flow */\n\nimport type { Thenable } from './types';\nimport { TYPE } from './constants';\nimport { determineType, isSerializedType } from './common';\nimport {\n    deserializeFunction,\n    deserializeError, type SerializedError,\n    deserializePromise,\n    deserializeRegex, type SerializedRegex,\n    deserializeDate, type SerializedDate,\n    deserializeArray,\n    deserializeObject,\n    deserializeString,\n    deserializeNumber,\n    deserializeBoolean,\n    deserializeNull\n} from './serializers';\n\ntype Deserializer<V : mixed, S : mixed> = (serializedValue : S, key : string) => V;\ntype PrimitiveDeserializer<V, S = V> = (serializedValue : S, key : string) => V;\n\ntype Deserializers = {\n    function? : Deserializer<Function, *>,\n    error? : Deserializer<Error, SerializedError>,\n    promise? : Deserializer<Thenable, *>,\n    regex? : Deserializer<RegExp, SerializedRegex>,\n    date? : Deserializer<Date, SerializedDate>,\n    array? : PrimitiveDeserializer<$ReadOnlyArray<mixed>>,\n    object? : PrimitiveDeserializer<Object>,\n    string? : PrimitiveDeserializer<string>,\n    number? : PrimitiveDeserializer<number>,\n    boolean? : PrimitiveDeserializer<boolean>,\n    null? : PrimitiveDeserializer<null>,\n    [string] : Deserializer<mixed, *>\n};\n\n// $FlowFixMe\nconst DESERIALIZER : Deserializers = {\n    [ TYPE.FUNCTION ]:  deserializeFunction,\n    [ TYPE.ERROR ]:     deserializeError,\n    [ TYPE.PROMISE ]:   deserializePromise,\n    [ TYPE.REGEX ]:     deserializeRegex,\n    [ TYPE.DATE ]:      deserializeDate,\n    [ TYPE.ARRAY ]:     deserializeArray,\n    [ TYPE.OBJECT ]:    deserializeObject,\n    [ TYPE.STRING ]:    deserializeString,\n    [ TYPE.NUMBER ]:    deserializeNumber,\n    [ TYPE.BOOLEAN ]:   deserializeBoolean,\n    [ TYPE.NULL ]:      deserializeNull\n};\n\n// $FlowFixMe\nconst defaultDeserializers : Deserializers = {};\n\nexport function deserialize<T : mixed | null | void>(str : string, deserializers : Deserializers = defaultDeserializers) : T {\n    if (str === TYPE.UNDEFINED) {\n        // $FlowFixMe\n        return;\n    }\n\n    function replacer(key, val) : ?mixed {\n        if (isSerializedType(this)) {\n            return val;\n        }\n\n        let type;\n        let value;\n\n        if (isSerializedType(val)) {\n            type = val.__type__;\n            value = val.__val__;\n        } else {\n            type = determineType(val);\n            value = val;\n        }\n\n        if (!type) {\n            return value;\n        }\n\n        // $FlowFixMe\n        const deserializer = deserializers[type] || DESERIALIZER[type];\n\n        if (!deserializer) {\n            return value;\n        }\n\n        return deserializer(value, key);\n    }\n\n    return JSON.parse(str, replacer);\n}\n","/* @flow */\n\nimport { isSameDomain, isWindowClosed, type CrossDomainWindowType, type DomainMatcher, getOpener, WINDOW_TYPE, isWindow } from 'cross-domain-utils/src';\nimport { ZalgoPromise } from 'zalgo-promise/src';\nimport { uniqueID, memoizePromise } from 'belter/src';\nimport { serializeType, type CustomSerializedType } from 'universal-serialize/src';\n\nimport { SERIALIZATION_TYPE } from '../conf';\nimport { windowStore, globalStore } from '../global';\nimport { getWindowInstanceID } from '../lib';\nimport { linkWindow } from '../bridge';\nimport type { OnType, SendType } from '../types';\n\nfunction cleanupProxyWindows() {\n    const idToProxyWindow = globalStore('idToProxyWindow');\n    for (const id of idToProxyWindow.keys()) {\n        // $FlowFixMe\n        if (idToProxyWindow.get(id).shouldClean()) {\n            idToProxyWindow.del(id);\n        }\n    }\n}\n\ntype SerializedProxyWindow = {|\n    id : string,\n    type : $Values<typeof WINDOW_TYPE>,\n    close : () => ZalgoPromise<void>,\n    focus : () => ZalgoPromise<void>,\n    isClosed : () => ZalgoPromise<boolean>,\n    setLocation : (string) => ZalgoPromise<void>,\n    setName : (string) => ZalgoPromise<void>,\n    getInstanceID : () => ZalgoPromise<string>\n|};\n\nexport class ProxyWindow {\n\n    isProxyWindow : true = true\n    serializedWindow : SerializedProxyWindow\n    actualWindow : CrossDomainWindowType\n    actualWindowPromise : ZalgoPromise<CrossDomainWindowType>\n    send : SendType\n\n    constructor(serializedWindow : SerializedProxyWindow, actualWindow? : ?CrossDomainWindowType, { send } : { send : SendType }) {\n        this.serializedWindow = serializedWindow;\n        this.actualWindowPromise = new ZalgoPromise();\n        if (actualWindow) {\n            this.setWindow(actualWindow);\n        }\n        this.serializedWindow.getInstanceID = memoizePromise(this.serializedWindow.getInstanceID);\n        this.send = send;\n    }\n\n    getType() : $Values<typeof WINDOW_TYPE> {\n        return this.serializedWindow.type;\n    }\n\n    isPopup() : boolean {\n        return this.getType() === WINDOW_TYPE.POPUP;\n    }\n\n    isIframe() : boolean {\n        return this.getType() === WINDOW_TYPE.IFRAME;\n    }\n\n    setLocation(href : string) : ZalgoPromise<ProxyWindow> {\n        return ZalgoPromise.try(() => {\n            if (this.actualWindow) {\n                this.actualWindow.location = href;\n            } else {\n                return this.serializedWindow.setLocation(href);\n            }\n        }).then(() => this);\n    }\n\n    setName(name : string) : ZalgoPromise<ProxyWindow> {\n        return ZalgoPromise.try(() => {\n            if (this.actualWindow) {\n                if (!isSameDomain(this.actualWindow)) {\n                    throw new Error(`Can not set name for window on different domain`);\n                }\n                // $FlowFixMe\n                this.actualWindow.name = name;\n                // $FlowFixMe\n                if (this.actualWindow.frameElement) {\n                    // $FlowFixMe\n                    this.actualWindow.frameElement.setAttribute('name', name);\n                }\n\n                if (__POST_ROBOT__.__IE_POPUP_SUPPORT__) {\n                    \n                    linkWindow({ win: this.actualWindow, name });\n                }\n\n            } else {\n                return this.serializedWindow.setName(name);\n            }\n        }).then(() => this);\n    }\n\n    close() : ZalgoPromise<ProxyWindow> {\n        return ZalgoPromise.try(() => {\n            if (this.actualWindow) {\n                this.actualWindow.close();\n            } else {\n                return this.serializedWindow.close();\n            }\n        }).then(() => this);\n    }\n\n    focus() : ZalgoPromise<ProxyWindow> {\n        return ZalgoPromise.try(() => {\n            if (this.actualWindow) {\n                this.actualWindow.focus();\n            }\n            return this.serializedWindow.focus();\n        }).then(() => this);\n    }\n\n    isClosed() : ZalgoPromise<boolean> {\n        return ZalgoPromise.try(() => {\n            if (this.actualWindow) {\n                return isWindowClosed(this.actualWindow);\n            } else {\n                return this.serializedWindow.isClosed();\n            }\n        });\n    }\n\n    getWindow() : ?CrossDomainWindowType {\n        return this.actualWindow;\n    }\n\n    setWindow(win : CrossDomainWindowType) {\n        this.actualWindow = win;\n        this.actualWindowPromise.resolve(win);\n    }\n\n    awaitWindow() : ZalgoPromise<CrossDomainWindowType> {\n        return this.actualWindowPromise;\n    }\n\n    matchWindow(win : CrossDomainWindowType) : ZalgoPromise<boolean> {\n        return ZalgoPromise.try(() => {\n            if (this.actualWindow) {\n                return win === this.actualWindow;\n            }\n            \n            return ZalgoPromise.all([\n                this.getInstanceID(),\n                getWindowInstanceID(win, { send: this.send })\n            ]).then(([ proxyInstanceID, knownWindowInstanceID ]) => {\n                const match = proxyInstanceID === knownWindowInstanceID;\n\n                if (match) {\n                    this.setWindow(win);\n                }\n\n                return match;\n            });\n        });\n    }\n\n    unwrap() : CrossDomainWindowType | ProxyWindow {\n        return this.actualWindow || this;\n    }\n\n    getInstanceID() : ZalgoPromise<string> {\n        if (this.actualWindow) {\n            return getWindowInstanceID(this.actualWindow, { send: this.send });\n        } else {\n            return this.serializedWindow.getInstanceID();\n        }\n    }\n\n    serialize() : SerializedProxyWindow {\n        return this.serializedWindow;\n    }\n\n    shouldClean() : boolean {\n        return this.actualWindow && isWindowClosed(this.actualWindow);\n    }\n\n    static unwrap(win : CrossDomainWindowType | ProxyWindow) : CrossDomainWindowType | ProxyWindow {\n        return ProxyWindow.isProxyWindow(win)\n            // $FlowFixMe\n            ? win.unwrap()\n            : win;\n    }\n\n    static serialize(win : CrossDomainWindowType | ProxyWindow, { send } : { send : SendType }) : SerializedProxyWindow {\n        cleanupProxyWindows();\n\n        return ProxyWindow.toProxyWindow(win, { send }).serialize();\n    }\n\n    static deserialize(serializedWindow : SerializedProxyWindow, { on, send } : { on : OnType, send : SendType }) : ProxyWindow {\n        cleanupProxyWindows();\n        \n        return globalStore('idToProxyWindow').getOrSet(serializedWindow.id, () => {\n            return new ProxyWindow(serializedWindow, null, { on, send });\n        });\n    }\n\n    static isProxyWindow(obj : CrossDomainWindowType | ProxyWindow) : boolean {\n        // $FlowFixMe\n        return Boolean(obj && !isWindow(obj) && obj.isProxyWindow);\n    }\n\n    static toProxyWindow(win : CrossDomainWindowType | ProxyWindow, { send } : { send : SendType }) : ProxyWindow {\n        cleanupProxyWindows();\n\n        if (ProxyWindow.isProxyWindow(win)) {\n            // $FlowFixMe\n            return win;\n        }\n\n        // $FlowFixMe\n        return windowStore('winToProxyWindow').getOrSet(win, () => {\n            const id = uniqueID();\n\n            return globalStore('idToProxyWindow').set(id, new ProxyWindow({\n                id,\n                // $FlowFixMe\n                type:          getOpener(win) ? WINDOW_TYPE.POPUP : WINDOW_TYPE.IFRAME,\n                // $FlowFixMe\n                getInstanceID: () => getWindowInstanceID(win, { send }),\n                close:         () => ZalgoPromise.try(() => {\n                    win.close();\n                }),\n                focus:         () => ZalgoPromise.try(() => {\n                    win.focus();\n                }),\n                isClosed:      () => ZalgoPromise.try(() => {\n                    // $FlowFixMe\n                    return isWindowClosed(win);\n                }),\n                setLocation:   (href) => ZalgoPromise.try(() => {\n                    // $FlowFixMe\n                    if (isSameDomain(win)) {\n                        try {\n                            if (win.location && typeof win.location.replace === 'function') {\n                                // $FlowFixMe\n                                win.location.replace(href);\n                                return;\n                            }\n                        } catch (err) {\n                            // pass\n                        }\n                    }\n    \n                    // $FlowFixMe\n                    win.location = href;\n                }),\n                setName:       (name) => ZalgoPromise.try(() => {\n                    if (__POST_ROBOT__.__IE_POPUP_SUPPORT__) {\n                        // $FlowFixMe\n                        linkWindow({ win, name });\n                    }\n                    // $FlowFixMe\n                    win.name = name;\n                })\n            // $FlowFixMe\n            }, win, { send }));\n        });\n    }\n}\n\nexport type SerializedWindow = CustomSerializedType<typeof SERIALIZATION_TYPE.CROSS_DOMAIN_WINDOW, SerializedProxyWindow>;\n\nexport function serializeWindow(destination : CrossDomainWindowType | ProxyWindow, domain : DomainMatcher, win : CrossDomainWindowType, { send } : { send : SendType }) : SerializedWindow {\n    return serializeType(SERIALIZATION_TYPE.CROSS_DOMAIN_WINDOW, ProxyWindow.serialize(win, { send }));\n}\n\nexport function deserializeWindow(source : CrossDomainWindowType | ProxyWindow, origin : string, win : SerializedProxyWindow, { on, send } : { on : OnType, send : SendType }) : ProxyWindow {\n    return ProxyWindow.deserialize(win, { on, send });\n}\n","/* @flow */\n\nimport { ZalgoPromise } from 'zalgo-promise/src';\nimport { getDomain, isSameDomain, isOpener, isSameTopWindow, matchDomain, getUserAgent, getDomainFromUrl, type CrossDomainWindowType } from 'cross-domain-utils/src';\nimport { noop } from 'belter/src';\n\nimport { BRIDGE_NAME_PREFIX } from '../conf';\nimport { windowStore } from '../global';\n\nexport function needsBridgeForBrowser() : boolean {\n\n    if (getUserAgent(window).match(/MSIE|trident|edge\\/12|edge\\/13/i)) {\n        return true;\n    }\n\n    return false;\n}\n\nexport function needsBridgeForWin(win : CrossDomainWindowType) : boolean {\n\n    if (!isSameTopWindow(window, win)) {\n        return true;\n    }\n\n    return false;\n}\n\nexport function needsBridgeForDomain(domain : ?string, win : ?CrossDomainWindowType) : boolean {\n\n    if (domain) {\n        if (getDomain() !== getDomainFromUrl(domain)) {\n            return true;\n        }\n    } else if (win) {\n        if (!isSameDomain(win))  {\n            return true;\n        }\n    }\n\n    return false;\n}\n\nexport function needsBridge({ win, domain } : { win? : CrossDomainWindowType, domain? : string }) : boolean {\n\n    if (!needsBridgeForBrowser()) {\n        return false;\n    }\n\n    if (domain && !needsBridgeForDomain(domain, win)) {\n        return false;\n    }\n\n    if (win && !needsBridgeForWin(win)) {\n        return false;\n    }\n\n    return true;\n}\n\nexport function getBridgeName(domain : string) : string {\n\n    domain = domain || getDomainFromUrl(domain);\n\n    const sanitizedDomain = domain.replace(/[^a-zA-Z0-9]+/g, '_');\n\n    const id = `${ BRIDGE_NAME_PREFIX }_${ sanitizedDomain }`;\n\n    return id;\n}\n\nexport function isBridge() : boolean {\n    return Boolean(window.name && window.name === getBridgeName(getDomain()));\n}\n\nexport const documentBodyReady = new ZalgoPromise(resolve => {\n\n    if (window.document && window.document.body) {\n        return resolve(window.document.body);\n    }\n\n    const interval = setInterval(() => {\n        if (window.document && window.document.body) {\n            clearInterval(interval);\n            return resolve(window.document.body);\n        }\n    }, 10);\n});\n\nexport function registerRemoteWindow(win : CrossDomainWindowType) {\n    const remoteWindowPromises = windowStore('remoteWindowPromises');\n    remoteWindowPromises.getOrSet(win, () => new ZalgoPromise());\n}\n\nexport function findRemoteWindow(win : CrossDomainWindowType) : ZalgoPromise<(remoteWin : CrossDomainWindowType, message : string, remoteDomain : string) => void> {\n    const remoteWindowPromises = windowStore('remoteWindowPromises');\n    const remoteWinPromise = remoteWindowPromises.get(win);\n\n    if (!remoteWinPromise) {\n        throw new Error(`Remote window promise not found`);\n    }\n\n    return remoteWinPromise;\n}\n\nexport function registerRemoteSendMessage(win : CrossDomainWindowType, domain : string, sendMessage : (message : string) => void) {\n    const sendMessageWrapper = (remoteWin : CrossDomainWindowType, remoteDomain : string, message : string) => {\n        if (remoteWin !== win) {\n            throw new Error(`Remote window does not match window`);\n        }\n\n        if (!matchDomain(remoteDomain, domain)) {\n            throw new Error(`Remote domain ${ remoteDomain } does not match domain ${ domain }`);\n        }\n\n        sendMessage.fireAndForget(message);\n    };\n\n    findRemoteWindow(win).resolve(sendMessageWrapper);\n}\n\nexport function rejectRemoteSendMessage(win : CrossDomainWindowType, err : Error) {\n    findRemoteWindow(win).reject(err).catch(noop);\n}\n\nexport function sendBridgeMessage(win : CrossDomainWindowType, domain : string, message : string) : ZalgoPromise<void> {\n\n    const messagingChild  = isOpener(window, win);\n    const messagingParent = isOpener(win, window);\n\n    if (!messagingChild && !messagingParent) {\n        throw new Error(`Can only send messages to and from parent and popup windows`);\n    }\n\n    return findRemoteWindow(win).then(sendMessage => {\n        return sendMessage(win, domain, message);\n    });\n}\n","/* @flow */\n\nimport { matchDomain, getDomain, type CrossDomainWindowType, type DomainMatcher } from 'cross-domain-utils/src';\nimport { ZalgoPromise } from 'zalgo-promise/src';\nimport { uniqueID, isRegex } from 'belter/src';\nimport { serializeType, type CustomSerializedType } from 'universal-serialize/src';\n\nimport { MESSAGE_NAME, WILDCARD, SERIALIZATION_TYPE } from '../conf';\nimport { windowStore, globalStore } from '../global';\nimport type { OnType, SendType, CancelableType } from '../types';\n\nimport { ProxyWindow } from './window';\n\ntype StoredMethod = {|\n    name : string,\n    domain : DomainMatcher,\n    val : Function,\n    source : CrossDomainWindowType | ProxyWindow\n|};\n\nfunction addMethod(id : string, val : Function, name : string, source : CrossDomainWindowType | ProxyWindow, domain : DomainMatcher) {\n    const methodStore = windowStore('methodStore');\n    const proxyWindowMethods = globalStore('proxyWindowMethods');\n    \n    if (ProxyWindow.isProxyWindow(source)) {\n        proxyWindowMethods.set(id, { val, name, domain, source });\n    } else {\n        proxyWindowMethods.del(id);\n        // $FlowFixMe\n        const methods = methodStore.getOrSet(source, () => ({}));\n        methods[id] = { domain, name, val, source };\n    }\n}\n\nfunction lookupMethod(source : CrossDomainWindowType, id : string) : ?StoredMethod {\n    const methodStore = windowStore('methodStore');\n    const proxyWindowMethods = globalStore('proxyWindowMethods');\n    const methods = methodStore.getOrSet(source, () => ({}));\n    return methods[id] || proxyWindowMethods.get(id);\n}\n\nfunction listenForFunctionCalls({ on } : { on : OnType }) : CancelableType {\n    return globalStore('builtinListeners').getOrSet('functionCalls', () => {\n        return on(MESSAGE_NAME.METHOD, { domain: WILDCARD }, ({ source, origin, data } : { source : CrossDomainWindowType, origin : string, data : Object }) => {\n            const { id, name } = data;\n\n            const meth = lookupMethod(source, id);\n    \n            if (!meth) {\n                throw new Error(`Could not find method '${ data.name }' with id: ${ data.id } in ${ getDomain(window) }`);\n            }\n\n            const { source: methodSource, domain, val } = meth;\n            \n            return ZalgoPromise.try(() => {\n                if (!matchDomain(domain, origin)) {\n                    // $FlowFixMe\n                    throw new Error(`Method '${ data.name }' domain ${ JSON.stringify(isRegex(meth.domain) ? meth.domain.source : meth.domain) } does not match origin ${ origin } in ${ getDomain(window) }`);\n                }\n                \n                if (ProxyWindow.isProxyWindow(methodSource)) {\n                    // $FlowFixMe\n                    return methodSource.matchWindow(source).then(match => {\n                        if (!match) {\n                            throw new Error(`Method call '${ data.name }' failed - proxy window does not match source in ${ getDomain(window) }`);\n                        }\n                    });\n                }\n            }).then(() => {\n                return val.apply({ source, origin }, data.args);\n            }, err => {\n                return ZalgoPromise.try(() => {\n                    if (val.onError) {\n                        return val.onError(err);\n                    }\n                }).then(() => {\n                    throw err;\n                });\n            }).then(result => {\n                return { result, id, name };\n            });\n        });\n    });\n}\n\nexport type SerializedFunction = CustomSerializedType<typeof SERIALIZATION_TYPE.CROSS_DOMAIN_FUNCTION, {\n    id : string,\n    name : string\n}>;\n\nexport function serializeFunction<T>(destination : CrossDomainWindowType | ProxyWindow, domain : DomainMatcher, val : () => ZalgoPromise<T> | T, key : string, { on } : { on : OnType }) : SerializedFunction {\n    listenForFunctionCalls({ on });\n    \n    const id = val.__id__ || uniqueID();\n    destination = ProxyWindow.unwrap(destination);\n    const name = val.__name__ || val.name || key;\n\n    if (ProxyWindow.isProxyWindow(destination)) {\n        addMethod(id, val, name, destination, domain);\n\n        // $FlowFixMe\n        destination.awaitWindow().then(win => {\n            addMethod(id, val, name, win, domain);\n        });\n    } else {\n        addMethod(id, val, name, destination, domain);\n    }\n\n    return serializeType(SERIALIZATION_TYPE.CROSS_DOMAIN_FUNCTION, { id, name });\n}\n\nexport function deserializeFunction<T>(source : CrossDomainWindowType | ProxyWindow, origin : string, { id, name } : { id : string, name : string }, { send } : { send : SendType }) : (...args : $ReadOnlyArray<mixed>) => ZalgoPromise<T> {\n    const getDeserializedFunction = (opts? : Object = {}) => {\n        function crossDomainFunctionWrapper<X : mixed>() : ZalgoPromise<X> {\n            let originalStack;\n    \n            if (__DEBUG__) {\n                originalStack = (new Error(`Original call to ${ name }():`)).stack;\n            }\n    \n            return ProxyWindow.toProxyWindow(source, { send }).awaitWindow().then(win => {\n                const meth = lookupMethod(win, id);\n    \n                if (meth && meth.val !== crossDomainFunctionWrapper) {\n                    return meth.val.apply({ source: window, origin: getDomain() }, arguments);\n                } else {\n                    return send(win, MESSAGE_NAME.METHOD, { id, name, args: Array.prototype.slice.call(arguments) }, { domain: origin, fireAndForget: opts.fireAndForget })\n                        .then(res => {\n                            if (!opts.fireAndForget) {\n                                return res.data.result;\n                            }\n                        });\n                }\n    \n            }).catch(err => {\n                // $FlowFixMe\n                if (__DEBUG__ && originalStack && err.stack) {\n                    // $FlowFixMe\n                    err.stack = `${ err.stack }\\n\\n${ originalStack }`;\n                }\n                throw err;\n            });\n        }\n\n        crossDomainFunctionWrapper.__name__ = name;\n        crossDomainFunctionWrapper.__origin__ = origin;\n        crossDomainFunctionWrapper.__source__ = source;\n        crossDomainFunctionWrapper.__id__ = id;\n\n        crossDomainFunctionWrapper.origin = origin;\n\n        return crossDomainFunctionWrapper;\n    };\n\n    const crossDomainFunctionWrapper = getDeserializedFunction();\n    crossDomainFunctionWrapper.fireAndForget = getDeserializedFunction({ fireAndForget: true });\n\n    return crossDomainFunctionWrapper;\n}\n","/* @flow */\n\nimport { type CrossDomainWindowType, isWindow, type DomainMatcher } from 'cross-domain-utils/src';\nimport { TYPE, serialize, deserialize, type Thenable } from 'universal-serialize/src';\n\nimport { SERIALIZATION_TYPE } from '../conf';\nimport type { OnType, SendType } from '../types';\n\nimport { serializeFunction, deserializeFunction, type SerializedFunction } from './function';\nimport { serializePromise, deserializePromise, type SerializedPromise } from './promise';\nimport { serializeWindow, deserializeWindow, type SerializedWindow, ProxyWindow } from './window';\n\nexport function serializeMessage<T : mixed>(destination : CrossDomainWindowType | ProxyWindow, domain : DomainMatcher, obj : T, { on, send } : { on : OnType, send : SendType }) : string {\n    return serialize(obj, {\n        [ TYPE.PROMISE ]:  (val : Thenable, key : string) : SerializedPromise => serializePromise(destination, domain, val, key, { on, send }),\n        [ TYPE.FUNCTION ]: (val : Function, key : string) : SerializedFunction => serializeFunction(destination, domain, val, key, { on, send }),\n        [ TYPE.OBJECT ]:   (val : CrossDomainWindowType) : Object | SerializedWindow => {\n            return (isWindow(val) || ProxyWindow.isProxyWindow(val)) ? serializeWindow(destination, domain, val, { on, send }) : val;\n        }\n    });\n}\n\nexport function deserializeMessage<T : mixed>(source : CrossDomainWindowType | ProxyWindow, origin : string, message : string, { on, send } : { on : OnType, send : SendType }) : T {\n    return deserialize(message, {\n        [ SERIALIZATION_TYPE.CROSS_DOMAIN_ZALGO_PROMISE ]: (serializedPromise)  => deserializePromise(source, origin, serializedPromise),\n        [ SERIALIZATION_TYPE.CROSS_DOMAIN_FUNCTION ]:      (serializedFunction) => deserializeFunction(source, origin, serializedFunction, { on, send }),\n        [ SERIALIZATION_TYPE.CROSS_DOMAIN_WINDOW ]:        (serializedWindow)   => deserializeWindow(source, origin, serializedWindow, { on, send })\n    });\n}\n","/* @flow */\n\nimport { type CrossDomainWindowType, type DomainMatcher } from 'cross-domain-utils/src';\nimport { ZalgoPromise } from 'zalgo-promise/src';\nimport { serializeType, type CustomSerializedType, type Thenable } from 'universal-serialize/src';\n\nimport { SERIALIZATION_TYPE } from '../conf';\nimport type { OnType, SendType } from '../types';\n\nimport { serializeFunction, type SerializedFunction } from './function';\nimport { ProxyWindow } from './window';\n\nexport type SerializedPromise = CustomSerializedType<typeof SERIALIZATION_TYPE.CROSS_DOMAIN_ZALGO_PROMISE, {\n    then : SerializedFunction\n}>;\n\nexport function serializePromise(destination : CrossDomainWindowType | ProxyWindow, domain : DomainMatcher, val : Thenable, key : string, { on, send } : { on : OnType, send : SendType }) : SerializedPromise {\n    return serializeType(SERIALIZATION_TYPE.CROSS_DOMAIN_ZALGO_PROMISE, {\n        then: serializeFunction(destination, domain, (resolve, reject) => val.then(resolve, reject), key, { on, send })\n    });\n}\n\nexport function deserializePromise<T>(source : CrossDomainWindowType | ProxyWindow, origin : string, { then } : { then : Function }) : ZalgoPromise<T> {\n    return new ZalgoPromise(then);\n}\n","/* @flow */\n\nimport { isSameDomain, isSameTopWindow, isActuallySameDomain, getActualDomain,\n    getDomain, type CrossDomainWindowType, type DomainMatcher, PROTOCOL } from 'cross-domain-utils/src';\n\nimport { SEND_STRATEGY, WILDCARD } from '../../conf';\nimport { needsGlobalMessagingForBrowser } from '../../lib';\nimport { getGlobal } from '../../global';\nimport { sendBridgeMessage, needsBridgeForBrowser, isBridge } from '../../bridge';\n\nexport const SEND_MESSAGE_STRATEGIES = {};\n\nSEND_MESSAGE_STRATEGIES[SEND_STRATEGY.POST_MESSAGE] = (win : CrossDomainWindowType, serializedMessage : string, domain : DomainMatcher) => {\n\n    if (__TEST__) {\n        if (needsGlobalMessagingForBrowser() && isSameTopWindow(window, win) === false) {\n            return;\n        }\n    }\n\n    let domains;\n\n    if (Array.isArray(domain)) {\n        domains = domain;\n    } else if (typeof domain === 'string') {\n        domains = [ domain ];\n    } else {\n        domains = [ WILDCARD ];\n    }\n\n    domains = domains.map(dom => {\n\n        if (dom.indexOf(PROTOCOL.MOCK) === 0) {\n\n            if (window.location.protocol === PROTOCOL.FILE) {\n                return WILDCARD;\n            }\n\n            if (!isActuallySameDomain(win)) {\n                throw new Error(`Attempting to send messsage to mock domain ${ dom }, but window is actually cross-domain`);\n            }\n\n            // $FlowFixMe\n            return getActualDomain(win);\n        }\n\n        if (dom.indexOf(PROTOCOL.FILE) === 0) {\n            return WILDCARD;\n        }\n\n        return dom;\n    });\n\n    domains.forEach(dom => {\n        win.postMessage(serializedMessage, dom);\n    });\n};\n\nif (__POST_ROBOT__.__IE_POPUP_SUPPORT__) {\n\n    SEND_MESSAGE_STRATEGIES[SEND_STRATEGY.BRIDGE] = (win : CrossDomainWindowType, serializedMessage : string, domain : string) => {\n\n        if (!needsBridgeForBrowser() && !isBridge()) {\n            return;\n        }\n\n        if (isSameDomain(win)) {\n            throw new Error(`Post message through bridge disabled between same domain windows`);\n        }\n\n        if (isSameTopWindow(window, win) !== false) {\n            throw new Error(`Can only use bridge to communicate between two different windows, not between frames`);\n        }\n\n        sendBridgeMessage(win, domain, serializedMessage);\n    };\n}\n\nif (__POST_ROBOT__.__IE_POPUP_SUPPORT__ || __POST_ROBOT__.__GLOBAL_MESSAGE_SUPPORT__) {\n    \n    SEND_MESSAGE_STRATEGIES[SEND_STRATEGY.GLOBAL] = (win : CrossDomainWindowType, serializedMessage : string) => {\n\n        if (!needsGlobalMessagingForBrowser()) {\n            return;\n        }\n\n        if (!isSameDomain(win)) {\n            throw new Error(`Post message through global disabled between different domain windows`);\n        }\n\n        if (isSameTopWindow(window, win) !== false) {\n            throw new Error(`Can only use global to communicate between two different windows, not between frames`);\n        }\n\n        // $FlowFixMe\n        const foreignGlobal = getGlobal(win);\n\n        if (!foreignGlobal) {\n            throw new Error(`Can not find postRobot global on foreign window`);\n        }\n\n        foreignGlobal.receiveMessage({\n            source: window,\n            origin: getDomain(),\n            data:   serializedMessage\n        });\n    };\n}\n","/* @flow */\n\nimport { isWindowClosed, type CrossDomainWindowType, type DomainMatcher } from 'cross-domain-utils/src';\nimport { uniqueID } from 'belter/src';\n\nimport { serializeMessage } from '../../serialize';\nimport type { Message } from '../types';\nimport type { OnType, SendType } from '../../types';\n\nimport { SEND_MESSAGE_STRATEGIES } from './strategies';\n\nexport function sendMessage(win : CrossDomainWindowType, domain : DomainMatcher, message : Message, { on, send } : { on : OnType, send : SendType }) {\n    if (isWindowClosed(win)) {\n        throw new Error('Window is closed');\n    }\n    \n    const serializedMessage = serializeMessage(win, domain, {\n        [ __POST_ROBOT__.__GLOBAL_KEY__ ]: {\n            id: uniqueID(),\n            ...message\n        }\n    }, { on, send });\n\n    let success = false;\n    let error;\n\n    for (const strategyName of Object.keys(SEND_MESSAGE_STRATEGIES)) {\n        try {\n            SEND_MESSAGE_STRATEGIES[strategyName](win, serializedMessage, domain);\n            success = true;\n        } catch (err) {\n            error = error || err;\n        }\n    }\n\n    if (!success) {\n        throw error;\n    }\n}\n","/* @flow */\n\nimport { getUserAgent } from 'cross-domain-utils/src';\n\nexport function needsGlobalMessagingForBrowser() : boolean {\n\n    if (getUserAgent(window).match(/MSIE|rv:11|trident|edge\\/12|edge\\/13/i)) {\n        return true;\n    }\n\n    return false;\n}\n","/* @flow */\n\nimport { type ZalgoPromise } from 'zalgo-promise/src';\nimport { matchDomain, type CrossDomainWindowType, type DomainMatcher } from 'cross-domain-utils/src';\nimport { isRegex, getOrSet } from 'belter/src';\n\nimport { getWildcard, type WildCard, globalStore, windowStore } from '../global';\nimport { WILDCARD } from '../conf';\n\nexport function resetListeners() {\n    const responseListeners = globalStore('responseListeners');\n    const erroredResponseListeners = globalStore('erroredResponseListeners');\n    responseListeners.reset();\n    erroredResponseListeners.reset();\n}\n\nconst __DOMAIN_REGEX__ = '__domain_regex__';\n\nexport type RequestListenerType = {|\n    handler : ({ source : CrossDomainWindowType, origin : string, data : mixed }) => (mixed | ZalgoPromise<mixed>),\n    handleError : (err : mixed) => void,\n    window : ?CrossDomainWindowType,\n    name : string,\n    domain : DomainMatcher\n|};\n\nexport type ResponseListenerType = {|\n    name : string,\n    win : CrossDomainWindowType,\n    domain : DomainMatcher,\n    promise : ZalgoPromise<*>,\n    ack? : ?boolean\n|};\n\nexport function addResponseListener(hash : string, listener : ResponseListenerType) {\n    const responseListeners = globalStore('responseListeners');\n    responseListeners.set(hash, listener);\n}\n\nexport function getResponseListener(hash : string) : ?ResponseListenerType {\n    const responseListeners = globalStore('responseListeners');\n    return responseListeners.get(hash);\n}\n\nexport function deleteResponseListener(hash : string) {\n    const responseListeners = globalStore('responseListeners');\n    responseListeners.del(hash);\n}\n\nexport function markResponseListenerErrored(hash : string) {\n    const erroredResponseListeners = globalStore('erroredResponseListeners');\n    erroredResponseListeners.set(hash, true);\n}\n\nexport function isResponseListenerErrored(hash : string) : boolean {\n    const erroredResponseListeners = globalStore('erroredResponseListeners');\n    return erroredResponseListeners.has(hash);\n}\n\nexport function getRequestListener({ name, win, domain } : { name : string, win : ?(CrossDomainWindowType | WildCard), domain : ?(string | RegExp) }) : ?RequestListenerType {\n    const requestListeners = windowStore('requestListeners');\n\n    if (win === WILDCARD) {\n        win = null;\n    }\n\n    if (domain === WILDCARD) {\n        domain = null;\n    }\n\n    if (!name) {\n        throw new Error(`Name required to get request listener`);\n    }\n\n    for (const winQualifier of [ win, getWildcard() ]) {\n        if (!winQualifier) {\n            continue;\n        }\n\n        const nameListeners = requestListeners.get(winQualifier);\n\n        if (!nameListeners) {\n            continue;\n        }\n\n        const domainListeners = nameListeners[name];\n\n        if (!domainListeners) {\n            continue;\n        }\n\n        if (domain && typeof domain === 'string') {\n            if (domainListeners[domain]) {\n                return domainListeners[domain];\n            }\n\n            if (domainListeners[__DOMAIN_REGEX__]) {\n                for (const { regex, listener } of domainListeners[__DOMAIN_REGEX__]) {\n                    if (matchDomain(regex, domain)) {\n                        return listener;\n                    }\n                }\n            }\n        }\n\n        if (domainListeners[WILDCARD]) {\n            return domainListeners[WILDCARD];\n        }\n    }\n}\n\nexport function addRequestListener({ name, win, domain } : { name : string, win : ?(CrossDomainWindowType | WildCard), domain : ?DomainMatcher }, listener : RequestListenerType) : { cancel : () => void } {\n    const requestListeners = windowStore('requestListeners');\n\n    if (!name || typeof name !== 'string') {\n        throw new Error(`Name required to add request listener`);\n    }\n\n    if (Array.isArray(win)) {\n        const listenersCollection = [];\n\n        for (const item of win) {\n            listenersCollection.push(addRequestListener({ name, domain, win: item }, listener));\n        }\n\n        return {\n            cancel() {\n                for (const cancelListener of listenersCollection) {\n                    cancelListener.cancel();\n                }\n            }\n        };\n    }\n\n    if (Array.isArray(domain)) {\n        const listenersCollection = [];\n\n        for (const item of domain) {\n            listenersCollection.push(addRequestListener({ name, win, domain: item }, listener));\n        }\n\n        return {\n            cancel() {\n                for (const cancelListener of listenersCollection) {\n                    cancelListener.cancel();\n                }\n            }\n        };\n    }\n\n    const existingListener = getRequestListener({ name, win, domain });\n\n    if (!win || win === WILDCARD) {\n        win = getWildcard();\n    }\n\n    domain = domain || WILDCARD;\n\n    if (existingListener) {\n        if (win && domain) {\n            throw new Error(`Request listener already exists for ${ name } on domain ${ domain.toString() } for ${ win === getWildcard() ? 'wildcard' : 'specified' } window`);\n        } else if (win) {\n            throw new Error(`Request listener already exists for ${ name } for ${ win === getWildcard() ? 'wildcard' : 'specified' } window`);\n        } else if (domain) {\n            throw new Error(`Request listener already exists for ${ name } on domain ${ domain.toString() }`);\n        } else {\n            throw new Error(`Request listener already exists for ${ name }`);\n        }\n    }\n\n    const nameListeners = requestListeners.getOrSet(win, () => ({}));\n    // $FlowFixMe\n    const domainListeners = getOrSet(nameListeners, name, () => ({}));\n\n    const strDomain = domain.toString();\n\n    let regexListeners;\n    let regexListener;\n\n    if (isRegex(domain)) {\n        regexListeners = getOrSet(domainListeners, __DOMAIN_REGEX__, () => []);\n        regexListener = { regex: domain, listener };\n        regexListeners.push(regexListener);\n    } else {\n        domainListeners[strDomain] = listener;\n    }\n\n    return {\n        cancel() {\n            delete domainListeners[strDomain];\n\n            if (regexListener) {\n                regexListeners.splice(regexListeners.indexOf(regexListener, 1));\n\n                if (!regexListeners.length) {\n                    delete domainListeners[__DOMAIN_REGEX__];\n                }\n            }\n\n            if (!Object.keys(domainListeners).length) {\n                // $FlowFixMe\n                delete nameListeners[name];\n            }\n\n            // $FlowFixMe\n            if (win && !Object.keys(nameListeners).length) {\n                requestListeners.del(win);\n            }\n        }\n    };\n}\n","/* @flow */\n\nimport { ZalgoPromise } from 'zalgo-promise/src';\nimport { isWindowClosed, matchDomain, stringifyDomainPattern, type CrossDomainWindowType } from 'cross-domain-utils/src';\nimport { noop } from 'belter/src';\n\nimport { MESSAGE_TYPE, MESSAGE_ACK, MESSAGE_NAME } from '../../conf';\nimport { sendMessage } from '../send';\nimport { getRequestListener, getResponseListener, deleteResponseListener, isResponseListenerErrored } from '../listeners';\nimport type { RequestMessage, AckResponseMessage, SuccessResponseMessage, ErrorResponseMessage } from '../types';\nimport type { OnType, SendType } from '../../types';\n\nexport const RECEIVE_MESSAGE_TYPES = {\n\n    [ MESSAGE_TYPE.REQUEST ](source : CrossDomainWindowType, origin : string, message : RequestMessage, { on, send } : { on : OnType, send : SendType }) : ZalgoPromise<void> {\n\n        const options = getRequestListener({ name: message.name, win: source, domain: origin });\n\n        const logName = (message.name === MESSAGE_NAME.METHOD && message.data && typeof message.data.name === 'string') ? `${ message.data.name }()` : message.name;\n\n        if (__DEBUG__) {\n            // eslint-disable-next-line no-console\n            console.info('receive::req', logName, origin, '\\n\\n', message.data);\n        }\n\n        function sendResponse(type : $Values<typeof MESSAGE_TYPE>, ack? : $Values<typeof MESSAGE_ACK>, response = {}) {\n\n            if (message.fireAndForget || isWindowClosed(source)) {\n                return;\n            }\n\n            if (__DEBUG__ && type !== MESSAGE_TYPE.ACK) {\n                if (ack === MESSAGE_ACK.SUCCESS) {\n                    // $FlowFixMe\n                    console.info('respond::res', logName, origin, '\\n\\n', response.data);  // eslint-disable-line no-console\n                } else if (ack === MESSAGE_ACK.ERROR) {\n                    // $FlowFixMe\n                    console.error('respond::err', logName, origin, '\\n\\n', response.error); // eslint-disable-line no-console\n                }\n            }\n\n            // $FlowFixMe\n            sendMessage(source, origin, {\n                type,\n                ack,\n                hash:   message.hash,\n                name:   message.name,\n                ...response\n            }, { on, send });\n        }\n\n        return ZalgoPromise.all([\n\n            sendResponse(MESSAGE_TYPE.ACK),\n\n            ZalgoPromise.try(() => {\n\n                if (!options) {\n                    throw new Error(`No handler found for post message: ${ message.name } from ${ origin } in ${ window.location.protocol }//${ window.location.host }${ window.location.pathname }`);\n                }\n\n                if (!matchDomain(options.domain, origin)) {\n                    throw new Error(`Request origin ${ origin } does not match domain ${ options.domain.toString() }`);\n                }\n\n                const data = message.data;\n\n                return options.handler({ source, origin, data });\n\n            }).then(data => {\n                return sendResponse(MESSAGE_TYPE.RESPONSE, MESSAGE_ACK.SUCCESS, { data });\n\n            }, error => {\n                return sendResponse(MESSAGE_TYPE.RESPONSE, MESSAGE_ACK.ERROR, { error });\n            })\n\n        ]).then(noop).catch(err => {\n            if (options && options.handleError) {\n                return options.handleError(err);\n            } else {\n                throw err;\n            }\n        });\n    },\n\n    [ MESSAGE_TYPE.ACK ](source : CrossDomainWindowType, origin : string, message : AckResponseMessage) {\n\n        if (isResponseListenerErrored(message.hash)) {\n            return;\n        }\n\n        const options = getResponseListener(message.hash);\n\n        if (!options) {\n            throw new Error(`No handler found for post message ack for message: ${ message.name } from ${ origin } in ${ window.location.protocol }//${ window.location.host }${ window.location.pathname }`);\n        }\n\n        if (!matchDomain(options.domain, origin)) {\n            throw new Error(`Ack origin ${ origin } does not match domain ${ options.domain.toString() }`);\n        }\n\n        if (source !== options.win) {\n            throw new Error(`Ack source does not match registered window`);\n        }\n\n        options.ack = true;\n    },\n\n    [ MESSAGE_TYPE.RESPONSE ](source : CrossDomainWindowType, origin : string, message : SuccessResponseMessage | ErrorResponseMessage) : void | ZalgoPromise<void> {\n\n        if (isResponseListenerErrored(message.hash)) {\n            return;\n        }\n\n        const options = getResponseListener(message.hash);\n\n        if (!options) {\n            throw new Error(`No handler found for post message response for message: ${ message.name } from ${ origin } in ${ window.location.protocol }//${ window.location.host }${ window.location.pathname }`);\n        }\n\n        if (!matchDomain(options.domain, origin)) {\n            throw new Error(`Response origin ${ origin } does not match domain ${ stringifyDomainPattern(options.domain) }`);\n        }\n\n        if (source !== options.win) {\n            throw new Error(`Response source does not match registered window`);\n        }\n\n        deleteResponseListener(message.hash);\n\n        const logName = (message.name === MESSAGE_NAME.METHOD && message.data && typeof message.data.name === 'string') ? `${ message.data.name }()` : message.name;\n\n        if (message.ack === MESSAGE_ACK.ERROR) {\n            if (__DEBUG__) {\n                console.error('receive::err', logName, origin, '\\n\\n', message.error); // eslint-disable-line no-console\n            }\n\n            options.promise.reject(message.error);\n\n        } else if (message.ack === MESSAGE_ACK.SUCCESS) {\n            if (__DEBUG__) {\n                console.info('receive::res', logName, origin, '\\n\\n', message.data); // eslint-disable-line no-console\n            }\n\n            options.promise.resolve({ source, origin, data: message.data });\n        }\n    }\n};\n","/* @flow */\n\nimport { isWindowClosed, type CrossDomainWindowType, getDomain, isSameTopWindow } from 'cross-domain-utils/src';\nimport { addEventListener, noop } from 'belter/src';\n\nimport { markWindowKnown, needsGlobalMessagingForBrowser } from '../../lib';\nimport { deserializeMessage } from '../../serialize';\nimport { getGlobal, globalStore } from '../../global';\nimport type { OnType, SendType, MessageEvent, CancelableType } from '../../types';\n\nimport { RECEIVE_MESSAGE_TYPES } from './types';\n\nfunction parseMessage(message : string, source : CrossDomainWindowType, origin : string, { on, send } : { on : OnType, send : SendType }) : ?Object {\n\n    let parsedMessage;\n\n    try {\n        parsedMessage = deserializeMessage(source, origin, message, { on, send });\n    } catch (err) {\n        return;\n    }\n\n    if (!parsedMessage) {\n        return;\n    }\n\n    if (typeof parsedMessage !== 'object' || parsedMessage === null) {\n        return;\n    }\n\n    parsedMessage = parsedMessage[__POST_ROBOT__.__GLOBAL_KEY__];\n\n    if (!parsedMessage || typeof parsedMessage !== 'object' || parsedMessage === null) {\n        return;\n    }\n\n    if (!parsedMessage.type || typeof parsedMessage.type !== 'string') {\n        return;\n    }\n\n    if (!RECEIVE_MESSAGE_TYPES[parsedMessage.type]) {\n        return;\n    }\n\n    return parsedMessage;\n}\n\nexport function receiveMessage(event : MessageEvent, { on, send } : { on : OnType, send : SendType }) {\n    const receivedMessages = globalStore('receivedMessages');\n\n    if (!window || window.closed) {\n        throw new Error(`Message recieved in closed window`);\n    }\n\n    try {\n        if (!event.source) {\n            return;\n        }\n    } catch (err) {\n        return;\n    }\n\n    let { source, origin, data } = event;\n\n    if (__TEST__) {\n        // $FlowFixMe\n        origin = getDomain(source);\n    }\n\n    const message = parseMessage(data, source, origin, { on, send });\n\n    if (!message) {\n        return;\n    }\n\n    markWindowKnown(source);\n\n    if (receivedMessages.has(message.id)) {\n        return;\n    }\n\n    receivedMessages.set(message.id, true);\n\n    if (isWindowClosed(source) && !message.fireAndForget) {\n        return;\n    }\n\n    RECEIVE_MESSAGE_TYPES[message.type](source, origin, message, { on, send });\n}\n\nexport function setupGlobalReceiveMessage({ on, send } : { on : OnType, send : SendType }) {\n    const global = getGlobal();\n    global.receiveMessage = global.receiveMessage || (message => receiveMessage(message, { on, send }));\n}\n\ntype ListenerEvent = {|\n    source : CrossDomainWindowType,\n    origin : string,\n    data : string,\n    sourceElement : CrossDomainWindowType,\n    originalEvent? : { origin : string }\n|};\n\nexport function messageListener(event : ListenerEvent, { on, send } : { on : OnType, send : SendType }) {\n\n    try {\n        noop(event.source);\n    } catch (err) {\n        return;\n    }\n\n    // $FlowFixMe\n    const messageEvent : MessageEvent = {\n        source: event.source || event.sourceElement,\n        origin: event.origin || (event.originalEvent && event.originalEvent.origin),\n        data:   event.data\n    };\n\n    if (!messageEvent.source) {\n        return;\n    }\n\n    if (!messageEvent.origin) {\n        throw new Error(`Post message did not have origin domain`);\n    }\n\n    if (__TEST__) {\n        if (needsGlobalMessagingForBrowser() && isSameTopWindow(messageEvent.source, window) === false) {\n            return;\n        }\n    }\n\n    receiveMessage(messageEvent, { on, send });\n}\n\nexport function listenForMessages({ on, send } : { on : OnType, send : SendType }) : CancelableType {\n    return globalStore().getOrSet('postMessageListeners', () => {\n        // $FlowFixMe\n        return addEventListener(window, 'message', event => {\n            // $FlowFixMe\n            messageListener(event, { on, send });\n        });\n    });\n}\n","/* @flow */\n\nimport { ZalgoPromise } from 'zalgo-promise/src';\n\nimport { addRequestListener, type RequestListenerType } from '../drivers';\nimport { WILDCARD } from '../conf';\nimport type { ServerOptionsType, HandlerType, CancelableType } from '../types';\n\nexport function on(name : string, options : ServerOptionsType | HandlerType, handler : ?HandlerType) : CancelableType {\n\n    if (!name) {\n        throw new Error('Expected name');\n    }\n\n    if (typeof options === 'function') {\n        handler = options;\n        // $FlowFixMe\n        options = {};\n    }\n\n    if (!handler) {\n        throw new Error('Expected handler');\n    }\n\n    options = options || {};\n    options.name = name;\n    options.handler = handler || options.handler;\n\n    const win = options.window;\n    const domain = options.domain;\n\n    const listenerOptions : RequestListenerType = {\n        handler:     options.handler,\n        handleError: options.errorHandler || (err => {\n            throw err;\n        }),\n        window: win,\n        domain: domain || WILDCARD,\n        name\n    };\n\n    const requestListener = addRequestListener({ name, win, domain }, listenerOptions);\n\n    return {\n        cancel() {\n            requestListener.cancel();\n        }\n    };\n}\n\nexport function once(name : string, options? : ServerOptionsType | HandlerType, handler? : HandlerType) : ZalgoPromise<{ source : mixed, origin : string, data : Object }> {\n    \n    // $FlowFixMe\n    options = options || {};\n    if (typeof options === 'function') {\n        handler = options;\n        // $FlowFixMe\n        options = {};\n    }\n\n    const promise = new ZalgoPromise();\n    let listener; // eslint-disable-line prefer-const\n\n    options.errorHandler = (err) => {\n        listener.cancel();\n        promise.reject(err);\n    };\n\n    listener = on(name, options, event => {\n        listener.cancel();\n        promise.resolve(event);\n        if (handler) {\n            return handler(event);\n        }\n    });\n\n    promise.cancel = listener.cancel;\n    return promise;\n}\n","/* @flow */\n\nimport { ZalgoPromise } from 'zalgo-promise/src';\nimport { isAncestor, isWindowClosed, getDomain, matchDomain, type CrossDomainWindowType } from 'cross-domain-utils/src';\nimport { uniqueID, isRegex, noop } from 'belter/src';\n\n\nimport { CHILD_WINDOW_TIMEOUT, MESSAGE_TYPE, WILDCARD, MESSAGE_NAME, ACK_TIMEOUT, RES_TIMEOUT, ACK_TIMEOUT_KNOWN } from '../conf';\nimport { sendMessage, addResponseListener, deleteResponseListener, markResponseListenerErrored, type ResponseListenerType } from '../drivers';\nimport { awaitWindowHello, sayHello, isWindowKnown } from '../lib';\nimport { windowStore } from '../global';\nimport type { RequestOptionsType, ResponseMessageEvent } from '../types';\n\nimport { on } from './on';\n\nexport function send(win : CrossDomainWindowType, name : string, data : ?Object, options? : RequestOptionsType) : ZalgoPromise<ResponseMessageEvent> {\n    \n    // $FlowFixMe\n    options = options || {};\n    let domain = options.domain || WILDCARD;\n    const responseTimeout = options.timeout || RES_TIMEOUT;\n    const childTimeout = options.timeout || CHILD_WINDOW_TIMEOUT;\n    const fireAndForget = options.fireAndForget || false;\n\n    const prom = ZalgoPromise.try(() => {\n        if (!name) {\n            throw new Error('Expected name');\n        }\n\n        if (domain) {\n            if (typeof domain !== 'string' && !Array.isArray(domain) && !isRegex(domain)) {\n                throw new TypeError(`Expected domain to be a string, array, or regex`);\n            }\n        }\n\n        if (isWindowClosed(win)) {\n            throw new Error('Target window is closed');\n        }\n\n        const reqPromises = windowStore('requestPromises').getOrSet(win, () => []);\n\n        // $FlowFixMe\n        const requestPromise = ZalgoPromise.try(() => {\n\n            if (isAncestor(window, win)) {\n                return awaitWindowHello(win, childTimeout);\n            } else if (isRegex(domain)) {\n                return sayHello(win, { send });\n            }\n\n        // $FlowFixMe\n        }).then(({ domain: origin } = {}) => {\n\n            if (isRegex(domain)) {\n                if (!matchDomain(domain, origin)) {\n                    // $FlowFixMe\n                    throw new Error(`Remote window domain ${ origin } does not match regex: ${ domain.source }`);\n                }\n                domain = origin;\n            }\n\n            const logName = (name === MESSAGE_NAME.METHOD && data && typeof data.name === 'string') ? `${ data.name }()` : name;\n\n            if (__DEBUG__) {\n                console.info('send::req', logName, domain, '\\n\\n', data); // eslint-disable-line no-console\n            }\n\n            let hasResult = false;\n\n            const promise = new ZalgoPromise();\n            promise.finally(() => {\n                hasResult = true;\n                reqPromises.splice(reqPromises.indexOf(requestPromise, 1));\n            }).catch(noop);\n\n            const hash = `${ name }_${ uniqueID() }`;\n\n            sendMessage(win, domain, {\n                type: MESSAGE_TYPE.REQUEST,\n                hash,\n                name,\n                data,\n                fireAndForget\n            }, { on, send });\n\n            if (fireAndForget) {\n                return promise.resolve();\n            }\n\n            promise.catch(() => {\n                markResponseListenerErrored(hash);\n                deleteResponseListener(hash);\n            });\n\n            const responseListener : ResponseListenerType = {\n                name,\n                win,\n                domain,\n                promise\n            };\n\n            addResponseListener(hash, responseListener);\n\n            const totalAckTimeout = isWindowKnown(win) ? ACK_TIMEOUT_KNOWN : ACK_TIMEOUT;\n            const totalResTimeout = responseTimeout;\n\n            let ackTimeout = totalAckTimeout;\n            let resTimeout = totalResTimeout;\n\n            let cycleTime = 100;\n\n            const cycle = () => {\n                if (hasResult) {\n                    return;\n                }\n\n                if (isWindowClosed(win)) {\n                    if (!responseListener.ack) {\n                        return promise.reject(new Error(`Window closed for ${ name } before ack`));\n                    } else {\n                        return promise.reject(new Error(`Window closed for ${ name } before response`));\n                    }\n                }\n\n                ackTimeout = Math.max(ackTimeout - cycleTime, 0);\n                if (resTimeout !== -1) {\n                    resTimeout = Math.max(resTimeout - cycleTime, 0);\n                }\n\n                const hasAck = responseListener.ack;\n\n                if (hasAck) {\n                    if (resTimeout === -1) {\n                        return;\n                    }\n\n                    cycleTime = Math.min(resTimeout, 2000);\n\n                } else if (ackTimeout === 0) {\n                    return promise.reject(new Error(`No ack for postMessage ${ name } in ${ getDomain() } in ${ totalAckTimeout }ms`));\n\n                } else if (resTimeout === 0) {\n                    return promise.reject(new Error(`No response for postMessage ${ name } in ${ getDomain() } in ${ totalResTimeout }ms`));\n                }\n\n                setTimeout(cycle, cycleTime);\n            };\n\n            setTimeout(cycle, cycleTime);\n\n            return promise;\n        });\n\n        reqPromises.push(requestPromise);\n        return requestPromise;\n    });\n\n    return prom;\n}\n","/* @flow */\n\nimport type { CrossDomainWindowType, DomainMatcher } from 'cross-domain-utils/src';\n\nimport { initHello } from './lib';\nimport { listenForMessages, receiveMessage, setupGlobalReceiveMessage } from './drivers';\nimport { getGlobal } from './global';\nimport { on, send } from './public';\nimport { setupBridge } from './bridge';\nimport { serializeMessage as internalSerializeMessage, deserializeMessage as internalDeserializeMessage, ProxyWindow } from './serialize';\n\nexport function serializeMessage<T>(destination : CrossDomainWindowType | ProxyWindow, domain : DomainMatcher, obj : T) : string {\n    return internalSerializeMessage(destination, domain, obj, { on, send });\n}\n\nexport function deserializeMessage<T : mixed>(source : CrossDomainWindowType | ProxyWindow, origin : string, message : string) : T {\n    return internalDeserializeMessage(source, origin, message, { on, send });\n}\n\nexport function toProxyWindow(win : CrossDomainWindowType | ProxyWindow) : ProxyWindow {\n    return ProxyWindow.toProxyWindow(win, { send });\n}\n\nexport function setup() {\n    if (!getGlobal().initialized) {\n        getGlobal().initialized = true;\n    \n        listenForMessages({ on, send });\n    \n        if (__POST_ROBOT__.__IE_POPUP_SUPPORT__) {\n            setupBridge({ on, send, receiveMessage });\n        }\n\n        initHello({ on, send });\n        setupGlobalReceiveMessage({ on, send });\n    }\n}\n","/* @flow */\n\nimport { isSameDomain, type CrossDomainWindowType } from 'cross-domain-utils/src';\n\nexport function globalFor(win : CrossDomainWindowType) : Object {\n\n    if (!isSameDomain(win)) {\n        throw new Error(`Can not get global for window on different domain`);\n    }\n\n    if (!win[__ZOID__.__GLOBAL_KEY__]) {\n        win[__ZOID__.__GLOBAL_KEY__] = {};\n    }\n\n    return win[__ZOID__.__GLOBAL_KEY__];\n}\n","/* @flow */\n\nimport { ZalgoPromise } from 'zalgo-promise/src';\nimport { toCSS } from 'belter/src';\n\nexport type ProxyElement<T : HTMLElement> = {|\n    resize : ({ width : ?number, height : ?number }) => void,\n    getElement : () => ZalgoPromise<T>\n|};\n\nexport function getProxyElement<T : HTMLElement>(element : T) : ProxyElement<T> {\n    return {\n        resize({ width, height } : { width : ?number, height : ?number }) {\n            if (typeof width === 'number') {\n                element.style.width = toCSS(width);\n            }\n    \n            if (typeof height === 'number') {\n                element.style.height = toCSS(height);\n            }\n        },\n\n        getElement() : ZalgoPromise<T> {\n            return ZalgoPromise.try(() => {\n                if (this.source && this.source !== window) {\n                    throw new Error(`Can not call getElement from a remote window`);\n                }\n    \n                return element;\n            });\n        }\n    };\n}\n","/* @flow */\n\nimport { setup } from './setup';\nimport { setupBridge, openBridge, linkWindow, linkUrl, isBridge, needsBridge, needsBridgeForBrowser, hasBridge,\n    needsBridgeForWin, needsBridgeForDomain, destroyBridges } from './bridge';\n\nexport { ZalgoPromise as Promise } from 'zalgo-promise/src';\n\nexport * from './types';\nexport { ProxyWindow } from './serialize';\nexport { setup, serializeMessage, deserializeMessage, toProxyWindow } from './setup';\nexport { on, once, send } from './public';\nexport { markWindowKnown } from './lib';\nexport { cleanUpWindow } from './clean';\nexport let bridge;\n\nif (__POST_ROBOT__.__IE_POPUP_SUPPORT__) {\n    bridge = { setupBridge, openBridge, linkWindow, linkUrl, isBridge, needsBridge,\n        needsBridgeForBrowser, hasBridge, needsBridgeForWin, needsBridgeForDomain, destroyBridges };\n}\n\nif (__POST_ROBOT__.__AUTO_SETUP__) {\n    setup();\n}\n","/* @flow */\n\nimport { WINDOW_TYPE } from 'cross-domain-utils/src';\n\nexport const ZOID = `zoid`;\n\nexport const POST_MESSAGE = {\n    DELEGATE:       `${ ZOID }_delegate`,\n    ALLOW_DELEGATE: `${ ZOID }_allow_delegate`\n};\n\nexport const PROP_TYPE = {\n    STRING:   `string`,\n    OBJECT:   `object`,\n    FUNCTION: `function`,\n    BOOLEAN:  `boolean`,\n    NUMBER:   `number`,\n    ARRAY:    `array`\n};\n\nexport const INITIAL_PROPS = {\n    RAW: 'raw',\n    UID: 'uid'\n};\n\nexport const WINDOW_REFERENCES = {\n    OPENER: `opener`,\n    TOP:    `top`,\n    PARENT: `parent`,\n    GLOBAL: `global`\n};\n\nexport const PROP_SERIALIZATION = {\n    JSON:   ('json' : 'json'),\n    DOTIFY: ('dotify' : 'dotify'),\n    BASE64: ('base64' : 'base64')\n};\n\nexport const CONTEXT = WINDOW_TYPE;\n\nexport const WILDCARD = '*';\n\nexport const DEFAULT_DIMENSIONS = {\n    WIDTH:  '300px',\n    HEIGHT: '150px'\n};\n\nexport const EVENT = {\n    RENDER:   'zoid-render',\n    RENDERED: 'zoid-rendered',\n    DISPLAY:  'zoid-display',\n    ERROR:    'zoid-error',\n    CLOSE:    'zoid-close',\n    PROPS:    'zoid-props'\n};\n","/* @flow */\n\nimport { getDomain, isSameDomain, type CrossDomainWindowType } from 'cross-domain-utils/src';\n\nimport type { Component } from '../component';\nimport type { PropsType, MixedPropDefinitionType } from '../component/props';\n\nimport type { ChildHelpers } from './index';\n\nexport function normalizeChildProp<T, P>(component : Component<P>, props : (PropsType<P>), key : string, value : T, helpers : ChildHelpers<P>) : ?T  {\n\n    // $FlowFixMe\n    const prop : MixedPropDefinitionType<P> = component.getPropDefinition(key);\n\n    if (!prop) {\n        return value;\n    }\n\n    if (typeof prop.childDecorate === 'function') {\n        return prop.childDecorate({ value, ...helpers });\n    }\n\n    return value;\n}\n\n// eslint-disable-next-line max-params\nexport function normalizeChildProps<P>(parentComponentWindow : CrossDomainWindowType, component : Component<P>, props : (PropsType<P>), origin : string, helpers : ChildHelpers<P>, isUpdate : boolean = false) : (PropsType<P>) {\n\n    const result = {};\n\n    // $FlowFixMe\n    for (const key of Object.keys(props)) {\n        const prop = component.getPropDefinition(key);\n\n        if (prop && prop.sameDomain && (origin !== getDomain(window) || !isSameDomain(parentComponentWindow))) {\n            continue;\n        }\n\n        const value = normalizeChildProp(component, props, key, props[key], helpers);\n\n        result[key] = value;\n        if (prop && prop.alias && !result[prop.alias]) {\n            result[prop.alias] = value;\n        }\n    }\n\n    if (!isUpdate) {\n        for (const key of component.getPropNames()) {\n            if (!props.hasOwnProperty(key)) {\n                result[key] = normalizeChildProp(component, props, key, props[key], helpers);\n            }\n        }\n    }\n\n    // $FlowFixMe\n    return result;\n}\n","/* @flow */\n\nimport { inlineMemoize, stringifyError, base64decode } from 'belter/src';\n\nimport { ZOID } from '../constants';\nimport type { ChildPayload } from '../parent';\n\nfunction parseChildWindowName(windowName : string) : ChildPayload {\n    return inlineMemoize(parseChildWindowName, () => {\n        if (!windowName) {\n            throw new Error(`No window name`);\n        }\n    \n        const [ , zoidcomp, name, encodedPayload ] = windowName.split('__');\n    \n        if (zoidcomp !== ZOID) {\n            throw new Error(`Window not rendered by zoid - got ${ zoidcomp }`);\n        }\n    \n        if (!name) {\n            throw new Error(`Expected component name`);\n        }\n    \n        if (!encodedPayload) {\n            throw new Error(`Expected encoded payload`);\n        }\n    \n        try {\n            return JSON.parse(base64decode(encodedPayload));\n        } catch (err) {\n            throw new Error(`Can not decode window name payload: ${ encodedPayload }: ${ stringifyError(err) }`);\n        }\n    }, [ windowName ]);\n}\n\nexport function getChildPayload() : ?ChildPayload {\n    try {\n        return parseChildWindowName(window.name);\n    } catch (err) {\n        // pass\n    }\n}\n","/* @flow */\n/* eslint max-lines: 0 */\n\nimport { isSameDomain, matchDomain, getDomain, getOpener,\n    getNthParentFromTop, getAncestor, getAllFramesInWindow,\n    type CrossDomainWindowType, onCloseWindow } from 'cross-domain-utils/src';\nimport { markWindowKnown, deserializeMessage } from 'post-robot/src';\nimport { ZalgoPromise } from 'zalgo-promise/src';\nimport { extend, waitForDocumentBody, onResize, getElementSafe, assertExists } from 'belter/src';\n\nimport { globalFor } from '../lib';\nimport { CONTEXT, INITIAL_PROPS, WINDOW_REFERENCES } from '../constants';\nimport type { Component } from '../component';\nimport type { PropsType } from '../component/props';\nimport type { WindowRef, PropRef, ParentExportsType } from '../parent';\n\nimport { normalizeChildProps } from './props';\nimport { getChildPayload } from './window';\n\nexport * from './window';\n\nexport type ChildExportsType<P> = {|\n    updateProps : (props : (PropsType<P>)) => ZalgoPromise<void>,\n    close : () => ZalgoPromise<void>\n|};\n\nexport type ChildHelpers<P> = {|\n    close : () => ZalgoPromise<void>,\n    focus : () => ZalgoPromise<void>,\n    resize : ({ width : ?number, height : ?number }) => ZalgoPromise<void>,\n    onError : (mixed) => ZalgoPromise<void>,\n    onProps : ((PropsType<P>) => void) => void,\n    getParent : () => CrossDomainWindowType\n|};\n\n/*  Child Component\n    ---------------\n\n    This is the portion of code which runs inside the frame or popup window containing the component's implementation.\n\n    When the component author calls myComponent.attach(), it creates a new instance of ChildComponent, which is then\n    responsible for managing the state and messaging back up to the parent, and providing props for the component to\n    utilize.\n*/\n\nexport class ChildComponent<P> {\n\n    component : Component<P>\n    props : PropsType<P>\n    context : string\n    parent : ParentExportsType<P>\n    parentComponentWindow : CrossDomainWindowType\n\n    onPropHandlers : Array<(PropsType<P>) => void> // eslint-disable-line flowtype/no-mutable-array\n    autoResize : { width : boolean, height : boolean, element? : string }\n\n    constructor(component : Component<P>) {\n        ZalgoPromise.try(() => {\n            this.component = component;\n            this.onPropHandlers = [];\n            \n            const childPayload = getChildPayload();\n\n            if (!childPayload) {\n                throw new Error(`No child payload found`);\n            }\n\n            const { parent, domain, exports, context, props } = childPayload;\n\n            this.context = context;\n            this.parentComponentWindow = this.getParentComponentWindow(parent);\n            this.parent = deserializeMessage(this.parentComponentWindow, domain, exports);\n\n            this.checkParentDomain(domain);\n\n            const initialProps = this.getPropsByRef(this.parentComponentWindow, domain, props);\n            this.setProps(initialProps, domain);\n            markWindowKnown(this.parentComponentWindow);\n            \n            this.watchForClose();\n\n            return this.parent.init(this.buildExports());\n\n        }).then(() => {\n            return this.watchForResize();\n\n        }).catch(err => {\n            this.onError(err);\n        });\n    }\n\n    getHelpers() : ChildHelpers<P> {\n        return {\n            focus:         () => this.focus(),\n            close:         () => this.close(),\n            resize:        ({ width, height }) => this.resize({ width, height }),\n            onError:       (err) => this.onError(err),\n            onProps:       (handler) => this.onProps(handler),\n            getParent:     () => this.parentComponentWindow\n        };\n    }\n\n    checkParentDomain(domain : string) {\n        if (!matchDomain(this.component.allowedParentDomains, domain)) {\n            throw new Error(`Can not be rendered by domain: ${ domain }`);\n        }\n    }\n\n    onProps(handler : Function) {\n        this.onPropHandlers.push(handler);\n    }\n\n    getPropsByRef(parentComponentWindow : CrossDomainWindowType, domain : string, { type, value, uid } : PropRef) : (PropsType<P>) {\n        let props;\n\n        if (type === INITIAL_PROPS.RAW) {\n            props = value;\n        } else if (type === INITIAL_PROPS.UID) {\n            if (!isSameDomain(parentComponentWindow)) {\n                throw new Error(`Parent component window is on a different domain - expected ${ getDomain() } - can not retrieve props`);\n            }\n\n            const global = globalFor(parentComponentWindow);\n            props = assertExists('props', global && global.props[uid]);\n        }\n\n        if (!props) {\n            throw new Error(`Could not find props`);\n        }\n\n        return deserializeMessage(parentComponentWindow, domain, props);\n    }\n\n    getParentComponentWindow(ref : WindowRef) : CrossDomainWindowType {\n        const { type } = ref;\n    \n        if (type === WINDOW_REFERENCES.OPENER) {\n            return assertExists('opener', getOpener(window));\n    \n        } else if (type === WINDOW_REFERENCES.PARENT) {\n            // $FlowFixMe\n            const distance = ref.distance;\n            return assertExists('parent', getNthParentFromTop(window, distance));\n\n        } else if (type === WINDOW_REFERENCES.GLOBAL) {\n            // $FlowFixMe\n            const { uid } = ref;\n            const ancestor = getAncestor(window);\n\n            if (!ancestor) {\n                throw new Error(`Can not find ancestor window`);\n            }\n\n            for (const frame of getAllFramesInWindow(ancestor)) {\n                if (isSameDomain(frame)) {\n                    const global = globalFor(frame);\n\n                    if (global && global.windows && global.windows[uid]) {\n                        return global.windows[uid];\n                    }\n                }\n            }\n        }\n    \n        throw new Error(`Unable to find ${ type } parent component window`);\n    }\n\n    getProps() : PropsType<P> {\n        // $FlowFixMe\n        this.props = this.props || {};\n        return this.props;\n    }\n\n\n    setProps(props : PropsType<P>, origin : string, isUpdate : boolean = false) {\n        const helpers = this.getHelpers();\n        const existingProps = this.getProps();\n        const normalizedProps = normalizeChildProps(this.parentComponentWindow, this.component, props, origin, helpers, isUpdate);\n\n        extend(existingProps, normalizedProps);\n\n        for (const handler of this.onPropHandlers) {\n            handler.call(this, existingProps);\n        }\n    }\n\n    watchForClose() {\n        window.addEventListener('beforeunload', () => {\n            this.parent.checkClose.fireAndForget();\n        });\n\n        window.addEventListener('unload', () => {\n            this.parent.checkClose.fireAndForget();\n        });\n\n        onCloseWindow(this.parentComponentWindow, () => {\n            this.destroy();\n        });\n    }\n\n    getAutoResize() : { width : boolean, height : boolean, element : ?HTMLElement } {\n        let { width = false, height = false, element = 'body' } = this.autoResize || this.component.autoResize || {};\n        element = getElementSafe(element);\n        return { width, height, element };\n    }\n\n    watchForResize() : ?ZalgoPromise<void> {\n        return waitForDocumentBody().then(() => {\n            const { width, height, element } = this.getAutoResize();\n\n            if (!element || (!width && !height) || this.context === CONTEXT.POPUP) {\n                return;\n            }\n\n            onResize(element, ({ width: newWidth, height: newHeight }) => {\n                this.resize({\n                    width:  width ? newWidth : undefined,\n                    height: height ? newHeight : undefined\n                });\n            }, { width, height });\n        });\n    }\n\n    buildExports() : ChildExportsType<P> {\n\n        const self = this;\n\n        return {\n            updateProps(props : (PropsType<P>)) : ZalgoPromise<void> {\n                return ZalgoPromise.try(() => self.setProps(props, this.__origin__, true));\n            },\n\n            close() : ZalgoPromise<void> {\n                return ZalgoPromise.try(() => self.destroy());\n            }\n        };\n    }\n\n    resize({ width, height } : { width : ?number, height : ?number }) : ZalgoPromise<void> {\n        return this.parent.resize.fireAndForget({ width, height });\n    }\n\n    close() : ZalgoPromise<void> {\n        return this.parent.close();\n    }\n    \n    destroy() : ZalgoPromise<void> {\n        return ZalgoPromise.try(() => {\n            window.close();\n        });\n    }\n\n    focus() : ZalgoPromise<void> {\n        return ZalgoPromise.try(() => {\n            window.focus();\n        });\n    }\n\n    onError(err : mixed) : ZalgoPromise<void> {\n        return ZalgoPromise.try(() => {\n            if (this.parent && this.parent.onError) {\n                return this.parent.onError(err);\n            } else {\n                throw err;\n            }\n        });\n    }\n}\n","/* @flow */\n\nimport { ZalgoPromise } from 'zalgo-promise/src';\nimport { cleanUpWindow, ProxyWindow, toProxyWindow } from 'post-robot/src';\nimport { assertSameDomain } from 'cross-domain-utils/src';\nimport { iframe, popup, destroyElement, normalizeDimension, watchElementForClose,\n    awaitFrameWindow, uniqueID } from 'belter/src';\n\nimport { CONTEXT } from '../constants';\nimport { getProxyElement, type ProxyElement } from '../lib';\n\n\nexport type ContextDriverType = {|\n    openOnClick : boolean,\n    openFrame? : () => ProxyElement<HTMLIFrameElement>,\n    open : (?ProxyElement<HTMLIFrameElement>) => ZalgoPromise<ProxyWindow>,\n    openPrerenderFrame? : () => ProxyElement<HTMLIFrameElement>,\n    openPrerender : (ProxyWindow, ?ProxyElement<HTMLIFrameElement>) => ZalgoPromise<ProxyWindow>,\n    resize? : ({ width : ?number, height : ?number }) => void,\n    delegate : $ReadOnlyArray<string>\n|};\n\nexport const RENDER_DRIVERS : { [string] : ContextDriverType } = {};\n\nRENDER_DRIVERS[CONTEXT.IFRAME] = {\n    openOnClick: false,\n\n    openFrame() : ProxyElement<HTMLIFrameElement> {\n        return getProxyElement(iframe({\n            attributes: {\n                title: this.component.name,\n                ...this.component.attributes.iframe\n            }\n        }));\n    },\n\n    open(proxyFrame : ?ProxyElement<HTMLIFrameElement>) : ZalgoPromise<ProxyWindow> {\n        if (!proxyFrame) {\n            throw new Error(`Expected proxy frame to be passed`);\n        }\n\n        return proxyFrame.getElement().then(frame => {\n            return awaitFrameWindow(frame).then(win => {\n\n                const frameWatcher = watchElementForClose(frame, () => this.close());\n                this.clean.register(() => frameWatcher.cancel());\n                this.clean.register(() => destroyElement(frame));\n                this.clean.register(() => cleanUpWindow(win));\n\n                return toProxyWindow(win);\n            });\n        });\n    },\n\n    openPrerenderFrame() : ProxyElement<HTMLIFrameElement> {\n        return getProxyElement(iframe({\n            attributes: {\n                name:  `__zoid_prerender_frame__${ this.component.name }_${ uniqueID() }__`,\n                title: `prerender__${ this.component.name }`,\n                ...this.component.attributes.iframe\n            }\n        }));\n    },\n\n    openPrerender(proxyWin : ProxyWindow, proxyPrerenderFrame : ?ProxyElement<HTMLIFrameElement>) : ZalgoPromise<ProxyWindow> {\n        if (!proxyPrerenderFrame) {\n            throw new Error(`Expected proxy frame to be passed`);\n        }\n        \n        return proxyPrerenderFrame.getElement().then(prerenderFrame => {\n            this.clean.register(() => destroyElement(prerenderFrame));\n\n            return awaitFrameWindow(prerenderFrame).then(prerenderFrameWindow => {\n                return assertSameDomain(prerenderFrameWindow);\n            }).then(win => {\n                return toProxyWindow(win);\n            });\n        });\n    },\n\n    delegate: [\n        'getProxyContainer',\n        'renderContainer',\n        'openFrame',\n        'openPrerenderFrame',\n        'prerender',\n        'open',\n        'openPrerender'\n    ],\n\n    resize({ width, height } : { width : ?number, height : ?number }) {\n        if (this.proxyContainer) {\n            this.proxyContainer.resize({ width, height });\n        }\n    }\n};\n\nif (__ZOID__.__POPUP_SUPPORT__) {\n    RENDER_DRIVERS[CONTEXT.POPUP] = {\n        openOnClick: true,\n\n        open() : ZalgoPromise<ProxyWindow> {\n            return ZalgoPromise.try(() => {\n                let { width, height } = this.component.dimensions;\n\n                width = normalizeDimension(width, window.outerWidth);\n                height = normalizeDimension(height, window.outerWidth);\n\n                const win = popup('', {\n                    width,\n                    height,\n                    ...this.component.attributes.popup\n                });\n\n                this.clean.register(() => {\n                    win.close();\n                    cleanUpWindow(win);\n                });\n\n                return toProxyWindow(win);\n            });\n        },\n\n        openPrerender(proxyWin : ProxyWindow) : ZalgoPromise<ProxyWindow> {\n            return ZalgoPromise.try(() => {\n                return proxyWin;\n            });\n        },\n\n        delegate: [\n            'getProxyContainer',\n            'renderContainer',\n            'setProxyWin'\n        ]\n    };\n}\n","/* @flow */\n\nimport { ZalgoPromise } from 'zalgo-promise/src';\nimport { dotify, isDefined } from 'belter/src';\n\nimport type { Component } from '../component';\nimport type { BuiltInPropsDefinitionType, PropsInputType, PropsType, MixedPropDefinitionType } from '../component/props';\nimport { PROP_SERIALIZATION } from '../constants';\n\nimport type { ParentComponent, ParentHelpers } from './index';\n\n/*  Normalize Props\n    ---------------\n\n    Turn props into normalized values, using defaults, function options, etc.\n*/\n\nexport function normalizeProps<P>(component : Component<P>, instance : ParentComponent<P>, props : PropsInputType<P>, helpers : ParentHelpers<P>, isUpdate : boolean = false) : (PropsType<P>) { // eslint-disable-line complexity\n\n    // $FlowFixMe\n    props = props || {};\n    const result : $Shape<P> = { ...props }; // eslint-disable-line no-undef\n\n    const propNames = isUpdate\n        ? []\n        : [ ...component.getPropNames() ];\n\n    // $FlowFixMe\n    for (const key of Object.keys(props)) {\n        if (propNames.indexOf(key) === -1) {\n            propNames.push(key);\n        }\n    }\n\n    const aliases = [];\n\n    const { state, close, focus, onError } = helpers;\n\n    for (const key of propNames) {\n        const propDef = component.getPropDefinition(key);\n        // $FlowFixMe\n        let value = props[key];\n\n        if (!propDef) {\n            continue;\n        }\n\n        const alias = propDef.alias;\n        if (alias) {\n            if (!isDefined(value) && isDefined(props[alias])) {\n                value = props[alias];\n            }\n            aliases.push(alias);\n        }\n\n        if (propDef.value) {\n            value = propDef.value({ props: result, state, close, focus, onError });\n        }\n\n        if (!isDefined(value) && propDef.default) {\n            value = propDef.default({ props: result, state, close, focus, onError });\n        }\n\n        if (isDefined(value)) {\n            if (propDef.type === 'array' ? !Array.isArray(value) : (typeof value !== propDef.type)) {\n                throw new TypeError(`Prop is not of type ${ propDef.type }: ${ key }`);\n            }\n        }\n        \n        // $FlowFixMe\n        result[key] = value;\n    }\n\n    for (const alias of aliases) {\n        // $FlowFixMe\n        delete result[alias];\n    }\n\n    // $FlowFixMe\n    for (const key of Object.keys(result)) {\n        const propDef = component.getPropDefinition(key);\n        // $FlowFixMe\n        const value = result[key];\n\n        if (!propDef) {\n            continue;\n        }\n\n        if (isDefined(value) && propDef.validate) {\n            // $FlowFixMe\n            propDef.validate({ value, props: result });\n        }\n\n        if (isDefined(value) && propDef.decorate) {\n            // $FlowFixMe\n            result[key] = propDef.decorate({ value, props: result, state, close, focus, onError });\n        }\n    }\n\n    // $FlowFixMe\n    return result;\n}\n\n// $FlowFixMe\nfunction getQueryParam<T, P>(prop : MixedPropDefinitionType<P>, key : string, value : T) : ZalgoPromise<string> {\n    return ZalgoPromise.try(() => {\n        if (typeof prop.queryParam === 'function') {\n            return prop.queryParam({ value });\n        } else if (typeof prop.queryParam === 'string') {\n            return prop.queryParam;\n        } else {\n            return key;\n        }\n    });\n}\n\n// $FlowFixMe\nfunction getQueryValue<T, P>(prop : MixedPropDefinitionType<P>, key : string, value : T) : ZalgoPromise<mixed> {\n    return ZalgoPromise.try(() => {\n        if (typeof prop.queryValue === 'function' && isDefined(value)) {\n            return prop.queryValue({ value });\n        } else {\n            return value;\n        }\n    });\n}\n\nexport function propsToQuery<P>(propsDef : BuiltInPropsDefinitionType<P>, props : (PropsType<P>)) : ZalgoPromise<{ [string] : string }> {\n\n    const params = {};\n\n    return ZalgoPromise.all(Object.keys(props).map(key => {\n\n        const prop = propsDef[key];\n\n        if (!prop) {\n            return; // eslint-disable-line array-callback-return\n        }\n\n        return ZalgoPromise.resolve().then(() => {\n\n            const value = props[key];\n\n            if (!value) {\n                return;\n            }\n\n            if (!prop.queryParam) {\n                return;\n            }\n\n            return value;\n\n        }).then(value => {\n\n            if (value === null || typeof value === 'undefined') {\n                return;\n            }\n\n            return ZalgoPromise.all([\n                // $FlowFixMe\n                getQueryParam(prop, key, value),\n                // $FlowFixMe\n                getQueryValue(prop, key, value)\n            ]).then(([ queryParam, queryValue ]) => {\n\n                let result;\n\n                if (typeof queryValue === 'boolean') {\n                    result = queryValue.toString();\n                } else if (typeof queryValue === 'string') {\n                    result = queryValue.toString();\n                } else if (typeof queryValue === 'object' && queryValue !== null) {\n\n                    if (prop.serialization === PROP_SERIALIZATION.JSON) {\n                        result = JSON.stringify(queryValue);\n                    } else if (prop.serialization === PROP_SERIALIZATION.BASE64) {\n                        result = btoa(JSON.stringify(queryValue));\n                    } else if (prop.serialization === PROP_SERIALIZATION.DOTIFY || !prop.serialization) {\n                        result = dotify(queryValue, key);\n\n                        for (const dotkey of Object.keys(result)) {\n                            params[dotkey] = result[dotkey];\n                        }\n\n                        return;\n                    }\n\n                } else if (typeof queryValue === 'number') {\n                    result = queryValue.toString();\n                }\n\n                params[queryParam] = result;\n            });\n        });\n\n    })).then(() => {\n        return params;\n    });\n}\n","/* @flow */\n\nimport { type CrossDomainWindowType } from 'cross-domain-utils/src';\nimport { noop } from 'belter/src';\n\nimport { windowStore } from './global';\n\nexport function cleanUpWindow(win : CrossDomainWindowType) {\n    const requestPromises = windowStore('requestPromises');\n    for (const promise of requestPromises.get(win, [])) {\n        promise.reject(new Error(`Window cleaned up before response`)).catch(noop);\n    }\n}\n","/* @flow */\n/* eslint max-lines: 0 */\n\nimport { send, bridge, serializeMessage, ProxyWindow, toProxyWindow } from 'post-robot/src';\nimport { isSameDomain, matchDomain, getDomainFromUrl, isBlankDomain,\n    onCloseWindow, getDomain, type CrossDomainWindowType,\n    getDistanceFromTop, normalizeMockUrl, assertSameDomain } from 'cross-domain-utils/src';\nimport { ZalgoPromise } from 'zalgo-promise/src';\nimport { addEventListener, uniqueID, elementReady, writeElementToWindow, eventEmitter, type EventEmitterType,\n    noop, onResize, extend, extendUrl, appendChild, cleanup, type CleanupType, base64encode,\n    once, stringifyError, destroyElement, isDefined, getElementSafe } from 'belter/src';\n\nimport { ZOID, POST_MESSAGE, CONTEXT, EVENT,\n    INITIAL_PROPS, WINDOW_REFERENCES } from '../constants';\nimport type { Component, onErrorPropType } from '../component';\nimport { globalFor, getProxyElement, type ProxyElement } from '../lib';\nimport type { PropsInputType, PropsType } from '../component/props';\nimport type { ChildExportsType } from '../child';\nimport type { DimensionsType } from '../types';\n\nimport { RENDER_DRIVERS, type ContextDriverType } from './drivers';\nimport { propsToQuery, normalizeProps } from './props';\n\nexport type RenderOptionsType<P> = {|\n    uid : string,\n    props : PropsInputType<P>,\n    tag : string,\n    context : string,\n    close : (?string) => ZalgoPromise<void>,\n    focus : () => ZalgoPromise<ProxyWindow>,\n    doc : Document,\n    container? : HTMLElement,\n    dimensions : DimensionsType,\n    state : Object,\n    event : EventEmitterType,\n    frame : ?HTMLIFrameElement,\n    prerenderFrame : ?HTMLIFrameElement\n|};\n\nexport type ParentExportsType<P> = {|\n    init : (ChildExportsType<P>) => ZalgoPromise<void>,\n    close : () => ZalgoPromise<void>,\n    checkClose : () => ZalgoPromise<void>,\n    resize : ({ width? : ?number, height? : ?number }) => ZalgoPromise<void>,\n    onError : (mixed) => ZalgoPromise<void>\n|};\n\nexport type PropRef =\n    {| type : typeof INITIAL_PROPS.RAW, uid? : string, value? : string |};\n\nexport type WindowRef =\n    {| type : typeof WINDOW_REFERENCES.OPENER |} |\n    {| type : typeof WINDOW_REFERENCES.PARENT, distance : number |} |\n    {| type : typeof WINDOW_REFERENCES.GLOBAL, uid : string |};\n\nexport type ChildPayload = {|\n    uid : string,\n    tag : string,\n    context : $Values<typeof CONTEXT>,\n    domain : string,\n    parent : WindowRef,\n    props : PropRef,\n    exports : string\n|};\n\nexport type StateType = Object;\n\nexport type ParentHelpers<P> = {|\n    state : StateType,\n    close : () => ZalgoPromise<void>,\n    focus : () => ZalgoPromise<void>,\n    resize : ({ width : ?number, height : ?number }) => ZalgoPromise<void>,\n    onError : (mixed) => ZalgoPromise<void>,\n    updateProps : PropsInputType<P> => ZalgoPromise<void>,\n    event : EventEmitterType\n|};\n\nexport class ParentComponent<P> {\n\n    component : Component<P>\n    driver : ContextDriverType\n    clean : CleanupType\n    event : EventEmitterType\n\n    initPromise : ZalgoPromise<void>\n    \n    props : PropsType<P>\n    state : StateType\n    child : ?ChildExportsType<P>\n\n    proxyWin : ?ProxyWindow\n    proxyContainer : ?ProxyElement<HTMLElement>\n\n    constructor(component : Component<P>, props : PropsInputType<P>) {\n        try {\n            this.initPromise = new ZalgoPromise();\n\n            this.clean = cleanup(this);\n            this.state = {};\n\n            this.component = component;\n    \n            this.setupEvents(props.onError);\n            this.setProps(props);\n            this.component.registerActiveComponent(this);\n            this.clean.register(() => this.component.destroyActiveComponent(this));\n            this.watchForUnload();\n\n        } catch (err) {\n            this.onError(err).catch(noop);\n            throw err;\n        }\n    }\n\n    setupEvents(onError : ?onErrorPropType) {\n        this.event = eventEmitter();\n        \n        this.event.on(EVENT.RENDER,   () => this.props.onRender());\n        this.event.on(EVENT.DISPLAY,  () => this.props.onDisplay());\n        this.event.on(EVENT.RENDERED, () => this.props.onRendered());\n        this.event.on(EVENT.CLOSE,    () => this.props.onClose());\n        this.event.on(EVENT.PROPS,    (props) => this.props.onProps(props));\n\n        this.event.on(EVENT.ERROR, err => {\n            if (this.props && this.props.onError) {\n                return this.props.onError(err);\n            } else if (onError) {\n                return onError(err);\n            } else {\n                throw err;\n            }\n        });\n    }\n\n    render(target : CrossDomainWindowType, container : string | HTMLElement, context : $Values<typeof CONTEXT>) : ZalgoPromise<void> {\n        return ZalgoPromise.try(() => {\n            this.component.log(`render`);\n\n            this.driver = RENDER_DRIVERS[context];\n            const uid = `${ ZOID }-${ this.component.tag }-${ uniqueID() }`;\n            const domain = this.getDomain();\n            const initialDomain = this.getInitialDomain();\n            \n            this.component.checkAllowRender(target, domain, container);\n\n            if (target !== window) {\n                this.delegate(context, target);\n            }\n\n            const tasks = {};\n\n            tasks.init = this.initPromise;\n            tasks.buildUrl = this.buildUrl();\n            tasks.onRender = this.event.trigger(EVENT.RENDER);\n\n            tasks.getProxyContainer = this.getProxyContainer(container);\n\n            tasks.openFrame = this.openFrame();\n            tasks.openPrerenderFrame = this.openPrerenderFrame();\n\n            tasks.renderContainer = ZalgoPromise.all([ tasks.getProxyContainer, tasks.openFrame, tasks.openPrerenderFrame ]).then(([ proxyContainer, proxyFrame, proxyPrerenderFrame ]) => {\n                return this.renderContainer(proxyContainer, { context, uid, proxyFrame, proxyPrerenderFrame });\n            });\n\n            tasks.open = this.driver.openOnClick\n                ? this.open()\n                : tasks.openFrame.then(proxyFrame => this.open(proxyFrame));\n\n            tasks.openPrerender = ZalgoPromise.all([ tasks.open, tasks.openPrerenderFrame ]).then(([ proxyWin, proxyPrerenderFrame ]) => {\n                return this.openPrerender(proxyWin, proxyPrerenderFrame);\n            });\n\n            tasks.setState = ZalgoPromise.all([\n                tasks.open.then(proxyWin => {\n                    this.proxyWin = proxyWin;\n                    return this.setProxyWin(proxyWin);\n                }),\n                tasks.renderContainer.then(proxyContainer => {\n                    this.proxyContainer = proxyContainer;\n                })\n            ]);\n            \n            tasks.prerender = ZalgoPromise.all([ tasks.openPrerender, tasks.setState ]).then(([ proxyPrerenderWin ]) => {\n                return this.prerender(proxyPrerenderWin, { context, uid });\n            });\n\n            tasks.loadUrl = ZalgoPromise.all([ tasks.open, tasks.buildUrl, tasks.setWindowName, tasks.prerender ]).then(([ proxyWin, url ]) => {\n                return proxyWin.setLocation(url);\n            });\n\n            tasks.buildWindowName = tasks.open.then(proxyWin => {\n                return this.buildWindowName({ proxyWin, initialDomain, domain, target, context, uid });\n            });\n\n            tasks.setWindowName =  ZalgoPromise.all([ tasks.open, tasks.buildWindowName ]).then(([ proxyWin, windowName ]) => {\n                return proxyWin.setName(windowName);\n            });\n\n            tasks.watchForClose = tasks.open.then(proxyWin => {\n                return this.watchForClose(proxyWin);\n            });\n\n            tasks.onDisplay = tasks.prerender.then(() => {\n                return this.event.trigger(EVENT.DISPLAY);\n            });\n\n            tasks.openBridge = tasks.open.then(proxyWin => {\n                return this.openBridge(proxyWin, initialDomain, context);\n            });\n\n            tasks.runTimeout = tasks.loadUrl.then(() => {\n                return this.runTimeout();\n            });\n\n            tasks.onRender = tasks.init.then(() => {\n                return this.event.trigger(EVENT.RENDERED);\n            });\n\n            return ZalgoPromise.hash(tasks);\n            \n        }).catch(err => {\n            return ZalgoPromise.all([\n                this.onError(err),\n                this.destroy(err)\n            ]);\n        }).then(noop);\n    }\n\n    getProxyContainer(container : string | HTMLElement) : ZalgoPromise<ProxyElement<HTMLElement>> {\n        return ZalgoPromise.try(() => {\n            return elementReady(container);\n        }).then(containerElement => {\n            return getProxyElement(containerElement);\n        });\n    }\n\n    buildWindowName({ proxyWin, initialDomain, domain, target, uid, context } : { proxyWin : ProxyWindow, initialDomain : string, domain : string | RegExp, target : CrossDomainWindowType, context : $Values<typeof CONTEXT>, uid : string }) : string {\n        const childPayload = this.buildChildPayload({ proxyWin, initialDomain, domain, target, context, uid });\n        return `__${ ZOID }__${ this.component.name }__${ base64encode(JSON.stringify(childPayload)) }__`;\n    }\n\n    getPropsRef(proxyWin : ProxyWindow, target : CrossDomainWindowType, domain : string | RegExp, uid : string) : PropRef {\n        const value = serializeMessage(proxyWin, domain, this.getPropsForChild(domain));\n\n        const propRef = isSameDomain(target)\n            ? { type: INITIAL_PROPS.RAW, value }\n            : { type: INITIAL_PROPS.UID, uid };\n\n        if (propRef.type === INITIAL_PROPS.UID) {\n            const global = globalFor(window);\n            global.props = global.props || {};\n            global.props[uid] = value;\n\n            this.clean.register(() => {\n                delete global.props[uid];\n            });\n        }\n\n        return propRef;\n    }\n\n    buildChildPayload({ proxyWin, initialDomain, domain, target = window, context, uid } : { proxyWin : ProxyWindow, initialDomain : string, domain : string | RegExp, target : CrossDomainWindowType, context : $Values<typeof CONTEXT>, uid : string } = {}) : ChildPayload {\n        return {\n            uid,\n            context,\n            domain:  getDomain(window),\n            tag:     this.component.tag,\n            parent:  this.getWindowRef(target, initialDomain, uid, context),\n            props:   this.getPropsRef(proxyWin, target, domain, uid),\n            exports: serializeMessage(proxyWin, domain, this.buildParentExports(proxyWin))\n        };\n    }\n\n    setProxyWin(proxyWin : ProxyWindow) : ZalgoPromise<void> {\n        return ZalgoPromise.try(() => {\n            this.proxyWin = proxyWin;\n        });\n    }\n\n    getHelpers() : ParentHelpers<P> {\n        return {\n            state:       this.state,\n            event:       this.event,\n            close:       () => this.close(),\n            focus:       () => this.focus(),\n            resize:      ({ width, height }) => this.resize({ width, height }),\n            onError:     (err) => this.onError(err),\n            updateProps: (props) => this.updateProps(props)\n        };\n    }\n\n    setProps(props : PropsInputType<P>, isUpdate : boolean = false) {\n        if (this.component.validate) {\n            this.component.validate({ props });\n        }\n\n        const helpers = this.getHelpers();\n\n        // $FlowFixMe\n        this.props = this.props || {};\n        extend(this.props, normalizeProps(this.component, this, props, helpers, isUpdate));\n\n        for (const key of this.component.getPropNames()) {\n            const propDef = this.component.getPropDefinition(key);\n            if (propDef.required !== false && !isDefined(this.props[key])) {\n                throw new Error(`Expected prop \"${ key }\" to be defined`);\n            }\n        }\n    }\n\n    buildUrl() : ZalgoPromise<string> {\n        return propsToQuery({ ...this.component.props, ...this.component.builtinProps }, this.props).then(query => {\n            return extendUrl(normalizeMockUrl(this.component.getUrl(this.props)), { query });\n        });\n    }\n\n    getDomain() : string | RegExp {\n        return this.component.getDomain(this.props);\n    }\n\n    getInitialDomain() : string {\n        return this.component.getInitialDomain(this.props);\n    }\n\n    getPropsForChild(domain : string | RegExp) : (PropsType<P>) {\n        const result = {};\n\n        for (const key of Object.keys(this.props)) {\n            const prop = this.component.getPropDefinition(key);\n\n            if (prop && prop.sendToChild === false) {\n                continue;\n            }\n\n            if (prop && prop.sameDomain && !matchDomain(domain, getDomain(window))) {\n                continue;\n            }\n\n            // $FlowFixMe\n            result[key] = this.props[key];\n        }\n\n        // $FlowFixMe\n        return result;\n    }\n\n    updateProps(props : PropsInputType<P>) : ZalgoPromise<void> {\n        this.setProps(props, true);\n\n        return this.initPromise.then(() => {\n            if (this.child) {\n                return this.child.updateProps(this.getPropsForChild(this.getDomain()));\n            }\n        });\n    }\n\n    openFrame() : ZalgoPromise<?ProxyElement<HTMLIFrameElement>> {\n        return ZalgoPromise.try(() => {\n            if (this.driver.openFrame) {\n                return this.driver.openFrame.call(this);\n            }\n        });\n    }\n\n    openPrerenderFrame() : ZalgoPromise<?ProxyElement<HTMLIFrameElement>> {\n        return ZalgoPromise.try(() => {\n            if (this.driver.openPrerenderFrame) {\n                return this.driver.openPrerenderFrame.call(this);\n            }\n        });\n    }\n    \n    open(proxyFrame : ?ProxyElement<HTMLIFrameElement>) : ZalgoPromise<ProxyWindow> {\n        return ZalgoPromise.try(() => {\n            this.component.log(`open`);\n\n            const windowProp = this.props.window;\n\n            if (windowProp) {\n                this.clean.register(() => windowProp.close());\n                return toProxyWindow(windowProp);\n            }\n\n            return this.driver.open.call(this, proxyFrame);\n\n        }).then(proxyWin => {\n            this.proxyWin = proxyWin;\n            return proxyWin;\n        });\n    }\n\n    openPrerender(proxyWin : ProxyWindow, proxyPrerenderFrame : ?ProxyElement<HTMLIFrameElement>) : ZalgoPromise<ProxyWindow> {\n        return ZalgoPromise.try(() => {\n            return this.driver.openPrerender.call(this, proxyWin, proxyPrerenderFrame);\n        });\n    }\n\n    focus() : ZalgoPromise<void> {\n        return ZalgoPromise.try(() => {\n            if (this.proxyWin) {\n                return this.proxyWin.focus().then(noop);\n            }\n        });\n    }\n\n    delegate(context : $Values<typeof CONTEXT>, target : CrossDomainWindowType) {\n        this.component.log(`delegate`);\n\n        const props = {};\n        for (const propName of this.component.getPropNames()) {\n            if (this.component.getPropDefinition(propName).allowDelegate) {\n                props[propName] = this.props[propName];\n            }\n        }\n\n        const overridesPromise = send(target, `${ POST_MESSAGE.DELEGATE }_${ this.component.name }`, {\n            context,\n            props,\n            overrides: {\n                event:   this.event,\n                close:   () => this.close(),\n                onError: (err) => this.onError(err)\n            }\n\n        }).then(({ data }) => {\n            this.clean.register(data.destroy);\n            return data.overrides;\n\n        }).catch(err => {\n            throw new Error(`Unable to delegate rendering. Possibly the component is not loaded in the target window.\\n\\n${ stringifyError(err) }`);\n        });\n\n        for (const key of this.driver.delegate) {\n            // $FlowFixMe\n            this[key] = function overriddenFunction() : ZalgoPromise<mixed> {\n                return overridesPromise.then(overrides => {\n                    return overrides[key].apply(this, arguments);\n                });\n            };\n        }\n    }\n\n    getWindowRef(target : CrossDomainWindowType, domain : string, uid : string, context : $Values<typeof CONTEXT>) : WindowRef {\n        \n        if (domain === getDomain(window)) {\n            const global = globalFor(window);\n            global.windows = global.windows || {};\n            global.windows[uid] = window;\n            this.clean.register(() => {\n                delete global.windows[uid];\n            });\n    \n            return { type: WINDOW_REFERENCES.GLOBAL, uid };\n        }\n\n        if (context === CONTEXT.POPUP) {\n            return { type: WINDOW_REFERENCES.OPENER };\n        }\n\n        return { type: WINDOW_REFERENCES.PARENT, distance: getDistanceFromTop(window) };\n    }\n\n    watchForClose(proxyWin : ProxyWindow) : ZalgoPromise<void> {\n        return proxyWin.awaitWindow().then(win => {\n            const closeWindowListener = onCloseWindow(win, () => {\n                this.component.log(`detect_close_child`);\n                return this.close();\n            }, 2000);\n\n            this.clean.register(closeWindowListener.cancel);\n        });\n    }\n\n    watchForUnload() {\n        const unloadWindowListener = addEventListener(window, 'unload', once(() => {\n            this.component.log(`navigate_away`);\n            this.destroy(new Error(`Window navigated away`));\n        }));\n\n        this.clean.register(unloadWindowListener.cancel);\n    }\n\n    runTimeout() : ZalgoPromise<void> {\n        return ZalgoPromise.try(() => {\n            const timeout = this.props.timeout;\n\n            if (timeout) {\n                return this.initPromise.timeout(timeout, new Error(`Loading component timed out after ${ timeout } milliseconds`));\n            }\n        });\n    }\n\n    initChild(child : ChildExportsType<P>) : ZalgoPromise<void> {\n        return ZalgoPromise.try(() => {\n            this.clean.set('child', child);\n            this.initPromise.resolve();\n        });\n    }\n\n    buildParentExports(win : ProxyWindow) : ParentExportsType<P> {\n        const onError    = (err) => this.onError(err);\n        const init       = (child) => this.initChild(child);\n        const close      = () => this.close();\n        const checkClose = () => this.checkClose(win);\n        const resize     = ({ width, height }) => this.resize({ width, height });\n\n        init.onError = onError;\n\n        return { init, close, checkClose, resize, onError };\n    }\n\n    resize({ width, height } : { width? : ?number, height? : ?number }) : ZalgoPromise<void> {\n        return ZalgoPromise.try(() => {\n            if (this.driver.resize) {\n                return this.driver.resize.call(this, { width, height });\n            }\n        });\n    }\n\n    checkClose(win : ProxyWindow) : ZalgoPromise<void> {\n        return win.isClosed().then(closed => {\n            if (closed) {\n                return this.close();\n            }\n\n            return ZalgoPromise.delay(200)\n                .then(() => win.isClosed())\n                .then(secondClosed => {\n                    if (secondClosed) {\n                        return this.close();\n                    }\n                });\n        });\n    }\n\n    close() : ZalgoPromise<void> {\n        return ZalgoPromise.try(() => {\n            this.component.log(`close`);\n            return this.event.trigger(EVENT.CLOSE);\n\n        }).then(() => {\n            if (this.child) {\n                this.child.close.fireAndForget().catch(noop);\n            }\n\n            return this.destroy(new Error(`Window closed`));\n        });\n    }\n\n    prerender(proxyPrerenderWin : ProxyWindow, { context, uid } : { context : $Values<typeof CONTEXT>, uid : string }) : ZalgoPromise<void> {\n        return ZalgoPromise.try(() => {\n            const prerenderTemplate = this.component.prerenderTemplate;\n\n            if (!prerenderTemplate) {\n                return;\n            }\n\n            let prerenderWindow = proxyPrerenderWin.getWindow();\n\n            if (!prerenderWindow || !isSameDomain(prerenderWindow) || !isBlankDomain(prerenderWindow)) {\n                return;\n            }\n\n            prerenderWindow = assertSameDomain(prerenderWindow);\n    \n            const doc = prerenderWindow.document;\n            const el = this.renderTemplate(prerenderTemplate, { context, uid, doc });\n\n            if (!el) {\n                return;\n            }\n\n            if (el.ownerDocument !== doc) {\n                throw new Error(`Expected prerender template to have been created with document from child window`);\n            }\n\n            writeElementToWindow(prerenderWindow, el);\n\n            let { width = false, height = false, element = 'body' } = this.component.autoResize || {};\n            element = getElementSafe(element, doc);\n            \n            if (element && (width || height)) {\n                onResize(element, ({ width: newWidth, height: newHeight }) => {\n                    this.resize({\n                        width:  width ? newWidth : undefined,\n                        height: height ? newHeight : undefined\n                    });\n                }, { width, height, win: prerenderWindow });\n            }\n        });\n    }\n\n    renderTemplate(renderer : (RenderOptionsType<P>) => ?HTMLElement, { context, uid, container, doc, frame, prerenderFrame } : { context : $Values<typeof CONTEXT>, uid : string, container? : HTMLElement, doc : Document, frame? : ?HTMLIFrameElement, prerenderFrame? : ?HTMLIFrameElement }) : ?HTMLElement {\n        // $FlowFixMe\n        return renderer.call(this, {\n            container,\n            context,\n            uid,\n            doc,\n            frame,\n            prerenderFrame,\n            focus:      () => this.focus(),\n            close:      () => this.close(),\n            state:      this.state,\n            props:      this.props,\n            tag:        this.component.tag,\n            dimensions: this.component.dimensions,\n            event:      this.event\n        });\n    }\n\n    renderContainer(proxyContainer : ProxyElement<HTMLElement>, { proxyFrame, proxyPrerenderFrame, context, uid } : { context : $Values<typeof CONTEXT>, uid : string, proxyFrame : ?ProxyElement<HTMLIFrameElement>, proxyPrerenderFrame : ?ProxyElement<HTMLIFrameElement> }) : ZalgoPromise<?ProxyElement<HTMLElement>> {\n        return ZalgoPromise.all([\n            proxyContainer.getElement().then(elementReady),\n            // $FlowFixMe\n            proxyFrame ? proxyFrame.getElement() : null,\n            // $FlowFixMe\n            proxyPrerenderFrame ? proxyPrerenderFrame.getElement() : null\n        ]).then(([ container, frame, prerenderFrame ]) => {\n            const innerContainer = this.renderTemplate(this.component.containerTemplate, { context, uid, container, frame, prerenderFrame, doc: document });\n            if (innerContainer) {\n                appendChild(container, innerContainer);\n                this.clean.register(() => destroyElement(innerContainer));\n                this.proxyContainer = getProxyElement(innerContainer);\n                return this.proxyContainer;\n            }\n        });\n    }\n\n    destroy(err : mixed = new Error(`Component destroyed before render complete`)) : ZalgoPromise<void> {\n        return ZalgoPromise.try(() => {\n            this.component.log(`destroy`);\n            this.initPromise.asyncReject(err);\n            return this.clean.all();\n        });\n    }\n\n    onError(err : mixed) : ZalgoPromise<void> {\n        // eslint-disable-next-line promise/no-promise-in-callback\n        return ZalgoPromise.try(() => {\n            this.initPromise.asyncReject(err);\n            return this.event.trigger(EVENT.ERROR, err);\n\n        }).then(() => {\n            return this.initPromise;\n            \n        }).then(() => {\n            throw err;\n        });\n    }\n\n    openBridge(proxyWin : ProxyWindow, domain : string, context : $Values<typeof CONTEXT>) : ?ZalgoPromise<?CrossDomainWindowType> {\n        if (__POST_ROBOT__.__IE_POPUP_SUPPORT__) {\n            return ZalgoPromise.try(() => {\n                return proxyWin.awaitWindow();\n                \n            }).then(win => {\n                if (!bridge || !bridge.needsBridge({ win, domain }) || bridge.hasBridge(domain, domain)) {\n                    return;\n                }\n\n                const bridgeUrl = this.component.getBridgeUrl();\n\n                if (!bridgeUrl) {\n                    throw new Error(`Bridge needed to render ${ context }`);\n                }\n\n                const bridgeDomain = getDomainFromUrl(bridgeUrl);\n                bridge.linkUrl(win, domain);\n                return bridge.openBridge(normalizeMockUrl(bridgeUrl), bridgeDomain);\n            });\n        }\n    }\n}\n","/* @flow */\n\nimport { onCloseWindow, type CrossDomainWindowType } from 'cross-domain-utils/src';\nimport { ZalgoPromise } from 'zalgo-promise/src';\nimport { ProxyWindow } from 'post-robot/src';\nimport { cleanup, type CleanupType, type EventEmitterType } from 'belter/src';\n\nimport { ParentComponent } from '../parent';\nimport { RENDER_DRIVERS, type ContextDriverType } from '../parent/drivers';\nimport type { Component } from '../component';\n\nexport type DelegatePropsType = {|\n    onClose : () => ?ZalgoPromise<void>,\n    onDisplay : () => ?ZalgoPromise<void>,\n    window : ?ProxyWindow\n|};\n\nexport type DelegateOptionsType = {|\n    context : string,\n    props : DelegatePropsType,\n    overrides : {\n        close : () => ZalgoPromise<void>,\n        onError : (mixed) => ZalgoPromise<void>,\n        event : EventEmitterType\n    }\n|};\n\nexport type DelegateReturnType = {|\n    overrides : Object,\n    destroy : () => ZalgoPromise<void>\n|};\n\nexport class DelegateComponent<P>  {\n\n    component : Component<P>\n    source : CrossDomainWindowType\n    context : string\n    driver : ContextDriverType\n    props : DelegatePropsType\n    clean : CleanupType\n\n    focus : () => ZalgoPromise<void>\n    resize : ({ width? : ?number, height? : ?number }) => ZalgoPromise<void>\n    renderTemplate : Function\n\n    close : () => ZalgoPromise<void>\n    onError : (mixed) => ZalgoPromise<void>\n    event : EventEmitterType\n\n    constructor(component : Component<P>, source : CrossDomainWindowType, options : DelegateOptionsType) {\n        this.component = component;\n        this.context = options.context;\n        this.driver = RENDER_DRIVERS[options.context];\n        this.clean = cleanup(this);\n        \n        this.focus = ParentComponent.prototype.focus;\n        this.resize = ParentComponent.prototype.resize;\n        this.renderTemplate = ParentComponent.prototype.renderTemplate;\n\n        // $FlowFixMe\n        this.props = {};\n        for (const propName of Object.keys(options.props)) {\n            const propDef = this.component.getPropDefinition(propName);\n            if (propDef && propDef.allowDelegate && options.props[propName]) {\n                // $FlowFixMe\n                this.props[propName] = options.props[propName];\n            }\n        }\n\n        this.close   = options.overrides.close;\n        this.onError = options.overrides.onError;\n        this.event   = options.overrides.event;\n\n        this.component.registerActiveComponent(this);\n        this.clean.register(() => this.component.destroyActiveComponent(this));\n\n        this.watchForSourceClose(source);\n    }\n\n    getDelegate() : DelegateReturnType {\n        return {\n            overrides: this.getOverrides(),\n            destroy:   () => this.destroy()\n        };\n    }\n\n    watchForSourceClose(source : CrossDomainWindowType) {\n        const closeSourceWindowListener = onCloseWindow(source, () => this.destroy(), 3000);\n        this.clean.register(closeSourceWindowListener.cancel);\n    }\n\n    getOverrides() : { [string] : mixed } {\n        const overrides = {};\n        const self = this;\n\n        for (const key of this.driver.delegate) {\n            overrides[key] = function delegateOverride() : mixed {\n                // $FlowFixMe\n                return ParentComponent.prototype[key].apply(self, arguments);\n            };\n            overrides[key].__name__ = key;\n        }\n\n        return overrides;\n    }\n\n    destroy() : ZalgoPromise<void> {\n        return this.clean.all();\n    }\n}\n","export default function _inheritsLoose(subClass, superClass) {\n  subClass.prototype = Object.create(superClass.prototype);\n  subClass.prototype.constructor = subClass;\n  subClass.__proto__ = superClass;\n}","/* @flow */\n/* eslint react/no-deprecated: off, react/no-find-dom-node: off, react/display-name: off, react/no-did-mount-set-state: off, react/destructuring-assignment: off, react/prop-types: off */\n\nimport { extend, noop } from 'belter/src';\n\nimport type { Component, ComponentDriverType } from '../component';\nimport { CONTEXT } from '../constants';\n\ndeclare class ReactClassType {\n\n}\n\ntype ReactElementType = {|\n\n|};\n\ndeclare class __ReactComponent {\n\n}\n\ntype ReactType = {|\n    Component : __ReactComponent,\n    createClass : ({ render : () => ReactElementType, componentDidMount : () => void, componentDidUpdate : () => void }) => (typeof ReactClassType),\n    createElement : (string, ?{ [string] : mixed }, ...children : $ReadOnlyArray<ReactElementType>) => ReactElementType\n|};\n\ntype ReactDomType = {|\n    findDOMNode : (typeof ReactClassType) => HTMLElement\n|};\n\ntype ReactLibraryType = {|\n    React : ReactType,\n    ReactDOM : ReactDomType\n|};\n\nexport const react : ComponentDriverType<*, ReactLibraryType> = {\n\n    register(component : Component<*>, { React, ReactDOM } : ReactLibraryType) : (typeof ReactClassType) {\n\n        // $FlowFixMe\n        return class extends React.Component {\n            render() : ReactElementType {\n                return React.createElement('div', null);\n            }\n\n            componentDidMount() {\n                component.log(`instantiate_react_component`);\n\n                // $FlowFixMe\n                const el = ReactDOM.findDOMNode(this);\n\n                const parent = component.init(extend({}, this.props));\n                parent.render(el, CONTEXT.IFRAME);\n                this.setState({ parent });\n            }\n\n            componentDidUpdate() {\n\n                if (this.state && this.state.parent) {\n                    this.state.parent.updateProps(extend({}, this.props)).catch(noop);\n                }\n            }\n        };\n    }\n};\n","/* @flow */\n\nimport { extend, noop } from 'belter/src';\n\nimport type { Component, ComponentDriverType } from '../component';\nimport { CONTEXT } from '../constants';\n\ntype VueComponent = {|\n    render : (Function) => Element,\n    inheritAttrs : boolean,\n    mounted : () => void,\n    watch : {|\n        $attrs : {|\n            deep : boolean,\n            handler : () => void\n        |}\n    |}\n|};\n\ntype RegisteredVueComponent = {|\n    \n|};\n\ntype VueType = {|\n    component : (string, VueComponent) => RegisteredVueComponent\n|};\n\nexport const vue : ComponentDriverType<*, VueType> = {\n\n    register<P>(component : Component<P>, Vue : VueType) : RegisteredVueComponent {\n\n        return Vue.component(component.tag, {\n            render(createElement) : Element {\n                return createElement('div');\n            },\n\n            inheritAttrs: false,\n\n            mounted() {\n                const el = this.$el;\n\n                // $FlowFixMe\n                this.parent = component.init(extend({}, this.$attrs));\n                this.parent.render(el, CONTEXT.IFRAME);\n            },\n\n            watch: {\n                $attrs: {\n                    handler: function handler() {\n                        if (this.parent && this.$attrs) {\n                            this.parent.updateProps(extend({}, this.$attrs)).catch(noop);\n                        }\n                    },\n                    deep: true\n                }\n            }\n        });\n    }\n};\n","/* @flow */\n\nimport { dasherizeToCamel, replaceObject, noop } from 'belter/src';\n\nimport type { Component, ComponentDriverType } from '../component';\nimport { CONTEXT } from '../constants';\n\ntype AngularModule = {|\n    directive : (string, () => {\n        scope : { [string] : '=' | '@' },\n        restrict : string,\n        controller : $ReadOnlyArray<string | Function>\n    }) => AngularModule\n|};\n\ntype Angular = {|\n    module : (string, $ReadOnlyArray<string>) => AngularModule\n|};\n\nexport const angular : ComponentDriverType<*, Angular> = {\n\n    register(component : Component<*>, ng : Angular) : AngularModule {\n\n        const module = ng.module(component.tag, []).directive(dasherizeToCamel(component.tag), () => {\n\n            const scope = {};\n\n            for (const key of component.getPropNames()) {\n                scope[key] = '=';\n            }\n\n            scope.props = '=';\n\n            return {\n                scope,\n\n                restrict: 'E',\n\n                controller: [ '$scope', '$element', ($scope, $element) => {\n                    component.log(`instantiate_angular_component`);\n\n                    function safeApply() {\n                        if ($scope.$root.$$phase !== '$apply' && $scope.$root.$$phase !== '$digest') {\n                            try {\n                                $scope.$apply();\n                            } catch (err) {\n                                // pass\n                            }\n                        }\n                    }\n\n                    const getProps = () => {\n                        return replaceObject($scope.props, item => {\n                            if (typeof item === 'function') {\n                                return function angularWrapped() : mixed {\n                                    const result = item.apply(this, arguments);\n                                    safeApply();\n                                    return result;\n                                };\n                            }\n                            return item;\n                        });\n                    };\n\n                    const instance = component.init(getProps());\n                    instance.render($element[0], CONTEXT.IFRAME);\n\n                    $scope.$watch(() => {\n                        instance.updateProps(getProps()).catch(noop);\n                    });\n                } ]\n            };\n        });\n\n        return module;\n    }\n};\n","/* @flow */\n/* eslint new-cap: 0 */\n\nimport { replaceObject } from 'belter/src';\n\nimport type { Component, ComponentDriverType } from '../component';\nimport { CONTEXT } from '../constants';\n\ntype Angular2Injection = {||};\n\ntype Angular2Component = {||};\n\ntype Angular2Module = {||};\n\ntype Angular2 = {|\n    Component : ({ selector : string, template : string, inputs : $ReadOnlyArray<string> }) => {\n        Class : ({ constructor : $ReadOnlyArray<Angular2Injection | Function>, ngOnInit : () => void, ngDoCheck : () => void }) => Angular2Component\n    },\n    NgModule : ({ declarations : $ReadOnlyArray<Angular2Component>, exports : $ReadOnlyArray<Angular2Component> }) => {\n        Class : ({ constructor : () => void }) => Angular2Module\n    },\n    ElementRef : Angular2Injection,\n    NgZone : Angular2Injection\n|};\n\nconst equals = (obj1, obj2) => {\n    const checked = {};\n\n    for (const key in obj1) {\n        if (obj1.hasOwnProperty(key)) {\n            checked[key] = true;\n\n            if (obj1[key] !== obj2[key]) {\n                return false;\n            }\n        }\n    }\n\n    for (const key in obj2) {\n        if (!checked[key]) {\n            return false;\n        }\n    }\n\n    return true;\n};\n\nexport const angular2 : ComponentDriverType<*, Angular2> = {\n\n    register(zoid : Component<*>, { Component : AngularComponent, NgModule, ElementRef, NgZone }) : Angular2Module {\n\n        zoid.log('initializing angular2 component');\n\n        const getProps = (component) => {\n            return replaceObject({ ...component.internalProps, ...component.props }, item => {\n                if (typeof item === 'function') {\n                    return function angular2Wrapped() : void {\n                        return component.zone.run(() => item.apply(this, arguments));\n                    };\n                }\n                return item;\n            });\n        };\n\n        const ComponentInstance =\n            AngularComponent({\n                selector: zoid.tag,\n                template: '<div></div>',\n                inputs:   [ 'props' ]\n            }).Class({\n                constructor: [ ElementRef, NgZone, function angularConstructor(elementRef, zone) {\n                    this._props = {};\n                    this.elementRef = elementRef;\n                    this.zone = zone;\n                } ],\n                ngOnInit () {\n                    const targetElement = this.elementRef.nativeElement;\n                    \n                    this.parent = zoid.init(getProps(this));\n                    this.parent.render(targetElement, CONTEXT.IFRAME);\n                },\n                ngDoCheck() {\n                    if (this.parent && !equals(this._props, this.props)) {\n                        this._props = { ...this.props };\n                        this.parent.updateProps(getProps(this));\n                    }\n                }\n            });\n\n\n        const ModuleInstance = NgModule({\n            declarations: [ ComponentInstance ],\n            exports:      [ ComponentInstance ]\n        }).Class({\n            constructor () {\n                // pass\n            }\n        });\n\n        return ModuleInstance;\n    }\n};\n","/* @flow */\n\nexport type NodePropsType = { [string] : mixed };\n// eslint-disable-next-line no-use-before-define\nexport type NodeType = ElementNode | TextNode | FragmentNode;\n// eslint-disable-next-line no-use-before-define\nexport type NodeChildrenType = $ReadOnlyArray<ElementNode | TextNode>;\nexport type NodeRenderer<T> = (string, NodePropsType, NodeChildrenType) => T;\nexport type NodeRendererFactory<T, O = Object> = (O | void) => NodeRenderer<T>;\n\nclass Node {\n    isElementNode() : boolean {\n        return false;\n    }\n\n    isTextNode() : boolean {\n        return false;\n    }\n\n    isFragmentNode() : boolean {\n        return false;\n    }\n}\n\nexport class ElementNode extends Node {\n    name : string\n    props : NodePropsType\n    children : NodeChildrenType\n    onRender : ?<T>(T) => void // eslint-disable-line no-undef\n\n    constructor(name : string, props : NodePropsType, children : NodeChildrenType) {\n        super();\n        this.name = name;\n        this.props = props;\n        this.children = children;\n\n        if (typeof props.onRender === 'function') {\n            this.onRender = props.onRender;\n            delete props.onRender;\n        }\n    }\n\n    getTag() : string {\n        return this.name;\n    }\n\n    isTag(name : string) : boolean {\n        return name === this.name;\n    }\n\n    isElementNode() : boolean {\n        return true;\n    }\n\n    render<T>(renderer : NodeRenderer<T>) : T {\n        const element = renderer(this.name, this.props, this.children);\n        if (this.onRender) {\n            this.onRender(element);\n        }\n        return element;\n    }\n\n    getText() : string {\n        throw new Error(`Can not get text of an element node`);\n    }\n}\n\nexport class TextNode extends Node {\n    text : string\n\n    constructor(text : string) {\n        super();\n        this.text = text;\n    }\n\n    getTag() : string {\n        throw new Error(`Can not get tag of text node`);\n    }\n\n    isTag(name : string) : boolean { // eslint-disable-line no-unused-vars\n        throw new Error(`Can not check tag of text node`);\n    }\n\n    isTextNode() : boolean {\n        return true;\n    }\n\n    render<T>(renderer : NodeRenderer<T>) : T { // eslint-disable-line no-unused-vars\n        throw new Error(`Can not render a text node`);\n    }\n\n    getText() : string {\n        return this.text;\n    }\n}\n\nexport class FragmentNode extends Node {\n    children : NodeChildrenType\n\n    constructor(children : NodeChildrenType) {\n        super();\n        this.children = children;\n    }\n\n    getTag() : string {\n        throw new Error(`Can not get tag of fragment node`);\n    }\n\n    isTag(name : string) : boolean { // eslint-disable-line no-unused-vars\n        throw new Error(`Can not check tag of fragment node`);\n    }\n\n    isFragmentNode() : boolean {\n        return true;\n    }\n\n    render<T>(renderer : NodeRenderer<T>) : $ReadOnlyArray<T> { // eslint-disable-line no-unused-vars\n        throw new Error(`Can not render a fragment node`);\n    }\n\n    getText() : string {\n        throw new Error(`Can not get text of a fragment node`);\n    }\n}\n\ntype JsxChildType = $ReadOnlyArray<JsxChildType> | NodeType | string;\ntype NullableJsxChildType = $ReadOnlyArray<NullableJsxChildType> | NodeType | string | null | void;\n\nfunction normalizeChild(child : NullableJsxChildType) : NodeType | void {\n    if (typeof child === 'string') {\n        return new TextNode(child);\n\n    } else if (child instanceof ElementNode || child instanceof TextNode || child instanceof FragmentNode) {\n        return child;\n\n    } else if (Array.isArray(child)) {\n        return new FragmentNode(normalizeChildren(child)); // eslint-disable-line no-use-before-define\n\n    } else if (child === null || typeof child === 'undefined') {\n        return; // eslint-disable-line no-useless-return\n\n    } else {\n        throw new Error(`Child node must be string or instance of jsx-pragmatic node; got ${ typeof child }`);\n    }\n}\n\nfunction normalizeChildren(children : $ReadOnlyArray<NullableJsxChildType>) : NodeChildrenType {\n    const result = [];\n\n    for (const child of children) {\n        const normalizedChild = normalizeChild(child);\n\n        if (!normalizedChild) {\n            continue;\n        }\n\n        if (normalizedChild instanceof FragmentNode) {\n            for (const subchild of normalizedChild.children) {\n                result.push(subchild);\n            }\n        } else {\n            result.push(normalizedChild);\n        }\n    }\n\n    return result;\n}\n\ntype JSXElementBuilder<P : NodePropsType> = (\n    element : string,\n    props : P | null,\n    ...children : $ReadOnlyArray<NullableJsxChildType>\n) => ElementNode;\n\ntype JSXElementFunctionBuilder<P : NodePropsType> = (\n    element : (P, $ReadOnlyArray<JsxChildType>) => ElementNode,\n    props : P | null,\n    ...children : $ReadOnlyArray<NullableJsxChildType>\n) => ElementNode;\n\ntype JSXTextFunctionBuilder<P : NodePropsType> = (\n    element : (P, $ReadOnlyArray<JsxChildType>) => string | TextNode,\n    props : P | null,\n    ...children : $ReadOnlyArray<NullableJsxChildType>\n) => TextNode;\n\ntype JSXFragmentFunctionBuilder<P : NodePropsType> = (\n    element : (P, $ReadOnlyArray<JsxChildType>) => FragmentNode | $ReadOnlyArray<NullableJsxChildType>,\n    props : P | null,\n    ...children : $ReadOnlyArray<NullableJsxChildType>\n) => FragmentNode;\n\ntype JSXEmptyFunctionBuilder<P : NodePropsType> = (\n    element : (P, $ReadOnlyArray<JsxChildType>) => null | void,\n    props : P | null,\n    ...children : $ReadOnlyArray<NullableJsxChildType>\n) => void;\n\ntype JSXBuilder<P : NodePropsType> = JSXElementBuilder<P> & JSXElementFunctionBuilder<P> & JSXTextFunctionBuilder<P> & JSXFragmentFunctionBuilder<P> & JSXEmptyFunctionBuilder<P>;\n\nexport const node : JSXBuilder<*> = <P : NodePropsType>(element, props : P | null, ...children) => {\n    if (typeof element === 'string') {\n        return new ElementNode(element, props || {}, normalizeChildren(children));\n    }\n\n    if (typeof element === 'function') {\n        // $FlowFixMe\n        return normalizeChild(element(props || {}, normalizeChildren(children)));\n    }\n    \n    throw new TypeError(`Expected jsx Element to be a string or a function`);\n};\n\nexport function Fragment(props : NodePropsType, ...children : $ReadOnlyArray<JsxChildType>) : FragmentNode {\n    \n    if (props && Object.keys(props).length) {\n        throw new Error(`Do not pass props to Fragment`);\n    }\n\n    return new FragmentNode(normalizeChildren(children));\n}\n","/* @flow */\n\nimport type { NodeChildrenType, NodePropsType, NodeRendererFactory, NodeRenderer } from '../node';\n\nconst ELEMENT_TAG = {\n    HTML:    'html',\n    IFRAME:  'iframe',\n    SCRIPT:  'script',\n    NODE:    'node',\n    DEFAULT: 'default'\n};\n\nconst ELEMENT_PROP = {\n    INNER_HTML: 'innerHTML',\n    EL:         'el'\n};\n\nfunction fixScripts(el : HTMLElement, doc : Document = window.document) {\n    for (const script of el.querySelectorAll('script')) {\n        const parentNode = script.parentNode;\n\n        if (!parentNode) {\n            continue;\n        }\n\n        const newScript = doc.createElement('script');\n        // $FlowFixMe\n        newScript.text = script.textContent;\n        parentNode.replaceChild(newScript, script);\n    }\n}\n\ntype CreateElementOptions = {|\n    doc : Document,\n    name : string,\n    props : NodePropsType\n|};\n\nconst CREATE_ELEMENT : { [string] : (CreateElementOptions) => HTMLElement } = {\n\n    [ ELEMENT_TAG.NODE ]: ({ props } : CreateElementOptions) => {\n        if (!props[ELEMENT_PROP.EL]) {\n            throw new Error(`Must pass ${ ELEMENT_PROP.EL } prop to ${ ELEMENT_TAG.NODE } element`);\n        }\n\n        if (Object.keys(props).length > 1) {\n            throw new Error(`Must not pass any prop other than ${ ELEMENT_PROP.EL } to ${ ELEMENT_TAG.NODE } element`);\n        }\n\n        // $FlowFixMe\n        return props[ELEMENT_PROP.EL];\n    },\n\n    [ ELEMENT_TAG.DEFAULT ]: ({ name, doc } : CreateElementOptions) => {\n        return doc.createElement(name);\n    }\n};\n\nfunction createElement({ doc, name, props } : CreateElementOptions) : HTMLElement {\n    const elementCreator = CREATE_ELEMENT[name] || CREATE_ELEMENT[ELEMENT_TAG.DEFAULT];\n    return elementCreator({ name, props, doc });\n}\n\ntype AddPropsOptions = {|\n    el : HTMLElement,\n    props : NodePropsType\n|};\n\nfunction addProps({ el, props } : AddPropsOptions) {\n    for (const prop of Object.keys(props)) {\n        const val = props[prop];\n\n        if (val === null || typeof val === 'undefined' || prop === ELEMENT_PROP.EL || prop === ELEMENT_PROP.INNER_HTML) {\n            continue;\n        }\n\n        if (prop.match(/^on[A-Z][a-z]/) && typeof val === 'function') {\n            el.addEventListener(prop.slice(2).toLowerCase(), val);\n        } else if (typeof val === 'string' || typeof val === 'number') {\n            el.setAttribute(prop, val.toString());\n\n        } else if (typeof val === 'boolean') {\n            if (val === true) {\n                el.setAttribute(prop, '');\n            }\n\n        } else {\n            throw new TypeError(`Can not render prop ${ prop } of type ${ typeof val }`);\n        }\n    }\n}\n\ntype AddChildrenOptions = {|\n    el : HTMLElement,\n    name : string,\n    children : NodeChildrenType,\n    doc : Document,\n    props : NodePropsType,\n    domRenderer : NodeRenderer<HTMLElement>\n|};\n\nconst ADD_CHILDREN : { [string] : (AddChildrenOptions) => void } = {\n\n    [ ELEMENT_TAG.IFRAME ]: ({ el, children } : AddChildrenOptions) => {\n        const firstChild = children[0];\n\n        if (children.length > 1 || !firstChild.isElementNode()) {\n            throw new Error(`Expected only single element node as child of ${ ELEMENT_TAG.IFRAME } element`);\n        }\n\n        if (!firstChild.isTag(ELEMENT_TAG.HTML)) {\n            throw new Error(`Expected element to be inserted into frame to be html, got ${ firstChild.getTag() }`);\n        }\n    \n        el.addEventListener('load', () => {\n\n            // $FlowFixMe\n            const win = el.contentWindow;\n    \n            if (!win) {\n                throw new Error(`Expected frame to have contentWindow`);\n            }\n\n            const doc = win.document;\n            const docElement = doc.documentElement;\n\n            while (docElement.children && docElement.children.length) {\n                docElement.removeChild(docElement.children[0]);\n            }\n\n            // eslint-disable-next-line no-use-before-define\n            const child = firstChild.render(dom({ doc }));\n        \n            while (child.children.length) {\n                docElement.appendChild(child.children[0]);\n            }\n        });\n    },\n\n    [ ELEMENT_TAG.SCRIPT ]: ({ el, children } : AddChildrenOptions) => {\n        const firstChild = children[0];\n\n        if (children.length !== 1 || !firstChild.isTextNode()) {\n            throw new Error(`Expected only single text node as child of ${ ELEMENT_TAG.SCRIPT } element`);\n        }\n        \n        // $FlowFixMe\n        el.text = firstChild.getText();\n    },\n\n    [ ELEMENT_TAG.DEFAULT ]: ({ el, children, doc, domRenderer } : AddChildrenOptions) => {\n        for (const child of children) {\n            if (child.isTextNode()) {\n                el.appendChild(doc.createTextNode(child.getText()));\n            } else {\n                el.appendChild(child.render(domRenderer));\n            }\n        }\n    }\n};\n\nfunction addChildren({ el, name, props, children, doc, domRenderer } : AddChildrenOptions) {\n    if (props.hasOwnProperty(ELEMENT_PROP.INNER_HTML)) {\n\n        if (children.length >= 1) {\n            throw new Error(`Expected no children to be passed when ${ ELEMENT_PROP.INNER_HTML } prop is set`);\n        }\n\n        const html = props[ELEMENT_PROP.INNER_HTML];\n\n        if (typeof html !== 'string') {\n            throw new TypeError(`${ ELEMENT_PROP.INNER_HTML } prop must be string`);\n        }\n\n        if (name === ELEMENT_TAG.SCRIPT) {\n            // $FlowFixMe\n            el.text = html;\n        } else {\n            el.innerHTML = html;\n            fixScripts(el, doc);\n        }\n\n    } else {\n        const addChildrenToElement = ADD_CHILDREN[name] || ADD_CHILDREN[ELEMENT_TAG.DEFAULT];\n        addChildrenToElement({ el, name, props, children, doc, domRenderer });\n    }\n}\n\n\nexport const dom : NodeRendererFactory<HTMLElement> = ({ doc = document } : { doc? : Document } = {}) => {\n    const domRenderer = (name, props, children) => {\n        const el = createElement({ name, props, doc });\n        addProps({ el, props });\n        addChildren({ el, name, props, children, doc, domRenderer });\n        return el;\n    };\n\n    return domRenderer;\n};\n","/* @flow */\n/* @jsx node */\n/* eslint react/react-in-jsx-scope: off */\n\nimport { node, dom } from 'jsx-pragmatic/src';\nimport { destroyElement } from 'belter/src';\n\nimport { type RenderOptionsType } from '../../parent';\nimport { EVENT } from '../../constants';\n\nconst CLASS = {\n    VISIBLE:   'visible',\n    INVISIBLE: 'invisible'\n};\n\nexport function defaultContainerTemplate<P>({ uid, frame, prerenderFrame, doc, event, dimensions : { width, height } } : RenderOptionsType<P>) : ?HTMLElement {\n    if (__ZOID__.__DEFAULT_CONTAINER__) {\n        if (!frame || !prerenderFrame) {\n            return;\n        }\n    \n        prerenderFrame.classList.add(CLASS.VISIBLE);\n        frame.classList.add(CLASS.INVISIBLE);\n    \n        event.on(EVENT.RENDERED, () => {\n            prerenderFrame.classList.remove(CLASS.VISIBLE);\n            prerenderFrame.classList.add(CLASS.INVISIBLE);\n    \n            frame.classList.remove(CLASS.INVISIBLE);\n            frame.classList.add(CLASS.VISIBLE);\n    \n            setTimeout(() => {\n                destroyElement(prerenderFrame);\n            }, 1);\n        });\n    \n        return (\n            <div id={ uid }>\n                <style>\n                    {`\n                        #${ uid } {\n                            display: inline-block;\n                            position: relative;\n                            width: ${ width };\n                            height: ${ height };\n                        }\n    \n                        #${ uid } > iframe {\n                            display: inline-block;\n                            position: absolute;\n                            width: 100%;\n                            height: 100%;\n                            top: 0;\n                            left: 0;\n                            transition: opacity .2s ease-in-out;\n                        }\n    \n                        #${ uid } > iframe.${ CLASS.INVISIBLE } {\n                            opacity: 0;\n                        }\n    \n                        #${ uid } > iframe.${ CLASS.VISIBLE } {\n                            opacity: 1;\n                        }\n                    `}\n                </style>\n    \n                <node el={ frame } />\n                <node el={ prerenderFrame } />\n            </div>\n        ).render(dom({ doc }));\n    }\n}\n","/* @flow */\n/** @jsx node */\n/* eslint react/react-in-jsx-scope: off */\n\nimport { node, dom } from 'jsx-pragmatic/src';\n\nimport { type RenderOptionsType } from '../../parent';\n\nexport function defaultPrerenderTemplate<P>({ doc } : RenderOptionsType<P>) : ?HTMLElement {\n    if (__ZOID__.__DEFAULT_PRERENDER__) {\n        return (\n            <html>\n                <body>\n                    <style>\n                        {`\n                            .spinner {\n                                position: fixed;\n                                max-height: 60vmin;\n                                max-width: 60vmin;\n                                height: 40px;\n                                width: 40px;\n                                top: 50%;\n                                left: 50%;\n                                box-sizing: border-box;\n                                border: 3px solid rgba(0, 0, 0, .2);\n                                border-top-color: rgba(33, 128, 192, 0.8);\n                                border-radius: 100%;\n                                animation: rotation .7s infinite linear;\n                            }\n    \n                            @keyframes rotation {\n                                from {\n                                    transform: translateX(-50%) translateY(-50%) rotate(0deg);\n                                }\n                                to {\n                                    transform: translateX(-50%) translateY(-50%) rotate(359deg);\n                                }\n                            }\n                        `}\n                    </style>\n                    <div class=\"spinner\" />\n                </body>\n            </html>\n        ).render(dom({ doc }));\n    }\n}\n","/* @flow */\n\nimport { ZalgoPromise } from 'zalgo-promise/src';\nimport { once, noop } from 'belter/src';\nimport { isWindow, type CrossDomainWindowType } from 'cross-domain-utils/src';\nimport { ProxyWindow, toProxyWindow } from 'post-robot/src';\n\nimport { PROP_SERIALIZATION } from '../constants';\n\nexport type EventHandlerType<T> = (T) => void | ZalgoPromise<void>;\n\nexport type timeoutPropType = number;\nexport type windowPropType = CrossDomainWindowType | ProxyWindow;\nexport type closePropType = () => ZalgoPromise<void>;\nexport type focusPropType = () => ZalgoPromise<void>;\nexport type resizePropType = ({ width : ?number, height : ?number }) => ZalgoPromise<void>;\n\nexport type onDisplayPropType = EventHandlerType<void>;\nexport type onRenderedPropType = EventHandlerType<void>;\nexport type onRenderPropType = EventHandlerType<void>;\nexport type onClosePropType = EventHandlerType<void>;\nexport type onErrorPropType = EventHandlerType<mixed>;\nexport type onPropsPropType<P> = ((PropsType<P>) => void) => void; // eslint-disable-line no-use-before-define\n\nexport type PropsInputType<P> = {\n    timeout? : timeoutPropType,\n    window? : windowPropType,\n\n    onDisplay? : onDisplayPropType,\n    onRendered? : onRenderedPropType,\n    onRender? : onRenderPropType,\n    onClose? : onClosePropType,\n    onError? : onErrorPropType,\n    onProps? : onPropsPropType<P>\n} & P;\n\nexport type PropsType<P> = {|\n    timeout? : timeoutPropType,\n    window? : ?windowPropType,\n    close? : ?closePropType,\n    focus? : ?focusPropType,\n    resize? : ?resizePropType,\n\n    onDisplay : onDisplayPropType,\n    onRendered : onRenderedPropType,\n    onRender : onRenderPropType,\n    onClose : onClosePropType,\n    onError : onErrorPropType,\n    onProps : onPropsPropType<P>\n|} & P;\n\ntype PropDefinitionType<T, P, S : string> = {|\n    type : S,\n    alias? : string,\n    value? : ({ props : P, state : Object, close : () => ZalgoPromise<void>, focus : () => ZalgoPromise<void>, onError : (mixed) => ZalgoPromise<void> }) => ?T,\n    required? : boolean,\n    queryParam? : boolean | string | ({ value : T }) => (string | ZalgoPromise<string>),\n    queryValue? : ({ value : T }) => (ZalgoPromise<mixed> | mixed),\n    sendToChild? : boolean,\n    allowDelegate? : boolean,\n    validate? : ({ value : T, props : PropsInputType<P> }) => void,\n    decorate? : ({ value : T, props : PropsType<P>, state : Object, close : () => ZalgoPromise<void>, focus : () => ZalgoPromise<void>, onError : (mixed) => ZalgoPromise<void> }) => T,\n    default? : ({ props : P, state : Object }) => ?T,\n    sameDomain? : boolean,\n    serialization? : $Values<typeof PROP_SERIALIZATION>,\n    childDecorate? : ({ value : T, close : () => ZalgoPromise<void>, focus : () => ZalgoPromise<void>, onError : (mixed) => ZalgoPromise<void>, onProps : ((PropsType<P>) => void) => void, resize : ({ width : ?number, height : ?number }) => ZalgoPromise<void> }) => ?T\n|};\n\nexport type BooleanPropDefinitionType<T : boolean, P> = PropDefinitionType<T, P, 'boolean'>;\nexport type StringPropDefinitionType<T : string, P> = PropDefinitionType<T, P, 'string'>;\nexport type NumberPropDefinitionType<T : number, P> = PropDefinitionType<T, P, 'number'>;\nexport type FunctionPropDefinitionType<T : Function, P> = PropDefinitionType<T, P, 'function'>;\nexport type ArrayPropDefinitionType<T : Array<*>, P> = PropDefinitionType<T, P, 'array'>; // eslint-disable-line flowtype/no-mutable-array\nexport type ObjectPropDefinitionType<T : Object, P> = PropDefinitionType<T, P, 'object'>;\n\nexport type MixedPropDefinitionType<P> = BooleanPropDefinitionType<*, P> | StringPropDefinitionType<*, P> | NumberPropDefinitionType<*, P> | FunctionPropDefinitionType<*, P> | ObjectPropDefinitionType<*, P> | ArrayPropDefinitionType<*, P>;\n\nexport type UserPropsDefinitionType<P> = {\n    [string] : MixedPropDefinitionType<P>\n};\n\n// eslint-disable-next-line flowtype/require-exact-type\nexport type BuiltInPropsDefinitionType<P> = {\n    timeout : NumberPropDefinitionType<timeoutPropType, P>,\n    window : ObjectPropDefinitionType<windowPropType, P>,\n    close : FunctionPropDefinitionType<closePropType, P>,\n    focus : FunctionPropDefinitionType<focusPropType, P>,\n    resize : FunctionPropDefinitionType<resizePropType, P>,\n\n    onDisplay : FunctionPropDefinitionType<onDisplayPropType, P>,\n    onRendered : FunctionPropDefinitionType<onRenderedPropType, P>,\n    onRender : FunctionPropDefinitionType<onRenderPropType, P>,\n    onClose : FunctionPropDefinitionType<onClosePropType, P>,\n    onError : FunctionPropDefinitionType<onErrorPropType, P>,\n    onProps : FunctionPropDefinitionType<onPropsPropType<P>, P>\n};\n\nconst defaultNoop = () => noop;\nconst decorateOnce = ({ value }) => once(value);\n\nexport function getBuiltInProps<P>() : BuiltInPropsDefinitionType<P> {\n    return {\n        window: {\n            type:          'object',\n            sendToChild:   false,\n            required:      false,\n            allowDelegate: true,\n            validate({ value } : { value : CrossDomainWindowType | ProxyWindow }) {\n                if (!isWindow(value) && !ProxyWindow.isProxyWindow(value)) {\n                    throw new Error(`Expected Window or ProxyWindow`);\n                }\n            },\n            decorate({ value } : { value : CrossDomainWindowType | ProxyWindow }) : ProxyWindow {\n                return toProxyWindow(value);\n            }\n        },\n\n        timeout: {\n            type:        'number',\n            required:    false,\n            sendToChild: false\n        },\n\n        close: {\n            type:          'function',\n            required:      false,\n            sendToChild:   false,\n            childDecorate: ({ close }) => close\n        },\n\n        focus: {\n            type:          'function',\n            required:      false,\n            sendToChild:   false,\n            childDecorate: ({ focus }) => focus\n        },\n\n        resize: {\n            type:          'function',\n            required:      false,\n            sendToChild:   false,\n            childDecorate: ({ resize }) => resize\n        },\n\n        getParent: {\n            type:          'function',\n            required:      false,\n            sendToChild:   false,\n            childDecorate: ({ getParent }) => getParent\n        },\n\n        onDisplay: {\n            type:          'function',\n            required:      false,\n            sendToChild:   false,\n            allowDelegate: true,\n            default:       defaultNoop,\n            decorate:      decorateOnce\n        },\n\n        onRendered: {\n            type:        'function',\n            required:    false,\n            sendToChild: false,\n            default:     defaultNoop,\n            decorate:    decorateOnce\n        },\n\n        onRender: {\n            type:        'function',\n            required:    false,\n            sendToChild: false,\n            default:     defaultNoop,\n            decorate:    decorateOnce\n        },\n\n        onClose: {\n            type:          'function',\n            required:      false,\n            sendToChild:   false,\n            allowDelegate: true,\n            default:       defaultNoop,\n            decorate:      decorateOnce\n        },\n\n        onError: {\n            type:          'function',\n            required:      false,\n            sendToChild:   false,\n            childDecorate: ({ onError }) => onError\n        },\n\n        onProps: {\n            type:          'function',\n            required:      false,\n            sendToChild:   false,\n            default:       defaultNoop,\n            childDecorate: ({ onProps }) => onProps\n        }\n    };\n}\n","/* @flow */\n/* eslint max-lines: 0 */\n\nimport { on, send, bridge, toProxyWindow } from 'post-robot/src';\nimport { ZalgoPromise } from 'zalgo-promise/src';\nimport { isWindow, getDomainFromUrl, type CrossDomainWindowType, isSameTopWindow, getDomain, matchDomain, isSameDomain } from 'cross-domain-utils/src';\nimport { isRegex, noop, isElement } from 'belter/src';\n\nimport { ChildComponent, getChildPayload } from '../child';\nimport { ParentComponent, type RenderOptionsType, type ParentHelpers } from '../parent';\nimport { DelegateComponent } from '../delegate';\nimport { CONTEXT, POST_MESSAGE, WILDCARD, DEFAULT_DIMENSIONS } from '../constants';\nimport { react, angular, vue, angular2 } from '../drivers';\nimport type { CssDimensionsType, StringMatcherType } from '../types';\n\nimport { validate } from './validate';\nimport { defaultContainerTemplate, defaultPrerenderTemplate } from './templates';\nimport { getBuiltInProps, type UserPropsDefinitionType, type BuiltInPropsDefinitionType, type PropsInputType, type PropsType, type MixedPropDefinitionType } from './props';\n\ntype LoggerPayload = { [string] : ?string };\n\n// eslint-disable-next-line flowtype/require-exact-type\ntype Logger = {\n    debug : (event : string, payload? : LoggerPayload) => void,\n    info : (event : string, payload? : LoggerPayload) => void,\n    warn : (event : string, payload? : LoggerPayload) => void,\n    error : (event : string, payload? : LoggerPayload) => void\n};\n\n/*  Component\n    ---------\n\n    This is the spec for the component. The idea is, when I call zoid.create(), it will create a new instance\n    of Component with the blueprint needed to set up ParentComponents and ChildComponents.\n\n    This is the one portion of code which is required by -- and shared to -- both the parent and child windows, and\n    contains all of the configuration needed for them to set themselves up.\n*/\n\nexport type ComponentOptionsType<P> = {|\n\n    tag : string,\n\n    url : string | ({ props : PropsType<P> }) => string,\n    domain? : string | RegExp,\n    bridgeUrl? : string,\n\n    props? : UserPropsDefinitionType<P>,\n\n    dimensions? : CssDimensionsType,\n    autoResize? : { width? : boolean, height? : boolean, element? : string },\n\n    allowedParentDomains? : StringMatcherType,\n\n    attributes? : {\n        iframe? : { [string] : string },\n        popup? : { [string] : string }\n    },\n\n    defaultContext? : $Values<typeof CONTEXT>,\n\n    containerTemplate? : (RenderOptionsType<P>) => ?HTMLElement,\n    prerenderTemplate? : (RenderOptionsType<P>) => ?HTMLElement,\n\n    validate? : ({ props : PropsInputType<P> }) => void,\n\n    logger? : Logger\n|};\n\ntype ZoidRenderer = {|\n    render : (container? : string | HTMLElement, context? : $Values<typeof CONTEXT>) => ZalgoPromise<void>,\n    renderTo : (target : CrossDomainWindowType, container? : string, context? : $Values<typeof CONTEXT>) => ZalgoPromise<void>\n|};\n\nexport type ZoidComponentInstance<P> = {| ...ParentHelpers<P>, ...ZoidRenderer |};\n\nexport type ZoidComponent<P> = {|\n    (PropsInputType<P>) : ZoidComponentInstance<P>,\n    driver : (string, mixed) => mixed,\n    isChild : () => boolean,\n    xprops? : PropsType<P>,\n    canRenderTo : (CrossDomainWindowType) => ZalgoPromise<boolean>\n|};\n\nexport class Component<P> {\n\n    tag : string\n    name : string\n    \n    url : string | ({ props : PropsType<P> }) => string\n    domain : void | string | RegExp\n    bridgeUrl : void | string\n\n    props : UserPropsDefinitionType<P>\n    builtinProps : BuiltInPropsDefinitionType<P>\n\n    dimensions : CssDimensionsType\n    autoResize : void | { width? : boolean, height? : boolean, element? : string }\n\n    allowedParentDomains : StringMatcherType\n\n    defaultContext : $Values<typeof CONTEXT>\n    \n    attributes : {\n        iframe? : { [string] : string },\n        popup? : { [string] : string }\n    }\n\n    containerTemplate : (RenderOptionsType<P>) => ?HTMLElement\n    prerenderTemplate : ?(RenderOptionsType<P>) => ?HTMLElement\n\n    validate : void | ({ props : PropsInputType<P> }) => void\n\n    driverCache : { [string] : mixed }\n\n    xprops : ?PropsType<P>\n\n    logger : Logger\n\n    propNames : $ReadOnlyArray<string>\n\n    constructor(options : ComponentOptionsType<P>) {\n        validate(options);\n\n        // The tag name of the component. Used by some drivers (e.g. angular) to turn the component into an html element,\n        // e.g. <my-component>\n\n        this.tag = options.tag;\n        this.name = this.tag.replace(/-/g, '_');\n\n        this.allowedParentDomains = options.allowedParentDomains || WILDCARD;\n\n        if (Component.components[this.tag]) {\n            throw new Error(`Can not register multiple components with the same tag: ${ this.tag }`);\n        }\n\n        // A json based spec describing what kind of props the component accepts. This is used to validate any props before\n        // they are passed down to the child.\n\n        this.builtinProps = getBuiltInProps();\n        this.props = options.props || {};\n\n        // The dimensions of the component, e.g. { width: '300px', height: '150px' }\n\n        const { width = DEFAULT_DIMENSIONS.WIDTH, height = DEFAULT_DIMENSIONS.HEIGHT } = options.dimensions || {};\n        this.dimensions = { width, height };\n\n        this.url = options.url;\n        this.domain = options.domain;\n        this.bridgeUrl = options.bridgeUrl;\n\n        this.attributes = options.attributes || {};\n        this.attributes.iframe = this.attributes.iframe || {};\n        this.attributes.popup = this.attributes.popup || {};\n\n        this.defaultContext = options.defaultContext || CONTEXT.IFRAME;\n\n        this.autoResize = options.autoResize;\n\n        if (options.containerTemplate) {\n            this.containerTemplate = options.containerTemplate;\n        } else if (__ZOID__.__DEFAULT_CONTAINER__) {\n            this.containerTemplate = defaultContainerTemplate;\n        }\n\n        if (options.prerenderTemplate) {\n            this.prerenderTemplate = options.prerenderTemplate;\n        } else if (__ZOID__.__DEFAULT_PRERENDER__) {\n            this.prerenderTemplate = defaultPrerenderTemplate;\n        }\n\n        this.validate = options.validate;\n\n        this.logger = options.logger || {\n            debug: noop,\n            info:  noop,\n            warn:  noop,\n            error: noop\n        };\n\n        this.registerChild();\n        this.listenDelegate();\n\n        Component.components[this.tag] = this;\n    }\n\n    getPropNames() : $ReadOnlyArray<string> {\n        if (this.propNames) {\n            return this.propNames;\n        }\n\n        const propNames = Object.keys(this.props);\n        for (const key of Object.keys(this.builtinProps)) {\n            if (propNames.indexOf(key) === -1) {\n                propNames.push(key);\n            }\n        }\n\n        this.propNames = propNames;\n        return propNames;\n    }\n\n    // $FlowFixMe\n    getPropDefinition(name : string) : MixedPropDefinitionType<P> {\n        // $FlowFixMe\n        return this.props[name] || this.builtinProps[name];\n    }\n\n    driver(name : string, dep : mixed) : mixed {\n        if (__ZOID__.__FRAMEWORK_SUPPORT__) {\n            const drivers = { react, angular, vue, angular2 };\n\n            if (!drivers[name]) {\n                throw new Error(`Could not find driver for framework: ${ name }`);\n            }\n    \n            this.driverCache = this.driverCache || {};\n    \n            if (!this.driverCache[name]) {\n                this.driverCache[name] = drivers[name].register(this, dep);\n            }\n    \n            return this.driverCache[name];\n        } else {\n            throw new Error(`Driver support not enabled`);\n        }\n    }\n\n    registerChild() {\n        if (this.isChild()) {\n            if (window.xprops) {\n                throw new Error(`Can not register ${ this.name } as child - can not attach multiple components to the same window`);\n            }\n\n            const child = new ChildComponent(this);\n            window.xprops = this.xprops = child.getProps();\n        }\n    }\n\n    listenDelegate() {\n        on(`${ POST_MESSAGE.ALLOW_DELEGATE }_${ this.name }`, () => {\n            return true;\n        });\n\n        on(`${ POST_MESSAGE.DELEGATE }_${ this.name }`, ({ source, data: { context, props, overrides } }) => {\n            const delegate = new DelegateComponent(this, source, { context, props, overrides });\n            return delegate.getDelegate();\n        });\n    }\n\n    canRenderTo(win : CrossDomainWindowType) : ZalgoPromise<boolean> {\n        return send(win, `${ POST_MESSAGE.ALLOW_DELEGATE }_${ this.name }`).then(({ data }) => {\n            return data;\n        }).catch(() => {\n            return false;\n        });\n    }\n\n    getUrl(props : PropsType<P>) : string {\n        if (typeof this.url === 'function') {\n            return this.url({ props });\n        }\n\n        return this.url;\n    }\n\n    getInitialDomain(props : PropsType<P>) : string {\n        if (this.domain && typeof this.domain === 'string') {\n            return this.domain;\n        }\n\n        return getDomainFromUrl(this.getUrl(props));\n    }\n\n    getDomain(props : PropsType<P>) : string | RegExp {\n        if (isRegex(this.domain)) {\n            // $FlowFixMe\n            return this.domain;\n        }\n\n        return this.getInitialDomain(props);\n    }\n\n    getBridgeUrl() : ?string {\n        if (this.bridgeUrl) {\n            return this.bridgeUrl;\n        }\n    }\n\n    isChild() : boolean {\n        const payload = getChildPayload();\n        return Boolean(payload && payload.tag === this.tag);\n    }\n\n    getDefaultContainer<T : (string | HTMLElement)>(context : $Values<typeof CONTEXT>, container? : T) : T {\n        if (container) {\n            if (typeof container !== 'string' && !isElement(container)) {\n                throw new TypeError(`Expected string or element selector to be passed`);\n            }\n\n            return container;\n        }\n\n        if (context === CONTEXT.POPUP) {\n            // $FlowFixMe\n            return 'body';\n        }\n\n        throw new Error(`Expected element to be passed to render iframe`);\n    }\n\n    getDefaultContext(context : ?$Values<typeof CONTEXT>, props : PropsInputType<P>) : $Values<typeof CONTEXT> {\n        if (props.window) {\n            return toProxyWindow(props.window).getType();\n        }\n\n        if (context) {\n            if (context !== CONTEXT.IFRAME && context !== CONTEXT.POPUP) {\n                throw new Error(`Unrecognized context: ${ context }`);\n            }\n            \n            return context;\n        }\n\n        return this.defaultContext;\n    }\n\n    init(props : PropsInputType<P>) : ZoidComponentInstance<P> {\n\n        // $FlowFixMe\n        props = props || {};\n        \n        const parent = new ParentComponent(this, props);\n\n        const render = (target, container, context) => ZalgoPromise.try(() => {\n            if (!isWindow(target)) {\n                throw new Error(`Must pass window to renderTo`);\n            }\n\n            context = this.getDefaultContext(context, props);\n            container = this.getDefaultContainer(context, container);\n            return parent.render(target, container, context);\n        });\n\n        return {\n            ...parent.getHelpers(),\n            render:   (container, context) => render(window, container, context),\n            renderTo: (target, container, context) => render(target, container, context)\n        };\n    }\n\n    checkAllowRender(target : CrossDomainWindowType, domain : string | RegExp, container : string | HTMLElement) {\n        if (target === window) {\n            return;\n        }\n\n        if (!isSameTopWindow(window, target)) {\n            throw new Error(`Can only renderTo an adjacent frame`);\n        }\n\n        const origin = getDomain();\n\n        if (!matchDomain(domain, origin) && !isSameDomain(target)) {\n            throw new Error(`Can not render remotely to ${ domain.toString() } - can only render to ${ origin }`);\n        }\n\n        if (container && typeof container !== 'string') {\n            throw new Error(`Container passed to renderTo must be a string selector, got ${ typeof container } }`);\n        }\n    }\n\n    log(event : string, payload? : LoggerPayload) {\n        this.logger.info(`${ this.name }_${ event }`, payload);\n    }\n\n    static components : { [string] : Component<*> } = {}\n    static activeComponents : Array<ParentComponent<*> | DelegateComponent<*>> = [] // eslint-disable-line flowtype/no-mutable-array\n\n    registerActiveComponent<Q>(instance : ParentComponent<Q> | DelegateComponent<Q>) {\n        Component.activeComponents.push(instance);\n    }\n\n    destroyActiveComponent<Q>(instance : ParentComponent<Q> | DelegateComponent<Q>) {\n        Component.activeComponents.splice(Component.activeComponents.indexOf(instance), 1);\n    }\n\n    static destroyAll() : ZalgoPromise<void> {\n        if (bridge) {\n            bridge.destroyBridges();\n        }\n\n        const results = [];\n\n        while (Component.activeComponents.length) {\n            results.push(Component.activeComponents[0].destroy());\n        }\n\n        return ZalgoPromise.all(results).then(noop);\n    }\n}\n\nexport type ComponentDriverType<P, T : mixed> = {|\n    register : (Component<P>, T) => mixed\n|};\n\nexport function create<P>(options : ComponentOptionsType<P>) : ZoidComponent<P> {\n    const component : Component<P> = new Component(options);\n\n    const init = (props) => component.init(props);\n    init.driver = (name, dep) => component.driver(name, dep);\n    init.isChild = () => component.isChild();\n    init.canRenderTo = (win) => component.canRenderTo(win);\n    init.xprops = component.xprops;\n\n    // $FlowFixMe\n    return init;\n}\n\nexport function destroyAll() : ZalgoPromise<void> {\n    return Component.destroyAll();\n}\n","/* @flow */\n\nimport { isPerc, isPx, values } from 'belter/src';\n\nimport { CONTEXT, PROP_TYPE } from '../constants';\n\nimport type { ComponentOptionsType } from './index';\n\nfunction validatePropDefinitions<P>(options : ComponentOptionsType<P>) {\n\n    if (options.props && !(typeof options.props === 'object')) {\n        throw new Error(`Expected options.props to be an object`);\n    }\n\n    const PROP_TYPE_LIST = values(PROP_TYPE);\n\n    if (options.props) {\n        for (const key of Object.keys(options.props)) {\n\n            // $FlowFixMe\n            const prop = options.props[key];\n\n            if (!prop || !(typeof prop === 'object')) {\n                throw new Error(`Expected options.props.${ key } to be an object`);\n            }\n\n            if (!prop.type) {\n                throw new Error(`Expected prop.type`);\n            }\n\n            if (PROP_TYPE_LIST.indexOf(prop.type) === -1) {\n                throw new Error(`Expected prop.type to be one of ${ PROP_TYPE_LIST.join(', ') }`);\n            }\n\n            if (prop.required && prop.default) {\n                throw new Error(`Required prop can not have a default value`);\n            }\n\n            if (prop.type === PROP_TYPE.FUNCTION && prop.queryParam && !prop.queryValue) {\n                throw new Error(`Do not pass queryParam for function prop`);\n            }\n        }\n    }\n}\n\n// eslint-disable-next-line complexity\nexport function validate<P>(options : ?ComponentOptionsType<P>) { // eslint-ignore-line\n\n    if (!options) {\n        throw new Error(`Expected options to be passed`);\n    }\n\n    // eslint-disable-next-line security/detect-unsafe-regex, unicorn/no-unsafe-regex\n    if (!options.tag || !options.tag.match(/^([a-z0-9]+-)+[a-z0-9]+$/)) {\n        throw new Error(`Invalid options.tag: ${ options.tag }`);\n    }\n\n    validatePropDefinitions(options);\n\n    if (options.dimensions) {\n        if (options.dimensions && !isPx(options.dimensions.width) && !isPerc(options.dimensions.width)) {\n            throw new Error(`Expected options.dimensions.width to be a px or % string value`);\n        }\n\n        if (options.dimensions && !isPx(options.dimensions.height) && !isPerc(options.dimensions.height)) {\n            throw new Error(`Expected options.dimensions.height to be a px or % string value`);\n        }\n    }\n\n    if (options.defaultContext) {\n        if (options.defaultContext !== CONTEXT.IFRAME && options.defaultContext !== CONTEXT.POPUP) {\n            throw new Error(`Unsupported context type: ${ options.defaultContext || 'unknown' }`);\n        }\n    }\n\n    if (!options.url) {\n        throw new Error(`Must pass url`);\n    }\n\n    if (typeof options.url !== 'string' && typeof options.url !== 'function') {\n        throw new TypeError(`Expected url to be string or function`);\n    }\n\n    if (options.prerenderTemplate && typeof options.prerenderTemplate !== 'function') {\n        throw new Error(`Expected options.prerenderTemplate to be a function`);\n    }\n\n    if ((options.containerTemplate || !__ZOID__.__DEFAULT_CONTAINER__) && typeof options.containerTemplate !== 'function') {\n        throw new Error(`Expected options.containerTemplate to be a function`);\n    }\n}\n","/* @flow */\n\nexport { PopupOpenError } from 'belter/src';\nexport { create, destroyAll, Component } from './component';\nexport type { ZoidComponent, ZoidComponentInstance } from './component';\nexport type { RenderOptionsType } from './parent';\nexport { PROP_TYPE, PROP_SERIALIZATION, CONTEXT, EVENT } from './constants';\n"],"sourceRoot":""}