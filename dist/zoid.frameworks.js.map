{"version":3,"sources":["webpack://zoid/webpack/universalModuleDefinition","webpack://zoid/webpack/bootstrap","webpack://zoid/./node_modules/@babel/runtime/helpers/esm/extends.js","webpack://zoid/./node_modules/zalgo-promise/src/utils.js","webpack://zoid/./node_modules/zalgo-promise/src/exceptions.js","webpack://zoid/./node_modules/zalgo-promise/src/flush.js","webpack://zoid/./node_modules/zalgo-promise/src/promise.js","webpack://zoid/./node_modules/cross-domain-utils/src/util.js","webpack://zoid/./node_modules/cross-domain-utils/src/constants.js","webpack://zoid/./node_modules/cross-domain-utils/src/utils.js","webpack://zoid/./node_modules/cross-domain-safe-weakmap/src/util.js","webpack://zoid/./node_modules/cross-domain-safe-weakmap/src/weakmap.js","webpack://zoid/./node_modules/belter/src/util.js","webpack://zoid/./node_modules/belter/src/dom.js","webpack://zoid/./node_modules/cross-domain-safe-weakmap/src/native.js","webpack://zoid/./node_modules/belter/src/css.js","webpack://zoid/./node_modules/post-robot/src/conf/config.js","webpack://zoid/./node_modules/post-robot/src/conf/constants.js","webpack://zoid/./node_modules/post-robot/src/global.js","webpack://zoid/./node_modules/post-robot/src/lib/hello.js","webpack://zoid/./node_modules/post-robot/src/lib/windows.js","webpack://zoid/./node_modules/universal-serialize/src/constants.js","webpack://zoid/./node_modules/universal-serialize/src/common.js","webpack://zoid/./node_modules/universal-serialize/src/serialize.js","webpack://zoid/./node_modules/universal-serialize/src/serializers/function.js","webpack://zoid/./node_modules/universal-serialize/src/serializers/error.js","webpack://zoid/./node_modules/universal-serialize/src/serializers/promise.js","webpack://zoid/./node_modules/universal-serialize/src/serializers/regex.js","webpack://zoid/./node_modules/universal-serialize/src/serializers/date.js","webpack://zoid/./node_modules/universal-serialize/src/serializers/array.js","webpack://zoid/./node_modules/universal-serialize/src/serializers/object.js","webpack://zoid/./node_modules/universal-serialize/src/serializers/string.js","webpack://zoid/./node_modules/universal-serialize/src/serializers/number.js","webpack://zoid/./node_modules/universal-serialize/src/serializers/boolean.js","webpack://zoid/./node_modules/universal-serialize/src/serializers/null.js","webpack://zoid/./node_modules/universal-serialize/src/deserialize.js","webpack://zoid/./node_modules/post-robot/src/serialize/window.js","webpack://zoid/./node_modules/post-robot/src/bridge/common.js","webpack://zoid/./node_modules/post-robot/src/serialize/function.js","webpack://zoid/./node_modules/post-robot/src/serialize/serialize.js","webpack://zoid/./node_modules/post-robot/src/serialize/promise.js","webpack://zoid/./node_modules/post-robot/src/drivers/send/strategies.js","webpack://zoid/./node_modules/post-robot/src/drivers/send/index.js","webpack://zoid/./node_modules/post-robot/src/lib/compat.js","webpack://zoid/./node_modules/post-robot/src/drivers/listeners.js","webpack://zoid/./node_modules/post-robot/src/drivers/receive/types.js","webpack://zoid/./node_modules/post-robot/src/drivers/receive/index.js","webpack://zoid/./node_modules/post-robot/src/public/on.js","webpack://zoid/./node_modules/post-robot/src/public/send.js","webpack://zoid/./node_modules/post-robot/src/setup.js","webpack://zoid/./src/lib/global.js","webpack://zoid/./src/lib/serialize.js","webpack://zoid/./node_modules/post-robot/src/index.js","webpack://zoid/./src/constants.js","webpack://zoid/./src/child/props.js","webpack://zoid/./src/child/window.js","webpack://zoid/./src/child/index.js","webpack://zoid/./src/parent/drivers.js","webpack://zoid/./src/parent/props.js","webpack://zoid/./node_modules/post-robot/src/clean.js","webpack://zoid/./src/parent/index.js","webpack://zoid/./src/delegate/index.js","webpack://zoid/./src/drivers/react.js","webpack://zoid/./node_modules/@babel/runtime/helpers/esm/inheritsLoose.js","webpack://zoid/./src/drivers/vue.js","webpack://zoid/./src/drivers/angular.js","webpack://zoid/./src/drivers/angular2.js","webpack://zoid/./src/component/templates/container.js","webpack://zoid/./src/component/templates/component.js","webpack://zoid/./src/component/props.js","webpack://zoid/./src/component/component.js","webpack://zoid/./src/component/validate.js","webpack://zoid/./src/index.js"],"names":["root","factory","exports","module","define","amd","self","this","installedModules","__webpack_require__","moduleId","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","hasOwnProperty","p","s","_extends","assign","target","arguments","length","source","apply","isPromise","item","Promise","window","Window","constructor","toString","then","err","flushPromise","dispatchedErrors","possiblyUnhandledPromiseHandlers","activeCount","flushActive","promise","resolve","startActive","endActive","ZalgoPromise","handler","_this","resolved","rejected","errorHandled","error","handlers","dispatching","stack","result","isAsync","res","reject","_proto","prototype","Error","dispatch","_this2","setTimeout","indexOf","push","j","dispatchPossiblyUnhandledError","asyncReject","_this3","_loop","_handlers$i","onSuccess","onError","catch","undefined","finally","onFinally","try","timeout","time","_this4","clearTimeout","toPromise","TypeError","all","promises","count","results","_loop2","prom","hash","keys","map","items","method","onPossiblyUnhandledException","cancel","splice","context","args","delay","flush","isRegex","PROTOCOL","MOCK","FILE","ABOUT","WILDCARD","WINDOW_TYPE","IFRAME","POPUP","IE_WIN_ACCESS_ERROR","isAboutProtocol","win","location","protocol","getParent","parent","getOpener","opener","canReadFromWindow","getActualDomain","host","getDomain","domain","mockDomain","isSameDomain","desc","getOwnPropertyDescriptor","isActuallySameDomain","assertSameDomain","isAncestorParent","child","childParent","getParents","getFrames","frames","len","frame","getAllChildFrames","_i3","_getFrames2","_i5","_getAllChildFrames2","getTop","top","_i7","_getAllChildFrames4","getAllFramesInWindow","concat","iframeWindows","iframeFrames","isWindowClosed","allowMock","closed","message","mockclosed","iframeIndex","collection","safeIndexOf","contentWindow","parentNode","doc","ownerDocument","documentElement","contains","isFrameWindowClosed","getAncestor","anyMatch","collection1","collection2","_i17","item1","_i19","getDistanceFromTop","distance","isSameTopWindow","win1","win2","top1","top2","allFrames1","allFrames2","opener1","opener2","matchDomain","pattern","origin","Array","isArray","Boolean","match","JSON","stringify","some","subpattern","getDomainFromUrl","url","split","slice","join","onCloseWindow","callback","maxtime","Infinity","check","isWindow","obj","objectIDs","awaitFrameLoadPromises","counter","Date","now","CrossDomainSafeWeakMap","weakmap","values","Math","random","WeakMap","freeze","testWeakMap","testKey","set","hasNativeWeakMap","_cleanupClosedWindows","delete","isSafeToReadWrite","entry","writable","index","has","getOrSet","base64encode","str","btoa","Buffer","from","uniqueID","chars","replace","charAt","floor","toISOString","toLowerCase","serializeArgs","subkey","val","uid","getObjectID","inlineMemoize","logic","cache","__inline_memoize_cache__","noop","once","called","stringifyError","level","newErr","extend","defineLazyProp","configurable","isObjectObject","isPlainObject","replaceObject","replacer","fullKey","itemKey","_loop3","isDefined","cleanup","tasks","cleaned","register","task","pop","assertExists","thing","isDocumentReady","document","body","readyState","urlEncode","waitForDocumentReady","interval","setInterval","clearInterval","parseQuery","queryString","params","_i2","_queryString$split2","pair","decodeURIComponent","extendQuery","originalQuery","props","filter","appendChild","container","isElement","element","Element","nodeType","style","getElementSafe","id","querySelector","elementReady","el","PopupOpenError","awaitFrameLoad","addEventListener","cleanIframes","linkFrameWindow","awaitFrameWindow","loadedFrame","iframe","options","tag","styleText","createElement","class","className","setAttribute","attributes","_i6","_Object$keys2","styleSheet","cssText","createTextNode","html","innerHTML","allowTransparency","backgroundColor","border","isIE","navigator","userAgent","hasAttribute","getElement","event","removeEventListener","destroyElement","removeChild","isElementClosed","onResize","_temp","_ref2","_ref2$width","width","_ref2$height","height","_ref2$interval","_ref2$win","currentWidth","offsetWidth","currentHeight","offsetHeight","observer","newWidth","newHeight","ResizeObserver","observe","MutationObserver","childList","subtree","characterData","loop","disconnect","isPerc","test","isPx","toPx","parseInt","toNum","toCSS","CHILD_WINDOW_TIMEOUT","ACK_TIMEOUT","ACK_TIMEOUT_KNOWN","RES_TIMEOUT","MESSAGE_TYPE","REQUEST","RESPONSE","ACK","MESSAGE_NAME","METHOD","HELLO","OPEN_TUNNEL","SERIALIZATION_TYPE","CROSS_DOMAIN_ZALGO_PROMISE","CROSS_DOMAIN_FUNCTION","CROSS_DOMAIN_WINDOW","getGlobal","getObj","globalStore","defStore","store","storeKey","defVal","del","reset","WildCard","getWildcard","global","WINDOW_WILDCARD","windowStore","winStore","getStore","getInstanceID","getHelloPromise","sayHello","_ref3","send","instanceID","_ref4","data","getWindowInstanceID","_ref5","_ref6","markWindowKnown","TYPE","FUNCTION","ERROR","PROMISE","REGEX","DATE","ARRAY","OBJECT","STRING","NUMBER","BOOLEAN","NULL","UNDEFINED","isSerializedType","__type__","determineType","serializeType","type","__val__","SERIALIZER","_SERIALIZER","_ref","code","toJSON","defaultSerializers","DESERIALIZER","_DESERIALIZER","RegExp","defaultDeserializers","cleanupProxyWindows","idToProxyWindow","_idToProxyWindow$keys2","shouldClean","ProxyWindow","serializedWindow","actualWindow","isProxyWindow","actualWindowPromise","setWindow","memoizedPromiseFunction","_len2","_key2","memoizePromise","getType","isPopup","isIframe","setLocation","href","setName","frameElement","close","focus","isClosed","_this5","getWindow","awaitWindow","matchWindow","_this6","unwrap","serialize","toProxyWindow","deserialize","on","addMethod","methodStore","proxyWindowMethods","lookupMethod","serializeFunction","destination","meth","methodSource","listenForFunctionCalls","__id__","__name__","serializeMessage","_serialize","serializers","serializer","serializePromise","deserializeMessage","_deserialize","deserializers","parse","deserializer","serializedPromise","serializedFunction","getDeserializedFunction","opts","crossDomainFunctionWrapper","_arguments","fireAndForget","__origin__","__source__","deserializeFunction","_ref7","SEND_MESSAGE_STRATEGIES","sendMessage","_serializeMessage","serializedMessage","strategies","errors","strategyName","dom","forEach","postMessage","mockUserAgent","getUserAgent","foreignGlobal","receiveMessage","__DOMAIN_REGEX__","getResponseListener","deleteResponseListener","isResponseListenerErrored","getRequestListener","requestListeners","winQualifier","nameListeners","domainListeners","_i4","_domainListeners$__DO2","_domainListeners$__DO3","listener","regex","RECEIVE_MESSAGE_TYPES","_RECEIVE_MESSAGE_TYPE","sendResponse","ack","response","pathname","handleError","receivedMessages","parsedMessage","parseMessage","requestListener","addRequestListener","listenersCollection","_win2","_i8","_i10","_domain2","_i12","existingListener","regexListeners","regexListener","strDomain","errorHandler","responseTimeout","childTimeout","reqPromises","requestPromise","actualParent","_i15","_getFrames8","isAncestor","awaitWindowHello","logName","hasResult","markResponseListenerErrored","responseListener","addResponseListener","totalAckTimeout","isWindowKnown","totalResTimeout","ackTimeout","resTimeout","cycleTime","cycle","max","min","internalSerializeMessage","internalDeserializeMessage","globalFor","getProxyElement","resize","initialized","sourceElement","originalEvent","messageListener","listenForMessages","initHello","setup","ZOID","POST_MESSAGE","PROP_TYPE","PROP_SERIALIZATION","DOTIFY","BASE64","CONTEXT","DEFAULT_DIMENSIONS","WIDTH","HEIGHT","EVENT","RENDER","RENDERED","DISPLAY","CLOSE","PROPS","normalizeChildProp","component","helpers","prop","getPropDefinition","childDecorate","parseChildWindowName","windowName","_windowName$split","zoidcomp","encodedPayload","atob","base64decode","getChildPayload","ChildComponent","parentComponentWindow","onPropHandlers","autoResize","childPayload","__ZOID__","version","getParentComponentWindow","checkParentDomain","initialProps","getPropsByRef","setProps","watchForClose","init","buildExports","watchForResize","getHelpers","onProps","allowedParentDomains","ref","getNthParent","ancestor","_getAllFramesInWindow2","windows","getProps","isUpdate","existingProps","sameDomain","alias","_component$getPropNam2","getPropNames","normalizeChildProps","_this$onPropHandlers2","checkClose","destroy","getAutoResize","_ref3$width","_ref3$height","_ref3$element","_this4$getAutoResize","updateProps","RENDER_DRIVERS","getQueryParam","queryParam","getQueryValue","queryValue","openOnClick","openFrame","title","open","proxyFrame","frameWatcher","clean","_requestPromises$get2","cleanUpWindow","openPrerenderFrame","openPrerender","proxyWin","proxyPrerenderFrame","prerenderFrame","prerenderFrameWindow","delegate","proxyContainer","ParentComponent","driver","initPromise","handledErrors","state","setupEvents","registerActiveComponent","destroyActiveComponent","watchForUnload","triggered","eventName","handlerList","cancelled","trigger","_len3","_key3","triggerOnce","_len4","_key4","onRender","onDisplay","onRendered","onClose","render","log","initialDomain","getInitialDomain","checkAllowRender","buildUrl","getProxyContainer","renderContainer","setState","setProxyWin","prerender","loadUrl","setWindowName","buildWindowName","openBridge","runTimeout","containerElement","buildChildPayload","getPropsRef","getPropsForChild","propRef","_ref7$target","getWindowRef","buildParentExports","_ref8","validate","inputProps","propNames","aliases","propDef","default","_Object$keys4","decorate","required","extendProps","propsDef","builtinProps","serialization","dotify","prefix","newobj","every","_Object$keys6","dotkey","query","originalUrl","originalHash","_url$split","_originalUrl$split","hashString","extendUrl","normalizeMockUrl","getUrl","sendToChild","_this7","_this8","_this9","_this10","windowProp","_this11","_this12","_this13","_this$component$getPr2","propName","allowDelegate","overridesPromise","overrides","_ref9","_this$driver$delegate2","_this14","_this15","closeWindowListener","_this16","unloadWindowListener","_this17","initChild","_this18","_this19","_ref10","_ref11","_this20","_this21","secondClosed","_this22","proxyPrerenderWin","_ref12","_this23","prerenderTemplate","prerenderWindow","isBlankDomain","renderTemplate","tagName","children","writeElementToWindow","_ref13","_ref13$width","_ref13$height","_ref13$element","_ref14","renderer","_ref15","_this24","dimensions","_ref16","_this25","_ref17","innerContainer","containerTemplate","_this26","_this27","DelegateComponent","watchForSourceClose","getDelegate","getOverrides","closeSourceWindowListener","react","React","ReactDOM","_React$Component","subClass","superClass","_class","__proto__","componentDidMount","findDOMNode","componentDidUpdate","Component","vue","Vue","inheritAttrs","mounted","$el","$attrs","watch","deep","angular","ng","directive","g","toUpperCase","scope","restrict","controller","$scope","$element","$root","$$phase","$apply","safeApply","instance","$watch","angular2","zoid","AngularComponent","NgModule","ElementRef","NgZone","internalProps","zone","run","ComponentInstance","selector","template","inputs","Class","elementRef","_props","ngOnInit","targetElement","nativeElement","ngDoCheck","obj1","obj2","checked","equals","declarations","CLASS","VISIBLE","INVISIBLE","defaultContainerTemplate","_ref$dimensions","classList","add","remove","div","defaultPrerenderTemplate","spinner","defaultNoop","decorateOnce","bridgeUrl","defaultContext","driverCache","xprops","logger","PROP_TYPE_LIST","validatePropDefinitions","components","_ref$width","_ref$height","popup","debug","info","warn","registerChild","listenDelegate","dep","drivers","isChild","_ref2$data","canRenderTo","getBridgeUrl","payload","getDefaultContainer","getDefaultContext","renderTo","activeComponents","destroyAll","__webpack_exports__","component_destroyAll","component_Component"],"mappings":"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","file":"zoid.frameworks.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"zoid\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"zoid\"] = factory();\n\telse\n\t\troot[\"zoid\"] = factory();\n})((typeof self !== 'undefined' ? self : this), function() {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 0);\n","export default function _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}","/* @flow */\n\nexport function isPromise(item : mixed) : boolean {\n    try {\n        if (!item) {\n            return false;\n        }\n\n        if (typeof Promise !== 'undefined' && item instanceof Promise) {\n            return true;\n        }\n\n        if (typeof window !== 'undefined' && window.Window && item instanceof window.Window) {\n            return false;\n        }\n\n        if (typeof window !== 'undefined' && window.constructor && item instanceof window.constructor) {\n            return false;\n        }\n\n        let toString = ({}).toString;\n\n        if (toString) {\n            let name = toString.call(item);\n\n            if (name === '[object Window]' || name === '[object global]' || name === '[object DOMWindow]') {\n                return false;\n            }\n        }\n\n        if (typeof item.then === 'function') {\n            return true;\n        }\n    } catch (err) {\n        return false;\n    }\n\n    return false;\n}\n","/* @flow */\n\nimport type { ZalgoPromise } from './promise';\n\nconst dispatchedErrors = [];\nconst possiblyUnhandledPromiseHandlers = [];\n\nexport function dispatchPossiblyUnhandledError<T>(err : mixed, promise : ZalgoPromise<T>) {\n\n    if (dispatchedErrors.indexOf(err) !== -1) {\n        return;\n    }\n\n    dispatchedErrors.push(err);\n\n    setTimeout(() => {\n        if (__DEBUG__) {\n            // $FlowFixMe\n            throw new Error(`${ err.stack || err.toString() }\\n\\nFrom promise:\\n\\n${ promise.stack }`);\n        }\n\n        throw err;\n    }, 1);\n\n    for (let j = 0; j < possiblyUnhandledPromiseHandlers.length; j++) {\n        // $FlowFixMe\n        possiblyUnhandledPromiseHandlers[j](err, promise);\n    }\n}\n\nexport function onPossiblyUnhandledException(handler : (mixed, promise? : ZalgoPromise<*>) => void) : { cancel : () => void } {\n    possiblyUnhandledPromiseHandlers.push(handler);\n\n    return {\n        cancel() {\n            possiblyUnhandledPromiseHandlers.splice(possiblyUnhandledPromiseHandlers.indexOf(handler), 1);\n        }\n    };\n}\n","/* @flow */\n\nimport type { ZalgoPromise } from './promise';\n\nlet activeCount = 0;\nlet flushPromise;\n\nfunction flushActive() {\n    if (!activeCount && flushPromise) {\n        const promise = flushPromise;\n        flushPromise = null;\n        promise.resolve();\n    }\n}\n\nexport function startActive() {\n    activeCount += 1;\n}\n\nexport function endActive() {\n    activeCount -= 1;\n    flushActive();\n}\n\nexport function awaitActive(Zalgo : Class<ZalgoPromise<*>>) : ZalgoPromise<void> { // eslint-disable-line no-undef\n    let promise = flushPromise = flushPromise || new Zalgo();\n    flushActive();\n    return promise;\n}\n","/* @flow */\n\nimport { isPromise } from './utils';\nimport { onPossiblyUnhandledException, dispatchPossiblyUnhandledError } from './exceptions';\nimport { startActive, endActive, awaitActive } from './flush';\n\nexport class ZalgoPromise<R : mixed> {\n\n    resolved : boolean\n    rejected : boolean\n    errorHandled : boolean\n    value : R\n    error : mixed\n    handlers : Array<{\n        promise : ZalgoPromise<*>,\n        onSuccess : void | (result : R) => mixed,\n        onError : void | (error : mixed) => mixed\n    }>\n    dispatching : boolean\n    stack : string\n\n    constructor(handler : ?(resolve : (result : R) => void, reject : (error : mixed) => void) => void) {\n\n        this.resolved = false;\n        this.rejected = false;\n        this.errorHandled = false;\n\n        this.handlers = [];\n\n        if (handler) {\n\n            let result;\n            let error;\n            let resolved = false;\n            let rejected = false;\n            let isAsync = false;\n\n            startActive();\n\n            try {\n                handler(res => {\n                    if (isAsync) {\n                        this.resolve(res);\n                    } else {\n                        resolved = true;\n                        result = res;\n                    }\n\n                }, err => {\n                    if (isAsync) {\n                        this.reject(err);\n                    } else {\n                        rejected = true;\n                        error = err;\n                    }\n                });\n\n            } catch (err) {\n                endActive();\n                this.reject(err);\n                return;\n            }\n\n            endActive();\n\n            isAsync = true;\n\n            if (resolved) {\n                // $FlowFixMe\n                this.resolve(result);\n            } else if (rejected) {\n                this.reject(error);\n            }\n        }\n\n        if (__DEBUG__) {\n            try {\n                throw new Error(`ZalgoPromise`);\n            } catch (err) {\n                this.stack = err.stack;\n            }\n        }\n    }\n\n    resolve(result : R) : ZalgoPromise<R> {\n        if (this.resolved || this.rejected) {\n            return this;\n        }\n\n        if (isPromise(result)) {\n            throw new Error('Can not resolve promise with another promise');\n        }\n\n        this.resolved = true;\n        this.value = result;\n        this.dispatch();\n\n        return this;\n    }\n\n    reject(error : mixed) : ZalgoPromise<R> {\n        if (this.resolved || this.rejected) {\n            return this;\n        }\n\n        if (isPromise(error)) {\n            throw new Error('Can not reject promise with another promise');\n        }\n\n        if (!error) {\n            let err = (error && typeof error.toString === 'function' ? error.toString() : Object.prototype.toString.call(error));\n            error = new Error(`Expected reject to be called with Error, got ${ err }`);\n        }\n\n        this.rejected = true;\n        this.error = error;\n\n        if (!this.errorHandled) {\n            setTimeout(() => {\n                if (!this.errorHandled) {\n                    dispatchPossiblyUnhandledError(error, this);\n                }\n            }, 1);\n        }\n\n        this.dispatch();\n\n        return this;\n    }\n\n    asyncReject(error : mixed) : ZalgoPromise<R> {\n        this.errorHandled = true;\n        this.reject(error);\n        return this;\n    }\n    \n    dispatch() {\n\n        let { dispatching, resolved, rejected, handlers } = this;\n\n        if (dispatching) {\n            return;\n        }\n\n        if (!resolved && !rejected) {\n            return;\n        }\n\n        this.dispatching = true;\n        startActive();\n\n        for (let i = 0; i < handlers.length; i++) {\n\n            let { onSuccess, onError, promise } = handlers[i];\n\n            let result;\n\n            if (resolved) {\n\n                try {\n                    result = onSuccess ? onSuccess(this.value) : this.value;\n                } catch (err) {\n                    promise.reject(err);\n                    continue;\n                }\n\n            } else if (rejected) {\n\n                if (!onError) {\n                    promise.reject(this.error);\n                    continue;\n                }\n\n                try {\n                    result = onError(this.error);\n                } catch (err) {\n                    promise.reject(err);\n                    continue;\n                }\n            }\n\n            if (result instanceof ZalgoPromise && (result.resolved || result.rejected)) {\n\n                if (result.resolved) {\n                    promise.resolve(result.value);\n                } else {\n                    promise.reject(result.error);\n                }\n\n                result.errorHandled = true;\n\n            } else if (isPromise(result)) {\n\n                if (result instanceof ZalgoPromise && (result.resolved || result.rejected)) {\n                    if (result.resolved) {\n                        promise.resolve(result.value);\n                    } else {\n                        promise.reject(result.error);\n                    }\n\n                } else {\n                    // $FlowFixMe\n                    result.then(res => {\n                        promise.resolve(res);\n                    }, err => {\n                        promise.reject(err);\n                    });\n                }\n\n            } else {\n\n                promise.resolve(result);\n            }\n        }\n\n        handlers.length = 0;\n        this.dispatching = false;\n        endActive();\n    }\n\n    then<X : mixed, Y : mixed>(onSuccess : void | (result : R) => (ZalgoPromise<X> | Y), onError : void | (error : mixed) => (ZalgoPromise<X> | Y)) : ZalgoPromise<X | Y> {\n\n        if (onSuccess && typeof onSuccess !== 'function' && !onSuccess.call) {\n            throw new Error('Promise.then expected a function for success handler');\n        }\n\n        if (onError && typeof onError !== 'function' && !onError.call) {\n            throw new Error('Promise.then expected a function for error handler');\n        }\n\n        let promise : ZalgoPromise<X | Y> = new ZalgoPromise();\n\n        this.handlers.push({\n            promise,\n            onSuccess,\n            onError\n        });\n\n        this.errorHandled = true;\n\n        this.dispatch();\n\n        return promise;\n    }\n\n    catch<X : mixed, Y : mixed>(onError : (error : mixed) => ZalgoPromise<X> | Y) : ZalgoPromise<X | Y> {\n        return this.then(undefined, onError);\n    }\n\n    finally(onFinally : () => mixed) : ZalgoPromise<R> {\n\n        if (onFinally && typeof onFinally !== 'function' && !onFinally.call) {\n            throw new Error('Promise.finally expected a function');\n        }\n\n        return this.then((result) => {\n            return ZalgoPromise.try(onFinally)\n                .then(() => {\n                    return result;\n                });\n        }, (err) => {\n            return ZalgoPromise.try(onFinally)\n                .then(() => {\n                    throw err;\n                });\n        });\n    }\n\n    timeout(time : number, err : ?Error) : ZalgoPromise<R> {\n\n        if (this.resolved || this.rejected) {\n            return this;\n        }\n\n        let timeout = setTimeout(() => {\n\n            if (this.resolved || this.rejected) {\n                return;\n            }\n\n            this.reject(err || new Error(`Promise timed out after ${ time }ms`));\n\n        }, time);\n\n        return this.then(result => {\n            clearTimeout(timeout);\n            return result;\n        });\n    }\n\n    // $FlowFixMe\n    toPromise() : Promise<R> {\n        // $FlowFixMe\n        if (typeof Promise === 'undefined') {\n            throw new TypeError(`Could not find Promise`);\n        }\n        // $FlowFixMe\n        return Promise.resolve(this); // eslint-disable-line compat/compat\n    }\n\n    static resolve<X : mixed>(value : X | ZalgoPromise<X>) : ZalgoPromise<X> {\n\n        if (value instanceof ZalgoPromise) {\n            return value;\n        }\n\n        if (isPromise(value)) {\n            // $FlowFixMe\n            return new ZalgoPromise((resolve, reject) => value.then(resolve, reject));\n        }\n\n        return new ZalgoPromise().resolve(value);\n    }\n\n    static reject(error : mixed) : ZalgoPromise<R> {\n        return new ZalgoPromise().reject(error);\n    }\n\n    static asyncReject(error : mixed) : ZalgoPromise<R> {\n        return new ZalgoPromise().asyncReject(error);\n    }\n\n    static all<X : [*] | [*, *] | [*, *, *] | [*, *, *, *] | [*, *, *, *, *] | [*, *, *, *, *, *] | [*, *, *, *, *, *, *] | [*, *, *, *, *, *, *, *] | [*, *, *, *, *, *, *, *, *] | Array<mixed>>(promises : X) : ZalgoPromise<$TupleMap<X, <Y>(ZalgoPromise<Y> | Y) => Y>> { // eslint-disable-line no-undef\n\n        let promise = new ZalgoPromise();\n        let count = promises.length;\n        let results = [];\n\n        if (!count) {\n            promise.resolve(results);\n            return promise;\n        }\n\n        for (let i = 0; i < promises.length; i++) {\n            let prom = promises[i];\n\n            if (prom instanceof ZalgoPromise) {\n                if (prom.resolved) {\n                    results[i] = prom.value;\n                    count -= 1;\n                    continue;\n                }\n            } else if (!isPromise(prom)) {\n                results[i] = prom;\n                count -= 1;\n                continue;\n            }\n\n            ZalgoPromise.resolve(prom).then(result => {\n                results[i] = result;\n                count -= 1;\n                if (count === 0) {\n                    promise.resolve(results);\n                }\n            }, err => {\n                promise.reject(err);\n            });\n        }\n\n        if (count === 0) {\n            promise.resolve(results);\n        }\n\n        return promise;\n    }\n\n    static hash<O : { [string] : * }>(promises : O) : ZalgoPromise<$ObjMap<O, <Y>(ZalgoPromise<Y> | Y) => Y>> { // eslint-disable-line no-undef\n        let result = {};\n        \n        return ZalgoPromise.all(Object.keys(promises).map(key => {\n            return ZalgoPromise.resolve(promises[key]).then(value => {\n                result[key] = value;\n            });\n        })).then(() => {\n            return result;\n        });\n    }\n\n    static map<T, X>(items : Array<T>, method : (T) => (ZalgoPromise<X> | X)) : ZalgoPromise<Array<X>> {\n        // $FlowFixMe\n        return ZalgoPromise.all(items.map(method));\n    }\n\n    static onPossiblyUnhandledException(handler : (err : mixed) => void) : { cancel : () => void } {\n        return onPossiblyUnhandledException(handler);\n    }\n\n    static try<X : mixed, Y : mixed, C : mixed, A : Array<mixed>>(method : (...args : A) => (ZalgoPromise<X> | Y), context : ?C, args : ?A) : ZalgoPromise<X | Y> {\n\n        if (method && typeof method !== 'function' && !method.call) {\n            throw new Error('Promise.try expected a function');\n        }\n\n        let result;\n\n        startActive();\n        \n        try {\n            // $FlowFixMe\n            result = method.apply(context, args || []);\n        } catch (err) {\n            endActive();\n            return ZalgoPromise.reject(err);\n        }\n\n        endActive();\n\n        return ZalgoPromise.resolve(result);\n    }\n\n    static delay(delay : number) : ZalgoPromise<void> {\n        return new ZalgoPromise(resolve => {\n            setTimeout(resolve, delay);\n        });\n    }\n\n    static isPromise(value : mixed) : boolean {\n\n        if (value && value instanceof ZalgoPromise) {\n            return true;\n        }\n\n        return isPromise(value);\n    }\n\n    static flush() : ZalgoPromise<void> {\n        return awaitActive(ZalgoPromise);\n    }\n}\n","/* @flow */\n\nexport function isRegex(item : mixed) : boolean {\n    return Object.prototype.toString.call(item) === '[object RegExp]';\n}\n\n// eslint-disable-next-line no-unused-vars\nexport function noop(...args : Array<mixed>) {\n    // pass\n}\n","/* @flow */\n\nexport const PROTOCOL = {\n    MOCK:  ('mock:' : 'mock:'),\n    FILE:  ('file:' : 'file:'),\n    ABOUT: ('about:' : 'about:')\n};\n\nexport const WILDCARD = '*';\n\nexport const WINDOW_TYPE = {\n    IFRAME: ('iframe' : 'iframe'),\n    POPUP:  ('popup' : 'popup')\n};\n","/* @flow */\n/* eslint max-lines: 0 */\n\nimport { isRegex, noop } from './util';\nimport type { CrossDomainWindowType, SameDomainWindowType, DomainMatcher } from './types';\nimport { PROTOCOL, WILDCARD } from './constants';\n\nlet IE_WIN_ACCESS_ERROR = 'Call was rejected by callee.\\r\\n';\n\nexport function isFileProtocol(win : SameDomainWindowType = window) : boolean {\n    return win.location.protocol === PROTOCOL.FILE;\n}\n\nexport function isAboutProtocol(win : SameDomainWindowType = window) : boolean {\n    return win.location.protocol === PROTOCOL.ABOUT;\n}\n\nexport function getParent(win : ?CrossDomainWindowType) : ?CrossDomainWindowType {\n\n    if (!win) {\n        return;\n    }\n\n    try {\n        if (win.parent && win.parent !== win) {\n            return win.parent;\n        }\n    } catch (err) {\n        // pass\n    }\n}\n\nexport function getOpener(win : ?CrossDomainWindowType) : ?CrossDomainWindowType {\n\n    if (!win) {\n        return;\n    }\n\n    // Make sure we're not actually an iframe which has had window.open() called on us\n    if (getParent(win)) {\n        return;\n    }\n\n    try {\n        return win.opener;\n    } catch (err) {\n        // pass\n    }\n}\n\nexport function canReadFromWindow(win : CrossDomainWindowType | SameDomainWindowType) : boolean {\n    try {\n        // $FlowFixMe\n        noop(win && win.location && win.location.href);\n        return true;\n    } catch (err) {\n        // pass\n    }\n\n    return false;\n}\n\nexport function getActualDomain(win : ?SameDomainWindowType) : string {\n\n    win = win || window;\n\n    let location = win.location;\n\n    if (!location) {\n        throw new Error(`Can not read window location`);\n    }\n\n    let protocol = location.protocol;\n\n    if (!protocol) {\n        throw new Error(`Can not read window protocol`);\n    }\n\n    if (protocol === PROTOCOL.FILE) {\n        return `${ PROTOCOL.FILE }//`;\n    }\n\n    if (protocol === PROTOCOL.ABOUT) {\n\n        let parent = getParent(win);\n        if (parent && canReadFromWindow(parent)) {\n            // $FlowFixMe\n            return getActualDomain(parent);\n        }\n\n        return `${ PROTOCOL.ABOUT }//`;\n    }\n\n    let host = location.host;\n\n    if (!host) {\n        throw new Error(`Can not read window host`);\n    }\n\n    return `${ protocol }//${ host }`;\n}\n\nexport function getDomain(win : ?SameDomainWindowType) : string {\n\n    win = win || window;\n\n    let domain = getActualDomain(win);\n\n    if (domain && win.mockDomain && win.mockDomain.indexOf(PROTOCOL.MOCK) === 0) {\n        return win.mockDomain;\n    }\n\n    return domain;\n}\n\nexport function isBlankDomain(win : CrossDomainWindowType) : boolean {\n    try {\n        // $FlowFixMe\n        if (!win.location.href) {\n            return true;\n        }\n\n        if (win.location.href === 'about:blank') {\n            return true;\n        }\n    } catch (err) {\n        // pass\n    }\n\n    return false;\n}\n\nexport function isActuallySameDomain(win : CrossDomainWindowType) : boolean {\n\n    try {\n        if (win === window) {\n            return true;\n        }\n\n    } catch (err) {\n        // pass\n    }\n\n    try {\n        let desc = Object.getOwnPropertyDescriptor(win, 'location');\n\n        if (desc && desc.enumerable === false) {\n            return false;\n        }\n\n    } catch (err) {\n        // pass\n    }\n\n    try {\n        // $FlowFixMe\n        if (isAboutProtocol(win) && canReadFromWindow(win)) {\n            return true;\n        }\n    } catch (err) {\n        // pass\n    }\n\n    try {\n        // $FlowFixMe\n        if (getActualDomain(win) === getActualDomain(window)) {\n            return true;\n        }\n\n    } catch (err) {\n        // pass\n    }\n\n    return false;\n}\n\nexport function isSameDomain(win : CrossDomainWindowType | SameDomainWindowType) : boolean {\n\n    if (!isActuallySameDomain(win)) {\n        return false;\n    }\n\n    try {\n\n        if (win === window) {\n            return true;\n        }\n\n        // $FlowFixMe\n        if (isAboutProtocol(win) && canReadFromWindow(win)) {\n            return true;\n        }\n\n        // $FlowFixMe\n        if (getDomain(window) === getDomain(win)) {\n            return true;\n        }\n\n    } catch (err) {\n        // pass\n    }\n\n    return false;\n}\n\n\nexport function assertSameDomain(win : CrossDomainWindowType | SameDomainWindowType) : SameDomainWindowType {\n    if (!isSameDomain(win)) {\n        throw new Error(`Expected window to be same domain`);\n    }\n\n    // $FlowFixMe\n    return win;\n}\n\nexport function getParents(win : CrossDomainWindowType) : Array<CrossDomainWindowType> {\n\n    let result = [];\n\n    try {\n\n        while (win.parent !== win) {\n            result.push(win.parent);\n            win = win.parent;\n        }\n\n    } catch (err) {\n        // pass\n    }\n\n    return result;\n}\n\nexport function isAncestorParent(parent : CrossDomainWindowType, child : CrossDomainWindowType) : boolean {\n\n    if (!parent || !child) {\n        return false;\n    }\n\n    let childParent = getParent(child);\n\n    if (childParent) {\n        return childParent === parent;\n    }\n\n    if (getParents(child).indexOf(parent) !== -1) {\n        return true;\n    }\n\n    return false;\n}\n\nexport function getFrames(win : CrossDomainWindowType) : Array<CrossDomainWindowType> {\n\n    let result = [];\n\n    let frames;\n\n    try {\n        frames = win.frames;\n    } catch (err) {\n        frames = win;\n    }\n\n    let len;\n\n    try {\n        len = frames.length;\n    } catch (err) {\n        // pass\n    }\n\n    if (len === 0) {\n        return result;\n    }\n\n    if (len) {\n        for (let i = 0; i < len; i++) {\n\n            let frame;\n\n            try {\n                frame = frames[i];\n            } catch (err) {\n                continue;\n            }\n\n            result.push(frame);\n        }\n\n        return result;\n    }\n\n    for (let i = 0; i < 100; i++) {\n        let frame;\n\n        try {\n            frame = frames[i];\n        } catch (err) {\n            return result;\n        }\n\n        if (!frame) {\n            return result;\n        }\n\n        result.push(frame);\n    }\n\n    return result;\n}\n\n\nexport function getAllChildFrames(win : CrossDomainWindowType) : Array<CrossDomainWindowType> {\n\n    let result = [];\n\n    for (let frame of getFrames(win)) {\n        result.push(frame);\n\n        for (let childFrame of getAllChildFrames(frame)) {\n            result.push(childFrame);\n        }\n    }\n\n    return result;\n}\n\nexport function getTop(win : CrossDomainWindowType) : ?CrossDomainWindowType {\n\n    if (!win) {\n        return;\n    }\n\n    try {\n        if (win.top) {\n            return win.top;\n        }\n    } catch (err) {\n        // pass\n    }\n\n    if (getParent(win) === win) {\n        return win;\n    }\n\n    try {\n        if (isAncestorParent(window, win) && window.top) {\n            return window.top;\n        }\n    } catch (err) {\n        // pass\n    }\n\n    try {\n        if (isAncestorParent(win, window) && window.top) {\n            return window.top;\n        }\n    } catch (err) {\n        // pass\n    }\n\n    for (let frame of getAllChildFrames(win)) {\n        try {\n            if (frame.top) {\n                return frame.top;\n            }\n        } catch (err) {\n            // pass\n        }\n\n        if (getParent(frame) === frame) {\n            return frame;\n        }\n    }\n}\n\nexport function getNextOpener(win? : CrossDomainWindowType = window) : ?CrossDomainWindowType {\n    return getOpener(getTop(win) || win);\n}\n\nexport function getUltimateTop(win? : CrossDomainWindowType = window) : CrossDomainWindowType {\n    let opener = getNextOpener(win);\n\n    if (opener) {\n        return getUltimateTop(opener);\n    }\n\n    return top;\n}\n\nexport function getAllFramesInWindow(win : CrossDomainWindowType) : Array<CrossDomainWindowType> {\n    let top = getTop(win);\n\n    if (!top) {\n        throw new Error(`Can not determine top window`);\n    }\n\n    return [ ...getAllChildFrames(top), top ];\n}\n\nexport function getAllWindows(win? : CrossDomainWindowType = window) : $ReadOnlyArray<CrossDomainWindowType> {\n    let frames = getAllFramesInWindow(win);\n    let opener = getNextOpener(win);\n\n    if (opener) {\n        return [ ...getAllWindows(opener), ...frames ];\n    } else {\n        return frames;\n    }\n}\n\nexport function isTop(win : CrossDomainWindowType) : boolean {\n    return win === getTop(win);\n}\n\nexport function isFrameWindowClosed(frame : HTMLIFrameElement) : boolean {\n\n    if (!frame.contentWindow) {\n        return true;\n    }\n\n    if (!frame.parentNode) {\n        return true;\n    }\n\n    let doc = frame.ownerDocument;\n\n    if (doc && doc.documentElement && !doc.documentElement.contains(frame)) {\n        return true;\n    }\n\n    return false;\n}\n\nfunction safeIndexOf<T>(collection : Array<T>, item : T) : number {\n    for (let i = 0; i < collection.length; i++) {\n\n        try {\n            if (collection[i] === item) {\n                return i;\n            }\n        } catch (err) {\n            // pass\n        }\n    }\n\n    return -1;\n}\n\nlet iframeWindows = [];\nlet iframeFrames = [];\n\nexport function isWindowClosed(win : CrossDomainWindowType, allowMock : boolean = true) : boolean {\n\n    try {\n        if (win === window) {\n            return false;\n        }\n    } catch (err) {\n        return true;\n    }\n\n    try {\n        if (!win) {\n            return true;\n        }\n\n    } catch (err) {\n        return true;\n    }\n\n    try {\n        if (win.closed) {\n            return true;\n        }\n\n    } catch (err) {\n\n        // I love you so much IE\n\n        if (err && err.message === IE_WIN_ACCESS_ERROR) {\n            return false;\n        }\n\n        return true;\n    }\n\n\n    if (allowMock && isSameDomain(win)) {\n        try {\n            // $FlowFixMe\n            if (win.mockclosed) {\n                return true;\n            }\n        } catch (err) {\n            // pass\n        }\n    }\n\n    // Mobile safari\n\n    try {\n        if (!win.parent || !win.top) {\n            return true;\n        }\n    } catch (err) {\n        // pass\n    }\n\n    // Yes, this actually happens in IE. win === win errors out when the window\n    // is from an iframe, and the iframe was removed from the page.\n\n    try {\n        noop(win === win); // eslint-disable-line no-self-compare\n    } catch (err) {\n        return true;\n    }\n\n    // IE orphaned frame\n\n    let iframeIndex = safeIndexOf(iframeWindows, win);\n\n    if (iframeIndex !== -1) {\n        let frame = iframeFrames[iframeIndex];\n\n        if (frame && isFrameWindowClosed(frame)) {\n            return true;\n        }\n    }\n\n    return false;\n}\n\nfunction cleanIframes() {\n    for (let i = 0; i < iframeWindows.length; i++) {\n        let closed = false;\n\n        try {\n            closed = iframeWindows[i].closed;\n        } catch (err) {\n            // pass\n        }\n\n        if (closed) {\n            iframeFrames.splice(i, 1);\n            iframeWindows.splice(i, 1);\n        }\n    }\n}\n\nexport function linkFrameWindow(frame : HTMLIFrameElement) {\n\n    cleanIframes();\n\n    if (frame && frame.contentWindow) {\n        try {\n            iframeWindows.push(frame.contentWindow);\n            iframeFrames.push(frame);\n        } catch (err) {\n            // pass\n        }\n    }\n}\n\nexport function getUserAgent(win : ?SameDomainWindowType) : string {\n    win = win || window;\n    return win.navigator.mockUserAgent || win.navigator.userAgent;\n}\n\n\nexport function getFrameByName(win : CrossDomainWindowType, name : string) : ?CrossDomainWindowType {\n\n    let winFrames = getFrames(win);\n\n    for (let childFrame of winFrames) {\n        try {\n            // $FlowFixMe\n            if (isSameDomain(childFrame) && childFrame.name === name && winFrames.indexOf(childFrame) !== -1) {\n                return childFrame;\n            }\n        } catch (err) {\n            // pass\n        }\n    }\n\n    try {\n        // $FlowFixMe\n        if (winFrames.indexOf(win.frames[name]) !== -1) {\n            // $FlowFixMe\n            return win.frames[name];\n        }\n    } catch (err) {\n        // pass\n    }\n\n    try {\n        if (winFrames.indexOf(win[name]) !== -1) {\n            return win[name];\n        }\n    } catch (err) {\n        // pass\n    }\n}\n\nexport function findChildFrameByName(win : CrossDomainWindowType, name : string) : ?CrossDomainWindowType {\n\n    let frame = getFrameByName(win, name);\n\n    if (frame) {\n        return frame;\n    }\n\n    for (let childFrame of getFrames(win)) {\n        let namedFrame = findChildFrameByName(childFrame, name);\n\n        if (namedFrame) {\n            return namedFrame;\n        }\n    }\n}\n\nexport function findFrameByName(win : CrossDomainWindowType, name : string) : ?CrossDomainWindowType {\n\n    let frame;\n\n    frame = getFrameByName(win, name);\n\n    if (frame) {\n        return frame;\n    }\n\n    let top = getTop(win) || win;\n\n    return findChildFrameByName(top, name);\n}\n\nexport function isParent(win : CrossDomainWindowType, frame : CrossDomainWindowType) : boolean {\n\n    let frameParent = getParent(frame);\n\n    if (frameParent) {\n        return frameParent === win;\n    }\n\n    for (let childFrame of getFrames(win)) {\n        if (childFrame === frame) {\n            return true;\n        }\n    }\n\n    return false;\n}\n\nexport function isOpener(parent : CrossDomainWindowType, child : CrossDomainWindowType) : boolean {\n\n    return parent === getOpener(child);\n}\n\nexport function getAncestor(win : ?CrossDomainWindowType) : ?CrossDomainWindowType {\n    win = win || window;\n\n    let opener = getOpener(win);\n\n    if (opener) {\n        return opener;\n    }\n\n    let parent = getParent(win);\n\n    if (parent) {\n        return parent;\n    }\n}\n\nexport function getAncestors(win : CrossDomainWindowType) : Array<CrossDomainWindowType> {\n\n    let results = [];\n\n    let ancestor = win;\n\n    while (ancestor) {\n        ancestor = getAncestor(ancestor);\n        if (ancestor) {\n            results.push(ancestor);\n        }\n    }\n\n    return results;\n}\n\n\nexport function isAncestor(parent : CrossDomainWindowType, child : CrossDomainWindowType) : boolean {\n\n    let actualParent = getAncestor(child);\n\n    if (actualParent) {\n        if (actualParent === parent) {\n            return true;\n        }\n\n        return false;\n    }\n\n    if (child === parent) {\n        return false;\n    }\n\n    if (getTop(child) === child) {\n        return false;\n    }\n\n    for (let frame of getFrames(parent)) {\n        if (frame === child) {\n            return true;\n        }\n    }\n\n    return false;\n}\n\nexport function isPopup() : boolean {\n    return Boolean(getOpener(window));\n}\n\nexport function isIframe() : boolean {\n    return Boolean(getParent(window));\n}\n\nexport function isFullpage() : boolean {\n    return Boolean(!isIframe() && !isPopup());\n}\n\nfunction anyMatch(collection1, collection2) : boolean {\n\n    for (let item1 of collection1) {\n        for (let item2 of collection2) {\n            if (item1 === item2) {\n                return true;\n            }\n        }\n    }\n\n    return false;\n}\n\nexport function getDistanceFromTop(win : CrossDomainWindowType = window) : number {\n    let distance = 0;\n    let parent = win;\n\n    while (parent) {\n        parent = getParent(parent);\n        if (parent) {\n            distance += 1;\n        }\n    }\n\n    return distance;\n}\n\nexport function getNthParent(win : CrossDomainWindowType, n : number = 1) : ?CrossDomainWindowType {\n    let parent = win;\n\n    for (let i = 0; i < n; i++) {\n        if (!parent) {\n            return;\n        }\n\n        parent = getParent(parent);\n    }\n\n    return parent;\n}\n\nexport function getNthParentFromTop(win : CrossDomainWindowType, n : number = 1) : ?CrossDomainWindowType {\n    return getNthParent(win, getDistanceFromTop(win) - n);\n}\n\nexport function isSameTopWindow(win1 : CrossDomainWindowType, win2 : CrossDomainWindowType) : boolean {\n\n    let top1 = getTop(win1) || win1;\n    let top2 = getTop(win2) || win2;\n\n    try {\n        if (top1 && top2) {\n            if (top1 === top2) {\n                return true;\n            }\n\n            return false;\n        }\n    } catch (err) {\n        // pass\n    }\n\n    let allFrames1 = getAllFramesInWindow(win1);\n    let allFrames2 = getAllFramesInWindow(win2);\n\n    if (anyMatch(allFrames1, allFrames2)) {\n        return true;\n    }\n\n    let opener1 = getOpener(top1);\n    let opener2 = getOpener(top2);\n\n    if (opener1 && anyMatch(getAllFramesInWindow(opener1), allFrames2)) {\n        return false;\n    }\n\n    if (opener2 && anyMatch(getAllFramesInWindow(opener2), allFrames1)) {\n        return false;\n    }\n\n    return false;\n}\n\nexport function matchDomain(pattern : DomainMatcher, origin : DomainMatcher) : boolean {\n\n    if (typeof pattern === 'string') {\n\n        if (typeof origin === 'string') {\n            return pattern === WILDCARD || origin === pattern;\n        }\n\n        if (isRegex(origin)) {\n            return false;\n        }\n\n        if (Array.isArray(origin)) {\n            return false;\n        }\n    }\n\n    if (isRegex(pattern)) {\n\n        if (isRegex(origin)) {\n            return pattern.toString() === origin.toString();\n        }\n\n        if (Array.isArray(origin)) {\n            return false;\n        }\n\n        // $FlowFixMe\n        return Boolean(origin.match(pattern));\n    }\n\n    if (Array.isArray(pattern)) {\n\n        if (Array.isArray(origin)) {\n            return JSON.stringify(pattern) === JSON.stringify(origin);\n        }\n\n        if (isRegex(origin)) {\n            return false;\n        }\n\n        return pattern.some(subpattern => matchDomain(subpattern, origin));\n    }\n\n    return false;\n}\n\nexport function stringifyDomainPattern(pattern : DomainMatcher) : string {\n    if (Array.isArray(pattern)) {\n        return `(${ pattern.join(' | ') })`;\n    } else if (isRegex(pattern)) {\n        return `RegExp(${ pattern.toString() }`;\n    } else {\n        return pattern.toString();\n    }\n}\n\nexport function getDomainFromUrl(url : string) : string {\n\n    let domain;\n\n    if (url.match(/^(https?|mock|file):\\/\\//)) {\n        domain = url;\n    } else {\n        return getDomain();\n    }\n\n    domain = domain.split('/').slice(0, 3).join('/');\n\n    return domain;\n}\n\nexport function onCloseWindow(win : CrossDomainWindowType, callback : Function, delay : number = 1000, maxtime : number = Infinity) : { cancel : () => void } {\n\n    let timeout;\n\n    let check = () => {\n\n        if (isWindowClosed(win)) {\n\n            if (timeout) {\n                clearTimeout(timeout);\n            }\n\n            return callback();\n        }\n\n        if (maxtime <= 0) {\n            clearTimeout(timeout);\n        } else {\n            maxtime -= delay;\n            timeout = setTimeout(check, delay);\n        }\n    };\n\n    check();\n\n    return {\n        cancel() {\n            if (timeout) {\n                clearTimeout(timeout);\n            }\n        }\n    };\n}\n\n// eslint-disable-next-line complexity\nexport function isWindow(obj : Object) : boolean {\n\n    try {\n        if (obj === window) {\n            return true;\n        }\n    } catch (err) {\n        if (err && err.message === IE_WIN_ACCESS_ERROR) {\n            return true;\n        }\n    }\n\n    try {\n        if (Object.prototype.toString.call(obj) === '[object Window]') {\n            return true;\n        }\n    } catch (err) {\n        if (err && err.message === IE_WIN_ACCESS_ERROR) {\n            return true;\n        }\n    }\n\n    try {\n        if (window.Window && obj instanceof window.Window) {\n            return true;\n        }\n    } catch (err) {\n        if (err && err.message === IE_WIN_ACCESS_ERROR) {\n            return true;\n        }\n    }\n\n    try {\n        if (obj && obj.self === obj) {\n            return true;\n        }\n    } catch (err) {\n        if (err && err.message === IE_WIN_ACCESS_ERROR) {\n            return true;\n        }\n    }\n\n    try {\n        if (obj && obj.parent === obj) {\n            return true;\n        }\n    } catch (err) {\n        if (err && err.message === IE_WIN_ACCESS_ERROR) {\n            return true;\n        }\n    }\n\n    try {\n        if (obj && obj.top === obj) {\n            return true;\n        }\n    } catch (err) {\n        if (err && err.message === IE_WIN_ACCESS_ERROR) {\n            return true;\n        }\n    }\n\n    try {\n        noop(obj === obj);  // eslint-disable-line no-self-compare\n\n    } catch (err) {\n        return true;\n    }\n\n    try {\n        noop(obj && obj.__cross_domain_utils_window_check__);\n\n    } catch (err) {\n        return true;\n    }\n\n    return false;\n}\n\nexport function isBrowser() : boolean {\n    return (typeof window !== 'undefined' && typeof window.location !== 'undefined');\n}\n\nexport function isCurrentDomain(domain : string) : boolean {\n    if (!isBrowser()) {\n        return false;\n    }\n\n    return (getDomain() === domain);\n}\n\nexport function isMockDomain(domain : string) : boolean {\n    return domain.indexOf(PROTOCOL.MOCK) === 0;\n}\n\nexport function normalizeMockUrl(url : string) : string {\n    if (!isMockDomain(getDomainFromUrl(url))) {\n        return url;\n    }\n\n    if (!__TEST__) {\n        throw new Error(`Mock urls not supported out of test mode`);\n    }\n\n    return url.replace(/^mock:\\/\\/[^/]+/, getActualDomain(window));\n}\n","/* @flow */\n\nexport function safeIndexOf<T>(collection : Array<T>, item : T) : number {\n    for (let i = 0; i < collection.length; i++) {\n\n        try {\n            if (collection[i] === item) {\n                return i;\n            }\n        } catch (err) {\n            // pass\n        }\n    }\n\n    return -1;\n}\n\n// eslint-disable-next-line no-unused-vars\nexport function noop(...args : Array<mixed>) {\n    // pass\n}\n","/* @flow */\n\nimport { isWindow, isWindowClosed } from 'cross-domain-utils/src';\n\nimport { hasNativeWeakMap } from './native';\nimport { noop, safeIndexOf } from './util';\n\nlet defineProperty = Object.defineProperty;\nlet counter = Date.now() % 1e9;\n\nexport class CrossDomainSafeWeakMap<K : Object, V : mixed> {\n\n    name : string\n    weakmap : WeakMap<K, V>\n    keys : Array<K>\n    values : Array<V>\n\n    constructor() {\n        counter += 1;\n\n        // eslint-disable-next-line no-bitwise\n        this.name = `__weakmap_${ Math.random() * 1e9 >>> 0 }__${ counter }`;\n\n        if (hasNativeWeakMap()) {\n            try {\n                this.weakmap = new WeakMap();\n            } catch (err) {\n                // pass\n            }\n        }\n\n        this.keys  = [];\n        this.values = [];\n    }\n\n    _cleanupClosedWindows() {\n\n        let weakmap = this.weakmap;\n        let keys = this.keys;\n\n        for (let i = 0; i < keys.length; i++) {\n            let value = keys[i];\n\n            if (isWindow(value) && isWindowClosed(value)) {\n\n                if (weakmap) {\n                    try {\n                        weakmap.delete(value);\n                    } catch (err) {\n                        // pass\n                    }\n                }\n\n                keys.splice(i, 1);\n                this.values.splice(i, 1);\n\n                i -= 1;\n            }\n        }\n    }\n\n    isSafeToReadWrite(key : K) : boolean {\n\n        if (isWindow(key)) {\n            return false;\n        }\n\n        try {\n            noop(key && key.self);\n            noop(key && key[this.name]);\n        } catch (err) {\n            return false;\n        }\n\n        return true;\n    }\n\n    set(key : K, value : V) {\n\n        if (!key) {\n            throw new Error(`WeakMap expected key`);\n        }\n\n        let weakmap = this.weakmap;\n\n        if (weakmap) {\n            try {\n                weakmap.set(key, value);\n            } catch (err) {\n                delete this.weakmap;\n            }\n        }\n\n        if (!this.isSafeToReadWrite(key)) {\n\n            this._cleanupClosedWindows();\n\n            let keys = this.keys;\n            let values = this.values;\n            let index = safeIndexOf(keys, key);\n\n            if (index === -1) {\n                keys.push(key);\n                values.push(value);\n            } else {\n                values[index] = value;\n            }\n\n        } else {\n\n            let name = this.name;\n            let entry = key[name];\n\n            if (entry && entry[0] === key) {\n                entry[1] = value;\n            } else {\n                defineProperty(key, name, {\n                    value:    [ key, value ],\n                    writable: true\n                });\n            }\n        }\n    }\n\n    get(key : K) : V | void {\n\n        if (!key) {\n            throw new Error(`WeakMap expected key`);\n        }\n\n        let weakmap = this.weakmap;\n\n        if (weakmap) {\n            try {\n                if (weakmap.has(key)) {\n                    return weakmap.get(key);\n                }\n            } catch (err) {\n                delete this.weakmap;\n            }\n        }\n\n        if (!this.isSafeToReadWrite(key)) {\n\n            this._cleanupClosedWindows();\n\n            let keys = this.keys;\n            let index = safeIndexOf(keys, key);\n\n            if (index === -1) {\n                return;\n            }\n\n            return this.values[index];\n\n        } else {\n\n            let entry = key[this.name];\n\n            if (entry && entry[0] === key) {\n                return entry[1];\n            }\n        }\n    }\n\n    delete(key : K) {\n\n        if (!key) {\n            throw new Error(`WeakMap expected key`);\n        }\n\n        let weakmap = this.weakmap;\n\n        if (weakmap) {\n            try {\n                weakmap.delete(key);\n            } catch (err) {\n                delete this.weakmap;\n            }\n        }\n\n        if (!this.isSafeToReadWrite(key)) {\n\n            this._cleanupClosedWindows();\n\n            let keys = this.keys;\n            let index = safeIndexOf(keys, key);\n\n            if (index !== -1) {\n                keys.splice(index, 1);\n                this.values.splice(index, 1);\n            }\n\n        } else {\n\n            let entry = key[this.name];\n\n            if (entry && entry[0] === key) {\n                entry[0] = entry[1] = undefined;\n            }\n        }\n    }\n\n    has(key : K) : boolean {\n\n        if (!key) {\n            throw new Error(`WeakMap expected key`);\n        }\n\n        let weakmap = this.weakmap;\n\n        if (weakmap) {\n            try {\n                if (weakmap.has(key)) {\n                    return true;\n                }\n            } catch (err) {\n                delete this.weakmap;\n            }\n        }\n\n        if (!this.isSafeToReadWrite(key)) {\n\n            this._cleanupClosedWindows();\n\n            let index = safeIndexOf(this.keys, key);\n            return index !== -1;\n\n        } else {\n\n            let entry = key[this.name];\n\n            if (entry && entry[0] === key) {\n                return true;\n            }\n\n            return false;\n        }\n    }\n\n    getOrSet(key : K, getter : () => V) : V {\n        if (this.has(key)) {\n            // $FlowFixMe\n            return this.get(key);\n        }\n\n        let value = getter();\n        this.set(key, value);\n        return value;\n    }\n}\n","/* @flow */\n/* eslint max-lines: 0 */\n\nimport { ZalgoPromise } from 'zalgo-promise/src';\nimport { WeakMap } from 'cross-domain-safe-weakmap/src';\n\nimport type { CancelableType } from './types';\n\nexport function base64encode(str : string) : string {\n    if (typeof btoa === 'function') {\n        return btoa(str);\n    } else if (typeof Buffer !== 'undefined') {\n        return Buffer.from(str, 'utf8').toString('base64');\n    }\n\n    throw new Error(`Can not find window.btoa or Buffer`);\n}\n\nexport function base64decode(str : string) : string {\n    if (typeof window !== 'undefined' && typeof window.atob === 'function') {\n        return window.atob(str);\n    }\n\n    if (typeof Buffer !== 'undefined') {\n        return Buffer.from(str, 'base64').toString('utf8');\n    }\n\n    throw new Error(`Can not find window.atob or Buffer`);\n}\n\nexport function uniqueID() : string {\n\n    let chars = '0123456789abcdef';\n\n    let randomID = 'xxxxxxxxxx'.replace(/./g, () => {\n        return chars.charAt(Math.floor(Math.random() * chars.length));\n    });\n\n    let timeID = base64encode(\n        new Date().toISOString().slice(11, 19).replace('T', '.')\n    ).replace(/[^a-zA-Z0-9]/g, '').toLowerCase();\n\n    return `${ randomID }_${ timeID }`;\n}\n\nexport function getGlobal() : Object {\n    if (typeof window !== 'undefined') {\n        return window;\n    }\n    if (typeof global !== 'undefined') {\n        return global;\n    }\n    if (typeof __GLOBAL__ !== 'undefined') {\n        return __GLOBAL__;\n    }\n    throw new Error(`No global found`);\n}\n\nlet objectIDs;\n\nexport function getObjectID(obj : Object) : string {\n\n    objectIDs = objectIDs || new WeakMap();\n\n    if (obj === null || obj === undefined || (typeof obj !== 'object' && typeof obj !== 'function')) {\n        throw new Error(`Invalid object`);\n    }\n\n    let uid = objectIDs.get(obj);\n\n    if (!uid) {\n        uid = `${ typeof obj }:${ uniqueID() }`;\n        objectIDs.set(obj, uid);\n    }\n\n    return uid;\n}\n\nfunction serializeArgs(args : Array<mixed>) : string {\n    try {\n        return JSON.stringify(Array.prototype.slice.call(args), (subkey, val) => {\n            if (typeof val === 'function') {\n                return `memoize[${ getObjectID(val) }]`;\n            }\n            return val;\n        });\n    } catch (err) {\n        throw new Error(`Arguments not serializable -- can not be used to memoize`);\n    }\n}\n\n// eslint-disable-next-line flowtype/no-weak-types\nexport function memoize<R>(method : (...args : Array<any>) => R, options : { time? : number, name? : string, thisNamespace? : boolean } = {}) : ((...args : Array<any>) => R) {\n    let cacheMap = new WeakMap();\n\n    // eslint-disable-next-line flowtype/no-weak-types\n    function memoizedFunction(...args : Array<any>) : R {\n        let cache = cacheMap.getOrSet(options.thisNamespace ? this : method, () => ({}));\n\n        let key : string = serializeArgs(args);\n\n        let cacheTime = options.time;\n        if (cache[key] && cacheTime && (Date.now() - cache[key].time) < cacheTime) {\n            delete cache[key];\n        }\n\n        if (cache[key]) {\n            return cache[key].value;\n        }\n\n        let time  = Date.now();\n        let value = method.apply(this, arguments);\n\n        cache[key] = { time, value };\n\n        return cache[key].value;\n    }\n\n    memoizedFunction.reset = () => {\n        cacheMap.delete(options.thisNamespace ? this : method);\n    };\n\n    if (options.name) {\n        memoizedFunction.displayName = `${ options.name }:memoized`;\n    }\n\n    return memoizedFunction;\n}\n\n// eslint-disable-next-line flowtype/no-weak-types\nexport function memoizePromise<R>(method : (...args : Array<any>) => ZalgoPromise<R>) : ((...args : Array<any>) => ZalgoPromise<R>) {\n    let cache = {};\n\n    // eslint-disable-next-line flowtype/no-weak-types\n    function memoizedPromiseFunction(...args : Array<any>) : ZalgoPromise<R> {\n        let key : string = serializeArgs(args);\n\n        if (cache.hasOwnProperty(key)) {\n            return cache[key];\n        }\n\n        cache[key] = method.apply(this, arguments)\n            .finally(() => {\n                delete cache[key];\n            });\n\n        return cache[key];\n    }\n\n    memoizedPromiseFunction.reset = () => {\n        cache = {};\n    };\n\n    return memoizedPromiseFunction;\n}\n\n// eslint-disable-next-line flowtype/no-weak-types\nexport function promisify<R>(method : (...args : Array<any>) => R, options : { name? : string } = {}) : ((...args : Array<any>) => ZalgoPromise<R>) {\n    function promisifiedFunction() : ZalgoPromise<R> {\n        return ZalgoPromise.try(method, this, arguments);\n    }\n\n    if (options.name) {\n        promisifiedFunction.displayName = `${ options.name }:promisified`;\n    }\n\n    return promisifiedFunction;\n}\n\n// eslint-disable-next-line flowtype/no-weak-types\nexport function inlineMemoize<R>(method : (...args : Array<any>) => R, logic : (...args : Array<any>) => R, args : Array<any> = []) : R {\n    let cache = method.__inline_memoize_cache__ = method.__inline_memoize_cache__ || {};\n    let key = serializeArgs(args);\n\n    if (cache.hasOwnProperty(key)) {\n        return cache[key];\n    }\n    \n    let result = cache[key] = logic(...args);\n    return result;\n}\n\n// eslint-disable-next-line no-unused-vars\nexport function noop(...args : Array<mixed>) {\n    // pass\n}\n\nexport function once(method : Function) : Function {\n    let called = false;\n\n    return function onceFunction() : mixed {\n        if (!called) {\n            called = true;\n            return method.apply(this, arguments);\n        }\n    };\n}\n\nexport function hashStr(str : string) : number {\n    let hash = 0;\n    for (let i = 0; i < str.length; i++) {\n        hash += str[i].charCodeAt(0) * Math.pow((i % 10) + 1, 5);\n    }\n    return Math.floor(Math.pow(Math.sqrt(hash), 5));\n}\n\nexport function strHashStr(str : string) : string {\n    let hash = '';\n\n    for (let i = 0; i < str.length; i++) {\n        let total = (str[i].charCodeAt(0) * i);\n\n        if (str[i + 1]) {\n            total += (str[i + 1].charCodeAt(0) * (i - 1));\n        }\n\n        hash += String.fromCharCode(97 + (Math.abs(total) % 26));\n    }\n\n    return hash;\n}\n\nexport function match(str : string, pattern : RegExp) : ?string {\n    let regmatch = str.match(pattern);\n    if (regmatch) {\n        return regmatch[1];\n    }\n}\n\nexport function awaitKey<T: mixed>(obj : Object, key : string) : ZalgoPromise<T> {\n    return new ZalgoPromise(resolve => {\n\n        let value = obj[key];\n\n        if (value) {\n            return resolve(value);\n        }\n\n        delete obj[key];\n\n        Object.defineProperty(obj, key, {\n\n            configurable: true,\n\n            set(item) {\n                value = item;\n\n                if (value) {\n                    resolve(value);\n                }\n            },\n\n            get() : mixed {\n                return value;\n            }\n        });\n    });\n}\n\nexport function stringifyError(err : mixed, level : number = 1) : string {\n\n    if (level >= 3) {\n        return 'stringifyError stack overflow';\n    }\n\n    try {\n        if (!err) {\n            return `<unknown error: ${ Object.prototype.toString.call(err) }>`;\n        }\n\n        if (typeof err === 'string') {\n            return err;\n        }\n\n        if (err instanceof Error) {\n            let stack = err && err.stack;\n            let message = err && err.message;\n\n            if (stack && message) {\n                if (stack.indexOf(message) !== -1) {\n                    return stack;\n                } else {\n                    return `${ message }\\n${ stack }`;\n                }\n            } else if (stack) {\n                return stack;\n            } else if (message) {\n                return message;\n            }\n        }\n\n        if (typeof err.toString === 'function') {\n            return err.toString();\n        }\n\n        return Object.prototype.toString.call(err);\n\n    } catch (newErr) { // eslint-disable-line unicorn/catch-error-name\n        return `Error while stringifying error: ${ stringifyError(newErr, level + 1) }`;\n    }\n}\n\nexport function stringifyErrorMessage(err : mixed) : string {\n\n    let defaultMessage = `<unknown error: ${ Object.prototype.toString.call(err) }>`;\n\n    if (!err) {\n        return defaultMessage;\n    }\n\n    if (err instanceof Error) {\n        return err.message || defaultMessage;\n    }\n\n    if (typeof err.message === 'string') {\n        return err.message || defaultMessage;\n    }\n\n    return defaultMessage;\n}\n\nexport function stringify(item : mixed) : string {\n    if (typeof item === 'string') {\n        return item;\n    }\n\n    if (item && typeof item.toString === 'function') {\n        return item.toString();\n    }\n\n    return Object.prototype.toString.call(item);\n}\n\nexport function domainMatches(hostname : string, domain : string) : boolean {\n    hostname = hostname.split('://')[1];\n    let index = hostname.indexOf(domain);\n    return (index !== -1 && hostname.slice(index) === domain);\n}\n\nexport function patchMethod(obj : Object, name : string, handler : Function) {\n    let original = obj[name];\n\n    obj[name] = function patchedMethod() : mixed {\n        return handler({\n            context:      this,\n            args:         Array.prototype.slice.call(arguments),\n            original,\n            callOriginal: () => original.apply(this, arguments)\n        });\n    };\n}\n\nexport function extend<T : Object | Function>(obj : T, source : Object) : T {\n    if (!source) {\n        return obj;\n    }\n\n    if (Object.assign) {\n        return Object.assign(obj, source);\n    }\n\n    for (let key in source) {\n        if (source.hasOwnProperty(key)) {\n            obj[key] = source[key];\n        }\n    }\n\n    return obj;\n}\n\nexport function values<T>(obj : { [string] : T }) : Array<T> {\n    let result = [];\n    for (let key in obj) {\n        if (obj.hasOwnProperty(key)) {\n            result.push(obj[key]);\n        }\n    }\n    return result;\n}\n\nexport function perc(pixels : number, percentage : number) : number {\n    return Math.round((pixels * percentage) / 100);\n}\n\nexport function min(...args : Array<number>) : number {\n    return Math.min(...args);\n}\n\nexport function max(...args : Array<number>) : number {\n    return Math.max(...args);\n}\n\nexport function regexMap<T>(str : string, regexp : RegExp, handler : () => T) : Array<T> {\n    let results = [];\n\n    // $FlowFixMe\n    str.replace(regexp, function regexMapMatcher(item) {\n        results.push(handler ? handler.apply(null, arguments) : item);\n    });\n\n    // $FlowFixMe\n    return results;\n}\n\nexport function svgToBase64(svg : string) : string {\n    return `data:image/svg+xml;base64,${ base64encode(svg) }`;\n}\n\nexport function objFilter<T, R>(obj : { [string] : T }, filter? : (T, ?string) => mixed = Boolean) : { [string] : R } {\n    let result = {};\n\n    for (let key in obj) {\n        if (!obj.hasOwnProperty(key) || !filter(obj[key], key)) {\n            continue;\n        }\n\n        result[key] = obj[key];\n    }\n\n    return result;\n}\n\nexport function identity <T>(item : T) : T {\n    return item;\n}\n\nexport function regexTokenize(text : string, regexp : RegExp) : Array<string> {\n    let result = [];\n    text.replace(regexp, token => {\n        result.push(token);\n        return '';\n    });\n    return result;\n}\n\nexport function promiseDebounce<T>(method : () => ZalgoPromise<T> | T, delay : number = 50) : () => ZalgoPromise<T> {\n\n    let promise;\n    let timeout;\n\n    return function promiseDebouncedMethod() : ZalgoPromise<T> {\n        if (timeout) {\n            clearTimeout(timeout);\n        }\n\n        let localPromise = promise = promise || new ZalgoPromise();\n\n        timeout = setTimeout(() => {\n            promise = null;\n            timeout = null;\n\n            ZalgoPromise.try(method).then(\n                result => { localPromise.resolve(result); },\n                err => { localPromise.reject(err); }\n            );\n        }, delay);\n\n        return localPromise;\n    };\n}\n\nexport function safeInterval(method : Function, time : number) : { cancel : () => void } {\n\n    let timeout;\n\n    function loop() {\n        timeout = setTimeout(() => {\n            method();\n            loop();\n        }, time);\n    }\n\n    loop();\n\n    return {\n        cancel() {\n            clearTimeout(timeout);\n        }\n    };\n}\n\nexport function isInteger(str : string) : boolean {\n    return Boolean(str.match(/^[0-9]+$/));\n}\n\nexport function isFloat(str : string) : boolean {\n    return Boolean(str.match(/^[0-9]+\\.[0-9]+$/));\n}\n\nexport function serializePrimitive(value : string | number | boolean) : string {\n    return value.toString();\n}\n\nexport function deserializePrimitive(value : string) : string | number | boolean {\n    if (value === 'true') {\n        return true;\n    } else if (value === 'false') {\n        return false;\n    } else if (isInteger(value)) {\n        return parseInt(value, 10);\n    } else if (isFloat(value)) {\n        return parseFloat(value);\n    } else {\n        return value;\n    }\n}\n\nexport function dotify(obj : Object, prefix : string = '', newobj : Object = {}) : { [string] : string } {\n    prefix = prefix ? `${ prefix }.` : prefix;\n    for (let key in obj) {\n        if (!obj.hasOwnProperty(key) || obj[key] === undefined || obj[key] === null || typeof obj[key] === 'function') {\n            continue;\n        } else if (obj[key] && Array.isArray(obj[key]) && obj[key].length && obj[key].every(val => typeof val !== 'object')) {\n            newobj[`${ prefix }${ key }[]`] = obj[key].join(',');\n        } else if (obj[key] && typeof obj[key] === 'object') {\n            newobj = dotify(obj[key], `${ prefix }${ key }`, newobj);\n        } else {\n            newobj[`${ prefix }${ key }`] = serializePrimitive(obj[key]);\n        }\n    }\n    return newobj;\n}\n\nexport function undotify(obj : { [string] : string }) : Object {\n    \n    let result = {};\n\n    for (let key in obj) {\n        if (!obj.hasOwnProperty(key) || typeof obj[key] !== 'string') {\n            continue;\n        }\n\n        let value = obj[key];\n\n        if (key.match(/^.+\\[\\]$/)) {\n            key = key.slice(0, key.length - 2);\n            value = value.split(',').map(deserializePrimitive);\n        } else {\n            value = deserializePrimitive(value);\n        }\n\n        let keyResult = result;\n        let parts = key.split('.');\n        for (let i = 0; i < parts.length; i++) {\n            let part = parts[i];\n            let isLast = (i + 1 === parts.length);\n            let isIndex = !isLast && isInteger(parts[i + 1]);\n\n            if (isLast) {\n                // $FlowFixMe\n                keyResult[part] = value;\n            } else {\n                // $FlowFixMe\n                keyResult = keyResult[part] = keyResult[part] || (isIndex ? [] : {});\n            }\n        }\n    }\n\n    return result;\n}\n\nexport type EventEmitterType = {\n    on : (eventName : string, handler : Function) => CancelableType,\n    once : (eventName : string, handler : Function) => CancelableType,\n    trigger : (eventName : string, ...args : $ReadOnlyArray<mixed>) => ZalgoPromise<void>,\n    triggerOnce : (eventName : string, ...args : $ReadOnlyArray<mixed>) => ZalgoPromise<void>\n};\n\nexport function eventEmitter() : EventEmitterType {\n    let triggered = {};\n    let handlers = {};\n\n    return {\n\n        on(eventName : string, handler : Function) : CancelableType {\n            let handlerList = handlers[eventName] = handlers[eventName] || [];\n\n            handlerList.push(handler);\n\n            let cancelled = false;\n\n            return {\n                cancel() {\n                    if (!cancelled) {\n                        cancelled = true;\n                        handlerList.splice(handlerList.indexOf(handler), 1);\n                    }\n\n                }\n            };\n        },\n\n        once(eventName : string, handler : Function) : CancelableType {\n\n            let listener = this.on(eventName, () => {\n                listener.cancel();\n                handler();\n            });\n\n            return listener;\n        },\n\n        trigger(eventName : string, ...args : $ReadOnlyArray<mixed>) : ZalgoPromise<void> {\n\n            let handlerList = handlers[eventName];\n            let promises = [];\n\n            if (handlerList) {\n                for (let handler of handlerList) {\n                    promises.push(ZalgoPromise.try(() => handler(...args)));\n                }\n            }\n\n            return ZalgoPromise.all(promises).then(noop);\n        },\n\n        triggerOnce(eventName : string, ...args : $ReadOnlyArray<mixed>) : ZalgoPromise<void> {\n\n            if (triggered[eventName]) {\n                return ZalgoPromise.resolve();\n            }\n\n            triggered[eventName] = true;\n            return this.trigger(eventName, ...args);\n        }\n    };\n}\n\nexport function camelToDasherize(string : string) : string {\n    return string.replace(/([A-Z])/g, (g) => {\n        return `-${ g.toLowerCase() }`;\n    });\n}\n\nexport function dasherizeToCamel(string : string) : string {\n    return string.replace(/-([a-z])/g, (g) => {\n        return g[1].toUpperCase();\n    });\n}\n\nexport function capitalizeFirstLetter(string : string) : string {\n    return string.charAt(0).toUpperCase() + string.slice(1).toLowerCase();\n}\n\nexport function get(item : Object, path : string, def : mixed) : mixed {\n\n    if (!path) {\n        return def;\n    }\n\n    let pathParts = path.split('.');\n\n    // Loop through each section of our key path\n\n    for (let i = 0; i < pathParts.length; i++) {\n\n        // If we have an object, we can get the key\n        if (typeof item === 'object' && item !== null) {\n            item = item[pathParts[i]];\n\n        // Otherwise, we should return the default (undefined if not provided)\n        } else {\n            return def;\n        }\n    }\n\n    // If our final result is undefined, we should return the default\n\n    return item === undefined ? def : item;\n}\n\nexport function safeTimeout(method : Function, time : number) {\n\n    let interval = safeInterval(() => {\n        time -= 100;\n        if (time <= 0) {\n            interval.cancel();\n            method();\n        }\n    }, 100);\n}\n\nexport function defineLazyProp<T>(obj : Object | Array<mixed>, key : string | number, getter : () => T) {\n    if (Array.isArray(obj)) {\n        if (typeof key !== 'number') {\n            throw new TypeError(`Array key must be number`);\n        }\n    } else if (typeof obj === 'object' && obj !== null) {\n        if (typeof key !== 'string') {\n            throw new TypeError(`Object key must be string`);\n        }\n    }\n    \n    Object.defineProperty(obj, key, {\n        configurable: true,\n        enumerable:   true,\n        get:          () => {\n            // $FlowFixMe\n            delete obj[key];\n            let value = getter();\n            // $FlowFixMe\n            obj[key] = value;\n            return value;\n        },\n        set: (value : T) => {\n            // $FlowFixMe\n            delete obj[key];\n            // $FlowFixMe\n            obj[key] = value;\n        }\n    });\n}\n\nexport function isObject(item : mixed) : boolean {\n    return (typeof item === 'object' && item !== null);\n}\n\nexport function isObjectObject(obj : mixed) : boolean {\n    return isObject(obj) && Object.prototype.toString.call(obj) === '[object Object]';\n}\n\nexport function isPlainObject(obj : mixed) : boolean {\n    if (!isObjectObject(obj)) {\n        return false;\n    }\n\n    // $FlowFixMe\n    let constructor = obj.constructor;\n\n    if (typeof constructor !== 'function') {\n        return false;\n    }\n\n    let prototype = constructor.prototype;\n\n    if (!isObjectObject(prototype)) {\n        return false;\n    }\n\n    if (!prototype.hasOwnProperty('isPrototypeOf')) {\n        return false;\n    }\n\n    return true;\n}\n\nexport function replaceObject<T : Object | Array<mixed>> (item : T, replacer : (mixed, string | number, string) => mixed, fullKey : string = '') : T {\n\n    if (Array.isArray(item)) {\n        let length = item.length;\n        let result = [];\n\n        for (let i = 0; i < length; i++) {\n\n            \n            defineLazyProp(result, i, () => {\n                let itemKey = fullKey ? `${ fullKey }.${ i }` : `${ i }`;\n                let el = item[i];\n\n                let child = replacer(el, i, itemKey);\n\n                if (isPlainObject(child) || Array.isArray(child)) {\n                    // $FlowFixMe\n                    child = replaceObject(child, replacer, itemKey);\n                }\n\n                return child;\n            });\n        }\n\n        // $FlowFixMe\n        return result;\n    } else if (isPlainObject(item)) {\n        let result = {};\n\n        for (let key in item) {\n            if (!item.hasOwnProperty(key)) {\n                continue;\n            }\n\n            defineLazyProp(result, key, () => {\n                let itemKey = fullKey ? `${ fullKey }.${ key }` : `${ key }`;\n                // $FlowFixMe\n                let el = item[key];\n\n                let child = replacer(el, key, itemKey);\n\n                if (isPlainObject(child) || Array.isArray(child)) {\n                    // $FlowFixMe\n                    child = replaceObject(child, replacer, itemKey);\n                }\n\n                return child;\n            });\n        }\n\n        // $FlowFixMe\n        return result;\n    } else {\n        throw new Error(`Pass an object or array`);\n    }\n}\n\n\nexport function copyProp(source : Object, target : Object, name : string, def : mixed) {\n    if (source.hasOwnProperty(name)) {\n        let descriptor = Object.getOwnPropertyDescriptor(source, name);\n        // $FlowFixMe\n        Object.defineProperty(target, name, descriptor);\n\n    } else {\n        target[name] = def;\n    }\n}\n\ntype RegexResultType = {\n    text : string,\n    groups : Array<string>,\n    start : number,\n    end : number,\n    length : number,\n    replace : (text : string) => string\n};\n\nexport function regex(pattern : string | RegExp, string : string, start : number = 0) : ?RegexResultType {\n\n    if (typeof pattern === 'string') {\n        // eslint-disable-next-line security/detect-non-literal-regexp\n        pattern = new RegExp(pattern);\n    }\n\n    let result = string.slice(start).match(pattern);\n\n    if (!result) {\n        return;\n    }\n\n    // $FlowFixMe\n    let index : number = result.index;\n    let regmatch = result[0];\n\n    return {\n        text:   regmatch,\n        groups: result.slice(1),\n        start:  start + index,\n        end:    start + index + regmatch.length,\n        length: regmatch.length,\n\n        replace(text : string) : string {\n\n            if (!regmatch) {\n                return '';\n            }\n\n            return `${ regmatch.slice(0, start + index) }${ text }${ regmatch.slice(index + regmatch.length) }`;\n        }\n    };\n}\n\nexport function regexAll(pattern : string | RegExp, string : string) : Array<RegexResultType> {\n\n    let matches = [];\n    let start = 0;\n\n    // eslint-disable-next-line no-constant-condition\n    while (true) {\n        let regmatch = regex(pattern, string, start);\n\n        if (!regmatch) {\n            break;\n        }\n\n        matches.push(regmatch);\n        start = match.end;\n    }\n\n    return matches;\n}\n\nexport function isDefined(value : ?mixed) : boolean {\n    return value !== null && value !== undefined;\n}\n\nexport function cycle(method : Function) : ZalgoPromise<void> {\n    return ZalgoPromise.try(method).then(() => cycle(method));\n}\n\nexport function debounce<T>(method : (...args : Array<mixed>) => T, time : number = 100) : (...args : Array<mixed>) => void {\n\n    let timeout;\n\n    return function debounceWrapper() {\n        clearTimeout(timeout);\n\n        timeout = setTimeout(() => {\n            return method.apply(this, arguments);\n        }, time);\n    };\n}\n\nexport function isRegex(item : mixed) : boolean {\n    return Object.prototype.toString.call(item) === '[object RegExp]';\n}\n\ntype FunctionProxy<T : Function> = (method : T) => T;\n\n// eslint-disable-next-line flowtype/no-weak-types\nexport let weakMapMemoize : FunctionProxy<*> = <R : mixed>(method : (arg : any) => R) : ((...args : Array<any>) => R) => {\n\n    let weakmap = new WeakMap();\n\n    // eslint-disable-next-line flowtype/no-weak-types\n    return function weakmapMemoized(arg : any) : R {\n        return weakmap.getOrSet(arg, () => method.call(this, arg));\n    };\n};\n\ntype FunctionPromiseProxy<R : mixed, T : (...args : $ReadOnlyArray<mixed>) => ZalgoPromise<R>> = (T) => T;\n\n// eslint-disable-next-line flowtype/no-weak-types\nexport let weakMapMemoizePromise : FunctionPromiseProxy<*, *> = <R : mixed>(method : (arg : any) => ZalgoPromise<R>) : ((...args : Array<any>) => ZalgoPromise<R>) => {\n\n    let weakmap = new WeakMap();\n\n    // eslint-disable-next-line flowtype/no-weak-types\n    return function weakmapMemoizedPromise(arg : any) : ZalgoPromise<R> {\n        return weakmap.getOrSet(arg, () =>\n            method.call(this, arg).finally(() => {\n                weakmap.delete(arg);\n            })\n        );\n    };\n};\n\nexport function getOrSet<O : Object, T : mixed>(obj : O, key : string, getter : () => T) : T {\n    if (obj.hasOwnProperty(key)) {\n        return obj[key];\n    }\n\n    const val = getter();\n    obj[key] = val;\n    return val;\n}\n\nexport type CleanupType = {|\n    set : <T : mixed>(string, T) => T, // eslint-disable-line no-undef\n    register : (Function) => void,\n    all : () => ZalgoPromise<void>\n|};\n\nexport function cleanup(obj : Object) : CleanupType {\n\n    const tasks = [];\n    let cleaned = false;\n\n    return {\n        set<T : mixed>(name : string, item : T) : T {\n            if (!cleaned) {\n                obj[name] = item;\n                this.register(() => {\n                    delete obj[name];\n                });\n            }\n            return item;\n        },\n\n        register(method : Function) {\n            if (cleaned) {\n                method();\n            } else {\n                tasks.push(once(method));\n            }\n        },\n\n        all() : ZalgoPromise<void> {\n            const results = [];\n            cleaned = true;\n\n            while (tasks.length) {\n                const task = tasks.pop();\n                results.push(task());\n            }\n\n            return ZalgoPromise.all(results).then(noop);\n        }\n    };\n}\n\nexport function tryCatch<T>(fn : () => T) : {| result : T, error : void |} | {| result : void, error : mixed |} {\n    let result;\n    let error;\n\n    try {\n        result = fn();\n    } catch (err) {\n        error = err;\n    }\n    \n    // $FlowFixMe\n    return { result, error };\n}\n\nexport function removeFromArray<X, T : Array<X>>(arr : T, item : X) {\n    const index = arr.indexOf(item);\n    if (index !== -1) {\n        arr.splice(index, 1);\n    }\n}\n\nexport function assertExists<T>(name : string, thing : void | null | T) : T {\n    if (thing === null || typeof thing === 'undefined') {\n        throw new Error(`Expected ${ name } to be present`);\n    }\n\n    return thing;\n}\n","/* @flow */\n/* eslint max-lines: off */\n\nimport { ZalgoPromise } from 'zalgo-promise/src';\nimport { linkFrameWindow, isWindowClosed,\n    type SameDomainWindowType, type CrossDomainWindowType } from 'cross-domain-utils/src';\nimport { WeakMap } from 'cross-domain-safe-weakmap/src';\n\nimport { inlineMemoize, noop, stringify, capitalizeFirstLetter,\n    once, extend, safeInterval, uniqueID } from './util';\nimport { isDevice } from './device';\nimport { KEY_CODES } from './constants';\nimport type { CancelableType } from './types';\n\ntype ElementRefType = string | HTMLElement;\n\nexport function isDocumentReady() : boolean {\n    return Boolean(document.body) && document.readyState === 'complete';\n}\n\nexport function urlEncode(str : string) : string {\n    return str.replace(/\\?/g, '%3F').replace(/&/g, '%26').replace(/#/g, '%23').replace(/\\+/g, '%2B');\n}\n\nexport function waitForWindowReady() : ZalgoPromise<void> {\n    return inlineMemoize(waitForWindowReady, () : ZalgoPromise<void> => {\n        return new ZalgoPromise(resolve => {\n            if (isDocumentReady()) {\n                resolve();\n            }\n\n            window.addEventListener('load', () => resolve());\n        });\n    });\n}\n\nexport function waitForDocumentReady() : ZalgoPromise<void> {\n    return inlineMemoize(waitForDocumentReady, () : ZalgoPromise<void> => {\n        return new ZalgoPromise(resolve => {\n\n            if (isDocumentReady()) {\n                return resolve();\n            }\n\n            let interval = setInterval(() => {\n                if (isDocumentReady()) {\n                    clearInterval(interval);\n                    return resolve();\n                }\n            }, 10);\n        });\n    });\n}\n\nexport function waitForDocumentBody() : ZalgoPromise<HTMLBodyElement> {\n    return waitForDocumentReady().then(() => {\n        if (document.body) {\n            return document.body;\n        }\n\n        throw new Error('Document ready but document.body not present');\n    });\n}\n\nexport function parseQuery(queryString : string) : Object {\n    return inlineMemoize(parseQuery, () : Object => {\n        let params = {};\n\n        if (!queryString) {\n            return params;\n        }\n\n        if (queryString.indexOf('=') === -1) {\n            return params;\n        }\n\n        for (let pair of queryString.split('&')) {\n            pair = pair.split('=');\n\n            if (pair[0] && pair[1]) {\n                params[decodeURIComponent(pair[0])] = decodeURIComponent(pair[1]);\n            }\n        }\n\n        return params;\n    }, [ queryString ]);\n}\n\n\nexport function getQueryParam(name : string) : string {\n    return parseQuery(window.location.search.slice(1))[name];\n}\n\nexport function urlWillRedirectPage(url : string) : boolean {\n\n    if (url.indexOf('#') === -1) {\n        return true;\n    }\n\n    if (url.indexOf('#') === 0) {\n        return false;\n    }\n\n    if (url.split('#')[0] === window.location.href.split('#')[0]) {\n        return false;\n    }\n\n    return true;\n}\n\nexport function formatQuery(obj : { [ string ] : string } = {}) : string {\n\n    return Object.keys(obj).filter(key => {\n        return typeof obj[key] === 'string';\n    }).map(key => {\n        return `${ urlEncode(key) }=${ urlEncode(obj[key]) }`;\n    }).join('&');\n}\n\nexport function extendQuery(originalQuery : string, props : { [ string ] : string } = {}) : string {\n\n    if (!props || !Object.keys(props).length) {\n        return originalQuery;\n    }\n\n    return formatQuery({\n        ...parseQuery(originalQuery),\n        ...props\n    });\n}\n\nexport function extendUrl(url : string, options : { query? : { [string] : string }, hash? : { [string] : string } } = {}) : string {\n\n    let query = options.query || {};\n    let hash = options.hash || {};\n\n    let originalUrl;\n    let originalQuery;\n    let originalHash;\n\n    [ originalUrl, originalHash ] = url.split('#');\n    [ originalUrl, originalQuery ] = originalUrl.split('?');\n\n    let queryString = extendQuery(originalQuery, query);\n    let hashString = extendQuery(originalHash, hash);\n\n    if (queryString) {\n        originalUrl = `${ originalUrl }?${ queryString }`;\n    }\n\n    if (hashString) {\n        originalUrl = `${ originalUrl }#${ hashString }`;\n    }\n\n    return originalUrl;\n}\n\nexport function redirect(url : string, win : CrossDomainWindowType = window) : ZalgoPromise<void> {\n    return new ZalgoPromise(resolve => {\n        win.location = url;\n        if (!urlWillRedirectPage(url)) {\n            resolve();\n        }\n    });\n}\n\nexport function hasMetaViewPort() : boolean {\n    let meta = document.querySelector('meta[name=viewport]');\n\n    if (isDevice() && window.screen.width < 660 && !meta) {\n        return false;\n    }\n\n    return true;\n}\n\nexport function isElementVisible(el : HTMLElement) : boolean {\n    return Boolean(el.offsetWidth || el.offsetHeight || el.getClientRects().length);\n}\n\nexport function enablePerformance() : boolean {\n    return inlineMemoize(enablePerformance, () : boolean => {\n        /* eslint-disable compat/compat */\n        return Boolean(\n            window.performance &&\n            performance.now &&\n            performance.timing &&\n            performance.timing.connectEnd &&\n            performance.timing.navigationStart &&\n            (Math.abs(performance.now() - Date.now()) > 1000) &&\n            (performance.now() - (performance.timing.connectEnd - performance.timing.navigationStart)) > 0\n        );\n        /* eslint-enable compat/compat */\n    });\n}\n\nexport function getPageRenderTime() : ZalgoPromise<?number> {\n    return waitForDocumentReady().then(() => {\n\n        if (!enablePerformance()) {\n            return;\n        }\n\n        let timing = window.performance.timing;\n\n        if (timing.connectEnd && timing.domInteractive) {\n            return timing.domInteractive - timing.connectEnd;\n        }\n    });\n}\n\nexport function htmlEncode(html : string = '') : string {\n    return html.toString()\n        .replace(/&/g, '&amp;')\n        .replace(/</g, '&lt;')\n        .replace(/>/g, '&gt;')\n        .replace(/\"/g, '&quot;')\n        .replace(/'/g, '&#39;')\n        .replace(/\\//g, '&#x2F;');\n}\n\nexport function isBrowser() : boolean {\n    return (typeof window !== 'undefined');\n}\n\nexport function querySelectorAll(selector : string, doc : HTMLElement = window.document) : Array<Element> {\n    return Array.prototype.slice.call(doc.querySelectorAll(selector));\n}\n\nexport function onClick(element : Element, handler : (Event) => void) {\n    element.addEventListener('touchstart', noop);\n    element.addEventListener('click', handler);\n    element.addEventListener('keypress', (event : Event) => {\n        // $FlowFixMe\n        if (event.keyCode === KEY_CODES.ENTER) {\n            return handler(event);\n        }\n    });\n}\n\nexport function getScript({ host = window.location.host, path } : { host? : string, path : string }) : ?HTMLScriptElement {\n    return inlineMemoize(getScript, () : ?HTMLScriptElement => {\n\n        let url = `${ host }${ path }`;\n        let scripts = Array.prototype.slice.call(document.getElementsByTagName('script'));\n\n        for (let script of scripts) {\n            if (!script.src) {\n                continue;\n            }\n\n            let src = script.src.replace(/^https?:\\/\\//, '').split('?')[0];\n\n            if (src === url) {\n                return script;\n            }\n        }\n    }, [ path ]);\n}\n\nexport function isLocalStorageEnabled() : boolean {\n    return inlineMemoize(isLocalStorageEnabled, () => {\n        try {\n            if (typeof window === 'undefined') {\n                return false;\n            }\n\n            if (window.localStorage) {\n                let value = Math.random().toString();\n                window.localStorage.setItem('__test__localStorage__', value);\n                let result = window.localStorage.getItem('__test__localStorage__');\n                window.localStorage.removeItem('__test__localStorage__');\n                if (value === result) {\n                    return true;\n                }\n            }\n        } catch (err) {\n            // pass\n        }\n        return false;\n    });\n}\n\nexport function getBrowserLocales() : Array<{ country? : string, lang : string }> {\n    let nav = window.navigator;\n\n    let locales = nav.languages\n        ? Array.prototype.slice.apply(nav.languages)\n        : [];\n\n    if (nav.language) {\n        locales.push(nav.language);\n    }\n\n    if (nav.userLanguage) {\n        locales.push(nav.userLanguage);\n    }\n\n    return locales.map(locale => {\n\n        if (locale && locale.match(/^[a-z]{2}[-_][A-Z]{2}$/)) {\n            let [ lang, country ] = locale.split(/[-_]/);\n            return { country, lang };\n        }\n\n        if (locale && locale.match(/^[a-z]{2}$/)) {\n            return { lang: locale };\n        }\n\n        return null;\n\n    }).filter(Boolean);\n}\n\n\nexport function appendChild(container : HTMLElement, child : HTMLElement | Text) {\n    container.appendChild(child);\n}\n\nexport function isElement(element : mixed) : boolean {\n\n    if (element instanceof window.Element) {\n        return true;\n    }\n\n    if (element !== null && typeof element === 'object' && element.nodeType === 1 && typeof element.style === 'object' && typeof element.ownerDocument === 'object') {\n        return true;\n    }\n\n    return false;\n}\n\nexport function getElementSafe(id : ElementRefType, doc : Document | HTMLElement = document) : ?HTMLElement {\n\n    if (isElement(id)) {\n        // $FlowFixMe\n        return id;\n    }\n\n    if (typeof id === 'string') {\n        return doc.querySelector(id);\n    }\n}\n\nexport function getElement(id : ElementRefType, doc : Document | HTMLElement = document) : HTMLElement {\n\n    let element = getElementSafe(id, doc);\n\n    if (element) {\n        return element;\n    }\n\n    throw new Error(`Can not find element: ${ stringify(id) }`);\n}\n\nexport function elementReady(id : ElementRefType) : ZalgoPromise<window.HTMLElement> {\n    return new ZalgoPromise((resolve, reject) => {\n\n        let name = stringify(id);\n        let el = getElementSafe(id);\n\n        if (el) {\n            return resolve(el);\n        }\n\n        if (isDocumentReady()) {\n            return reject(new Error(`Document is ready and element ${ name } does not exist`));\n        }\n\n        let interval = setInterval(() => {\n\n            el = getElementSafe(id);\n\n            if (el) {\n                clearInterval(interval);\n                return resolve(el);\n            }\n\n            if (isDocumentReady()) {\n                clearInterval(interval);\n                return reject(new Error(`Document is ready and element ${ name } does not exist`));\n            }\n        }, 10);\n    });\n}\n\nexport function PopupOpenError(message : string) {\n    this.message = message;\n}\n\nPopupOpenError.prototype = Object.create(Error.prototype);\n\ntype PopupOptions = {|\n    name? : string,\n    width? : number,\n    height? : number,\n    top? : number,\n    left? : number,\n    status? : 0 | 1,\n    resizable? : 0 | 1,\n    toolbar? : 0 | 1,\n    menubar? : 0 | 1,\n    scrollbars? : 0 | 1\n|};\n\nexport function popup(url : string, options? : PopupOptions) : CrossDomainWindowType {\n\n    // $FlowFixMe\n    options = options || {};\n\n    let { width, height } = options;\n\n    let top = 0;\n    let left = 0;\n\n    if (width) {\n        if (window.outerWidth) {\n            left = Math.round((window.outerWidth - width) / 2) + window.screenX;\n        } else if (window.screen.width) {\n            left = Math.round((window.screen.width - width) / 2);\n        }\n    }\n\n    if (height) {\n        if (window.outerHeight) {\n            top = Math.round((window.outerHeight - height) / 2) + window.screenY;\n        } else if (window.screen.height) {\n            top = Math.round((window.screen.height - height) / 2);\n        }\n    }\n\n    options = {\n        top,\n        left,\n        width,\n        height,\n        status:     1,\n        toolbar:    0,\n        menubar:    0,\n        resizable:  1,\n        scrollbars: 1,\n        ...options\n    };\n\n    let name = options.name || '';\n    delete options.name;\n\n    // eslint-disable-next-line array-callback-return\n    let params = Object.keys(options).map(key => {\n        // $FlowFixMe\n        if (options[key]) {\n            return `${ key }=${ stringify(options[key]) }`;\n        }\n    }).filter(Boolean).join(',');\n\n    let win;\n\n    try {\n        win = window.open(url, name, params, true);\n    } catch (err) {\n        throw new PopupOpenError(`Can not open popup window - ${ err.stack || err.message }`);\n    }\n\n    if (isWindowClosed(win)) {\n        let err = new PopupOpenError(`Can not open popup window - blocked`);\n        throw err;\n    }\n\n    window.addEventListener('unload', () => win.close());\n\n    return win;\n}\n\n\nexport function writeToWindow(win : SameDomainWindowType, html : string) {\n    try {\n        win.document.open();\n        win.document.write(html);\n        win.document.close();\n    } catch (err) {\n        try {\n            win.location = `javascript: document.open(); document.write(${ JSON.stringify(html) }); document.close();`;\n        } catch (err2) {\n            // pass\n        }\n    }\n}\n\nexport function writeElementToWindow(win : SameDomainWindowType, el : HTMLElement) {\n\n    let tag = el.tagName.toLowerCase();\n\n    if (tag !== 'html') {\n        throw new Error(`Expected element to be html, got ${ tag }`);\n    }\n\n    let documentElement = win.document.documentElement;\n\n    while (documentElement.children && documentElement.children.length) {\n        documentElement.removeChild(documentElement.children[0]);\n    }\n\n    while (el.children.length) {\n        documentElement.appendChild(el.children[0]);\n    }\n}\n\nexport function setStyle(el : HTMLElement, styleText : string, doc : Document = window.document) {\n    // $FlowFixMe\n    if (el.styleSheet) {\n        // $FlowFixMe\n        el.styleSheet.cssText = styleText;\n    } else {\n        el.appendChild(doc.createTextNode(styleText));\n    }\n}\n\nexport type ElementOptionsType = {\n    style? : { [ string ] : string },\n    id? : string,\n    class? : ?Array<string>,\n    attributes? : { [ string ] : string },\n    styleSheet? : ?string,\n    html? : ?string\n};\n\nlet awaitFrameLoadPromises : WeakMap<HTMLIFrameElement, ZalgoPromise<HTMLIFrameElement>>;\n\nexport function awaitFrameLoad(frame : HTMLIFrameElement) : ZalgoPromise<HTMLIFrameElement> {\n    awaitFrameLoadPromises = awaitFrameLoadPromises || new WeakMap();\n\n    if (awaitFrameLoadPromises.has(frame)) {\n        let promise = awaitFrameLoadPromises.get(frame);\n        if (promise) {\n            return promise;\n        }\n    }\n\n    let promise = new ZalgoPromise((resolve, reject) => {\n        frame.addEventListener('load', () => {\n            linkFrameWindow(frame);\n            resolve(frame);\n        });\n\n        frame.addEventListener('error', (err : Event) => {\n            if (frame.contentWindow) {\n                resolve(frame);\n            } else {\n                reject(err);\n            }\n        });\n    });\n\n    awaitFrameLoadPromises.set(frame, promise);\n\n    return promise;\n}\n\nexport function awaitFrameWindow(frame : HTMLIFrameElement) : ZalgoPromise<CrossDomainWindowType> {\n    return awaitFrameLoad(frame).then(loadedFrame => {\n\n        if (!loadedFrame.contentWindow) {\n            throw new Error(`Could not find window in iframe`);\n        }\n\n        return loadedFrame.contentWindow;\n    });\n}\n\nexport function createElement(tag : string = 'div', options : ElementOptionsType = {}, container : ?HTMLElement) : HTMLElement {\n\n    tag = tag.toLowerCase();\n    let element = document.createElement(tag);\n\n    if (options.style) {\n        extend(element.style, options.style);\n    }\n\n    if (options.class) {\n        element.className = options.class.join(' ');\n    }\n\n    if (options.id) {\n        element.setAttribute('id', options.id);\n    }\n\n    if (options.attributes) {\n        for (let key of Object.keys(options.attributes)) {\n            element.setAttribute(key, options.attributes[key]);\n        }\n    }\n\n    if (options.styleSheet) {\n        setStyle(element, options.styleSheet);\n    }\n\n    if (container) {\n        appendChild(container, element);\n    }\n\n    if (options.html) {\n        if (tag === 'iframe') {\n            // $FlowFixMe\n            if (!container || !element.contentWindow) {\n                throw new Error(`Iframe html can not be written unless container provided and iframe in DOM`);\n            }\n\n            // $FlowFixMe\n            writeToWindow(element.contentWindow, options.html);\n\n        } else {\n            element.innerHTML = options.html;\n        }\n    }\n\n    return element;\n}\n\n\nexport type IframeElementOptionsType = {\n    style? : { [ string ] : string },\n    class? : ?Array<string>,\n    attributes? : { [ string ] : string },\n    styleSheet? : ?string,\n    html? : ?string,\n    url? : ?string\n};\n\nexport function iframe(options : IframeElementOptionsType = {}, container : ?HTMLElement) : HTMLIFrameElement {\n\n    let attributes = options.attributes || {};\n    let style = options.style || {};\n\n    let frame = createElement('iframe', {\n        attributes: {\n            allowTransparency: 'true',\n            ...attributes\n        },\n        style: {\n            backgroundColor: 'transparent',\n            border:          'none',\n            ...style\n        },\n        html:  options.html,\n        class: options.class\n    });\n\n    const isIE = window.navigator.userAgent.match(/MSIE|Edge/i);\n    \n    if (!frame.hasAttribute('id')) {\n        frame.setAttribute('id', uniqueID());\n    }\n\n    // $FlowFixMe\n    awaitFrameLoad(frame);\n\n    if (container) {\n        let el = getElement(container);\n        el.appendChild(frame);\n    }\n\n    if (options.url || isIE) {\n        frame.setAttribute('src', options.url || 'about:blank');\n    }\n\n    // $FlowFixMe\n    return frame;\n}\n\nexport function addEventListener(obj : HTMLElement, event : string, handler : (event : Event) => void) : CancelableType {\n    obj.addEventListener(event, handler);\n    return {\n        cancel() {\n            obj.removeEventListener(event, handler);\n        }\n    };\n}\n\nexport function bindEvents(element : HTMLElement, eventNames : Array<string>, handler : (event : Event) => void) : CancelableType {\n\n    handler = once(handler);\n\n    for (let eventName of eventNames) {\n        element.addEventListener(eventName, handler);\n    }\n\n    return {\n        cancel: once(() => {\n            for (let eventName of eventNames) {\n                element.removeEventListener(eventName, handler);\n            }\n        })\n    };\n}\n\nconst VENDOR_PREFIXES = [ 'webkit', 'moz', 'ms', 'o' ];\n\nexport function setVendorCSS(element : HTMLElement, name : string, value : string) {\n\n    // $FlowFixMe\n    element.style[name] = value;\n\n    let capitalizedName = capitalizeFirstLetter(name);\n\n    for (let prefix of VENDOR_PREFIXES) {\n        // $FlowFixMe\n        element.style[`${ prefix }${ capitalizedName }`] = value;\n    }\n}\n\nconst ANIMATION_START_EVENTS = [ 'animationstart', 'webkitAnimationStart', 'oAnimationStart', 'MSAnimationStart' ];\nconst ANIMATION_END_EVENTS   = [ 'animationend', 'webkitAnimationEnd', 'oAnimationEnd', 'MSAnimationEnd' ];\n\nexport function animate(element : ElementRefType, name : string, clean : (Function) => void, timeout : number = 1000) : ZalgoPromise<void> {\n    return new ZalgoPromise((resolve, reject) => {\n\n        let el = getElement(element);\n\n        if (!el) {\n            return resolve();\n        }\n\n        let hasStarted = false;\n\n        let startTimeout;\n        let endTimeout;\n        let startEvent;\n        let endEvent;\n\n        function cleanUp() {\n            clearTimeout(startTimeout);\n            clearTimeout(endTimeout);\n            startEvent.cancel();\n            endEvent.cancel();\n        }\n\n        startEvent = bindEvents(el, ANIMATION_START_EVENTS, event => {\n\n            // $FlowFixMe\n            if (event.target !== el || event.animationName !== name) {\n                return;\n            }\n\n            clearTimeout(startTimeout);\n\n            event.stopPropagation();\n\n            startEvent.cancel();\n            hasStarted = true;\n\n            endTimeout = setTimeout(() => {\n                cleanUp();\n                resolve();\n            }, timeout);\n        });\n\n        endEvent = bindEvents(el, ANIMATION_END_EVENTS, event => {\n\n            // $FlowFixMe\n            if (event.target !== el || event.animationName !== name) {\n                return;\n            }\n\n            cleanUp();\n\n            // $FlowFixMe\n            if (typeof event.animationName === 'string' && event.animationName !== name) {\n                return reject(`Expected animation name to be ${ name }, found ${ event.animationName }`);\n            }\n\n            return resolve();\n        });\n\n        setVendorCSS(el, 'animationName', name);\n\n        startTimeout = setTimeout(() => {\n            if (!hasStarted) {\n                cleanUp();\n                return resolve();\n            }\n        }, 200);\n\n        if (clean) {\n            clean(cleanUp);\n        }\n    });\n}\n\nconst STYLE = {\n\n    DISPLAY: {\n        NONE:  'none',\n        BLOCK: 'block'\n    },\n\n    VISIBILITY: {\n        VISIBLE: 'visible',\n        HIDDEN:  'hidden'\n    },\n\n    IMPORTANT: 'important'\n};\n\nexport function makeElementVisible(element : HTMLElement) {\n    element.style.setProperty('visibility', '');\n}\n\nexport function makeElementInvisible(element : HTMLElement) {\n    element.style.setProperty('visibility', STYLE.VISIBILITY.HIDDEN, STYLE.IMPORTANT);\n}\n\n\nexport function showElement(element : HTMLElement) {\n    element.style.setProperty('display', '');\n}\n\nexport function hideElement(element : HTMLElement) {\n    element.style.setProperty('display', STYLE.DISPLAY.NONE, STYLE.IMPORTANT);\n}\n\nexport function destroyElement(element : HTMLElement) {\n    if (element && element.parentNode) {\n        element.parentNode.removeChild(element);\n    }\n}\n\nexport function showAndAnimate(element : HTMLElement, name : string, clean : (Function) => void) : ZalgoPromise<void> {\n    let animation = animate(element, name, clean);\n    showElement(element);\n    return animation;\n}\n\nexport function animateAndHide(element : HTMLElement, name : string, clean : (Function) => void) : ZalgoPromise<void> {\n    return animate(element, name, clean).then(() => {\n        hideElement(element);\n    });\n}\n\nexport function addClass(element : HTMLElement, name : string) {\n    element.classList.add(name);\n}\n\nexport function removeClass(element : HTMLElement, name : string) {\n    element.classList.remove(name);\n}\n\nexport function isElementClosed(el : HTMLElement) : boolean {\n    if (!el || !el.parentNode) {\n        return true;\n    }\n    return false;\n}\n\nexport function watchElementForClose(element : HTMLElement, handler : () => mixed) : CancelableType {\n    handler = once(handler);\n\n    let interval;\n\n    if (isElementClosed(element)) {\n        handler();\n    } else {\n        interval = safeInterval(() => {\n            if (isElementClosed(element)) {\n                interval.cancel();\n                handler();\n            }\n        }, 50);\n    }\n\n    return {\n        cancel() {\n            if (interval) {\n                interval.cancel();\n            }\n        }\n    };\n}\n\nexport function fixScripts(el : HTMLElement, doc : Document = window.document) {\n    for (let script of querySelectorAll('script', el)) {\n        let parentNode = script.parentNode;\n\n        if (!parentNode) {\n            continue;\n        }\n\n        let newScript = doc.createElement('script');\n        newScript.text = script.textContent;\n        parentNode.replaceChild(newScript, script);\n    }\n}\n\ntype OnResizeOptions = {|\n    width? : boolean,\n    height? : boolean,\n    interval? : number,\n    win? : SameDomainWindowType\n|};\n\nexport function onResize(el : HTMLElement, handler : ({ width : number, height : number }) => void, { width = true, height = true, interval = 100, win = window } : OnResizeOptions = {}) : {} {\n    let currentWidth = el.offsetWidth;\n    let currentHeight = el.offsetHeight;\n\n    handler({ width: currentWidth, height: currentHeight });\n\n    let check = () => {\n        let newWidth = el.offsetWidth;\n        let newHeight = el.offsetHeight;\n\n        if ((width && newWidth !== currentWidth) || (height && newHeight !== currentHeight)) {\n            handler({ width: newWidth, height: newHeight });\n        }\n\n        currentWidth = newWidth;\n        currentHeight = newHeight;\n    };\n\n    let observer;\n    let timeout;\n\n    if (typeof win.ResizeObserver !== 'undefined') {\n        observer = new win.ResizeObserver(check);\n        observer.observe(el);\n\n    } else if (typeof win.MutationObserver !== 'undefined') {\n        observer = new win.MutationObserver(check);\n        observer.observe(el, {\n            attributes:    true,\n            childList:     true,\n            subtree:       true,\n            characterData: false\n        });\n        win.addEventListener('resize', check);\n    } else {\n        let loop = () => {\n            check();\n            timeout = setTimeout(loop, interval);\n        };\n        loop();\n    }\n\n    return {\n        cancel: () => {\n            observer.disconnect();\n            window.removeEventListener('resize', check);\n            clearTimeout(timeout);\n        }\n    };\n}\n","/* @flow */\n\nexport function hasNativeWeakMap() : boolean {\n\n    if (typeof WeakMap === 'undefined') {\n        return false;\n    }\n\n    if (typeof Object.freeze === 'undefined') {\n        return false;\n    }\n\n    try {\n\n        let testWeakMap = new WeakMap();\n        let testKey = {};\n        let testValue = '__testvalue__';\n\n        Object.freeze(testKey);\n\n        testWeakMap.set(testKey, testValue);\n\n        if (testWeakMap.get(testKey) === testValue) {\n            return true;\n        }\n\n        return false;\n\n    } catch (err) {\n\n        return false;\n    }\n}\n","/* @flow */\n\nexport function isPerc(str : string) : boolean {\n    return typeof str === 'string' && (/^[0-9]+%$/).test(str);\n}\n\nexport function isPx(str : string) : boolean {\n    return typeof str === 'string' && (/^[0-9]+px$/).test(str);\n}\n\nexport function toNum(val : string | number) : number {\n\n    if (typeof val === 'number') {\n        return val;\n    }\n\n    let match = val.match(/^([0-9]+)(px|%)$/);\n\n    if (!match) {\n        throw new Error(`Could not match css value from ${ val }`);\n    }\n\n    return parseInt(match[1], 10);\n}\n\nexport function toPx(val : number | string) : string {\n    return `${ toNum(val) }px`;\n}\n\nexport function toCSS(val : number | string) : string {\n\n    if (typeof val === 'number') {\n        return toPx(val);\n    }\n\n    return isPerc(val) ? val : toPx(val);\n}\n\nexport function percOf(num : number, perc : string) : number {\n    return parseInt(num * toNum(perc)  / 100, 10);\n}\n\nexport function normalizeDimension(dim : string | number, max : number) : number {\n    if (typeof dim === 'number') {\n        return dim;\n    } else if (isPerc(dim)) {\n        return percOf(max, dim);\n    } else if (isPx(dim)) {\n        return toNum(dim);\n    } else {\n        throw new Error(`Can not normalize dimension: ${ dim }`);\n    }\n}\n","/* @flow */\n\nexport const BRIDGE_TIMEOUT = 5000;\nexport const CHILD_WINDOW_TIMEOUT = 5000;\n\nexport const ACK_TIMEOUT = 2000;\nexport const ACK_TIMEOUT_KNOWN = 10000;\nexport const RES_TIMEOUT = __TEST__ ? 2000 : -1;\n","/* @flow */\n\nexport const MESSAGE_TYPE = {\n    REQUEST:  ('postrobot_message_request' : 'postrobot_message_request'),\n    RESPONSE: ('postrobot_message_response' : 'postrobot_message_response'),\n    ACK:      ('postrobot_message_ack' : 'postrobot_message_ack')\n};\n\nexport const MESSAGE_ACK = {\n    SUCCESS: ('success' : 'success'),\n    ERROR:   ('error' : 'error')\n};\n\nexport const MESSAGE_NAME = {\n    METHOD:      ('postrobot_method' : 'postrobot_method'),\n    HELLO:       ('postrobot_hello' : 'postrobot_hello'),\n    OPEN_TUNNEL: ('postrobot_open_tunnel' : 'postrobot_open_tunnel')\n};\n\nexport const SEND_STRATEGY = {\n    POST_MESSAGE: ('postrobot_post_message' : 'postrobot_post_message'),\n    BRIDGE:       ('postrobot_bridge' : 'postrobot_bridge'),\n    GLOBAL:       ('postrobot_global' : 'postrobot_global')\n};\n\nexport const BRIDGE_NAME_PREFIX = '__postrobot_bridge__';\nexport const POSTROBOT_PROXY =    '__postrobot_proxy__';\n\nexport const WILDCARD = '*';\n\nexport const SERIALIZATION_TYPE = {\n    CROSS_DOMAIN_ZALGO_PROMISE: ('cross_domain_zalgo_promise' : 'cross_domain_zalgo_promise'),\n    CROSS_DOMAIN_FUNCTION:      ('cross_domain_function' : 'cross_domain_function'),\n    CROSS_DOMAIN_WINDOW:        ('cross_domain_window' : 'cross_domain_window')\n};\n","/* @flow */\n\nimport { type CrossDomainWindowType, type SameDomainWindowType } from 'cross-domain-utils/src';\nimport { WeakMap } from 'cross-domain-safe-weakmap/src';\nimport { getOrSet } from 'belter/src';\n\nexport function getGlobal(win : SameDomainWindowType = window) : Object {\n    if (win !== window) {\n        return win[__POST_ROBOT__.__GLOBAL_KEY__];\n    }\n    const global : Object = win[__POST_ROBOT__.__GLOBAL_KEY__] = win[__POST_ROBOT__.__GLOBAL_KEY__] || {};\n    return global;\n}\n\ntype ObjectGetter = () => Object;\nconst getObj : ObjectGetter = () => ({});\n\ntype GetOrSet<T> = ((string, () => T) => T) & ((string, () => void) => void);\n\ntype GlobalStore<T> = {|\n    get : ((string, T) => T) & ((string, void) => T | void),\n    set : (string, T) => T,\n    has : (string) => boolean,\n    del : (string) => void,\n    getOrSet : GetOrSet<T>,\n    reset : () => void,\n    keys : () => $ReadOnlyArray<string>\n|};\n\n// $FlowFixMe\nexport function globalStore<T : mixed>(key? : string = 'store', defStore? : ObjectGetter = getObj) : GlobalStore<T> {\n    return getOrSet(getGlobal(), key, () => {\n        let store = defStore();\n\n        return {\n            has: (storeKey) => {\n                return store.hasOwnProperty(storeKey);\n            },\n            get: (storeKey, defVal) => {\n                // $FlowFixMe\n                return store.hasOwnProperty(storeKey) ? store[storeKey] : defVal;\n            },\n            set: (storeKey, val) => {\n                store[storeKey] = val;\n                return val;\n            },\n            del: (storeKey) => {\n                delete store[storeKey];\n            },\n            getOrSet: (storeKey, getter) => {\n                // $FlowFixMe\n                return getOrSet(store, storeKey, getter);\n            },\n            reset: () => {\n                store = defStore();\n            },\n            keys: () => {\n                return Object.keys(store);\n            }\n        };\n    });\n}\n\nexport class WildCard {}\n\nexport function getWildcard() : WildCard {\n    const global = getGlobal();\n    global.WINDOW_WILDCARD = global.WINDOW_WILDCARD || new WildCard();\n    return global.WINDOW_WILDCARD;\n}\n\ntype WindowStore<T> = {|\n    get : ((CrossDomainWindowType | WildCard, T) => T) & ((CrossDomainWindowType | WildCard, void) => T | void),\n    set : (CrossDomainWindowType | WildCard, T) => T,\n    has : (CrossDomainWindowType | WildCard) => boolean,\n    del : (CrossDomainWindowType | WildCard) => void,\n    getOrSet : (CrossDomainWindowType | WildCard, () => T) => T\n|};\n\n// $FlowFixMe\nexport function windowStore<T>(key? : string = 'store', defStore? : ObjectGetter = getObj) : WindowStore<T> {\n    return globalStore('windowStore').getOrSet(key, () => {\n        const winStore = new WeakMap();\n\n        const getStore = (win : CrossDomainWindowType | WildCard) : ObjectGetter => {\n            return winStore.getOrSet(win, defStore);\n        };\n    \n        return {\n            has: (win) => {\n                const store = getStore(win);\n                return store.hasOwnProperty(key);\n            },\n            get: (win, defVal) => {\n                const store = getStore(win);\n                // $FlowFixMe\n                return store.hasOwnProperty(key) ? store[key] : defVal;\n            },\n            set: (win, val) => {\n                const store = getStore(win);\n                store[key] = val;\n                return val;\n            },\n            del: (win) => {\n                const store = getStore(win);\n                delete store[key];\n            },\n            getOrSet: (win, getter) => {\n                const store = getStore(win);\n                return getOrSet(store, key, getter);\n            }\n        };\n    });\n}\n","/* @flow */\n\nimport { getAncestor, type CrossDomainWindowType } from 'cross-domain-utils/src';\nimport { ZalgoPromise } from 'zalgo-promise/src';\nimport { noop, uniqueID } from 'belter/src';\n\nimport { MESSAGE_NAME, WILDCARD } from '../conf';\nimport { windowStore, globalStore } from '../global';\nimport type { OnType, SendType, CancelableType } from '../types';\n\nfunction getInstanceID() : string {\n    return globalStore('instance').getOrSet('instanceID', uniqueID);\n}\n\nfunction getHelloPromise(win : CrossDomainWindowType) : ZalgoPromise<{ win : CrossDomainWindowType, domain : string }> {\n    const helloPromises = windowStore('helloPromises');\n    return helloPromises.getOrSet(win, () => new ZalgoPromise());\n}\n\nfunction listenForHello({ on } : { on : OnType }) : CancelableType {\n    return on(MESSAGE_NAME.HELLO, { domain: WILDCARD }, ({ source, origin }) => {\n        getHelloPromise(source).resolve({ win: source, domain: origin });\n        return { instanceID: getInstanceID() };\n    });\n}\n\nexport function sayHello(win : CrossDomainWindowType, { send } : { send : SendType }) : ZalgoPromise<{ win : CrossDomainWindowType, domain : string, instanceID : string }> {\n    return send(win, MESSAGE_NAME.HELLO, { instanceID: getInstanceID() }, { domain: WILDCARD, timeout: -1 })\n        .then(({ origin, data: { instanceID } }) => {\n            getHelloPromise(win).resolve({ win, domain: origin });\n            return { win, domain: origin, instanceID };\n        });\n}\n\nexport function getWindowInstanceID(win : CrossDomainWindowType, { send } : { send : SendType }) : ZalgoPromise<string> {\n    return windowStore('windowInstanceIDPromises').getOrSet(win, () => {\n        return sayHello(win, { send }).then(({ instanceID }) => instanceID);\n    });\n}\n\nexport function initHello({ on, send } : { on : OnType, send : SendType }) : CancelableType {\n    return globalStore('builtinListeners').getOrSet('helloListener', () => {\n        const listener = listenForHello({ on });\n\n        const parent = getAncestor();\n        if (parent) {\n            sayHello(parent, { send }).catch(noop);\n        }\n\n        return listener;\n    });\n}\n\nexport function awaitWindowHello(win : CrossDomainWindowType, timeout : number = 5000, name : string = 'Window') : ZalgoPromise<{ win : CrossDomainWindowType, domain : string }> {\n    let promise = getHelloPromise(win);\n\n    if (timeout !== -1) {\n        promise = promise.timeout(timeout, new Error(`${ name } did not load after ${ timeout }ms`));\n    }\n\n    return promise;\n}\n","/* @flow */\n\nimport { type CrossDomainWindowType } from 'cross-domain-utils/src';\n\nimport { windowStore } from '../global';\n\nexport function markWindowKnown(win : CrossDomainWindowType) {\n    const knownWindows = windowStore('knownWindows');\n    knownWindows.set(win, true);\n}\n\nexport function isWindowKnown(win : CrossDomainWindowType) : boolean {\n    const knownWindows = windowStore('knownWindows');\n    return knownWindows.get(win, false);\n}\n","/* @flow */\n\nexport const TYPE = {\n    FUNCTION:  ('function' : 'function'),\n    ERROR:     ('error' : 'error'),\n    PROMISE:   ('promise' : 'promise'),\n    REGEX:     ('regex' : 'regex'),\n    DATE:      ('date' : 'date'),\n    ARRAY:     ('array' : 'array'),\n    OBJECT:    ('object' : 'object'),\n    STRING:    ('string' : 'string'),\n    NUMBER:    ('number' : 'number'),\n    BOOLEAN:   ('boolean' : 'boolean'),\n    NULL:      ('null' : 'null'),\n    UNDEFINED: ('undefined' : 'undefined')\n};\n","/* @flow */\n\nimport { TYPE } from './constants';\nimport type { CustomSerializedType } from './types';\n\nexport function isSerializedType(item : mixed) : boolean {\n    return (typeof item === 'object' && item !== null && typeof item.__type__ === 'string');\n}\n\nexport function determineType(val : mixed) : $Values<typeof TYPE> | void {\n    if (typeof val === 'undefined') {\n        return TYPE.UNDEFINED;\n    }\n\n    if (val === null) {\n        return TYPE.NULL;\n    }\n\n    if (Array.isArray(val)) {\n        return TYPE.ARRAY;\n    }\n\n    if (typeof val === 'function') {\n        return TYPE.FUNCTION;\n    }\n\n    if (typeof val === 'object') {\n\n        if (val instanceof Error) {\n            return TYPE.ERROR;\n        }\n\n        if (typeof val.then === 'function') {\n            return TYPE.PROMISE;\n        }\n\n        if (Object.prototype.toString.call(val) === '[object RegExp]') {\n            return TYPE.REGEX;\n        }\n\n        if (Object.prototype.toString.call(val) === '[object Date]') {\n            return TYPE.DATE;\n        }\n\n        return TYPE.OBJECT;\n    }\n\n    if (typeof val === 'string') {\n        return TYPE.STRING;\n    }\n\n    if (typeof val === 'number') {\n        return TYPE.NUMBER;\n    }\n\n    if (typeof val === 'boolean') {\n        return TYPE.BOOLEAN;\n    }\n}\n\nexport function serializeType<T : string, V : mixed>(type : T, val : V) : CustomSerializedType<T, V> {\n    return {\n        __type__: type,\n        __val__:  val\n    };\n}\n","/* @flow */\n\nimport { TYPE } from './constants';\nimport type { Thenable, CustomSerializedType, NativeSerializedType } from './types';\nimport { determineType, isSerializedType } from './common';\nimport {\n    serializeFunction,\n    serializeError, type SerializedError,\n    serializePromise,\n    serializeRegex, type SerializedRegex,\n    serializeDate, type SerializedDate,\n    serializeArray,\n    serializeObject,\n    serializeString,\n    serializeNumber,\n    serializeBoolean,\n    serializeNull\n} from './serializers';\n\ntype NativeSerializer<V : mixed, S : mixed, T : $Values<typeof TYPE>> = (value : V, key : string) => NativeSerializedType<T, S>;\ntype CustomSerializer<V : mixed, S : mixed, T : string> = (value : V, key : string) => CustomSerializedType<T, S>;\ntype PrimitiveSerializer<V : mixed, S : mixed> = (value : V, key : string) => S;\ntype CustomOrPrimitiveSerializer<V : mixed, T : string> = CustomSerializer<V, *, T> | PrimitiveSerializer<V, *>;\ntype NativeOrCustomOrPrimitiveSerializer<V : mixed, S : mixed, T : string> = NativeSerializer<V, S, T> | CustomOrPrimitiveSerializer<V, T>;\n\ntype Serializers = {|\n    function? : CustomOrPrimitiveSerializer<Function, typeof TYPE.FUNCTION>,\n    error? : NativeOrCustomOrPrimitiveSerializer<Error, SerializedError, typeof TYPE.ERROR>,\n    promise? : CustomOrPrimitiveSerializer<Thenable, typeof TYPE.PROMISE>,\n    regex? : NativeOrCustomOrPrimitiveSerializer<RegExp, SerializedRegex, typeof TYPE.REGEX>,\n    date? : NativeOrCustomOrPrimitiveSerializer<Date, SerializedDate, typeof TYPE.DATE>,\n    array? : CustomOrPrimitiveSerializer<$ReadOnlyArray<mixed>, typeof TYPE.ARRAY>,\n    object? : CustomOrPrimitiveSerializer<Object, typeof TYPE.OBJECT>,\n    string? : CustomOrPrimitiveSerializer<string, typeof TYPE.STRING>,\n    number? : CustomOrPrimitiveSerializer<number, typeof TYPE.NUMBER>,\n    boolean? : CustomOrPrimitiveSerializer<boolean, typeof TYPE.BOOLEAN>,\n    null? : CustomOrPrimitiveSerializer<null, typeof TYPE.NULL>\n|};\n\nconst SERIALIZER : Serializers = {\n    [ TYPE.FUNCTION ]:  serializeFunction,\n    [ TYPE.ERROR ]:     serializeError,\n    [ TYPE.PROMISE ]:   serializePromise,\n    [ TYPE.REGEX ]:     serializeRegex,\n    [ TYPE.DATE ]:      serializeDate,\n    [ TYPE.ARRAY ]:     serializeArray,\n    [ TYPE.OBJECT ]:    serializeObject,\n    [ TYPE.STRING ]:    serializeString,\n    [ TYPE.NUMBER ]:    serializeNumber,\n    [ TYPE.BOOLEAN ]:   serializeBoolean,\n    [ TYPE.NULL ]:      serializeNull\n};\n\n// $FlowFixMe\nconst defaultSerializers : Serializers = {};\n\nexport function serialize<T : mixed>(obj : T, serializers : Serializers = defaultSerializers) : string {\n\n    function replacer(key) : ?mixed {\n        const val = this[key];\n\n        if (isSerializedType(this)) {\n            return val;\n        }\n        \n        const type = determineType(val);\n\n        if (!type) {\n            return val;\n        }\n\n        // $FlowFixMe\n        const serializer = serializers[type] || SERIALIZER[type];\n\n        if (!serializer) {\n            return val;\n        }\n\n        return serializer(val, key);\n    }\n\n    const result = JSON.stringify(obj, replacer);\n\n    if (typeof result === 'undefined') {\n        return TYPE.UNDEFINED;\n    }\n\n    return result;\n}\n","/* @flow */\n\nexport type SerializedFunction = void;\n\nexport function serializeFunction() : SerializedFunction {\n    // pass\n}\n\nexport function deserializeFunction() {\n    throw new Error(`Function serialization is not implemented; nothing to deserialize`);\n}\n","/* @flow */\n\nimport { serializeType } from '../common';\nimport { TYPE } from '../constants';\nimport type { NativeSerializedType } from '../types';\n\nexport type SerializedError = {|\n    message : string,\n    stack : string,\n    code : string | number | void\n|};\n\n// $FlowFixMe\nexport function serializeError({ message, stack, code } : Error) : NativeSerializedType<typeof TYPE.ERROR, SerializedError> {\n    return serializeType(TYPE.ERROR, { message, stack, code });\n}\n\nexport function deserializeError({ message, stack, code } : SerializedError) : Error {\n    const error = new Error(message);\n    // $FlowFixMe\n    error.code = code;\n    error.stack = `${ stack }\\n\\n${ error.stack }`;\n    return error;\n}\n","/* @flow */\n\nexport type SerializedPromise = void;\n\nexport function serializePromise() : SerializedPromise {\n    // pass\n}\n\nexport function deserializePromise() {\n    throw new Error(`Promise serialization is not implemented; nothing to deserialize`);\n}\n","/* @flow */\n\nimport { serializeType } from '../common';\nimport { TYPE } from '../constants';\nimport type { NativeSerializedType } from '../types';\n\nexport type SerializedRegex = string;\n\nexport function serializeRegex(val : RegExp) : NativeSerializedType<typeof TYPE.REGEX, SerializedRegex> {\n    return serializeType(TYPE.REGEX, val.source);\n}\n\nexport function deserializeRegex(val : string) : RegExp {\n    // eslint-disable-next-line security/detect-non-literal-regexp\n    return new RegExp(val);\n}\n","/* @flow */\n\nimport { serializeType } from '../common';\nimport { TYPE } from '../constants';\nimport type { NativeSerializedType } from '../types';\n\nexport type SerializedDate = string;\n\nexport function serializeDate(val : Date) : NativeSerializedType<typeof TYPE.DATE, SerializedDate> {\n    return serializeType(TYPE.DATE, val.toJSON());\n}\n\nexport function deserializeDate(val : string) : Date {\n    return new Date(val);\n}\n","/* @flow */\n\nexport type SerializedArray<T : mixed = mixed> = $ReadOnlyArray<T>;\n\nexport function serializeArray<T : mixed>(val : $ReadOnlyArray<T>) : SerializedArray<T> {\n    return val;\n}\n\nexport function deserializeArray<T : mixed>(val : SerializedArray<T>) : $ReadOnlyArray<T> {\n    return val;\n}\n","/* @flow */\n\nexport type SerializedObject = Object;\n\nexport function serializeObject(val : Object) : SerializedObject {\n    return val;\n}\n\nexport function deserializeObject(val : SerializedObject) : Object {\n    return val;\n}\n","/* @flow */\n\nexport type SerializedString = string;\n\nexport function serializeString(val : string) : SerializedString {\n    return val;\n}\n\nexport function deserializeString(val : SerializedString) : string {\n    return val;\n}\n","/* @flow */\n\nexport type SerializedNumber = number;\n\nexport function serializeNumber(val : number) : SerializedNumber {\n    return val;\n}\n\nexport function deserializeNumber(val : SerializedNumber) : number {\n    return val;\n}\n","/* @flow */\n\nexport type SerializedBoolean = boolean;\n\nexport function serializeBoolean(val : boolean) : SerializedBoolean {\n    return val;\n}\n\nexport function deserializeBoolean(val : SerializedBoolean) : boolean {\n    return val;\n}\n","/* @flow */\n\nexport type SerializedNull = null;\n\nexport function serializeNull(val : null) : SerializedNull {\n    return val;\n}\n\nexport function deserializeNull(val : SerializedNull) : null {\n    return val;\n}\n","/* @flow */\n\nimport type { Thenable } from './types';\nimport { TYPE } from './constants';\nimport { determineType, isSerializedType } from './common';\nimport {\n    deserializeFunction,\n    deserializeError, type SerializedError,\n    deserializePromise,\n    deserializeRegex, type SerializedRegex,\n    deserializeDate, type SerializedDate,\n    deserializeArray,\n    deserializeObject,\n    deserializeString,\n    deserializeNumber,\n    deserializeBoolean,\n    deserializeNull\n} from './serializers';\n\ntype Deserializer<V : mixed, S : mixed> = (serializedValue : S, key : string) => V;\ntype PrimitiveDeserializer<V, S = V> = (serializedValue : S, key : string) => V;\n\ntype Deserializers = {\n    function? : Deserializer<Function, *>,\n    error? : Deserializer<Error, SerializedError>,\n    promise? : Deserializer<Thenable, *>,\n    regex? : Deserializer<RegExp, SerializedRegex>,\n    date? : Deserializer<Date, SerializedDate>,\n    array? : PrimitiveDeserializer<$ReadOnlyArray<mixed>>,\n    object? : PrimitiveDeserializer<Object>,\n    string? : PrimitiveDeserializer<string>,\n    number? : PrimitiveDeserializer<number>,\n    boolean? : PrimitiveDeserializer<boolean>,\n    null? : PrimitiveDeserializer<null>,\n    [string] : Deserializer<mixed, *>\n};\n\n// $FlowFixMe\nconst DESERIALIZER : Deserializers = {\n    [ TYPE.FUNCTION ]:  deserializeFunction,\n    [ TYPE.ERROR ]:     deserializeError,\n    [ TYPE.PROMISE ]:   deserializePromise,\n    [ TYPE.REGEX ]:     deserializeRegex,\n    [ TYPE.DATE ]:      deserializeDate,\n    [ TYPE.ARRAY ]:     deserializeArray,\n    [ TYPE.OBJECT ]:    deserializeObject,\n    [ TYPE.STRING ]:    deserializeString,\n    [ TYPE.NUMBER ]:    deserializeNumber,\n    [ TYPE.BOOLEAN ]:   deserializeBoolean,\n    [ TYPE.NULL ]:      deserializeNull\n};\n\n// $FlowFixMe\nconst defaultDeserializers : Deserializers = {};\n\nexport function deserialize<T : mixed | null | void>(str : string, deserializers : Deserializers = defaultDeserializers) : T {\n    if (str === TYPE.UNDEFINED) {\n        // $FlowFixMe\n        return;\n    }\n\n    function replacer(key, val) : ?mixed {\n        if (isSerializedType(this)) {\n            return val;\n        }\n\n        let type;\n        let value;\n\n        if (isSerializedType(val)) {\n            type = val.__type__;\n            value = val.__val__;\n        } else {\n            type = determineType(val);\n            value = val;\n        }\n\n        if (!type) {\n            return value;\n        }\n\n        // $FlowFixMe\n        const deserializer = deserializers[type] || DESERIALIZER[type];\n\n        if (!deserializer) {\n            return value;\n        }\n\n        return deserializer(value, key);\n    }\n\n    return JSON.parse(str, replacer);\n}\n","/* @flow */\n\nimport { isSameDomain, isWindowClosed, type CrossDomainWindowType, type DomainMatcher, getOpener, WINDOW_TYPE, isWindow } from 'cross-domain-utils/src';\nimport { ZalgoPromise } from 'zalgo-promise/src';\nimport { uniqueID, memoizePromise } from 'belter/src';\nimport { serializeType, type CustomSerializedType } from 'universal-serialize/src';\n\nimport { SERIALIZATION_TYPE } from '../conf';\nimport { windowStore, globalStore } from '../global';\nimport { getWindowInstanceID } from '../lib';\nimport { linkWindow } from '../bridge';\nimport type { OnType, SendType } from '../types';\n\nfunction cleanupProxyWindows() {\n    const idToProxyWindow = globalStore('idToProxyWindow');\n    for (const id of idToProxyWindow.keys()) {\n        // $FlowFixMe\n        if (idToProxyWindow.get(id).shouldClean()) {\n            idToProxyWindow.del(id);\n        }\n    }\n}\n\ntype SerializedProxyWindow = {|\n    id : string,\n    type : $Values<typeof WINDOW_TYPE>,\n    close : () => ZalgoPromise<void>,\n    focus : () => ZalgoPromise<void>,\n    isClosed : () => ZalgoPromise<boolean>,\n    setLocation : (string) => ZalgoPromise<void>,\n    setName : (string) => ZalgoPromise<void>,\n    getInstanceID : () => ZalgoPromise<string>\n|};\n\nexport class ProxyWindow {\n\n    isProxyWindow : true = true\n    serializedWindow : SerializedProxyWindow\n    actualWindow : CrossDomainWindowType\n    actualWindowPromise : ZalgoPromise<CrossDomainWindowType>\n    send : SendType\n\n    constructor(serializedWindow : SerializedProxyWindow, actualWindow? : ?CrossDomainWindowType, { send } : { send : SendType }) {\n        this.serializedWindow = serializedWindow;\n        this.actualWindowPromise = new ZalgoPromise();\n        if (actualWindow) {\n            this.setWindow(actualWindow);\n        }\n        this.serializedWindow.getInstanceID = memoizePromise(this.serializedWindow.getInstanceID);\n        this.send = send;\n    }\n\n    getType() : $Values<typeof WINDOW_TYPE> {\n        return this.serializedWindow.type;\n    }\n\n    isPopup() : boolean {\n        return this.getType() === WINDOW_TYPE.POPUP;\n    }\n\n    isIframe() : boolean {\n        return this.getType() === WINDOW_TYPE.IFRAME;\n    }\n\n    setLocation(href : string) : ZalgoPromise<ProxyWindow> {\n        return ZalgoPromise.try(() => {\n            if (this.actualWindow) {\n                this.actualWindow.location = href;\n            } else {\n                return this.serializedWindow.setLocation(href);\n            }\n        }).then(() => this);\n    }\n\n    setName(name : string) : ZalgoPromise<ProxyWindow> {\n        return ZalgoPromise.try(() => {\n            if (this.actualWindow) {\n                if (!isSameDomain(this.actualWindow)) {\n                    throw new Error(`Can not set name for window on different domain`);\n                }\n                // $FlowFixMe\n                this.actualWindow.name = name;\n                // $FlowFixMe\n                if (this.actualWindow.frameElement) {\n                    // $FlowFixMe\n                    this.actualWindow.frameElement.setAttribute('name', name);\n                }\n\n                if (__POST_ROBOT__.__IE_POPUP_SUPPORT__) {\n                    \n                    linkWindow({ win: this.actualWindow, name });\n                }\n\n            } else {\n                return this.serializedWindow.setName(name);\n            }\n        }).then(() => this);\n    }\n\n    close() : ZalgoPromise<ProxyWindow> {\n        return ZalgoPromise.try(() => {\n            if (this.actualWindow) {\n                this.actualWindow.close();\n            } else {\n                return this.serializedWindow.close();\n            }\n        }).then(() => this);\n    }\n\n    focus() : ZalgoPromise<ProxyWindow> {\n        return ZalgoPromise.try(() => {\n            if (this.actualWindow) {\n                this.actualWindow.focus();\n            }\n            return this.serializedWindow.focus();\n        }).then(() => this);\n    }\n\n    isClosed() : ZalgoPromise<boolean> {\n        return ZalgoPromise.try(() => {\n            if (this.actualWindow) {\n                return isWindowClosed(this.actualWindow);\n            } else {\n                return this.serializedWindow.isClosed();\n            }\n        });\n    }\n\n    getWindow() : ?CrossDomainWindowType {\n        return this.actualWindow;\n    }\n\n    setWindow(win : CrossDomainWindowType) {\n        this.actualWindow = win;\n        this.actualWindowPromise.resolve(win);\n    }\n\n    awaitWindow() : ZalgoPromise<CrossDomainWindowType> {\n        return this.actualWindowPromise;\n    }\n\n    matchWindow(win : CrossDomainWindowType) : ZalgoPromise<boolean> {\n        return ZalgoPromise.try(() => {\n            if (this.actualWindow) {\n                return win === this.actualWindow;\n            }\n            \n            return ZalgoPromise.all([\n                this.getInstanceID(),\n                getWindowInstanceID(win, { send: this.send })\n            ]).then(([ proxyInstanceID, knownWindowInstanceID ]) => {\n                const match = proxyInstanceID === knownWindowInstanceID;\n\n                if (match) {\n                    this.setWindow(win);\n                }\n\n                return match;\n            });\n        });\n    }\n\n    unwrap() : CrossDomainWindowType | ProxyWindow {\n        return this.actualWindow || this;\n    }\n\n    getInstanceID() : ZalgoPromise<string> {\n        if (this.actualWindow) {\n            return getWindowInstanceID(this.actualWindow, { send: this.send });\n        } else {\n            return this.serializedWindow.getInstanceID();\n        }\n    }\n\n    serialize() : SerializedProxyWindow {\n        return this.serializedWindow;\n    }\n\n    shouldClean() : boolean {\n        return this.actualWindow && isWindowClosed(this.actualWindow);\n    }\n\n    static unwrap(win : CrossDomainWindowType | ProxyWindow) : CrossDomainWindowType | ProxyWindow {\n        return ProxyWindow.isProxyWindow(win)\n            // $FlowFixMe\n            ? win.unwrap()\n            : win;\n    }\n\n    static serialize(win : CrossDomainWindowType | ProxyWindow, { send } : { send : SendType }) : SerializedProxyWindow {\n        cleanupProxyWindows();\n\n        return ProxyWindow.toProxyWindow(win, { send }).serialize();\n    }\n\n    static deserialize(serializedWindow : SerializedProxyWindow, { on, send } : { on : OnType, send : SendType }) : ProxyWindow {\n        cleanupProxyWindows();\n        \n        return globalStore('idToProxyWindow').getOrSet(serializedWindow.id, () => {\n            return new ProxyWindow(serializedWindow, null, { on, send });\n        });\n    }\n\n    static isProxyWindow(obj : CrossDomainWindowType | ProxyWindow) : boolean {\n        // $FlowFixMe\n        return Boolean(obj && !isWindow(obj) && obj.isProxyWindow);\n    }\n\n    static toProxyWindow(win : CrossDomainWindowType | ProxyWindow, { send } : { send : SendType }) : ProxyWindow {\n        cleanupProxyWindows();\n\n        if (ProxyWindow.isProxyWindow(win)) {\n            // $FlowFixMe\n            return win;\n        }\n\n        // $FlowFixMe\n        return windowStore('winToProxyWindow').getOrSet(win, () => {\n            const id = uniqueID();\n\n            return globalStore('idToProxyWindow').set(id, new ProxyWindow({\n                id,\n                // $FlowFixMe\n                type:          getOpener(win) ? WINDOW_TYPE.POPUP : WINDOW_TYPE.IFRAME,\n                // $FlowFixMe\n                getInstanceID: () => getWindowInstanceID(win, { send }),\n                close:         () => ZalgoPromise.try(() => {\n                    win.close();\n                }),\n                focus:         () => ZalgoPromise.try(() => {\n                    win.focus();\n                }),\n                isClosed:      () => ZalgoPromise.try(() => {\n                    // $FlowFixMe\n                    return isWindowClosed(win);\n                }),\n                setLocation:   (href) => ZalgoPromise.try(() => {\n                    // $FlowFixMe\n                    if (isSameDomain(win)) {\n                        try {\n                            if (win.location && typeof win.location.replace === 'function') {\n                                // $FlowFixMe\n                                win.location.replace(href);\n                                return;\n                            }\n                        } catch (err) {\n                            // pass\n                        }\n                    }\n    \n                    // $FlowFixMe\n                    win.location = href;\n                }),\n                setName:       (name) => ZalgoPromise.try(() => {\n                    if (__POST_ROBOT__.__IE_POPUP_SUPPORT__) {\n                        // $FlowFixMe\n                        linkWindow({ win, name });\n                    }\n                    // $FlowFixMe\n                    win.name = name;\n                })\n            // $FlowFixMe\n            }, win, { send }));\n        });\n    }\n}\n\nexport type SerializedWindow = CustomSerializedType<typeof SERIALIZATION_TYPE.CROSS_DOMAIN_WINDOW, SerializedProxyWindow>;\n\nexport function serializeWindow(destination : CrossDomainWindowType | ProxyWindow, domain : DomainMatcher, win : CrossDomainWindowType, { send } : { send : SendType }) : SerializedWindow {\n    return serializeType(SERIALIZATION_TYPE.CROSS_DOMAIN_WINDOW, ProxyWindow.serialize(win, { send }));\n}\n\nexport function deserializeWindow(source : CrossDomainWindowType | ProxyWindow, origin : string, win : SerializedProxyWindow, { on, send } : { on : OnType, send : SendType }) : ProxyWindow {\n    return ProxyWindow.deserialize(win, { on, send });\n}\n","/* @flow */\n\nimport { ZalgoPromise } from 'zalgo-promise/src';\nimport { getDomain, isSameDomain, isOpener, isSameTopWindow, matchDomain, getUserAgent, getDomainFromUrl, type CrossDomainWindowType } from 'cross-domain-utils/src';\nimport { noop } from 'belter/src';\n\nimport { BRIDGE_NAME_PREFIX } from '../conf';\nimport { windowStore } from '../global';\n\nexport function needsBridgeForBrowser() : boolean {\n\n    if (getUserAgent(window).match(/MSIE|trident|edge\\/12|edge\\/13/i)) {\n        return true;\n    }\n\n    return false;\n}\n\nexport function needsBridgeForWin(win : CrossDomainWindowType) : boolean {\n\n    if (!isSameTopWindow(window, win)) {\n        return true;\n    }\n\n    return false;\n}\n\nexport function needsBridgeForDomain(domain : ?string, win : ?CrossDomainWindowType) : boolean {\n\n    if (domain) {\n        if (getDomain() !== getDomainFromUrl(domain)) {\n            return true;\n        }\n    } else if (win) {\n        if (!isSameDomain(win))  {\n            return true;\n        }\n    }\n\n    return false;\n}\n\nexport function needsBridge({ win, domain } : { win? : CrossDomainWindowType, domain? : string }) : boolean {\n\n    if (!needsBridgeForBrowser()) {\n        return false;\n    }\n\n    if (domain && !needsBridgeForDomain(domain, win)) {\n        return false;\n    }\n\n    if (win && !needsBridgeForWin(win)) {\n        return false;\n    }\n\n    return true;\n}\n\nexport function getBridgeName(domain : string) : string {\n\n    domain = domain || getDomainFromUrl(domain);\n\n    const sanitizedDomain = domain.replace(/[^a-zA-Z0-9]+/g, '_');\n\n    const id = `${ BRIDGE_NAME_PREFIX }_${ sanitizedDomain }`;\n\n    return id;\n}\n\nexport function isBridge() : boolean {\n    return Boolean(window.name && window.name === getBridgeName(getDomain()));\n}\n\nexport const documentBodyReady = new ZalgoPromise(resolve => {\n\n    if (window.document && window.document.body) {\n        return resolve(window.document.body);\n    }\n\n    const interval = setInterval(() => {\n        if (window.document && window.document.body) {\n            clearInterval(interval);\n            return resolve(window.document.body);\n        }\n    }, 10);\n});\n\nexport function registerRemoteWindow(win : CrossDomainWindowType) {\n    const remoteWindowPromises = windowStore('remoteWindowPromises');\n    remoteWindowPromises.getOrSet(win, () => new ZalgoPromise());\n}\n\nexport function findRemoteWindow(win : CrossDomainWindowType) : ZalgoPromise<(remoteWin : CrossDomainWindowType, message : string, remoteDomain : string) => void> {\n    const remoteWindowPromises = windowStore('remoteWindowPromises');\n    const remoteWinPromise = remoteWindowPromises.get(win);\n\n    if (!remoteWinPromise) {\n        throw new Error(`Remote window promise not found`);\n    }\n\n    return remoteWinPromise;\n}\n\nexport function registerRemoteSendMessage(win : CrossDomainWindowType, domain : string, sendMessage : (message : string) => void) {\n    const sendMessageWrapper = (remoteWin : CrossDomainWindowType, remoteDomain : string, message : string) => {\n        if (remoteWin !== win) {\n            throw new Error(`Remote window does not match window`);\n        }\n\n        if (!matchDomain(remoteDomain, domain)) {\n            throw new Error(`Remote domain ${ remoteDomain } does not match domain ${ domain }`);\n        }\n\n        sendMessage.fireAndForget(message);\n    };\n\n    findRemoteWindow(win).resolve(sendMessageWrapper);\n}\n\nexport function rejectRemoteSendMessage(win : CrossDomainWindowType, err : Error) {\n    findRemoteWindow(win).reject(err).catch(noop);\n}\n\nexport function sendBridgeMessage(win : CrossDomainWindowType, domain : string, message : string) : ZalgoPromise<void> {\n\n    const messagingChild  = isOpener(window, win);\n    const messagingParent = isOpener(win, window);\n\n    if (!messagingChild && !messagingParent) {\n        throw new Error(`Can only send messages to and from parent and popup windows`);\n    }\n\n    return findRemoteWindow(win).then(sendMessage => {\n        return sendMessage(win, domain, message);\n    });\n}\n","/* @flow */\n\nimport { matchDomain, getDomain, type CrossDomainWindowType, type DomainMatcher } from 'cross-domain-utils/src';\nimport { ZalgoPromise } from 'zalgo-promise/src';\nimport { uniqueID, isRegex } from 'belter/src';\nimport { serializeType, type CustomSerializedType } from 'universal-serialize/src';\n\nimport { MESSAGE_NAME, WILDCARD, SERIALIZATION_TYPE } from '../conf';\nimport { windowStore, globalStore } from '../global';\nimport type { OnType, SendType, CancelableType } from '../types';\n\nimport { ProxyWindow } from './window';\n\ntype StoredMethod = {|\n    name : string,\n    domain : DomainMatcher,\n    val : Function,\n    source : CrossDomainWindowType | ProxyWindow\n|};\n\nfunction addMethod(id : string, val : Function, name : string, source : CrossDomainWindowType | ProxyWindow, domain : DomainMatcher) {\n    const methodStore = windowStore('methodStore');\n    const proxyWindowMethods = globalStore('proxyWindowMethods');\n    \n    if (ProxyWindow.isProxyWindow(source)) {\n        proxyWindowMethods.set(id, { val, name, domain, source });\n    } else {\n        proxyWindowMethods.del(id);\n        // $FlowFixMe\n        const methods = methodStore.getOrSet(source, () => ({}));\n        methods[id] = { domain, name, val, source };\n    }\n}\n\nfunction lookupMethod(source : CrossDomainWindowType, id : string) : ?StoredMethod {\n    const methodStore = windowStore('methodStore');\n    const proxyWindowMethods = globalStore('proxyWindowMethods');\n    const methods = methodStore.getOrSet(source, () => ({}));\n    return methods[id] || proxyWindowMethods.get(id);\n}\n\nfunction listenForFunctionCalls({ on } : { on : OnType }) : CancelableType {\n    return globalStore('builtinListeners').getOrSet('functionCalls', () => {\n        return on(MESSAGE_NAME.METHOD, { domain: WILDCARD }, ({ source, origin, data } : { source : CrossDomainWindowType, origin : string, data : Object }) => {\n            const { id, name } = data;\n\n            const meth = lookupMethod(source, id);\n    \n            if (!meth) {\n                throw new Error(`Could not find method '${ data.name }' with id: ${ data.id } in ${ getDomain(window) }`);\n            }\n\n            const { source: methodSource, domain, val } = meth;\n            \n            return ZalgoPromise.try(() => {\n                if (!matchDomain(domain, origin)) {\n                    // $FlowFixMe\n                    throw new Error(`Method '${ data.name }' domain ${ JSON.stringify(isRegex(meth.domain) ? meth.domain.source : meth.domain) } does not match origin ${ origin } in ${ getDomain(window) }`);\n                }\n                \n                if (ProxyWindow.isProxyWindow(methodSource)) {\n                    // $FlowFixMe\n                    return methodSource.matchWindow(source).then(match => {\n                        if (!match) {\n                            throw new Error(`Method call '${ data.name }' failed - proxy window does not match source in ${ getDomain(window) }`);\n                        }\n                    });\n                }\n            }).then(() => {\n                return val.apply({ source, origin }, data.args);\n            }, err => {\n                return ZalgoPromise.try(() => {\n                    if (val.onError) {\n                        return val.onError(err);\n                    }\n                }).then(() => {\n                    // $FlowFixMe\n                    if (err.stack) {\n                        // $FlowFixMe\n                        err.stack = `Remote call to ${ name }()\\n\\n${ err.stack }`;\n                    }\n\n                    throw err;\n                });\n            }).then(result => {\n                return { result, id, name };\n            });\n        });\n    });\n}\n\nexport type SerializedFunction = CustomSerializedType<typeof SERIALIZATION_TYPE.CROSS_DOMAIN_FUNCTION, {\n    id : string,\n    name : string\n}>;\n\nexport function serializeFunction<T>(destination : CrossDomainWindowType | ProxyWindow, domain : DomainMatcher, val : () => ZalgoPromise<T> | T, key : string, { on } : { on : OnType }) : SerializedFunction {\n    listenForFunctionCalls({ on });\n    \n    const id = val.__id__ || uniqueID();\n    destination = ProxyWindow.unwrap(destination);\n    const name = val.__name__ || val.name || key;\n\n    if (ProxyWindow.isProxyWindow(destination)) {\n        addMethod(id, val, name, destination, domain);\n\n        // $FlowFixMe\n        destination.awaitWindow().then(win => {\n            addMethod(id, val, name, win, domain);\n        });\n    } else {\n        addMethod(id, val, name, destination, domain);\n    }\n\n    return serializeType(SERIALIZATION_TYPE.CROSS_DOMAIN_FUNCTION, { id, name });\n}\n\nexport function deserializeFunction<T>(source : CrossDomainWindowType | ProxyWindow, origin : string, { id, name } : { id : string, name : string }, { send } : { send : SendType }) : (...args : $ReadOnlyArray<mixed>) => ZalgoPromise<T> {\n    const getDeserializedFunction = (opts? : Object = {}) => {\n        function crossDomainFunctionWrapper<X : mixed>() : ZalgoPromise<X> {\n            let originalStack;\n    \n            if (__DEBUG__) {\n                originalStack = (new Error(`Original call to ${ name }():`)).stack;\n            }\n    \n            return ProxyWindow.toProxyWindow(source, { send }).awaitWindow().then(win => {\n                const meth = lookupMethod(win, id);\n    \n                if (meth && meth.val !== crossDomainFunctionWrapper) {\n                    return meth.val.apply({ source: window, origin: getDomain() }, arguments);\n                } else {\n                    return send(win, MESSAGE_NAME.METHOD, { id, name, args: Array.prototype.slice.call(arguments) }, { domain: origin, fireAndForget: opts.fireAndForget })\n                        .then(res => {\n                            if (!opts.fireAndForget) {\n                                return res.data.result;\n                            }\n                        });\n                }\n    \n            }).catch(err => {\n                // $FlowFixMe\n                if (__DEBUG__ && originalStack && err.stack) {\n                    // $FlowFixMe\n                    err.stack = `${ err.stack }\\n\\n${ originalStack }`;\n                }\n                throw err;\n            });\n        }\n\n        crossDomainFunctionWrapper.__name__ = name;\n        crossDomainFunctionWrapper.__origin__ = origin;\n        crossDomainFunctionWrapper.__source__ = source;\n        crossDomainFunctionWrapper.__id__ = id;\n\n        crossDomainFunctionWrapper.origin = origin;\n\n        return crossDomainFunctionWrapper;\n    };\n\n    const crossDomainFunctionWrapper = getDeserializedFunction();\n    crossDomainFunctionWrapper.fireAndForget = getDeserializedFunction({ fireAndForget: true });\n\n    return crossDomainFunctionWrapper;\n}\n","/* @flow */\n\nimport { type CrossDomainWindowType, isWindow, type DomainMatcher } from 'cross-domain-utils/src';\nimport { TYPE, serialize, deserialize, type Thenable } from 'universal-serialize/src';\n\nimport { SERIALIZATION_TYPE } from '../conf';\nimport type { OnType, SendType } from '../types';\n\nimport { serializeFunction, deserializeFunction, type SerializedFunction } from './function';\nimport { serializePromise, deserializePromise, type SerializedPromise } from './promise';\nimport { serializeWindow, deserializeWindow, type SerializedWindow, ProxyWindow } from './window';\n\nexport function serializeMessage<T : mixed>(destination : CrossDomainWindowType | ProxyWindow, domain : DomainMatcher, obj : T, { on, send } : { on : OnType, send : SendType }) : string {\n    return serialize(obj, {\n        [ TYPE.PROMISE ]:  (val : Thenable, key : string) : SerializedPromise => serializePromise(destination, domain, val, key, { on, send }),\n        [ TYPE.FUNCTION ]: (val : Function, key : string) : SerializedFunction => serializeFunction(destination, domain, val, key, { on, send }),\n        [ TYPE.OBJECT ]:   (val : CrossDomainWindowType) : Object | SerializedWindow => {\n            return (isWindow(val) || ProxyWindow.isProxyWindow(val)) ? serializeWindow(destination, domain, val, { on, send }) : val;\n        }\n    });\n}\n\nexport function deserializeMessage<T : mixed>(source : CrossDomainWindowType | ProxyWindow, origin : string, message : string, { on, send } : { on : OnType, send : SendType }) : T {\n    return deserialize(message, {\n        [ SERIALIZATION_TYPE.CROSS_DOMAIN_ZALGO_PROMISE ]: (serializedPromise)  => deserializePromise(source, origin, serializedPromise),\n        [ SERIALIZATION_TYPE.CROSS_DOMAIN_FUNCTION ]:      (serializedFunction) => deserializeFunction(source, origin, serializedFunction, { on, send }),\n        [ SERIALIZATION_TYPE.CROSS_DOMAIN_WINDOW ]:        (serializedWindow)   => deserializeWindow(source, origin, serializedWindow, { on, send })\n    });\n}\n","/* @flow */\n\nimport { type CrossDomainWindowType, type DomainMatcher } from 'cross-domain-utils/src';\nimport { ZalgoPromise } from 'zalgo-promise/src';\nimport { serializeType, type CustomSerializedType, type Thenable } from 'universal-serialize/src';\n\nimport { SERIALIZATION_TYPE } from '../conf';\nimport type { OnType, SendType } from '../types';\n\nimport { serializeFunction, type SerializedFunction } from './function';\nimport { ProxyWindow } from './window';\n\nexport type SerializedPromise = CustomSerializedType<typeof SERIALIZATION_TYPE.CROSS_DOMAIN_ZALGO_PROMISE, {\n    then : SerializedFunction\n}>;\n\nexport function serializePromise(destination : CrossDomainWindowType | ProxyWindow, domain : DomainMatcher, val : Thenable, key : string, { on, send } : { on : OnType, send : SendType }) : SerializedPromise {\n    return serializeType(SERIALIZATION_TYPE.CROSS_DOMAIN_ZALGO_PROMISE, {\n        then: serializeFunction(destination, domain, (resolve, reject) => val.then(resolve, reject), key, { on, send })\n    });\n}\n\nexport function deserializePromise<T>(source : CrossDomainWindowType | ProxyWindow, origin : string, { then } : { then : Function }) : ZalgoPromise<T> {\n    return new ZalgoPromise(then);\n}\n","/* @flow */\n\nimport { isSameDomain, isSameTopWindow, isActuallySameDomain, getActualDomain,\n    getDomain, type CrossDomainWindowType, type DomainMatcher, PROTOCOL } from 'cross-domain-utils/src';\n\nimport { SEND_STRATEGY, WILDCARD } from '../../conf';\nimport { needsGlobalMessagingForBrowser } from '../../lib';\nimport { getGlobal } from '../../global';\nimport { sendBridgeMessage, needsBridgeForBrowser, isBridge } from '../../bridge';\n\nexport const SEND_MESSAGE_STRATEGIES = {};\n\nSEND_MESSAGE_STRATEGIES[SEND_STRATEGY.POST_MESSAGE] = (win : CrossDomainWindowType, serializedMessage : string, domain : DomainMatcher) => {\n\n    if (__TEST__) {\n        if (needsGlobalMessagingForBrowser() && isSameTopWindow(window, win) === false) {\n            return;\n        }\n    }\n\n    let domains;\n\n    if (Array.isArray(domain)) {\n        domains = domain;\n    } else if (typeof domain === 'string') {\n        domains = [ domain ];\n    } else {\n        domains = [ WILDCARD ];\n    }\n\n    domains = domains.map(dom => {\n\n        if (__TEST__) {\n            if (dom.indexOf(PROTOCOL.MOCK) === 0) {\n                if (window.location.protocol === PROTOCOL.FILE) {\n                    return WILDCARD;\n                }\n\n                if (!isActuallySameDomain(win)) {\n                    throw new Error(`Attempting to send messsage to mock domain ${ dom }, but window is actually cross-domain`);\n                }\n\n                // $FlowFixMe\n                return getActualDomain(win);\n\n            }\n        }\n        \n        if (dom.indexOf(PROTOCOL.FILE) === 0) {\n            return WILDCARD;\n        }\n\n        return dom;\n    });\n\n    domains.forEach(dom => {\n        win.postMessage(serializedMessage, dom);\n    });\n};\n\nif (__POST_ROBOT__.__IE_POPUP_SUPPORT__) {\n\n    SEND_MESSAGE_STRATEGIES[SEND_STRATEGY.BRIDGE] = (win : CrossDomainWindowType, serializedMessage : string, domain : string) => {\n\n        if (!needsBridgeForBrowser() && !isBridge()) {\n            return;\n        }\n\n        if (isSameDomain(win)) {\n            throw new Error(`Post message through bridge disabled between same domain windows`);\n        }\n\n        if (isSameTopWindow(window, win) !== false) {\n            throw new Error(`Can only use bridge to communicate between two different windows, not between frames`);\n        }\n\n        sendBridgeMessage(win, domain, serializedMessage);\n    };\n}\n\nif (__POST_ROBOT__.__IE_POPUP_SUPPORT__ || __POST_ROBOT__.__GLOBAL_MESSAGE_SUPPORT__) {\n    \n    SEND_MESSAGE_STRATEGIES[SEND_STRATEGY.GLOBAL] = (win : CrossDomainWindowType, serializedMessage : string) => {\n\n        if (!needsGlobalMessagingForBrowser()) {\n            return;\n        }\n\n        if (!isSameDomain(win)) {\n            throw new Error(`Post message through global disabled between different domain windows`);\n        }\n\n        if (isSameTopWindow(window, win) !== false) {\n            throw new Error(`Can only use global to communicate between two different windows, not between frames`);\n        }\n\n        // $FlowFixMe\n        const foreignGlobal = getGlobal(win);\n\n        if (!foreignGlobal) {\n            throw new Error(`Can not find postRobot global on foreign window`);\n        }\n\n        foreignGlobal.receiveMessage({\n            source: window,\n            origin: getDomain(),\n            data:   serializedMessage\n        });\n    };\n}\n","/* @flow */\n\nimport { isWindowClosed, getDomain, type CrossDomainWindowType, type DomainMatcher } from 'cross-domain-utils/src';\nimport { uniqueID, stringifyError } from 'belter/src';\n\nimport { serializeMessage } from '../../serialize';\nimport type { Message } from '../types';\nimport type { OnType, SendType } from '../../types';\n\nimport { SEND_MESSAGE_STRATEGIES } from './strategies';\n\nexport function sendMessage(win : CrossDomainWindowType, domain : DomainMatcher, message : Message, { on, send } : { on : OnType, send : SendType }) {\n    if (isWindowClosed(win)) {\n        throw new Error('Window is closed');\n    }\n    \n    const serializedMessage = serializeMessage(win, domain, {\n        [ __POST_ROBOT__.__GLOBAL_KEY__ ]: {\n            id:     uniqueID(),\n            origin: getDomain(window),\n            ...message\n        }\n    }, { on, send });\n\n    const strategies = Object.keys(SEND_MESSAGE_STRATEGIES);\n    const errors = [];\n\n    for (const strategyName of strategies) {\n        try {\n            SEND_MESSAGE_STRATEGIES[strategyName](win, serializedMessage, domain);\n        } catch (err) {\n            errors.push(err);\n        }\n    }\n\n    if (errors.length === strategies.length) {\n        throw new Error(`All post-robot messaging strategies failed:\\n\\n${ errors.map(stringifyError).join('\\n\\n') }`);\n    }\n}\n","/* @flow */\n\nimport { getUserAgent } from 'cross-domain-utils/src';\n\nexport function needsGlobalMessagingForBrowser() : boolean {\n\n    if (getUserAgent(window).match(/MSIE|rv:11|trident|edge\\/12|edge\\/13/i)) {\n        return true;\n    }\n\n    return false;\n}\n","/* @flow */\n\nimport { type ZalgoPromise } from 'zalgo-promise/src';\nimport { matchDomain, type CrossDomainWindowType, type DomainMatcher } from 'cross-domain-utils/src';\nimport { isRegex, getOrSet } from 'belter/src';\n\nimport { getWildcard, type WildCard, globalStore, windowStore } from '../global';\nimport { WILDCARD } from '../conf';\n\nexport function resetListeners() {\n    const responseListeners = globalStore('responseListeners');\n    const erroredResponseListeners = globalStore('erroredResponseListeners');\n    responseListeners.reset();\n    erroredResponseListeners.reset();\n}\n\nconst __DOMAIN_REGEX__ = '__domain_regex__';\n\nexport type RequestListenerType = {|\n    handler : ({ source : CrossDomainWindowType, origin : string, data : mixed }) => (mixed | ZalgoPromise<mixed>),\n    handleError : (err : mixed) => void,\n    window : ?CrossDomainWindowType,\n    name : string,\n    domain : DomainMatcher\n|};\n\nexport type ResponseListenerType = {|\n    name : string,\n    win : CrossDomainWindowType,\n    domain : DomainMatcher,\n    promise : ZalgoPromise<*>,\n    ack? : ?boolean\n|};\n\nexport function addResponseListener(hash : string, listener : ResponseListenerType) {\n    const responseListeners = globalStore('responseListeners');\n    responseListeners.set(hash, listener);\n}\n\nexport function getResponseListener(hash : string) : ?ResponseListenerType {\n    const responseListeners = globalStore('responseListeners');\n    return responseListeners.get(hash);\n}\n\nexport function deleteResponseListener(hash : string) {\n    const responseListeners = globalStore('responseListeners');\n    responseListeners.del(hash);\n}\n\nexport function markResponseListenerErrored(hash : string) {\n    const erroredResponseListeners = globalStore('erroredResponseListeners');\n    erroredResponseListeners.set(hash, true);\n}\n\nexport function isResponseListenerErrored(hash : string) : boolean {\n    const erroredResponseListeners = globalStore('erroredResponseListeners');\n    return erroredResponseListeners.has(hash);\n}\n\nexport function getRequestListener({ name, win, domain } : { name : string, win : ?(CrossDomainWindowType | WildCard), domain : ?(string | RegExp) }) : ?RequestListenerType {\n    const requestListeners = windowStore('requestListeners');\n\n    if (win === WILDCARD) {\n        win = null;\n    }\n\n    if (domain === WILDCARD) {\n        domain = null;\n    }\n\n    if (!name) {\n        throw new Error(`Name required to get request listener`);\n    }\n\n    for (const winQualifier of [ win, getWildcard() ]) {\n        if (!winQualifier) {\n            continue;\n        }\n\n        const nameListeners = requestListeners.get(winQualifier);\n\n        if (!nameListeners) {\n            continue;\n        }\n\n        const domainListeners = nameListeners[name];\n\n        if (!domainListeners) {\n            continue;\n        }\n\n        if (domain && typeof domain === 'string') {\n            if (domainListeners[domain]) {\n                return domainListeners[domain];\n            }\n\n            if (domainListeners[__DOMAIN_REGEX__]) {\n                for (const { regex, listener } of domainListeners[__DOMAIN_REGEX__]) {\n                    if (matchDomain(regex, domain)) {\n                        return listener;\n                    }\n                }\n            }\n        }\n\n        if (domainListeners[WILDCARD]) {\n            return domainListeners[WILDCARD];\n        }\n    }\n}\n\nexport function addRequestListener({ name, win, domain } : { name : string, win : ?(CrossDomainWindowType | WildCard), domain : ?DomainMatcher }, listener : RequestListenerType) : { cancel : () => void } {\n    const requestListeners = windowStore('requestListeners');\n\n    if (!name || typeof name !== 'string') {\n        throw new Error(`Name required to add request listener`);\n    }\n\n    if (Array.isArray(win)) {\n        const listenersCollection = [];\n\n        for (const item of win) {\n            listenersCollection.push(addRequestListener({ name, domain, win: item }, listener));\n        }\n\n        return {\n            cancel() {\n                for (const cancelListener of listenersCollection) {\n                    cancelListener.cancel();\n                }\n            }\n        };\n    }\n\n    if (Array.isArray(domain)) {\n        const listenersCollection = [];\n\n        for (const item of domain) {\n            listenersCollection.push(addRequestListener({ name, win, domain: item }, listener));\n        }\n\n        return {\n            cancel() {\n                for (const cancelListener of listenersCollection) {\n                    cancelListener.cancel();\n                }\n            }\n        };\n    }\n\n    const existingListener = getRequestListener({ name, win, domain });\n\n    if (!win || win === WILDCARD) {\n        win = getWildcard();\n    }\n\n    domain = domain || WILDCARD;\n\n    if (existingListener) {\n        if (win && domain) {\n            throw new Error(`Request listener already exists for ${ name } on domain ${ domain.toString() } for ${ win === getWildcard() ? 'wildcard' : 'specified' } window`);\n        } else if (win) {\n            throw new Error(`Request listener already exists for ${ name } for ${ win === getWildcard() ? 'wildcard' : 'specified' } window`);\n        } else if (domain) {\n            throw new Error(`Request listener already exists for ${ name } on domain ${ domain.toString() }`);\n        } else {\n            throw new Error(`Request listener already exists for ${ name }`);\n        }\n    }\n\n    const nameListeners = requestListeners.getOrSet(win, () => ({}));\n    // $FlowFixMe\n    const domainListeners = getOrSet(nameListeners, name, () => ({}));\n\n    const strDomain = domain.toString();\n\n    let regexListeners;\n    let regexListener;\n\n    if (isRegex(domain)) {\n        regexListeners = getOrSet(domainListeners, __DOMAIN_REGEX__, () => []);\n        regexListener = { regex: domain, listener };\n        regexListeners.push(regexListener);\n    } else {\n        domainListeners[strDomain] = listener;\n    }\n\n    return {\n        cancel() {\n            delete domainListeners[strDomain];\n\n            if (regexListener) {\n                regexListeners.splice(regexListeners.indexOf(regexListener, 1));\n\n                if (!regexListeners.length) {\n                    delete domainListeners[__DOMAIN_REGEX__];\n                }\n            }\n\n            if (!Object.keys(domainListeners).length) {\n                // $FlowFixMe\n                delete nameListeners[name];\n            }\n\n            // $FlowFixMe\n            if (win && !Object.keys(nameListeners).length) {\n                requestListeners.del(win);\n            }\n        }\n    };\n}\n","/* @flow */\n\nimport { ZalgoPromise } from 'zalgo-promise/src';\nimport { isWindowClosed, matchDomain, stringifyDomainPattern, type CrossDomainWindowType } from 'cross-domain-utils/src';\nimport { noop } from 'belter/src';\n\nimport { MESSAGE_TYPE, MESSAGE_ACK, MESSAGE_NAME } from '../../conf';\nimport { sendMessage } from '../send';\nimport { getRequestListener, getResponseListener, deleteResponseListener, isResponseListenerErrored } from '../listeners';\nimport type { RequestMessage, AckResponseMessage, SuccessResponseMessage, ErrorResponseMessage } from '../types';\nimport type { OnType, SendType } from '../../types';\n\nexport const RECEIVE_MESSAGE_TYPES = {\n\n    [ MESSAGE_TYPE.REQUEST ](source : CrossDomainWindowType, origin : string, message : RequestMessage, { on, send } : { on : OnType, send : SendType }) : ZalgoPromise<void> {\n\n        const options = getRequestListener({ name: message.name, win: source, domain: origin });\n\n        const logName = (message.name === MESSAGE_NAME.METHOD && message.data && typeof message.data.name === 'string') ? `${ message.data.name }()` : message.name;\n\n        if (__DEBUG__) {\n            // eslint-disable-next-line no-console\n            console.info('receive::req', logName, origin, '\\n\\n', message.data);\n        }\n\n        function sendResponse(type : $Values<typeof MESSAGE_TYPE>, ack? : $Values<typeof MESSAGE_ACK>, response = {}) {\n\n            if (message.fireAndForget || isWindowClosed(source)) {\n                return;\n            }\n\n            if (__DEBUG__ && type !== MESSAGE_TYPE.ACK) {\n                if (ack === MESSAGE_ACK.SUCCESS) {\n                    // $FlowFixMe\n                    console.info('respond::res', logName, origin, '\\n\\n', response.data);  // eslint-disable-line no-console\n                } else if (ack === MESSAGE_ACK.ERROR) {\n                    // $FlowFixMe\n                    console.error('respond::err', logName, origin, '\\n\\n', response.error); // eslint-disable-line no-console\n                }\n            }\n\n            // $FlowFixMe\n            sendMessage(source, origin, {\n                type,\n                ack,\n                hash:   message.hash,\n                name:   message.name,\n                ...response\n            }, { on, send });\n        }\n\n        return ZalgoPromise.all([\n\n            sendResponse(MESSAGE_TYPE.ACK),\n\n            ZalgoPromise.try(() => {\n\n                if (!options) {\n                    throw new Error(`No handler found for post message: ${ message.name } from ${ origin } in ${ window.location.protocol }//${ window.location.host }${ window.location.pathname }`);\n                }\n\n                if (!matchDomain(options.domain, origin)) {\n                    throw new Error(`Request origin ${ origin } does not match domain ${ options.domain.toString() }`);\n                }\n\n                const data = message.data;\n\n                return options.handler({ source, origin, data });\n\n            }).then(data => {\n                return sendResponse(MESSAGE_TYPE.RESPONSE, MESSAGE_ACK.SUCCESS, { data });\n\n            }, error => {\n                return sendResponse(MESSAGE_TYPE.RESPONSE, MESSAGE_ACK.ERROR, { error });\n            })\n\n        ]).then(noop).catch(err => {\n            if (options && options.handleError) {\n                return options.handleError(err);\n            } else {\n                throw err;\n            }\n        });\n    },\n\n    [ MESSAGE_TYPE.ACK ](source : CrossDomainWindowType, origin : string, message : AckResponseMessage) {\n\n        if (isResponseListenerErrored(message.hash)) {\n            return;\n        }\n\n        const options = getResponseListener(message.hash);\n\n        if (!options) {\n            throw new Error(`No handler found for post message ack for message: ${ message.name } from ${ origin } in ${ window.location.protocol }//${ window.location.host }${ window.location.pathname }`);\n        }\n\n        if (!matchDomain(options.domain, origin)) {\n            throw new Error(`Ack origin ${ origin } does not match domain ${ options.domain.toString() }`);\n        }\n\n        if (source !== options.win) {\n            throw new Error(`Ack source does not match registered window`);\n        }\n\n        options.ack = true;\n    },\n\n    [ MESSAGE_TYPE.RESPONSE ](source : CrossDomainWindowType, origin : string, message : SuccessResponseMessage | ErrorResponseMessage) : void | ZalgoPromise<void> {\n\n        if (isResponseListenerErrored(message.hash)) {\n            return;\n        }\n\n        const options = getResponseListener(message.hash);\n\n        if (!options) {\n            throw new Error(`No handler found for post message response for message: ${ message.name } from ${ origin } in ${ window.location.protocol }//${ window.location.host }${ window.location.pathname }`);\n        }\n\n        if (!matchDomain(options.domain, origin)) {\n            throw new Error(`Response origin ${ origin } does not match domain ${ stringifyDomainPattern(options.domain) }`);\n        }\n\n        if (source !== options.win) {\n            throw new Error(`Response source does not match registered window`);\n        }\n\n        deleteResponseListener(message.hash);\n\n        const logName = (message.name === MESSAGE_NAME.METHOD && message.data && typeof message.data.name === 'string') ? `${ message.data.name }()` : message.name;\n\n        if (message.ack === MESSAGE_ACK.ERROR) {\n            if (__DEBUG__) {\n                console.error('receive::err', logName, origin, '\\n\\n', message.error); // eslint-disable-line no-console\n            }\n\n            options.promise.reject(message.error);\n\n        } else if (message.ack === MESSAGE_ACK.SUCCESS) {\n            if (__DEBUG__) {\n                console.info('receive::res', logName, origin, '\\n\\n', message.data); // eslint-disable-line no-console\n            }\n\n            options.promise.resolve({ source, origin, data: message.data });\n        }\n    }\n};\n","/* @flow */\n\nimport { isWindowClosed, type CrossDomainWindowType, getDomain, isSameTopWindow, PROTOCOL  } from 'cross-domain-utils/src';\nimport { addEventListener, noop } from 'belter/src';\n\nimport { markWindowKnown, needsGlobalMessagingForBrowser } from '../../lib';\nimport { deserializeMessage } from '../../serialize';\nimport { getGlobal, globalStore } from '../../global';\nimport type { OnType, SendType, MessageEvent, CancelableType } from '../../types';\n\nimport { RECEIVE_MESSAGE_TYPES } from './types';\n\nfunction parseMessage(message : string, source : CrossDomainWindowType, origin : string, { on, send } : { on : OnType, send : SendType }) : ?Object {\n    let parsedMessage;\n\n    try {\n        parsedMessage = deserializeMessage(source, origin, message, { on, send });\n    } catch (err) {\n        return;\n    }\n\n    if (!parsedMessage) {\n        return;\n    }\n\n    if (typeof parsedMessage !== 'object' || parsedMessage === null) {\n        return;\n    }\n\n    parsedMessage = parsedMessage[__POST_ROBOT__.__GLOBAL_KEY__];\n\n    if (!parsedMessage || typeof parsedMessage !== 'object' || parsedMessage === null) {\n        return;\n    }\n\n    if (!parsedMessage.type || typeof parsedMessage.type !== 'string') {\n        return;\n    }\n\n    if (!RECEIVE_MESSAGE_TYPES[parsedMessage.type]) {\n        return;\n    }\n\n    return parsedMessage;\n}\n\nexport function receiveMessage(event : MessageEvent, { on, send } : { on : OnType, send : SendType }) {\n    const receivedMessages = globalStore('receivedMessages');\n\n    if (!window || window.closed) {\n        throw new Error(`Message recieved in closed window`);\n    }\n\n    try {\n        if (!event.source) {\n            return;\n        }\n    } catch (err) {\n        return;\n    }\n\n    let { source, origin, data } = event;\n\n    if (__TEST__) {\n        // $FlowFixMe\n        origin = getDomain(source);\n    }\n\n    const message = parseMessage(data, source, origin, { on, send });\n\n    if (!message) {\n        return;\n    }\n\n    markWindowKnown(source);\n\n    if (receivedMessages.has(message.id)) {\n        return;\n    }\n\n    receivedMessages.set(message.id, true);\n\n    if (isWindowClosed(source) && !message.fireAndForget) {\n        return;\n    }\n\n    if (message.origin.indexOf(PROTOCOL.FILE) === 0) {\n        origin = message.origin;\n    }\n\n    RECEIVE_MESSAGE_TYPES[message.type](source, origin, message, { on, send });\n}\n\nexport function setupGlobalReceiveMessage({ on, send } : { on : OnType, send : SendType }) {\n    const global = getGlobal();\n    global.receiveMessage = global.receiveMessage || (message => receiveMessage(message, { on, send }));\n}\n\ntype ListenerEvent = {|\n    source : CrossDomainWindowType,\n    origin : string,\n    data : string,\n    sourceElement : CrossDomainWindowType,\n    originalEvent? : { origin : string }\n|};\n\nexport function messageListener(event : ListenerEvent, { on, send } : { on : OnType, send : SendType }) {\n\n    try {\n        noop(event.source);\n    } catch (err) {\n        return;\n    }\n\n    const source = event.source || event.sourceElement;\n    let origin = event.origin || (event.originalEvent && event.originalEvent.origin);\n    const data = event.data;\n\n    if (origin === 'null') {\n        origin = `${ PROTOCOL.FILE }//`;\n    }\n\n    if (!source) {\n        return;\n    }\n\n    if (!origin) {\n        throw new Error(`Post message did not have origin domain`);\n    }\n\n    if (__TEST__) {\n        if (needsGlobalMessagingForBrowser() && isSameTopWindow(source, window) === false) {\n            return;\n        }\n    }\n\n    receiveMessage({ source, origin, data }, { on, send });\n}\n\nexport function listenForMessages({ on, send } : { on : OnType, send : SendType }) : CancelableType {\n    return globalStore().getOrSet('postMessageListeners', () => {\n        // $FlowFixMe\n        return addEventListener(window, 'message', event => {\n            // $FlowFixMe\n            messageListener(event, { on, send });\n        });\n    });\n}\n","/* @flow */\n\nimport { ZalgoPromise } from 'zalgo-promise/src';\n\nimport { addRequestListener, type RequestListenerType } from '../drivers';\nimport { WILDCARD } from '../conf';\nimport type { ServerOptionsType, HandlerType, CancelableType } from '../types';\n\nexport function on(name : string, options : ServerOptionsType | HandlerType, handler : ?HandlerType) : CancelableType {\n\n    if (!name) {\n        throw new Error('Expected name');\n    }\n\n    if (typeof options === 'function') {\n        handler = options;\n        // $FlowFixMe\n        options = {};\n    }\n\n    if (!handler) {\n        throw new Error('Expected handler');\n    }\n\n    options = options || {};\n    options.name = name;\n    options.handler = handler || options.handler;\n\n    const win = options.window;\n    const domain = options.domain;\n\n    const listenerOptions : RequestListenerType = {\n        handler:     options.handler,\n        handleError: options.errorHandler || (err => {\n            throw err;\n        }),\n        window: win,\n        domain: domain || WILDCARD,\n        name\n    };\n\n    const requestListener = addRequestListener({ name, win, domain }, listenerOptions);\n\n    return {\n        cancel() {\n            requestListener.cancel();\n        }\n    };\n}\n\nexport function once(name : string, options? : ServerOptionsType | HandlerType, handler? : HandlerType) : ZalgoPromise<{ source : mixed, origin : string, data : Object }> {\n    \n    // $FlowFixMe\n    options = options || {};\n    if (typeof options === 'function') {\n        handler = options;\n        // $FlowFixMe\n        options = {};\n    }\n\n    const promise = new ZalgoPromise();\n    let listener; // eslint-disable-line prefer-const\n\n    options.errorHandler = (err) => {\n        listener.cancel();\n        promise.reject(err);\n    };\n\n    listener = on(name, options, event => {\n        listener.cancel();\n        promise.resolve(event);\n        if (handler) {\n            return handler(event);\n        }\n    });\n\n    promise.cancel = listener.cancel;\n    return promise;\n}\n","/* @flow */\n\nimport { ZalgoPromise } from 'zalgo-promise/src';\nimport { isAncestor, isWindowClosed, getDomain, matchDomain, type CrossDomainWindowType } from 'cross-domain-utils/src';\nimport { uniqueID, isRegex, noop } from 'belter/src';\n\n\nimport { CHILD_WINDOW_TIMEOUT, MESSAGE_TYPE, WILDCARD, MESSAGE_NAME, ACK_TIMEOUT, RES_TIMEOUT, ACK_TIMEOUT_KNOWN } from '../conf';\nimport { sendMessage, addResponseListener, deleteResponseListener, markResponseListenerErrored, type ResponseListenerType } from '../drivers';\nimport { awaitWindowHello, sayHello, isWindowKnown } from '../lib';\nimport { windowStore } from '../global';\nimport type { RequestOptionsType, ResponseMessageEvent } from '../types';\n\nimport { on } from './on';\n\nexport function send(win : CrossDomainWindowType, name : string, data : ?Object, options? : RequestOptionsType) : ZalgoPromise<ResponseMessageEvent> {\n    \n    // $FlowFixMe\n    options = options || {};\n    let domain = options.domain || WILDCARD;\n    const responseTimeout = options.timeout || RES_TIMEOUT;\n    const childTimeout = options.timeout || CHILD_WINDOW_TIMEOUT;\n    const fireAndForget = options.fireAndForget || false;\n\n    const prom = ZalgoPromise.try(() => {\n        if (!name) {\n            throw new Error('Expected name');\n        }\n\n        if (domain) {\n            if (typeof domain !== 'string' && !Array.isArray(domain) && !isRegex(domain)) {\n                throw new TypeError(`Expected domain to be a string, array, or regex`);\n            }\n        }\n\n        if (isWindowClosed(win)) {\n            throw new Error('Target window is closed');\n        }\n\n        const reqPromises = windowStore('requestPromises').getOrSet(win, () => []);\n\n        // $FlowFixMe\n        const requestPromise = ZalgoPromise.try(() => {\n\n            if (isAncestor(window, win)) {\n                return awaitWindowHello(win, childTimeout);\n            } else if (isRegex(domain)) {\n                return sayHello(win, { send });\n            }\n\n        // $FlowFixMe\n        }).then(({ domain: origin } = {}) => {\n\n            if (isRegex(domain)) {\n                if (!matchDomain(domain, origin)) {\n                    // $FlowFixMe\n                    throw new Error(`Remote window domain ${ origin } does not match regex: ${ domain.source }`);\n                }\n                domain = origin;\n            }\n\n            const logName = (name === MESSAGE_NAME.METHOD && data && typeof data.name === 'string') ? `${ data.name }()` : name;\n\n            if (__DEBUG__) {\n                console.info('send::req', logName, domain, '\\n\\n', data); // eslint-disable-line no-console\n            }\n\n            let hasResult = false;\n\n            const promise = new ZalgoPromise();\n            promise.finally(() => {\n                hasResult = true;\n                reqPromises.splice(reqPromises.indexOf(requestPromise, 1));\n            }).catch(noop);\n\n            const hash = `${ name }_${ uniqueID() }`;\n\n            sendMessage(win, domain, {\n                type: MESSAGE_TYPE.REQUEST,\n                hash,\n                name,\n                data,\n                fireAndForget\n            }, { on, send });\n\n            if (fireAndForget) {\n                return promise.resolve();\n            }\n\n            promise.catch(() => {\n                markResponseListenerErrored(hash);\n                deleteResponseListener(hash);\n            });\n\n            const responseListener : ResponseListenerType = {\n                name,\n                win,\n                domain,\n                promise\n            };\n\n            addResponseListener(hash, responseListener);\n\n            const totalAckTimeout = isWindowKnown(win) ? ACK_TIMEOUT_KNOWN : ACK_TIMEOUT;\n            const totalResTimeout = responseTimeout;\n\n            let ackTimeout = totalAckTimeout;\n            let resTimeout = totalResTimeout;\n\n            let cycleTime = 100;\n\n            const cycle = () => {\n                if (hasResult) {\n                    return;\n                }\n\n                if (isWindowClosed(win)) {\n                    if (!responseListener.ack) {\n                        return promise.reject(new Error(`Window closed for ${ name } before ack`));\n                    } else {\n                        return promise.reject(new Error(`Window closed for ${ name } before response`));\n                    }\n                }\n\n                ackTimeout = Math.max(ackTimeout - cycleTime, 0);\n                if (resTimeout !== -1) {\n                    resTimeout = Math.max(resTimeout - cycleTime, 0);\n                }\n\n                const hasAck = responseListener.ack;\n\n                if (hasAck) {\n                    if (resTimeout === -1) {\n                        return;\n                    }\n\n                    cycleTime = Math.min(resTimeout, 2000);\n\n                } else if (ackTimeout === 0) {\n                    return promise.reject(new Error(`No ack for postMessage ${ logName } in ${ getDomain() } in ${ totalAckTimeout }ms`));\n\n                } else if (resTimeout === 0) {\n                    return promise.reject(new Error(`No response for postMessage ${ logName } in ${ getDomain() } in ${ totalResTimeout }ms`));\n                }\n\n                setTimeout(cycle, cycleTime);\n            };\n\n            setTimeout(cycle, cycleTime);\n\n            return promise;\n        });\n\n        reqPromises.push(requestPromise);\n        return requestPromise;\n    });\n\n    return prom;\n}\n","/* @flow */\n\nimport type { CrossDomainWindowType, DomainMatcher } from 'cross-domain-utils/src';\n\nimport { initHello } from './lib';\nimport { listenForMessages, receiveMessage, setupGlobalReceiveMessage } from './drivers';\nimport { getGlobal } from './global';\nimport { on, send } from './public';\nimport { setupBridge } from './bridge';\nimport { serializeMessage as internalSerializeMessage, deserializeMessage as internalDeserializeMessage, ProxyWindow } from './serialize';\n\nexport function serializeMessage<T>(destination : CrossDomainWindowType | ProxyWindow, domain : DomainMatcher, obj : T) : string {\n    return internalSerializeMessage(destination, domain, obj, { on, send });\n}\n\nexport function deserializeMessage<T : mixed>(source : CrossDomainWindowType | ProxyWindow, origin : string, message : string) : T {\n    return internalDeserializeMessage(source, origin, message, { on, send });\n}\n\nexport function toProxyWindow(win : CrossDomainWindowType | ProxyWindow) : ProxyWindow {\n    return ProxyWindow.toProxyWindow(win, { send });\n}\n\nexport function setup() {\n    if (!getGlobal().initialized) {\n        getGlobal().initialized = true;\n    \n        setupGlobalReceiveMessage({ on, send });\n        listenForMessages({ on, send });\n    \n        if (__POST_ROBOT__.__IE_POPUP_SUPPORT__) {\n            setupBridge({ on, send, receiveMessage });\n        }\n\n        initHello({ on, send });\n    }\n}\n","/* @flow */\n\nimport { isSameDomain, type CrossDomainWindowType } from 'cross-domain-utils/src';\n\nexport function globalFor(win : CrossDomainWindowType) : Object {\n\n    if (!isSameDomain(win)) {\n        throw new Error(`Can not get global for window on different domain`);\n    }\n\n    if (!win[__ZOID__.__GLOBAL_KEY__]) {\n        win[__ZOID__.__GLOBAL_KEY__] = {};\n    }\n\n    return win[__ZOID__.__GLOBAL_KEY__];\n}\n","/* @flow */\n\nimport { ZalgoPromise } from 'zalgo-promise/src';\nimport { toCSS } from 'belter/src';\n\nexport type ProxyElement<T : HTMLElement> = {|\n    resize : ({ width : ?number, height : ?number }) => void,\n    getElement : () => ZalgoPromise<T>\n|};\n\nexport function getProxyElement<T : HTMLElement>(element : T) : ProxyElement<T> {\n    return {\n        resize({ width, height } : { width : ?number, height : ?number }) {\n            if (typeof width === 'number') {\n                element.style.width = toCSS(width);\n            }\n    \n            if (typeof height === 'number') {\n                element.style.height = toCSS(height);\n            }\n        },\n\n        getElement() : ZalgoPromise<T> {\n            return ZalgoPromise.try(() => {\n                if (this.source && this.source !== window) {\n                    throw new Error(`Can not call getElement from a remote window`);\n                }\n    \n                return element;\n            });\n        }\n    };\n}\n","/* @flow */\n\nimport { setup } from './setup';\nimport { setupBridge, openBridge, linkWindow, linkUrl, isBridge, needsBridge, needsBridgeForBrowser, hasBridge,\n    needsBridgeForWin, needsBridgeForDomain, destroyBridges } from './bridge';\n\nexport { ZalgoPromise as Promise } from 'zalgo-promise/src';\n\nexport * from './types';\nexport { ProxyWindow } from './serialize';\nexport { setup, serializeMessage, deserializeMessage, toProxyWindow } from './setup';\nexport { on, once, send } from './public';\nexport { markWindowKnown } from './lib';\nexport { cleanUpWindow } from './clean';\nexport let bridge;\n\nif (__POST_ROBOT__.__IE_POPUP_SUPPORT__) {\n    bridge = { setupBridge, openBridge, linkWindow, linkUrl, isBridge, needsBridge,\n        needsBridgeForBrowser, hasBridge, needsBridgeForWin, needsBridgeForDomain, destroyBridges };\n}\n\nif (__POST_ROBOT__.__AUTO_SETUP__) {\n    setup();\n}\n","/* @flow */\n\nimport { WINDOW_TYPE } from 'cross-domain-utils/src';\n\nexport const ZOID = `zoid`;\n\nexport const POST_MESSAGE = {\n    DELEGATE:       `${ ZOID }_delegate`,\n    ALLOW_DELEGATE: `${ ZOID }_allow_delegate`\n};\n\nexport const PROP_TYPE = {\n    STRING:   `string`,\n    OBJECT:   `object`,\n    FUNCTION: `function`,\n    BOOLEAN:  `boolean`,\n    NUMBER:   `number`,\n    ARRAY:    `array`\n};\n\nexport const INITIAL_PROPS = {\n    RAW: 'raw',\n    UID: 'uid'\n};\n\nexport const WINDOW_REFERENCES = {\n    OPENER: `opener`,\n    TOP:    `top`,\n    PARENT: `parent`,\n    GLOBAL: `global`\n};\n\nexport const PROP_SERIALIZATION = {\n    JSON:   ('json' : 'json'),\n    DOTIFY: ('dotify' : 'dotify'),\n    BASE64: ('base64' : 'base64')\n};\n\nexport const CONTEXT = WINDOW_TYPE;\n\nexport const WILDCARD = '*';\n\nexport const DEFAULT_DIMENSIONS = {\n    WIDTH:  '300px',\n    HEIGHT: '150px'\n};\n\nexport const EVENT = {\n    RENDER:   'zoid-render',\n    RENDERED: 'zoid-rendered',\n    DISPLAY:  'zoid-display',\n    ERROR:    'zoid-error',\n    CLOSE:    'zoid-close',\n    PROPS:    'zoid-props'\n};\n","/* @flow */\n\nimport { getDomain, isSameDomain, type CrossDomainWindowType } from 'cross-domain-utils/src';\n\nimport type { Component } from '../component';\nimport type { PropsType, MixedPropDefinitionType } from '../component/props';\n\nimport type { ChildHelpers } from './index';\n\nexport function normalizeChildProp<T, P>(component : Component<P>, props : (PropsType<P>), key : string, value : T, helpers : ChildHelpers<P>) : ?T  {\n\n    // $FlowFixMe\n    const prop : MixedPropDefinitionType<P> = component.getPropDefinition(key);\n\n    if (!prop) {\n        return value;\n    }\n\n    if (typeof prop.childDecorate === 'function') {\n        return prop.childDecorate({ value, ...helpers });\n    }\n\n    return value;\n}\n\n// eslint-disable-next-line max-params\nexport function normalizeChildProps<P>(parentComponentWindow : CrossDomainWindowType, component : Component<P>, props : (PropsType<P>), origin : string, helpers : ChildHelpers<P>, isUpdate : boolean = false) : (PropsType<P>) {\n\n    const result = {};\n\n    // $FlowFixMe\n    for (const key of Object.keys(props)) {\n        const prop = component.getPropDefinition(key);\n\n        if (prop && prop.sameDomain && (origin !== getDomain(window) || !isSameDomain(parentComponentWindow))) {\n            continue;\n        }\n\n        const value = normalizeChildProp(component, props, key, props[key], helpers);\n\n        result[key] = value;\n        if (prop && prop.alias && !result[prop.alias]) {\n            result[prop.alias] = value;\n        }\n    }\n\n    if (!isUpdate) {\n        for (const key of component.getPropNames()) {\n            if (!props.hasOwnProperty(key)) {\n                result[key] = normalizeChildProp(component, props, key, props[key], helpers);\n            }\n        }\n    }\n\n    // $FlowFixMe\n    return result;\n}\n","/* @flow */\n\nimport { inlineMemoize, stringifyError, base64decode } from 'belter/src';\n\nimport { ZOID } from '../constants';\nimport type { ChildPayload } from '../parent';\n\nfunction parseChildWindowName(windowName : string) : ChildPayload {\n    return inlineMemoize(parseChildWindowName, () => {\n        if (!windowName) {\n            throw new Error(`No window name`);\n        }\n    \n        const [ , zoidcomp, name, encodedPayload ] = windowName.split('__');\n    \n        if (zoidcomp !== ZOID) {\n            throw new Error(`Window not rendered by zoid - got ${ zoidcomp }`);\n        }\n    \n        if (!name) {\n            throw new Error(`Expected component name`);\n        }\n    \n        if (!encodedPayload) {\n            throw new Error(`Expected encoded payload`);\n        }\n    \n        try {\n            return JSON.parse(base64decode(encodedPayload));\n        } catch (err) {\n            throw new Error(`Can not decode window name payload: ${ encodedPayload }: ${ stringifyError(err) }`);\n        }\n    }, [ windowName ]);\n}\n\nexport function getChildPayload() : ?ChildPayload {\n    try {\n        return parseChildWindowName(window.name);\n    } catch (err) {\n        // pass\n    }\n}\n","/* @flow */\n/* eslint max-lines: 0 */\n\nimport { isSameDomain, matchDomain, getDomain, getOpener,\n    getNthParentFromTop, getAncestor, getAllFramesInWindow,\n    type CrossDomainWindowType, onCloseWindow } from 'cross-domain-utils/src';\nimport { markWindowKnown, deserializeMessage } from 'post-robot/src';\nimport { ZalgoPromise } from 'zalgo-promise/src';\nimport { extend, waitForDocumentBody, onResize, getElementSafe, assertExists } from 'belter/src';\n\nimport { globalFor } from '../lib';\nimport { CONTEXT, INITIAL_PROPS, WINDOW_REFERENCES } from '../constants';\nimport type { Component } from '../component';\nimport type { PropsType } from '../component/props';\nimport type { WindowRef, PropRef, ParentExportsType } from '../parent';\n\nimport { normalizeChildProps } from './props';\nimport { getChildPayload } from './window';\n\nexport * from './window';\n\nexport type ChildExportsType<P> = {|\n    updateProps : (props : (PropsType<P>)) => ZalgoPromise<void>,\n    close : () => ZalgoPromise<void>\n|};\n\nexport type ChildHelpers<P> = {|\n    close : () => ZalgoPromise<void>,\n    focus : () => ZalgoPromise<void>,\n    resize : ({ width : ?number, height : ?number }) => ZalgoPromise<void>,\n    onError : (mixed) => ZalgoPromise<void>,\n    onProps : ((PropsType<P>) => void) => void,\n    getParent : () => CrossDomainWindowType\n|};\n\n/*  Child Component\n    ---------------\n\n    This is the portion of code which runs inside the frame or popup window containing the component's implementation.\n\n    When the component author calls myComponent.attach(), it creates a new instance of ChildComponent, which is then\n    responsible for managing the state and messaging back up to the parent, and providing props for the component to\n    utilize.\n*/\n\nexport class ChildComponent<P> {\n\n    component : Component<P>\n    props : PropsType<P>\n    context : string\n    parent : ParentExportsType<P>\n    parentComponentWindow : CrossDomainWindowType\n\n    onPropHandlers : Array<(PropsType<P>) => void> // eslint-disable-line flowtype/no-mutable-array\n    autoResize : { width : boolean, height : boolean, element? : string }\n\n    constructor(component : Component<P>) {\n        ZalgoPromise.try(() => {\n            this.component = component;\n            this.onPropHandlers = [];\n            \n            const childPayload = getChildPayload();\n\n            if (!childPayload) {\n                throw new Error(`No child payload found`);\n            }\n\n            if (childPayload.version !== __ZOID__.__VERSION__) {\n                throw new Error(`Parent window has zoid version ${ childPayload.version }, child window has version ${ __ZOID__.__VERSION__ }`);\n            }\n\n            const { parent, domain, exports, context, props } = childPayload;\n\n            this.context = context;\n            this.parentComponentWindow = this.getParentComponentWindow(parent);\n            this.parent = deserializeMessage(this.parentComponentWindow, domain, exports);\n\n            this.checkParentDomain(domain);\n\n            const initialProps = this.getPropsByRef(this.parentComponentWindow, domain, props);\n            this.setProps(initialProps, domain);\n            markWindowKnown(this.parentComponentWindow);\n            \n            this.watchForClose();\n\n            return this.parent.init(this.buildExports());\n\n        }).then(() => {\n            return this.watchForResize();\n\n        }).catch(err => {\n            this.onError(err);\n        });\n    }\n\n    getHelpers() : ChildHelpers<P> {\n        return {\n            focus:         () => this.focus(),\n            close:         () => this.close(),\n            resize:        ({ width, height }) => this.resize({ width, height }),\n            onError:       (err) => this.onError(err),\n            onProps:       (handler) => this.onProps(handler),\n            getParent:     () => this.parentComponentWindow\n        };\n    }\n\n    checkParentDomain(domain : string) {\n        if (!matchDomain(this.component.allowedParentDomains, domain)) {\n            throw new Error(`Can not be rendered by domain: ${ domain }`);\n        }\n    }\n\n    onProps(handler : Function) {\n        this.onPropHandlers.push(handler);\n    }\n\n    getPropsByRef(parentComponentWindow : CrossDomainWindowType, domain : string, { type, value, uid } : PropRef) : (PropsType<P>) {\n        let props;\n\n        if (type === INITIAL_PROPS.RAW) {\n            props = value;\n        } else if (type === INITIAL_PROPS.UID) {\n            if (!isSameDomain(parentComponentWindow)) {\n                throw new Error(`Parent component window is on a different domain - expected ${ getDomain() } - can not retrieve props`);\n            }\n\n            const global = globalFor(parentComponentWindow);\n            props = assertExists('props', global && global.props[uid]);\n        }\n\n        if (!props) {\n            throw new Error(`Could not find props`);\n        }\n\n        return deserializeMessage(parentComponentWindow, domain, props);\n    }\n\n    getParentComponentWindow(ref : WindowRef) : CrossDomainWindowType {\n        const { type } = ref;\n    \n        if (type === WINDOW_REFERENCES.OPENER) {\n            return assertExists('opener', getOpener(window));\n    \n        } else if (type === WINDOW_REFERENCES.PARENT) {\n            // $FlowFixMe\n            const distance = ref.distance;\n            return assertExists('parent', getNthParentFromTop(window, distance));\n\n        } else if (type === WINDOW_REFERENCES.GLOBAL) {\n            // $FlowFixMe\n            const { uid } = ref;\n            const ancestor = getAncestor(window);\n\n            if (!ancestor) {\n                throw new Error(`Can not find ancestor window`);\n            }\n\n            for (const frame of getAllFramesInWindow(ancestor)) {\n                if (isSameDomain(frame)) {\n                    const global = globalFor(frame);\n\n                    if (global && global.windows && global.windows[uid]) {\n                        return global.windows[uid];\n                    }\n                }\n            }\n        }\n    \n        throw new Error(`Unable to find ${ type } parent component window`);\n    }\n\n    getProps() : PropsType<P> {\n        // $FlowFixMe\n        this.props = this.props || {};\n        return this.props;\n    }\n\n\n    setProps(props : PropsType<P>, origin : string, isUpdate : boolean = false) {\n        const helpers = this.getHelpers();\n        const existingProps = this.getProps();\n        const normalizedProps = normalizeChildProps(this.parentComponentWindow, this.component, props, origin, helpers, isUpdate);\n\n        extend(existingProps, normalizedProps);\n\n        for (const handler of this.onPropHandlers) {\n            handler.call(this, existingProps);\n        }\n    }\n\n    watchForClose() {\n        window.addEventListener('beforeunload', () => {\n            this.parent.checkClose.fireAndForget();\n        });\n\n        window.addEventListener('unload', () => {\n            this.parent.checkClose.fireAndForget();\n        });\n\n        onCloseWindow(this.parentComponentWindow, () => {\n            this.destroy();\n        });\n    }\n\n    getAutoResize() : { width : boolean, height : boolean, element : ?HTMLElement } {\n        let { width = false, height = false, element = 'body' } = this.autoResize || this.component.autoResize || {};\n        element = getElementSafe(element);\n        return { width, height, element };\n    }\n\n    watchForResize() : ?ZalgoPromise<void> {\n        return waitForDocumentBody().then(() => {\n            const { width, height, element } = this.getAutoResize();\n\n            if (!element || (!width && !height) || this.context === CONTEXT.POPUP) {\n                return;\n            }\n\n            onResize(element, ({ width: newWidth, height: newHeight }) => {\n                this.resize({\n                    width:  width ? newWidth : undefined,\n                    height: height ? newHeight : undefined\n                });\n            }, { width, height });\n        });\n    }\n\n    buildExports() : ChildExportsType<P> {\n\n        const self = this;\n\n        return {\n            updateProps(props : (PropsType<P>)) : ZalgoPromise<void> {\n                return ZalgoPromise.try(() => self.setProps(props, this.__origin__, true));\n            },\n\n            close() : ZalgoPromise<void> {\n                return ZalgoPromise.try(() => self.destroy());\n            }\n        };\n    }\n\n    resize({ width, height } : { width : ?number, height : ?number }) : ZalgoPromise<void> {\n        return this.parent.resize.fireAndForget({ width, height });\n    }\n\n    close() : ZalgoPromise<void> {\n        return this.parent.close();\n    }\n    \n    destroy() : ZalgoPromise<void> {\n        return ZalgoPromise.try(() => {\n            window.close();\n        });\n    }\n\n    focus() : ZalgoPromise<void> {\n        return ZalgoPromise.try(() => {\n            window.focus();\n        });\n    }\n\n    onError(err : mixed) : ZalgoPromise<void> {\n        return ZalgoPromise.try(() => {\n            if (this.parent && this.parent.onError) {\n                return this.parent.onError(err);\n            } else {\n                throw err;\n            }\n        });\n    }\n}\n","/* @flow */\n\nimport { ZalgoPromise } from 'zalgo-promise/src';\nimport { cleanUpWindow, ProxyWindow, toProxyWindow } from 'post-robot/src';\nimport { assertSameDomain } from 'cross-domain-utils/src';\nimport { iframe, popup, destroyElement, normalizeDimension, watchElementForClose,\n    awaitFrameWindow, uniqueID } from 'belter/src';\n\nimport { CONTEXT } from '../constants';\nimport { getProxyElement, type ProxyElement } from '../lib';\n\n\nexport type ContextDriverType = {|\n    openOnClick : boolean,\n    openFrame? : () => ProxyElement<HTMLIFrameElement>,\n    open : (?ProxyElement<HTMLIFrameElement>) => ZalgoPromise<ProxyWindow>,\n    openPrerenderFrame? : () => ProxyElement<HTMLIFrameElement>,\n    openPrerender : (ProxyWindow, ?ProxyElement<HTMLIFrameElement>) => ZalgoPromise<ProxyWindow>,\n    resize? : ({ width : ?number, height : ?number }) => void,\n    delegate : $ReadOnlyArray<string>\n|};\n\nexport const RENDER_DRIVERS : { [string] : ContextDriverType } = {};\n\nRENDER_DRIVERS[CONTEXT.IFRAME] = {\n    openOnClick: false,\n\n    openFrame() : ProxyElement<HTMLIFrameElement> {\n        return getProxyElement(iframe({\n            attributes: {\n                title: this.component.name,\n                ...this.component.attributes.iframe\n            }\n        }));\n    },\n\n    open(proxyFrame : ?ProxyElement<HTMLIFrameElement>) : ZalgoPromise<ProxyWindow> {\n        if (!proxyFrame) {\n            throw new Error(`Expected proxy frame to be passed`);\n        }\n\n        return proxyFrame.getElement().then(frame => {\n            return awaitFrameWindow(frame).then(win => {\n\n                const frameWatcher = watchElementForClose(frame, () => this.close());\n                this.clean.register(() => frameWatcher.cancel());\n                this.clean.register(() => destroyElement(frame));\n                this.clean.register(() => cleanUpWindow(win));\n\n                return toProxyWindow(win);\n            });\n        });\n    },\n\n    openPrerenderFrame() : ProxyElement<HTMLIFrameElement> {\n        return getProxyElement(iframe({\n            attributes: {\n                name:  `__zoid_prerender_frame__${ this.component.name }_${ uniqueID() }__`,\n                title: `prerender__${ this.component.name }`,\n                ...this.component.attributes.iframe\n            }\n        }));\n    },\n\n    openPrerender(proxyWin : ProxyWindow, proxyPrerenderFrame : ?ProxyElement<HTMLIFrameElement>) : ZalgoPromise<ProxyWindow> {\n        if (!proxyPrerenderFrame) {\n            throw new Error(`Expected proxy frame to be passed`);\n        }\n        \n        return proxyPrerenderFrame.getElement().then(prerenderFrame => {\n            this.clean.register(() => destroyElement(prerenderFrame));\n\n            return awaitFrameWindow(prerenderFrame).then(prerenderFrameWindow => {\n                return assertSameDomain(prerenderFrameWindow);\n            }).then(win => {\n                return toProxyWindow(win);\n            });\n        });\n    },\n\n    delegate: [\n        'getProxyContainer',\n        'renderContainer',\n        'openFrame',\n        'openPrerenderFrame',\n        'prerender',\n        'open',\n        'openPrerender'\n    ],\n\n    resize({ width, height } : { width : ?number, height : ?number }) {\n        if (this.proxyContainer) {\n            this.proxyContainer.resize({ width, height });\n        }\n    }\n};\n\nif (__ZOID__.__POPUP_SUPPORT__) {\n    RENDER_DRIVERS[CONTEXT.POPUP] = {\n        openOnClick: true,\n\n        open() : ZalgoPromise<ProxyWindow> {\n            return ZalgoPromise.try(() => {\n                let { width, height } = this.component.dimensions;\n\n                width = normalizeDimension(width, window.outerWidth);\n                height = normalizeDimension(height, window.outerWidth);\n\n                const win = popup('', {\n                    width,\n                    height,\n                    ...this.component.attributes.popup\n                });\n\n                this.clean.register(() => {\n                    win.close();\n                    cleanUpWindow(win);\n                });\n\n                return toProxyWindow(win);\n            });\n        },\n\n        openPrerender(proxyWin : ProxyWindow) : ZalgoPromise<ProxyWindow> {\n            return ZalgoPromise.try(() => {\n                return proxyWin;\n            });\n        },\n\n        delegate: [\n            'getProxyContainer',\n            'renderContainer',\n            'setProxyWin'\n        ]\n    };\n}\n","/* @flow */\n\nimport { ZalgoPromise } from 'zalgo-promise/src';\nimport { dotify, isDefined, extend } from 'belter/src';\n\nimport type { Component } from '../component';\nimport type { BuiltInPropsDefinitionType, PropsInputType, PropsType, MixedPropDefinitionType } from '../component/props';\nimport { PROP_SERIALIZATION } from '../constants';\n\nimport type { ParentHelpers } from './index';\n\n/*  Normalize Props\n    ---------------\n\n    Turn props into normalized values, using defaults, function options, etc.\n*/\n\nexport function extendProps<P>(component : Component<P>, props : PropsType<P>, inputProps : PropsInputType<P>, helpers : ParentHelpers<P>, isUpdate : boolean = false) { // eslint-disable-line complexity\n\n    // $FlowFixMe\n    inputProps = inputProps || {};\n    extend(props, inputProps);\n\n    const propNames = isUpdate ? [] : [ ...component.getPropNames() ];\n\n    // $FlowFixMe\n    for (const key of Object.keys(inputProps)) {\n        if (propNames.indexOf(key) === -1) {\n            propNames.push(key);\n        }\n    }\n\n    const aliases = [];\n\n    const { state, close, focus, onError } = helpers;\n\n    for (const key of propNames) {\n        const propDef = component.getPropDefinition(key);\n        // $FlowFixMe\n        let value = inputProps[key];\n\n        if (!propDef) {\n            continue;\n        }\n\n        const alias = propDef.alias;\n        if (alias) {\n            if (!isDefined(value) && isDefined(inputProps[alias])) {\n                value = inputProps[alias];\n            }\n            aliases.push(alias);\n        }\n\n        if (propDef.value) {\n            value = propDef.value({ props, state, close, focus, onError });\n        }\n\n        if (!isDefined(value) && propDef.default) {\n            value = propDef.default({ props, state, close, focus, onError });\n        }\n\n        if (isDefined(value)) {\n            if (propDef.type === 'array' ? !Array.isArray(value) : (typeof value !== propDef.type)) {\n                throw new TypeError(`Prop is not of type ${ propDef.type }: ${ key }`);\n            }\n        }\n        \n        // $FlowFixMe\n        props[key] = value;\n    }\n\n    for (const alias of aliases) {\n        // $FlowFixMe\n        delete props[alias];\n    }\n\n    // $FlowFixMe\n    for (const key of Object.keys(props)) {\n        const propDef = component.getPropDefinition(key);\n        // $FlowFixMe\n        const value = props[key];\n\n        if (!propDef) {\n            continue;\n        }\n\n        if (isDefined(value) && propDef.validate) {\n            // $FlowFixMe\n            propDef.validate({ value, props });\n        }\n\n        if (isDefined(value) && propDef.decorate) {\n            // $FlowFixMe\n            props[key] = propDef.decorate({ value, props, state, close, focus, onError });\n        }\n    }\n\n    for (const key of component.getPropNames()) {\n        const propDef = component.getPropDefinition(key);\n        if (propDef.required !== false && !isDefined(props[key])) {\n            throw new Error(`Expected prop \"${ key }\" to be defined`);\n        }\n    }\n}\n\n// $FlowFixMe\nfunction getQueryParam<T, P>(prop : MixedPropDefinitionType<P>, key : string, value : T) : ZalgoPromise<string> {\n    return ZalgoPromise.try(() => {\n        if (typeof prop.queryParam === 'function') {\n            return prop.queryParam({ value });\n        } else if (typeof prop.queryParam === 'string') {\n            return prop.queryParam;\n        } else {\n            return key;\n        }\n    });\n}\n\n// $FlowFixMe\nfunction getQueryValue<T, P>(prop : MixedPropDefinitionType<P>, key : string, value : T) : ZalgoPromise<mixed> {\n    return ZalgoPromise.try(() => {\n        if (typeof prop.queryValue === 'function' && isDefined(value)) {\n            return prop.queryValue({ value });\n        } else {\n            return value;\n        }\n    });\n}\n\nexport function propsToQuery<P>(propsDef : BuiltInPropsDefinitionType<P>, props : (PropsType<P>)) : ZalgoPromise<{ [string] : string }> {\n\n    const params = {};\n\n    return ZalgoPromise.all(Object.keys(props).map(key => {\n\n        const prop = propsDef[key];\n\n        if (!prop) {\n            return; // eslint-disable-line array-callback-return\n        }\n\n        return ZalgoPromise.resolve().then(() => {\n\n            const value = props[key];\n\n            if (!value) {\n                return;\n            }\n\n            if (!prop.queryParam) {\n                return;\n            }\n\n            return value;\n\n        }).then(value => {\n\n            if (value === null || typeof value === 'undefined') {\n                return;\n            }\n\n            return ZalgoPromise.all([\n                // $FlowFixMe\n                getQueryParam(prop, key, value),\n                // $FlowFixMe\n                getQueryValue(prop, key, value)\n            ]).then(([ queryParam, queryValue ]) => {\n\n                let result;\n\n                if (typeof queryValue === 'boolean') {\n                    result = queryValue.toString();\n                } else if (typeof queryValue === 'string') {\n                    result = queryValue.toString();\n                } else if (typeof queryValue === 'object' && queryValue !== null) {\n\n                    if (prop.serialization === PROP_SERIALIZATION.JSON) {\n                        result = JSON.stringify(queryValue);\n                    } else if (prop.serialization === PROP_SERIALIZATION.BASE64) {\n                        result = btoa(JSON.stringify(queryValue));\n                    } else if (prop.serialization === PROP_SERIALIZATION.DOTIFY || !prop.serialization) {\n                        result = dotify(queryValue, key);\n\n                        for (const dotkey of Object.keys(result)) {\n                            params[dotkey] = result[dotkey];\n                        }\n\n                        return;\n                    }\n\n                } else if (typeof queryValue === 'number') {\n                    result = queryValue.toString();\n                }\n\n                params[queryParam] = result;\n            });\n        });\n\n    })).then(() => {\n        return params;\n    });\n}\n","/* @flow */\n\nimport { type CrossDomainWindowType } from 'cross-domain-utils/src';\nimport { noop } from 'belter/src';\n\nimport { windowStore } from './global';\n\nexport function cleanUpWindow(win : CrossDomainWindowType) {\n    const requestPromises = windowStore('requestPromises');\n    for (const promise of requestPromises.get(win, [])) {\n        promise.reject(new Error(`Window cleaned up before response`)).catch(noop);\n    }\n}\n","/* @flow */\n/* eslint max-lines: 0 */\n\nimport { send, bridge, serializeMessage, ProxyWindow, toProxyWindow } from 'post-robot/src';\nimport { isSameDomain, matchDomain, getDomainFromUrl, isBlankDomain,\n    onCloseWindow, getDomain, type CrossDomainWindowType,\n    getDistanceFromTop, normalizeMockUrl, assertSameDomain } from 'cross-domain-utils/src';\nimport { ZalgoPromise } from 'zalgo-promise/src';\nimport { addEventListener, uniqueID, elementReady, writeElementToWindow, eventEmitter, type EventEmitterType,\n    noop, onResize, extendUrl, appendChild, cleanup, type CleanupType, base64encode,\n    once, stringifyError, destroyElement, getElementSafe } from 'belter/src';\n\nimport { ZOID, POST_MESSAGE, CONTEXT, EVENT,\n    INITIAL_PROPS, WINDOW_REFERENCES } from '../constants';\nimport type { Component, onErrorPropType } from '../component';\nimport { globalFor, getProxyElement, type ProxyElement } from '../lib';\nimport type { PropsInputType, PropsType } from '../component/props';\nimport type { ChildExportsType } from '../child';\nimport type { DimensionsType } from '../types';\n\nimport { RENDER_DRIVERS, type ContextDriverType } from './drivers';\nimport { propsToQuery, extendProps } from './props';\n\nexport type RenderOptionsType<P> = {|\n    uid : string,\n    props : PropsInputType<P>,\n    tag : string,\n    context : string,\n    close : (?string) => ZalgoPromise<void>,\n    focus : () => ZalgoPromise<ProxyWindow>,\n    doc : Document,\n    container? : HTMLElement,\n    dimensions : DimensionsType,\n    state : Object,\n    event : EventEmitterType,\n    frame : ?HTMLIFrameElement,\n    prerenderFrame : ?HTMLIFrameElement\n|};\n\nexport type ParentExportsType<P> = {|\n    init : (ChildExportsType<P>) => ZalgoPromise<void>,\n    close : () => ZalgoPromise<void>,\n    checkClose : () => ZalgoPromise<void>,\n    resize : ({ width? : ?number, height? : ?number }) => ZalgoPromise<void>,\n    onError : (mixed) => ZalgoPromise<void>\n|};\n\nexport type PropRef =\n    {| type : typeof INITIAL_PROPS.RAW, uid? : string, value? : string |};\n\nexport type WindowRef =\n    {| type : typeof WINDOW_REFERENCES.OPENER |} |\n    {| type : typeof WINDOW_REFERENCES.PARENT, distance : number |} |\n    {| type : typeof WINDOW_REFERENCES.GLOBAL, uid : string |};\n\nexport type ChildPayload = {|\n    uid : string,\n    tag : string,\n    version : string,\n    context : $Values<typeof CONTEXT>,\n    domain : string,\n    parent : WindowRef,\n    props : PropRef,\n    exports : string\n|};\n\nexport type StateType = Object;\n\nexport type ParentHelpers<P> = {|\n    state : StateType,\n    close : () => ZalgoPromise<void>,\n    focus : () => ZalgoPromise<void>,\n    resize : ({ width : ?number, height : ?number }) => ZalgoPromise<void>,\n    onError : (mixed) => ZalgoPromise<void>,\n    updateProps : PropsInputType<P> => ZalgoPromise<void>,\n    event : EventEmitterType\n|};\n\nexport class ParentComponent<P> {\n\n    component : Component<P>\n    driver : ContextDriverType\n    clean : CleanupType\n    event : EventEmitterType\n\n    initPromise : ZalgoPromise<void>\n    handledErrors : Array<mixed> // eslint-disable-line flowtype/no-mutable-array\n    \n    props : PropsType<P>\n    state : StateType\n    child : ?ChildExportsType<P>\n\n    proxyWin : ?ProxyWindow\n    proxyContainer : ?ProxyElement<HTMLElement>\n\n    constructor(component : Component<P>, props : PropsInputType<P>) {\n        this.initPromise = new ZalgoPromise();\n        this.handledErrors = [];\n\n        // $FlowFixMe\n        this.props = {};\n\n        this.clean = cleanup(this);\n        this.state = {};\n\n        this.component = component;\n\n        this.setupEvents(props.onError);\n        this.setProps(props);\n        this.component.registerActiveComponent(this);\n        this.clean.register(() => this.component.destroyActiveComponent(this));\n        this.watchForUnload();\n    }\n\n    setupEvents(onError : ?onErrorPropType) {\n        this.event = eventEmitter();\n        \n        this.event.on(EVENT.RENDER,   () => this.props.onRender());\n        this.event.on(EVENT.DISPLAY,  () => this.props.onDisplay());\n        this.event.on(EVENT.RENDERED, () => this.props.onRendered());\n        this.event.on(EVENT.CLOSE,    () => this.props.onClose());\n        this.event.on(EVENT.PROPS,    (props) => this.props.onProps(props));\n\n        this.event.on(EVENT.ERROR, err => {\n            if (this.props && this.props.onError) {\n                return this.props.onError(err);\n            } else if (onError) {\n                return onError(err);\n            } else {\n                return this.initPromise.reject(err).then(() => {\n                    setTimeout(() => {\n                        throw err;\n                    }, 1);\n                });\n            }\n        });\n    }\n\n    render(target : CrossDomainWindowType, container : string | HTMLElement, context : $Values<typeof CONTEXT>) : ZalgoPromise<void> {\n        return ZalgoPromise.try(() => {\n            this.component.log(`render`);\n\n            this.driver = RENDER_DRIVERS[context];\n            const uid = `${ ZOID }-${ this.component.tag }-${ uniqueID() }`;\n            const domain = this.getDomain();\n            const initialDomain = this.getInitialDomain();\n            \n            this.component.checkAllowRender(target, domain, container);\n\n            if (target !== window) {\n                this.delegate(context, target);\n            }\n\n            const tasks = {};\n\n            tasks.init = this.initPromise;\n            tasks.buildUrl = this.buildUrl();\n            tasks.onRender = this.event.trigger(EVENT.RENDER);\n\n            tasks.getProxyContainer = this.getProxyContainer(container);\n\n            tasks.openFrame = this.openFrame();\n            tasks.openPrerenderFrame = this.openPrerenderFrame();\n\n            tasks.renderContainer = ZalgoPromise.all([ tasks.getProxyContainer, tasks.openFrame, tasks.openPrerenderFrame ]).then(([ proxyContainer, proxyFrame, proxyPrerenderFrame ]) => {\n                return this.renderContainer(proxyContainer, { context, uid, proxyFrame, proxyPrerenderFrame });\n            });\n\n            tasks.open = this.driver.openOnClick\n                ? this.open()\n                : tasks.openFrame.then(proxyFrame => this.open(proxyFrame));\n\n            tasks.openPrerender = ZalgoPromise.all([ tasks.open, tasks.openPrerenderFrame ]).then(([ proxyWin, proxyPrerenderFrame ]) => {\n                return this.openPrerender(proxyWin, proxyPrerenderFrame);\n            });\n\n            tasks.setState = ZalgoPromise.all([\n                tasks.open.then(proxyWin => {\n                    this.proxyWin = proxyWin;\n                    return this.setProxyWin(proxyWin);\n                }),\n                tasks.renderContainer.then(proxyContainer => {\n                    this.proxyContainer = proxyContainer;\n                })\n            ]);\n            \n            tasks.prerender = ZalgoPromise.all([ tasks.openPrerender, tasks.setState ]).then(([ proxyPrerenderWin ]) => {\n                return this.prerender(proxyPrerenderWin, { context, uid });\n            });\n\n            tasks.loadUrl = ZalgoPromise.all([ tasks.open, tasks.buildUrl, tasks.setWindowName, tasks.prerender ]).then(([ proxyWin, url ]) => {\n                return proxyWin.setLocation(url);\n            });\n\n            tasks.buildWindowName = tasks.open.then(proxyWin => {\n                return this.buildWindowName({ proxyWin, initialDomain, domain, target, context, uid });\n            });\n\n            tasks.setWindowName =  ZalgoPromise.all([ tasks.open, tasks.buildWindowName ]).then(([ proxyWin, windowName ]) => {\n                return proxyWin.setName(windowName);\n            });\n\n            tasks.watchForClose = tasks.open.then(proxyWin => {\n                return this.watchForClose(proxyWin);\n            });\n\n            tasks.onDisplay = tasks.prerender.then(() => {\n                return this.event.trigger(EVENT.DISPLAY);\n            });\n\n            tasks.openBridge = tasks.open.then(proxyWin => {\n                return this.openBridge(proxyWin, initialDomain, context);\n            });\n\n            tasks.runTimeout = tasks.loadUrl.then(() => {\n                return this.runTimeout();\n            });\n\n            tasks.onRender = tasks.init.then(() => {\n                return this.event.trigger(EVENT.RENDERED);\n            });\n\n            return ZalgoPromise.hash(tasks);\n            \n        }).catch(err => {\n            return ZalgoPromise.all([\n                this.onError(err),\n                this.destroy(err)\n            ]).then(() => {\n                throw err;\n            });\n        }).then(noop);\n    }\n\n    getProxyContainer(container : string | HTMLElement) : ZalgoPromise<ProxyElement<HTMLElement>> {\n        return ZalgoPromise.try(() => {\n            return elementReady(container);\n        }).then(containerElement => {\n            return getProxyElement(containerElement);\n        });\n    }\n\n    buildWindowName({ proxyWin, initialDomain, domain, target, uid, context } : { proxyWin : ProxyWindow, initialDomain : string, domain : string | RegExp, target : CrossDomainWindowType, context : $Values<typeof CONTEXT>, uid : string }) : string {\n        const childPayload = this.buildChildPayload({ proxyWin, initialDomain, domain, target, context, uid });\n        return `__${ ZOID }__${ this.component.name }__${ base64encode(JSON.stringify(childPayload)) }__`;\n    }\n\n    getPropsRef(proxyWin : ProxyWindow, target : CrossDomainWindowType, domain : string | RegExp, uid : string) : PropRef {\n        const value = serializeMessage(proxyWin, domain, this.getPropsForChild(domain));\n\n        const propRef = isSameDomain(target)\n            ? { type: INITIAL_PROPS.RAW, value }\n            : { type: INITIAL_PROPS.UID, uid };\n\n        if (propRef.type === INITIAL_PROPS.UID) {\n            const global = globalFor(window);\n            global.props = global.props || {};\n            global.props[uid] = value;\n\n            this.clean.register(() => {\n                delete global.props[uid];\n            });\n        }\n\n        return propRef;\n    }\n\n    buildChildPayload({ proxyWin, initialDomain, domain, target = window, context, uid } : { proxyWin : ProxyWindow, initialDomain : string, domain : string | RegExp, target : CrossDomainWindowType, context : $Values<typeof CONTEXT>, uid : string } = {}) : ChildPayload {\n        return {\n            uid,\n            context,\n            version: __ZOID__.__VERSION__,\n            domain:  getDomain(window),\n            tag:     this.component.tag,\n            parent:  this.getWindowRef(target, initialDomain, uid, context),\n            props:   this.getPropsRef(proxyWin, target, domain, uid),\n            exports: serializeMessage(proxyWin, domain, this.buildParentExports(proxyWin))\n        };\n    }\n\n    setProxyWin(proxyWin : ProxyWindow) : ZalgoPromise<void> {\n        return ZalgoPromise.try(() => {\n            this.proxyWin = proxyWin;\n        });\n    }\n\n    getHelpers() : ParentHelpers<P> {\n        return {\n            state:       this.state,\n            event:       this.event,\n            close:       () => this.close(),\n            focus:       () => this.focus(),\n            resize:      ({ width, height }) => this.resize({ width, height }),\n            onError:     (err) => this.onError(err),\n            updateProps: (props) => this.updateProps(props)\n        };\n    }\n\n    setProps(props : PropsInputType<P>, isUpdate : boolean = false) {\n        if (this.component.validate) {\n            this.component.validate({ props });\n        }\n\n        const helpers = this.getHelpers();\n        extendProps(this.component, this.props, props, helpers, isUpdate);\n    }\n\n    buildUrl() : ZalgoPromise<string> {\n        return propsToQuery({ ...this.component.props, ...this.component.builtinProps }, this.props).then(query => {\n            return extendUrl(normalizeMockUrl(this.component.getUrl(this.props)), { query });\n        });\n    }\n\n    getDomain() : string | RegExp {\n        return this.component.getDomain(this.props);\n    }\n\n    getInitialDomain() : string {\n        return this.component.getInitialDomain(this.props);\n    }\n\n    getPropsForChild(domain : string | RegExp) : (PropsType<P>) {\n        const result = {};\n\n        for (const key of Object.keys(this.props)) {\n            const prop = this.component.getPropDefinition(key);\n\n            if (prop && prop.sendToChild === false) {\n                continue;\n            }\n\n            if (prop && prop.sameDomain && !matchDomain(domain, getDomain(window))) {\n                continue;\n            }\n\n            // $FlowFixMe\n            result[key] = this.props[key];\n        }\n\n        // $FlowFixMe\n        return result;\n    }\n\n    updateProps(props : PropsInputType<P>) : ZalgoPromise<void> {\n        this.setProps(props, true);\n\n        return this.initPromise.then(() => {\n            if (this.child) {\n                return this.child.updateProps(this.getPropsForChild(this.getDomain()));\n            }\n        });\n    }\n\n    openFrame() : ZalgoPromise<?ProxyElement<HTMLIFrameElement>> {\n        return ZalgoPromise.try(() => {\n            if (this.driver.openFrame) {\n                return this.driver.openFrame.call(this);\n            }\n        });\n    }\n\n    openPrerenderFrame() : ZalgoPromise<?ProxyElement<HTMLIFrameElement>> {\n        return ZalgoPromise.try(() => {\n            if (this.driver.openPrerenderFrame) {\n                return this.driver.openPrerenderFrame.call(this);\n            }\n        });\n    }\n    \n    open(proxyFrame : ?ProxyElement<HTMLIFrameElement>) : ZalgoPromise<ProxyWindow> {\n        return ZalgoPromise.try(() => {\n            this.component.log(`open`);\n\n            const windowProp = this.props.window;\n\n            if (windowProp) {\n                this.clean.register(() => windowProp.close());\n                return toProxyWindow(windowProp);\n            }\n\n            return this.driver.open.call(this, proxyFrame);\n\n        }).then(proxyWin => {\n            this.proxyWin = proxyWin;\n            return proxyWin;\n        });\n    }\n\n    openPrerender(proxyWin : ProxyWindow, proxyPrerenderFrame : ?ProxyElement<HTMLIFrameElement>) : ZalgoPromise<ProxyWindow> {\n        return ZalgoPromise.try(() => {\n            return this.driver.openPrerender.call(this, proxyWin, proxyPrerenderFrame);\n        });\n    }\n\n    focus() : ZalgoPromise<void> {\n        return ZalgoPromise.try(() => {\n            if (this.proxyWin) {\n                return this.proxyWin.focus().then(noop);\n            }\n        });\n    }\n\n    delegate(context : $Values<typeof CONTEXT>, target : CrossDomainWindowType) {\n        this.component.log(`delegate`);\n\n        const props = {};\n        for (const propName of this.component.getPropNames()) {\n            if (this.component.getPropDefinition(propName).allowDelegate) {\n                props[propName] = this.props[propName];\n            }\n        }\n\n        const overridesPromise = send(target, `${ POST_MESSAGE.DELEGATE }_${ this.component.name }`, {\n            context,\n            props,\n            overrides: {\n                event:   this.event,\n                close:   () => this.close(),\n                onError: (err) => this.onError(err)\n            }\n\n        }).then(({ data }) => {\n            this.clean.register(data.destroy);\n            return data.overrides;\n\n        }).catch(err => {\n            throw new Error(`Unable to delegate rendering. Possibly the component is not loaded in the target window.\\n\\n${ stringifyError(err) }`);\n        });\n\n        for (const key of this.driver.delegate) {\n            // $FlowFixMe\n            this[key] = function overriddenFunction() : ZalgoPromise<mixed> {\n                return overridesPromise.then(overrides => {\n                    return overrides[key].apply(this, arguments);\n                });\n            };\n        }\n    }\n\n    getWindowRef(target : CrossDomainWindowType, domain : string, uid : string, context : $Values<typeof CONTEXT>) : WindowRef {\n        \n        if (domain === getDomain(window)) {\n            const global = globalFor(window);\n            global.windows = global.windows || {};\n            global.windows[uid] = window;\n            this.clean.register(() => {\n                delete global.windows[uid];\n            });\n    \n            return { type: WINDOW_REFERENCES.GLOBAL, uid };\n        }\n\n        if (context === CONTEXT.POPUP) {\n            return { type: WINDOW_REFERENCES.OPENER };\n        }\n\n        return { type: WINDOW_REFERENCES.PARENT, distance: getDistanceFromTop(window) };\n    }\n\n    watchForClose(proxyWin : ProxyWindow) : ZalgoPromise<void> {\n        return proxyWin.awaitWindow().then(win => {\n            const closeWindowListener = onCloseWindow(win, () => {\n                this.component.log(`detect_close_child`);\n                return this.close();\n            }, 2000);\n\n            this.clean.register(closeWindowListener.cancel);\n        });\n    }\n\n    watchForUnload() {\n        const unloadWindowListener = addEventListener(window, 'unload', once(() => {\n            this.component.log(`navigate_away`);\n            this.destroy(new Error(`Window navigated away`));\n        }));\n\n        this.clean.register(unloadWindowListener.cancel);\n    }\n\n    runTimeout() : ZalgoPromise<void> {\n        return ZalgoPromise.try(() => {\n            const timeout = this.props.timeout;\n\n            if (timeout) {\n                return this.initPromise.timeout(timeout, new Error(`Loading component timed out after ${ timeout } milliseconds`));\n            }\n        });\n    }\n\n    initChild(child : ChildExportsType<P>) : ZalgoPromise<void> {\n        return ZalgoPromise.try(() => {\n            this.clean.set('child', child);\n            this.initPromise.resolve();\n        });\n    }\n\n    buildParentExports(win : ProxyWindow) : ParentExportsType<P> {\n        const onError    = (err) => this.onError(err);\n        const init       = (child) => this.initChild(child);\n        const close      = () => this.close();\n        const checkClose = () => this.checkClose(win);\n        const resize     = ({ width, height }) => this.resize({ width, height });\n\n        init.onError = onError;\n\n        return { init, close, checkClose, resize, onError };\n    }\n\n    resize({ width, height } : { width? : ?number, height? : ?number }) : ZalgoPromise<void> {\n        return ZalgoPromise.try(() => {\n            if (this.driver.resize) {\n                return this.driver.resize.call(this, { width, height });\n            }\n        });\n    }\n\n    checkClose(win : ProxyWindow) : ZalgoPromise<void> {\n        return win.isClosed().then(closed => {\n            if (closed) {\n                return this.close();\n            }\n\n            return ZalgoPromise.delay(200)\n                .then(() => win.isClosed())\n                .then(secondClosed => {\n                    if (secondClosed) {\n                        return this.close();\n                    }\n                });\n        });\n    }\n\n    close() : ZalgoPromise<void> {\n        return ZalgoPromise.try(() => {\n            this.component.log(`close`);\n            return this.event.trigger(EVENT.CLOSE);\n\n        }).then(() => {\n            if (this.child) {\n                this.child.close.fireAndForget().catch(noop);\n            }\n\n            return this.destroy(new Error(`Window closed`), false);\n        });\n    }\n\n    prerender(proxyPrerenderWin : ProxyWindow, { context, uid } : { context : $Values<typeof CONTEXT>, uid : string }) : ZalgoPromise<void> {\n        return ZalgoPromise.try(() => {\n            const prerenderTemplate = this.component.prerenderTemplate;\n\n            if (!prerenderTemplate) {\n                return;\n            }\n\n            let prerenderWindow = proxyPrerenderWin.getWindow();\n\n            if (!prerenderWindow || !isSameDomain(prerenderWindow) || !isBlankDomain(prerenderWindow)) {\n                return;\n            }\n\n            prerenderWindow = assertSameDomain(prerenderWindow);\n    \n            const doc = prerenderWindow.document;\n            const el = this.renderTemplate(prerenderTemplate, { context, uid, doc });\n\n            if (!el) {\n                return;\n            }\n\n            if (el.ownerDocument !== doc) {\n                throw new Error(`Expected prerender template to have been created with document from child window`);\n            }\n\n            writeElementToWindow(prerenderWindow, el);\n\n            let { width = false, height = false, element = 'body' } = this.component.autoResize || {};\n            element = getElementSafe(element, doc);\n            \n            if (element && (width || height)) {\n                onResize(element, ({ width: newWidth, height: newHeight }) => {\n                    this.resize({\n                        width:  width ? newWidth : undefined,\n                        height: height ? newHeight : undefined\n                    });\n                }, { width, height, win: prerenderWindow });\n            }\n        });\n    }\n\n    renderTemplate(renderer : (RenderOptionsType<P>) => ?HTMLElement, { context, uid, container, doc, frame, prerenderFrame } : { context : $Values<typeof CONTEXT>, uid : string, container? : HTMLElement, doc : Document, frame? : ?HTMLIFrameElement, prerenderFrame? : ?HTMLIFrameElement }) : ?HTMLElement {\n        // $FlowFixMe\n        return renderer.call(this, {\n            container,\n            context,\n            uid,\n            doc,\n            frame,\n            prerenderFrame,\n            focus:      () => this.focus(),\n            close:      () => this.close(),\n            state:      this.state,\n            props:      this.props,\n            tag:        this.component.tag,\n            dimensions: this.component.dimensions,\n            event:      this.event\n        });\n    }\n\n    renderContainer(proxyContainer : ProxyElement<HTMLElement>, { proxyFrame, proxyPrerenderFrame, context, uid } : { context : $Values<typeof CONTEXT>, uid : string, proxyFrame : ?ProxyElement<HTMLIFrameElement>, proxyPrerenderFrame : ?ProxyElement<HTMLIFrameElement> }) : ZalgoPromise<?ProxyElement<HTMLElement>> {\n        return ZalgoPromise.all([\n            proxyContainer.getElement().then(elementReady),\n            // $FlowFixMe\n            proxyFrame ? proxyFrame.getElement() : null,\n            // $FlowFixMe\n            proxyPrerenderFrame ? proxyPrerenderFrame.getElement() : null\n        ]).then(([ container, frame, prerenderFrame ]) => {\n            const innerContainer = this.renderTemplate(this.component.containerTemplate, { context, uid, container, frame, prerenderFrame, doc: document });\n            if (innerContainer) {\n                appendChild(container, innerContainer);\n                this.clean.register(() => destroyElement(innerContainer));\n                this.proxyContainer = getProxyElement(innerContainer);\n                return this.proxyContainer;\n            }\n        });\n    }\n\n    destroy(err? : mixed, trigger? : boolean = true) : ZalgoPromise<void> {\n        return ZalgoPromise.try(() => {\n            if (!err) {\n                trigger = false;\n                err = new Error('Component destroyed');\n            }\n            this.component.log(`destroy`);\n            return this.onError(err, trigger);\n        }).then(() => {\n            return this.clean.all();\n        });\n    }\n\n    onError(err : mixed, trigger? : boolean = true) : ZalgoPromise<void> {\n        return ZalgoPromise.try(() => {\n            if (this.handledErrors.indexOf(err) !== -1) {\n                return;\n            }\n\n            this.handledErrors.push(err);\n            this.initPromise.asyncReject(err);\n\n            if (trigger) {\n                return this.event.trigger(EVENT.ERROR, err);\n            }\n        });\n    }\n\n    openBridge(proxyWin : ProxyWindow, domain : string, context : $Values<typeof CONTEXT>) : ?ZalgoPromise<?CrossDomainWindowType> {\n        if (__POST_ROBOT__.__IE_POPUP_SUPPORT__) {\n            return ZalgoPromise.try(() => {\n                return proxyWin.awaitWindow();\n                \n            }).then(win => {\n                if (!bridge || !bridge.needsBridge({ win, domain }) || bridge.hasBridge(domain, domain)) {\n                    return;\n                }\n\n                const bridgeUrl = this.component.getBridgeUrl();\n\n                if (!bridgeUrl) {\n                    throw new Error(`Bridge needed to render ${ context }`);\n                }\n\n                const bridgeDomain = getDomainFromUrl(bridgeUrl);\n                bridge.linkUrl(win, domain);\n                return bridge.openBridge(normalizeMockUrl(bridgeUrl), bridgeDomain);\n            });\n        }\n    }\n}\n","/* @flow */\n\nimport { onCloseWindow, type CrossDomainWindowType } from 'cross-domain-utils/src';\nimport { ZalgoPromise } from 'zalgo-promise/src';\nimport { ProxyWindow } from 'post-robot/src';\nimport { cleanup, type CleanupType, type EventEmitterType } from 'belter/src';\n\nimport { ParentComponent } from '../parent';\nimport { RENDER_DRIVERS, type ContextDriverType } from '../parent/drivers';\nimport type { Component } from '../component';\n\nexport type DelegatePropsType = {|\n    onClose : () => ?ZalgoPromise<void>,\n    onDisplay : () => ?ZalgoPromise<void>,\n    window : ?ProxyWindow\n|};\n\nexport type DelegateOptionsType = {|\n    context : string,\n    props : DelegatePropsType,\n    overrides : {\n        close : () => ZalgoPromise<void>,\n        onError : (mixed) => ZalgoPromise<void>,\n        event : EventEmitterType\n    }\n|};\n\nexport type DelegateReturnType = {|\n    overrides : Object,\n    destroy : () => ZalgoPromise<void>\n|};\n\nexport class DelegateComponent<P>  {\n\n    component : Component<P>\n    source : CrossDomainWindowType\n    context : string\n    driver : ContextDriverType\n    props : DelegatePropsType\n    clean : CleanupType\n\n    focus : () => ZalgoPromise<void>\n    resize : ({ width? : ?number, height? : ?number }) => ZalgoPromise<void>\n    renderTemplate : Function\n\n    close : () => ZalgoPromise<void>\n    onError : (mixed) => ZalgoPromise<void>\n    event : EventEmitterType\n\n    constructor(component : Component<P>, source : CrossDomainWindowType, options : DelegateOptionsType) {\n        this.component = component;\n        this.context = options.context;\n        this.driver = RENDER_DRIVERS[options.context];\n        this.clean = cleanup(this);\n        \n        this.focus = ParentComponent.prototype.focus;\n        this.resize = ParentComponent.prototype.resize;\n        this.renderTemplate = ParentComponent.prototype.renderTemplate;\n\n        // $FlowFixMe\n        this.props = {};\n        for (const propName of Object.keys(options.props)) {\n            const propDef = this.component.getPropDefinition(propName);\n            if (propDef && propDef.allowDelegate && options.props[propName]) {\n                // $FlowFixMe\n                this.props[propName] = options.props[propName];\n            }\n        }\n\n        this.close   = options.overrides.close;\n        this.onError = options.overrides.onError;\n        this.event   = options.overrides.event;\n\n        this.component.registerActiveComponent(this);\n        this.clean.register(() => this.component.destroyActiveComponent(this));\n\n        this.watchForSourceClose(source);\n    }\n\n    getDelegate() : DelegateReturnType {\n        return {\n            overrides: this.getOverrides(),\n            destroy:   () => this.destroy()\n        };\n    }\n\n    watchForSourceClose(source : CrossDomainWindowType) {\n        const closeSourceWindowListener = onCloseWindow(source, () => this.destroy(), 3000);\n        this.clean.register(closeSourceWindowListener.cancel);\n    }\n\n    getOverrides() : { [string] : mixed } {\n        const overrides = {};\n        const self = this;\n\n        for (const key of this.driver.delegate) {\n            overrides[key] = function delegateOverride() : mixed {\n                // $FlowFixMe\n                return ParentComponent.prototype[key].apply(self, arguments);\n            };\n            overrides[key].__name__ = key;\n        }\n\n        return overrides;\n    }\n\n    destroy() : ZalgoPromise<void> {\n        return this.clean.all();\n    }\n}\n","/* @flow */\n/* eslint react/no-deprecated: off, react/no-find-dom-node: off, react/display-name: off, react/no-did-mount-set-state: off, react/destructuring-assignment: off, react/prop-types: off */\n\nimport { extend, noop } from 'belter/src';\n\nimport type { Component, ComponentDriverType } from '../component';\nimport { CONTEXT } from '../constants';\n\ndeclare class ReactClassType {\n\n}\n\ntype ReactElementType = {|\n\n|};\n\ndeclare class __ReactComponent {\n\n}\n\ntype ReactType = {|\n    Component : __ReactComponent,\n    createClass : ({ render : () => ReactElementType, componentDidMount : () => void, componentDidUpdate : () => void }) => (typeof ReactClassType),\n    createElement : (string, ?{ [string] : mixed }, ...children : $ReadOnlyArray<ReactElementType>) => ReactElementType\n|};\n\ntype ReactDomType = {|\n    findDOMNode : (typeof ReactClassType) => HTMLElement\n|};\n\ntype ReactLibraryType = {|\n    React : ReactType,\n    ReactDOM : ReactDomType\n|};\n\nexport const react : ComponentDriverType<*, ReactLibraryType> = {\n\n    register(component : Component<*>, { React, ReactDOM } : ReactLibraryType) : (typeof ReactClassType) {\n\n        // $FlowFixMe\n        return class extends React.Component {\n            render() : ReactElementType {\n                return React.createElement('div', null);\n            }\n\n            componentDidMount() {\n                component.log(`instantiate_react_component`);\n\n                // $FlowFixMe\n                const el = ReactDOM.findDOMNode(this);\n\n                const parent = component.init(extend({}, this.props));\n                parent.render(el, CONTEXT.IFRAME);\n                this.setState({ parent });\n            }\n\n            componentDidUpdate() {\n\n                if (this.state && this.state.parent) {\n                    this.state.parent.updateProps(extend({}, this.props)).catch(noop);\n                }\n            }\n        };\n    }\n};\n","export default function _inheritsLoose(subClass, superClass) {\n  subClass.prototype = Object.create(superClass.prototype);\n  subClass.prototype.constructor = subClass;\n  subClass.__proto__ = superClass;\n}","/* @flow */\n\nimport { extend, noop } from 'belter/src';\n\nimport type { Component, ComponentDriverType } from '../component';\nimport { CONTEXT } from '../constants';\n\ntype VueComponent = {|\n    render : (Function) => Element,\n    inheritAttrs : boolean,\n    mounted : () => void,\n    watch : {|\n        $attrs : {|\n            deep : boolean,\n            handler : () => void\n        |}\n    |}\n|};\n\ntype RegisteredVueComponent = {|\n    \n|};\n\ntype VueType = {|\n    component : (string, VueComponent) => RegisteredVueComponent\n|};\n\nexport const vue : ComponentDriverType<*, VueType> = {\n\n    register<P>(component : Component<P>, Vue : VueType) : RegisteredVueComponent {\n\n        return Vue.component(component.tag, {\n            render(createElement) : Element {\n                return createElement('div');\n            },\n\n            inheritAttrs: false,\n\n            mounted() {\n                const el = this.$el;\n\n                // $FlowFixMe\n                this.parent = component.init(extend({}, this.$attrs));\n                this.parent.render(el, CONTEXT.IFRAME);\n            },\n\n            watch: {\n                $attrs: {\n                    handler: function handler() {\n                        if (this.parent && this.$attrs) {\n                            this.parent.updateProps(extend({}, this.$attrs)).catch(noop);\n                        }\n                    },\n                    deep: true\n                }\n            }\n        });\n    }\n};\n","/* @flow */\n\nimport { dasherizeToCamel, replaceObject, noop } from 'belter/src';\n\nimport type { Component, ComponentDriverType } from '../component';\nimport { CONTEXT } from '../constants';\n\ntype AngularModule = {|\n    directive : (string, () => {\n        scope : { [string] : '=' | '@' },\n        restrict : string,\n        controller : $ReadOnlyArray<string | Function>\n    }) => AngularModule\n|};\n\ntype Angular = {|\n    module : (string, $ReadOnlyArray<string>) => AngularModule\n|};\n\nexport const angular : ComponentDriverType<*, Angular> = {\n\n    register(component : Component<*>, ng : Angular) : AngularModule {\n\n        const module = ng.module(component.tag, []).directive(dasherizeToCamel(component.tag), () => {\n\n            const scope = {};\n\n            for (const key of component.getPropNames()) {\n                scope[key] = '=';\n            }\n\n            scope.props = '=';\n\n            return {\n                scope,\n\n                restrict: 'E',\n\n                controller: [ '$scope', '$element', ($scope, $element) => {\n                    component.log(`instantiate_angular_component`);\n\n                    function safeApply() {\n                        if ($scope.$root.$$phase !== '$apply' && $scope.$root.$$phase !== '$digest') {\n                            try {\n                                $scope.$apply();\n                            } catch (err) {\n                                // pass\n                            }\n                        }\n                    }\n\n                    const getProps = () => {\n                        return replaceObject($scope.props, item => {\n                            if (typeof item === 'function') {\n                                return function angularWrapped() : mixed {\n                                    const result = item.apply(this, arguments);\n                                    safeApply();\n                                    return result;\n                                };\n                            }\n                            return item;\n                        });\n                    };\n\n                    const instance = component.init(getProps());\n                    instance.render($element[0], CONTEXT.IFRAME);\n\n                    $scope.$watch(() => {\n                        instance.updateProps(getProps()).catch(noop);\n                    });\n                } ]\n            };\n        });\n\n        return module;\n    }\n};\n","/* @flow */\n/* eslint new-cap: 0 */\n\nimport { replaceObject } from 'belter/src';\n\nimport type { Component, ComponentDriverType } from '../component';\nimport { CONTEXT } from '../constants';\n\ntype Angular2Injection = {||};\n\ntype Angular2Component = {||};\n\ntype Angular2Module = {||};\n\ntype Angular2 = {|\n    Component : ({ selector : string, template : string, inputs : $ReadOnlyArray<string> }) => {\n        Class : ({ constructor : $ReadOnlyArray<Angular2Injection | Function>, ngOnInit : () => void, ngDoCheck : () => void }) => Angular2Component\n    },\n    NgModule : ({ declarations : $ReadOnlyArray<Angular2Component>, exports : $ReadOnlyArray<Angular2Component> }) => {\n        Class : ({ constructor : () => void }) => Angular2Module\n    },\n    ElementRef : Angular2Injection,\n    NgZone : Angular2Injection\n|};\n\nconst equals = (obj1, obj2) => {\n    const checked = {};\n\n    for (const key in obj1) {\n        if (obj1.hasOwnProperty(key)) {\n            checked[key] = true;\n\n            if (obj1[key] !== obj2[key]) {\n                return false;\n            }\n        }\n    }\n\n    for (const key in obj2) {\n        if (!checked[key]) {\n            return false;\n        }\n    }\n\n    return true;\n};\n\nexport const angular2 : ComponentDriverType<*, Angular2> = {\n\n    register(zoid : Component<*>, { Component : AngularComponent, NgModule, ElementRef, NgZone }) : Angular2Module {\n\n        zoid.log('initializing angular2 component');\n\n        const getProps = (component) => {\n            return replaceObject({ ...component.internalProps, ...component.props }, item => {\n                if (typeof item === 'function') {\n                    return function angular2Wrapped() : void {\n                        return component.zone.run(() => item.apply(this, arguments));\n                    };\n                }\n                return item;\n            });\n        };\n\n        const ComponentInstance =\n            AngularComponent({\n                selector: zoid.tag,\n                template: '<div></div>',\n                inputs:   [ 'props' ]\n            }).Class({\n                constructor: [ ElementRef, NgZone, function angularConstructor(elementRef, zone) {\n                    this._props = {};\n                    this.elementRef = elementRef;\n                    this.zone = zone;\n                } ],\n                ngOnInit () {\n                    const targetElement = this.elementRef.nativeElement;\n                    \n                    this.parent = zoid.init(getProps(this));\n                    this.parent.render(targetElement, CONTEXT.IFRAME);\n                },\n                ngDoCheck() {\n                    if (this.parent && !equals(this._props, this.props)) {\n                        this._props = { ...this.props };\n                        this.parent.updateProps(getProps(this));\n                    }\n                }\n            });\n\n\n        const ModuleInstance = NgModule({\n            declarations: [ ComponentInstance ],\n            exports:      [ ComponentInstance ]\n        }).Class({\n            constructor () {\n                // pass\n            }\n        });\n\n        return ModuleInstance;\n    }\n};\n","/* @flow */\n/* eslint react/react-in-jsx-scope: off */\n\nimport { destroyElement } from 'belter/src';\n\nimport { type RenderOptionsType } from '../../parent';\nimport { EVENT } from '../../constants';\n\nconst CLASS = {\n    VISIBLE:   'visible',\n    INVISIBLE: 'invisible'\n};\n\nexport function defaultContainerTemplate<P>({ uid, frame, prerenderFrame, doc, event, dimensions : { width, height } } : RenderOptionsType<P>) : ?HTMLElement {\n    if (__ZOID__.__DEFAULT_CONTAINER__) {\n        if (!frame || !prerenderFrame) {\n            return;\n        }\n    \n        prerenderFrame.classList.add(CLASS.VISIBLE);\n        frame.classList.add(CLASS.INVISIBLE);\n    \n        event.on(EVENT.RENDERED, () => {\n            prerenderFrame.classList.remove(CLASS.VISIBLE);\n            prerenderFrame.classList.add(CLASS.INVISIBLE);\n    \n            frame.classList.remove(CLASS.INVISIBLE);\n            frame.classList.add(CLASS.VISIBLE);\n    \n            setTimeout(() => {\n                destroyElement(prerenderFrame);\n            }, 1);\n        });\n\n        const div = doc.createElement('div');\n        div.setAttribute('id', uid);\n        const style = doc.createElement('style');\n\n        style.appendChild(doc.createTextNode(`\n            #${ uid } {\n                display: inline-block;\n                position: relative;\n                width: ${ width };\n                height: ${ height };\n            }\n\n            #${ uid } > iframe {\n                display: inline-block;\n                position: absolute;\n                width: 100%;\n                height: 100%;\n                top: 0;\n                left: 0;\n                transition: opacity .2s ease-in-out;\n            }\n\n            #${ uid } > iframe.${ CLASS.INVISIBLE } {\n                opacity: 0;\n            }\n\n            #${ uid } > iframe.${ CLASS.VISIBLE } {\n                opacity: 1;\n        }\n        `));\n\n        div.appendChild(frame);\n        div.appendChild(prerenderFrame);\n        div.appendChild(style);\n\n        return div;\n    }\n}\n","/* @flow */\n/* eslint react/react-in-jsx-scope: off */\n\nimport { type RenderOptionsType } from '../../parent';\n\nexport function defaultPrerenderTemplate<P>({ doc } : RenderOptionsType<P>) : ?HTMLElement {\n    if (__ZOID__.__DEFAULT_PRERENDER__) {\n        const html = doc.createElement('html');\n        const body = doc.createElement('body');\n        const style = doc.createElement('style');\n        const spinner = doc.createElement('div');\n        spinner.classList.add('spinner');\n\n        html.appendChild(body);\n        body.appendChild(spinner);\n        body.appendChild(style);\n        style.appendChild(doc.createTextNode(`\n            .spinner {\n                position: fixed;\n                max-height: 60vmin;\n                max-width: 60vmin;\n                height: 40px;\n                width: 40px;\n                top: 50%;\n                left: 50%;\n                box-sizing: border-box;\n                border: 3px solid rgba(0, 0, 0, .2);\n                border-top-color: rgba(33, 128, 192, 0.8);\n                border-radius: 100%;\n                animation: rotation .7s infinite linear;\n            }\n\n            @keyframes rotation {\n                from {\n                    transform: translateX(-50%) translateY(-50%) rotate(0deg);\n                }\n                to {\n                    transform: translateX(-50%) translateY(-50%) rotate(359deg);\n                }\n            }\n        `));\n\n        return html;\n    }\n}\n","/* @flow */\n\nimport { ZalgoPromise } from 'zalgo-promise/src';\nimport { once, noop } from 'belter/src';\nimport { isWindow, type CrossDomainWindowType } from 'cross-domain-utils/src';\nimport { ProxyWindow, toProxyWindow } from 'post-robot/src';\n\nimport { PROP_SERIALIZATION } from '../constants';\n\nexport type EventHandlerType<T> = (T) => void | ZalgoPromise<void>;\n\nexport type timeoutPropType = number;\nexport type windowPropType = CrossDomainWindowType | ProxyWindow;\nexport type closePropType = () => ZalgoPromise<void>;\nexport type focusPropType = () => ZalgoPromise<void>;\nexport type resizePropType = ({ width : ?number, height : ?number }) => ZalgoPromise<void>;\n\nexport type onDisplayPropType = EventHandlerType<void>;\nexport type onRenderedPropType = EventHandlerType<void>;\nexport type onRenderPropType = EventHandlerType<void>;\nexport type onClosePropType = EventHandlerType<void>;\nexport type onErrorPropType = EventHandlerType<mixed>;\nexport type onPropsPropType<P> = ((PropsType<P>) => void) => void; // eslint-disable-line no-use-before-define\n\nexport type PropsInputType<P> = {\n    timeout? : timeoutPropType,\n    window? : windowPropType,\n\n    onDisplay? : onDisplayPropType,\n    onRendered? : onRenderedPropType,\n    onRender? : onRenderPropType,\n    onClose? : onClosePropType,\n    onError? : onErrorPropType,\n    onProps? : onPropsPropType<P>\n} & P;\n\nexport type PropsType<P> = {|\n    timeout? : timeoutPropType,\n    window? : ?windowPropType,\n    close? : ?closePropType,\n    focus? : ?focusPropType,\n    resize? : ?resizePropType,\n\n    onDisplay : onDisplayPropType,\n    onRendered : onRenderedPropType,\n    onRender : onRenderPropType,\n    onClose : onClosePropType,\n    onError : onErrorPropType,\n    onProps : onPropsPropType<P>\n|} & P;\n\ntype PropDefinitionType<T, P, S : string> = {|\n    type : S,\n    alias? : string,\n    value? : ({ props : P, state : Object, close : () => ZalgoPromise<void>, focus : () => ZalgoPromise<void>, onError : (mixed) => ZalgoPromise<void> }) => ?T,\n    required? : boolean,\n    queryParam? : boolean | string | ({ value : T }) => (string | ZalgoPromise<string>),\n    queryValue? : ({ value : T }) => (ZalgoPromise<mixed> | mixed),\n    sendToChild? : boolean,\n    allowDelegate? : boolean,\n    validate? : ({ value : T, props : PropsInputType<P> }) => void,\n    decorate? : ({ value : T, props : PropsType<P>, state : Object, close : () => ZalgoPromise<void>, focus : () => ZalgoPromise<void>, onError : (mixed) => ZalgoPromise<void> }) => T,\n    default? : ({ props : P, state : Object }) => ?T,\n    sameDomain? : boolean,\n    serialization? : $Values<typeof PROP_SERIALIZATION>,\n    childDecorate? : ({ value : T, close : () => ZalgoPromise<void>, focus : () => ZalgoPromise<void>, onError : (mixed) => ZalgoPromise<void>, onProps : ((PropsType<P>) => void) => void, resize : ({ width : ?number, height : ?number }) => ZalgoPromise<void> }) => ?T\n|};\n\nexport type BooleanPropDefinitionType<T : boolean, P> = PropDefinitionType<T, P, 'boolean'>;\nexport type StringPropDefinitionType<T : string, P> = PropDefinitionType<T, P, 'string'>;\nexport type NumberPropDefinitionType<T : number, P> = PropDefinitionType<T, P, 'number'>;\nexport type FunctionPropDefinitionType<T : Function, P> = PropDefinitionType<T, P, 'function'>;\nexport type ArrayPropDefinitionType<T : Array<*>, P> = PropDefinitionType<T, P, 'array'>; // eslint-disable-line flowtype/no-mutable-array\nexport type ObjectPropDefinitionType<T : Object, P> = PropDefinitionType<T, P, 'object'>;\n\nexport type MixedPropDefinitionType<P> = BooleanPropDefinitionType<*, P> | StringPropDefinitionType<*, P> | NumberPropDefinitionType<*, P> | FunctionPropDefinitionType<*, P> | ObjectPropDefinitionType<*, P> | ArrayPropDefinitionType<*, P>;\n\nexport type UserPropsDefinitionType<P> = {\n    [string] : MixedPropDefinitionType<P>\n};\n\n// eslint-disable-next-line flowtype/require-exact-type\nexport type BuiltInPropsDefinitionType<P> = {\n    timeout : NumberPropDefinitionType<timeoutPropType, P>,\n    window : ObjectPropDefinitionType<windowPropType, P>,\n    close : FunctionPropDefinitionType<closePropType, P>,\n    focus : FunctionPropDefinitionType<focusPropType, P>,\n    resize : FunctionPropDefinitionType<resizePropType, P>,\n\n    onDisplay : FunctionPropDefinitionType<onDisplayPropType, P>,\n    onRendered : FunctionPropDefinitionType<onRenderedPropType, P>,\n    onRender : FunctionPropDefinitionType<onRenderPropType, P>,\n    onClose : FunctionPropDefinitionType<onClosePropType, P>,\n    onError : FunctionPropDefinitionType<onErrorPropType, P>,\n    onProps : FunctionPropDefinitionType<onPropsPropType<P>, P>\n};\n\nconst defaultNoop = () => noop;\nconst decorateOnce = ({ value }) => once(value);\n\nexport function getBuiltInProps<P>() : BuiltInPropsDefinitionType<P> {\n    return {\n        window: {\n            type:          'object',\n            sendToChild:   false,\n            required:      false,\n            allowDelegate: true,\n            validate({ value } : { value : CrossDomainWindowType | ProxyWindow }) {\n                if (!isWindow(value) && !ProxyWindow.isProxyWindow(value)) {\n                    throw new Error(`Expected Window or ProxyWindow`);\n                }\n            },\n            decorate({ value } : { value : CrossDomainWindowType | ProxyWindow }) : ProxyWindow {\n                return toProxyWindow(value);\n            }\n        },\n\n        timeout: {\n            type:        'number',\n            required:    false,\n            sendToChild: false\n        },\n\n        close: {\n            type:          'function',\n            required:      false,\n            sendToChild:   false,\n            childDecorate: ({ close }) => close\n        },\n\n        focus: {\n            type:          'function',\n            required:      false,\n            sendToChild:   false,\n            childDecorate: ({ focus }) => focus\n        },\n\n        resize: {\n            type:          'function',\n            required:      false,\n            sendToChild:   false,\n            childDecorate: ({ resize }) => resize\n        },\n\n        getParent: {\n            type:          'function',\n            required:      false,\n            sendToChild:   false,\n            childDecorate: ({ getParent }) => getParent\n        },\n\n        onDisplay: {\n            type:          'function',\n            required:      false,\n            sendToChild:   false,\n            allowDelegate: true,\n            default:       defaultNoop,\n            decorate:      decorateOnce\n        },\n\n        onRendered: {\n            type:        'function',\n            required:    false,\n            sendToChild: false,\n            default:     defaultNoop,\n            decorate:    decorateOnce\n        },\n\n        onRender: {\n            type:        'function',\n            required:    false,\n            sendToChild: false,\n            default:     defaultNoop,\n            decorate:    decorateOnce\n        },\n\n        onClose: {\n            type:          'function',\n            required:      false,\n            sendToChild:   false,\n            allowDelegate: true,\n            default:       defaultNoop,\n            decorate:      decorateOnce\n        },\n\n        onError: {\n            type:          'function',\n            required:      false,\n            sendToChild:   false,\n            childDecorate: ({ onError }) => onError\n        },\n\n        onProps: {\n            type:          'function',\n            required:      false,\n            sendToChild:   false,\n            default:       defaultNoop,\n            childDecorate: ({ onProps }) => onProps\n        }\n    };\n}\n","/* @flow */\n/* eslint max-lines: 0 */\n\nimport { on, send, bridge, toProxyWindow } from 'post-robot/src';\nimport { ZalgoPromise } from 'zalgo-promise/src';\nimport { isWindow, getDomainFromUrl, type CrossDomainWindowType, isSameTopWindow, getDomain, matchDomain, isSameDomain } from 'cross-domain-utils/src';\nimport { isRegex, noop, isElement } from 'belter/src';\n\nimport { ChildComponent, getChildPayload } from '../child';\nimport { ParentComponent, type RenderOptionsType, type ParentHelpers } from '../parent';\nimport { DelegateComponent } from '../delegate';\nimport { CONTEXT, POST_MESSAGE, WILDCARD, DEFAULT_DIMENSIONS } from '../constants';\nimport { react, angular, vue, angular2 } from '../drivers';\nimport type { CssDimensionsType, StringMatcherType } from '../types';\n\nimport { validate } from './validate';\nimport { defaultContainerTemplate, defaultPrerenderTemplate } from './templates';\nimport { getBuiltInProps, type UserPropsDefinitionType, type BuiltInPropsDefinitionType, type PropsInputType, type PropsType, type MixedPropDefinitionType } from './props';\n\ntype LoggerPayload = { [string] : ?string };\n\n// eslint-disable-next-line flowtype/require-exact-type\ntype Logger = {\n    debug : (event : string, payload? : LoggerPayload) => void,\n    info : (event : string, payload? : LoggerPayload) => void,\n    warn : (event : string, payload? : LoggerPayload) => void,\n    error : (event : string, payload? : LoggerPayload) => void\n};\n\n/*  Component\n    ---------\n\n    This is the spec for the component. The idea is, when I call zoid.create(), it will create a new instance\n    of Component with the blueprint needed to set up ParentComponents and ChildComponents.\n\n    This is the one portion of code which is required by -- and shared to -- both the parent and child windows, and\n    contains all of the configuration needed for them to set themselves up.\n*/\n\nexport type ComponentOptionsType<P> = {|\n\n    tag : string,\n\n    url : string | ({ props : PropsType<P> }) => string,\n    domain? : string | RegExp,\n    bridgeUrl? : string,\n\n    props? : UserPropsDefinitionType<P>,\n\n    dimensions? : CssDimensionsType,\n    autoResize? : { width? : boolean, height? : boolean, element? : string },\n\n    allowedParentDomains? : StringMatcherType,\n\n    attributes? : {\n        iframe? : { [string] : string },\n        popup? : { [string] : string }\n    },\n\n    defaultContext? : $Values<typeof CONTEXT>,\n\n    containerTemplate? : (RenderOptionsType<P>) => ?HTMLElement,\n    prerenderTemplate? : (RenderOptionsType<P>) => ?HTMLElement,\n\n    validate? : ({ props : PropsInputType<P> }) => void,\n\n    logger? : Logger\n|};\n\ntype ZoidRenderer = {|\n    render : (container? : string | HTMLElement, context? : $Values<typeof CONTEXT>) => ZalgoPromise<void>,\n    renderTo : (target : CrossDomainWindowType, container? : string, context? : $Values<typeof CONTEXT>) => ZalgoPromise<void>\n|};\n\nexport type ZoidComponentInstance<P> = {| ...ParentHelpers<P>, ...ZoidRenderer |};\n\nexport type ZoidComponent<P> = {|\n    (PropsInputType<P>) : ZoidComponentInstance<P>,\n    driver : (string, mixed) => mixed,\n    isChild : () => boolean,\n    xprops? : PropsType<P>,\n    canRenderTo : (CrossDomainWindowType) => ZalgoPromise<boolean>\n|};\n\nexport class Component<P> {\n\n    tag : string\n    name : string\n    \n    url : string | ({ props : PropsType<P> }) => string\n    domain : void | string | RegExp\n    bridgeUrl : void | string\n\n    props : UserPropsDefinitionType<P>\n    builtinProps : BuiltInPropsDefinitionType<P>\n\n    dimensions : CssDimensionsType\n    autoResize : void | { width? : boolean, height? : boolean, element? : string }\n\n    allowedParentDomains : StringMatcherType\n\n    defaultContext : $Values<typeof CONTEXT>\n    \n    attributes : {\n        iframe? : { [string] : string },\n        popup? : { [string] : string }\n    }\n\n    containerTemplate : (RenderOptionsType<P>) => ?HTMLElement\n    prerenderTemplate : ?(RenderOptionsType<P>) => ?HTMLElement\n\n    validate : void | ({ props : PropsInputType<P> }) => void\n\n    driverCache : { [string] : mixed }\n\n    xprops : ?PropsType<P>\n\n    logger : Logger\n\n    propNames : $ReadOnlyArray<string>\n\n    constructor(options : ComponentOptionsType<P>) {\n        validate(options);\n\n        // The tag name of the component. Used by some drivers (e.g. angular) to turn the component into an html element,\n        // e.g. <my-component>\n\n        this.tag = options.tag;\n        this.name = this.tag.replace(/-/g, '_');\n\n        this.allowedParentDomains = options.allowedParentDomains || WILDCARD;\n\n        if (Component.components[this.tag]) {\n            throw new Error(`Can not register multiple components with the same tag: ${ this.tag }`);\n        }\n\n        // A json based spec describing what kind of props the component accepts. This is used to validate any props before\n        // they are passed down to the child.\n\n        this.builtinProps = getBuiltInProps();\n        this.props = options.props || {};\n\n        // The dimensions of the component, e.g. { width: '300px', height: '150px' }\n\n        const { width = DEFAULT_DIMENSIONS.WIDTH, height = DEFAULT_DIMENSIONS.HEIGHT } = options.dimensions || {};\n        this.dimensions = { width, height };\n\n        this.url = options.url;\n        this.domain = options.domain;\n        this.bridgeUrl = options.bridgeUrl;\n\n        this.attributes = options.attributes || {};\n        this.attributes.iframe = this.attributes.iframe || {};\n        this.attributes.popup = this.attributes.popup || {};\n\n        this.defaultContext = options.defaultContext || CONTEXT.IFRAME;\n\n        this.autoResize = options.autoResize;\n\n        if (options.containerTemplate) {\n            this.containerTemplate = options.containerTemplate;\n        } else if (__ZOID__.__DEFAULT_CONTAINER__) {\n            this.containerTemplate = defaultContainerTemplate;\n        }\n\n        if (options.prerenderTemplate) {\n            this.prerenderTemplate = options.prerenderTemplate;\n        } else if (__ZOID__.__DEFAULT_PRERENDER__) {\n            this.prerenderTemplate = defaultPrerenderTemplate;\n        }\n\n        this.validate = options.validate;\n\n        this.logger = options.logger || {\n            debug: noop,\n            info:  noop,\n            warn:  noop,\n            error: noop\n        };\n\n        this.registerChild();\n        this.listenDelegate();\n\n        Component.components[this.tag] = this;\n    }\n\n    getPropNames() : $ReadOnlyArray<string> {\n        if (this.propNames) {\n            return this.propNames;\n        }\n\n        const propNames = Object.keys(this.props);\n        for (const key of Object.keys(this.builtinProps)) {\n            if (propNames.indexOf(key) === -1) {\n                propNames.push(key);\n            }\n        }\n\n        this.propNames = propNames;\n        return propNames;\n    }\n\n    // $FlowFixMe\n    getPropDefinition(name : string) : MixedPropDefinitionType<P> {\n        // $FlowFixMe\n        return this.props[name] || this.builtinProps[name];\n    }\n\n    driver(name : string, dep : mixed) : mixed {\n        if (__ZOID__.__FRAMEWORK_SUPPORT__) {\n            const drivers = { react, angular, vue, angular2 };\n\n            if (!drivers[name]) {\n                throw new Error(`Could not find driver for framework: ${ name }`);\n            }\n    \n            this.driverCache = this.driverCache || {};\n    \n            if (!this.driverCache[name]) {\n                this.driverCache[name] = drivers[name].register(this, dep);\n            }\n    \n            return this.driverCache[name];\n        } else {\n            throw new Error(`Driver support not enabled`);\n        }\n    }\n\n    registerChild() {\n        if (this.isChild()) {\n            if (window.xprops) {\n                throw new Error(`Can not register ${ this.name } as child - can not attach multiple components to the same window`);\n            }\n\n            const child = new ChildComponent(this);\n            window.xprops = this.xprops = child.getProps();\n        }\n    }\n\n    listenDelegate() {\n        on(`${ POST_MESSAGE.ALLOW_DELEGATE }_${ this.name }`, () => {\n            return true;\n        });\n\n        on(`${ POST_MESSAGE.DELEGATE }_${ this.name }`, ({ source, data: { context, props, overrides } }) => {\n            const delegate = new DelegateComponent(this, source, { context, props, overrides });\n            return delegate.getDelegate();\n        });\n    }\n\n    canRenderTo(win : CrossDomainWindowType) : ZalgoPromise<boolean> {\n        return send(win, `${ POST_MESSAGE.ALLOW_DELEGATE }_${ this.name }`).then(({ data }) => {\n            return data;\n        }).catch(() => {\n            return false;\n        });\n    }\n\n    getUrl(props : PropsType<P>) : string {\n        if (typeof this.url === 'function') {\n            return this.url({ props });\n        }\n\n        return this.url;\n    }\n\n    getInitialDomain(props : PropsType<P>) : string {\n        if (this.domain && typeof this.domain === 'string') {\n            return this.domain;\n        }\n\n        return getDomainFromUrl(this.getUrl(props));\n    }\n\n    getDomain(props : PropsType<P>) : string | RegExp {\n        if (isRegex(this.domain)) {\n            // $FlowFixMe\n            return this.domain;\n        }\n\n        return this.getInitialDomain(props);\n    }\n\n    getBridgeUrl() : ?string {\n        if (this.bridgeUrl) {\n            return this.bridgeUrl;\n        }\n    }\n\n    isChild() : boolean {\n        const payload = getChildPayload();\n        return Boolean(payload && payload.tag === this.tag);\n    }\n\n    getDefaultContainer<T : (string | HTMLElement)>(context : $Values<typeof CONTEXT>, container? : T) : T {\n        if (container) {\n            if (typeof container !== 'string' && !isElement(container)) {\n                throw new TypeError(`Expected string or element selector to be passed`);\n            }\n\n            return container;\n        }\n\n        if (context === CONTEXT.POPUP) {\n            // $FlowFixMe\n            return 'body';\n        }\n\n        throw new Error(`Expected element to be passed to render iframe`);\n    }\n\n    getDefaultContext(context : ?$Values<typeof CONTEXT>, props : PropsInputType<P>) : $Values<typeof CONTEXT> {\n        if (props.window) {\n            return toProxyWindow(props.window).getType();\n        }\n\n        if (context) {\n            if (context !== CONTEXT.IFRAME && context !== CONTEXT.POPUP) {\n                throw new Error(`Unrecognized context: ${ context }`);\n            }\n            \n            return context;\n        }\n\n        return this.defaultContext;\n    }\n\n    init(props : PropsInputType<P>) : ZoidComponentInstance<P> {\n\n        // $FlowFixMe\n        props = props || {};\n        \n        const parent = new ParentComponent(this, props);\n\n        const render = (target, container, context) => ZalgoPromise.try(() => {\n            if (!isWindow(target)) {\n                throw new Error(`Must pass window to renderTo`);\n            }\n\n            context = this.getDefaultContext(context, props);\n            container = this.getDefaultContainer(context, container);\n            return parent.render(target, container, context);\n        });\n\n        return {\n            ...parent.getHelpers(),\n            render:   (container, context) => render(window, container, context),\n            renderTo: (target, container, context) => render(target, container, context)\n        };\n    }\n\n    checkAllowRender(target : CrossDomainWindowType, domain : string | RegExp, container : string | HTMLElement) {\n        if (target === window) {\n            return;\n        }\n\n        if (!isSameTopWindow(window, target)) {\n            throw new Error(`Can only renderTo an adjacent frame`);\n        }\n\n        const origin = getDomain();\n\n        if (!matchDomain(domain, origin) && !isSameDomain(target)) {\n            throw new Error(`Can not render remotely to ${ domain.toString() } - can only render to ${ origin }`);\n        }\n\n        if (container && typeof container !== 'string') {\n            throw new Error(`Container passed to renderTo must be a string selector, got ${ typeof container } }`);\n        }\n    }\n\n    log(event : string, payload? : LoggerPayload) {\n        this.logger.info(`${ this.name }_${ event }`, payload);\n    }\n\n    static components : { [string] : Component<*> } = {}\n    static activeComponents : Array<ParentComponent<*> | DelegateComponent<*>> = [] // eslint-disable-line flowtype/no-mutable-array\n\n    registerActiveComponent<Q>(instance : ParentComponent<Q> | DelegateComponent<Q>) {\n        Component.activeComponents.push(instance);\n    }\n\n    destroyActiveComponent<Q>(instance : ParentComponent<Q> | DelegateComponent<Q>) {\n        Component.activeComponents.splice(Component.activeComponents.indexOf(instance), 1);\n    }\n\n    static destroyAll() : ZalgoPromise<void> {\n        if (bridge) {\n            bridge.destroyBridges();\n        }\n\n        const results = [];\n\n        while (Component.activeComponents.length) {\n            results.push(Component.activeComponents[0].destroy());\n        }\n\n        return ZalgoPromise.all(results).then(noop);\n    }\n}\n\nexport type ComponentDriverType<P, T : mixed> = {|\n    register : (Component<P>, T) => mixed\n|};\n\nexport function create<P>(options : ComponentOptionsType<P>) : ZoidComponent<P> {\n    const component : Component<P> = new Component(options);\n\n    const init = (props) => component.init(props);\n    init.driver = (name, dep) => component.driver(name, dep);\n    init.isChild = () => component.isChild();\n    init.canRenderTo = (win) => component.canRenderTo(win);\n    init.xprops = component.xprops;\n\n    // $FlowFixMe\n    return init;\n}\n\nexport function destroyAll() : ZalgoPromise<void> {\n    return Component.destroyAll();\n}\n","/* @flow */\n\nimport { isPerc, isPx, values } from 'belter/src';\n\nimport { CONTEXT, PROP_TYPE } from '../constants';\n\nimport type { ComponentOptionsType } from './index';\n\nfunction validatePropDefinitions<P>(options : ComponentOptionsType<P>) {\n\n    if (options.props && !(typeof options.props === 'object')) {\n        throw new Error(`Expected options.props to be an object`);\n    }\n\n    const PROP_TYPE_LIST = values(PROP_TYPE);\n\n    if (options.props) {\n        for (const key of Object.keys(options.props)) {\n\n            // $FlowFixMe\n            const prop = options.props[key];\n\n            if (!prop || !(typeof prop === 'object')) {\n                throw new Error(`Expected options.props.${ key } to be an object`);\n            }\n\n            if (!prop.type) {\n                throw new Error(`Expected prop.type`);\n            }\n\n            if (PROP_TYPE_LIST.indexOf(prop.type) === -1) {\n                throw new Error(`Expected prop.type to be one of ${ PROP_TYPE_LIST.join(', ') }`);\n            }\n\n            if (prop.required && prop.default) {\n                throw new Error(`Required prop can not have a default value`);\n            }\n\n            if (prop.type === PROP_TYPE.FUNCTION && prop.queryParam && !prop.queryValue) {\n                throw new Error(`Do not pass queryParam for function prop`);\n            }\n        }\n    }\n}\n\n// eslint-disable-next-line complexity\nexport function validate<P>(options : ?ComponentOptionsType<P>) { // eslint-ignore-line\n\n    if (!options) {\n        throw new Error(`Expected options to be passed`);\n    }\n\n    // eslint-disable-next-line security/detect-unsafe-regex, unicorn/no-unsafe-regex\n    if (!options.tag || !options.tag.match(/^([a-z0-9]+-)+[a-z0-9]+$/)) {\n        throw new Error(`Invalid options.tag: ${ options.tag }`);\n    }\n\n    validatePropDefinitions(options);\n\n    if (options.dimensions) {\n        if (options.dimensions && !isPx(options.dimensions.width) && !isPerc(options.dimensions.width)) {\n            throw new Error(`Expected options.dimensions.width to be a px or % string value`);\n        }\n\n        if (options.dimensions && !isPx(options.dimensions.height) && !isPerc(options.dimensions.height)) {\n            throw new Error(`Expected options.dimensions.height to be a px or % string value`);\n        }\n    }\n\n    if (options.defaultContext) {\n        if (options.defaultContext !== CONTEXT.IFRAME && options.defaultContext !== CONTEXT.POPUP) {\n            throw new Error(`Unsupported context type: ${ options.defaultContext || 'unknown' }`);\n        }\n    }\n\n    if (!options.url) {\n        throw new Error(`Must pass url`);\n    }\n\n    if (typeof options.url !== 'string' && typeof options.url !== 'function') {\n        throw new TypeError(`Expected url to be string or function`);\n    }\n\n    if (options.prerenderTemplate && typeof options.prerenderTemplate !== 'function') {\n        throw new Error(`Expected options.prerenderTemplate to be a function`);\n    }\n\n    if ((options.containerTemplate || !__ZOID__.__DEFAULT_CONTAINER__) && typeof options.containerTemplate !== 'function') {\n        throw new Error(`Expected options.containerTemplate to be a function`);\n    }\n}\n","/* @flow */\n\nexport { PopupOpenError } from 'belter/src';\nexport { create, destroyAll, Component } from './component';\nexport type { ZoidComponent, ZoidComponentInstance } from './component';\nexport type { RenderOptionsType } from './parent';\nexport { PROP_TYPE, PROP_SERIALIZATION, CONTEXT, EVENT } from './constants';\n"],"sourceRoot":""}