{"version":3,"sources":["webpack://zoid/webpack/universalModuleDefinition","webpack://zoid/webpack/bootstrap","webpack://zoid/./node_modules/@babel/runtime/helpers/esm/extends.js","webpack://zoid/./node_modules/zalgo-promise/src/utils.js","webpack://zoid/./node_modules/zalgo-promise/src/exceptions.js","webpack://zoid/./node_modules/zalgo-promise/src/flush.js","webpack://zoid/./node_modules/zalgo-promise/src/promise.js","webpack://zoid/./node_modules/cross-domain-utils/src/util.js","webpack://zoid/./node_modules/cross-domain-utils/src/constants.js","webpack://zoid/./node_modules/cross-domain-utils/src/utils.js","webpack://zoid/./node_modules/cross-domain-safe-weakmap/src/util.js","webpack://zoid/./node_modules/cross-domain-safe-weakmap/src/weakmap.js","webpack://zoid/./node_modules/belter/src/util.js","webpack://zoid/./node_modules/belter/src/dom.js","webpack://zoid/./node_modules/cross-domain-safe-weakmap/src/native.js","webpack://zoid/./node_modules/belter/src/css.js","webpack://zoid/./node_modules/post-robot/src/conf/config.js","webpack://zoid/./node_modules/post-robot/src/conf/constants.js","webpack://zoid/./node_modules/post-robot/src/global.js","webpack://zoid/./node_modules/post-robot/src/lib/hello.js","webpack://zoid/./node_modules/post-robot/src/lib/windows.js","webpack://zoid/./node_modules/universal-serialize/src/constants.js","webpack://zoid/./node_modules/universal-serialize/src/common.js","webpack://zoid/./node_modules/universal-serialize/src/serialize.js","webpack://zoid/./node_modules/universal-serialize/src/serializers/function.js","webpack://zoid/./node_modules/universal-serialize/src/serializers/error.js","webpack://zoid/./node_modules/universal-serialize/src/serializers/promise.js","webpack://zoid/./node_modules/universal-serialize/src/serializers/regex.js","webpack://zoid/./node_modules/universal-serialize/src/serializers/date.js","webpack://zoid/./node_modules/universal-serialize/src/serializers/array.js","webpack://zoid/./node_modules/universal-serialize/src/serializers/object.js","webpack://zoid/./node_modules/universal-serialize/src/serializers/string.js","webpack://zoid/./node_modules/universal-serialize/src/serializers/number.js","webpack://zoid/./node_modules/universal-serialize/src/serializers/boolean.js","webpack://zoid/./node_modules/universal-serialize/src/serializers/null.js","webpack://zoid/./node_modules/universal-serialize/src/deserialize.js","webpack://zoid/./node_modules/post-robot/src/bridge/common.js","webpack://zoid/./node_modules/post-robot/src/serialize/window.js","webpack://zoid/./node_modules/post-robot/src/serialize/function.js","webpack://zoid/./node_modules/post-robot/src/serialize/serialize.js","webpack://zoid/./node_modules/post-robot/src/serialize/promise.js","webpack://zoid/./node_modules/post-robot/src/drivers/send/strategies.js","webpack://zoid/./node_modules/post-robot/src/lib/compat.js","webpack://zoid/./node_modules/post-robot/src/drivers/send/index.js","webpack://zoid/./node_modules/post-robot/src/drivers/listeners.js","webpack://zoid/./node_modules/post-robot/src/drivers/receive/types.js","webpack://zoid/./node_modules/post-robot/src/drivers/receive/index.js","webpack://zoid/./node_modules/post-robot/src/public/on.js","webpack://zoid/./node_modules/post-robot/src/public/send.js","webpack://zoid/./node_modules/post-robot/src/setup.js","webpack://zoid/./node_modules/post-robot/src/index.js","webpack://zoid/./src/lib/global.js","webpack://zoid/./src/lib/serialize.js","webpack://zoid/./src/constants.js","webpack://zoid/./src/child/props.js","webpack://zoid/./src/child/window.js","webpack://zoid/./src/child/index.js","webpack://zoid/./src/parent/drivers.js","webpack://zoid/./node_modules/post-robot/src/clean.js","webpack://zoid/./src/parent/props.js","webpack://zoid/./src/parent/index.js","webpack://zoid/./src/delegate/index.js","webpack://zoid/./node_modules/@babel/runtime/helpers/esm/inheritsLoose.js","webpack://zoid/./src/drivers/react.js","webpack://zoid/./src/drivers/vue.js","webpack://zoid/./src/drivers/angular.js","webpack://zoid/./src/drivers/angular2.js","webpack://zoid/./node_modules/jsx-pragmatic/src/node.js","webpack://zoid/./node_modules/jsx-pragmatic/src/renderers/dom.js","webpack://zoid/./src/component/templates/container.jsx","webpack://zoid/./src/component/templates/component.jsx","webpack://zoid/./src/component/props.js","webpack://zoid/./src/component/component.js","webpack://zoid/./src/component/validate.js","webpack://zoid/./src/index.js"],"names":["root","factory","exports","module","define","amd","self","this","installedModules","__webpack_require__","moduleId","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","_extends","assign","target","arguments","length","source","apply","isPromise","item","Promise","window","Window","constructor","toString","then","err","flushPromise","dispatchedErrors","possiblyUnhandledPromiseHandlers","activeCount","flushActive","promise","resolve","startActive","endActive","ZalgoPromise","handler","_this","resolved","rejected","errorHandled","error","handlers","dispatching","stack","result","isAsync","res","reject","_proto","Error","dispatch","_this2","setTimeout","indexOf","push","j","dispatchPossiblyUnhandledError","asyncReject","_this3","_loop","_handlers$i","onSuccess","onError","catch","undefined","finally","onFinally","try","timeout","time","_this4","clearTimeout","toPromise","TypeError","all","promises","count","results","_loop2","prom","hash","keys","map","items","method","onPossiblyUnhandledException","cancel","splice","context","args","delay","flush","Zalgo","awaitActive","isRegex","PROTOCOL","MOCK","FILE","ABOUT","WILDCARD","WINDOW_TYPE","IFRAME","POPUP","IE_WIN_ACCESS_ERROR","isAboutProtocol","win","location","protocol","getParent","parent","getOpener","opener","canReadFromWindow","href","getActualDomain","host","getDomain","domain","mockDomain","isActuallySameDomain","desc","getOwnPropertyDescriptor","isSameDomain","assertSameDomain","isAncestorParent","child","childParent","getParents","getFrames","frames","len","frame","getAllChildFrames","_i3","_getFrames2","_i5","_getAllChildFrames2","childFrame","getTop","top","_i7","_getAllChildFrames4","getAllFramesInWindow","concat","iframeWindows","iframeFrames","isWindowClosed","allowMock","closed","message","mockclosed","iframeIndex","collection","safeIndexOf","contentWindow","parentNode","doc","ownerDocument","documentElement","contains","isFrameWindowClosed","getAncestor","anyMatch","collection1","collection2","_i17","item1","_i19","getDistanceFromTop","distance","isSameTopWindow","win1","win2","top1","top2","allFrames1","allFrames2","opener1","opener2","matchDomain","pattern","origin","Array","isArray","Boolean","match","JSON","stringify","some","subpattern","getDomainFromUrl","url","split","slice","join","onCloseWindow","callback","maxtime","Infinity","check","isWindow","obj","__cross_domain_utils_window_check__","objectIDs","awaitFrameLoadPromises","counter","Date","now","CrossDomainSafeWeakMap","weakmap","values","Math","random","WeakMap","freeze","testWeakMap","testKey","set","hasNativeWeakMap","_cleanupClosedWindows","delete","isSafeToReadWrite","entry","writable","index","has","getOrSet","base64encode","str","btoa","Buffer","from","uniqueID","chars","replace","charAt","floor","toISOString","toLowerCase","serializeArgs","subkey","val","uid","getObjectID","inlineMemoize","logic","cache","__inline_memoize_cache__","noop","once","called","stringifyError","level","newErr","extend","defineLazyProp","configurable","isObjectObject","isPlainObject","replaceObject","replacer","fullKey","itemKey","el","_loop3","isDefined","cleanup","tasks","cleaned","register","task","pop","assertExists","thing","isDocumentReady","document","body","readyState","urlEncode","waitForDocumentReady","interval","setInterval","clearInterval","parseQuery","queryString","params","_i2","_queryString$split2","pair","decodeURIComponent","extendQuery","originalQuery","props","filter","formatQuery","appendChild","container","isElement","element","Element","nodeType","style","getElementSafe","id","querySelector","elementReady","PopupOpenError","awaitFrameLoad","addEventListener","cleanIframes","linkFrameWindow","awaitFrameWindow","loadedFrame","iframe","options","attempts","attributes","tag","createElement","class","className","setAttribute","_i6","_Object$keys2","styleSheet","styleText","cssText","createTextNode","setStyle","html","innerHTML","frameBorder","allowTransparency","backgroundColor","getElement","removeChild","navigator","userAgent","event","removeEventListener","destroyElement","isElementClosed","onResize","_temp","_ref2","_ref2$width","width","_ref2$height","height","_ref2$interval","_ref2$win","currentWidth","offsetWidth","currentHeight","offsetHeight","observer","newWidth","newHeight","ResizeObserver","observe","MutationObserver","childList","subtree","characterData","loop","disconnect","isPerc","test","isPx","toPx","parseInt","toNum","toCSS","CHILD_WINDOW_TIMEOUT","ACK_TIMEOUT","ACK_TIMEOUT_KNOWN","RES_TIMEOUT","MESSAGE_TYPE","REQUEST","RESPONSE","ACK","MESSAGE_NAME","METHOD","HELLO","OPEN_TUNNEL","SERIALIZATION_TYPE","CROSS_DOMAIN_ZALGO_PROMISE","CROSS_DOMAIN_FUNCTION","CROSS_DOMAIN_WINDOW","getGlobal","getObj","globalStore","defStore","store","storeKey","defVal","del","reset","WildCard","getWildcard","global","WINDOW_WILDCARD","windowStore","winStore","getStore","getInstanceID","getHelloPromise","sayHello","_ref3","send","instanceID","_ref4","data","getWindowInstanceID","_ref5","_ref6","markWindowKnown","TYPE","FUNCTION","ERROR","PROMISE","REGEX","DATE","ARRAY","OBJECT","STRING","NUMBER","BOOLEAN","NULL","UNDEFINED","isSerializedType","__type__","determineType","serializeType","type","__val__","SERIALIZER","_SERIALIZER","_ref","code","toJSON","defaultSerializers","DESERIALIZER","_DESERIALIZER","RegExp","defaultDeserializers","cleanupProxyWindows","idToProxyWindow","_idToProxyWindow$keys2","shouldClean","ProxyWindow","serializedWindow","actualWindow","isProxyWindow","actualWindowPromise","setWindow","memoizedPromiseFunction","_len2","_key2","memoizePromise","getType","isPopup","isIframe","setLocation","setName","frameElement","close","focus","isClosed","_this5","getWindow","awaitWindow","matchWindow","_this6","unwrap","serialize","toProxyWindow","deserialize","on","addMethod","methodStore","proxyWindowMethods","lookupMethod","serializeFunction","destination","meth","methodSource","listenForFunctionCalls","__id__","__name__","serializeMessage","_serialize","serializers","serializer","serializePromise","serializeWindow","deserializeMessage","_deserialize","deserializers","parse","deserializer","serializedPromise","serializedFunction","getDeserializedFunction","opts","crossDomainFunctionWrapper","_arguments","fireAndForget","__origin__","__source__","deserializeFunction","_ref7","deserializeWindow","SEND_MESSAGE_STRATEGIES","serializedMessage","dom","forEach","postMessage","mockUserAgent","getUserAgent","foreignGlobal","receiveMessage","sendMessage","_serializeMessage","success","strategyName","__DOMAIN_REGEX__","getResponseListener","deleteResponseListener","isResponseListenerErrored","getRequestListener","requestListeners","winQualifier","nameListeners","domainListeners","_i4","_domainListeners$__DO2","_domainListeners$__DO3","regex","listener","RECEIVE_MESSAGE_TYPES","_RECEIVE_MESSAGE_TYPE","sendResponse","ack","response","pathname","handleError","receivedMessages","parsedMessage","parseMessage","requestListener","addRequestListener","listenersCollection","_win2","_i8","_i10","_domain2","_i12","existingListener","regexListeners","regexListener","strDomain","errorHandler","responseTimeout","childTimeout","reqPromises","requestPromise","actualParent","_i15","_getFrames8","isAncestor","awaitWindowHello","hasResult","markResponseListenerErrored","responseListener","addResponseListener","totalAckTimeout","isWindowKnown","totalResTimeout","ackTimeout","resTimeout","cycleTime","cycle","max","min","internalSerializeMessage","internalDeserializeMessage","initialized","messageEvent","sourceElement","originalEvent","messageListener","listenForMessages","initHello","setup","globalFor","getProxyElement","resize","ZOID","POST_MESSAGE","PROP_TYPE","PROP_SERIALIZATION","DOTIFY","BASE64","CONTEXT","DEFAULT_DIMENSIONS","WIDTH","HEIGHT","EVENT","RENDER","RENDERED","DISPLAY","CLOSE","PROPS","normalizeChildProp","component","helpers","prop","getPropDefinition","childDecorate","parseChildWindowName","windowName","_windowName$split","zoidcomp","encodedPayload","atob","base64decode","getChildPayload","ChildComponent","parentComponentWindow","onPropHandlers","autoResize","childPayload","getParentComponentWindow","checkParentDomain","initialProps","getPropsByRef","setProps","watchForClose","init","buildExports","watchForResize","getHelpers","onProps","allowedParentDomains","ref","getNthParent","getNthParentFromTop","ancestor","_getAllFramesInWindow2","windows","getProps","isUpdate","existingProps","sameDomain","alias","_component$getPropNam2","getPropNames","normalizeChildProps","_this$onPropHandlers2","checkClose","destroy","getAutoResize","_ref3$width","_ref3$height","_ref3$element","_this4$getAutoResize","updateProps","RENDER_DRIVERS","openOnClick","openFrame","title","open","proxyFrame","frameWatcher","safeInterval","watchElementForClose","clean","_requestPromises$get2","cleanUpWindow","openPrerenderFrame","openPrerender","proxyWin","proxyPrerenderFrame","prerenderFrame","prerenderFrameWindow","delegate","proxyContainer","getQueryParam","queryParam","getQueryValue","queryValue","ParentComponent","driver","initPromise","state","setupEvents","registerActiveComponent","destroyActiveComponent","watchForUnload","triggered","eventName","handlerList","cancelled","trigger","_len3","_key3","triggerOnce","_len4","_key4","onRender","onDisplay","onRendered","onClose","render","log","initialDomain","getInitialDomain","checkAllowRender","buildUrl","getProxyContainer","renderContainer","setState","setProxyWin","prerender","proxyPrerenderWin","loadUrl","setWindowName","buildWindowName","openBridge","runTimeout","containerElement","buildChildPayload","getPropsRef","getPropsForChild","propRef","_ref7$target","getWindowRef","buildParentExports","_ref8","validate","instance","propNames","aliases","propDef","default","_Object$keys4","decorate","normalizeProps","_this$component$getPr2","required","propsDef","builtinProps","serialization","dotify","prefix","newobj","every","_Object$keys6","dotkey","query","originalUrl","originalHash","_url$split","_originalUrl$split","hashString","extendUrl","normalizeMockUrl","getUrl","sendToChild","_this7","_this8","_this9","_this10","windowProp","_this11","_this12","_this13","_this$component$getPr4","propName","allowDelegate","overridesPromise","overrides","_ref9","_this$driver$delegate2","_this14","_this15","closeWindowListener","_this16","unloadWindowListener","_this17","initChild","_this18","_this19","_ref10","_ref11","_this20","_this21","secondClosed","_this22","_ref12","_this23","prerenderTemplate","prerenderWindow","isBlankDomain","renderTemplate","tagName","children","writeElementToWindow","_ref13","_ref13$width","_ref13$height","_ref13$element","_ref14","renderer","_ref15","_this24","dimensions","_ref16","_this25","_ref17","innerContainer","containerTemplate","_this26","_this27","DelegateComponent","watchForSourceClose","getDelegate","getOverrides","closeSourceWindowListener","_inheritsLoose","subClass","superClass","__proto__","react","React","ReactDOM","_React$Component","_class","componentDidMount","findDOMNode","componentDidUpdate","Component","vue","Vue","inheritAttrs","mounted","$el","$attrs","watch","deep","angular","ng","directive","g","toUpperCase","scope","restrict","controller","$scope","$element","$root","$$phase","$apply","safeApply","$watch","angular2","zoid","AngularComponent","NgModule","ElementRef","NgZone","internalProps","zone","run","ComponentInstance","selector","template","inputs","Class","elementRef","_props","ngOnInit","targetElement","nativeElement","ngDoCheck","obj1","obj2","checked","equals","declarations","Node","isElementNode","isTextNode","isFragmentNode","ElementNode","_Node","_proto2","getTag","isTag","getText","TextNode","_Node2","text","_proto3","FragmentNode","_Node3","_proto4","normalizeChild","normalizeChildren","normalizedChild","_normalizedChild$chil2","subchild","node","_len","_key","ELEMENT_TAG","ELEMENT_PROP","CREATE_ELEMENT","_CREATE_ELEMENT","ADD_CHILDREN","_ADD_CHILDREN","firstChild","docElement","domRenderer","_ref9$doc","addProps","_el$querySelectorAll2","querySelectorAll","script","newScript","textContent","replaceChild","fixScripts","addChildren","CLASS","VISIBLE","INVISIBLE","defaultContainerTemplate","_ref$dimensions","classList","add","remove","defaultPrerenderTemplate","defaultNoop","decorateOnce","bridgeUrl","defaultContext","driverCache","xprops","logger","PROP_TYPE_LIST","validatePropDefinitions","components","_ref$width","_ref$height","popup","debug","info","warn","registerChild","listenDelegate","dep","drivers","isChild","_ref2$data","canRenderTo","getBridgeUrl","payload","getDefaultContainer","getDefaultContext","renderTo","activeComponents","destroyAll","__webpack_exports__","component_destroyAll","component_Component"],"mappings":"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","file":"zoid.frameworks.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"zoid\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"zoid\"] = factory();\n\telse\n\t\troot[\"zoid\"] = factory();\n})((typeof self !== 'undefined' ? self : this), function() {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 0);\n","export default function _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}","/* @flow */\n\nexport function isPromise(item : mixed) : boolean {\n    try {\n        if (!item) {\n            return false;\n        }\n\n        if (typeof Promise !== 'undefined' && item instanceof Promise) {\n            return true;\n        }\n\n        if (typeof window !== 'undefined' && window.Window && item instanceof window.Window) {\n            return false;\n        }\n\n        if (typeof window !== 'undefined' && window.constructor && item instanceof window.constructor) {\n            return false;\n        }\n\n        let toString = ({}).toString;\n\n        if (toString) {\n            let name = toString.call(item);\n\n            if (name === '[object Window]' || name === '[object global]' || name === '[object DOMWindow]') {\n                return false;\n            }\n        }\n\n        if (typeof item.then === 'function') {\n            return true;\n        }\n    } catch (err) {\n        return false;\n    }\n\n    return false;\n}\n","/* @flow */\n\nimport type { ZalgoPromise } from './promise';\n\nconst dispatchedErrors = [];\nconst possiblyUnhandledPromiseHandlers = [];\n\nexport function dispatchPossiblyUnhandledError<T>(err : mixed, promise : ZalgoPromise<T>) {\n\n    if (dispatchedErrors.indexOf(err) !== -1) {\n        return;\n    }\n\n    dispatchedErrors.push(err);\n\n    setTimeout(() => {\n        if (__DEBUG__) {\n            // $FlowFixMe\n            throw new Error(`${ err.stack || err.toString() }\\n\\nFrom promise:\\n\\n${ promise.stack }`);\n        }\n\n        throw err;\n    }, 1);\n\n    for (let j = 0; j < possiblyUnhandledPromiseHandlers.length; j++) {\n        // $FlowFixMe\n        possiblyUnhandledPromiseHandlers[j](err, promise);\n    }\n}\n\nexport function onPossiblyUnhandledException(handler : (mixed, promise? : ZalgoPromise<*>) => void) : { cancel : () => void } {\n    possiblyUnhandledPromiseHandlers.push(handler);\n\n    return {\n        cancel() {\n            possiblyUnhandledPromiseHandlers.splice(possiblyUnhandledPromiseHandlers.indexOf(handler), 1);\n        }\n    };\n}\n","/* @flow */\n\nimport type { ZalgoPromise } from './promise';\n\nlet activeCount = 0;\nlet flushPromise;\n\nfunction flushActive() {\n    if (!activeCount && flushPromise) {\n        const promise = flushPromise;\n        flushPromise = null;\n        promise.resolve();\n    }\n}\n\nexport function startActive() {\n    activeCount += 1;\n}\n\nexport function endActive() {\n    activeCount -= 1;\n    flushActive();\n}\n\nexport function awaitActive(Zalgo : Class<ZalgoPromise<*>>) : ZalgoPromise<void> { // eslint-disable-line no-undef\n    let promise = flushPromise = flushPromise || new Zalgo();\n    flushActive();\n    return promise;\n}\n","/* @flow */\n\nimport { isPromise } from './utils';\nimport { onPossiblyUnhandledException, dispatchPossiblyUnhandledError } from './exceptions';\nimport { startActive, endActive, awaitActive } from './flush';\n\nexport class ZalgoPromise<R : mixed> {\n\n    resolved : boolean\n    rejected : boolean\n    errorHandled : boolean\n    value : R\n    error : mixed\n    handlers : Array<{\n        promise : ZalgoPromise<*>,\n        onSuccess : void | (result : R) => mixed,\n        onError : void | (error : mixed) => mixed\n    }>\n    dispatching : boolean\n    stack : string\n\n    constructor(handler : ?(resolve : (result : R) => void, reject : (error : mixed) => void) => void) {\n\n        this.resolved = false;\n        this.rejected = false;\n        this.errorHandled = false;\n\n        this.handlers = [];\n\n        if (handler) {\n\n            let result;\n            let error;\n            let resolved = false;\n            let rejected = false;\n            let isAsync = false;\n\n            startActive();\n\n            try {\n                handler(res => {\n                    if (isAsync) {\n                        this.resolve(res);\n                    } else {\n                        resolved = true;\n                        result = res;\n                    }\n\n                }, err => {\n                    if (isAsync) {\n                        this.reject(err);\n                    } else {\n                        rejected = true;\n                        error = err;\n                    }\n                });\n\n            } catch (err) {\n                endActive();\n                this.reject(err);\n                return;\n            }\n\n            endActive();\n\n            isAsync = true;\n\n            if (resolved) {\n                // $FlowFixMe\n                this.resolve(result);\n            } else if (rejected) {\n                this.reject(error);\n            }\n        }\n\n        if (__DEBUG__) {\n            try {\n                throw new Error(`ZalgoPromise`);\n            } catch (err) {\n                this.stack = err.stack;\n            }\n        }\n    }\n\n    resolve(result : R) : ZalgoPromise<R> {\n        if (this.resolved || this.rejected) {\n            return this;\n        }\n\n        if (isPromise(result)) {\n            throw new Error('Can not resolve promise with another promise');\n        }\n\n        this.resolved = true;\n        this.value = result;\n        this.dispatch();\n\n        return this;\n    }\n\n    reject(error : mixed) : ZalgoPromise<R> {\n        if (this.resolved || this.rejected) {\n            return this;\n        }\n\n        if (isPromise(error)) {\n            throw new Error('Can not reject promise with another promise');\n        }\n\n        if (!error) {\n            let err = (error && typeof error.toString === 'function' ? error.toString() : Object.prototype.toString.call(error));\n            error = new Error(`Expected reject to be called with Error, got ${ err }`);\n        }\n\n        this.rejected = true;\n        this.error = error;\n\n        if (!this.errorHandled) {\n            setTimeout(() => {\n                if (!this.errorHandled) {\n                    dispatchPossiblyUnhandledError(error, this);\n                }\n            }, 1);\n        }\n\n        this.dispatch();\n\n        return this;\n    }\n\n    asyncReject(error : mixed) : ZalgoPromise<R> {\n        this.errorHandled = true;\n        this.reject(error);\n        return this;\n    }\n    \n    dispatch() {\n\n        let { dispatching, resolved, rejected, handlers } = this;\n\n        if (dispatching) {\n            return;\n        }\n\n        if (!resolved && !rejected) {\n            return;\n        }\n\n        this.dispatching = true;\n        startActive();\n\n        for (let i = 0; i < handlers.length; i++) {\n\n            let { onSuccess, onError, promise } = handlers[i];\n\n            let result;\n\n            if (resolved) {\n\n                try {\n                    result = onSuccess ? onSuccess(this.value) : this.value;\n                } catch (err) {\n                    promise.reject(err);\n                    continue;\n                }\n\n            } else if (rejected) {\n\n                if (!onError) {\n                    promise.reject(this.error);\n                    continue;\n                }\n\n                try {\n                    result = onError(this.error);\n                } catch (err) {\n                    promise.reject(err);\n                    continue;\n                }\n            }\n\n            if (result instanceof ZalgoPromise && (result.resolved || result.rejected)) {\n\n                if (result.resolved) {\n                    promise.resolve(result.value);\n                } else {\n                    promise.reject(result.error);\n                }\n\n                result.errorHandled = true;\n\n            } else if (isPromise(result)) {\n\n                if (result instanceof ZalgoPromise && (result.resolved || result.rejected)) {\n                    if (result.resolved) {\n                        promise.resolve(result.value);\n                    } else {\n                        promise.reject(result.error);\n                    }\n\n                } else {\n                    // $FlowFixMe\n                    result.then(res => {\n                        promise.resolve(res);\n                    }, err => {\n                        promise.reject(err);\n                    });\n                }\n\n            } else {\n\n                promise.resolve(result);\n            }\n        }\n\n        handlers.length = 0;\n        this.dispatching = false;\n        endActive();\n    }\n\n    then<X : mixed, Y : mixed>(onSuccess : void | (result : R) => (ZalgoPromise<X> | Y), onError : void | (error : mixed) => (ZalgoPromise<X> | Y)) : ZalgoPromise<X | Y> {\n\n        if (onSuccess && typeof onSuccess !== 'function' && !onSuccess.call) {\n            throw new Error('Promise.then expected a function for success handler');\n        }\n\n        if (onError && typeof onError !== 'function' && !onError.call) {\n            throw new Error('Promise.then expected a function for error handler');\n        }\n\n        let promise : ZalgoPromise<X | Y> = new ZalgoPromise();\n\n        this.handlers.push({\n            promise,\n            onSuccess,\n            onError\n        });\n\n        this.errorHandled = true;\n\n        this.dispatch();\n\n        return promise;\n    }\n\n    catch<X : mixed, Y : mixed>(onError : (error : mixed) => ZalgoPromise<X> | Y) : ZalgoPromise<X | Y> {\n        return this.then(undefined, onError);\n    }\n\n    finally(onFinally : () => mixed) : ZalgoPromise<R> {\n\n        if (onFinally && typeof onFinally !== 'function' && !onFinally.call) {\n            throw new Error('Promise.finally expected a function');\n        }\n\n        return this.then((result) => {\n            return ZalgoPromise.try(onFinally)\n                .then(() => {\n                    return result;\n                });\n        }, (err) => {\n            return ZalgoPromise.try(onFinally)\n                .then(() => {\n                    throw err;\n                });\n        });\n    }\n\n    timeout(time : number, err : ?Error) : ZalgoPromise<R> {\n\n        if (this.resolved || this.rejected) {\n            return this;\n        }\n\n        let timeout = setTimeout(() => {\n\n            if (this.resolved || this.rejected) {\n                return;\n            }\n\n            this.reject(err || new Error(`Promise timed out after ${ time }ms`));\n\n        }, time);\n\n        return this.then(result => {\n            clearTimeout(timeout);\n            return result;\n        });\n    }\n\n    // $FlowFixMe\n    toPromise() : Promise<R> {\n        // $FlowFixMe\n        if (typeof Promise === 'undefined') {\n            throw new TypeError(`Could not find Promise`);\n        }\n        // $FlowFixMe\n        return Promise.resolve(this); // eslint-disable-line compat/compat\n    }\n\n    static resolve<X : mixed>(value : X | ZalgoPromise<X>) : ZalgoPromise<X> {\n\n        if (value instanceof ZalgoPromise) {\n            return value;\n        }\n\n        if (isPromise(value)) {\n            // $FlowFixMe\n            return new ZalgoPromise((resolve, reject) => value.then(resolve, reject));\n        }\n\n        return new ZalgoPromise().resolve(value);\n    }\n\n    static reject(error : mixed) : ZalgoPromise<R> {\n        return new ZalgoPromise().reject(error);\n    }\n\n    static asyncReject(error : mixed) : ZalgoPromise<R> {\n        return new ZalgoPromise().asyncReject(error);\n    }\n\n    static all<X : [*] | [*, *] | [*, *, *] | [*, *, *, *] | [*, *, *, *, *] | [*, *, *, *, *, *] | [*, *, *, *, *, *, *] | [*, *, *, *, *, *, *, *] | [*, *, *, *, *, *, *, *, *] | Array<mixed>>(promises : X) : ZalgoPromise<$TupleMap<X, <Y>(ZalgoPromise<Y> | Y) => Y>> { // eslint-disable-line no-undef\n\n        let promise = new ZalgoPromise();\n        let count = promises.length;\n        let results = [];\n\n        if (!count) {\n            promise.resolve(results);\n            return promise;\n        }\n\n        for (let i = 0; i < promises.length; i++) {\n            let prom = promises[i];\n\n            if (prom instanceof ZalgoPromise) {\n                if (prom.resolved) {\n                    results[i] = prom.value;\n                    count -= 1;\n                    continue;\n                }\n            } else if (!isPromise(prom)) {\n                results[i] = prom;\n                count -= 1;\n                continue;\n            }\n\n            ZalgoPromise.resolve(prom).then(result => {\n                results[i] = result;\n                count -= 1;\n                if (count === 0) {\n                    promise.resolve(results);\n                }\n            }, err => {\n                promise.reject(err);\n            });\n        }\n\n        if (count === 0) {\n            promise.resolve(results);\n        }\n\n        return promise;\n    }\n\n    static hash<O : { [string] : * }>(promises : O) : ZalgoPromise<$ObjMap<O, <Y>(ZalgoPromise<Y> | Y) => Y>> { // eslint-disable-line no-undef\n        let result = {};\n        \n        return ZalgoPromise.all(Object.keys(promises).map(key => {\n            return ZalgoPromise.resolve(promises[key]).then(value => {\n                result[key] = value;\n            });\n        })).then(() => {\n            return result;\n        });\n    }\n\n    static map<T, X>(items : Array<T>, method : (T) => (ZalgoPromise<X> | X)) : ZalgoPromise<Array<X>> {\n        // $FlowFixMe\n        return ZalgoPromise.all(items.map(method));\n    }\n\n    static onPossiblyUnhandledException(handler : (err : mixed) => void) : { cancel : () => void } {\n        return onPossiblyUnhandledException(handler);\n    }\n\n    static try<X : mixed, Y : mixed, C : mixed, A : Array<mixed>>(method : (...args : A) => (ZalgoPromise<X> | Y), context : ?C, args : ?A) : ZalgoPromise<X | Y> {\n\n        if (method && typeof method !== 'function' && !method.call) {\n            throw new Error('Promise.try expected a function');\n        }\n\n        let result;\n\n        startActive();\n        \n        try {\n            // $FlowFixMe\n            result = method.apply(context, args || []);\n        } catch (err) {\n            endActive();\n            return ZalgoPromise.reject(err);\n        }\n\n        endActive();\n\n        return ZalgoPromise.resolve(result);\n    }\n\n    static delay(delay : number) : ZalgoPromise<void> {\n        return new ZalgoPromise(resolve => {\n            setTimeout(resolve, delay);\n        });\n    }\n\n    static isPromise(value : mixed) : boolean {\n\n        if (value && value instanceof ZalgoPromise) {\n            return true;\n        }\n\n        return isPromise(value);\n    }\n\n    static flush() : ZalgoPromise<void> {\n        return awaitActive(ZalgoPromise);\n    }\n}\n","/* @flow */\n\nexport function isRegex(item : mixed) : boolean {\n    return Object.prototype.toString.call(item) === '[object RegExp]';\n}\n\n// eslint-disable-next-line no-unused-vars\nexport function noop(...args : Array<mixed>) {\n    // pass\n}\n","/* @flow */\n\nexport const PROTOCOL = {\n    MOCK:  ('mock:' : 'mock:'),\n    FILE:  ('file:' : 'file:'),\n    ABOUT: ('about:' : 'about:')\n};\n\nexport const WILDCARD = '*';\n\nexport const WINDOW_TYPE = {\n    IFRAME: ('iframe' : 'iframe'),\n    POPUP:  ('popup' : 'popup')\n};\n","/* @flow */\n/* eslint max-lines: 0 */\n\nimport { isRegex, noop } from './util';\nimport type { CrossDomainWindowType, SameDomainWindowType, DomainMatcher } from './types';\nimport { PROTOCOL, WILDCARD } from './constants';\n\nlet IE_WIN_ACCESS_ERROR = 'Call was rejected by callee.\\r\\n';\n\nexport function isFileProtocol(win : SameDomainWindowType = window) : boolean {\n    return win.location.protocol === PROTOCOL.FILE;\n}\n\nexport function isAboutProtocol(win : SameDomainWindowType = window) : boolean {\n    return win.location.protocol === PROTOCOL.ABOUT;\n}\n\nexport function getParent(win : ?CrossDomainWindowType) : ?CrossDomainWindowType {\n\n    if (!win) {\n        return;\n    }\n\n    try {\n        if (win.parent && win.parent !== win) {\n            return win.parent;\n        }\n    } catch (err) {\n        // pass\n    }\n}\n\nexport function getOpener(win : ?CrossDomainWindowType) : ?CrossDomainWindowType {\n\n    if (!win) {\n        return;\n    }\n\n    // Make sure we're not actually an iframe which has had window.open() called on us\n    if (getParent(win)) {\n        return;\n    }\n\n    try {\n        return win.opener;\n    } catch (err) {\n        // pass\n    }\n}\n\nexport function canReadFromWindow(win : CrossDomainWindowType | SameDomainWindowType) : boolean {\n    try {\n        // $FlowFixMe\n        noop(win && win.location && win.location.href);\n        return true;\n    } catch (err) {\n        // pass\n    }\n\n    return false;\n}\n\nexport function getActualDomain(win : ?SameDomainWindowType) : string {\n\n    win = win || window;\n\n    let location = win.location;\n\n    if (!location) {\n        throw new Error(`Can not read window location`);\n    }\n\n    let protocol = location.protocol;\n\n    if (!protocol) {\n        throw new Error(`Can not read window protocol`);\n    }\n\n    if (protocol === PROTOCOL.FILE) {\n        return `${ PROTOCOL.FILE }//`;\n    }\n\n    if (protocol === PROTOCOL.ABOUT) {\n\n        let parent = getParent(win);\n        if (parent && canReadFromWindow(parent)) {\n            // $FlowFixMe\n            return getActualDomain(parent);\n        }\n\n        return `${ PROTOCOL.ABOUT }//`;\n    }\n\n    let host = location.host;\n\n    if (!host) {\n        throw new Error(`Can not read window host`);\n    }\n\n    return `${ protocol }//${ host }`;\n}\n\nexport function getDomain(win : ?SameDomainWindowType) : string {\n\n    win = win || window;\n\n    let domain = getActualDomain(win);\n\n    if (domain && win.mockDomain && win.mockDomain.indexOf(PROTOCOL.MOCK) === 0) {\n        return win.mockDomain;\n    }\n\n    return domain;\n}\n\nexport function isBlankDomain(win : CrossDomainWindowType) : boolean {\n    try {\n        // $FlowFixMe\n        if (!win.location.href) {\n            return true;\n        }\n\n        if (win.location.href === 'about:blank') {\n            return true;\n        }\n    } catch (err) {\n        // pass\n    }\n\n    return false;\n}\n\nexport function isActuallySameDomain(win : CrossDomainWindowType) : boolean {\n\n    try {\n        if (win === window) {\n            return true;\n        }\n\n    } catch (err) {\n        // pass\n    }\n\n    try {\n        let desc = Object.getOwnPropertyDescriptor(win, 'location');\n\n        if (desc && desc.enumerable === false) {\n            return false;\n        }\n\n    } catch (err) {\n        // pass\n    }\n\n    try {\n        // $FlowFixMe\n        if (isAboutProtocol(win) && canReadFromWindow(win)) {\n            return true;\n        }\n    } catch (err) {\n        // pass\n    }\n\n    try {\n        // $FlowFixMe\n        if (getActualDomain(win) === getActualDomain(window)) {\n            return true;\n        }\n\n    } catch (err) {\n        // pass\n    }\n\n    return false;\n}\n\nexport function isSameDomain(win : CrossDomainWindowType | SameDomainWindowType) : boolean {\n\n    if (!isActuallySameDomain(win)) {\n        return false;\n    }\n\n    try {\n\n        if (win === window) {\n            return true;\n        }\n\n        // $FlowFixMe\n        if (isAboutProtocol(win) && canReadFromWindow(win)) {\n            return true;\n        }\n\n        // $FlowFixMe\n        if (getDomain(window) === getDomain(win)) {\n            return true;\n        }\n\n    } catch (err) {\n        // pass\n    }\n\n    return false;\n}\n\n\nexport function assertSameDomain(win : CrossDomainWindowType | SameDomainWindowType) : SameDomainWindowType {\n    if (!isSameDomain(win)) {\n        throw new Error(`Expected window to be same domain`);\n    }\n\n    // $FlowFixMe\n    return win;\n}\n\nexport function getParents(win : CrossDomainWindowType) : Array<CrossDomainWindowType> {\n\n    let result = [];\n\n    try {\n\n        while (win.parent !== win) {\n            result.push(win.parent);\n            win = win.parent;\n        }\n\n    } catch (err) {\n        // pass\n    }\n\n    return result;\n}\n\nexport function isAncestorParent(parent : CrossDomainWindowType, child : CrossDomainWindowType) : boolean {\n\n    if (!parent || !child) {\n        return false;\n    }\n\n    let childParent = getParent(child);\n\n    if (childParent) {\n        return childParent === parent;\n    }\n\n    if (getParents(child).indexOf(parent) !== -1) {\n        return true;\n    }\n\n    return false;\n}\n\nexport function getFrames(win : CrossDomainWindowType) : Array<CrossDomainWindowType> {\n\n    let result = [];\n\n    let frames;\n\n    try {\n        frames = win.frames;\n    } catch (err) {\n        frames = win;\n    }\n\n    let len;\n\n    try {\n        len = frames.length;\n    } catch (err) {\n        // pass\n    }\n\n    if (len === 0) {\n        return result;\n    }\n\n    if (len) {\n        for (let i = 0; i < len; i++) {\n\n            let frame;\n\n            try {\n                frame = frames[i];\n            } catch (err) {\n                continue;\n            }\n\n            result.push(frame);\n        }\n\n        return result;\n    }\n\n    for (let i = 0; i < 100; i++) {\n        let frame;\n\n        try {\n            frame = frames[i];\n        } catch (err) {\n            return result;\n        }\n\n        if (!frame) {\n            return result;\n        }\n\n        result.push(frame);\n    }\n\n    return result;\n}\n\n\nexport function getAllChildFrames(win : CrossDomainWindowType) : Array<CrossDomainWindowType> {\n\n    let result = [];\n\n    for (let frame of getFrames(win)) {\n        result.push(frame);\n\n        for (let childFrame of getAllChildFrames(frame)) {\n            result.push(childFrame);\n        }\n    }\n\n    return result;\n}\n\nexport function getTop(win : CrossDomainWindowType) : ?CrossDomainWindowType {\n\n    if (!win) {\n        return;\n    }\n\n    try {\n        if (win.top) {\n            return win.top;\n        }\n    } catch (err) {\n        // pass\n    }\n\n    if (getParent(win) === win) {\n        return win;\n    }\n\n    try {\n        if (isAncestorParent(window, win) && window.top) {\n            return window.top;\n        }\n    } catch (err) {\n        // pass\n    }\n\n    try {\n        if (isAncestorParent(win, window) && window.top) {\n            return window.top;\n        }\n    } catch (err) {\n        // pass\n    }\n\n    for (let frame of getAllChildFrames(win)) {\n        try {\n            if (frame.top) {\n                return frame.top;\n            }\n        } catch (err) {\n            // pass\n        }\n\n        if (getParent(frame) === frame) {\n            return frame;\n        }\n    }\n}\n\nexport function getNextOpener(win? : CrossDomainWindowType = window) : ?CrossDomainWindowType {\n    return getOpener(getTop(win) || win);\n}\n\nexport function getUltimateTop(win? : CrossDomainWindowType = window) : CrossDomainWindowType {\n    let opener = getNextOpener(win);\n\n    if (opener) {\n        return getUltimateTop(opener);\n    }\n\n    return top;\n}\n\nexport function getAllFramesInWindow(win : CrossDomainWindowType) : Array<CrossDomainWindowType> {\n    let top = getTop(win);\n\n    if (!top) {\n        throw new Error(`Can not determine top window`);\n    }\n\n    return [ ...getAllChildFrames(top), top ];\n}\n\nexport function getAllWindows(win? : CrossDomainWindowType = window) : $ReadOnlyArray<CrossDomainWindowType> {\n    let frames = getAllFramesInWindow(win);\n    let opener = getNextOpener(win);\n\n    if (opener) {\n        return [ ...getAllWindows(opener), ...frames ];\n    } else {\n        return frames;\n    }\n}\n\nexport function isTop(win : CrossDomainWindowType) : boolean {\n    return win === getTop(win);\n}\n\nexport function isFrameWindowClosed(frame : HTMLIFrameElement) : boolean {\n\n    if (!frame.contentWindow) {\n        return true;\n    }\n\n    if (!frame.parentNode) {\n        return true;\n    }\n\n    let doc = frame.ownerDocument;\n\n    if (doc && doc.documentElement && !doc.documentElement.contains(frame)) {\n        return true;\n    }\n\n    return false;\n}\n\nfunction safeIndexOf<T>(collection : Array<T>, item : T) : number {\n    for (let i = 0; i < collection.length; i++) {\n\n        try {\n            if (collection[i] === item) {\n                return i;\n            }\n        } catch (err) {\n            // pass\n        }\n    }\n\n    return -1;\n}\n\nlet iframeWindows = [];\nlet iframeFrames = [];\n\nexport function isWindowClosed(win : CrossDomainWindowType, allowMock : boolean = true) : boolean {\n\n    try {\n        if (win === window) {\n            return false;\n        }\n    } catch (err) {\n        return true;\n    }\n\n    try {\n        if (!win) {\n            return true;\n        }\n\n    } catch (err) {\n        return true;\n    }\n\n    try {\n        if (win.closed) {\n            return true;\n        }\n\n    } catch (err) {\n\n        // I love you so much IE\n\n        if (err && err.message === IE_WIN_ACCESS_ERROR) {\n            return false;\n        }\n\n        return true;\n    }\n\n\n    if (allowMock && isSameDomain(win)) {\n        try {\n            // $FlowFixMe\n            if (win.mockclosed) {\n                return true;\n            }\n        } catch (err) {\n            // pass\n        }\n    }\n\n    // Mobile safari\n\n    try {\n        if (!win.parent || !win.top) {\n            return true;\n        }\n    } catch (err) {\n        // pass\n    }\n\n    // Yes, this actually happens in IE. win === win errors out when the window\n    // is from an iframe, and the iframe was removed from the page.\n\n    try {\n        noop(win === win); // eslint-disable-line no-self-compare\n    } catch (err) {\n        return true;\n    }\n\n    // IE orphaned frame\n\n    let iframeIndex = safeIndexOf(iframeWindows, win);\n\n    if (iframeIndex !== -1) {\n        let frame = iframeFrames[iframeIndex];\n\n        if (frame && isFrameWindowClosed(frame)) {\n            return true;\n        }\n    }\n\n    return false;\n}\n\nfunction cleanIframes() {\n    for (let i = 0; i < iframeWindows.length; i++) {\n        let closed = false;\n\n        try {\n            closed = iframeWindows[i].closed;\n        } catch (err) {\n            // pass\n        }\n\n        if (closed) {\n            iframeFrames.splice(i, 1);\n            iframeWindows.splice(i, 1);\n        }\n    }\n}\n\nexport function linkFrameWindow(frame : HTMLIFrameElement) {\n\n    cleanIframes();\n\n    if (frame && frame.contentWindow) {\n        try {\n            iframeWindows.push(frame.contentWindow);\n            iframeFrames.push(frame);\n        } catch (err) {\n            // pass\n        }\n    }\n}\n\nexport function getUserAgent(win : ?SameDomainWindowType) : string {\n    win = win || window;\n    return win.navigator.mockUserAgent || win.navigator.userAgent;\n}\n\n\nexport function getFrameByName(win : CrossDomainWindowType, name : string) : ?CrossDomainWindowType {\n\n    let winFrames = getFrames(win);\n\n    for (let childFrame of winFrames) {\n        try {\n            // $FlowFixMe\n            if (isSameDomain(childFrame) && childFrame.name === name && winFrames.indexOf(childFrame) !== -1) {\n                return childFrame;\n            }\n        } catch (err) {\n            // pass\n        }\n    }\n\n    try {\n        // $FlowFixMe\n        if (winFrames.indexOf(win.frames[name]) !== -1) {\n            // $FlowFixMe\n            return win.frames[name];\n        }\n    } catch (err) {\n        // pass\n    }\n\n    try {\n        if (winFrames.indexOf(win[name]) !== -1) {\n            return win[name];\n        }\n    } catch (err) {\n        // pass\n    }\n}\n\nexport function findChildFrameByName(win : CrossDomainWindowType, name : string) : ?CrossDomainWindowType {\n\n    let frame = getFrameByName(win, name);\n\n    if (frame) {\n        return frame;\n    }\n\n    for (let childFrame of getFrames(win)) {\n        let namedFrame = findChildFrameByName(childFrame, name);\n\n        if (namedFrame) {\n            return namedFrame;\n        }\n    }\n}\n\nexport function findFrameByName(win : CrossDomainWindowType, name : string) : ?CrossDomainWindowType {\n\n    let frame;\n\n    frame = getFrameByName(win, name);\n\n    if (frame) {\n        return frame;\n    }\n\n    let top = getTop(win) || win;\n\n    return findChildFrameByName(top, name);\n}\n\nexport function isParent(win : CrossDomainWindowType, frame : CrossDomainWindowType) : boolean {\n\n    let frameParent = getParent(frame);\n\n    if (frameParent) {\n        return frameParent === win;\n    }\n\n    for (let childFrame of getFrames(win)) {\n        if (childFrame === frame) {\n            return true;\n        }\n    }\n\n    return false;\n}\n\nexport function isOpener(parent : CrossDomainWindowType, child : CrossDomainWindowType) : boolean {\n\n    return parent === getOpener(child);\n}\n\nexport function getAncestor(win : ?CrossDomainWindowType) : ?CrossDomainWindowType {\n    win = win || window;\n\n    let opener = getOpener(win);\n\n    if (opener) {\n        return opener;\n    }\n\n    let parent = getParent(win);\n\n    if (parent) {\n        return parent;\n    }\n}\n\nexport function getAncestors(win : CrossDomainWindowType) : Array<CrossDomainWindowType> {\n\n    let results = [];\n\n    let ancestor = win;\n\n    while (ancestor) {\n        ancestor = getAncestor(ancestor);\n        if (ancestor) {\n            results.push(ancestor);\n        }\n    }\n\n    return results;\n}\n\n\nexport function isAncestor(parent : CrossDomainWindowType, child : CrossDomainWindowType) : boolean {\n\n    let actualParent = getAncestor(child);\n\n    if (actualParent) {\n        if (actualParent === parent) {\n            return true;\n        }\n\n        return false;\n    }\n\n    if (child === parent) {\n        return false;\n    }\n\n    if (getTop(child) === child) {\n        return false;\n    }\n\n    for (let frame of getFrames(parent)) {\n        if (frame === child) {\n            return true;\n        }\n    }\n\n    return false;\n}\n\nexport function isPopup() : boolean {\n    return Boolean(getOpener(window));\n}\n\nexport function isIframe() : boolean {\n    return Boolean(getParent(window));\n}\n\nexport function isFullpage() : boolean {\n    return Boolean(!isIframe() && !isPopup());\n}\n\nfunction anyMatch(collection1, collection2) : boolean {\n\n    for (let item1 of collection1) {\n        for (let item2 of collection2) {\n            if (item1 === item2) {\n                return true;\n            }\n        }\n    }\n\n    return false;\n}\n\nexport function getDistanceFromTop(win : CrossDomainWindowType = window) : number {\n    let distance = 0;\n    let parent = win;\n\n    while (parent) {\n        parent = getParent(parent);\n        if (parent) {\n            distance += 1;\n        }\n    }\n\n    return distance;\n}\n\nexport function getNthParent(win : CrossDomainWindowType, n : number = 1) : ?CrossDomainWindowType {\n    let parent = win;\n\n    for (let i = 0; i < n; i++) {\n        if (!parent) {\n            return;\n        }\n\n        parent = getParent(parent);\n    }\n\n    return parent;\n}\n\nexport function getNthParentFromTop(win : CrossDomainWindowType, n : number = 1) : ?CrossDomainWindowType {\n    return getNthParent(win, getDistanceFromTop(win) - n);\n}\n\nexport function isSameTopWindow(win1 : CrossDomainWindowType, win2 : CrossDomainWindowType) : boolean {\n\n    let top1 = getTop(win1) || win1;\n    let top2 = getTop(win2) || win2;\n\n    try {\n        if (top1 && top2) {\n            if (top1 === top2) {\n                return true;\n            }\n\n            return false;\n        }\n    } catch (err) {\n        // pass\n    }\n\n    let allFrames1 = getAllFramesInWindow(win1);\n    let allFrames2 = getAllFramesInWindow(win2);\n\n    if (anyMatch(allFrames1, allFrames2)) {\n        return true;\n    }\n\n    let opener1 = getOpener(top1);\n    let opener2 = getOpener(top2);\n\n    if (opener1 && anyMatch(getAllFramesInWindow(opener1), allFrames2)) {\n        return false;\n    }\n\n    if (opener2 && anyMatch(getAllFramesInWindow(opener2), allFrames1)) {\n        return false;\n    }\n\n    return false;\n}\n\nexport function matchDomain(pattern : DomainMatcher, origin : DomainMatcher) : boolean {\n\n    if (typeof pattern === 'string') {\n\n        if (typeof origin === 'string') {\n            return pattern === WILDCARD || origin === pattern;\n        }\n\n        if (isRegex(origin)) {\n            return false;\n        }\n\n        if (Array.isArray(origin)) {\n            return false;\n        }\n    }\n\n    if (isRegex(pattern)) {\n\n        if (isRegex(origin)) {\n            return pattern.toString() === origin.toString();\n        }\n\n        if (Array.isArray(origin)) {\n            return false;\n        }\n\n        // $FlowFixMe\n        return Boolean(origin.match(pattern));\n    }\n\n    if (Array.isArray(pattern)) {\n\n        if (Array.isArray(origin)) {\n            return JSON.stringify(pattern) === JSON.stringify(origin);\n        }\n\n        if (isRegex(origin)) {\n            return false;\n        }\n\n        return pattern.some(subpattern => matchDomain(subpattern, origin));\n    }\n\n    return false;\n}\n\nexport function stringifyDomainPattern(pattern : DomainMatcher) : string {\n    if (Array.isArray(pattern)) {\n        return `(${ pattern.join(' | ') })`;\n    } else if (isRegex(pattern)) {\n        return `RegExp(${ pattern.toString() }`;\n    } else {\n        return pattern.toString();\n    }\n}\n\nexport function getDomainFromUrl(url : string) : string {\n\n    let domain;\n\n    if (url.match(/^(https?|mock|file):\\/\\//)) {\n        domain = url;\n    } else {\n        return getDomain();\n    }\n\n    domain = domain.split('/').slice(0, 3).join('/');\n\n    return domain;\n}\n\nexport function onCloseWindow(win : CrossDomainWindowType, callback : Function, delay : number = 1000, maxtime : number = Infinity) : { cancel : () => void } {\n\n    let timeout;\n\n    let check = () => {\n\n        if (isWindowClosed(win)) {\n\n            if (timeout) {\n                clearTimeout(timeout);\n            }\n\n            return callback();\n        }\n\n        if (maxtime <= 0) {\n            clearTimeout(timeout);\n        } else {\n            maxtime -= delay;\n            timeout = setTimeout(check, delay);\n        }\n    };\n\n    check();\n\n    return {\n        cancel() {\n            if (timeout) {\n                clearTimeout(timeout);\n            }\n        }\n    };\n}\n\n// eslint-disable-next-line complexity\nexport function isWindow(obj : Object) : boolean {\n\n    try {\n        if (obj === window) {\n            return true;\n        }\n    } catch (err) {\n        if (err && err.message === IE_WIN_ACCESS_ERROR) {\n            return true;\n        }\n    }\n\n    try {\n        if (Object.prototype.toString.call(obj) === '[object Window]') {\n            return true;\n        }\n    } catch (err) {\n        if (err && err.message === IE_WIN_ACCESS_ERROR) {\n            return true;\n        }\n    }\n\n    try {\n        if (window.Window && obj instanceof window.Window) {\n            return true;\n        }\n    } catch (err) {\n        if (err && err.message === IE_WIN_ACCESS_ERROR) {\n            return true;\n        }\n    }\n\n    try {\n        if (obj && obj.self === obj) {\n            return true;\n        }\n    } catch (err) {\n        if (err && err.message === IE_WIN_ACCESS_ERROR) {\n            return true;\n        }\n    }\n\n    try {\n        if (obj && obj.parent === obj) {\n            return true;\n        }\n    } catch (err) {\n        if (err && err.message === IE_WIN_ACCESS_ERROR) {\n            return true;\n        }\n    }\n\n    try {\n        if (obj && obj.top === obj) {\n            return true;\n        }\n    } catch (err) {\n        if (err && err.message === IE_WIN_ACCESS_ERROR) {\n            return true;\n        }\n    }\n\n    try {\n        noop(obj === obj);  // eslint-disable-line no-self-compare\n\n    } catch (err) {\n        return true;\n    }\n\n    try {\n        noop(obj && obj.__cross_domain_utils_window_check__);\n\n    } catch (err) {\n        return true;\n    }\n\n    return false;\n}\n\nexport function isBrowser() : boolean {\n    return (typeof window !== 'undefined' && typeof window.location !== 'undefined');\n}\n\nexport function isCurrentDomain(domain : string) : boolean {\n    if (!isBrowser()) {\n        return false;\n    }\n\n    return (getDomain() === domain);\n}\n\nexport function isMockDomain(domain : string) : boolean {\n    return domain.indexOf(PROTOCOL.MOCK) === 0;\n}\n\nexport function normalizeMockUrl(url : string) : string {\n    if (!isMockDomain(getDomainFromUrl(url))) {\n        return url;\n    }\n\n    if (!__TEST__) {\n        throw new Error(`Mock urls not supported out of test mode`);\n    }\n\n    return url.replace(/^mock:\\/\\/[^/]+/, getActualDomain(window));\n}\n","/* @flow */\n\nexport function safeIndexOf<T>(collection : Array<T>, item : T) : number {\n    for (let i = 0; i < collection.length; i++) {\n\n        try {\n            if (collection[i] === item) {\n                return i;\n            }\n        } catch (err) {\n            // pass\n        }\n    }\n\n    return -1;\n}\n\n// eslint-disable-next-line no-unused-vars\nexport function noop(...args : Array<mixed>) {\n    // pass\n}\n","/* @flow */\n\nimport { isWindow, isWindowClosed } from 'cross-domain-utils/src';\n\nimport { hasNativeWeakMap } from './native';\nimport { noop, safeIndexOf } from './util';\n\nlet defineProperty = Object.defineProperty;\nlet counter = Date.now() % 1e9;\n\nexport class CrossDomainSafeWeakMap<K : Object, V : mixed> {\n\n    name : string\n    weakmap : WeakMap<K, V>\n    keys : Array<K>\n    values : Array<V>\n\n    constructor() {\n        counter += 1;\n\n        // eslint-disable-next-line no-bitwise\n        this.name = `__weakmap_${ Math.random() * 1e9 >>> 0 }__${ counter }`;\n\n        if (hasNativeWeakMap()) {\n            try {\n                this.weakmap = new WeakMap();\n            } catch (err) {\n                // pass\n            }\n        }\n\n        this.keys  = [];\n        this.values = [];\n    }\n\n    _cleanupClosedWindows() {\n\n        let weakmap = this.weakmap;\n        let keys = this.keys;\n\n        for (let i = 0; i < keys.length; i++) {\n            let value = keys[i];\n\n            if (isWindow(value) && isWindowClosed(value)) {\n\n                if (weakmap) {\n                    try {\n                        weakmap.delete(value);\n                    } catch (err) {\n                        // pass\n                    }\n                }\n\n                keys.splice(i, 1);\n                this.values.splice(i, 1);\n\n                i -= 1;\n            }\n        }\n    }\n\n    isSafeToReadWrite(key : K) : boolean {\n\n        if (isWindow(key)) {\n            return false;\n        }\n\n        try {\n            noop(key && key.self);\n            noop(key && key[this.name]);\n        } catch (err) {\n            return false;\n        }\n\n        return true;\n    }\n\n    set(key : K, value : V) {\n\n        if (!key) {\n            throw new Error(`WeakMap expected key`);\n        }\n\n        let weakmap = this.weakmap;\n\n        if (weakmap) {\n            try {\n                weakmap.set(key, value);\n            } catch (err) {\n                delete this.weakmap;\n            }\n        }\n\n        if (!this.isSafeToReadWrite(key)) {\n\n            this._cleanupClosedWindows();\n\n            let keys = this.keys;\n            let values = this.values;\n            let index = safeIndexOf(keys, key);\n\n            if (index === -1) {\n                keys.push(key);\n                values.push(value);\n            } else {\n                values[index] = value;\n            }\n\n        } else {\n\n            let name = this.name;\n            let entry = key[name];\n\n            if (entry && entry[0] === key) {\n                entry[1] = value;\n            } else {\n                defineProperty(key, name, {\n                    value:    [ key, value ],\n                    writable: true\n                });\n            }\n        }\n    }\n\n    get(key : K) : V | void {\n\n        if (!key) {\n            throw new Error(`WeakMap expected key`);\n        }\n\n        let weakmap = this.weakmap;\n\n        if (weakmap) {\n            try {\n                if (weakmap.has(key)) {\n                    return weakmap.get(key);\n                }\n            } catch (err) {\n                delete this.weakmap;\n            }\n        }\n\n        if (!this.isSafeToReadWrite(key)) {\n\n            this._cleanupClosedWindows();\n\n            let keys = this.keys;\n            let index = safeIndexOf(keys, key);\n\n            if (index === -1) {\n                return;\n            }\n\n            return this.values[index];\n\n        } else {\n\n            let entry = key[this.name];\n\n            if (entry && entry[0] === key) {\n                return entry[1];\n            }\n        }\n    }\n\n    delete(key : K) {\n\n        if (!key) {\n            throw new Error(`WeakMap expected key`);\n        }\n\n        let weakmap = this.weakmap;\n\n        if (weakmap) {\n            try {\n                weakmap.delete(key);\n            } catch (err) {\n                delete this.weakmap;\n            }\n        }\n\n        if (!this.isSafeToReadWrite(key)) {\n\n            this._cleanupClosedWindows();\n\n            let keys = this.keys;\n            let index = safeIndexOf(keys, key);\n\n            if (index !== -1) {\n                keys.splice(index, 1);\n                this.values.splice(index, 1);\n            }\n\n        } else {\n\n            let entry = key[this.name];\n\n            if (entry && entry[0] === key) {\n                entry[0] = entry[1] = undefined;\n            }\n        }\n    }\n\n    has(key : K) : boolean {\n\n        if (!key) {\n            throw new Error(`WeakMap expected key`);\n        }\n\n        let weakmap = this.weakmap;\n\n        if (weakmap) {\n            try {\n                if (weakmap.has(key)) {\n                    return true;\n                }\n            } catch (err) {\n                delete this.weakmap;\n            }\n        }\n\n        if (!this.isSafeToReadWrite(key)) {\n\n            this._cleanupClosedWindows();\n\n            let index = safeIndexOf(this.keys, key);\n            return index !== -1;\n\n        } else {\n\n            let entry = key[this.name];\n\n            if (entry && entry[0] === key) {\n                return true;\n            }\n\n            return false;\n        }\n    }\n\n    getOrSet(key : K, getter : () => V) : V {\n        if (this.has(key)) {\n            // $FlowFixMe\n            return this.get(key);\n        }\n\n        let value = getter();\n        this.set(key, value);\n        return value;\n    }\n}\n","/* @flow */\n/* eslint max-lines: 0 */\n\nimport { ZalgoPromise } from 'zalgo-promise/src';\nimport { WeakMap } from 'cross-domain-safe-weakmap/src';\n\nimport type { CancelableType } from './types';\n\nexport function base64encode(str : string) : string {\n    if (typeof btoa === 'function') {\n        return btoa(str);\n    } else if (typeof Buffer !== 'undefined') {\n        return Buffer.from(str, 'utf8').toString('base64');\n    }\n\n    throw new Error(`Can not find window.btoa or Buffer`);\n}\n\nexport function base64decode(str : string) : string {\n    if (typeof window !== 'undefined' && typeof window.atob === 'function') {\n        return window.atob(str);\n    }\n\n    if (typeof Buffer !== 'undefined') {\n        return Buffer.from(str, 'base64').toString('utf8');\n    }\n\n    throw new Error(`Can not find window.atob or Buffer`);\n}\n\nexport function uniqueID() : string {\n\n    let chars = '0123456789abcdef';\n\n    let randomID = 'xxxxxxxxxx'.replace(/./g, () => {\n        return chars.charAt(Math.floor(Math.random() * chars.length));\n    });\n\n    let timeID = base64encode(\n        new Date().toISOString().slice(11, 19).replace('T', '.')\n    ).replace(/[^a-zA-Z0-9]/g, '').toLowerCase();\n\n    return `${ randomID }_${ timeID }`;\n}\n\nexport function getGlobal() : Object {\n    if (typeof window !== 'undefined') {\n        return window;\n    }\n    if (typeof global !== 'undefined') {\n        return global;\n    }\n    if (typeof __GLOBAL__ !== 'undefined') {\n        return __GLOBAL__;\n    }\n    throw new Error(`No global found`);\n}\n\nlet objectIDs;\n\nexport function getObjectID(obj : Object) : string {\n\n    objectIDs = objectIDs || new WeakMap();\n\n    if (obj === null || obj === undefined || (typeof obj !== 'object' && typeof obj !== 'function')) {\n        throw new Error(`Invalid object`);\n    }\n\n    let uid = objectIDs.get(obj);\n\n    if (!uid) {\n        uid = `${ typeof obj }:${ uniqueID() }`;\n        objectIDs.set(obj, uid);\n    }\n\n    return uid;\n}\n\nfunction serializeArgs(args : Array<mixed>) : string {\n    try {\n        return JSON.stringify(Array.prototype.slice.call(args), (subkey, val) => {\n            if (typeof val === 'function') {\n                return `memoize[${ getObjectID(val) }]`;\n            }\n            return val;\n        });\n    } catch (err) {\n        throw new Error(`Arguments not serializable -- can not be used to memoize`);\n    }\n}\n\n// eslint-disable-next-line flowtype/no-weak-types\nexport function memoize<R>(method : (...args : Array<any>) => R, options : { time? : number, name? : string, thisNamespace? : boolean } = {}) : ((...args : Array<any>) => R) {\n    let cacheMap = new WeakMap();\n\n    // eslint-disable-next-line flowtype/no-weak-types\n    function memoizedFunction(...args : Array<any>) : R {\n        let cache = cacheMap.getOrSet(options.thisNamespace ? this : method, () => ({}));\n\n        let key : string = serializeArgs(args);\n\n        let cacheTime = options.time;\n        if (cache[key] && cacheTime && (Date.now() - cache[key].time) < cacheTime) {\n            delete cache[key];\n        }\n\n        if (cache[key]) {\n            return cache[key].value;\n        }\n\n        let time  = Date.now();\n        let value = method.apply(this, arguments);\n\n        cache[key] = { time, value };\n\n        return cache[key].value;\n    }\n\n    memoizedFunction.reset = () => {\n        cacheMap.delete(options.thisNamespace ? this : method);\n    };\n\n    if (options.name) {\n        memoizedFunction.displayName = `${ options.name }:memoized`;\n    }\n\n    return memoizedFunction;\n}\n\n// eslint-disable-next-line flowtype/no-weak-types\nexport function memoizePromise<R>(method : (...args : Array<any>) => ZalgoPromise<R>) : ((...args : Array<any>) => ZalgoPromise<R>) {\n    let cache = {};\n\n    // eslint-disable-next-line flowtype/no-weak-types\n    function memoizedPromiseFunction(...args : Array<any>) : ZalgoPromise<R> {\n        let key : string = serializeArgs(args);\n\n        if (cache.hasOwnProperty(key)) {\n            return cache[key];\n        }\n\n        cache[key] = method.apply(this, arguments)\n            .finally(() => {\n                delete cache[key];\n            });\n\n        return cache[key];\n    }\n\n    memoizedPromiseFunction.reset = () => {\n        cache = {};\n    };\n\n    return memoizedPromiseFunction;\n}\n\n// eslint-disable-next-line flowtype/no-weak-types\nexport function promisify<R>(method : (...args : Array<any>) => R, options : { name? : string } = {}) : ((...args : Array<any>) => ZalgoPromise<R>) {\n    function promisifiedFunction() : ZalgoPromise<R> {\n        return ZalgoPromise.try(method, this, arguments);\n    }\n\n    if (options.name) {\n        promisifiedFunction.displayName = `${ options.name }:promisified`;\n    }\n\n    return promisifiedFunction;\n}\n\n// eslint-disable-next-line flowtype/no-weak-types\nexport function inlineMemoize<R>(method : (...args : Array<any>) => R, logic : (...args : Array<any>) => R, args : Array<any> = []) : R {\n    let cache = method.__inline_memoize_cache__ = method.__inline_memoize_cache__ || {};\n    let key = serializeArgs(args);\n\n    if (cache.hasOwnProperty(key)) {\n        return cache[key];\n    }\n    \n    let result = cache[key] = logic(...args);\n    return result;\n}\n\n// eslint-disable-next-line no-unused-vars\nexport function noop(...args : Array<mixed>) {\n    // pass\n}\n\nexport function once(method : Function) : Function {\n    let called = false;\n\n    return function onceFunction() : mixed {\n        if (!called) {\n            called = true;\n            return method.apply(this, arguments);\n        }\n    };\n}\n\nexport function hashStr(str : string) : number {\n    let hash = 0;\n    for (let i = 0; i < str.length; i++) {\n        hash += str[i].charCodeAt(0) * Math.pow((i % 10) + 1, 5);\n    }\n    return Math.floor(Math.pow(Math.sqrt(hash), 5));\n}\n\nexport function strHashStr(str : string) : string {\n    let hash = '';\n\n    for (let i = 0; i < str.length; i++) {\n        let total = (str[i].charCodeAt(0) * i);\n\n        if (str[i + 1]) {\n            total += (str[i + 1].charCodeAt(0) * (i - 1));\n        }\n\n        hash += String.fromCharCode(97 + (Math.abs(total) % 26));\n    }\n\n    return hash;\n}\n\nexport function match(str : string, pattern : RegExp) : ?string {\n    let regmatch = str.match(pattern);\n    if (regmatch) {\n        return regmatch[1];\n    }\n}\n\nexport function awaitKey<T: mixed>(obj : Object, key : string) : ZalgoPromise<T> {\n    return new ZalgoPromise(resolve => {\n\n        let value = obj[key];\n\n        if (value) {\n            return resolve(value);\n        }\n\n        delete obj[key];\n\n        Object.defineProperty(obj, key, {\n\n            configurable: true,\n\n            set(item) {\n                value = item;\n\n                if (value) {\n                    resolve(value);\n                }\n            },\n\n            get() : mixed {\n                return value;\n            }\n        });\n    });\n}\n\nexport function stringifyError(err : mixed, level : number = 1) : string {\n\n    if (level >= 3) {\n        return 'stringifyError stack overflow';\n    }\n\n    try {\n        if (!err) {\n            return `<unknown error: ${ Object.prototype.toString.call(err) }>`;\n        }\n\n        if (typeof err === 'string') {\n            return err;\n        }\n\n        if (err instanceof Error) {\n            let stack = err && err.stack;\n            let message = err && err.message;\n\n            if (stack && message) {\n                if (stack.indexOf(message) !== -1) {\n                    return stack;\n                } else {\n                    return `${ message }\\n${ stack }`;\n                }\n            } else if (stack) {\n                return stack;\n            } else if (message) {\n                return message;\n            }\n        }\n\n        if (typeof err.toString === 'function') {\n            return err.toString();\n        }\n\n        return Object.prototype.toString.call(err);\n\n    } catch (newErr) { // eslint-disable-line unicorn/catch-error-name\n        return `Error while stringifying error: ${ stringifyError(newErr, level + 1) }`;\n    }\n}\n\nexport function stringifyErrorMessage(err : mixed) : string {\n\n    let defaultMessage = `<unknown error: ${ Object.prototype.toString.call(err) }>`;\n\n    if (!err) {\n        return defaultMessage;\n    }\n\n    if (err instanceof Error) {\n        return err.message || defaultMessage;\n    }\n\n    if (typeof err.message === 'string') {\n        return err.message || defaultMessage;\n    }\n\n    return defaultMessage;\n}\n\nexport function stringify(item : mixed) : string {\n    if (typeof item === 'string') {\n        return item;\n    }\n\n    if (item && typeof item.toString === 'function') {\n        return item.toString();\n    }\n\n    return Object.prototype.toString.call(item);\n}\n\nexport function domainMatches(hostname : string, domain : string) : boolean {\n    hostname = hostname.split('://')[1];\n    let index = hostname.indexOf(domain);\n    return (index !== -1 && hostname.slice(index) === domain);\n}\n\nexport function patchMethod(obj : Object, name : string, handler : Function) {\n    let original = obj[name];\n\n    obj[name] = function patchedMethod() : mixed {\n        return handler({\n            context:      this,\n            args:         Array.prototype.slice.call(arguments),\n            original,\n            callOriginal: () => original.apply(this, arguments)\n        });\n    };\n}\n\nexport function extend<T : Object | Function>(obj : T, source : Object) : T {\n    if (!source) {\n        return obj;\n    }\n\n    if (Object.assign) {\n        return Object.assign(obj, source);\n    }\n\n    for (let key in source) {\n        if (source.hasOwnProperty(key)) {\n            obj[key] = source[key];\n        }\n    }\n\n    return obj;\n}\n\nexport function values<T>(obj : { [string] : T }) : Array<T> {\n    let result = [];\n    for (let key in obj) {\n        if (obj.hasOwnProperty(key)) {\n            result.push(obj[key]);\n        }\n    }\n    return result;\n}\n\nexport function perc(pixels : number, percentage : number) : number {\n    return Math.round((pixels * percentage) / 100);\n}\n\nexport function min(...args : Array<number>) : number {\n    return Math.min(...args);\n}\n\nexport function max(...args : Array<number>) : number {\n    return Math.max(...args);\n}\n\nexport function regexMap<T>(str : string, regexp : RegExp, handler : () => T) : Array<T> {\n    let results = [];\n\n    // $FlowFixMe\n    str.replace(regexp, function regexMapMatcher(item) {\n        results.push(handler ? handler.apply(null, arguments) : item);\n    });\n\n    // $FlowFixMe\n    return results;\n}\n\nexport function svgToBase64(svg : string) : string {\n    return `data:image/svg+xml;base64,${ base64encode(svg) }`;\n}\n\nexport function objFilter<T, R>(obj : { [string] : T }, filter? : (T, ?string) => mixed = Boolean) : { [string] : R } {\n    let result = {};\n\n    for (let key in obj) {\n        if (!obj.hasOwnProperty(key) || !filter(obj[key], key)) {\n            continue;\n        }\n\n        result[key] = obj[key];\n    }\n\n    return result;\n}\n\nexport function identity <T>(item : T) : T {\n    return item;\n}\n\nexport function regexTokenize(text : string, regexp : RegExp) : Array<string> {\n    let result = [];\n    text.replace(regexp, token => {\n        result.push(token);\n        return '';\n    });\n    return result;\n}\n\nexport function promiseDebounce<T>(method : () => ZalgoPromise<T> | T, delay : number = 50) : () => ZalgoPromise<T> {\n\n    let promise;\n    let timeout;\n\n    return function promiseDebouncedMethod() : ZalgoPromise<T> {\n        if (timeout) {\n            clearTimeout(timeout);\n        }\n\n        let localPromise = promise = promise || new ZalgoPromise();\n\n        timeout = setTimeout(() => {\n            promise = null;\n            timeout = null;\n\n            ZalgoPromise.try(method).then(\n                result => { localPromise.resolve(result); },\n                err => { localPromise.reject(err); }\n            );\n        }, delay);\n\n        return localPromise;\n    };\n}\n\nexport function safeInterval(method : Function, time : number) : { cancel : () => void } {\n\n    let timeout;\n\n    function loop() {\n        timeout = setTimeout(() => {\n            method();\n            loop();\n        }, time);\n    }\n\n    loop();\n\n    return {\n        cancel() {\n            clearTimeout(timeout);\n        }\n    };\n}\n\nexport function isInteger(str : string) : boolean {\n    return Boolean(str.match(/^[0-9]+$/));\n}\n\nexport function isFloat(str : string) : boolean {\n    return Boolean(str.match(/^[0-9]+\\.[0-9]+$/));\n}\n\nexport function serializePrimitive(value : string | number | boolean) : string {\n    return value.toString();\n}\n\nexport function deserializePrimitive(value : string) : string | number | boolean {\n    if (value === 'true') {\n        return true;\n    } else if (value === 'false') {\n        return false;\n    } else if (isInteger(value)) {\n        return parseInt(value, 10);\n    } else if (isFloat(value)) {\n        return parseFloat(value);\n    } else {\n        return value;\n    }\n}\n\nexport function dotify(obj : Object, prefix : string = '', newobj : Object = {}) : { [string] : string } {\n    prefix = prefix ? `${ prefix }.` : prefix;\n    for (let key in obj) {\n        if (!obj.hasOwnProperty(key) || obj[key] === undefined || obj[key] === null || typeof obj[key] === 'function') {\n            continue;\n        } else if (obj[key] && Array.isArray(obj[key]) && obj[key].length && obj[key].every(val => typeof val !== 'object')) {\n            newobj[`${ prefix }${ key }[]`] = obj[key].join(',');\n        } else if (obj[key] && typeof obj[key] === 'object') {\n            newobj = dotify(obj[key], `${ prefix }${ key }`, newobj);\n        } else {\n            newobj[`${ prefix }${ key }`] = serializePrimitive(obj[key]);\n        }\n    }\n    return newobj;\n}\n\nexport function undotify(obj : { [string] : string }) : Object {\n    \n    let result = {};\n\n    for (let key in obj) {\n        if (!obj.hasOwnProperty(key) || typeof obj[key] !== 'string') {\n            continue;\n        }\n\n        let value = obj[key];\n\n        if (key.match(/^.+\\[\\]$/)) {\n            key = key.slice(0, key.length - 2);\n            value = value.split(',').map(deserializePrimitive);\n        } else {\n            value = deserializePrimitive(value);\n        }\n\n        let keyResult = result;\n        let parts = key.split('.');\n        for (let i = 0; i < parts.length; i++) {\n            let part = parts[i];\n            let isLast = (i + 1 === parts.length);\n            let isIndex = !isLast && isInteger(parts[i + 1]);\n\n            if (isLast) {\n                // $FlowFixMe\n                keyResult[part] = value;\n            } else {\n                // $FlowFixMe\n                keyResult = keyResult[part] = keyResult[part] || (isIndex ? [] : {});\n            }\n        }\n    }\n\n    return result;\n}\n\nexport type EventEmitterType = {\n    on : (eventName : string, handler : Function) => CancelableType,\n    once : (eventName : string, handler : Function) => CancelableType,\n    trigger : (eventName : string, ...args : $ReadOnlyArray<mixed>) => ZalgoPromise<void>,\n    triggerOnce : (eventName : string, ...args : $ReadOnlyArray<mixed>) => ZalgoPromise<void>\n};\n\nexport function eventEmitter() : EventEmitterType {\n    let triggered = {};\n    let handlers = {};\n\n    return {\n\n        on(eventName : string, handler : Function) : CancelableType {\n            let handlerList = handlers[eventName] = handlers[eventName] || [];\n\n            handlerList.push(handler);\n\n            let cancelled = false;\n\n            return {\n                cancel() {\n                    if (!cancelled) {\n                        cancelled = true;\n                        handlerList.splice(handlerList.indexOf(handler), 1);\n                    }\n\n                }\n            };\n        },\n\n        once(eventName : string, handler : Function) : CancelableType {\n\n            let listener = this.on(eventName, () => {\n                listener.cancel();\n                handler();\n            });\n\n            return listener;\n        },\n\n        trigger(eventName : string, ...args : $ReadOnlyArray<mixed>) : ZalgoPromise<void> {\n\n            let handlerList = handlers[eventName];\n            let promises = [];\n\n            if (handlerList) {\n                for (let handler of handlerList) {\n                    promises.push(ZalgoPromise.try(() => handler(...args)));\n                }\n            }\n\n            return ZalgoPromise.all(promises).then(noop);\n        },\n\n        triggerOnce(eventName : string, ...args : $ReadOnlyArray<mixed>) : ZalgoPromise<void> {\n\n            if (triggered[eventName]) {\n                return ZalgoPromise.resolve();\n            }\n\n            triggered[eventName] = true;\n            return this.trigger(eventName, ...args);\n        }\n    };\n}\n\nexport function camelToDasherize(string : string) : string {\n    return string.replace(/([A-Z])/g, (g) => {\n        return `-${ g.toLowerCase() }`;\n    });\n}\n\nexport function dasherizeToCamel(string : string) : string {\n    return string.replace(/-([a-z])/g, (g) => {\n        return g[1].toUpperCase();\n    });\n}\n\nexport function capitalizeFirstLetter(string : string) : string {\n    return string.charAt(0).toUpperCase() + string.slice(1).toLowerCase();\n}\n\nexport function get(item : Object, path : string, def : mixed) : mixed {\n\n    if (!path) {\n        return def;\n    }\n\n    let pathParts = path.split('.');\n\n    // Loop through each section of our key path\n\n    for (let i = 0; i < pathParts.length; i++) {\n\n        // If we have an object, we can get the key\n        if (typeof item === 'object' && item !== null) {\n            item = item[pathParts[i]];\n\n        // Otherwise, we should return the default (undefined if not provided)\n        } else {\n            return def;\n        }\n    }\n\n    // If our final result is undefined, we should return the default\n\n    return item === undefined ? def : item;\n}\n\nexport function safeTimeout(method : Function, time : number) {\n\n    let interval = safeInterval(() => {\n        time -= 100;\n        if (time <= 0) {\n            interval.cancel();\n            method();\n        }\n    }, 100);\n}\n\nexport function defineLazyProp<T>(obj : Object | Array<mixed>, key : string | number, getter : () => T) {\n    if (Array.isArray(obj)) {\n        if (typeof key !== 'number') {\n            throw new TypeError(`Array key must be number`);\n        }\n    } else if (typeof obj === 'object' && obj !== null) {\n        if (typeof key !== 'string') {\n            throw new TypeError(`Object key must be string`);\n        }\n    }\n    \n    Object.defineProperty(obj, key, {\n        configurable: true,\n        enumerable:   true,\n        get:          () => {\n            // $FlowFixMe\n            delete obj[key];\n            let value = getter();\n            // $FlowFixMe\n            obj[key] = value;\n            return value;\n        },\n        set: (value : T) => {\n            // $FlowFixMe\n            delete obj[key];\n            // $FlowFixMe\n            obj[key] = value;\n        }\n    });\n}\n\nexport function isObject(item : mixed) : boolean {\n    return (typeof item === 'object' && item !== null);\n}\n\nexport function isObjectObject(obj : mixed) : boolean {\n    return isObject(obj) && Object.prototype.toString.call(obj) === '[object Object]';\n}\n\nexport function isPlainObject(obj : mixed) : boolean {\n    if (!isObjectObject(obj)) {\n        return false;\n    }\n\n    // $FlowFixMe\n    let constructor = obj.constructor;\n\n    if (typeof constructor !== 'function') {\n        return false;\n    }\n\n    let prototype = constructor.prototype;\n\n    if (!isObjectObject(prototype)) {\n        return false;\n    }\n\n    if (!prototype.hasOwnProperty('isPrototypeOf')) {\n        return false;\n    }\n\n    return true;\n}\n\nexport function replaceObject<T : Object | Array<mixed>> (item : T, replacer : (mixed, string | number, string) => mixed, fullKey : string = '') : T {\n\n    if (Array.isArray(item)) {\n        let length = item.length;\n        let result = [];\n\n        for (let i = 0; i < length; i++) {\n\n            \n            defineLazyProp(result, i, () => {\n                let itemKey = fullKey ? `${ fullKey }.${ i }` : `${ i }`;\n                let el = item[i];\n\n                let child = replacer(el, i, itemKey);\n\n                if (isPlainObject(child) || Array.isArray(child)) {\n                    // $FlowFixMe\n                    child = replaceObject(child, replacer, itemKey);\n                }\n\n                return child;\n            });\n        }\n\n        // $FlowFixMe\n        return result;\n    } else if (isPlainObject(item)) {\n        let result = {};\n\n        for (let key in item) {\n            if (!item.hasOwnProperty(key)) {\n                continue;\n            }\n\n            defineLazyProp(result, key, () => {\n                let itemKey = fullKey ? `${ fullKey }.${ key }` : `${ key }`;\n                // $FlowFixMe\n                let el = item[key];\n\n                let child = replacer(el, key, itemKey);\n\n                if (isPlainObject(child) || Array.isArray(child)) {\n                    // $FlowFixMe\n                    child = replaceObject(child, replacer, itemKey);\n                }\n\n                return child;\n            });\n        }\n\n        // $FlowFixMe\n        return result;\n    } else {\n        throw new Error(`Pass an object or array`);\n    }\n}\n\n\nexport function copyProp(source : Object, target : Object, name : string, def : mixed) {\n    if (source.hasOwnProperty(name)) {\n        let descriptor = Object.getOwnPropertyDescriptor(source, name);\n        // $FlowFixMe\n        Object.defineProperty(target, name, descriptor);\n\n    } else {\n        target[name] = def;\n    }\n}\n\ntype RegexResultType = {\n    text : string,\n    groups : Array<string>,\n    start : number,\n    end : number,\n    length : number,\n    replace : (text : string) => string\n};\n\nexport function regex(pattern : string | RegExp, string : string, start : number = 0) : ?RegexResultType {\n\n    if (typeof pattern === 'string') {\n        // eslint-disable-next-line security/detect-non-literal-regexp\n        pattern = new RegExp(pattern);\n    }\n\n    let result = string.slice(start).match(pattern);\n\n    if (!result) {\n        return;\n    }\n\n    // $FlowFixMe\n    let index : number = result.index;\n    let regmatch = result[0];\n\n    return {\n        text:   regmatch,\n        groups: result.slice(1),\n        start:  start + index,\n        end:    start + index + regmatch.length,\n        length: regmatch.length,\n\n        replace(text : string) : string {\n\n            if (!regmatch) {\n                return '';\n            }\n\n            return `${ regmatch.slice(0, start + index) }${ text }${ regmatch.slice(index + regmatch.length) }`;\n        }\n    };\n}\n\nexport function regexAll(pattern : string | RegExp, string : string) : Array<RegexResultType> {\n\n    let matches = [];\n    let start = 0;\n\n    // eslint-disable-next-line no-constant-condition\n    while (true) {\n        let regmatch = regex(pattern, string, start);\n\n        if (!regmatch) {\n            break;\n        }\n\n        matches.push(regmatch);\n        start = match.end;\n    }\n\n    return matches;\n}\n\nexport function isDefined(value : ?mixed) : boolean {\n    return value !== null && value !== undefined;\n}\n\nexport function cycle(method : Function) : ZalgoPromise<void> {\n    return ZalgoPromise.try(method).then(() => cycle(method));\n}\n\nexport function debounce<T>(method : (...args : Array<mixed>) => T, time : number = 100) : (...args : Array<mixed>) => void {\n\n    let timeout;\n\n    return function debounceWrapper() {\n        clearTimeout(timeout);\n\n        timeout = setTimeout(() => {\n            return method.apply(this, arguments);\n        }, time);\n    };\n}\n\nexport function isRegex(item : mixed) : boolean {\n    return Object.prototype.toString.call(item) === '[object RegExp]';\n}\n\ntype FunctionProxy<T : Function> = (method : T) => T;\n\n// eslint-disable-next-line flowtype/no-weak-types\nexport let weakMapMemoize : FunctionProxy<*> = <R : mixed>(method : (arg : any) => R) : ((...args : Array<any>) => R) => {\n\n    let weakmap = new WeakMap();\n\n    // eslint-disable-next-line flowtype/no-weak-types\n    return function weakmapMemoized(arg : any) : R {\n        return weakmap.getOrSet(arg, () => method.call(this, arg));\n    };\n};\n\ntype FunctionPromiseProxy<R : mixed, T : (...args : $ReadOnlyArray<mixed>) => ZalgoPromise<R>> = (T) => T;\n\n// eslint-disable-next-line flowtype/no-weak-types\nexport let weakMapMemoizePromise : FunctionPromiseProxy<*, *> = <R : mixed>(method : (arg : any) => ZalgoPromise<R>) : ((...args : Array<any>) => ZalgoPromise<R>) => {\n\n    let weakmap = new WeakMap();\n\n    // eslint-disable-next-line flowtype/no-weak-types\n    return function weakmapMemoizedPromise(arg : any) : ZalgoPromise<R> {\n        return weakmap.getOrSet(arg, () =>\n            method.call(this, arg).finally(() => {\n                weakmap.delete(arg);\n            })\n        );\n    };\n};\n\nexport function getOrSet<O : Object, T : mixed>(obj : O, key : string, getter : () => T) : T {\n    if (obj.hasOwnProperty(key)) {\n        return obj[key];\n    }\n\n    const val = getter();\n    obj[key] = val;\n    return val;\n}\n\nexport type CleanupType = {|\n    set : <T : mixed>(string, T) => T, // eslint-disable-line no-undef\n    register : (Function) => void,\n    all : () => ZalgoPromise<void>\n|};\n\nexport function cleanup(obj : Object) : CleanupType {\n\n    const tasks = [];\n    let cleaned = false;\n\n    return {\n        set<T : mixed>(name : string, item : T) : T {\n            if (!cleaned) {\n                obj[name] = item;\n                this.register(() => {\n                    delete obj[name];\n                });\n            }\n            return item;\n        },\n\n        register(method : Function) {\n            if (cleaned) {\n                method();\n            } else {\n                tasks.push(once(method));\n            }\n        },\n\n        all() : ZalgoPromise<void> {\n            const results = [];\n            cleaned = true;\n\n            while (tasks.length) {\n                const task = tasks.pop();\n                results.push(task());\n            }\n\n            return ZalgoPromise.all(results).then(noop);\n        }\n    };\n}\n\nexport function tryCatch<T>(fn : () => T) : {| result : T, error : void |} | {| result : void, error : mixed |} {\n    let result;\n    let error;\n\n    try {\n        result = fn();\n    } catch (err) {\n        error = err;\n    }\n    \n    // $FlowFixMe\n    return { result, error };\n}\n\nexport function removeFromArray<X, T : Array<X>>(arr : T, item : X) {\n    const index = arr.indexOf(item);\n    if (index !== -1) {\n        arr.splice(index, 1);\n    }\n}\n\nexport function assertExists<T>(name : string, thing : void | null | T) : T {\n    if (thing === null || typeof thing === 'undefined') {\n        throw new Error(`Expected ${ name } to be present`);\n    }\n\n    return thing;\n}\n","/* @flow */\n/* eslint max-lines: off */\n\nimport { ZalgoPromise } from 'zalgo-promise/src';\nimport { linkFrameWindow, isWindowClosed,\n    type SameDomainWindowType, type CrossDomainWindowType } from 'cross-domain-utils/src';\nimport { WeakMap } from 'cross-domain-safe-weakmap/src';\n\nimport { inlineMemoize, noop, stringify, capitalizeFirstLetter,\n    once, extend, safeInterval } from './util';\nimport { isDevice } from './device';\nimport { KEY_CODES } from './constants';\nimport type { CancelableType } from './types';\n\ntype ElementRefType = string | HTMLElement;\n\nexport function isDocumentReady() : boolean {\n    return Boolean(document.body) && document.readyState === 'complete';\n}\n\nexport function urlEncode(str : string) : string {\n    return str.replace(/\\?/g, '%3F').replace(/&/g, '%26').replace(/#/g, '%23').replace(/\\+/g, '%2B');\n}\n\nexport function waitForWindowReady() : ZalgoPromise<void> {\n    return inlineMemoize(waitForWindowReady, () : ZalgoPromise<void> => {\n        return new ZalgoPromise(resolve => {\n            if (isDocumentReady()) {\n                resolve();\n            }\n\n            window.addEventListener('load', () => resolve());\n        });\n    });\n}\n\nexport function waitForDocumentReady() : ZalgoPromise<void> {\n    return inlineMemoize(waitForDocumentReady, () : ZalgoPromise<void> => {\n        return new ZalgoPromise(resolve => {\n\n            if (isDocumentReady()) {\n                return resolve();\n            }\n\n            let interval = setInterval(() => {\n                if (isDocumentReady()) {\n                    clearInterval(interval);\n                    return resolve();\n                }\n            }, 10);\n        });\n    });\n}\n\nexport function waitForDocumentBody() : ZalgoPromise<HTMLBodyElement> {\n    return waitForDocumentReady().then(() => {\n        if (document.body) {\n            return document.body;\n        }\n\n        throw new Error('Document ready but document.body not present');\n    });\n}\n\nexport function parseQuery(queryString : string) : Object {\n    return inlineMemoize(parseQuery, () : Object => {\n        let params = {};\n\n        if (!queryString) {\n            return params;\n        }\n\n        if (queryString.indexOf('=') === -1) {\n            return params;\n        }\n\n        for (let pair of queryString.split('&')) {\n            pair = pair.split('=');\n\n            if (pair[0] && pair[1]) {\n                params[decodeURIComponent(pair[0])] = decodeURIComponent(pair[1]);\n            }\n        }\n\n        return params;\n    }, [ queryString ]);\n}\n\n\nexport function getQueryParam(name : string) : string {\n    return parseQuery(window.location.search.slice(1))[name];\n}\n\nexport function urlWillRedirectPage(url : string) : boolean {\n\n    if (url.indexOf('#') === -1) {\n        return true;\n    }\n\n    if (url.indexOf('#') === 0) {\n        return false;\n    }\n\n    if (url.split('#')[0] === window.location.href.split('#')[0]) {\n        return false;\n    }\n\n    return true;\n}\n\nexport function formatQuery(obj : { [ string ] : string } = {}) : string {\n\n    return Object.keys(obj).filter(key => {\n        return typeof obj[key] === 'string';\n    }).map(key => {\n        return `${ urlEncode(key) }=${ urlEncode(obj[key]) }`;\n    }).join('&');\n}\n\nexport function extendQuery(originalQuery : string, props : { [ string ] : string } = {}) : string {\n\n    if (!props || !Object.keys(props).length) {\n        return originalQuery;\n    }\n\n    return formatQuery({\n        ...parseQuery(originalQuery),\n        ...props\n    });\n}\n\nexport function extendUrl(url : string, options : { query? : { [string] : string }, hash? : { [string] : string } } = {}) : string {\n\n    let query = options.query || {};\n    let hash = options.hash || {};\n\n    let originalUrl;\n    let originalQuery;\n    let originalHash;\n\n    [ originalUrl, originalHash ] = url.split('#');\n    [ originalUrl, originalQuery ] = originalUrl.split('?');\n\n    let queryString = extendQuery(originalQuery, query);\n    let hashString = extendQuery(originalHash, hash);\n\n    if (queryString) {\n        originalUrl = `${ originalUrl }?${ queryString }`;\n    }\n\n    if (hashString) {\n        originalUrl = `${ originalUrl }#${ hashString }`;\n    }\n\n    return originalUrl;\n}\n\nexport function redirect(url : string, win : CrossDomainWindowType = window) : ZalgoPromise<void> {\n    return new ZalgoPromise(resolve => {\n        win.location = url;\n        if (!urlWillRedirectPage(url)) {\n            resolve();\n        }\n    });\n}\n\nexport function hasMetaViewPort() : boolean {\n    let meta = document.querySelector('meta[name=viewport]');\n\n    if (isDevice() && window.screen.width < 660 && !meta) {\n        return false;\n    }\n\n    return true;\n}\n\nexport function isElementVisible(el : HTMLElement) : boolean {\n    return Boolean(el.offsetWidth || el.offsetHeight || el.getClientRects().length);\n}\n\nexport function enablePerformance() : boolean {\n    return inlineMemoize(enablePerformance, () : boolean => {\n        /* eslint-disable compat/compat */\n        return Boolean(\n            window.performance &&\n            performance.now &&\n            performance.timing &&\n            performance.timing.connectEnd &&\n            performance.timing.navigationStart &&\n            (Math.abs(performance.now() - Date.now()) > 1000) &&\n            (performance.now() - (performance.timing.connectEnd - performance.timing.navigationStart)) > 0\n        );\n        /* eslint-enable compat/compat */\n    });\n}\n\nexport function getPageRenderTime() : ZalgoPromise<?number> {\n    return waitForDocumentReady().then(() => {\n\n        if (!enablePerformance()) {\n            return;\n        }\n\n        let timing = window.performance.timing;\n\n        if (timing.connectEnd && timing.domInteractive) {\n            return timing.domInteractive - timing.connectEnd;\n        }\n    });\n}\n\nexport function htmlEncode(html : string = '') : string {\n    return html.toString()\n        .replace(/&/g, '&amp;')\n        .replace(/</g, '&lt;')\n        .replace(/>/g, '&gt;')\n        .replace(/\"/g, '&quot;')\n        .replace(/'/g, '&#39;')\n        .replace(/\\//g, '&#x2F;');\n}\n\nexport function isBrowser() : boolean {\n    return (typeof window !== 'undefined');\n}\n\nexport function querySelectorAll(selector : string, doc : HTMLElement = window.document) : Array<Element> {\n    return Array.prototype.slice.call(doc.querySelectorAll(selector));\n}\n\nexport function onClick(element : Element, handler : (Event) => void) {\n    element.addEventListener('touchstart', noop);\n    element.addEventListener('click', handler);\n    element.addEventListener('keypress', (event : Event) => {\n        // $FlowFixMe\n        if (event.keyCode === KEY_CODES.ENTER) {\n            return handler(event);\n        }\n    });\n}\n\nexport function getScript({ host = window.location.host, path } : { host? : string, path : string }) : ?HTMLScriptElement {\n    return inlineMemoize(getScript, () : ?HTMLScriptElement => {\n\n        let url = `${ host }${ path }`;\n        let scripts = Array.prototype.slice.call(document.getElementsByTagName('script'));\n\n        for (let script of scripts) {\n            if (!script.src) {\n                continue;\n            }\n\n            let src = script.src.replace(/^https?:\\/\\//, '').split('?')[0];\n\n            if (src === url) {\n                return script;\n            }\n        }\n    }, [ path ]);\n}\n\nexport function isLocalStorageEnabled() : boolean {\n    return inlineMemoize(isLocalStorageEnabled, () => {\n        try {\n            if (typeof window === 'undefined') {\n                return false;\n            }\n\n            if (window.localStorage) {\n                let value = Math.random().toString();\n                window.localStorage.setItem('__test__localStorage__', value);\n                let result = window.localStorage.getItem('__test__localStorage__');\n                window.localStorage.removeItem('__test__localStorage__');\n                if (value === result) {\n                    return true;\n                }\n            }\n        } catch (err) {\n            // pass\n        }\n        return false;\n    });\n}\n\nexport function getBrowserLocales() : Array<{ country? : string, lang : string }> {\n    let nav = window.navigator;\n\n    let locales = nav.languages\n        ? Array.prototype.slice.apply(nav.languages)\n        : [];\n\n    if (nav.language) {\n        locales.push(nav.language);\n    }\n\n    if (nav.userLanguage) {\n        locales.push(nav.userLanguage);\n    }\n\n    return locales.map(locale => {\n\n        if (locale && locale.match(/^[a-z]{2}[-_][A-Z]{2}$/)) {\n            let [ lang, country ] = locale.split(/[-_]/);\n            return { country, lang };\n        }\n\n        if (locale && locale.match(/^[a-z]{2}$/)) {\n            return { lang: locale };\n        }\n\n        return null;\n\n    }).filter(Boolean);\n}\n\n\nexport function appendChild(container : HTMLElement, child : HTMLElement | Text) {\n    container.appendChild(child);\n}\n\nexport function isElement(element : mixed) : boolean {\n\n    if (element instanceof window.Element) {\n        return true;\n    }\n\n    if (element !== null && typeof element === 'object' && element.nodeType === 1 && typeof element.style === 'object' && typeof element.ownerDocument === 'object') {\n        return true;\n    }\n\n    return false;\n}\n\nexport function getElementSafe(id : ElementRefType, doc : Document | HTMLElement = document) : ?HTMLElement {\n\n    if (isElement(id)) {\n        // $FlowFixMe\n        return id;\n    }\n\n    if (typeof id === 'string') {\n        return doc.querySelector(id);\n    }\n}\n\nexport function getElement(id : ElementRefType, doc : Document | HTMLElement = document) : HTMLElement {\n\n    let element = getElementSafe(id, doc);\n\n    if (element) {\n        return element;\n    }\n\n    throw new Error(`Can not find element: ${ stringify(id) }`);\n}\n\nexport function elementReady(id : ElementRefType) : ZalgoPromise<window.HTMLElement> {\n    return new ZalgoPromise((resolve, reject) => {\n\n        let name = stringify(id);\n        let el = getElementSafe(id);\n\n        if (el) {\n            return resolve(el);\n        }\n\n        if (isDocumentReady()) {\n            return reject(new Error(`Document is ready and element ${ name } does not exist`));\n        }\n\n        let interval = setInterval(() => {\n\n            el = getElementSafe(id);\n\n            if (el) {\n                clearInterval(interval);\n                return resolve(el);\n            }\n\n            if (isDocumentReady()) {\n                clearInterval(interval);\n                return reject(new Error(`Document is ready and element ${ name } does not exist`));\n            }\n        }, 10);\n    });\n}\n\nexport function PopupOpenError(message : string) {\n    this.message = message;\n}\n\nPopupOpenError.prototype = Object.create(Error.prototype);\n\ntype PopupOptions = {|\n    name? : string,\n    width? : number,\n    height? : number,\n    top? : number,\n    left? : number,\n    status? : 0 | 1,\n    resizable? : 0 | 1,\n    toolbar? : 0 | 1,\n    menubar? : 0 | 1,\n    scrollbars? : 0 | 1\n|};\n\nexport function popup(url : string, options? : PopupOptions) : CrossDomainWindowType {\n\n    // $FlowFixMe\n    options = options || {};\n\n    let { width, height } = options;\n\n    let top = 0;\n    let left = 0;\n\n    if (width) {\n        if (window.outerWidth) {\n            left = Math.round((window.outerWidth - width) / 2) + window.screenX;\n        } else if (window.screen.width) {\n            left = Math.round((window.screen.width - width) / 2);\n        }\n    }\n\n    if (height) {\n        if (window.outerHeight) {\n            top = Math.round((window.outerHeight - height) / 2) + window.screenY;\n        } else if (window.screen.height) {\n            top = Math.round((window.screen.height - height) / 2);\n        }\n    }\n\n    options = {\n        top,\n        left,\n        width,\n        height,\n        status:     1,\n        toolbar:    0,\n        menubar:    0,\n        resizable:  1,\n        scrollbars: 1,\n        ...options\n    };\n\n    let name = options.name || '';\n    delete options.name;\n\n    // eslint-disable-next-line array-callback-return\n    let params = Object.keys(options).map(key => {\n        // $FlowFixMe\n        if (options[key]) {\n            return `${ key }=${ stringify(options[key]) }`;\n        }\n    }).filter(Boolean).join(',');\n\n    let win;\n\n    try {\n        win = window.open(url, name, params, true);\n    } catch (err) {\n        throw new PopupOpenError(`Can not open popup window - ${ err.stack || err.message }`);\n    }\n\n    if (isWindowClosed(win)) {\n        let err = new PopupOpenError(`Can not open popup window - blocked`);\n        throw err;\n    }\n\n    window.addEventListener('unload', () => win.close());\n\n    return win;\n}\n\n\nexport function writeToWindow(win : SameDomainWindowType, html : string) {\n    try {\n        win.document.open();\n        win.document.write(html);\n        win.document.close();\n    } catch (err) {\n        try {\n            win.location = `javascript: document.open(); document.write(${ JSON.stringify(html) }); document.close();`;\n        } catch (err2) {\n            // pass\n        }\n    }\n}\n\nexport function writeElementToWindow(win : SameDomainWindowType, el : HTMLElement) {\n\n    let tag = el.tagName.toLowerCase();\n\n    if (tag !== 'html') {\n        throw new Error(`Expected element to be html, got ${ tag }`);\n    }\n\n    let documentElement = win.document.documentElement;\n\n    while (documentElement.children && documentElement.children.length) {\n        documentElement.removeChild(documentElement.children[0]);\n    }\n\n    while (el.children.length) {\n        documentElement.appendChild(el.children[0]);\n    }\n}\n\nexport function setStyle(el : HTMLElement, styleText : string, doc : Document = window.document) {\n    // $FlowFixMe\n    if (el.styleSheet) {\n        // $FlowFixMe\n        el.styleSheet.cssText = styleText;\n    } else {\n        el.appendChild(doc.createTextNode(styleText));\n    }\n}\n\nexport type ElementOptionsType = {\n    style? : { [ string ] : string },\n    id? : string,\n    class? : ?Array<string>,\n    attributes? : { [ string ] : string },\n    styleSheet? : ?string,\n    html? : ?string\n};\n\nlet awaitFrameLoadPromises : WeakMap<HTMLIFrameElement, ZalgoPromise<HTMLIFrameElement>>;\n\nexport function awaitFrameLoad(frame : HTMLIFrameElement) : ZalgoPromise<HTMLIFrameElement> {\n    awaitFrameLoadPromises = awaitFrameLoadPromises || new WeakMap();\n\n    if (awaitFrameLoadPromises.has(frame)) {\n        let promise = awaitFrameLoadPromises.get(frame);\n        if (promise) {\n            return promise;\n        }\n    }\n\n    let promise = new ZalgoPromise((resolve, reject) => {\n        frame.addEventListener('load', () => {\n            linkFrameWindow(frame);\n            resolve(frame);\n        });\n\n        frame.addEventListener('error', (err : Event) => {\n            if (frame.contentWindow) {\n                resolve(frame);\n            } else {\n                reject(err);\n            }\n        });\n    });\n\n    awaitFrameLoadPromises.set(frame, promise);\n\n    return promise;\n}\n\nexport function awaitFrameWindow(frame : HTMLIFrameElement) : ZalgoPromise<CrossDomainWindowType> {\n\n    if (frame.contentWindow) {\n        return ZalgoPromise.resolve(frame.contentWindow);\n    }\n\n    return awaitFrameLoad(frame).then(loadedFrame => {\n\n        if (!loadedFrame.contentWindow) {\n            throw new Error(`Could not find window in iframe`);\n        }\n\n        return loadedFrame.contentWindow;\n    });\n}\n\nexport function createElement(tag : string = 'div', options : ElementOptionsType = {}, container : ?HTMLElement) : HTMLElement {\n\n    tag = tag.toLowerCase();\n    let element = document.createElement(tag);\n\n    if (options.style) {\n        extend(element.style, options.style);\n    }\n\n    if (options.class) {\n        element.className = options.class.join(' ');\n    }\n\n    if (options.id) {\n        element.setAttribute('id', options.id);\n    }\n\n    if (options.attributes) {\n        for (let key of Object.keys(options.attributes)) {\n            element.setAttribute(key, options.attributes[key]);\n        }\n    }\n\n    if (options.styleSheet) {\n        setStyle(element, options.styleSheet);\n    }\n\n    if (container) {\n        appendChild(container, element);\n    }\n\n    if (options.html) {\n        if (tag === 'iframe') {\n            // $FlowFixMe\n            if (!container || !element.contentWindow) {\n                throw new Error(`Iframe html can not be written unless container provided and iframe in DOM`);\n            }\n\n            // $FlowFixMe\n            writeToWindow(element.contentWindow, options.html);\n\n        } else {\n            element.innerHTML = options.html;\n        }\n    }\n\n    return element;\n}\n\n\nexport type IframeElementOptionsType = {\n    style? : { [ string ] : string },\n    class? : ?Array<string>,\n    attributes? : { [ string ] : string },\n    styleSheet? : ?string,\n    html? : ?string,\n    url? : ?string\n};\n\nexport function iframe(options : IframeElementOptionsType = {}, container : ?HTMLElement, attempts : number = 3) : HTMLIFrameElement {\n\n    let attributes = options.attributes || {};\n    let style = options.style || {};\n\n    let frame = createElement('iframe', {\n        attributes: {\n            frameBorder:       '0',\n            allowTransparency: 'true',\n            ...attributes\n        },\n        style: {\n            backgroundColor: 'transparent',\n            ...style\n        },\n        html:  options.html,\n        class: options.class\n    });\n\n    // $FlowFixMe\n    awaitFrameLoad(frame);\n\n    if (container) {\n        let el = getElement(container);\n        el.appendChild(frame);\n    \n        // $FlowFixMe\n        let win = frame.contentWindow;\n    \n        if (win) {\n            try {\n                // $FlowFixMe\n                noop(win.name);\n            } catch (err) {\n                el.removeChild(frame);\n    \n                if (!attempts) {\n                    throw new Error(`Frame is cross-domain: ${ err.stack }`);\n                }\n    \n                return iframe(options, container, attempts - 1);\n            }\n        }\n    }\n\n    if (options.url || window.navigator.userAgent.match(/MSIE|Edge/i)) {\n        frame.setAttribute('src', options.url || 'about:blank');\n    }\n\n    // $FlowFixMe\n    return frame;\n}\n\nexport function addEventListener(obj : HTMLElement, event : string, handler : (event : Event) => void) : CancelableType {\n    obj.addEventListener(event, handler);\n    return {\n        cancel() {\n            obj.removeEventListener(event, handler);\n        }\n    };\n}\n\nexport function bindEvents(element : HTMLElement, eventNames : Array<string>, handler : (event : Event) => void) : CancelableType {\n\n    handler = once(handler);\n\n    for (let eventName of eventNames) {\n        element.addEventListener(eventName, handler);\n    }\n\n    return {\n        cancel: once(() => {\n            for (let eventName of eventNames) {\n                element.removeEventListener(eventName, handler);\n            }\n        })\n    };\n}\n\nconst VENDOR_PREFIXES = [ 'webkit', 'moz', 'ms', 'o' ];\n\nexport function setVendorCSS(element : HTMLElement, name : string, value : string) {\n\n    // $FlowFixMe\n    element.style[name] = value;\n\n    let capitalizedName = capitalizeFirstLetter(name);\n\n    for (let prefix of VENDOR_PREFIXES) {\n        // $FlowFixMe\n        element.style[`${ prefix }${ capitalizedName }`] = value;\n    }\n}\n\nconst ANIMATION_START_EVENTS = [ 'animationstart', 'webkitAnimationStart', 'oAnimationStart', 'MSAnimationStart' ];\nconst ANIMATION_END_EVENTS   = [ 'animationend', 'webkitAnimationEnd', 'oAnimationEnd', 'MSAnimationEnd' ];\n\nexport function animate(element : ElementRefType, name : string, clean : (Function) => void, timeout : number = 1000) : ZalgoPromise<void> {\n    return new ZalgoPromise((resolve, reject) => {\n\n        let el = getElement(element);\n\n        if (!el) {\n            return resolve();\n        }\n\n        let hasStarted = false;\n\n        let startTimeout;\n        let endTimeout;\n        let startEvent;\n        let endEvent;\n\n        function cleanUp() {\n            clearTimeout(startTimeout);\n            clearTimeout(endTimeout);\n            startEvent.cancel();\n            endEvent.cancel();\n        }\n\n        startEvent = bindEvents(el, ANIMATION_START_EVENTS, event => {\n\n            // $FlowFixMe\n            if (event.target !== el || event.animationName !== name) {\n                return;\n            }\n\n            clearTimeout(startTimeout);\n\n            event.stopPropagation();\n\n            startEvent.cancel();\n            hasStarted = true;\n\n            endTimeout = setTimeout(() => {\n                cleanUp();\n                resolve();\n            }, timeout);\n        });\n\n        endEvent = bindEvents(el, ANIMATION_END_EVENTS, event => {\n\n            // $FlowFixMe\n            if (event.target !== el || event.animationName !== name) {\n                return;\n            }\n\n            cleanUp();\n\n            // $FlowFixMe\n            if (typeof event.animationName === 'string' && event.animationName !== name) {\n                return reject(`Expected animation name to be ${ name }, found ${ event.animationName }`);\n            }\n\n            return resolve();\n        });\n\n        setVendorCSS(el, 'animationName', name);\n\n        startTimeout = setTimeout(() => {\n            if (!hasStarted) {\n                cleanUp();\n                return resolve();\n            }\n        }, 200);\n\n        if (clean) {\n            clean(cleanUp);\n        }\n    });\n}\n\nconst STYLE = {\n\n    DISPLAY: {\n        NONE:  'none',\n        BLOCK: 'block'\n    },\n\n    VISIBILITY: {\n        VISIBLE: 'visible',\n        HIDDEN:  'hidden'\n    },\n\n    IMPORTANT: 'important'\n};\n\nexport function makeElementVisible(element : HTMLElement) {\n    element.style.setProperty('visibility', '');\n}\n\nexport function makeElementInvisible(element : HTMLElement) {\n    element.style.setProperty('visibility', STYLE.VISIBILITY.HIDDEN, STYLE.IMPORTANT);\n}\n\n\nexport function showElement(element : HTMLElement) {\n    element.style.setProperty('display', '');\n}\n\nexport function hideElement(element : HTMLElement) {\n    element.style.setProperty('display', STYLE.DISPLAY.NONE, STYLE.IMPORTANT);\n}\n\nexport function destroyElement(element : HTMLElement) {\n    if (element && element.parentNode) {\n        element.parentNode.removeChild(element);\n    }\n}\n\nexport function showAndAnimate(element : HTMLElement, name : string, clean : (Function) => void) : ZalgoPromise<void> {\n    let animation = animate(element, name, clean);\n    showElement(element);\n    return animation;\n}\n\nexport function animateAndHide(element : HTMLElement, name : string, clean : (Function) => void) : ZalgoPromise<void> {\n    return animate(element, name, clean).then(() => {\n        hideElement(element);\n    });\n}\n\nexport function addClass(element : HTMLElement, name : string) {\n    element.classList.add(name);\n}\n\nexport function removeClass(element : HTMLElement, name : string) {\n    element.classList.remove(name);\n}\n\nexport function isElementClosed(el : HTMLElement) : boolean {\n    if (!el || !el.parentNode) {\n        return true;\n    }\n    return false;\n}\n\nexport function watchElementForClose(element : HTMLElement, handler : () => mixed) : CancelableType {\n    handler = once(handler);\n\n    let interval;\n\n    if (isElementClosed(element)) {\n        handler();\n    } else {\n        interval = safeInterval(() => {\n            if (isElementClosed(element)) {\n                interval.cancel();\n                handler();\n            }\n        }, 50);\n    }\n\n    return {\n        cancel() {\n            if (interval) {\n                interval.cancel();\n            }\n        }\n    };\n}\n\nexport function fixScripts(el : HTMLElement, doc : Document = window.document) {\n    for (let script of querySelectorAll('script', el)) {\n        let parentNode = script.parentNode;\n\n        if (!parentNode) {\n            continue;\n        }\n\n        let newScript = doc.createElement('script');\n        newScript.text = script.textContent;\n        parentNode.replaceChild(newScript, script);\n    }\n}\n\ntype OnResizeOptions = {|\n    width? : boolean,\n    height? : boolean,\n    interval? : number,\n    win? : SameDomainWindowType\n|};\n\nexport function onResize(el : HTMLElement, handler : ({ width : number, height : number }) => void, { width = true, height = true, interval = 100, win = window } : OnResizeOptions = {}) : {} {\n    let currentWidth = el.offsetWidth;\n    let currentHeight = el.offsetHeight;\n\n    handler({ width: currentWidth, height: currentHeight });\n\n    let check = () => {\n        let newWidth = el.offsetWidth;\n        let newHeight = el.offsetHeight;\n\n        if ((width && newWidth !== currentWidth) || (height && newHeight !== currentHeight)) {\n            handler({ width: newWidth, height: newHeight });\n        }\n\n        currentWidth = newWidth;\n        currentHeight = newHeight;\n    };\n\n    let observer;\n    let timeout;\n\n    if (typeof win.ResizeObserver !== 'undefined') {\n        observer = new win.ResizeObserver(check);\n        observer.observe(el);\n\n    } else if (typeof win.MutationObserver !== 'undefined') {\n        observer = new win.MutationObserver(check);\n        observer.observe(el, {\n            attributes:    true,\n            childList:     true,\n            subtree:       true,\n            characterData: false\n        });\n        win.addEventListener('resize', check);\n    } else {\n        let loop = () => {\n            check();\n            timeout = setTimeout(loop, interval);\n        };\n        loop();\n    }\n\n    return {\n        cancel: () => {\n            observer.disconnect();\n            window.removeEventListener('resize', check);\n            clearTimeout(timeout);\n        }\n    };\n}\n","/* @flow */\n\nexport function hasNativeWeakMap() : boolean {\n\n    if (typeof WeakMap === 'undefined') {\n        return false;\n    }\n\n    if (typeof Object.freeze === 'undefined') {\n        return false;\n    }\n\n    try {\n\n        let testWeakMap = new WeakMap();\n        let testKey = {};\n        let testValue = '__testvalue__';\n\n        Object.freeze(testKey);\n\n        testWeakMap.set(testKey, testValue);\n\n        if (testWeakMap.get(testKey) === testValue) {\n            return true;\n        }\n\n        return false;\n\n    } catch (err) {\n\n        return false;\n    }\n}\n","/* @flow */\n\nexport function isPerc(str : string) : boolean {\n    return typeof str === 'string' && (/^[0-9]+%$/).test(str);\n}\n\nexport function isPx(str : string) : boolean {\n    return typeof str === 'string' && (/^[0-9]+px$/).test(str);\n}\n\nexport function toNum(val : string | number) : number {\n\n    if (typeof val === 'number') {\n        return val;\n    }\n\n    let match = val.match(/^([0-9]+)(px|%)$/);\n\n    if (!match) {\n        throw new Error(`Could not match css value from ${ val }`);\n    }\n\n    return parseInt(match[1], 10);\n}\n\nexport function toPx(val : number | string) : string {\n    return `${ toNum(val) }px`;\n}\n\nexport function toCSS(val : number | string) : string {\n\n    if (typeof val === 'number') {\n        return toPx(val);\n    }\n\n    return isPerc(val) ? val : toPx(val);\n}\n\nexport function percOf(num : number, perc : string) : number {\n    return parseInt(num * toNum(perc)  / 100, 10);\n}\n\nexport function normalizeDimension(dim : string | number, max : number) : number {\n    if (typeof dim === 'number') {\n        return dim;\n    } else if (isPerc(dim)) {\n        return percOf(max, dim);\n    } else if (isPx(dim)) {\n        return toNum(dim);\n    } else {\n        throw new Error(`Can not normalize dimension: ${ dim }`);\n    }\n}\n","/* @flow */\n\nexport const BRIDGE_TIMEOUT = 5000;\nexport const CHILD_WINDOW_TIMEOUT = 5000;\n\nexport const ACK_TIMEOUT = 2000;\nexport const ACK_TIMEOUT_KNOWN = 10000;\nexport const RES_TIMEOUT = __TEST__ ? 2000 : -1;\n","/* @flow */\n\nexport const MESSAGE_TYPE = {\n    REQUEST:  ('postrobot_message_request' : 'postrobot_message_request'),\n    RESPONSE: ('postrobot_message_response' : 'postrobot_message_response'),\n    ACK:      ('postrobot_message_ack' : 'postrobot_message_ack')\n};\n\nexport const MESSAGE_ACK = {\n    SUCCESS: ('success' : 'success'),\n    ERROR:   ('error' : 'error')\n};\n\nexport const MESSAGE_NAME = {\n    METHOD:      ('postrobot_method' : 'postrobot_method'),\n    HELLO:       ('postrobot_hello' : 'postrobot_hello'),\n    OPEN_TUNNEL: ('postrobot_open_tunnel' : 'postrobot_open_tunnel')\n};\n\nexport const SEND_STRATEGY = {\n    POST_MESSAGE: ('postrobot_post_message' : 'postrobot_post_message'),\n    BRIDGE:       ('postrobot_bridge' : 'postrobot_bridge'),\n    GLOBAL:       ('postrobot_global' : 'postrobot_global')\n};\n\nexport const BRIDGE_NAME_PREFIX = '__postrobot_bridge__';\nexport const POSTROBOT_PROXY =    '__postrobot_proxy__';\n\nexport const WILDCARD = '*';\n\nexport const SERIALIZATION_TYPE = {\n    CROSS_DOMAIN_ZALGO_PROMISE: ('cross_domain_zalgo_promise' : 'cross_domain_zalgo_promise'),\n    CROSS_DOMAIN_FUNCTION:      ('cross_domain_function' : 'cross_domain_function'),\n    CROSS_DOMAIN_WINDOW:        ('cross_domain_window' : 'cross_domain_window')\n};\n","/* @flow */\n\nimport { type CrossDomainWindowType, type SameDomainWindowType } from 'cross-domain-utils/src';\nimport { WeakMap } from 'cross-domain-safe-weakmap/src';\nimport { getOrSet } from 'belter/src';\n\nexport function getGlobal(win : SameDomainWindowType = window) : Object {\n    if (win !== window) {\n        return win[__POST_ROBOT__.__GLOBAL_KEY__];\n    }\n    const global : Object = win[__POST_ROBOT__.__GLOBAL_KEY__] = win[__POST_ROBOT__.__GLOBAL_KEY__] || {};\n    return global;\n}\n\ntype ObjectGetter = () => Object;\nconst getObj : ObjectGetter = () => ({});\n\ntype GetOrSet<T> = ((string, () => T) => T) & ((string, () => void) => void);\n\ntype GlobalStore<T> = {|\n    get : ((string, T) => T) & ((string, void) => T | void),\n    set : (string, T) => T,\n    has : (string) => boolean,\n    del : (string) => void,\n    getOrSet : GetOrSet<T>,\n    reset : () => void,\n    keys : () => $ReadOnlyArray<string>\n|};\n\n// $FlowFixMe\nexport function globalStore<T : mixed>(key? : string = 'store', defStore? : ObjectGetter = getObj) : GlobalStore<T> {\n    return getOrSet(getGlobal(), key, () => {\n        let store = defStore();\n\n        return {\n            has: (storeKey) => {\n                return store.hasOwnProperty(storeKey);\n            },\n            get: (storeKey, defVal) => {\n                // $FlowFixMe\n                return store.hasOwnProperty(storeKey) ? store[storeKey] : defVal;\n            },\n            set: (storeKey, val) => {\n                store[storeKey] = val;\n                return val;\n            },\n            del: (storeKey) => {\n                delete store[storeKey];\n            },\n            getOrSet: (storeKey, getter) => {\n                // $FlowFixMe\n                return getOrSet(store, storeKey, getter);\n            },\n            reset: () => {\n                store = defStore();\n            },\n            keys: () => {\n                return Object.keys(store);\n            }\n        };\n    });\n}\n\nexport class WildCard {}\n\nexport function getWildcard() : WildCard {\n    const global = getGlobal();\n    global.WINDOW_WILDCARD = global.WINDOW_WILDCARD || new WildCard();\n    return global.WINDOW_WILDCARD;\n}\n\ntype WindowStore<T> = {|\n    get : ((CrossDomainWindowType | WildCard, T) => T) & ((CrossDomainWindowType | WildCard, void) => T | void),\n    set : (CrossDomainWindowType | WildCard, T) => T,\n    has : (CrossDomainWindowType | WildCard) => boolean,\n    del : (CrossDomainWindowType | WildCard) => void,\n    getOrSet : (CrossDomainWindowType | WildCard, () => T) => T\n|};\n\n// $FlowFixMe\nexport function windowStore<T>(key? : string = 'store', defStore? : ObjectGetter = getObj) : WindowStore<T> {\n    return globalStore('windowStore').getOrSet(key, () => {\n        const winStore = new WeakMap();\n\n        const getStore = (win : CrossDomainWindowType | WildCard) : ObjectGetter => {\n            return winStore.getOrSet(win, defStore);\n        };\n    \n        return {\n            has: (win) => {\n                const store = getStore(win);\n                return store.hasOwnProperty(key);\n            },\n            get: (win, defVal) => {\n                const store = getStore(win);\n                // $FlowFixMe\n                return store.hasOwnProperty(key) ? store[key] : defVal;\n            },\n            set: (win, val) => {\n                const store = getStore(win);\n                store[key] = val;\n                return val;\n            },\n            del: (win) => {\n                const store = getStore(win);\n                delete store[key];\n            },\n            getOrSet: (win, getter) => {\n                const store = getStore(win);\n                return getOrSet(store, key, getter);\n            }\n        };\n    });\n}\n","/* @flow */\n\nimport { getAncestor, type CrossDomainWindowType } from 'cross-domain-utils/src';\nimport { ZalgoPromise } from 'zalgo-promise/src';\nimport { noop, uniqueID } from 'belter/src';\n\nimport { MESSAGE_NAME, WILDCARD } from '../conf';\nimport { windowStore, globalStore } from '../global';\nimport type { OnType, SendType, CancelableType } from '../types';\n\nfunction getInstanceID() : string {\n    return globalStore('instance').getOrSet('instanceID', uniqueID);\n}\n\nfunction getHelloPromise(win : CrossDomainWindowType) : ZalgoPromise<{ win : CrossDomainWindowType, domain : string }> {\n    const helloPromises = windowStore('helloPromises');\n    return helloPromises.getOrSet(win, () => new ZalgoPromise());\n}\n\nfunction listenForHello({ on } : { on : OnType }) : CancelableType {\n    return on(MESSAGE_NAME.HELLO, { domain: WILDCARD }, ({ source, origin }) => {\n        getHelloPromise(source).resolve({ win: source, domain: origin });\n        return { instanceID: getInstanceID() };\n    });\n}\n\nexport function sayHello(win : CrossDomainWindowType, { send } : { send : SendType }) : ZalgoPromise<{ win : CrossDomainWindowType, domain : string, instanceID : string }> {\n    return send(win, MESSAGE_NAME.HELLO, { instanceID: getInstanceID() }, { domain: WILDCARD, timeout: -1 })\n        .then(({ origin, data: { instanceID } }) => {\n            getHelloPromise(win).resolve({ win, domain: origin });\n            return { win, domain: origin, instanceID };\n        });\n}\n\nexport function getWindowInstanceID(win : CrossDomainWindowType, { send } : { send : SendType }) : ZalgoPromise<string> {\n    return windowStore('windowInstanceIDPromises').getOrSet(win, () => {\n        return sayHello(win, { send }).then(({ instanceID }) => instanceID);\n    });\n}\n\nexport function initHello({ on, send } : { on : OnType, send : SendType }) : CancelableType {\n    return globalStore('builtinListeners').getOrSet('helloListener', () => {\n        const listener = listenForHello({ on });\n\n        const parent = getAncestor();\n        if (parent) {\n            sayHello(parent, { send }).catch(noop);\n        }\n\n        return listener;\n    });\n}\n\nexport function awaitWindowHello(win : CrossDomainWindowType, timeout : number = 5000, name : string = 'Window') : ZalgoPromise<{ win : CrossDomainWindowType, domain : string }> {\n    let promise = getHelloPromise(win);\n\n    if (timeout !== -1) {\n        promise = promise.timeout(timeout, new Error(`${ name } did not load after ${ timeout }ms`));\n    }\n\n    return promise;\n}\n","/* @flow */\n\nimport { type CrossDomainWindowType } from 'cross-domain-utils/src';\n\nimport { windowStore } from '../global';\n\nexport function markWindowKnown(win : CrossDomainWindowType) {\n    const knownWindows = windowStore('knownWindows');\n    knownWindows.set(win, true);\n}\n\nexport function isWindowKnown(win : CrossDomainWindowType) : boolean {\n    const knownWindows = windowStore('knownWindows');\n    return knownWindows.get(win, false);\n}\n","/* @flow */\n\nexport const TYPE = {\n    FUNCTION:  ('function' : 'function'),\n    ERROR:     ('error' : 'error'),\n    PROMISE:   ('promise' : 'promise'),\n    REGEX:     ('regex' : 'regex'),\n    DATE:      ('date' : 'date'),\n    ARRAY:     ('array' : 'array'),\n    OBJECT:    ('object' : 'object'),\n    STRING:    ('string' : 'string'),\n    NUMBER:    ('number' : 'number'),\n    BOOLEAN:   ('boolean' : 'boolean'),\n    NULL:      ('null' : 'null'),\n    UNDEFINED: ('undefined' : 'undefined')\n};\n","/* @flow */\n\nimport { TYPE } from './constants';\nimport type { CustomSerializedType } from './types';\n\nexport function isSerializedType(item : mixed) : boolean {\n    return (typeof item === 'object' && item !== null && typeof item.__type__ === 'string');\n}\n\nexport function determineType(val : mixed) : $Values<typeof TYPE> | void {\n    if (typeof val === 'undefined') {\n        return TYPE.UNDEFINED;\n    }\n\n    if (val === null) {\n        return TYPE.NULL;\n    }\n\n    if (Array.isArray(val)) {\n        return TYPE.ARRAY;\n    }\n\n    if (typeof val === 'function') {\n        return TYPE.FUNCTION;\n    }\n\n    if (typeof val === 'object') {\n\n        if (val instanceof Error) {\n            return TYPE.ERROR;\n        }\n\n        if (typeof val.then === 'function') {\n            return TYPE.PROMISE;\n        }\n\n        if (Object.prototype.toString.call(val) === '[object RegExp]') {\n            return TYPE.REGEX;\n        }\n\n        if (Object.prototype.toString.call(val) === '[object Date]') {\n            return TYPE.DATE;\n        }\n\n        return TYPE.OBJECT;\n    }\n\n    if (typeof val === 'string') {\n        return TYPE.STRING;\n    }\n\n    if (typeof val === 'number') {\n        return TYPE.NUMBER;\n    }\n\n    if (typeof val === 'boolean') {\n        return TYPE.BOOLEAN;\n    }\n}\n\nexport function serializeType<T : string, V : mixed>(type : T, val : V) : CustomSerializedType<T, V> {\n    return {\n        __type__: type,\n        __val__:  val\n    };\n}\n","/* @flow */\n\nimport { TYPE } from './constants';\nimport type { Thenable, CustomSerializedType, NativeSerializedType } from './types';\nimport { determineType, isSerializedType } from './common';\nimport {\n    serializeFunction,\n    serializeError, type SerializedError,\n    serializePromise,\n    serializeRegex, type SerializedRegex,\n    serializeDate, type SerializedDate,\n    serializeArray,\n    serializeObject,\n    serializeString,\n    serializeNumber,\n    serializeBoolean,\n    serializeNull\n} from './serializers';\n\ntype NativeSerializer<V : mixed, S : mixed, T : $Values<typeof TYPE>> = (value : V, key : string) => NativeSerializedType<T, S>;\ntype CustomSerializer<V : mixed, S : mixed, T : string> = (value : V, key : string) => CustomSerializedType<T, S>;\ntype PrimitiveSerializer<V : mixed, S : mixed> = (value : V, key : string) => S;\ntype CustomOrPrimitiveSerializer<V : mixed, T : string> = CustomSerializer<V, *, T> | PrimitiveSerializer<V, *>;\ntype NativeOrCustomOrPrimitiveSerializer<V : mixed, S : mixed, T : string> = NativeSerializer<V, S, T> | CustomOrPrimitiveSerializer<V, T>;\n\ntype Serializers = {|\n    function? : CustomOrPrimitiveSerializer<Function, typeof TYPE.FUNCTION>,\n    error? : NativeOrCustomOrPrimitiveSerializer<Error, SerializedError, typeof TYPE.ERROR>,\n    promise? : CustomOrPrimitiveSerializer<Thenable, typeof TYPE.PROMISE>,\n    regex? : NativeOrCustomOrPrimitiveSerializer<RegExp, SerializedRegex, typeof TYPE.REGEX>,\n    date? : NativeOrCustomOrPrimitiveSerializer<Date, SerializedDate, typeof TYPE.DATE>,\n    array? : CustomOrPrimitiveSerializer<$ReadOnlyArray<mixed>, typeof TYPE.ARRAY>,\n    object? : CustomOrPrimitiveSerializer<Object, typeof TYPE.OBJECT>,\n    string? : CustomOrPrimitiveSerializer<string, typeof TYPE.STRING>,\n    number? : CustomOrPrimitiveSerializer<number, typeof TYPE.NUMBER>,\n    boolean? : CustomOrPrimitiveSerializer<boolean, typeof TYPE.BOOLEAN>,\n    null? : CustomOrPrimitiveSerializer<null, typeof TYPE.NULL>\n|};\n\nconst SERIALIZER : Serializers = {\n    [ TYPE.FUNCTION ]:  serializeFunction,\n    [ TYPE.ERROR ]:     serializeError,\n    [ TYPE.PROMISE ]:   serializePromise,\n    [ TYPE.REGEX ]:     serializeRegex,\n    [ TYPE.DATE ]:      serializeDate,\n    [ TYPE.ARRAY ]:     serializeArray,\n    [ TYPE.OBJECT ]:    serializeObject,\n    [ TYPE.STRING ]:    serializeString,\n    [ TYPE.NUMBER ]:    serializeNumber,\n    [ TYPE.BOOLEAN ]:   serializeBoolean,\n    [ TYPE.NULL ]:      serializeNull\n};\n\n// $FlowFixMe\nconst defaultSerializers : Serializers = {};\n\nexport function serialize<T : mixed>(obj : T, serializers : Serializers = defaultSerializers) : string {\n\n    function replacer(key) : ?mixed {\n        const val = this[key];\n\n        if (isSerializedType(this)) {\n            return val;\n        }\n        \n        const type = determineType(val);\n\n        if (!type) {\n            return val;\n        }\n\n        // $FlowFixMe\n        const serializer = serializers[type] || SERIALIZER[type];\n\n        if (!serializer) {\n            return val;\n        }\n\n        return serializer(val, key);\n    }\n\n    const result = JSON.stringify(obj, replacer);\n\n    if (typeof result === 'undefined') {\n        return TYPE.UNDEFINED;\n    }\n\n    return result;\n}\n","/* @flow */\n\nexport type SerializedFunction = void;\n\nexport function serializeFunction() : SerializedFunction {\n    // pass\n}\n\nexport function deserializeFunction() {\n    throw new Error(`Function serialization is not implemented; nothing to deserialize`);\n}\n","/* @flow */\n\nimport { serializeType } from '../common';\nimport { TYPE } from '../constants';\nimport type { NativeSerializedType } from '../types';\n\nexport type SerializedError = {|\n    message : string,\n    stack : string,\n    code : string | number | void\n|};\n\n// $FlowFixMe\nexport function serializeError({ message, stack, code } : Error) : NativeSerializedType<typeof TYPE.ERROR, SerializedError> {\n    return serializeType(TYPE.ERROR, { message, stack, code });\n}\n\nexport function deserializeError({ message, stack, code } : SerializedError) : Error {\n    const error = new Error(message);\n    // $FlowFixMe\n    error.code = code;\n    error.stack = `${ stack }\\n\\n${ error.stack }`;\n    return error;\n}\n","/* @flow */\n\nexport type SerializedPromise = void;\n\nexport function serializePromise() : SerializedPromise {\n    // pass\n}\n\nexport function deserializePromise() {\n    throw new Error(`Promise serialization is not implemented; nothing to deserialize`);\n}\n","/* @flow */\n\nimport { serializeType } from '../common';\nimport { TYPE } from '../constants';\nimport type { NativeSerializedType } from '../types';\n\nexport type SerializedRegex = string;\n\nexport function serializeRegex(val : RegExp) : NativeSerializedType<typeof TYPE.REGEX, SerializedRegex> {\n    return serializeType(TYPE.REGEX, val.source);\n}\n\nexport function deserializeRegex(val : string) : RegExp {\n    // eslint-disable-next-line security/detect-non-literal-regexp\n    return new RegExp(val);\n}\n","/* @flow */\n\nimport { serializeType } from '../common';\nimport { TYPE } from '../constants';\nimport type { NativeSerializedType } from '../types';\n\nexport type SerializedDate = string;\n\nexport function serializeDate(val : Date) : NativeSerializedType<typeof TYPE.DATE, SerializedDate> {\n    return serializeType(TYPE.DATE, val.toJSON());\n}\n\nexport function deserializeDate(val : string) : Date {\n    return new Date(val);\n}\n","/* @flow */\n\nexport type SerializedArray<T : mixed = mixed> = $ReadOnlyArray<T>;\n\nexport function serializeArray<T : mixed>(val : $ReadOnlyArray<T>) : SerializedArray<T> {\n    return val;\n}\n\nexport function deserializeArray<T : mixed>(val : SerializedArray<T>) : $ReadOnlyArray<T> {\n    return val;\n}\n","/* @flow */\n\nexport type SerializedObject = Object;\n\nexport function serializeObject(val : Object) : SerializedObject {\n    return val;\n}\n\nexport function deserializeObject(val : SerializedObject) : Object {\n    return val;\n}\n","/* @flow */\n\nexport type SerializedString = string;\n\nexport function serializeString(val : string) : SerializedString {\n    return val;\n}\n\nexport function deserializeString(val : SerializedString) : string {\n    return val;\n}\n","/* @flow */\n\nexport type SerializedNumber = number;\n\nexport function serializeNumber(val : number) : SerializedNumber {\n    return val;\n}\n\nexport function deserializeNumber(val : SerializedNumber) : number {\n    return val;\n}\n","/* @flow */\n\nexport type SerializedBoolean = boolean;\n\nexport function serializeBoolean(val : boolean) : SerializedBoolean {\n    return val;\n}\n\nexport function deserializeBoolean(val : SerializedBoolean) : boolean {\n    return val;\n}\n","/* @flow */\n\nexport type SerializedNull = null;\n\nexport function serializeNull(val : null) : SerializedNull {\n    return val;\n}\n\nexport function deserializeNull(val : SerializedNull) : null {\n    return val;\n}\n","/* @flow */\n\nimport type { Thenable } from './types';\nimport { TYPE } from './constants';\nimport { determineType, isSerializedType } from './common';\nimport {\n    deserializeFunction,\n    deserializeError, type SerializedError,\n    deserializePromise,\n    deserializeRegex, type SerializedRegex,\n    deserializeDate, type SerializedDate,\n    deserializeArray,\n    deserializeObject,\n    deserializeString,\n    deserializeNumber,\n    deserializeBoolean,\n    deserializeNull\n} from './serializers';\n\ntype Deserializer<V : mixed, S : mixed> = (serializedValue : S, key : string) => V;\ntype PrimitiveDeserializer<V, S = V> = (serializedValue : S, key : string) => V;\n\ntype Deserializers = {\n    function? : Deserializer<Function, *>,\n    error? : Deserializer<Error, SerializedError>,\n    promise? : Deserializer<Thenable, *>,\n    regex? : Deserializer<RegExp, SerializedRegex>,\n    date? : Deserializer<Date, SerializedDate>,\n    array? : PrimitiveDeserializer<$ReadOnlyArray<mixed>>,\n    object? : PrimitiveDeserializer<Object>,\n    string? : PrimitiveDeserializer<string>,\n    number? : PrimitiveDeserializer<number>,\n    boolean? : PrimitiveDeserializer<boolean>,\n    null? : PrimitiveDeserializer<null>,\n    [string] : Deserializer<mixed, *>\n};\n\n// $FlowFixMe\nconst DESERIALIZER : Deserializers = {\n    [ TYPE.FUNCTION ]:  deserializeFunction,\n    [ TYPE.ERROR ]:     deserializeError,\n    [ TYPE.PROMISE ]:   deserializePromise,\n    [ TYPE.REGEX ]:     deserializeRegex,\n    [ TYPE.DATE ]:      deserializeDate,\n    [ TYPE.ARRAY ]:     deserializeArray,\n    [ TYPE.OBJECT ]:    deserializeObject,\n    [ TYPE.STRING ]:    deserializeString,\n    [ TYPE.NUMBER ]:    deserializeNumber,\n    [ TYPE.BOOLEAN ]:   deserializeBoolean,\n    [ TYPE.NULL ]:      deserializeNull\n};\n\n// $FlowFixMe\nconst defaultDeserializers : Deserializers = {};\n\nexport function deserialize<T : mixed | null | void>(str : string, deserializers : Deserializers = defaultDeserializers) : T {\n    if (str === TYPE.UNDEFINED) {\n        // $FlowFixMe\n        return;\n    }\n\n    function replacer(key, val) : ?mixed {\n        if (isSerializedType(this)) {\n            return val;\n        }\n\n        let type;\n        let value;\n\n        if (isSerializedType(val)) {\n            type = val.__type__;\n            value = val.__val__;\n        } else {\n            type = determineType(val);\n            value = val;\n        }\n\n        if (!type) {\n            return value;\n        }\n\n        // $FlowFixMe\n        const deserializer = deserializers[type] || DESERIALIZER[type];\n\n        if (!deserializer) {\n            return value;\n        }\n\n        return deserializer(value, key);\n    }\n\n    return JSON.parse(str, replacer);\n}\n","/* @flow */\n\nimport { ZalgoPromise } from 'zalgo-promise/src';\nimport { getDomain, isSameDomain, isOpener, isSameTopWindow, matchDomain, getUserAgent, getDomainFromUrl, type CrossDomainWindowType } from 'cross-domain-utils/src';\nimport { noop } from 'belter/src';\n\nimport { BRIDGE_NAME_PREFIX } from '../conf';\nimport { windowStore } from '../global';\n\nexport function needsBridgeForBrowser() : boolean {\n\n    if (getUserAgent(window).match(/MSIE|trident|edge\\/12|edge\\/13/i)) {\n        return true;\n    }\n\n    return false;\n}\n\nexport function needsBridgeForWin(win : CrossDomainWindowType) : boolean {\n\n    if (!isSameTopWindow(window, win)) {\n        return true;\n    }\n\n    return false;\n}\n\nexport function needsBridgeForDomain(domain : ?string, win : ?CrossDomainWindowType) : boolean {\n\n    if (domain) {\n        if (getDomain() !== getDomainFromUrl(domain)) {\n            return true;\n        }\n    } else if (win) {\n        if (!isSameDomain(win))  {\n            return true;\n        }\n    }\n\n    return false;\n}\n\nexport function needsBridge({ win, domain } : { win? : CrossDomainWindowType, domain? : string }) : boolean {\n\n    if (!needsBridgeForBrowser()) {\n        return false;\n    }\n\n    if (domain && !needsBridgeForDomain(domain, win)) {\n        return false;\n    }\n\n    if (win && !needsBridgeForWin(win)) {\n        return false;\n    }\n\n    return true;\n}\n\nexport function getBridgeName(domain : string) : string {\n\n    domain = domain || getDomainFromUrl(domain);\n\n    const sanitizedDomain = domain.replace(/[^a-zA-Z0-9]+/g, '_');\n\n    const id = `${ BRIDGE_NAME_PREFIX }_${ sanitizedDomain }`;\n\n    return id;\n}\n\nexport function isBridge() : boolean {\n    return Boolean(window.name && window.name === getBridgeName(getDomain()));\n}\n\nexport const documentBodyReady = new ZalgoPromise(resolve => {\n\n    if (window.document && window.document.body) {\n        return resolve(window.document.body);\n    }\n\n    const interval = setInterval(() => {\n        if (window.document && window.document.body) {\n            clearInterval(interval);\n            return resolve(window.document.body);\n        }\n    }, 10);\n});\n\nexport function registerRemoteWindow(win : CrossDomainWindowType) {\n    const remoteWindowPromises = windowStore('remoteWindowPromises');\n    remoteWindowPromises.getOrSet(win, () => new ZalgoPromise());\n}\n\nexport function findRemoteWindow(win : CrossDomainWindowType) : ZalgoPromise<(remoteWin : CrossDomainWindowType, message : string, remoteDomain : string) => void> {\n    const remoteWindowPromises = windowStore('remoteWindowPromises');\n    const remoteWinPromise = remoteWindowPromises.get(win);\n\n    if (!remoteWinPromise) {\n        throw new Error(`Remote window promise not found`);\n    }\n\n    return remoteWinPromise;\n}\n\nexport function registerRemoteSendMessage(win : CrossDomainWindowType, domain : string, sendMessage : (message : string) => void) {\n    const sendMessageWrapper = (remoteWin : CrossDomainWindowType, remoteDomain : string, message : string) => {\n        if (remoteWin !== win) {\n            throw new Error(`Remote window does not match window`);\n        }\n\n        if (!matchDomain(remoteDomain, domain)) {\n            throw new Error(`Remote domain ${ remoteDomain } does not match domain ${ domain }`);\n        }\n\n        sendMessage.fireAndForget(message);\n    };\n\n    findRemoteWindow(win).resolve(sendMessageWrapper);\n}\n\nexport function rejectRemoteSendMessage(win : CrossDomainWindowType, err : Error) {\n    findRemoteWindow(win).reject(err).catch(noop);\n}\n\nexport function sendBridgeMessage(win : CrossDomainWindowType, domain : string, message : string) : ZalgoPromise<void> {\n\n    const messagingChild  = isOpener(window, win);\n    const messagingParent = isOpener(win, window);\n\n    if (!messagingChild && !messagingParent) {\n        throw new Error(`Can only send messages to and from parent and popup windows`);\n    }\n\n    return findRemoteWindow(win).then(sendMessage => {\n        return sendMessage(win, domain, message);\n    });\n}\n","/* @flow */\n\nimport { isSameDomain, isWindowClosed, type CrossDomainWindowType, type DomainMatcher, getOpener, WINDOW_TYPE, isWindow } from 'cross-domain-utils/src';\nimport { ZalgoPromise } from 'zalgo-promise/src';\nimport { uniqueID, memoizePromise } from 'belter/src';\nimport { serializeType, type CustomSerializedType } from 'universal-serialize/src';\n\nimport { SERIALIZATION_TYPE } from '../conf';\nimport { windowStore, globalStore } from '../global';\nimport { getWindowInstanceID } from '../lib';\nimport { linkWindow } from '../bridge';\nimport type { OnType, SendType } from '../types';\n\nfunction cleanupProxyWindows() {\n    const idToProxyWindow = globalStore('idToProxyWindow');\n    for (const id of idToProxyWindow.keys()) {\n        // $FlowFixMe\n        if (idToProxyWindow.get(id).shouldClean()) {\n            idToProxyWindow.del(id);\n        }\n    }\n}\n\ntype SerializedProxyWindow = {|\n    id : string,\n    type : $Values<typeof WINDOW_TYPE>,\n    close : () => ZalgoPromise<void>,\n    focus : () => ZalgoPromise<void>,\n    isClosed : () => ZalgoPromise<boolean>,\n    setLocation : (string) => ZalgoPromise<void>,\n    setName : (string) => ZalgoPromise<void>,\n    getInstanceID : () => ZalgoPromise<string>\n|};\n\nexport class ProxyWindow {\n\n    isProxyWindow : true = true\n    serializedWindow : SerializedProxyWindow\n    actualWindow : CrossDomainWindowType\n    actualWindowPromise : ZalgoPromise<CrossDomainWindowType>\n    send : SendType\n\n    constructor(serializedWindow : SerializedProxyWindow, actualWindow? : ?CrossDomainWindowType, { send } : { send : SendType }) {\n        this.serializedWindow = serializedWindow;\n        this.actualWindowPromise = new ZalgoPromise();\n        if (actualWindow) {\n            this.setWindow(actualWindow);\n        }\n        this.serializedWindow.getInstanceID = memoizePromise(this.serializedWindow.getInstanceID);\n        this.send = send;\n    }\n\n    getType() : $Values<typeof WINDOW_TYPE> {\n        return this.serializedWindow.type;\n    }\n\n    isPopup() : boolean {\n        return this.getType() === WINDOW_TYPE.POPUP;\n    }\n\n    isIframe() : boolean {\n        return this.getType() === WINDOW_TYPE.IFRAME;\n    }\n\n    setLocation(href : string) : ZalgoPromise<ProxyWindow> {\n        return ZalgoPromise.try(() => {\n            if (this.actualWindow) {\n                this.actualWindow.location = href;\n            } else {\n                return this.serializedWindow.setLocation(href);\n            }\n        }).then(() => this);\n    }\n\n    setName(name : string) : ZalgoPromise<ProxyWindow> {\n        return ZalgoPromise.try(() => {\n            if (this.actualWindow) {\n                if (!isSameDomain(this.actualWindow)) {\n                    throw new Error(`Can not set name for window on different domain`);\n                }\n                // $FlowFixMe\n                this.actualWindow.name = name;\n                // $FlowFixMe\n                if (this.actualWindow.frameElement) {\n                    // $FlowFixMe\n                    this.actualWindow.frameElement.setAttribute('name', name);\n                }\n\n                if (__POST_ROBOT__.__IE_POPUP_SUPPORT__) {\n                    \n                    linkWindow({ win: this.actualWindow, name });\n                }\n\n            } else {\n                return this.serializedWindow.setName(name);\n            }\n        }).then(() => this);\n    }\n\n    close() : ZalgoPromise<ProxyWindow> {\n        return ZalgoPromise.try(() => {\n            if (this.actualWindow) {\n                this.actualWindow.close();\n            } else {\n                return this.serializedWindow.close();\n            }\n        }).then(() => this);\n    }\n\n    focus() : ZalgoPromise<ProxyWindow> {\n        return ZalgoPromise.try(() => {\n            if (this.actualWindow) {\n                this.actualWindow.focus();\n            }\n            return this.serializedWindow.focus();\n        }).then(() => this);\n    }\n\n    isClosed() : ZalgoPromise<boolean> {\n        return ZalgoPromise.try(() => {\n            if (this.actualWindow) {\n                return isWindowClosed(this.actualWindow);\n            } else {\n                return this.serializedWindow.isClosed();\n            }\n        });\n    }\n\n    getWindow() : ?CrossDomainWindowType {\n        return this.actualWindow;\n    }\n\n    setWindow(win : CrossDomainWindowType) {\n        this.actualWindow = win;\n        this.actualWindowPromise.resolve(win);\n    }\n\n    awaitWindow() : ZalgoPromise<CrossDomainWindowType> {\n        return this.actualWindowPromise;\n    }\n\n    matchWindow(win : CrossDomainWindowType) : ZalgoPromise<boolean> {\n        return ZalgoPromise.try(() => {\n            if (this.actualWindow) {\n                return win === this.actualWindow;\n            }\n            \n            return ZalgoPromise.all([\n                this.getInstanceID(),\n                getWindowInstanceID(win, { send: this.send })\n            ]).then(([ proxyInstanceID, knownWindowInstanceID ]) => {\n                const match = proxyInstanceID === knownWindowInstanceID;\n\n                if (match) {\n                    this.setWindow(win);\n                }\n\n                return match;\n            });\n        });\n    }\n\n    unwrap() : CrossDomainWindowType | ProxyWindow {\n        return this.actualWindow || this;\n    }\n\n    getInstanceID() : ZalgoPromise<string> {\n        if (this.actualWindow) {\n            return getWindowInstanceID(this.actualWindow, { send: this.send });\n        } else {\n            return this.serializedWindow.getInstanceID();\n        }\n    }\n\n    serialize() : SerializedProxyWindow {\n        return this.serializedWindow;\n    }\n\n    shouldClean() : boolean {\n        return this.actualWindow && isWindowClosed(this.actualWindow);\n    }\n\n    static unwrap(win : CrossDomainWindowType | ProxyWindow) : CrossDomainWindowType | ProxyWindow {\n        return ProxyWindow.isProxyWindow(win)\n            // $FlowFixMe\n            ? win.unwrap()\n            : win;\n    }\n\n    static serialize(win : CrossDomainWindowType | ProxyWindow, { send } : { send : SendType }) : SerializedProxyWindow {\n        cleanupProxyWindows();\n\n        return ProxyWindow.toProxyWindow(win, { send }).serialize();\n    }\n\n    static deserialize(serializedWindow : SerializedProxyWindow, { on, send } : { on : OnType, send : SendType }) : ProxyWindow {\n        cleanupProxyWindows();\n        \n        return globalStore('idToProxyWindow').getOrSet(serializedWindow.id, () => {\n            return new ProxyWindow(serializedWindow, null, { on, send });\n        });\n    }\n\n    static isProxyWindow(obj : CrossDomainWindowType | ProxyWindow) : boolean {\n        // $FlowFixMe\n        return Boolean(obj && !isWindow(obj) && obj.isProxyWindow);\n    }\n\n    static toProxyWindow(win : CrossDomainWindowType | ProxyWindow, { send } : { send : SendType }) : ProxyWindow {\n        cleanupProxyWindows();\n\n        if (ProxyWindow.isProxyWindow(win)) {\n            // $FlowFixMe\n            return win;\n        }\n\n        // $FlowFixMe\n        return windowStore('winToProxyWindow').getOrSet(win, () => {\n            const id = uniqueID();\n\n            return globalStore('idToProxyWindow').set(id, new ProxyWindow({\n                id,\n                // $FlowFixMe\n                type:          getOpener(win) ? WINDOW_TYPE.POPUP : WINDOW_TYPE.IFRAME,\n                // $FlowFixMe\n                getInstanceID: () => getWindowInstanceID(win, { send }),\n                close:         () => ZalgoPromise.try(() => {\n                    win.close();\n                }),\n                focus:         () => ZalgoPromise.try(() => {\n                    win.focus();\n                }),\n                isClosed:      () => ZalgoPromise.try(() => {\n                    // $FlowFixMe\n                    return isWindowClosed(win);\n                }),\n                setLocation:   (href) => ZalgoPromise.try(() => {\n                    // $FlowFixMe\n                    if (isSameDomain(win)) {\n                        try {\n                            if (win.location && typeof win.location.replace === 'function') {\n                                // $FlowFixMe\n                                win.location.replace(href);\n                                return;\n                            }\n                        } catch (err) {\n                            // pass\n                        }\n                    }\n    \n                    // $FlowFixMe\n                    win.location = href;\n                }),\n                setName:       (name) => ZalgoPromise.try(() => {\n                    if (__POST_ROBOT__.__IE_POPUP_SUPPORT__) {\n                        // $FlowFixMe\n                        linkWindow({ win, name });\n                    }\n                    // $FlowFixMe\n                    win.name = name;\n                })\n            // $FlowFixMe\n            }, win, { send }));\n        });\n    }\n}\n\nexport type SerializedWindow = CustomSerializedType<typeof SERIALIZATION_TYPE.CROSS_DOMAIN_WINDOW, SerializedProxyWindow>;\n\nexport function serializeWindow(destination : CrossDomainWindowType | ProxyWindow, domain : DomainMatcher, win : CrossDomainWindowType, { send } : { send : SendType }) : SerializedWindow {\n    return serializeType(SERIALIZATION_TYPE.CROSS_DOMAIN_WINDOW, ProxyWindow.serialize(win, { send }));\n}\n\nexport function deserializeWindow(source : CrossDomainWindowType | ProxyWindow, origin : string, win : SerializedProxyWindow, { on, send } : { on : OnType, send : SendType }) : ProxyWindow {\n    return ProxyWindow.deserialize(win, { on, send });\n}\n","/* @flow */\n\nimport { matchDomain, getDomain, type CrossDomainWindowType, type DomainMatcher } from 'cross-domain-utils/src';\nimport { ZalgoPromise } from 'zalgo-promise/src';\nimport { uniqueID, isRegex } from 'belter/src';\nimport { serializeType, type CustomSerializedType } from 'universal-serialize/src';\n\nimport { MESSAGE_NAME, WILDCARD, SERIALIZATION_TYPE } from '../conf';\nimport { windowStore, globalStore } from '../global';\nimport type { OnType, SendType, CancelableType } from '../types';\n\nimport { ProxyWindow } from './window';\n\ntype StoredMethod = {|\n    name : string,\n    domain : DomainMatcher,\n    val : Function,\n    source : CrossDomainWindowType | ProxyWindow\n|};\n\nfunction addMethod(id : string, val : Function, name : string, source : CrossDomainWindowType | ProxyWindow, domain : DomainMatcher) {\n    const methodStore = windowStore('methodStore');\n    const proxyWindowMethods = globalStore('proxyWindowMethods');\n    \n    if (ProxyWindow.isProxyWindow(source)) {\n        proxyWindowMethods.set(id, { val, name, domain, source });\n    } else {\n        proxyWindowMethods.del(id);\n        // $FlowFixMe\n        const methods = methodStore.getOrSet(source, () => ({}));\n        methods[id] = { domain, name, val, source };\n    }\n}\n\nfunction lookupMethod(source : CrossDomainWindowType, id : string) : ?StoredMethod {\n    const methodStore = windowStore('methodStore');\n    const proxyWindowMethods = globalStore('proxyWindowMethods');\n    const methods = methodStore.getOrSet(source, () => ({}));\n    return methods[id] || proxyWindowMethods.get(id);\n}\n\nfunction listenForFunctionCalls({ on } : { on : OnType }) : CancelableType {\n    return globalStore('builtinListeners').getOrSet('functionCalls', () => {\n        return on(MESSAGE_NAME.METHOD, { domain: WILDCARD }, ({ source, origin, data } : { source : CrossDomainWindowType, origin : string, data : Object }) => {\n            const { id, name } = data;\n\n            const meth = lookupMethod(source, id);\n    \n            if (!meth) {\n                throw new Error(`Could not find method '${ data.name }' with id: ${ data.id } in ${ getDomain(window) }`);\n            }\n\n            const { source: methodSource, domain, val } = meth;\n            \n            return ZalgoPromise.try(() => {\n                if (!matchDomain(domain, origin)) {\n                    // $FlowFixMe\n                    throw new Error(`Method '${ data.name }' domain ${ JSON.stringify(isRegex(meth.domain) ? meth.domain.source : meth.domain) } does not match origin ${ origin } in ${ getDomain(window) }`);\n                }\n                \n                if (ProxyWindow.isProxyWindow(methodSource)) {\n                    // $FlowFixMe\n                    return methodSource.matchWindow(source).then(match => {\n                        if (!match) {\n                            throw new Error(`Method call '${ data.name }' failed - proxy window does not match source in ${ getDomain(window) }`);\n                        }\n                    });\n                }\n            }).then(() => {\n                return val.apply({ source, origin }, data.args);\n            }, err => {\n                return ZalgoPromise.try(() => {\n                    if (val.onError) {\n                        return val.onError(err);\n                    }\n                }).then(() => {\n                    throw err;\n                });\n            }).then(result => {\n                return { result, id, name };\n            });\n        });\n    });\n}\n\nexport type SerializedFunction = CustomSerializedType<typeof SERIALIZATION_TYPE.CROSS_DOMAIN_FUNCTION, {\n    id : string,\n    name : string\n}>;\n\nexport function serializeFunction<T>(destination : CrossDomainWindowType | ProxyWindow, domain : DomainMatcher, val : () => ZalgoPromise<T> | T, key : string, { on } : { on : OnType }) : SerializedFunction {\n    listenForFunctionCalls({ on });\n    \n    const id = val.__id__ || uniqueID();\n    destination = ProxyWindow.unwrap(destination);\n    const name = val.__name__ || val.name || key;\n\n    if (ProxyWindow.isProxyWindow(destination)) {\n        addMethod(id, val, name, destination, domain);\n\n        // $FlowFixMe\n        destination.awaitWindow().then(win => {\n            addMethod(id, val, name, win, domain);\n        });\n    } else {\n        addMethod(id, val, name, destination, domain);\n    }\n\n    return serializeType(SERIALIZATION_TYPE.CROSS_DOMAIN_FUNCTION, { id, name });\n}\n\nexport function deserializeFunction<T>(source : CrossDomainWindowType | ProxyWindow, origin : string, { id, name } : { id : string, name : string }, { send } : { send : SendType }) : (...args : $ReadOnlyArray<mixed>) => ZalgoPromise<T> {\n    const getDeserializedFunction = (opts? : Object = {}) => {\n        function crossDomainFunctionWrapper<X : mixed>() : ZalgoPromise<X> {\n            let originalStack;\n    \n            if (__DEBUG__) {\n                originalStack = (new Error(`Original call to ${ name }():`)).stack;\n            }\n    \n            return ProxyWindow.toProxyWindow(source, { send }).awaitWindow().then(win => {\n                const meth = lookupMethod(win, id);\n    \n                if (meth && meth.val !== crossDomainFunctionWrapper) {\n                    return meth.val.apply({ source: window, origin: getDomain() }, arguments);\n                } else {\n                    return send(win, MESSAGE_NAME.METHOD, { id, name, args: Array.prototype.slice.call(arguments) }, { domain: origin, fireAndForget: opts.fireAndForget })\n                        .then(res => {\n                            if (!opts.fireAndForget) {\n                                return res.data.result;\n                            }\n                        });\n                }\n    \n            }).catch(err => {\n                // $FlowFixMe\n                if (__DEBUG__ && originalStack && err.stack) {\n                    // $FlowFixMe\n                    err.stack = `${ err.stack }\\n\\n${ originalStack }`;\n                }\n                throw err;\n            });\n        }\n\n        crossDomainFunctionWrapper.__name__ = name;\n        crossDomainFunctionWrapper.__origin__ = origin;\n        crossDomainFunctionWrapper.__source__ = source;\n        crossDomainFunctionWrapper.__id__ = id;\n\n        crossDomainFunctionWrapper.origin = origin;\n\n        return crossDomainFunctionWrapper;\n    };\n\n    const crossDomainFunctionWrapper = getDeserializedFunction();\n    crossDomainFunctionWrapper.fireAndForget = getDeserializedFunction({ fireAndForget: true });\n\n    return crossDomainFunctionWrapper;\n}\n","/* @flow */\n\nimport { type CrossDomainWindowType, isWindow, type DomainMatcher } from 'cross-domain-utils/src';\nimport { TYPE, serialize, deserialize, type Thenable } from 'universal-serialize/src';\n\nimport { SERIALIZATION_TYPE } from '../conf';\nimport type { OnType, SendType } from '../types';\n\nimport { serializeFunction, deserializeFunction, type SerializedFunction } from './function';\nimport { serializePromise, deserializePromise, type SerializedPromise } from './promise';\nimport { serializeWindow, deserializeWindow, type SerializedWindow, ProxyWindow } from './window';\n\nexport function serializeMessage<T : mixed>(destination : CrossDomainWindowType | ProxyWindow, domain : DomainMatcher, obj : T, { on, send } : { on : OnType, send : SendType }) : string {\n    return serialize(obj, {\n        [ TYPE.PROMISE ]:  (val : Thenable, key : string) : SerializedPromise => serializePromise(destination, domain, val, key, { on, send }),\n        [ TYPE.FUNCTION ]: (val : Function, key : string) : SerializedFunction => serializeFunction(destination, domain, val, key, { on, send }),\n        [ TYPE.OBJECT ]:   (val : CrossDomainWindowType) : Object | SerializedWindow => {\n            return (isWindow(val) || ProxyWindow.isProxyWindow(val)) ? serializeWindow(destination, domain, val, { on, send }) : val;\n        }\n    });\n}\n\nexport function deserializeMessage<T : mixed>(source : CrossDomainWindowType | ProxyWindow, origin : string, message : string, { on, send } : { on : OnType, send : SendType }) : T {\n    return deserialize(message, {\n        [ SERIALIZATION_TYPE.CROSS_DOMAIN_ZALGO_PROMISE ]: (serializedPromise)  => deserializePromise(source, origin, serializedPromise),\n        [ SERIALIZATION_TYPE.CROSS_DOMAIN_FUNCTION ]:      (serializedFunction) => deserializeFunction(source, origin, serializedFunction, { on, send }),\n        [ SERIALIZATION_TYPE.CROSS_DOMAIN_WINDOW ]:        (serializedWindow)   => deserializeWindow(source, origin, serializedWindow, { on, send })\n    });\n}\n","/* @flow */\n\nimport { type CrossDomainWindowType, type DomainMatcher } from 'cross-domain-utils/src';\nimport { ZalgoPromise } from 'zalgo-promise/src';\nimport { serializeType, type CustomSerializedType, type Thenable } from 'universal-serialize/src';\n\nimport { SERIALIZATION_TYPE } from '../conf';\nimport type { OnType, SendType } from '../types';\n\nimport { serializeFunction, type SerializedFunction } from './function';\nimport { ProxyWindow } from './window';\n\nexport type SerializedPromise = CustomSerializedType<typeof SERIALIZATION_TYPE.CROSS_DOMAIN_ZALGO_PROMISE, {\n    then : SerializedFunction\n}>;\n\nexport function serializePromise(destination : CrossDomainWindowType | ProxyWindow, domain : DomainMatcher, val : Thenable, key : string, { on, send } : { on : OnType, send : SendType }) : SerializedPromise {\n    return serializeType(SERIALIZATION_TYPE.CROSS_DOMAIN_ZALGO_PROMISE, {\n        then: serializeFunction(destination, domain, (resolve, reject) => val.then(resolve, reject), key, { on, send })\n    });\n}\n\nexport function deserializePromise<T>(source : CrossDomainWindowType | ProxyWindow, origin : string, { then } : { then : Function }) : ZalgoPromise<T> {\n    return new ZalgoPromise(then);\n}\n","/* @flow */\n\nimport { isSameDomain, isSameTopWindow, isActuallySameDomain, getActualDomain,\n    getDomain, type CrossDomainWindowType, type DomainMatcher, PROTOCOL } from 'cross-domain-utils/src';\n\nimport { SEND_STRATEGY, WILDCARD } from '../../conf';\nimport { needsGlobalMessagingForBrowser } from '../../lib';\nimport { getGlobal } from '../../global';\nimport { sendBridgeMessage, needsBridgeForBrowser, isBridge } from '../../bridge';\n\nexport const SEND_MESSAGE_STRATEGIES = {};\n\nSEND_MESSAGE_STRATEGIES[SEND_STRATEGY.POST_MESSAGE] = (win : CrossDomainWindowType, serializedMessage : string, domain : DomainMatcher) => {\n\n    if (__TEST__) {\n        if (needsGlobalMessagingForBrowser() && isSameTopWindow(window, win) === false) {\n            return;\n        }\n    }\n\n    let domains;\n\n    if (Array.isArray(domain)) {\n        domains = domain;\n    } else if (typeof domain === 'string') {\n        domains = [ domain ];\n    } else {\n        domains = [ WILDCARD ];\n    }\n\n    domains = domains.map(dom => {\n\n        if (dom.indexOf(PROTOCOL.MOCK) === 0) {\n\n            if (window.location.protocol === PROTOCOL.FILE) {\n                return WILDCARD;\n            }\n\n            if (!isActuallySameDomain(win)) {\n                throw new Error(`Attempting to send messsage to mock domain ${ dom }, but window is actually cross-domain`);\n            }\n\n            // $FlowFixMe\n            return getActualDomain(win);\n        }\n\n        if (dom.indexOf(PROTOCOL.FILE) === 0) {\n            return WILDCARD;\n        }\n\n        return dom;\n    });\n\n    domains.forEach(dom => {\n        win.postMessage(serializedMessage, dom);\n    });\n};\n\nif (__POST_ROBOT__.__IE_POPUP_SUPPORT__) {\n\n    SEND_MESSAGE_STRATEGIES[SEND_STRATEGY.BRIDGE] = (win : CrossDomainWindowType, serializedMessage : string, domain : string) => {\n\n        if (!needsBridgeForBrowser() && !isBridge()) {\n            return;\n        }\n\n        if (isSameDomain(win)) {\n            throw new Error(`Post message through bridge disabled between same domain windows`);\n        }\n\n        if (isSameTopWindow(window, win) !== false) {\n            throw new Error(`Can only use bridge to communicate between two different windows, not between frames`);\n        }\n\n        sendBridgeMessage(win, domain, serializedMessage);\n    };\n}\n\nif (__POST_ROBOT__.__IE_POPUP_SUPPORT__ || __POST_ROBOT__.__GLOBAL_MESSAGE_SUPPORT__) {\n    \n    SEND_MESSAGE_STRATEGIES[SEND_STRATEGY.GLOBAL] = (win : CrossDomainWindowType, serializedMessage : string) => {\n\n        if (!needsGlobalMessagingForBrowser()) {\n            return;\n        }\n\n        if (!isSameDomain(win)) {\n            throw new Error(`Post message through global disabled between different domain windows`);\n        }\n\n        if (isSameTopWindow(window, win) !== false) {\n            throw new Error(`Can only use global to communicate between two different windows, not between frames`);\n        }\n\n        // $FlowFixMe\n        const foreignGlobal = getGlobal(win);\n\n        if (!foreignGlobal) {\n            throw new Error(`Can not find postRobot global on foreign window`);\n        }\n\n        foreignGlobal.receiveMessage({\n            source: window,\n            origin: getDomain(),\n            data:   serializedMessage\n        });\n    };\n}\n","/* @flow */\n\nimport { getUserAgent } from 'cross-domain-utils/src';\n\nexport function needsGlobalMessagingForBrowser() : boolean {\n\n    if (getUserAgent(window).match(/MSIE|rv:11|trident|edge\\/12|edge\\/13/i)) {\n        return true;\n    }\n\n    return false;\n}\n","/* @flow */\n\nimport { isWindowClosed, type CrossDomainWindowType, type DomainMatcher } from 'cross-domain-utils/src';\nimport { uniqueID } from 'belter/src';\n\nimport { serializeMessage } from '../../serialize';\nimport type { Message } from '../types';\nimport type { OnType, SendType } from '../../types';\n\nimport { SEND_MESSAGE_STRATEGIES } from './strategies';\n\nexport function sendMessage(win : CrossDomainWindowType, domain : DomainMatcher, message : Message, { on, send } : { on : OnType, send : SendType }) {\n    if (isWindowClosed(win)) {\n        throw new Error('Window is closed');\n    }\n    \n    const serializedMessage = serializeMessage(win, domain, {\n        [ __POST_ROBOT__.__GLOBAL_KEY__ ]: {\n            id: uniqueID(),\n            ...message\n        }\n    }, { on, send });\n\n    let success = false;\n    let error;\n\n    for (const strategyName of Object.keys(SEND_MESSAGE_STRATEGIES)) {\n        try {\n            SEND_MESSAGE_STRATEGIES[strategyName](win, serializedMessage, domain);\n            success = true;\n        } catch (err) {\n            error = error || err;\n        }\n    }\n\n    if (!success) {\n        throw error;\n    }\n}\n","/* @flow */\n\nimport { type ZalgoPromise } from 'zalgo-promise/src';\nimport { matchDomain, type CrossDomainWindowType, type DomainMatcher } from 'cross-domain-utils/src';\nimport { isRegex, getOrSet } from 'belter/src';\n\nimport { getWildcard, type WildCard, globalStore, windowStore } from '../global';\nimport { WILDCARD } from '../conf';\n\nexport function resetListeners() {\n    const responseListeners = globalStore('responseListeners');\n    const erroredResponseListeners = globalStore('erroredResponseListeners');\n    responseListeners.reset();\n    erroredResponseListeners.reset();\n}\n\nconst __DOMAIN_REGEX__ = '__domain_regex__';\n\nexport type RequestListenerType = {|\n    handler : ({ source : CrossDomainWindowType, origin : string, data : mixed }) => (mixed | ZalgoPromise<mixed>),\n    handleError : (err : mixed) => void,\n    window : ?CrossDomainWindowType,\n    name : string,\n    domain : DomainMatcher\n|};\n\nexport type ResponseListenerType = {|\n    name : string,\n    win : CrossDomainWindowType,\n    domain : DomainMatcher,\n    promise : ZalgoPromise<*>,\n    ack? : ?boolean\n|};\n\nexport function addResponseListener(hash : string, listener : ResponseListenerType) {\n    const responseListeners = globalStore('responseListeners');\n    responseListeners.set(hash, listener);\n}\n\nexport function getResponseListener(hash : string) : ?ResponseListenerType {\n    const responseListeners = globalStore('responseListeners');\n    return responseListeners.get(hash);\n}\n\nexport function deleteResponseListener(hash : string) {\n    const responseListeners = globalStore('responseListeners');\n    responseListeners.del(hash);\n}\n\nexport function markResponseListenerErrored(hash : string) {\n    const erroredResponseListeners = globalStore('erroredResponseListeners');\n    erroredResponseListeners.set(hash, true);\n}\n\nexport function isResponseListenerErrored(hash : string) : boolean {\n    const erroredResponseListeners = globalStore('erroredResponseListeners');\n    return erroredResponseListeners.has(hash);\n}\n\nexport function getRequestListener({ name, win, domain } : { name : string, win : ?(CrossDomainWindowType | WildCard), domain : ?(string | RegExp) }) : ?RequestListenerType {\n    const requestListeners = windowStore('requestListeners');\n\n    if (win === WILDCARD) {\n        win = null;\n    }\n\n    if (domain === WILDCARD) {\n        domain = null;\n    }\n\n    if (!name) {\n        throw new Error(`Name required to get request listener`);\n    }\n\n    for (const winQualifier of [ win, getWildcard() ]) {\n        if (!winQualifier) {\n            continue;\n        }\n\n        const nameListeners = requestListeners.get(winQualifier);\n\n        if (!nameListeners) {\n            continue;\n        }\n\n        const domainListeners = nameListeners[name];\n\n        if (!domainListeners) {\n            continue;\n        }\n\n        if (domain && typeof domain === 'string') {\n            if (domainListeners[domain]) {\n                return domainListeners[domain];\n            }\n\n            if (domainListeners[__DOMAIN_REGEX__]) {\n                for (const { regex, listener } of domainListeners[__DOMAIN_REGEX__]) {\n                    if (matchDomain(regex, domain)) {\n                        return listener;\n                    }\n                }\n            }\n        }\n\n        if (domainListeners[WILDCARD]) {\n            return domainListeners[WILDCARD];\n        }\n    }\n}\n\nexport function addRequestListener({ name, win, domain } : { name : string, win : ?(CrossDomainWindowType | WildCard), domain : ?DomainMatcher }, listener : RequestListenerType) : { cancel : () => void } {\n    const requestListeners = windowStore('requestListeners');\n\n    if (!name || typeof name !== 'string') {\n        throw new Error(`Name required to add request listener`);\n    }\n\n    if (Array.isArray(win)) {\n        const listenersCollection = [];\n\n        for (const item of win) {\n            listenersCollection.push(addRequestListener({ name, domain, win: item }, listener));\n        }\n\n        return {\n            cancel() {\n                for (const cancelListener of listenersCollection) {\n                    cancelListener.cancel();\n                }\n            }\n        };\n    }\n\n    if (Array.isArray(domain)) {\n        const listenersCollection = [];\n\n        for (const item of domain) {\n            listenersCollection.push(addRequestListener({ name, win, domain: item }, listener));\n        }\n\n        return {\n            cancel() {\n                for (const cancelListener of listenersCollection) {\n                    cancelListener.cancel();\n                }\n            }\n        };\n    }\n\n    const existingListener = getRequestListener({ name, win, domain });\n\n    if (!win || win === WILDCARD) {\n        win = getWildcard();\n    }\n\n    domain = domain || WILDCARD;\n\n    if (existingListener) {\n        if (win && domain) {\n            throw new Error(`Request listener already exists for ${ name } on domain ${ domain.toString() } for ${ win === getWildcard() ? 'wildcard' : 'specified' } window`);\n        } else if (win) {\n            throw new Error(`Request listener already exists for ${ name } for ${ win === getWildcard() ? 'wildcard' : 'specified' } window`);\n        } else if (domain) {\n            throw new Error(`Request listener already exists for ${ name } on domain ${ domain.toString() }`);\n        } else {\n            throw new Error(`Request listener already exists for ${ name }`);\n        }\n    }\n\n    const nameListeners = requestListeners.getOrSet(win, () => ({}));\n    // $FlowFixMe\n    const domainListeners = getOrSet(nameListeners, name, () => ({}));\n\n    const strDomain = domain.toString();\n\n    let regexListeners;\n    let regexListener;\n\n    if (isRegex(domain)) {\n        regexListeners = getOrSet(domainListeners, __DOMAIN_REGEX__, () => []);\n        regexListener = { regex: domain, listener };\n        regexListeners.push(regexListener);\n    } else {\n        domainListeners[strDomain] = listener;\n    }\n\n    return {\n        cancel() {\n            delete domainListeners[strDomain];\n\n            if (regexListener) {\n                regexListeners.splice(regexListeners.indexOf(regexListener, 1));\n\n                if (!regexListeners.length) {\n                    delete domainListeners[__DOMAIN_REGEX__];\n                }\n            }\n\n            if (!Object.keys(domainListeners).length) {\n                // $FlowFixMe\n                delete nameListeners[name];\n            }\n\n            // $FlowFixMe\n            if (win && !Object.keys(nameListeners).length) {\n                requestListeners.del(win);\n            }\n        }\n    };\n}\n","/* @flow */\n\nimport { ZalgoPromise } from 'zalgo-promise/src';\nimport { isWindowClosed, matchDomain, stringifyDomainPattern, type CrossDomainWindowType } from 'cross-domain-utils/src';\nimport { noop } from 'belter/src';\n\nimport { MESSAGE_TYPE, MESSAGE_ACK, MESSAGE_NAME } from '../../conf';\nimport { sendMessage } from '../send';\nimport { getRequestListener, getResponseListener, deleteResponseListener, isResponseListenerErrored } from '../listeners';\nimport type { RequestMessage, AckResponseMessage, SuccessResponseMessage, ErrorResponseMessage } from '../types';\nimport type { OnType, SendType } from '../../types';\n\nexport const RECEIVE_MESSAGE_TYPES = {\n\n    [ MESSAGE_TYPE.REQUEST ](source : CrossDomainWindowType, origin : string, message : RequestMessage, { on, send } : { on : OnType, send : SendType }) : ZalgoPromise<void> {\n\n        const options = getRequestListener({ name: message.name, win: source, domain: origin });\n\n        const logName = (message.name === MESSAGE_NAME.METHOD && message.data && typeof message.data.name === 'string') ? `${ message.data.name }()` : message.name;\n\n        if (__DEBUG__) {\n            // eslint-disable-next-line no-console\n            console.info('receive::req', logName, origin, '\\n\\n', message.data);\n        }\n\n        function sendResponse(type : $Values<typeof MESSAGE_TYPE>, ack? : $Values<typeof MESSAGE_ACK>, response = {}) {\n\n            if (message.fireAndForget || isWindowClosed(source)) {\n                return;\n            }\n\n            if (__DEBUG__ && type !== MESSAGE_TYPE.ACK) {\n                if (ack === MESSAGE_ACK.SUCCESS) {\n                    // $FlowFixMe\n                    console.info('respond::res', logName, origin, '\\n\\n', response.data);  // eslint-disable-line no-console\n                } else if (ack === MESSAGE_ACK.ERROR) {\n                    // $FlowFixMe\n                    console.error('respond::err', logName, origin, '\\n\\n', response.error); // eslint-disable-line no-console\n                }\n            }\n\n            // $FlowFixMe\n            sendMessage(source, origin, {\n                type,\n                ack,\n                hash:   message.hash,\n                name:   message.name,\n                ...response\n            }, { on, send });\n        }\n\n        return ZalgoPromise.all([\n\n            sendResponse(MESSAGE_TYPE.ACK),\n\n            ZalgoPromise.try(() => {\n\n                if (!options) {\n                    throw new Error(`No handler found for post message: ${ message.name } from ${ origin } in ${ window.location.protocol }//${ window.location.host }${ window.location.pathname }`);\n                }\n\n                if (!matchDomain(options.domain, origin)) {\n                    throw new Error(`Request origin ${ origin } does not match domain ${ options.domain.toString() }`);\n                }\n\n                const data = message.data;\n\n                return options.handler({ source, origin, data });\n\n            }).then(data => {\n                return sendResponse(MESSAGE_TYPE.RESPONSE, MESSAGE_ACK.SUCCESS, { data });\n\n            }, error => {\n                return sendResponse(MESSAGE_TYPE.RESPONSE, MESSAGE_ACK.ERROR, { error });\n            })\n\n        ]).then(noop).catch(err => {\n            if (options && options.handleError) {\n                return options.handleError(err);\n            } else {\n                throw err;\n            }\n        });\n    },\n\n    [ MESSAGE_TYPE.ACK ](source : CrossDomainWindowType, origin : string, message : AckResponseMessage) {\n\n        if (isResponseListenerErrored(message.hash)) {\n            return;\n        }\n\n        const options = getResponseListener(message.hash);\n\n        if (!options) {\n            throw new Error(`No handler found for post message ack for message: ${ message.name } from ${ origin } in ${ window.location.protocol }//${ window.location.host }${ window.location.pathname }`);\n        }\n\n        if (!matchDomain(options.domain, origin)) {\n            throw new Error(`Ack origin ${ origin } does not match domain ${ options.domain.toString() }`);\n        }\n\n        if (source !== options.win) {\n            throw new Error(`Ack source does not match registered window`);\n        }\n\n        options.ack = true;\n    },\n\n    [ MESSAGE_TYPE.RESPONSE ](source : CrossDomainWindowType, origin : string, message : SuccessResponseMessage | ErrorResponseMessage) : void | ZalgoPromise<void> {\n\n        if (isResponseListenerErrored(message.hash)) {\n            return;\n        }\n\n        const options = getResponseListener(message.hash);\n\n        if (!options) {\n            throw new Error(`No handler found for post message response for message: ${ message.name } from ${ origin } in ${ window.location.protocol }//${ window.location.host }${ window.location.pathname }`);\n        }\n\n        if (!matchDomain(options.domain, origin)) {\n            throw new Error(`Response origin ${ origin } does not match domain ${ stringifyDomainPattern(options.domain) }`);\n        }\n\n        if (source !== options.win) {\n            throw new Error(`Response source does not match registered window`);\n        }\n\n        deleteResponseListener(message.hash);\n\n        const logName = (message.name === MESSAGE_NAME.METHOD && message.data && typeof message.data.name === 'string') ? `${ message.data.name }()` : message.name;\n\n        if (message.ack === MESSAGE_ACK.ERROR) {\n            if (__DEBUG__) {\n                console.error('receive::err', logName, origin, '\\n\\n', message.error); // eslint-disable-line no-console\n            }\n\n            options.promise.reject(message.error);\n\n        } else if (message.ack === MESSAGE_ACK.SUCCESS) {\n            if (__DEBUG__) {\n                console.info('receive::res', logName, origin, '\\n\\n', message.data); // eslint-disable-line no-console\n            }\n\n            options.promise.resolve({ source, origin, data: message.data });\n        }\n    }\n};\n","/* @flow */\n\nimport { isWindowClosed, type CrossDomainWindowType, getDomain, isSameTopWindow } from 'cross-domain-utils/src';\nimport { addEventListener, noop } from 'belter/src';\n\nimport { markWindowKnown, needsGlobalMessagingForBrowser } from '../../lib';\nimport { deserializeMessage } from '../../serialize';\nimport { getGlobal, globalStore } from '../../global';\nimport type { OnType, SendType, MessageEvent, CancelableType } from '../../types';\n\nimport { RECEIVE_MESSAGE_TYPES } from './types';\n\nfunction parseMessage(message : string, source : CrossDomainWindowType, origin : string, { on, send } : { on : OnType, send : SendType }) : ?Object {\n\n    let parsedMessage;\n\n    try {\n        parsedMessage = deserializeMessage(source, origin, message, { on, send });\n    } catch (err) {\n        return;\n    }\n\n    if (!parsedMessage) {\n        return;\n    }\n\n    if (typeof parsedMessage !== 'object' || parsedMessage === null) {\n        return;\n    }\n\n    parsedMessage = parsedMessage[__POST_ROBOT__.__GLOBAL_KEY__];\n\n    if (!parsedMessage || typeof parsedMessage !== 'object' || parsedMessage === null) {\n        return;\n    }\n\n    if (!parsedMessage.type || typeof parsedMessage.type !== 'string') {\n        return;\n    }\n\n    if (!RECEIVE_MESSAGE_TYPES[parsedMessage.type]) {\n        return;\n    }\n\n    return parsedMessage;\n}\n\nexport function receiveMessage(event : MessageEvent, { on, send } : { on : OnType, send : SendType }) {\n    const receivedMessages = globalStore('receivedMessages');\n\n    if (!window || window.closed) {\n        throw new Error(`Message recieved in closed window`);\n    }\n\n    try {\n        if (!event.source) {\n            return;\n        }\n    } catch (err) {\n        return;\n    }\n\n    let { source, origin, data } = event;\n\n    if (__TEST__) {\n        // $FlowFixMe\n        origin = getDomain(source);\n    }\n\n    const message = parseMessage(data, source, origin, { on, send });\n\n    if (!message) {\n        return;\n    }\n\n    markWindowKnown(source);\n\n    if (receivedMessages.has(message.id)) {\n        return;\n    }\n\n    receivedMessages.set(message.id, true);\n\n    if (isWindowClosed(source) && !message.fireAndForget) {\n        return;\n    }\n\n    RECEIVE_MESSAGE_TYPES[message.type](source, origin, message, { on, send });\n}\n\nexport function setupGlobalReceiveMessage({ on, send } : { on : OnType, send : SendType }) {\n    const global = getGlobal();\n    global.receiveMessage = global.receiveMessage || (message => receiveMessage(message, { on, send }));\n}\n\ntype ListenerEvent = {|\n    source : CrossDomainWindowType,\n    origin : string,\n    data : string,\n    sourceElement : CrossDomainWindowType,\n    originalEvent? : { origin : string }\n|};\n\nexport function messageListener(event : ListenerEvent, { on, send } : { on : OnType, send : SendType }) {\n\n    try {\n        noop(event.source);\n    } catch (err) {\n        return;\n    }\n\n    // $FlowFixMe\n    const messageEvent : MessageEvent = {\n        source: event.source || event.sourceElement,\n        origin: event.origin || (event.originalEvent && event.originalEvent.origin),\n        data:   event.data\n    };\n\n    if (!messageEvent.source) {\n        return;\n    }\n\n    if (!messageEvent.origin) {\n        throw new Error(`Post message did not have origin domain`);\n    }\n\n    if (__TEST__) {\n        if (needsGlobalMessagingForBrowser() && isSameTopWindow(messageEvent.source, window) === false) {\n            return;\n        }\n    }\n\n    receiveMessage(messageEvent, { on, send });\n}\n\nexport function listenForMessages({ on, send } : { on : OnType, send : SendType }) : CancelableType {\n    return globalStore().getOrSet('postMessageListeners', () => {\n        // $FlowFixMe\n        return addEventListener(window, 'message', event => {\n            // $FlowFixMe\n            messageListener(event, { on, send });\n        });\n    });\n}\n","/* @flow */\n\nimport { ZalgoPromise } from 'zalgo-promise/src';\n\nimport { addRequestListener, type RequestListenerType } from '../drivers';\nimport { WILDCARD } from '../conf';\nimport type { ServerOptionsType, HandlerType, CancelableType } from '../types';\n\nexport function on(name : string, options : ServerOptionsType | HandlerType, handler : ?HandlerType) : CancelableType {\n\n    if (!name) {\n        throw new Error('Expected name');\n    }\n\n    if (typeof options === 'function') {\n        handler = options;\n        // $FlowFixMe\n        options = {};\n    }\n\n    if (!handler) {\n        throw new Error('Expected handler');\n    }\n\n    options = options || {};\n    options.name = name;\n    options.handler = handler || options.handler;\n\n    const win = options.window;\n    const domain = options.domain;\n\n    const listenerOptions : RequestListenerType = {\n        handler:     options.handler,\n        handleError: options.errorHandler || (err => {\n            throw err;\n        }),\n        window: win,\n        domain: domain || WILDCARD,\n        name\n    };\n\n    const requestListener = addRequestListener({ name, win, domain }, listenerOptions);\n\n    return {\n        cancel() {\n            requestListener.cancel();\n        }\n    };\n}\n\nexport function once(name : string, options? : ServerOptionsType | HandlerType, handler? : HandlerType) : ZalgoPromise<{ source : mixed, origin : string, data : Object }> {\n    \n    // $FlowFixMe\n    options = options || {};\n    if (typeof options === 'function') {\n        handler = options;\n        // $FlowFixMe\n        options = {};\n    }\n\n    const promise = new ZalgoPromise();\n    let listener; // eslint-disable-line prefer-const\n\n    options.errorHandler = (err) => {\n        listener.cancel();\n        promise.reject(err);\n    };\n\n    listener = on(name, options, event => {\n        listener.cancel();\n        promise.resolve(event);\n        if (handler) {\n            return handler(event);\n        }\n    });\n\n    promise.cancel = listener.cancel;\n    return promise;\n}\n","/* @flow */\n\nimport { ZalgoPromise } from 'zalgo-promise/src';\nimport { isAncestor, isWindowClosed, getDomain, matchDomain, type CrossDomainWindowType } from 'cross-domain-utils/src';\nimport { uniqueID, isRegex, noop } from 'belter/src';\n\n\nimport { CHILD_WINDOW_TIMEOUT, MESSAGE_TYPE, WILDCARD, MESSAGE_NAME, ACK_TIMEOUT, RES_TIMEOUT, ACK_TIMEOUT_KNOWN } from '../conf';\nimport { sendMessage, addResponseListener, deleteResponseListener, markResponseListenerErrored, type ResponseListenerType } from '../drivers';\nimport { awaitWindowHello, sayHello, isWindowKnown } from '../lib';\nimport { windowStore } from '../global';\nimport type { RequestOptionsType, ResponseMessageEvent } from '../types';\n\nimport { on } from './on';\n\nexport function send(win : CrossDomainWindowType, name : string, data : ?Object, options? : RequestOptionsType) : ZalgoPromise<ResponseMessageEvent> {\n    \n    // $FlowFixMe\n    options = options || {};\n    let domain = options.domain || WILDCARD;\n    const responseTimeout = options.timeout || RES_TIMEOUT;\n    const childTimeout = options.timeout || CHILD_WINDOW_TIMEOUT;\n    const fireAndForget = options.fireAndForget || false;\n\n    const prom = ZalgoPromise.try(() => {\n        if (!name) {\n            throw new Error('Expected name');\n        }\n\n        if (domain) {\n            if (typeof domain !== 'string' && !Array.isArray(domain) && !isRegex(domain)) {\n                throw new TypeError(`Expected domain to be a string, array, or regex`);\n            }\n        }\n\n        if (isWindowClosed(win)) {\n            throw new Error('Target window is closed');\n        }\n\n        const reqPromises = windowStore('requestPromises').getOrSet(win, () => []);\n\n        // $FlowFixMe\n        const requestPromise = ZalgoPromise.try(() => {\n\n            if (isAncestor(window, win)) {\n                return awaitWindowHello(win, childTimeout);\n            } else if (isRegex(domain)) {\n                return sayHello(win, { send });\n            }\n\n        // $FlowFixMe\n        }).then(({ domain: origin } = {}) => {\n\n            if (isRegex(domain)) {\n                if (!matchDomain(domain, origin)) {\n                    // $FlowFixMe\n                    throw new Error(`Remote window domain ${ origin } does not match regex: ${ domain.source }`);\n                }\n                domain = origin;\n            }\n\n            const logName = (name === MESSAGE_NAME.METHOD && data && typeof data.name === 'string') ? `${ data.name }()` : name;\n\n            if (__DEBUG__) {\n                console.info('send::req', logName, domain, '\\n\\n', data); // eslint-disable-line no-console\n            }\n\n            let hasResult = false;\n\n            const promise = new ZalgoPromise();\n            promise.finally(() => {\n                hasResult = true;\n                reqPromises.splice(reqPromises.indexOf(requestPromise, 1));\n            }).catch(noop);\n\n            const hash = `${ name }_${ uniqueID() }`;\n\n            sendMessage(win, domain, {\n                type: MESSAGE_TYPE.REQUEST,\n                hash,\n                name,\n                data,\n                fireAndForget\n            }, { on, send });\n\n            if (fireAndForget) {\n                return promise.resolve();\n            }\n\n            promise.catch(() => {\n                markResponseListenerErrored(hash);\n                deleteResponseListener(hash);\n            });\n\n            const responseListener : ResponseListenerType = {\n                name,\n                win,\n                domain,\n                promise\n            };\n\n            addResponseListener(hash, responseListener);\n\n            const totalAckTimeout = isWindowKnown(win) ? ACK_TIMEOUT_KNOWN : ACK_TIMEOUT;\n            const totalResTimeout = responseTimeout;\n\n            let ackTimeout = totalAckTimeout;\n            let resTimeout = totalResTimeout;\n\n            let cycleTime = 100;\n\n            const cycle = () => {\n                if (hasResult) {\n                    return;\n                }\n\n                if (isWindowClosed(win)) {\n                    if (!responseListener.ack) {\n                        return promise.reject(new Error(`Window closed for ${ name } before ack`));\n                    } else {\n                        return promise.reject(new Error(`Window closed for ${ name } before response`));\n                    }\n                }\n\n                ackTimeout = Math.max(ackTimeout - cycleTime, 0);\n                if (resTimeout !== -1) {\n                    resTimeout = Math.max(resTimeout - cycleTime, 0);\n                }\n\n                const hasAck = responseListener.ack;\n\n                if (hasAck) {\n                    if (resTimeout === -1) {\n                        return;\n                    }\n\n                    cycleTime = Math.min(resTimeout, 2000);\n\n                } else if (ackTimeout === 0) {\n                    return promise.reject(new Error(`No ack for postMessage ${ name } in ${ getDomain() } in ${ totalAckTimeout }ms`));\n\n                } else if (resTimeout === 0) {\n                    return promise.reject(new Error(`No response for postMessage ${ name } in ${ getDomain() } in ${ totalResTimeout }ms`));\n                }\n\n                setTimeout(cycle, cycleTime);\n            };\n\n            setTimeout(cycle, cycleTime);\n\n            return promise;\n        });\n\n        reqPromises.push(requestPromise);\n        return requestPromise;\n    });\n\n    return prom;\n}\n","/* @flow */\n\nimport type { CrossDomainWindowType, DomainMatcher } from 'cross-domain-utils/src';\n\nimport { initHello } from './lib';\nimport { listenForMessages, receiveMessage, setupGlobalReceiveMessage } from './drivers';\nimport { getGlobal } from './global';\nimport { on, send } from './public';\nimport { setupBridge } from './bridge';\nimport { serializeMessage as internalSerializeMessage, deserializeMessage as internalDeserializeMessage, ProxyWindow } from './serialize';\n\nexport function serializeMessage<T>(destination : CrossDomainWindowType | ProxyWindow, domain : DomainMatcher, obj : T) : string {\n    return internalSerializeMessage(destination, domain, obj, { on, send });\n}\n\nexport function deserializeMessage<T : mixed>(source : CrossDomainWindowType | ProxyWindow, origin : string, message : string) : T {\n    return internalDeserializeMessage(source, origin, message, { on, send });\n}\n\nexport function toProxyWindow(win : CrossDomainWindowType | ProxyWindow) : ProxyWindow {\n    return ProxyWindow.toProxyWindow(win, { send });\n}\n\nexport function setup() {\n    if (!getGlobal().initialized) {\n        getGlobal().initialized = true;\n    \n        listenForMessages({ on, send });\n    \n        if (__POST_ROBOT__.__IE_POPUP_SUPPORT__) {\n            setupBridge({ on, send, receiveMessage });\n        }\n\n        initHello({ on, send });\n        setupGlobalReceiveMessage({ on, send });\n    }\n}\n","/* @flow */\n\nimport { setup } from './setup';\nimport { setupBridge, openBridge, linkWindow, linkUrl, isBridge, needsBridge, needsBridgeForBrowser, hasBridge,\n    needsBridgeForWin, needsBridgeForDomain, destroyBridges } from './bridge';\n\nexport { ZalgoPromise as Promise } from 'zalgo-promise/src';\n\nexport * from './types';\nexport { ProxyWindow } from './serialize';\nexport { setup, serializeMessage, deserializeMessage, toProxyWindow } from './setup';\nexport { on, once, send } from './public';\nexport { markWindowKnown } from './lib';\nexport { cleanUpWindow } from './clean';\nexport let bridge;\n\nif (__POST_ROBOT__.__IE_POPUP_SUPPORT__) {\n    bridge = { setupBridge, openBridge, linkWindow, linkUrl, isBridge, needsBridge,\n        needsBridgeForBrowser, hasBridge, needsBridgeForWin, needsBridgeForDomain, destroyBridges };\n}\n\nif (__POST_ROBOT__.__AUTO_SETUP__) {\n    setup();\n}\n","/* @flow */\n\nimport { isSameDomain, type CrossDomainWindowType } from 'cross-domain-utils/src';\n\nexport function globalFor(win : CrossDomainWindowType) : Object {\n\n    if (!isSameDomain(win)) {\n        throw new Error(`Can not get global for window on different domain`);\n    }\n\n    if (!win[__ZOID__.__GLOBAL_KEY__]) {\n        win[__ZOID__.__GLOBAL_KEY__] = {};\n    }\n\n    return win[__ZOID__.__GLOBAL_KEY__];\n}\n","/* @flow */\n\nimport { ZalgoPromise } from 'zalgo-promise/src';\nimport { toCSS } from 'belter/src';\n\nexport type ProxyElement<T : HTMLElement> = {|\n    resize : ({ width : ?number, height : ?number }) => void,\n    getElement : () => ZalgoPromise<T>\n|};\n\nexport function getProxyElement<T : HTMLElement>(element : T) : ProxyElement<T> {\n    return {\n        resize({ width, height } : { width : ?number, height : ?number }) {\n            if (typeof width === 'number') {\n                element.style.width = toCSS(width);\n            }\n    \n            if (typeof height === 'number') {\n                element.style.height = toCSS(height);\n            }\n        },\n\n        getElement() : ZalgoPromise<T> {\n            return ZalgoPromise.try(() => {\n                if (this.source && this.source !== window) {\n                    throw new Error(`Can not call getElement from a remote window`);\n                }\n    \n                return element;\n            });\n        }\n    };\n}\n","/* @flow */\n\nimport { WINDOW_TYPE } from 'cross-domain-utils/src';\n\nexport const ZOID = `zoid`;\n\nexport const POST_MESSAGE = {\n    DELEGATE:       `${ ZOID }_delegate`,\n    ALLOW_DELEGATE: `${ ZOID }_allow_delegate`\n};\n\nexport const PROP_TYPE = {\n    STRING:   `string`,\n    OBJECT:   `object`,\n    FUNCTION: `function`,\n    BOOLEAN:  `boolean`,\n    NUMBER:   `number`,\n    ARRAY:    `array`\n};\n\nexport const INITIAL_PROPS = {\n    RAW: 'raw',\n    UID: 'uid'\n};\n\nexport const WINDOW_REFERENCES = {\n    OPENER: `opener`,\n    TOP:    `top`,\n    PARENT: `parent`,\n    GLOBAL: `global`\n};\n\nexport const PROP_SERIALIZATION = {\n    JSON:   ('json' : 'json'),\n    DOTIFY: ('dotify' : 'dotify'),\n    BASE64: ('base64' : 'base64')\n};\n\nexport const CONTEXT = WINDOW_TYPE;\n\nexport const WILDCARD = '*';\n\nexport const DEFAULT_DIMENSIONS = {\n    WIDTH:  '300px',\n    HEIGHT: '150px'\n};\n\nexport const EVENT = {\n    RENDER:   'zoid-render',\n    RENDERED: 'zoid-rendered',\n    DISPLAY:  'zoid-display',\n    ERROR:    'zoid-error',\n    CLOSE:    'zoid-close',\n    PROPS:    'zoid-props'\n};\n","/* @flow */\n\nimport { getDomain, isSameDomain, type CrossDomainWindowType } from 'cross-domain-utils/src';\n\nimport type { Component } from '../component';\nimport type { PropsType, MixedPropDefinitionType } from '../component/props';\n\nimport type { ChildHelpers } from './index';\n\nexport function normalizeChildProp<T, P>(component : Component<P>, props : (PropsType<P>), key : string, value : T, helpers : ChildHelpers<P>) : ?T  {\n\n    // $FlowFixMe\n    const prop : MixedPropDefinitionType<P> = component.getPropDefinition(key);\n\n    if (!prop) {\n        return value;\n    }\n\n    if (typeof prop.childDecorate === 'function') {\n        return prop.childDecorate({ value, ...helpers });\n    }\n\n    return value;\n}\n\n// eslint-disable-next-line max-params\nexport function normalizeChildProps<P>(parentComponentWindow : CrossDomainWindowType, component : Component<P>, props : (PropsType<P>), origin : string, helpers : ChildHelpers<P>, isUpdate : boolean = false) : (PropsType<P>) {\n\n    const result = {};\n\n    // $FlowFixMe\n    for (const key of Object.keys(props)) {\n        const prop = component.getPropDefinition(key);\n\n        if (prop && prop.sameDomain && (origin !== getDomain(window) || !isSameDomain(parentComponentWindow))) {\n            continue;\n        }\n\n        const value = normalizeChildProp(component, props, key, props[key], helpers);\n\n        result[key] = value;\n        if (prop && prop.alias && !result[prop.alias]) {\n            result[prop.alias] = value;\n        }\n    }\n\n    if (!isUpdate) {\n        for (const key of component.getPropNames()) {\n            if (!props.hasOwnProperty(key)) {\n                result[key] = normalizeChildProp(component, props, key, props[key], helpers);\n            }\n        }\n    }\n\n    // $FlowFixMe\n    return result;\n}\n","/* @flow */\n\nimport { inlineMemoize, stringifyError, base64decode } from 'belter/src';\n\nimport { ZOID } from '../constants';\nimport type { ChildPayload } from '../parent';\n\nfunction parseChildWindowName(windowName : string) : ChildPayload {\n    return inlineMemoize(parseChildWindowName, () => {\n        if (!windowName) {\n            throw new Error(`No window name`);\n        }\n    \n        const [ , zoidcomp, name, encodedPayload ] = windowName.split('__');\n    \n        if (zoidcomp !== ZOID) {\n            throw new Error(`Window not rendered by zoid - got ${ zoidcomp }`);\n        }\n    \n        if (!name) {\n            throw new Error(`Expected component name`);\n        }\n    \n        if (!encodedPayload) {\n            throw new Error(`Expected encoded payload`);\n        }\n    \n        try {\n            return JSON.parse(base64decode(encodedPayload));\n        } catch (err) {\n            throw new Error(`Can not decode window name payload: ${ encodedPayload }: ${ stringifyError(err) }`);\n        }\n    }, [ windowName ]);\n}\n\nexport function getChildPayload() : ?ChildPayload {\n    try {\n        return parseChildWindowName(window.name);\n    } catch (err) {\n        // pass\n    }\n}\n","/* @flow */\n/* eslint max-lines: 0 */\n\nimport { isSameDomain, matchDomain, getDomain, getOpener,\n    getNthParentFromTop, getAncestor, getAllFramesInWindow,\n    type CrossDomainWindowType, onCloseWindow } from 'cross-domain-utils/src';\nimport { markWindowKnown, deserializeMessage } from 'post-robot/src';\nimport { ZalgoPromise } from 'zalgo-promise/src';\nimport { extend, waitForDocumentBody, onResize, getElementSafe, assertExists } from 'belter/src';\n\nimport { globalFor } from '../lib';\nimport { CONTEXT, INITIAL_PROPS, WINDOW_REFERENCES } from '../constants';\nimport type { Component } from '../component';\nimport type { PropsType } from '../component/props';\nimport type { WindowRef, PropRef, ParentExportsType } from '../parent';\n\nimport { normalizeChildProps } from './props';\nimport { getChildPayload } from './window';\n\nexport * from './window';\n\nexport type ChildExportsType<P> = {|\n    updateProps : (props : (PropsType<P>)) => ZalgoPromise<void>,\n    close : () => ZalgoPromise<void>\n|};\n\nexport type ChildHelpers<P> = {|\n    close : () => ZalgoPromise<void>,\n    focus : () => ZalgoPromise<void>,\n    resize : ({ width : ?number, height : ?number }) => ZalgoPromise<void>,\n    onError : (mixed) => ZalgoPromise<void>,\n    onProps : ((PropsType<P>) => void) => void,\n    getParent : () => CrossDomainWindowType\n|};\n\n/*  Child Component\n    ---------------\n\n    This is the portion of code which runs inside the frame or popup window containing the component's implementation.\n\n    When the component author calls myComponent.attach(), it creates a new instance of ChildComponent, which is then\n    responsible for managing the state and messaging back up to the parent, and providing props for the component to\n    utilize.\n*/\n\nexport class ChildComponent<P> {\n\n    component : Component<P>\n    props : PropsType<P>\n    context : string\n    parent : ParentExportsType<P>\n    parentComponentWindow : CrossDomainWindowType\n\n    onPropHandlers : Array<(PropsType<P>) => void> // eslint-disable-line flowtype/no-mutable-array\n    autoResize : { width : boolean, height : boolean, element? : string }\n\n    constructor(component : Component<P>) {\n        ZalgoPromise.try(() => {\n            this.component = component;\n            this.onPropHandlers = [];\n            \n            const childPayload = getChildPayload();\n\n            if (!childPayload) {\n                throw new Error(`No child payload found`);\n            }\n\n            const { parent, domain, exports, context, props } = childPayload;\n\n            this.context = context;\n            this.parentComponentWindow = this.getParentComponentWindow(parent);\n            this.parent = deserializeMessage(this.parentComponentWindow, domain, exports);\n\n            this.checkParentDomain(domain);\n\n            const initialProps = this.getPropsByRef(this.parentComponentWindow, domain, props);\n            this.setProps(initialProps, domain);\n            markWindowKnown(this.parentComponentWindow);\n            \n            this.watchForClose();\n\n            return this.parent.init(this.buildExports());\n\n        }).then(() => {\n            return this.watchForResize();\n\n        }).catch(err => {\n            this.onError(err);\n        });\n    }\n\n    getHelpers() : ChildHelpers<P> {\n        return {\n            focus:         () => this.focus(),\n            close:         () => this.close(),\n            resize:        ({ width, height }) => this.resize({ width, height }),\n            onError:       (err) => this.onError(err),\n            onProps:       (handler) => this.onProps(handler),\n            getParent:     () => this.parentComponentWindow\n        };\n    }\n\n    checkParentDomain(domain : string) {\n        if (!matchDomain(this.component.allowedParentDomains, domain)) {\n            throw new Error(`Can not be rendered by domain: ${ domain }`);\n        }\n    }\n\n    onProps(handler : Function) {\n        this.onPropHandlers.push(handler);\n    }\n\n    getPropsByRef(parentComponentWindow : CrossDomainWindowType, domain : string, { type, value, uid } : PropRef) : (PropsType<P>) {\n        let props;\n\n        if (type === INITIAL_PROPS.RAW) {\n            props = value;\n        } else if (type === INITIAL_PROPS.UID) {\n            if (!isSameDomain(parentComponentWindow)) {\n                throw new Error(`Parent component window is on a different domain - expected ${ getDomain() } - can not retrieve props`);\n            }\n\n            const global = globalFor(parentComponentWindow);\n            props = assertExists('props', global && global.props[uid]);\n        }\n\n        if (!props) {\n            throw new Error(`Could not find props`);\n        }\n\n        return deserializeMessage(parentComponentWindow, domain, props);\n    }\n\n    getParentComponentWindow(ref : WindowRef) : CrossDomainWindowType {\n        const { type } = ref;\n    \n        if (type === WINDOW_REFERENCES.OPENER) {\n            return assertExists('opener', getOpener(window));\n    \n        } else if (type === WINDOW_REFERENCES.PARENT) {\n            // $FlowFixMe\n            const distance = ref.distance;\n            return assertExists('parent', getNthParentFromTop(window, distance));\n\n        } else if (type === WINDOW_REFERENCES.GLOBAL) {\n            // $FlowFixMe\n            const { uid } = ref;\n            const ancestor = getAncestor(window);\n\n            if (!ancestor) {\n                throw new Error(`Can not find ancestor window`);\n            }\n\n            for (const frame of getAllFramesInWindow(ancestor)) {\n                if (isSameDomain(frame)) {\n                    const global = globalFor(frame);\n\n                    if (global && global.windows && global.windows[uid]) {\n                        return global.windows[uid];\n                    }\n                }\n            }\n        }\n    \n        throw new Error(`Unable to find ${ type } parent component window`);\n    }\n\n    getProps() : PropsType<P> {\n        // $FlowFixMe\n        this.props = this.props || {};\n        return this.props;\n    }\n\n\n    setProps(props : PropsType<P>, origin : string, isUpdate : boolean = false) {\n        const helpers = this.getHelpers();\n        const existingProps = this.getProps();\n        const normalizedProps = normalizeChildProps(this.parentComponentWindow, this.component, props, origin, helpers, isUpdate);\n\n        extend(existingProps, normalizedProps);\n\n        for (const handler of this.onPropHandlers) {\n            handler.call(this, existingProps);\n        }\n    }\n\n    watchForClose() {\n        window.addEventListener('beforeunload', () => {\n            this.parent.checkClose.fireAndForget();\n        });\n\n        window.addEventListener('unload', () => {\n            this.parent.checkClose.fireAndForget();\n        });\n\n        onCloseWindow(this.parentComponentWindow, () => {\n            this.destroy();\n        });\n    }\n\n    getAutoResize() : { width : boolean, height : boolean, element : ?HTMLElement } {\n        let { width = false, height = false, element = 'body' } = this.autoResize || this.component.autoResize || {};\n        element = getElementSafe(element);\n        return { width, height, element };\n    }\n\n    watchForResize() : ?ZalgoPromise<void> {\n        return waitForDocumentBody().then(() => {\n            const { width, height, element } = this.getAutoResize();\n\n            if (!element || (!width && !height) || this.context === CONTEXT.POPUP) {\n                return;\n            }\n\n            onResize(element, ({ width: newWidth, height: newHeight }) => {\n                this.resize({\n                    width:  width ? newWidth : undefined,\n                    height: height ? newHeight : undefined\n                });\n            }, { width, height });\n        });\n    }\n\n    buildExports() : ChildExportsType<P> {\n\n        const self = this;\n\n        return {\n            updateProps(props : (PropsType<P>)) : ZalgoPromise<void> {\n                return ZalgoPromise.try(() => self.setProps(props, this.__origin__, true));\n            },\n\n            close() : ZalgoPromise<void> {\n                return ZalgoPromise.try(() => self.destroy());\n            }\n        };\n    }\n\n    resize({ width, height } : { width : ?number, height : ?number }) : ZalgoPromise<void> {\n        return this.parent.resize.fireAndForget({ width, height });\n    }\n\n    close() : ZalgoPromise<void> {\n        return this.parent.close();\n    }\n    \n    destroy() : ZalgoPromise<void> {\n        return ZalgoPromise.try(() => {\n            window.close();\n        });\n    }\n\n    focus() : ZalgoPromise<void> {\n        return ZalgoPromise.try(() => {\n            window.focus();\n        });\n    }\n\n    onError(err : mixed) : ZalgoPromise<void> {\n        return ZalgoPromise.try(() => {\n            if (this.parent && this.parent.onError) {\n                return this.parent.onError(err);\n            } else {\n                throw err;\n            }\n        });\n    }\n}\n","/* @flow */\n\nimport { ZalgoPromise } from 'zalgo-promise/src';\nimport { cleanUpWindow, ProxyWindow, toProxyWindow } from 'post-robot/src';\nimport { assertSameDomain } from 'cross-domain-utils/src';\nimport { iframe, popup, destroyElement, normalizeDimension, watchElementForClose,\n    awaitFrameWindow, uniqueID } from 'belter/src';\n\nimport { CONTEXT } from '../constants';\nimport { getProxyElement, type ProxyElement } from '../lib';\n\n\nexport type ContextDriverType = {|\n    openOnClick : boolean,\n    openFrame? : () => ProxyElement<HTMLIFrameElement>,\n    open : (?ProxyElement<HTMLIFrameElement>) => ZalgoPromise<ProxyWindow>,\n    openPrerenderFrame? : () => ProxyElement<HTMLIFrameElement>,\n    openPrerender : (ProxyWindow, ?ProxyElement<HTMLIFrameElement>) => ZalgoPromise<ProxyWindow>,\n    resize? : ({ width : ?number, height : ?number }) => void,\n    delegate : $ReadOnlyArray<string>\n|};\n\nexport const RENDER_DRIVERS : { [string] : ContextDriverType } = {};\n\nRENDER_DRIVERS[CONTEXT.IFRAME] = {\n    openOnClick: false,\n\n    openFrame() : ProxyElement<HTMLIFrameElement> {\n        return getProxyElement(iframe({\n            attributes: {\n                title: this.component.name,\n                ...this.component.attributes.iframe\n            }\n        }));\n    },\n\n    open(proxyFrame : ?ProxyElement<HTMLIFrameElement>) : ZalgoPromise<ProxyWindow> {\n        if (!proxyFrame) {\n            throw new Error(`Expected proxy frame to be passed`);\n        }\n\n        return proxyFrame.getElement().then(frame => {\n            return awaitFrameWindow(frame).then(win => {\n\n                const frameWatcher = watchElementForClose(frame, () => this.close());\n                this.clean.register(() => frameWatcher.cancel());\n                this.clean.register(() => destroyElement(frame));\n                this.clean.register(() => cleanUpWindow(win));\n\n                return toProxyWindow(win);\n            });\n        });\n    },\n\n    openPrerenderFrame() : ProxyElement<HTMLIFrameElement> {\n        return getProxyElement(iframe({\n            attributes: {\n                name:  `__zoid_prerender_frame__${ this.component.name }_${ uniqueID() }__`,\n                title: `prerender__${ this.component.name }`,\n                ...this.component.attributes.iframe\n            }\n        }));\n    },\n\n    openPrerender(proxyWin : ProxyWindow, proxyPrerenderFrame : ?ProxyElement<HTMLIFrameElement>) : ZalgoPromise<ProxyWindow> {\n        if (!proxyPrerenderFrame) {\n            throw new Error(`Expected proxy frame to be passed`);\n        }\n        \n        return proxyPrerenderFrame.getElement().then(prerenderFrame => {\n            this.clean.register(() => destroyElement(prerenderFrame));\n\n            return awaitFrameWindow(prerenderFrame).then(prerenderFrameWindow => {\n                return assertSameDomain(prerenderFrameWindow);\n            }).then(win => {\n                return toProxyWindow(win);\n            });\n        });\n    },\n\n    delegate: [\n        'getProxyContainer',\n        'renderContainer',\n        'openFrame',\n        'openPrerenderFrame',\n        'prerender',\n        'open',\n        'openPrerender'\n    ],\n\n    resize({ width, height } : { width : ?number, height : ?number }) {\n        if (this.proxyContainer) {\n            this.proxyContainer.resize({ width, height });\n        }\n    }\n};\n\nif (__ZOID__.__POPUP_SUPPORT__) {\n    RENDER_DRIVERS[CONTEXT.POPUP] = {\n        openOnClick: true,\n\n        open() : ZalgoPromise<ProxyWindow> {\n            return ZalgoPromise.try(() => {\n                let { width, height } = this.component.dimensions;\n\n                width = normalizeDimension(width, window.outerWidth);\n                height = normalizeDimension(height, window.outerWidth);\n\n                const win = popup('', {\n                    width,\n                    height,\n                    ...this.component.attributes.popup\n                });\n\n                this.clean.register(() => {\n                    win.close();\n                    cleanUpWindow(win);\n                });\n\n                return toProxyWindow(win);\n            });\n        },\n\n        openPrerender(proxyWin : ProxyWindow) : ZalgoPromise<ProxyWindow> {\n            return ZalgoPromise.try(() => {\n                return proxyWin;\n            });\n        },\n\n        delegate: [\n            'getProxyContainer',\n            'renderContainer',\n            'setProxyWin'\n        ]\n    };\n}\n","/* @flow */\n\nimport { type CrossDomainWindowType } from 'cross-domain-utils/src';\nimport { noop } from 'belter/src';\n\nimport { windowStore } from './global';\n\nexport function cleanUpWindow(win : CrossDomainWindowType) {\n    const requestPromises = windowStore('requestPromises');\n    for (const promise of requestPromises.get(win, [])) {\n        promise.reject(new Error(`Window cleaned up before response`)).catch(noop);\n    }\n}\n","/* @flow */\n\nimport { ZalgoPromise } from 'zalgo-promise/src';\nimport { dotify, isDefined } from 'belter/src';\n\nimport type { Component } from '../component';\nimport type { BuiltInPropsDefinitionType, PropsInputType, PropsType, MixedPropDefinitionType } from '../component/props';\nimport { PROP_SERIALIZATION } from '../constants';\n\nimport type { ParentComponent, ParentHelpers } from './index';\n\n/*  Normalize Props\n    ---------------\n\n    Turn props into normalized values, using defaults, function options, etc.\n*/\n\nexport function normalizeProps<P>(component : Component<P>, instance : ParentComponent<P>, props : PropsInputType<P>, helpers : ParentHelpers<P>, isUpdate : boolean = false) : (PropsType<P>) { // eslint-disable-line complexity\n\n    // $FlowFixMe\n    props = props || {};\n    const result : $Shape<P> = { ...props }; // eslint-disable-line no-undef\n\n    const propNames = isUpdate\n        ? []\n        : [ ...component.getPropNames() ];\n\n    // $FlowFixMe\n    for (const key of Object.keys(props)) {\n        if (propNames.indexOf(key) === -1) {\n            propNames.push(key);\n        }\n    }\n\n    const aliases = [];\n\n    const { state, close, focus, onError } = helpers;\n\n    for (const key of propNames) {\n        const propDef = component.getPropDefinition(key);\n        // $FlowFixMe\n        let value = props[key];\n\n        if (!propDef) {\n            continue;\n        }\n\n        const alias = propDef.alias;\n        if (alias) {\n            if (!isDefined(value) && isDefined(props[alias])) {\n                value = props[alias];\n            }\n            aliases.push(alias);\n        }\n\n        if (propDef.value) {\n            value = propDef.value({ props: result, state, close, focus, onError });\n        }\n\n        if (!isDefined(value) && propDef.default) {\n            value = propDef.default({ props: result, state, close, focus, onError });\n        }\n\n        if (isDefined(value)) {\n            if (propDef.type === 'array' ? !Array.isArray(value) : (typeof value !== propDef.type)) {\n                throw new TypeError(`Prop is not of type ${ propDef.type }: ${ key }`);\n            }\n        }\n        \n        // $FlowFixMe\n        result[key] = value;\n    }\n\n    for (const alias of aliases) {\n        // $FlowFixMe\n        delete result[alias];\n    }\n\n    // $FlowFixMe\n    for (const key of Object.keys(result)) {\n        const propDef = component.getPropDefinition(key);\n        // $FlowFixMe\n        const value = result[key];\n\n        if (!propDef) {\n            continue;\n        }\n\n        if (isDefined(value) && propDef.validate) {\n            // $FlowFixMe\n            propDef.validate({ value, props: result });\n        }\n\n        if (isDefined(value) && propDef.decorate) {\n            // $FlowFixMe\n            result[key] = propDef.decorate({ value, props: result, state, close, focus, onError });\n        }\n    }\n\n    // $FlowFixMe\n    return result;\n}\n\n// $FlowFixMe\nfunction getQueryParam<T, P>(prop : MixedPropDefinitionType<P>, key : string, value : T) : ZalgoPromise<string> {\n    return ZalgoPromise.try(() => {\n        if (typeof prop.queryParam === 'function') {\n            return prop.queryParam({ value });\n        } else if (typeof prop.queryParam === 'string') {\n            return prop.queryParam;\n        } else {\n            return key;\n        }\n    });\n}\n\n// $FlowFixMe\nfunction getQueryValue<T, P>(prop : MixedPropDefinitionType<P>, key : string, value : T) : ZalgoPromise<mixed> {\n    return ZalgoPromise.try(() => {\n        if (typeof prop.queryValue === 'function' && isDefined(value)) {\n            return prop.queryValue({ value });\n        } else {\n            return value;\n        }\n    });\n}\n\nexport function propsToQuery<P>(propsDef : BuiltInPropsDefinitionType<P>, props : (PropsType<P>)) : ZalgoPromise<{ [string] : string }> {\n\n    const params = {};\n\n    return ZalgoPromise.all(Object.keys(props).map(key => {\n\n        const prop = propsDef[key];\n\n        if (!prop) {\n            return; // eslint-disable-line array-callback-return\n        }\n\n        return ZalgoPromise.resolve().then(() => {\n\n            const value = props[key];\n\n            if (!value) {\n                return;\n            }\n\n            if (!prop.queryParam) {\n                return;\n            }\n\n            return value;\n\n        }).then(value => {\n\n            if (value === null || typeof value === 'undefined') {\n                return;\n            }\n\n            return ZalgoPromise.all([\n                // $FlowFixMe\n                getQueryParam(prop, key, value),\n                // $FlowFixMe\n                getQueryValue(prop, key, value)\n            ]).then(([ queryParam, queryValue ]) => {\n\n                let result;\n\n                if (typeof queryValue === 'boolean') {\n                    result = queryValue.toString();\n                } else if (typeof queryValue === 'string') {\n                    result = queryValue.toString();\n                } else if (typeof queryValue === 'object' && queryValue !== null) {\n\n                    if (prop.serialization === PROP_SERIALIZATION.JSON) {\n                        result = JSON.stringify(queryValue);\n                    } else if (prop.serialization === PROP_SERIALIZATION.BASE64) {\n                        result = btoa(JSON.stringify(queryValue));\n                    } else if (prop.serialization === PROP_SERIALIZATION.DOTIFY || !prop.serialization) {\n                        result = dotify(queryValue, key);\n\n                        for (const dotkey of Object.keys(result)) {\n                            params[dotkey] = result[dotkey];\n                        }\n\n                        return;\n                    }\n\n                } else if (typeof queryValue === 'number') {\n                    result = queryValue.toString();\n                }\n\n                params[queryParam] = result;\n            });\n        });\n\n    })).then(() => {\n        return params;\n    });\n}\n","/* @flow */\n/* eslint max-lines: 0 */\n\nimport { send, bridge, serializeMessage, ProxyWindow, toProxyWindow } from 'post-robot/src';\nimport { isSameDomain, matchDomain, getDomainFromUrl, isBlankDomain,\n    onCloseWindow, getDomain, type CrossDomainWindowType,\n    getDistanceFromTop, normalizeMockUrl, assertSameDomain } from 'cross-domain-utils/src';\nimport { ZalgoPromise } from 'zalgo-promise/src';\nimport { addEventListener, uniqueID, elementReady, writeElementToWindow, eventEmitter, type EventEmitterType,\n    noop, onResize, extend, extendUrl, appendChild, cleanup, type CleanupType, base64encode,\n    once, stringifyError, destroyElement, isDefined, getElementSafe } from 'belter/src';\n\nimport { ZOID, POST_MESSAGE, CONTEXT, EVENT,\n    INITIAL_PROPS, WINDOW_REFERENCES } from '../constants';\nimport type { Component, onErrorPropType } from '../component';\nimport { globalFor, getProxyElement, type ProxyElement } from '../lib';\nimport type { PropsInputType, PropsType } from '../component/props';\nimport type { ChildExportsType } from '../child';\nimport type { DimensionsType } from '../types';\n\nimport { RENDER_DRIVERS, type ContextDriverType } from './drivers';\nimport { propsToQuery, normalizeProps } from './props';\n\nexport type RenderOptionsType<P> = {|\n    uid : string,\n    props : PropsInputType<P>,\n    tag : string,\n    context : string,\n    close : (?string) => ZalgoPromise<void>,\n    focus : () => ZalgoPromise<ProxyWindow>,\n    doc : Document,\n    container? : HTMLElement,\n    dimensions : DimensionsType,\n    state : Object,\n    event : EventEmitterType,\n    frame : ?HTMLIFrameElement,\n    prerenderFrame : ?HTMLIFrameElement\n|};\n\nexport type ParentExportsType<P> = {|\n    init : (ChildExportsType<P>) => ZalgoPromise<void>,\n    close : () => ZalgoPromise<void>,\n    checkClose : () => ZalgoPromise<void>,\n    resize : ({ width? : ?number, height? : ?number }) => ZalgoPromise<void>,\n    onError : (mixed) => ZalgoPromise<void>\n|};\n\nexport type PropRef =\n    {| type : typeof INITIAL_PROPS.RAW, uid? : string, value? : string |};\n\nexport type WindowRef =\n    {| type : typeof WINDOW_REFERENCES.OPENER |} |\n    {| type : typeof WINDOW_REFERENCES.PARENT, distance : number |} |\n    {| type : typeof WINDOW_REFERENCES.GLOBAL, uid : string |};\n\nexport type ChildPayload = {|\n    uid : string,\n    tag : string,\n    context : $Values<typeof CONTEXT>,\n    domain : string,\n    parent : WindowRef,\n    props : PropRef,\n    exports : string\n|};\n\nexport type StateType = Object;\n\nexport type ParentHelpers<P> = {|\n    state : StateType,\n    close : () => ZalgoPromise<void>,\n    focus : () => ZalgoPromise<void>,\n    resize : ({ width : ?number, height : ?number }) => ZalgoPromise<void>,\n    onError : (mixed) => ZalgoPromise<void>,\n    updateProps : PropsInputType<P> => ZalgoPromise<void>,\n    event : EventEmitterType\n|};\n\nexport class ParentComponent<P> {\n\n    component : Component<P>\n    driver : ContextDriverType\n    clean : CleanupType\n    event : EventEmitterType\n\n    initPromise : ZalgoPromise<void>\n    \n    props : PropsType<P>\n    state : StateType\n    child : ?ChildExportsType<P>\n\n    proxyWin : ?ProxyWindow\n    proxyContainer : ?ProxyElement<HTMLElement>\n\n    constructor(component : Component<P>, props : PropsInputType<P>) {\n        try {\n            this.initPromise = new ZalgoPromise();\n\n            this.clean = cleanup(this);\n            this.state = {};\n\n            this.component = component;\n    \n            this.setupEvents(props.onError);\n            this.setProps(props);\n            this.component.registerActiveComponent(this);\n            this.clean.register(() => this.component.destroyActiveComponent(this));\n            this.watchForUnload();\n\n        } catch (err) {\n            this.onError(err).catch(noop);\n            throw err;\n        }\n    }\n\n    setupEvents(onError : ?onErrorPropType) {\n        this.event = eventEmitter();\n        \n        this.event.on(EVENT.RENDER,   () => this.props.onRender());\n        this.event.on(EVENT.DISPLAY,  () => this.props.onDisplay());\n        this.event.on(EVENT.RENDERED, () => this.props.onRendered());\n        this.event.on(EVENT.CLOSE,    () => this.props.onClose());\n        this.event.on(EVENT.PROPS,    (props) => this.props.onProps(props));\n\n        this.event.on(EVENT.ERROR, err => {\n            if (this.props && this.props.onError) {\n                return this.props.onError(err);\n            } else if (onError) {\n                return onError(err);\n            } else {\n                throw err;\n            }\n        });\n    }\n\n    render(target : CrossDomainWindowType, container : string | HTMLElement, context : $Values<typeof CONTEXT>) : ZalgoPromise<void> {\n        return ZalgoPromise.try(() => {\n            this.component.log(`render`);\n\n            this.driver = RENDER_DRIVERS[context];\n            const uid = `${ ZOID }-${ this.component.tag }-${ uniqueID() }`;\n            const domain = this.getDomain();\n            const initialDomain = this.getInitialDomain();\n            \n            this.component.checkAllowRender(target, domain, container);\n\n            if (target !== window) {\n                this.delegate(context, target);\n            }\n\n            const tasks = {};\n\n            tasks.init = this.initPromise;\n            tasks.buildUrl = this.buildUrl();\n            tasks.onRender = this.event.trigger(EVENT.RENDER);\n\n            tasks.getProxyContainer = this.getProxyContainer(container);\n\n            tasks.openFrame = this.openFrame();\n            tasks.openPrerenderFrame = this.openPrerenderFrame();\n\n            tasks.renderContainer = ZalgoPromise.all([ tasks.getProxyContainer, tasks.openFrame, tasks.openPrerenderFrame ]).then(([ proxyContainer, proxyFrame, proxyPrerenderFrame ]) => {\n                return this.renderContainer(proxyContainer, { context, uid, proxyFrame, proxyPrerenderFrame });\n            });\n\n            tasks.open = this.driver.openOnClick\n                ? this.open()\n                : tasks.openFrame.then(proxyFrame => this.open(proxyFrame));\n\n            tasks.openPrerender = ZalgoPromise.all([ tasks.open, tasks.openPrerenderFrame ]).then(([ proxyWin, proxyPrerenderFrame ]) => {\n                return this.openPrerender(proxyWin, proxyPrerenderFrame);\n            });\n\n            tasks.setState = ZalgoPromise.all([\n                tasks.open.then(proxyWin => {\n                    this.proxyWin = proxyWin;\n                    return this.setProxyWin(proxyWin);\n                }),\n                tasks.renderContainer.then(proxyContainer => {\n                    this.proxyContainer = proxyContainer;\n                })\n            ]);\n            \n            tasks.prerender = ZalgoPromise.all([ tasks.openPrerender, tasks.setState ]).then(([ proxyPrerenderWin ]) => {\n                return this.prerender(proxyPrerenderWin, { context, uid });\n            });\n\n            tasks.loadUrl = ZalgoPromise.all([ tasks.open, tasks.buildUrl, tasks.setWindowName, tasks.prerender ]).then(([ proxyWin, url ]) => {\n                return proxyWin.setLocation(url);\n            });\n\n            tasks.buildWindowName = tasks.open.then(proxyWin => {\n                return this.buildWindowName({ proxyWin, initialDomain, domain, target, context, uid });\n            });\n\n            tasks.setWindowName =  ZalgoPromise.all([ tasks.open, tasks.buildWindowName ]).then(([ proxyWin, windowName ]) => {\n                return proxyWin.setName(windowName);\n            });\n\n            tasks.watchForClose = tasks.open.then(proxyWin => {\n                return this.watchForClose(proxyWin);\n            });\n\n            tasks.onDisplay = tasks.prerender.then(() => {\n                return this.event.trigger(EVENT.DISPLAY);\n            });\n\n            tasks.openBridge = tasks.open.then(proxyWin => {\n                return this.openBridge(proxyWin, initialDomain, context);\n            });\n\n            tasks.runTimeout = tasks.loadUrl.then(() => {\n                return this.runTimeout();\n            });\n\n            tasks.onRender = tasks.init.then(() => {\n                return this.event.trigger(EVENT.RENDERED);\n            });\n\n            return ZalgoPromise.hash(tasks);\n            \n        }).catch(err => {\n            return ZalgoPromise.all([\n                this.onError(err),\n                this.destroy(err)\n            ]);\n        }).then(noop);\n    }\n\n    getProxyContainer(container : string | HTMLElement) : ZalgoPromise<ProxyElement<HTMLElement>> {\n        return ZalgoPromise.try(() => {\n            return elementReady(container);\n        }).then(containerElement => {\n            return getProxyElement(containerElement);\n        });\n    }\n\n    buildWindowName({ proxyWin, initialDomain, domain, target, uid, context } : { proxyWin : ProxyWindow, initialDomain : string, domain : string | RegExp, target : CrossDomainWindowType, context : $Values<typeof CONTEXT>, uid : string }) : string {\n        const childPayload = this.buildChildPayload({ proxyWin, initialDomain, domain, target, context, uid });\n        return `__${ ZOID }__${ this.component.name }__${ base64encode(JSON.stringify(childPayload)) }__`;\n    }\n\n    getPropsRef(proxyWin : ProxyWindow, target : CrossDomainWindowType, domain : string | RegExp, uid : string) : PropRef {\n        const value = serializeMessage(proxyWin, domain, this.getPropsForChild(domain));\n\n        const propRef = isSameDomain(target)\n            ? { type: INITIAL_PROPS.RAW, value }\n            : { type: INITIAL_PROPS.UID, uid };\n\n        if (propRef.type === INITIAL_PROPS.UID) {\n            const global = globalFor(window);\n            global.props = global.props || {};\n            global.props[uid] = value;\n\n            this.clean.register(() => {\n                delete global.props[uid];\n            });\n        }\n\n        return propRef;\n    }\n\n    buildChildPayload({ proxyWin, initialDomain, domain, target = window, context, uid } : { proxyWin : ProxyWindow, initialDomain : string, domain : string | RegExp, target : CrossDomainWindowType, context : $Values<typeof CONTEXT>, uid : string } = {}) : ChildPayload {\n        return {\n            uid,\n            context,\n            domain:  getDomain(window),\n            tag:     this.component.tag,\n            parent:  this.getWindowRef(target, initialDomain, uid, context),\n            props:   this.getPropsRef(proxyWin, target, domain, uid),\n            exports: serializeMessage(proxyWin, domain, this.buildParentExports(proxyWin))\n        };\n    }\n\n    setProxyWin(proxyWin : ProxyWindow) : ZalgoPromise<void> {\n        return ZalgoPromise.try(() => {\n            this.proxyWin = proxyWin;\n        });\n    }\n\n    getHelpers() : ParentHelpers<P> {\n        return {\n            state:       this.state,\n            event:       this.event,\n            close:       () => this.close(),\n            focus:       () => this.focus(),\n            resize:      ({ width, height }) => this.resize({ width, height }),\n            onError:     (err) => this.onError(err),\n            updateProps: (props) => this.updateProps(props)\n        };\n    }\n\n    setProps(props : PropsInputType<P>, isUpdate : boolean = false) {\n        if (this.component.validate) {\n            this.component.validate({ props });\n        }\n\n        const helpers = this.getHelpers();\n\n        // $FlowFixMe\n        this.props = this.props || {};\n        extend(this.props, normalizeProps(this.component, this, props, helpers, isUpdate));\n\n        for (const key of this.component.getPropNames()) {\n            const propDef = this.component.getPropDefinition(key);\n            if (propDef.required !== false && !isDefined(this.props[key])) {\n                throw new Error(`Expected prop \"${ key }\" to be defined`);\n            }\n        }\n    }\n\n    buildUrl() : ZalgoPromise<string> {\n        return propsToQuery({ ...this.component.props, ...this.component.builtinProps }, this.props).then(query => {\n            return extendUrl(normalizeMockUrl(this.component.getUrl(this.props)), { query });\n        });\n    }\n\n    getDomain() : string | RegExp {\n        return this.component.getDomain(this.props);\n    }\n\n    getInitialDomain() : string {\n        return this.component.getInitialDomain(this.props);\n    }\n\n    getPropsForChild(domain : string | RegExp) : (PropsType<P>) {\n        const result = {};\n\n        for (const key of Object.keys(this.props)) {\n            const prop = this.component.getPropDefinition(key);\n\n            if (prop && prop.sendToChild === false) {\n                continue;\n            }\n\n            if (prop && prop.sameDomain && !matchDomain(domain, getDomain(window))) {\n                continue;\n            }\n\n            // $FlowFixMe\n            result[key] = this.props[key];\n        }\n\n        // $FlowFixMe\n        return result;\n    }\n\n    updateProps(props : PropsInputType<P>) : ZalgoPromise<void> {\n        this.setProps(props, true);\n\n        return this.initPromise.then(() => {\n            if (this.child) {\n                return this.child.updateProps(this.getPropsForChild(this.getDomain()));\n            }\n        });\n    }\n\n    openFrame() : ZalgoPromise<?ProxyElement<HTMLIFrameElement>> {\n        return ZalgoPromise.try(() => {\n            if (this.driver.openFrame) {\n                return this.driver.openFrame.call(this);\n            }\n        });\n    }\n\n    openPrerenderFrame() : ZalgoPromise<?ProxyElement<HTMLIFrameElement>> {\n        return ZalgoPromise.try(() => {\n            if (this.driver.openPrerenderFrame) {\n                return this.driver.openPrerenderFrame.call(this);\n            }\n        });\n    }\n    \n    open(proxyFrame : ?ProxyElement<HTMLIFrameElement>) : ZalgoPromise<ProxyWindow> {\n        return ZalgoPromise.try(() => {\n            this.component.log(`open`);\n\n            const windowProp = this.props.window;\n\n            if (windowProp) {\n                this.clean.register(() => windowProp.close());\n                return toProxyWindow(windowProp);\n            }\n\n            return this.driver.open.call(this, proxyFrame);\n\n        }).then(proxyWin => {\n            this.proxyWin = proxyWin;\n            return proxyWin;\n        });\n    }\n\n    openPrerender(proxyWin : ProxyWindow, proxyPrerenderFrame : ?ProxyElement<HTMLIFrameElement>) : ZalgoPromise<ProxyWindow> {\n        return ZalgoPromise.try(() => {\n            return this.driver.openPrerender.call(this, proxyWin, proxyPrerenderFrame);\n        });\n    }\n\n    focus() : ZalgoPromise<void> {\n        return ZalgoPromise.try(() => {\n            if (this.proxyWin) {\n                return this.proxyWin.focus().then(noop);\n            }\n        });\n    }\n\n    delegate(context : $Values<typeof CONTEXT>, target : CrossDomainWindowType) {\n        this.component.log(`delegate`);\n\n        const props = {};\n        for (const propName of this.component.getPropNames()) {\n            if (this.component.getPropDefinition(propName).allowDelegate) {\n                props[propName] = this.props[propName];\n            }\n        }\n\n        const overridesPromise = send(target, `${ POST_MESSAGE.DELEGATE }_${ this.component.name }`, {\n            context,\n            props,\n            overrides: {\n                event:   this.event,\n                close:   () => this.close(),\n                onError: (err) => this.onError(err)\n            }\n\n        }).then(({ data }) => {\n            this.clean.register(data.destroy);\n            return data.overrides;\n\n        }).catch(err => {\n            throw new Error(`Unable to delegate rendering. Possibly the component is not loaded in the target window.\\n\\n${ stringifyError(err) }`);\n        });\n\n        for (const key of this.driver.delegate) {\n            // $FlowFixMe\n            this[key] = function overriddenFunction() : ZalgoPromise<mixed> {\n                return overridesPromise.then(overrides => {\n                    return overrides[key].apply(this, arguments);\n                });\n            };\n        }\n    }\n\n    getWindowRef(target : CrossDomainWindowType, domain : string, uid : string, context : $Values<typeof CONTEXT>) : WindowRef {\n        \n        if (domain === getDomain(window)) {\n            const global = globalFor(window);\n            global.windows = global.windows || {};\n            global.windows[uid] = window;\n            this.clean.register(() => {\n                delete global.windows[uid];\n            });\n    \n            return { type: WINDOW_REFERENCES.GLOBAL, uid };\n        }\n\n        if (context === CONTEXT.POPUP) {\n            return { type: WINDOW_REFERENCES.OPENER };\n        }\n\n        return { type: WINDOW_REFERENCES.PARENT, distance: getDistanceFromTop(window) };\n    }\n\n    watchForClose(proxyWin : ProxyWindow) : ZalgoPromise<void> {\n        return proxyWin.awaitWindow().then(win => {\n            const closeWindowListener = onCloseWindow(win, () => {\n                this.component.log(`detect_close_child`);\n                return this.close();\n            }, 2000);\n\n            this.clean.register(closeWindowListener.cancel);\n        });\n    }\n\n    watchForUnload() {\n        const unloadWindowListener = addEventListener(window, 'unload', once(() => {\n            this.component.log(`navigate_away`);\n            this.destroy(new Error(`Window navigated away`));\n        }));\n\n        this.clean.register(unloadWindowListener.cancel);\n    }\n\n    runTimeout() : ZalgoPromise<void> {\n        return ZalgoPromise.try(() => {\n            const timeout = this.props.timeout;\n\n            if (timeout) {\n                return this.initPromise.timeout(timeout, new Error(`Loading component timed out after ${ timeout } milliseconds`));\n            }\n        });\n    }\n\n    initChild(child : ChildExportsType<P>) : ZalgoPromise<void> {\n        return ZalgoPromise.try(() => {\n            this.clean.set('child', child);\n            this.initPromise.resolve();\n        });\n    }\n\n    buildParentExports(win : ProxyWindow) : ParentExportsType<P> {\n        const onError    = (err) => this.onError(err);\n        const init       = (child) => this.initChild(child);\n        const close      = () => this.close();\n        const checkClose = () => this.checkClose(win);\n        const resize     = ({ width, height }) => this.resize({ width, height });\n\n        init.onError = onError;\n\n        return { init, close, checkClose, resize, onError };\n    }\n\n    resize({ width, height } : { width? : ?number, height? : ?number }) : ZalgoPromise<void> {\n        return ZalgoPromise.try(() => {\n            if (this.driver.resize) {\n                return this.driver.resize.call(this, { width, height });\n            }\n        });\n    }\n\n    checkClose(win : ProxyWindow) : ZalgoPromise<void> {\n        return win.isClosed().then(closed => {\n            if (closed) {\n                return this.close();\n            }\n\n            return ZalgoPromise.delay(200)\n                .then(() => win.isClosed())\n                .then(secondClosed => {\n                    if (secondClosed) {\n                        return this.close();\n                    }\n                });\n        });\n    }\n\n    close() : ZalgoPromise<void> {\n        return ZalgoPromise.try(() => {\n            this.component.log(`close`);\n            return this.event.trigger(EVENT.CLOSE);\n\n        }).then(() => {\n            if (this.child) {\n                this.child.close.fireAndForget().catch(noop);\n            }\n\n            return this.destroy(new Error(`Window closed`));\n        });\n    }\n\n    prerender(proxyPrerenderWin : ProxyWindow, { context, uid } : { context : $Values<typeof CONTEXT>, uid : string }) : ZalgoPromise<void> {\n        return ZalgoPromise.try(() => {\n            const prerenderTemplate = this.component.prerenderTemplate;\n\n            if (!prerenderTemplate) {\n                return;\n            }\n\n            let prerenderWindow = proxyPrerenderWin.getWindow();\n\n            if (!prerenderWindow || !isSameDomain(prerenderWindow) || !isBlankDomain(prerenderWindow)) {\n                return;\n            }\n\n            prerenderWindow = assertSameDomain(prerenderWindow);\n    \n            const doc = prerenderWindow.document;\n            const el = this.renderTemplate(prerenderTemplate, { context, uid, doc });\n\n            if (!el) {\n                return;\n            }\n\n            if (el.ownerDocument !== doc) {\n                throw new Error(`Expected prerender template to have been created with document from child window`);\n            }\n\n            writeElementToWindow(prerenderWindow, el);\n\n            let { width = false, height = false, element = 'body' } = this.component.autoResize || {};\n            element = getElementSafe(element, doc);\n            \n            if (element && (width || height)) {\n                onResize(element, ({ width: newWidth, height: newHeight }) => {\n                    this.resize({\n                        width:  width ? newWidth : undefined,\n                        height: height ? newHeight : undefined\n                    });\n                }, { width, height, win: prerenderWindow });\n            }\n        });\n    }\n\n    renderTemplate(renderer : (RenderOptionsType<P>) => ?HTMLElement, { context, uid, container, doc, frame, prerenderFrame } : { context : $Values<typeof CONTEXT>, uid : string, container? : HTMLElement, doc : Document, frame? : ?HTMLIFrameElement, prerenderFrame? : ?HTMLIFrameElement }) : ?HTMLElement {\n        // $FlowFixMe\n        return renderer.call(this, {\n            container,\n            context,\n            uid,\n            doc,\n            frame,\n            prerenderFrame,\n            focus:      () => this.focus(),\n            close:      () => this.close(),\n            state:      this.state,\n            props:      this.props,\n            tag:        this.component.tag,\n            dimensions: this.component.dimensions,\n            event:      this.event\n        });\n    }\n\n    renderContainer(proxyContainer : ProxyElement<HTMLElement>, { proxyFrame, proxyPrerenderFrame, context, uid } : { context : $Values<typeof CONTEXT>, uid : string, proxyFrame : ?ProxyElement<HTMLIFrameElement>, proxyPrerenderFrame : ?ProxyElement<HTMLIFrameElement> }) : ZalgoPromise<?ProxyElement<HTMLElement>> {\n        return ZalgoPromise.all([\n            proxyContainer.getElement().then(elementReady),\n            // $FlowFixMe\n            proxyFrame ? proxyFrame.getElement() : null,\n            // $FlowFixMe\n            proxyPrerenderFrame ? proxyPrerenderFrame.getElement() : null\n        ]).then(([ container, frame, prerenderFrame ]) => {\n            const innerContainer = this.renderTemplate(this.component.containerTemplate, { context, uid, container, frame, prerenderFrame, doc: document });\n            if (innerContainer) {\n                appendChild(container, innerContainer);\n                this.clean.register(() => destroyElement(innerContainer));\n                this.proxyContainer = getProxyElement(innerContainer);\n                return this.proxyContainer;\n            }\n        });\n    }\n\n    destroy(err : mixed = new Error(`Component destroyed before render complete`)) : ZalgoPromise<void> {\n        return ZalgoPromise.try(() => {\n            this.component.log(`destroy`);\n            this.initPromise.asyncReject(err);\n            return this.clean.all();\n        });\n    }\n\n    onError(err : mixed) : ZalgoPromise<void> {\n        // eslint-disable-next-line promise/no-promise-in-callback\n        return ZalgoPromise.try(() => {\n            this.initPromise.asyncReject(err);\n            return this.event.trigger(EVENT.ERROR, err);\n\n        }).then(() => {\n            return this.initPromise;\n            \n        }).then(() => {\n            throw err;\n        });\n    }\n\n    openBridge(proxyWin : ProxyWindow, domain : string, context : $Values<typeof CONTEXT>) : ?ZalgoPromise<?CrossDomainWindowType> {\n        if (__POST_ROBOT__.__IE_POPUP_SUPPORT__) {\n            return ZalgoPromise.try(() => {\n                return proxyWin.awaitWindow();\n                \n            }).then(win => {\n                if (!bridge || !bridge.needsBridge({ win, domain }) || bridge.hasBridge(domain, domain)) {\n                    return;\n                }\n\n                const bridgeUrl = this.component.getBridgeUrl();\n\n                if (!bridgeUrl) {\n                    throw new Error(`Bridge needed to render ${ context }`);\n                }\n\n                const bridgeDomain = getDomainFromUrl(bridgeUrl);\n                bridge.linkUrl(win, domain);\n                return bridge.openBridge(normalizeMockUrl(bridgeUrl), bridgeDomain);\n            });\n        }\n    }\n}\n","/* @flow */\n\nimport { onCloseWindow, type CrossDomainWindowType } from 'cross-domain-utils/src';\nimport { ZalgoPromise } from 'zalgo-promise/src';\nimport { ProxyWindow } from 'post-robot/src';\nimport { cleanup, type CleanupType, type EventEmitterType } from 'belter/src';\n\nimport { ParentComponent } from '../parent';\nimport { RENDER_DRIVERS, type ContextDriverType } from '../parent/drivers';\nimport type { Component } from '../component';\n\nexport type DelegatePropsType = {|\n    onClose : () => ?ZalgoPromise<void>,\n    onDisplay : () => ?ZalgoPromise<void>,\n    window : ?ProxyWindow\n|};\n\nexport type DelegateOptionsType = {|\n    context : string,\n    props : DelegatePropsType,\n    overrides : {\n        close : () => ZalgoPromise<void>,\n        onError : (mixed) => ZalgoPromise<void>,\n        event : EventEmitterType\n    }\n|};\n\nexport type DelegateReturnType = {|\n    overrides : Object,\n    destroy : () => ZalgoPromise<void>\n|};\n\nexport class DelegateComponent<P>  {\n\n    component : Component<P>\n    source : CrossDomainWindowType\n    context : string\n    driver : ContextDriverType\n    props : DelegatePropsType\n    clean : CleanupType\n\n    focus : () => ZalgoPromise<void>\n    resize : ({ width? : ?number, height? : ?number }) => ZalgoPromise<void>\n    renderTemplate : Function\n\n    close : () => ZalgoPromise<void>\n    onError : (mixed) => ZalgoPromise<void>\n    event : EventEmitterType\n\n    constructor(component : Component<P>, source : CrossDomainWindowType, options : DelegateOptionsType) {\n        this.component = component;\n        this.context = options.context;\n        this.driver = RENDER_DRIVERS[options.context];\n        this.clean = cleanup(this);\n        \n        this.focus = ParentComponent.prototype.focus;\n        this.resize = ParentComponent.prototype.resize;\n        this.renderTemplate = ParentComponent.prototype.renderTemplate;\n\n        // $FlowFixMe\n        this.props = {};\n        for (const propName of Object.keys(options.props)) {\n            const propDef = this.component.getPropDefinition(propName);\n            if (propDef && propDef.allowDelegate && options.props[propName]) {\n                // $FlowFixMe\n                this.props[propName] = options.props[propName];\n            }\n        }\n\n        this.close   = options.overrides.close;\n        this.onError = options.overrides.onError;\n        this.event   = options.overrides.event;\n\n        this.component.registerActiveComponent(this);\n        this.clean.register(() => this.component.destroyActiveComponent(this));\n\n        this.watchForSourceClose(source);\n    }\n\n    getDelegate() : DelegateReturnType {\n        return {\n            overrides: this.getOverrides(),\n            destroy:   () => this.destroy()\n        };\n    }\n\n    watchForSourceClose(source : CrossDomainWindowType) {\n        const closeSourceWindowListener = onCloseWindow(source, () => this.destroy(), 3000);\n        this.clean.register(closeSourceWindowListener.cancel);\n    }\n\n    getOverrides() : { [string] : mixed } {\n        const overrides = {};\n        const self = this;\n\n        for (const key of this.driver.delegate) {\n            overrides[key] = function delegateOverride() : mixed {\n                // $FlowFixMe\n                return ParentComponent.prototype[key].apply(self, arguments);\n            };\n            overrides[key].__name__ = key;\n        }\n\n        return overrides;\n    }\n\n    destroy() : ZalgoPromise<void> {\n        return this.clean.all();\n    }\n}\n","export default function _inheritsLoose(subClass, superClass) {\n  subClass.prototype = Object.create(superClass.prototype);\n  subClass.prototype.constructor = subClass;\n  subClass.__proto__ = superClass;\n}","/* @flow */\n/* eslint react/no-deprecated: off, react/no-find-dom-node: off, react/display-name: off, react/no-did-mount-set-state: off, react/destructuring-assignment: off, react/prop-types: off */\n\nimport { extend, noop } from 'belter/src';\n\nimport type { Component, ComponentDriverType } from '../component';\nimport { CONTEXT } from '../constants';\n\ndeclare class ReactClassType {\n\n}\n\ntype ReactElementType = {|\n\n|};\n\ndeclare class __ReactComponent {\n\n}\n\ntype ReactType = {|\n    Component : __ReactComponent,\n    createClass : ({ render : () => ReactElementType, componentDidMount : () => void, componentDidUpdate : () => void }) => (typeof ReactClassType),\n    createElement : (string, ?{ [string] : mixed }, ...children : $ReadOnlyArray<ReactElementType>) => ReactElementType\n|};\n\ntype ReactDomType = {|\n    findDOMNode : (typeof ReactClassType) => HTMLElement\n|};\n\ntype ReactLibraryType = {|\n    React : ReactType,\n    ReactDOM : ReactDomType\n|};\n\nexport const react : ComponentDriverType<*, ReactLibraryType> = {\n\n    register(component : Component<*>, { React, ReactDOM } : ReactLibraryType) : (typeof ReactClassType) {\n\n        // $FlowFixMe\n        return class extends React.Component {\n            render() : ReactElementType {\n                return React.createElement('div', null);\n            }\n\n            componentDidMount() {\n                component.log(`instantiate_react_component`);\n\n                // $FlowFixMe\n                const el = ReactDOM.findDOMNode(this);\n\n                const parent = component.init(extend({}, this.props));\n                parent.render(el, CONTEXT.IFRAME);\n                this.setState({ parent });\n            }\n\n            componentDidUpdate() {\n\n                if (this.state && this.state.parent) {\n                    this.state.parent.updateProps(extend({}, this.props)).catch(noop);\n                }\n            }\n        };\n    }\n};\n","/* @flow */\n\nimport { extend, noop } from 'belter/src';\n\nimport type { Component, ComponentDriverType } from '../component';\nimport { CONTEXT } from '../constants';\n\ntype VueComponent = {|\n    render : (Function) => Element,\n    inheritAttrs : boolean,\n    mounted : () => void,\n    watch : {|\n        $attrs : {|\n            deep : boolean,\n            handler : () => void\n        |}\n    |}\n|};\n\ntype RegisteredVueComponent = {|\n    \n|};\n\ntype VueType = {|\n    component : (string, VueComponent) => RegisteredVueComponent\n|};\n\nexport const vue : ComponentDriverType<*, VueType> = {\n\n    register<P>(component : Component<P>, Vue : VueType) : RegisteredVueComponent {\n\n        return Vue.component(component.tag, {\n            render(createElement) : Element {\n                return createElement('div');\n            },\n\n            inheritAttrs: false,\n\n            mounted() {\n                const el = this.$el;\n\n                // $FlowFixMe\n                this.parent = component.init(extend({}, this.$attrs));\n                this.parent.render(el, CONTEXT.IFRAME);\n            },\n\n            watch: {\n                $attrs: {\n                    handler: function handler() {\n                        if (this.parent && this.$attrs) {\n                            this.parent.updateProps(extend({}, this.$attrs)).catch(noop);\n                        }\n                    },\n                    deep: true\n                }\n            }\n        });\n    }\n};\n","/* @flow */\n\nimport { dasherizeToCamel, replaceObject, noop } from 'belter/src';\n\nimport type { Component, ComponentDriverType } from '../component';\nimport { CONTEXT } from '../constants';\n\ntype AngularModule = {|\n    directive : (string, () => {\n        scope : { [string] : '=' | '@' },\n        restrict : string,\n        controller : $ReadOnlyArray<string | Function>\n    }) => AngularModule\n|};\n\ntype Angular = {|\n    module : (string, $ReadOnlyArray<string>) => AngularModule\n|};\n\nexport const angular : ComponentDriverType<*, Angular> = {\n\n    register(component : Component<*>, ng : Angular) : AngularModule {\n\n        const module = ng.module(component.tag, []).directive(dasherizeToCamel(component.tag), () => {\n\n            const scope = {};\n\n            for (const key of component.getPropNames()) {\n                scope[key] = '=';\n            }\n\n            scope.props = '=';\n\n            return {\n                scope,\n\n                restrict: 'E',\n\n                controller: [ '$scope', '$element', ($scope, $element) => {\n                    component.log(`instantiate_angular_component`);\n\n                    function safeApply() {\n                        if ($scope.$root.$$phase !== '$apply' && $scope.$root.$$phase !== '$digest') {\n                            try {\n                                $scope.$apply();\n                            } catch (err) {\n                                // pass\n                            }\n                        }\n                    }\n\n                    const getProps = () => {\n                        return replaceObject($scope.props, item => {\n                            if (typeof item === 'function') {\n                                return function angularWrapped() : mixed {\n                                    const result = item.apply(this, arguments);\n                                    safeApply();\n                                    return result;\n                                };\n                            }\n                            return item;\n                        });\n                    };\n\n                    const instance = component.init(getProps());\n                    instance.render($element[0], CONTEXT.IFRAME);\n\n                    $scope.$watch(() => {\n                        instance.updateProps(getProps()).catch(noop);\n                    });\n                } ]\n            };\n        });\n\n        return module;\n    }\n};\n","/* @flow */\n/* eslint new-cap: 0 */\n\nimport { replaceObject } from 'belter/src';\n\nimport type { Component, ComponentDriverType } from '../component';\nimport { CONTEXT } from '../constants';\n\ntype Angular2Injection = {||};\n\ntype Angular2Component = {||};\n\ntype Angular2Module = {||};\n\ntype Angular2 = {|\n    Component : ({ selector : string, template : string, inputs : $ReadOnlyArray<string> }) => {\n        Class : ({ constructor : $ReadOnlyArray<Angular2Injection | Function>, ngOnInit : () => void, ngDoCheck : () => void }) => Angular2Component\n    },\n    NgModule : ({ declarations : $ReadOnlyArray<Angular2Component>, exports : $ReadOnlyArray<Angular2Component> }) => {\n        Class : ({ constructor : () => void }) => Angular2Module\n    },\n    ElementRef : Angular2Injection,\n    NgZone : Angular2Injection\n|};\n\nconst equals = (obj1, obj2) => {\n    const checked = {};\n\n    for (const key in obj1) {\n        if (obj1.hasOwnProperty(key)) {\n            checked[key] = true;\n\n            if (obj1[key] !== obj2[key]) {\n                return false;\n            }\n        }\n    }\n\n    for (const key in obj2) {\n        if (!checked[key]) {\n            return false;\n        }\n    }\n\n    return true;\n};\n\nexport const angular2 : ComponentDriverType<*, Angular2> = {\n\n    register(zoid : Component<*>, { Component : AngularComponent, NgModule, ElementRef, NgZone }) : Angular2Module {\n\n        zoid.log('initializing angular2 component');\n\n        const getProps = (component) => {\n            return replaceObject({ ...component.internalProps, ...component.props }, item => {\n                if (typeof item === 'function') {\n                    return function angular2Wrapped() : void {\n                        return component.zone.run(() => item.apply(this, arguments));\n                    };\n                }\n                return item;\n            });\n        };\n\n        const ComponentInstance =\n            AngularComponent({\n                selector: zoid.tag,\n                template: '<div></div>',\n                inputs:   [ 'props' ]\n            }).Class({\n                constructor: [ ElementRef, NgZone, function angularConstructor(elementRef, zone) {\n                    this._props = {};\n                    this.elementRef = elementRef;\n                    this.zone = zone;\n                } ],\n                ngOnInit () {\n                    const targetElement = this.elementRef.nativeElement;\n                    \n                    this.parent = zoid.init(getProps(this));\n                    this.parent.render(targetElement, CONTEXT.IFRAME);\n                },\n                ngDoCheck() {\n                    if (this.parent && !equals(this._props, this.props)) {\n                        this._props = { ...this.props };\n                        this.parent.updateProps(getProps(this));\n                    }\n                }\n            });\n\n\n        const ModuleInstance = NgModule({\n            declarations: [ ComponentInstance ],\n            exports:      [ ComponentInstance ]\n        }).Class({\n            constructor () {\n                // pass\n            }\n        });\n\n        return ModuleInstance;\n    }\n};\n","/* @flow */\n\nexport type NodePropsType = { [string] : mixed };\n// eslint-disable-next-line no-use-before-define\nexport type NodeType = ElementNode | TextNode | FragmentNode;\n// eslint-disable-next-line no-use-before-define\nexport type NodeChildrenType = $ReadOnlyArray<ElementNode | TextNode>;\nexport type NodeRenderer<T> = (string, NodePropsType, NodeChildrenType) => T;\nexport type NodeRendererFactory<T, O = Object> = (O | void) => NodeRenderer<T>;\n\nclass Node {\n    isElementNode() : boolean {\n        return false;\n    }\n\n    isTextNode() : boolean {\n        return false;\n    }\n\n    isFragmentNode() : boolean {\n        return false;\n    }\n}\n\nexport class ElementNode extends Node {\n    name : string\n    props : NodePropsType\n    children : NodeChildrenType\n    onRender : ?<T>(T) => void // eslint-disable-line no-undef\n\n    constructor(name : string, props : NodePropsType, children : NodeChildrenType) {\n        super();\n        this.name = name;\n        this.props = props;\n        this.children = children;\n\n        if (typeof props.onRender === 'function') {\n            this.onRender = props.onRender;\n            delete props.onRender;\n        }\n    }\n\n    getTag() : string {\n        return this.name;\n    }\n\n    isTag(name : string) : boolean {\n        return name === this.name;\n    }\n\n    isElementNode() : boolean {\n        return true;\n    }\n\n    render<T>(renderer : NodeRenderer<T>) : T {\n        const element = renderer(this.name, this.props, this.children);\n        if (this.onRender) {\n            this.onRender(element);\n        }\n        return element;\n    }\n\n    getText() : string {\n        throw new Error(`Can not get text of an element node`);\n    }\n}\n\nexport class TextNode extends Node {\n    text : string\n\n    constructor(text : string) {\n        super();\n        this.text = text;\n    }\n\n    getTag() : string {\n        throw new Error(`Can not get tag of text node`);\n    }\n\n    isTag(name : string) : boolean { // eslint-disable-line no-unused-vars\n        throw new Error(`Can not check tag of text node`);\n    }\n\n    isTextNode() : boolean {\n        return true;\n    }\n\n    render<T>(renderer : NodeRenderer<T>) : T { // eslint-disable-line no-unused-vars\n        throw new Error(`Can not render a text node`);\n    }\n\n    getText() : string {\n        return this.text;\n    }\n}\n\nexport class FragmentNode extends Node {\n    children : NodeChildrenType\n\n    constructor(children : NodeChildrenType) {\n        super();\n        this.children = children;\n    }\n\n    getTag() : string {\n        throw new Error(`Can not get tag of fragment node`);\n    }\n\n    isTag(name : string) : boolean { // eslint-disable-line no-unused-vars\n        throw new Error(`Can not check tag of fragment node`);\n    }\n\n    isFragmentNode() : boolean {\n        return true;\n    }\n\n    render<T>(renderer : NodeRenderer<T>) : $ReadOnlyArray<T> { // eslint-disable-line no-unused-vars\n        throw new Error(`Can not render a fragment node`);\n    }\n\n    getText() : string {\n        throw new Error(`Can not get text of a fragment node`);\n    }\n}\n\ntype JsxChildType = $ReadOnlyArray<JsxChildType> | NodeType | string;\ntype NullableJsxChildType = $ReadOnlyArray<NullableJsxChildType> | NodeType | string | null | void;\n\nfunction normalizeChild(child : NullableJsxChildType) : NodeType | void {\n    if (typeof child === 'string') {\n        return new TextNode(child);\n\n    } else if (child instanceof ElementNode || child instanceof TextNode || child instanceof FragmentNode) {\n        return child;\n\n    } else if (Array.isArray(child)) {\n        return new FragmentNode(normalizeChildren(child)); // eslint-disable-line no-use-before-define\n\n    } else if (child === null || typeof child === 'undefined') {\n        return; // eslint-disable-line no-useless-return\n\n    } else {\n        throw new Error(`Child node must be string or instance of jsx-pragmatic node; got ${ typeof child }`);\n    }\n}\n\nfunction normalizeChildren(children : $ReadOnlyArray<NullableJsxChildType>) : NodeChildrenType {\n    const result = [];\n\n    for (const child of children) {\n        const normalizedChild = normalizeChild(child);\n\n        if (!normalizedChild) {\n            continue;\n        }\n\n        if (normalizedChild instanceof FragmentNode) {\n            for (const subchild of normalizedChild.children) {\n                result.push(subchild);\n            }\n        } else {\n            result.push(normalizedChild);\n        }\n    }\n\n    return result;\n}\n\ntype JSXElementBuilder<P : NodePropsType> = (\n    element : string,\n    props : P | null,\n    ...children : $ReadOnlyArray<NullableJsxChildType>\n) => ElementNode;\n\ntype JSXElementFunctionBuilder<P : NodePropsType> = (\n    element : (P, $ReadOnlyArray<JsxChildType>) => ElementNode,\n    props : P | null,\n    ...children : $ReadOnlyArray<NullableJsxChildType>\n) => ElementNode;\n\ntype JSXTextFunctionBuilder<P : NodePropsType> = (\n    element : (P, $ReadOnlyArray<JsxChildType>) => string | TextNode,\n    props : P | null,\n    ...children : $ReadOnlyArray<NullableJsxChildType>\n) => TextNode;\n\ntype JSXFragmentFunctionBuilder<P : NodePropsType> = (\n    element : (P, $ReadOnlyArray<JsxChildType>) => FragmentNode | $ReadOnlyArray<NullableJsxChildType>,\n    props : P | null,\n    ...children : $ReadOnlyArray<NullableJsxChildType>\n) => FragmentNode;\n\ntype JSXEmptyFunctionBuilder<P : NodePropsType> = (\n    element : (P, $ReadOnlyArray<JsxChildType>) => null | void,\n    props : P | null,\n    ...children : $ReadOnlyArray<NullableJsxChildType>\n) => void;\n\ntype JSXBuilder<P : NodePropsType> = JSXElementBuilder<P> & JSXElementFunctionBuilder<P> & JSXTextFunctionBuilder<P> & JSXFragmentFunctionBuilder<P> & JSXEmptyFunctionBuilder<P>;\n\nexport const node : JSXBuilder<*> = <P : NodePropsType>(element, props : P | null, ...children) => {\n    if (typeof element === 'string') {\n        return new ElementNode(element, props || {}, normalizeChildren(children));\n    }\n\n    if (typeof element === 'function') {\n        // $FlowFixMe\n        return normalizeChild(element(props || {}, normalizeChildren(children)));\n    }\n    \n    throw new TypeError(`Expected jsx Element to be a string or a function`);\n};\n\nexport function Fragment(props : NodePropsType, ...children : $ReadOnlyArray<JsxChildType>) : FragmentNode {\n    \n    if (props && Object.keys(props).length) {\n        throw new Error(`Do not pass props to Fragment`);\n    }\n\n    return new FragmentNode(normalizeChildren(children));\n}\n","/* @flow */\n\nimport type { NodeChildrenType, NodePropsType, NodeRendererFactory, NodeRenderer } from '../node';\n\nconst ELEMENT_TAG = {\n    HTML:    'html',\n    IFRAME:  'iframe',\n    SCRIPT:  'script',\n    NODE:    'node',\n    DEFAULT: 'default'\n};\n\nconst ELEMENT_PROP = {\n    INNER_HTML: 'innerHTML',\n    EL:         'el'\n};\n\nfunction fixScripts(el : HTMLElement, doc : Document = window.document) {\n    for (const script of el.querySelectorAll('script')) {\n        const parentNode = script.parentNode;\n\n        if (!parentNode) {\n            continue;\n        }\n\n        const newScript = doc.createElement('script');\n        // $FlowFixMe\n        newScript.text = script.textContent;\n        parentNode.replaceChild(newScript, script);\n    }\n}\n\ntype CreateElementOptions = {|\n    doc : Document,\n    name : string,\n    props : NodePropsType\n|};\n\nconst CREATE_ELEMENT : { [string] : (CreateElementOptions) => HTMLElement } = {\n\n    [ ELEMENT_TAG.NODE ]: ({ props } : CreateElementOptions) => {\n        if (!props[ELEMENT_PROP.EL]) {\n            throw new Error(`Must pass ${ ELEMENT_PROP.EL } prop to ${ ELEMENT_TAG.NODE } element`);\n        }\n\n        if (Object.keys(props).length > 1) {\n            throw new Error(`Must not pass any prop other than ${ ELEMENT_PROP.EL } to ${ ELEMENT_TAG.NODE } element`);\n        }\n\n        // $FlowFixMe\n        return props[ELEMENT_PROP.EL];\n    },\n\n    [ ELEMENT_TAG.DEFAULT ]: ({ name, doc } : CreateElementOptions) => {\n        return doc.createElement(name);\n    }\n};\n\nfunction createElement({ doc, name, props } : CreateElementOptions) : HTMLElement {\n    const elementCreator = CREATE_ELEMENT[name] || CREATE_ELEMENT[ELEMENT_TAG.DEFAULT];\n    return elementCreator({ name, props, doc });\n}\n\ntype AddPropsOptions = {|\n    el : HTMLElement,\n    props : NodePropsType\n|};\n\nfunction addProps({ el, props } : AddPropsOptions) {\n    for (const prop of Object.keys(props)) {\n        const val = props[prop];\n\n        if (val === null || typeof val === 'undefined' || prop === ELEMENT_PROP.EL || prop === ELEMENT_PROP.INNER_HTML) {\n            continue;\n        }\n\n        if (prop.match(/^on[A-Z][a-z]/) && typeof val === 'function') {\n            el.addEventListener(prop.slice(2).toLowerCase(), val);\n        } else if (typeof val === 'string' || typeof val === 'number') {\n            el.setAttribute(prop, val.toString());\n\n        } else if (typeof val === 'boolean') {\n            if (val === true) {\n                el.setAttribute(prop, '');\n            }\n\n        } else {\n            throw new TypeError(`Can not render prop ${ prop } of type ${ typeof val }`);\n        }\n    }\n}\n\ntype AddChildrenOptions = {|\n    el : HTMLElement,\n    name : string,\n    children : NodeChildrenType,\n    doc : Document,\n    props : NodePropsType,\n    domRenderer : NodeRenderer<HTMLElement>\n|};\n\nconst ADD_CHILDREN : { [string] : (AddChildrenOptions) => void } = {\n\n    [ ELEMENT_TAG.IFRAME ]: ({ el, children } : AddChildrenOptions) => {\n        const firstChild = children[0];\n\n        if (children.length > 1 || !firstChild.isElementNode()) {\n            throw new Error(`Expected only single element node as child of ${ ELEMENT_TAG.IFRAME } element`);\n        }\n\n        if (!firstChild.isTag(ELEMENT_TAG.HTML)) {\n            throw new Error(`Expected element to be inserted into frame to be html, got ${ firstChild.getTag() }`);\n        }\n    \n        el.addEventListener('load', () => {\n\n            // $FlowFixMe\n            const win = el.contentWindow;\n    \n            if (!win) {\n                throw new Error(`Expected frame to have contentWindow`);\n            }\n\n            const doc = win.document;\n            const docElement = doc.documentElement;\n\n            while (docElement.children && docElement.children.length) {\n                docElement.removeChild(docElement.children[0]);\n            }\n\n            // eslint-disable-next-line no-use-before-define\n            const child = firstChild.render(dom({ doc }));\n        \n            while (child.children.length) {\n                docElement.appendChild(child.children[0]);\n            }\n        });\n    },\n\n    [ ELEMENT_TAG.SCRIPT ]: ({ el, children } : AddChildrenOptions) => {\n        const firstChild = children[0];\n\n        if (children.length !== 1 || !firstChild.isTextNode()) {\n            throw new Error(`Expected only single text node as child of ${ ELEMENT_TAG.SCRIPT } element`);\n        }\n        \n        // $FlowFixMe\n        el.text = firstChild.getText();\n    },\n\n    [ ELEMENT_TAG.DEFAULT ]: ({ el, children, doc, domRenderer } : AddChildrenOptions) => {\n        for (const child of children) {\n            if (child.isTextNode()) {\n                el.appendChild(doc.createTextNode(child.getText()));\n            } else {\n                el.appendChild(child.render(domRenderer));\n            }\n        }\n    }\n};\n\nfunction addChildren({ el, name, props, children, doc, domRenderer } : AddChildrenOptions) {\n    if (props.hasOwnProperty(ELEMENT_PROP.INNER_HTML)) {\n\n        if (children.length >= 1) {\n            throw new Error(`Expected no children to be passed when ${ ELEMENT_PROP.INNER_HTML } prop is set`);\n        }\n\n        const html = props[ELEMENT_PROP.INNER_HTML];\n\n        if (typeof html !== 'string') {\n            throw new TypeError(`${ ELEMENT_PROP.INNER_HTML } prop must be string`);\n        }\n\n        if (name === ELEMENT_TAG.SCRIPT) {\n            // $FlowFixMe\n            el.text = html;\n        } else {\n            el.innerHTML = html;\n            fixScripts(el, doc);\n        }\n\n    } else {\n        const addChildrenToElement = ADD_CHILDREN[name] || ADD_CHILDREN[ELEMENT_TAG.DEFAULT];\n        addChildrenToElement({ el, name, props, children, doc, domRenderer });\n    }\n}\n\n\nexport const dom : NodeRendererFactory<HTMLElement> = ({ doc = document } : { doc? : Document } = {}) => {\n    const domRenderer = (name, props, children) => {\n        const el = createElement({ name, props, doc });\n        addProps({ el, props });\n        addChildren({ el, name, props, children, doc, domRenderer });\n        return el;\n    };\n\n    return domRenderer;\n};\n","/* @flow */\n/* @jsx node */\n/* eslint react/react-in-jsx-scope: off */\n\nimport { node, dom } from 'jsx-pragmatic/src';\nimport { destroyElement } from 'belter/src';\n\nimport { type RenderOptionsType } from '../../parent';\nimport { EVENT } from '../../constants';\n\nconst CLASS = {\n    VISIBLE:   'visible',\n    INVISIBLE: 'invisible'\n};\n\nexport function defaultContainerTemplate<P>({ uid, frame, prerenderFrame, doc, event, dimensions : { width, height } } : RenderOptionsType<P>) : ?HTMLElement {\n    if (__ZOID__.__DEFAULT_CONTAINER__) {\n        if (!frame || !prerenderFrame) {\n            return;\n        }\n    \n        prerenderFrame.classList.add(CLASS.VISIBLE);\n        frame.classList.add(CLASS.INVISIBLE);\n    \n        event.on(EVENT.RENDERED, () => {\n            prerenderFrame.classList.remove(CLASS.VISIBLE);\n            prerenderFrame.classList.add(CLASS.INVISIBLE);\n    \n            frame.classList.remove(CLASS.INVISIBLE);\n            frame.classList.add(CLASS.VISIBLE);\n    \n            setTimeout(() => {\n                destroyElement(prerenderFrame);\n            }, 1);\n        });\n    \n        return (\n            <div id={ uid }>\n                <style>\n                    {`\n                        #${ uid } {\n                            display: inline-block;\n                            position: relative;\n                            width: ${ width };\n                            height: ${ height };\n                        }\n    \n                        #${ uid } > iframe {\n                            display: inline-block;\n                            position: absolute;\n                            width: 100%;\n                            height: 100%;\n                            top: 0;\n                            left: 0;\n                            transition: opacity .2s ease-in-out;\n                        }\n    \n                        #${ uid } > iframe.${ CLASS.INVISIBLE } {\n                            opacity: 0;\n                        }\n    \n                        #${ uid } > iframe.${ CLASS.VISIBLE } {\n                            opacity: 1;\n                        }\n                    `}\n                </style>\n    \n                <node el={ frame } />\n                <node el={ prerenderFrame } />\n            </div>\n        ).render(dom({ doc }));\n    }\n}\n","/* @flow */\n/** @jsx node */\n/* eslint react/react-in-jsx-scope: off */\n\nimport { node, dom } from 'jsx-pragmatic/src';\n\nimport { type RenderOptionsType } from '../../parent';\n\nexport function defaultPrerenderTemplate<P>({ doc } : RenderOptionsType<P>) : ?HTMLElement {\n    if (__ZOID__.__DEFAULT_PRERENDER__) {\n        return (\n            <html>\n                <body>\n                    <style>\n                        {`\n                            .spinner {\n                                position: fixed;\n                                max-height: 60vmin;\n                                max-width: 60vmin;\n                                height: 40px;\n                                width: 40px;\n                                top: 50%;\n                                left: 50%;\n                                box-sizing: border-box;\n                                border: 3px solid rgba(0, 0, 0, .2);\n                                border-top-color: rgba(33, 128, 192, 0.8);\n                                border-radius: 100%;\n                                animation: rotation .7s infinite linear;\n                            }\n    \n                            @keyframes rotation {\n                                from {\n                                    transform: translateX(-50%) translateY(-50%) rotate(0deg);\n                                }\n                                to {\n                                    transform: translateX(-50%) translateY(-50%) rotate(359deg);\n                                }\n                            }\n                        `}\n                    </style>\n                    <div class=\"spinner\" />\n                </body>\n            </html>\n        ).render(dom({ doc }));\n    }\n}\n","/* @flow */\n\nimport { ZalgoPromise } from 'zalgo-promise/src';\nimport { once, noop } from 'belter/src';\nimport { isWindow, type CrossDomainWindowType } from 'cross-domain-utils/src';\nimport { ProxyWindow, toProxyWindow } from 'post-robot/src';\n\nimport { PROP_SERIALIZATION } from '../constants';\n\nexport type EventHandlerType<T> = (T) => void | ZalgoPromise<void>;\n\nexport type timeoutPropType = number;\nexport type windowPropType = CrossDomainWindowType | ProxyWindow;\nexport type closePropType = () => ZalgoPromise<void>;\nexport type focusPropType = () => ZalgoPromise<void>;\nexport type resizePropType = ({ width : ?number, height : ?number }) => ZalgoPromise<void>;\n\nexport type onDisplayPropType = EventHandlerType<void>;\nexport type onRenderedPropType = EventHandlerType<void>;\nexport type onRenderPropType = EventHandlerType<void>;\nexport type onClosePropType = EventHandlerType<void>;\nexport type onErrorPropType = EventHandlerType<mixed>;\nexport type onPropsPropType<P> = ((PropsType<P>) => void) => void; // eslint-disable-line no-use-before-define\n\nexport type PropsInputType<P> = {\n    timeout? : timeoutPropType,\n    window? : windowPropType,\n\n    onDisplay? : onDisplayPropType,\n    onRendered? : onRenderedPropType,\n    onRender? : onRenderPropType,\n    onClose? : onClosePropType,\n    onError? : onErrorPropType,\n    onProps? : onPropsPropType<P>\n} & P;\n\nexport type PropsType<P> = {|\n    timeout? : timeoutPropType,\n    window? : ?windowPropType,\n    close? : ?closePropType,\n    focus? : ?focusPropType,\n    resize? : ?resizePropType,\n\n    onDisplay : onDisplayPropType,\n    onRendered : onRenderedPropType,\n    onRender : onRenderPropType,\n    onClose : onClosePropType,\n    onError : onErrorPropType,\n    onProps : onPropsPropType<P>\n|} & P;\n\ntype PropDefinitionType<T, P, S : string> = {|\n    type : S,\n    alias? : string,\n    value? : ({ props : P, state : Object, close : () => ZalgoPromise<void>, focus : () => ZalgoPromise<void>, onError : (mixed) => ZalgoPromise<void> }) => ?T,\n    required? : boolean,\n    queryParam? : boolean | string | ({ value : T }) => (string | ZalgoPromise<string>),\n    queryValue? : ({ value : T }) => (ZalgoPromise<mixed> | mixed),\n    sendToChild? : boolean,\n    allowDelegate? : boolean,\n    validate? : ({ value : T, props : PropsInputType<P> }) => void,\n    decorate? : ({ value : T, props : PropsType<P>, state : Object, close : () => ZalgoPromise<void>, focus : () => ZalgoPromise<void>, onError : (mixed) => ZalgoPromise<void> }) => T,\n    default? : ({ props : P, state : Object }) => ?T,\n    sameDomain? : boolean,\n    serialization? : $Values<typeof PROP_SERIALIZATION>,\n    childDecorate? : ({ value : T, close : () => ZalgoPromise<void>, focus : () => ZalgoPromise<void>, onError : (mixed) => ZalgoPromise<void>, onProps : ((PropsType<P>) => void) => void, resize : ({ width : ?number, height : ?number }) => ZalgoPromise<void> }) => ?T\n|};\n\nexport type BooleanPropDefinitionType<T : boolean, P> = PropDefinitionType<T, P, 'boolean'>;\nexport type StringPropDefinitionType<T : string, P> = PropDefinitionType<T, P, 'string'>;\nexport type NumberPropDefinitionType<T : number, P> = PropDefinitionType<T, P, 'number'>;\nexport type FunctionPropDefinitionType<T : Function, P> = PropDefinitionType<T, P, 'function'>;\nexport type ArrayPropDefinitionType<T : Array<*>, P> = PropDefinitionType<T, P, 'array'>; // eslint-disable-line flowtype/no-mutable-array\nexport type ObjectPropDefinitionType<T : Object, P> = PropDefinitionType<T, P, 'object'>;\n\nexport type MixedPropDefinitionType<P> = BooleanPropDefinitionType<*, P> | StringPropDefinitionType<*, P> | NumberPropDefinitionType<*, P> | FunctionPropDefinitionType<*, P> | ObjectPropDefinitionType<*, P> | ArrayPropDefinitionType<*, P>;\n\nexport type UserPropsDefinitionType<P> = {\n    [string] : MixedPropDefinitionType<P>\n};\n\n// eslint-disable-next-line flowtype/require-exact-type\nexport type BuiltInPropsDefinitionType<P> = {\n    timeout : NumberPropDefinitionType<timeoutPropType, P>,\n    window : ObjectPropDefinitionType<windowPropType, P>,\n    close : FunctionPropDefinitionType<closePropType, P>,\n    focus : FunctionPropDefinitionType<focusPropType, P>,\n    resize : FunctionPropDefinitionType<resizePropType, P>,\n\n    onDisplay : FunctionPropDefinitionType<onDisplayPropType, P>,\n    onRendered : FunctionPropDefinitionType<onRenderedPropType, P>,\n    onRender : FunctionPropDefinitionType<onRenderPropType, P>,\n    onClose : FunctionPropDefinitionType<onClosePropType, P>,\n    onError : FunctionPropDefinitionType<onErrorPropType, P>,\n    onProps : FunctionPropDefinitionType<onPropsPropType<P>, P>\n};\n\nconst defaultNoop = () => noop;\nconst decorateOnce = ({ value }) => once(value);\n\nexport function getBuiltInProps<P>() : BuiltInPropsDefinitionType<P> {\n    return {\n        window: {\n            type:          'object',\n            sendToChild:   false,\n            required:      false,\n            allowDelegate: true,\n            validate({ value } : { value : CrossDomainWindowType | ProxyWindow }) {\n                if (!isWindow(value) && !ProxyWindow.isProxyWindow(value)) {\n                    throw new Error(`Expected Window or ProxyWindow`);\n                }\n            },\n            decorate({ value } : { value : CrossDomainWindowType | ProxyWindow }) : ProxyWindow {\n                return toProxyWindow(value);\n            }\n        },\n\n        timeout: {\n            type:        'number',\n            required:    false,\n            sendToChild: false\n        },\n\n        close: {\n            type:          'function',\n            required:      false,\n            sendToChild:   false,\n            childDecorate: ({ close }) => close\n        },\n\n        focus: {\n            type:          'function',\n            required:      false,\n            sendToChild:   false,\n            childDecorate: ({ focus }) => focus\n        },\n\n        resize: {\n            type:          'function',\n            required:      false,\n            sendToChild:   false,\n            childDecorate: ({ resize }) => resize\n        },\n\n        getParent: {\n            type:          'function',\n            required:      false,\n            sendToChild:   false,\n            childDecorate: ({ getParent }) => getParent\n        },\n\n        onDisplay: {\n            type:          'function',\n            required:      false,\n            sendToChild:   false,\n            allowDelegate: true,\n            default:       defaultNoop,\n            decorate:      decorateOnce\n        },\n\n        onRendered: {\n            type:        'function',\n            required:    false,\n            sendToChild: false,\n            default:     defaultNoop,\n            decorate:    decorateOnce\n        },\n\n        onRender: {\n            type:        'function',\n            required:    false,\n            sendToChild: false,\n            default:     defaultNoop,\n            decorate:    decorateOnce\n        },\n\n        onClose: {\n            type:          'function',\n            required:      false,\n            sendToChild:   false,\n            allowDelegate: true,\n            default:       defaultNoop,\n            decorate:      decorateOnce\n        },\n\n        onError: {\n            type:          'function',\n            required:      false,\n            sendToChild:   false,\n            childDecorate: ({ onError }) => onError\n        },\n\n        onProps: {\n            type:          'function',\n            required:      false,\n            sendToChild:   false,\n            default:       defaultNoop,\n            childDecorate: ({ onProps }) => onProps\n        }\n    };\n}\n","/* @flow */\n/* eslint max-lines: 0 */\n\nimport { on, send, bridge, toProxyWindow } from 'post-robot/src';\nimport { ZalgoPromise } from 'zalgo-promise/src';\nimport { isWindow, getDomainFromUrl, type CrossDomainWindowType, isSameTopWindow, getDomain, matchDomain, isSameDomain } from 'cross-domain-utils/src';\nimport { isRegex, noop, isElement } from 'belter/src';\n\nimport { ChildComponent, getChildPayload } from '../child';\nimport { ParentComponent, type RenderOptionsType, type ParentHelpers } from '../parent';\nimport { DelegateComponent } from '../delegate';\nimport { CONTEXT, POST_MESSAGE, WILDCARD, DEFAULT_DIMENSIONS } from '../constants';\nimport { react, angular, vue, angular2 } from '../drivers';\nimport type { CssDimensionsType, StringMatcherType } from '../types';\n\nimport { validate } from './validate';\nimport { defaultContainerTemplate, defaultPrerenderTemplate } from './templates';\nimport { getBuiltInProps, type UserPropsDefinitionType, type BuiltInPropsDefinitionType, type PropsInputType, type PropsType, type MixedPropDefinitionType } from './props';\n\ntype LoggerPayload = { [string] : ?string };\n\n// eslint-disable-next-line flowtype/require-exact-type\ntype Logger = {\n    debug : (event : string, payload? : LoggerPayload) => void,\n    info : (event : string, payload? : LoggerPayload) => void,\n    warn : (event : string, payload? : LoggerPayload) => void,\n    error : (event : string, payload? : LoggerPayload) => void\n};\n\n/*  Component\n    ---------\n\n    This is the spec for the component. The idea is, when I call zoid.create(), it will create a new instance\n    of Component with the blueprint needed to set up ParentComponents and ChildComponents.\n\n    This is the one portion of code which is required by -- and shared to -- both the parent and child windows, and\n    contains all of the configuration needed for them to set themselves up.\n*/\n\nexport type ComponentOptionsType<P> = {|\n\n    tag : string,\n\n    url : string | ({ props : PropsType<P> }) => string,\n    domain? : string | RegExp,\n    bridgeUrl? : string,\n\n    props? : UserPropsDefinitionType<P>,\n\n    dimensions? : CssDimensionsType,\n    autoResize? : { width? : boolean, height? : boolean, element? : string },\n\n    allowedParentDomains? : StringMatcherType,\n\n    attributes? : {\n        iframe? : { [string] : string },\n        popup? : { [string] : string }\n    },\n\n    defaultContext? : $Values<typeof CONTEXT>,\n\n    containerTemplate? : (RenderOptionsType<P>) => ?HTMLElement,\n    prerenderTemplate? : (RenderOptionsType<P>) => ?HTMLElement,\n\n    validate? : ({ props : PropsInputType<P> }) => void,\n\n    logger? : Logger\n|};\n\ntype ZoidRenderer = {|\n    render : (container? : string | HTMLElement, context? : $Values<typeof CONTEXT>) => ZalgoPromise<void>,\n    renderTo : (target : CrossDomainWindowType, container? : string, context? : $Values<typeof CONTEXT>) => ZalgoPromise<void>\n|};\n\nexport type ZoidComponentInstance<P> = {| ...ParentHelpers<P>, ...ZoidRenderer |};\n\nexport type ZoidComponent<P> = {|\n    (PropsInputType<P>) : ZoidComponentInstance<P>,\n    driver : (string, mixed) => mixed,\n    isChild : () => boolean,\n    xprops? : PropsType<P>,\n    canRenderTo : (CrossDomainWindowType) => ZalgoPromise<boolean>\n|};\n\nexport class Component<P> {\n\n    tag : string\n    name : string\n    \n    url : string | ({ props : PropsType<P> }) => string\n    domain : void | string | RegExp\n    bridgeUrl : void | string\n\n    props : UserPropsDefinitionType<P>\n    builtinProps : BuiltInPropsDefinitionType<P>\n\n    dimensions : CssDimensionsType\n    autoResize : void | { width? : boolean, height? : boolean, element? : string }\n\n    allowedParentDomains : StringMatcherType\n\n    defaultContext : $Values<typeof CONTEXT>\n    \n    attributes : {\n        iframe? : { [string] : string },\n        popup? : { [string] : string }\n    }\n\n    containerTemplate : (RenderOptionsType<P>) => ?HTMLElement\n    prerenderTemplate : ?(RenderOptionsType<P>) => ?HTMLElement\n\n    validate : void | ({ props : PropsInputType<P> }) => void\n\n    driverCache : { [string] : mixed }\n\n    xprops : ?PropsType<P>\n\n    logger : Logger\n\n    propNames : $ReadOnlyArray<string>\n\n    constructor(options : ComponentOptionsType<P>) {\n        validate(options);\n\n        // The tag name of the component. Used by some drivers (e.g. angular) to turn the component into an html element,\n        // e.g. <my-component>\n\n        this.tag = options.tag;\n        this.name = this.tag.replace(/-/g, '_');\n\n        this.allowedParentDomains = options.allowedParentDomains || WILDCARD;\n\n        if (Component.components[this.tag]) {\n            throw new Error(`Can not register multiple components with the same tag: ${ this.tag }`);\n        }\n\n        // A json based spec describing what kind of props the component accepts. This is used to validate any props before\n        // they are passed down to the child.\n\n        this.builtinProps = getBuiltInProps();\n        this.props = options.props || {};\n\n        // The dimensions of the component, e.g. { width: '300px', height: '150px' }\n\n        const { width = DEFAULT_DIMENSIONS.WIDTH, height = DEFAULT_DIMENSIONS.HEIGHT } = options.dimensions || {};\n        this.dimensions = { width, height };\n\n        this.url = options.url;\n        this.domain = options.domain;\n        this.bridgeUrl = options.bridgeUrl;\n\n        this.attributes = options.attributes || {};\n        this.attributes.iframe = this.attributes.iframe || {};\n        this.attributes.popup = this.attributes.popup || {};\n\n        this.defaultContext = options.defaultContext || CONTEXT.IFRAME;\n\n        this.autoResize = options.autoResize;\n\n        if (options.containerTemplate) {\n            this.containerTemplate = options.containerTemplate;\n        } else if (__ZOID__.__DEFAULT_CONTAINER__) {\n            this.containerTemplate = defaultContainerTemplate;\n        }\n\n        if (options.prerenderTemplate) {\n            this.prerenderTemplate = options.prerenderTemplate;\n        } else if (__ZOID__.__DEFAULT_PRERENDER__) {\n            this.prerenderTemplate = defaultPrerenderTemplate;\n        }\n\n        this.validate = options.validate;\n\n        this.logger = options.logger || {\n            debug: noop,\n            info:  noop,\n            warn:  noop,\n            error: noop\n        };\n\n        this.registerChild();\n        this.listenDelegate();\n\n        Component.components[this.tag] = this;\n    }\n\n    getPropNames() : $ReadOnlyArray<string> {\n        if (this.propNames) {\n            return this.propNames;\n        }\n\n        const propNames = Object.keys(this.props);\n        for (const key of Object.keys(this.builtinProps)) {\n            if (propNames.indexOf(key) === -1) {\n                propNames.push(key);\n            }\n        }\n\n        this.propNames = propNames;\n        return propNames;\n    }\n\n    // $FlowFixMe\n    getPropDefinition(name : string) : MixedPropDefinitionType<P> {\n        // $FlowFixMe\n        return this.props[name] || this.builtinProps[name];\n    }\n\n    driver(name : string, dep : mixed) : mixed {\n        if (__ZOID__.__FRAMEWORK_SUPPORT__) {\n            const drivers = { react, angular, vue, angular2 };\n\n            if (!drivers[name]) {\n                throw new Error(`Could not find driver for framework: ${ name }`);\n            }\n    \n            this.driverCache = this.driverCache || {};\n    \n            if (!this.driverCache[name]) {\n                this.driverCache[name] = drivers[name].register(this, dep);\n            }\n    \n            return this.driverCache[name];\n        } else {\n            throw new Error(`Driver support not enabled`);\n        }\n    }\n\n    registerChild() {\n        if (this.isChild()) {\n            if (window.xprops) {\n                throw new Error(`Can not register ${ this.name } as child - can not attach multiple components to the same window`);\n            }\n\n            const child = new ChildComponent(this);\n            window.xprops = this.xprops = child.getProps();\n        }\n    }\n\n    listenDelegate() {\n        on(`${ POST_MESSAGE.ALLOW_DELEGATE }_${ this.name }`, () => {\n            return true;\n        });\n\n        on(`${ POST_MESSAGE.DELEGATE }_${ this.name }`, ({ source, data: { context, props, overrides } }) => {\n            const delegate = new DelegateComponent(this, source, { context, props, overrides });\n            return delegate.getDelegate();\n        });\n    }\n\n    canRenderTo(win : CrossDomainWindowType) : ZalgoPromise<boolean> {\n        return send(win, `${ POST_MESSAGE.ALLOW_DELEGATE }_${ this.name }`).then(({ data }) => {\n            return data;\n        }).catch(() => {\n            return false;\n        });\n    }\n\n    getUrl(props : PropsType<P>) : string {\n        if (typeof this.url === 'function') {\n            return this.url({ props });\n        }\n\n        return this.url;\n    }\n\n    getInitialDomain(props : PropsType<P>) : string {\n        if (this.domain && typeof this.domain === 'string') {\n            return this.domain;\n        }\n\n        return getDomainFromUrl(this.getUrl(props));\n    }\n\n    getDomain(props : PropsType<P>) : string | RegExp {\n        if (isRegex(this.domain)) {\n            // $FlowFixMe\n            return this.domain;\n        }\n\n        return this.getInitialDomain(props);\n    }\n\n    getBridgeUrl() : ?string {\n        if (this.bridgeUrl) {\n            return this.bridgeUrl;\n        }\n    }\n\n    isChild() : boolean {\n        const payload = getChildPayload();\n        return Boolean(payload && payload.tag === this.tag);\n    }\n\n    getDefaultContainer<T : (string | HTMLElement)>(context : $Values<typeof CONTEXT>, container? : T) : T {\n        if (container) {\n            if (typeof container !== 'string' && !isElement(container)) {\n                throw new TypeError(`Expected string or element selector to be passed`);\n            }\n\n            return container;\n        }\n\n        if (context === CONTEXT.POPUP) {\n            // $FlowFixMe\n            return 'body';\n        }\n\n        throw new Error(`Expected element to be passed to render iframe`);\n    }\n\n    getDefaultContext(context : ?$Values<typeof CONTEXT>, props : PropsInputType<P>) : $Values<typeof CONTEXT> {\n        if (props.window) {\n            return toProxyWindow(props.window).getType();\n        }\n\n        if (context) {\n            if (context !== CONTEXT.IFRAME && context !== CONTEXT.POPUP) {\n                throw new Error(`Unrecognized context: ${ context }`);\n            }\n            \n            return context;\n        }\n\n        return this.defaultContext;\n    }\n\n    init(props : PropsInputType<P>) : ZoidComponentInstance<P> {\n\n        // $FlowFixMe\n        props = props || {};\n        \n        const parent = new ParentComponent(this, props);\n\n        const render = (target, container, context) => ZalgoPromise.try(() => {\n            if (!isWindow(target)) {\n                throw new Error(`Must pass window to renderTo`);\n            }\n\n            context = this.getDefaultContext(context, props);\n            container = this.getDefaultContainer(context, container);\n            return parent.render(target, container, context);\n        });\n\n        return {\n            ...parent.getHelpers(),\n            render:   (container, context) => render(window, container, context),\n            renderTo: (target, container, context) => render(target, container, context)\n        };\n    }\n\n    checkAllowRender(target : CrossDomainWindowType, domain : string | RegExp, container : string | HTMLElement) {\n        if (target === window) {\n            return;\n        }\n\n        if (!isSameTopWindow(window, target)) {\n            throw new Error(`Can only renderTo an adjacent frame`);\n        }\n\n        const origin = getDomain();\n\n        if (!matchDomain(domain, origin) && !isSameDomain(target)) {\n            throw new Error(`Can not render remotely to ${ domain.toString() } - can only render to ${ origin }`);\n        }\n\n        if (container && typeof container !== 'string') {\n            throw new Error(`Container passed to renderTo must be a string selector, got ${ typeof container } }`);\n        }\n    }\n\n    log(event : string, payload? : LoggerPayload) {\n        this.logger.info(`${ this.name }_${ event }`, payload);\n    }\n\n    static components : { [string] : Component<*> } = {}\n    static activeComponents : Array<ParentComponent<*> | DelegateComponent<*>> = [] // eslint-disable-line flowtype/no-mutable-array\n\n    registerActiveComponent<Q>(instance : ParentComponent<Q> | DelegateComponent<Q>) {\n        Component.activeComponents.push(instance);\n    }\n\n    destroyActiveComponent<Q>(instance : ParentComponent<Q> | DelegateComponent<Q>) {\n        Component.activeComponents.splice(Component.activeComponents.indexOf(instance), 1);\n    }\n\n    static destroyAll() : ZalgoPromise<void> {\n        if (bridge) {\n            bridge.destroyBridges();\n        }\n\n        const results = [];\n\n        while (Component.activeComponents.length) {\n            results.push(Component.activeComponents[0].destroy());\n        }\n\n        return ZalgoPromise.all(results).then(noop);\n    }\n}\n\nexport type ComponentDriverType<P, T : mixed> = {|\n    register : (Component<P>, T) => mixed\n|};\n\nexport function create<P>(options : ComponentOptionsType<P>) : ZoidComponent<P> {\n    const component : Component<P> = new Component(options);\n\n    const init = (props) => component.init(props);\n    init.driver = (name, dep) => component.driver(name, dep);\n    init.isChild = () => component.isChild();\n    init.canRenderTo = (win) => component.canRenderTo(win);\n    init.xprops = component.xprops;\n\n    // $FlowFixMe\n    return init;\n}\n\nexport function destroyAll() : ZalgoPromise<void> {\n    return Component.destroyAll();\n}\n","/* @flow */\n\nimport { isPerc, isPx, values } from 'belter/src';\n\nimport { CONTEXT, PROP_TYPE } from '../constants';\n\nimport type { ComponentOptionsType } from './index';\n\nfunction validatePropDefinitions<P>(options : ComponentOptionsType<P>) {\n\n    if (options.props && !(typeof options.props === 'object')) {\n        throw new Error(`Expected options.props to be an object`);\n    }\n\n    const PROP_TYPE_LIST = values(PROP_TYPE);\n\n    if (options.props) {\n        for (const key of Object.keys(options.props)) {\n\n            // $FlowFixMe\n            const prop = options.props[key];\n\n            if (!prop || !(typeof prop === 'object')) {\n                throw new Error(`Expected options.props.${ key } to be an object`);\n            }\n\n            if (!prop.type) {\n                throw new Error(`Expected prop.type`);\n            }\n\n            if (PROP_TYPE_LIST.indexOf(prop.type) === -1) {\n                throw new Error(`Expected prop.type to be one of ${ PROP_TYPE_LIST.join(', ') }`);\n            }\n\n            if (prop.required && prop.default) {\n                throw new Error(`Required prop can not have a default value`);\n            }\n\n            if (prop.type === PROP_TYPE.FUNCTION && prop.queryParam && !prop.queryValue) {\n                throw new Error(`Do not pass queryParam for function prop`);\n            }\n        }\n    }\n}\n\n// eslint-disable-next-line complexity\nexport function validate<P>(options : ?ComponentOptionsType<P>) { // eslint-ignore-line\n\n    if (!options) {\n        throw new Error(`Expected options to be passed`);\n    }\n\n    // eslint-disable-next-line security/detect-unsafe-regex, unicorn/no-unsafe-regex\n    if (!options.tag || !options.tag.match(/^([a-z0-9]+-)+[a-z0-9]+$/)) {\n        throw new Error(`Invalid options.tag: ${ options.tag }`);\n    }\n\n    validatePropDefinitions(options);\n\n    if (options.dimensions) {\n        if (options.dimensions && !isPx(options.dimensions.width) && !isPerc(options.dimensions.width)) {\n            throw new Error(`Expected options.dimensions.width to be a px or % string value`);\n        }\n\n        if (options.dimensions && !isPx(options.dimensions.height) && !isPerc(options.dimensions.height)) {\n            throw new Error(`Expected options.dimensions.height to be a px or % string value`);\n        }\n    }\n\n    if (options.defaultContext) {\n        if (options.defaultContext !== CONTEXT.IFRAME && options.defaultContext !== CONTEXT.POPUP) {\n            throw new Error(`Unsupported context type: ${ options.defaultContext || 'unknown' }`);\n        }\n    }\n\n    if (!options.url) {\n        throw new Error(`Must pass url`);\n    }\n\n    if (typeof options.url !== 'string' && typeof options.url !== 'function') {\n        throw new TypeError(`Expected url to be string or function`);\n    }\n\n    if (options.prerenderTemplate && typeof options.prerenderTemplate !== 'function') {\n        throw new Error(`Expected options.prerenderTemplate to be a function`);\n    }\n\n    if ((options.containerTemplate || !__ZOID__.__DEFAULT_CONTAINER__) && typeof options.containerTemplate !== 'function') {\n        throw new Error(`Expected options.containerTemplate to be a function`);\n    }\n}\n","/* @flow */\n\nexport { PopupOpenError } from 'belter/src';\nexport { create, destroyAll, Component } from './component';\nexport type { ZoidComponent, ZoidComponentInstance } from './component';\nexport type { RenderOptionsType } from './parent';\nexport { PROP_TYPE, PROP_SERIALIZATION, CONTEXT, EVENT } from './constants';\n"],"sourceRoot":""}