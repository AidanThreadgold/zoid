{"version":3,"sources":["webpack://zoid/webpack/universalModuleDefinition","webpack://zoid/webpack/bootstrap","webpack://zoid/./node_modules/belter/src/index.js","webpack://zoid/./node_modules/zalgo-promise/src/utils.js","webpack://zoid/./node_modules/zalgo-promise/src/global.js","webpack://zoid/./node_modules/zalgo-promise/src/promise.js","webpack://zoid/./node_modules/zalgo-promise/src/exceptions.js","webpack://zoid/./node_modules/zalgo-promise/src/index.js","webpack://zoid/./node_modules/cross-domain-utils/src/index.js","webpack://zoid/./src/constants.js","webpack://zoid/./node_modules/belter/src/util.js","webpack://zoid/./node_modules/@babel/runtime/helpers/esm/extends.js","webpack://zoid/./node_modules/cross-domain-utils/src/constants.js","webpack://zoid/./node_modules/cross-domain-safe-weakmap/src/util.js","webpack://zoid/./node_modules/cross-domain-safe-weakmap/src/weakmap.js","webpack://zoid/./node_modules/cross-domain-safe-weakmap/src/native.js","webpack://zoid/./node_modules/cross-domain-safe-weakmap/src/index.js","webpack://zoid/./node_modules/@babel/runtime/helpers/esm/inheritsLoose.js","webpack://zoid/./node_modules/belter/src/device.js","webpack://zoid/./node_modules/belter/src/storage.js","webpack://zoid/./node_modules/belter/src/dom.js","webpack://zoid/./node_modules/belter/src/experiment.js","webpack://zoid/./node_modules/belter/src/global.js","webpack://zoid/./node_modules/belter/src/http.js","webpack://zoid/./node_modules/belter/src/decorators.js","webpack://zoid/./node_modules/belter/src/css.js","webpack://zoid/./node_modules/belter/src/test.js","webpack://zoid/./node_modules/cross-domain-utils/src/util.js","webpack://zoid/./node_modules/cross-domain-utils/src/utils.js","webpack://zoid/./node_modules/@babel/runtime/helpers/esm/applyDecoratedDescriptor.js","webpack://zoid/./node_modules/post-robot/src/conf/constants.js","webpack://zoid/./node_modules/post-robot/src/conf/config.js","webpack://zoid/./node_modules/post-robot/src/global.js","webpack://zoid/./node_modules/post-robot/src/lib/hello.js","webpack://zoid/./node_modules/post-robot/src/lib/windows.js","webpack://zoid/./node_modules/universal-serialize/src/constants.js","webpack://zoid/./node_modules/universal-serialize/src/common.js","webpack://zoid/./node_modules/universal-serialize/src/serialize.js","webpack://zoid/./node_modules/universal-serialize/src/serializers/function.js","webpack://zoid/./node_modules/universal-serialize/src/serializers/error.js","webpack://zoid/./node_modules/universal-serialize/src/serializers/promise.js","webpack://zoid/./node_modules/universal-serialize/src/serializers/regex.js","webpack://zoid/./node_modules/universal-serialize/src/serializers/date.js","webpack://zoid/./node_modules/universal-serialize/src/serializers/array.js","webpack://zoid/./node_modules/universal-serialize/src/serializers/object.js","webpack://zoid/./node_modules/universal-serialize/src/serializers/string.js","webpack://zoid/./node_modules/universal-serialize/src/serializers/number.js","webpack://zoid/./node_modules/universal-serialize/src/serializers/boolean.js","webpack://zoid/./node_modules/universal-serialize/src/serializers/null.js","webpack://zoid/./node_modules/universal-serialize/src/deserialize.js","webpack://zoid/./node_modules/post-robot/src/serialize/window.js","webpack://zoid/./node_modules/post-robot/src/serialize/function.js","webpack://zoid/./node_modules/post-robot/src/serialize/serialize.js","webpack://zoid/./node_modules/post-robot/src/serialize/promise.js","webpack://zoid/./node_modules/post-robot/src/drivers/send/strategies.js","webpack://zoid/./node_modules/post-robot/src/lib/compat.js","webpack://zoid/./node_modules/post-robot/src/drivers/send/index.js","webpack://zoid/./node_modules/post-robot/src/drivers/listeners.js","webpack://zoid/./node_modules/post-robot/src/drivers/receive/types.js","webpack://zoid/./node_modules/post-robot/src/drivers/receive/index.js","webpack://zoid/./node_modules/post-robot/src/public/client.js","webpack://zoid/./node_modules/post-robot/src/public/server.js","webpack://zoid/./node_modules/post-robot/src/public/config.js","webpack://zoid/./node_modules/post-robot/src/public/index.js","webpack://zoid/./node_modules/post-robot/src/clean.js","webpack://zoid/./node_modules/post-robot/src/interface.js","webpack://zoid/./node_modules/post-robot/src/index.js","webpack://zoid/./src/lib/global.js","webpack://zoid/./src/lib/window.js","webpack://zoid/./src/child/props.js","webpack://zoid/./src/child/index.js","webpack://zoid/./src/parent/drivers.js","webpack://zoid/./src/parent/index.js","webpack://zoid/./src/parent/props.js","webpack://zoid/./src/delegate/index.js","webpack://zoid/./node_modules/jsx-pragmatic/src/node.js","webpack://zoid/./node_modules/jsx-pragmatic/src/renderers/dom.js","webpack://zoid/./src/component/templates/container.jsx","webpack://zoid/./src/component/templates/component.jsx","webpack://zoid/./src/component/component.js","webpack://zoid/./src/component/validate.js","webpack://zoid/./src/component/props.js","webpack://zoid/./src/index.js","webpack://zoid/./src/drivers/react.js","webpack://zoid/./src/drivers/vue.js","webpack://zoid/./src/drivers/angular.js","webpack://zoid/./src/drivers/angular2.js","webpack://zoid/./src/drivers/index.js"],"names":["root","factory","exports","module","define","amd","self","this","installedModules","__webpack_require__","moduleId","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","_dom__WEBPACK_IMPORTED_MODULE_1__","__webpack_exports__","_util__WEBPACK_IMPORTED_MODULE_5__","_types__WEBPACK_IMPORTED_MODULE_7__","_decorators__WEBPACK_IMPORTED_MODULE_8__","_css__WEBPACK_IMPORTED_MODULE_9__","isPromise","item","Promise","window","Window","constructor","toString","then","err","getGlobal","glob","global","TypeError","zalgoGlobal","__zalgopromise__","flushPromises","activeCount","possiblyUnhandledPromiseHandlers","dispatchedErrors","ZalgoPromise","handler","_this","resolved","rejected","errorHandled","error","handlers","dispatching","stack","result","isAsync","res","resolve","reject","_proto","Error","dispatch","_this2","setTimeout","promise","indexOf","push","j","length","dispatchPossiblyUnhandledError","asyncReject","_this3","_loop","_handlers$i","onSuccess","onError","flushQueue","catch","undefined","finally","onFinally","try","timeout","time","_this4","clearTimeout","toPromise","all","promises","count","results","_loop2","prom","hash","keys","map","items","method","onPossiblyUnhandledException","cancel","splice","context","args","apply","delay","flush","promisesToFlush","_i2","promise_ZalgoPromise","_utils__WEBPACK_IMPORTED_MODULE_0__","_types__WEBPACK_IMPORTED_MODULE_1__","_constants__WEBPACK_IMPORTED_MODULE_2__","ZOID","__ZOID__","POST_MESSAGE","PROP_TYPE","INITIAL_PROPS","WINDOW_REFERENCES","PROP_SERIALIZATION","CONTEXT","CLASS","WILDCARD","DEFAULT_DIMENSIONS","cross_domain_utils_src__WEBPACK_IMPORTED_MODULE_0__","DELEGATE","ALLOW_DELEGATE","STRING","OBJECT","FUNCTION","BOOLEAN","NUMBER","ARRAY","RAW","UID","OPENER","TOP","PARENT","GLOBAL","JSON","DOTIFY","BASE64","WINDOW_TYPE","OUTLET","COMPONENT_FRAME","PRERENDER_FRAME","VISIBLE","INVISIBLE","WIDTH","HEIGHT","base64encode","base64decode","uniqueID","memoize","memoizePromise","promisify","inlineMemoize","noop","once","stringifyError","stringify","extend","values","safeInterval","dotify","dasherizeToCamel","capitalizeFirstLetter","replaceObject","isDefined","isRegex","weakMapMemoizePromise","getOrSet","cleanup","tryCatch","removeFromArray","objectIDs","zalgo_promise_src__WEBPACK_IMPORTED_MODULE_0__","cross_domain_safe_weakmap_src__WEBPACK_IMPORTED_MODULE_1__","str","btoa","Buffer","from","atob","chars","replace","charAt","Math","floor","random","Date","toISOString","slice","toLowerCase","__GLOBAL__","serializeArgs","Array","subkey","val","obj","WeakMap","uid","set","getObjectID","options","cacheMap","memoizedFunction","_len","arguments","_key","cache","thisNamespace","cacheTime","now","reset","delete","displayName","memoizedPromiseFunction","_len2","_key2","promisifiedFunction","logic","__inline_memoize_cache__","called","level","message","newErr","source","assign","loop","prefix","newobj","isArray","every","join","string","g","toUpperCase","defineLazyProp","configurable","isObjectObject","isPlainObject","replacer","fullKey","itemKey","el","child","weakmap","arg","_this5","tasks","cleaned","register","task","pop","fn","arr","index","_extends","target","PROTOCOL","MOCK","FILE","ABOUT","IFRAME","POPUP","safeIndexOf","collection","counter","CrossDomainSafeWeakMap","freeze","testWeakMap","testKey","hasNativeWeakMap","_cleanupClosedWindows","isWindow","isWindowClosed","isSafeToReadWrite","entry","writable","has","weakmap_CrossDomainSafeWeakMap","_inheritsLoose","subClass","superClass","__proto__","isDevice","navigator","mockUserAgent","userAgent","match","getStorage","_util__WEBPACK_IMPORTED_MODULE_0__","_ref","_ref$version","version","_ref$lifetime","lifetime","accessedStorage","STORAGE_KEY","getState","storage","localStorageEnabled","isLocalStorageEnabled","rawStorage","localStorage","getItem","parse","id","setItem","getSession","session","__session__","created","guid","getID","getSessionState","state","getSessionID","awaitFrameLoadPromises","isDocumentReady","Boolean","document","body","readyState","urlEncode","waitForDocumentReady","interval","setInterval","clearInterval","waitForDocumentBody","parseQuery","queryString","params","_queryString$split2","split","pair","decodeURIComponent","extendQuery","originalQuery","props","filter","formatQuery","esm_extends","extendUrl","url","originalUrl","originalHash","query","_url$split","_originalUrl$split","hashString","removeItem","appendChild","container","isElement","element","Element","nodeType","style","ownerDocument","getElementSafe","doc","querySelector","getElement","elementReady","PopupOpenError","writeElementToWindow","win","tag","tagName","documentElement","children","removeChild","awaitFrameLoad","frame","addEventListener","linkFrameWindow","contentWindow","awaitFrameWindow","loadedFrame","createElement","class","className","attributes","_i6","_Object$keys2","setAttribute","styleSheet","styleText","cssText","createTextNode","setStyle","html","open","write","close","location","err2","writeToWindow","innerHTML","iframe","attempts","frameBorder","allowTransparency","backgroundColor","event","removeEventListener","destroyElement","parentNode","addClass","classList","add","removeClass","remove","isElementClosed","watchElementForClose","onResize","_temp","_ref2","_ref2$width","width","_ref2$height","height","_ref2$interval","_ref2$win","currentWidth","offsetWidth","currentHeight","offsetHeight","observer","check","newWidth","newHeight","ResizeObserver","observe","MutationObserver","childList","subtree","characterData","disconnect","memoized","descriptor","isPerc","isPx","toCSS","test","toPx","parseInt","toNum","getParent","getOpener","getActualDomain","getDomain","isBlankDomain","isActuallySameDomain","isSameDomain","assertSameDomain","getTop","getAllFramesInWindow","isTop","getUserAgent","getAncestor","isAncestor","getDistanceFromTop","getNthParentFromTop","isSameTopWindow","matchDomain","stringifyDomainPattern","getDomainFromUrl","onCloseWindow","normalizeMockUrl","IE_WIN_ACCESS_ERROR","isAboutProtocol","protocol","parent","opener","canReadFromWindow","href","host","domain","mockDomain","desc","getOwnPropertyDescriptor","isAncestorParent","childParent","getParents","getFrames","frames","len","getAllChildFrames","_i3","_getFrames2","_i5","_getAllChildFrames2","childFrame","top","_i7","_getAllChildFrames4","concat","iframeWindows","iframeFrames","allowMock","closed","mockclosed","iframeIndex","contains","isFrameWindowClosed","cleanIframes","actualParent","_i15","_getFrames8","anyMatch","collection1","collection2","_i17","item1","_i19","distance","getNthParent","win1","win2","top1","top2","allFrames1","allFrames2","opener1","opener2","pattern","origin","some","subpattern","callback","maxtime","Infinity","__cross_domain_utils_window_check__","_applyDecoratedDescriptor","decorators","forEach","initializer","reverse","reduce","decorator","MESSAGE_TYPE","REQUEST","RESPONSE","ACK","MESSAGE_NAME","METHOD","HELLO","OPEN_TUNNEL","WINDOW_PROP","POSTROBOT","SERIALIZATION_TYPE","CROSS_DOMAIN_ZALGO_PROMISE","CROSS_DOMAIN_FUNCTION","CROSS_DOMAIN_WINDOW","CONFIG","BRIDGE_TIMEOUT","CHILD_WINDOW_TIMEOUT","ACK_TIMEOUT","ACK_TIMEOUT_KNOWN","RES_TIMEOUT","ALLOWED_POST_MESSAGE_METHODS","_ALLOWED_POST_MESSAGE","winStore","windowStore","getObj","defStore","getStore","defVal","store","del","globalStore","storeKey","instanceID","helloPromises","getHelloPromise","listenForHello","on","sayHello","send","data","getWindowInstanceID","_ref3","knownWindows","markWindowKnown","TYPE","ERROR","PROMISE","REGEX","DATE","NULL","UNDEFINED","isSerializedType","__type__","determineType","serializeType","type","__val__","SERIALIZER","_SERIALIZER","code","toJSON","defaultSerializers","DESERIALIZER","_DESERIALIZER","RegExp","defaultDeserializers","winToProxyWindow","idToProxyWindow","cleanupProxyWindows","_idToProxyWindow$keys2","shouldClean","ProxyWindow","serializedWindow","actualWindow","isProxyWindow","actualWindowPromise","setWindow","getInstanceID","getType","isPopup","isIframe","setLocation","setName","frameElement","focus","isClosed","matchWindow","_this6","unwrap","awaitWindow","serialize","toProxyWindow","deserialize","methodStore","proxyWindowMethods","listeningForFunctions","listenForFunctionCalls","meth","proxy","serializeFunction","destination","serializeMessage","_serialize","serializers","serializer","serializePromise","deserializeMessage","_deserialize","deserializers","deserializer","serializedPromise","serializedFunction","innerWrapper","opts","crossDomainFunctionWrapper","fireAndForget","__name__","__xdomain__","deserializeFunction","SEND_MESSAGE_STRATEGIES","serializedMessage","dom","postMessage","foreignGlobal","receiveMessage","sendMessage","_serializeMessage","messages","strategyName","success","status","responseListeners","requestListeners","erroredResponseListeners","WINDOW_WILDCARD","__DOMAIN_REGEX__","getResponseListener","deleteResponseListener","isResponseListenerErrored","getRequestListener","winQualifier","nameListeners","domainListeners","_i4","_domainListeners$__DO2","_domainListeners$__DO3","regex","listener","RECEIVE_MESSAGE_TYPES","_RECEIVE_MESSAGE_TYPE","sendResponse","pathname","ack","handleError","respond","receivedMessages","parsedMessage","parseMessage","messageListener","messageEvent","sourceElement","originalEvent","requestPromises","request","targetWindow","getElementById","HTMLIFrameElement","hasResult","reqPromises","requestPromise","awaitWindowHello","_temp2","actualDomain","responseListener","addResponseListener","totalAckTimeout","isWindowKnown","totalResTimeout","ackTimeout","resTimeout","cycleTime","cycle","max","min","markResponseListenerErrored","sendToParent","client","listen","listenerOptions","errorHandler","requestListener","addRequestListener","_ref4","listenersCollection","_win2","_i8","_i10","_domain2","_i12","existingListener","regexListeners","regexListener","strDomain","onceFunction","errorOnClose","onceListener","disable","cleanUpWindow","_requestPromises$get2","bridge","initialized","openTunnelToOpener","initHello","INTERFACE","globalFor","localGlobal","parseChildWindowName","_window$name$split","zoidcomp","encodedPayload","isZoidComponentWindow","normalizeChildProp","component","helpers","prop","getPropDefinition","resize","onPropsChange","childDecorate","ChildComponent","_class","parentComponentWindow","onPropHandlers","autoResize","_parseChildWindowName","getWindowByRef","checkParentDomain","initialProps","getPropsByRef","setProps","watchForClose","init","buildExports","watchForResize","getHelpers","allowedParentDomains","ref","ancestor","_getAllFramesInWindow2","windows","getProps","isUpdate","existingProps","normalizedProps","sameDomain","alias","_component$getPropNam2","getPropNames","normalizeChildProps","_this$onPropHandlers2","checkClose","destroy","enableAutoResize","_ref3$width","_ref3$height","_ref3$element","getAutoResize","_ref4$width","_ref4$height","_ref4$element","_this4$getAutoResize","_ref5","updateProps","_ref6","RENDER_DRIVERS","renderedIntoContainer","callChildToClose","title","clean","detectClose","iframeWatcher","elementWatcher","openPrerender","prerenderIframe","prerenderFrameWindow","switchPrerender","delegate","ParentComponent","parent_class","driver","initPromise","errored","proxyWin","registerActiveComponent","destroyActiveComponent","render","log","initialDomain","getInitialDomain","checkAllowRender","buildUrl","onRender","watchForUnload","renderContainer","buildWindowName","setWindowName","windowName","prerender","onDisplay","openBridge","loadUrl","runTimeout","onRendered","childPayload","buildChildPayload","getPropsRef","getPropsForChild","propRef","_ref5$target","getWindowRef","buildParentExports","validate","instance","propNames","aliases","propDef","default","_Object$keys4","decorate","normalizeProps","_this$component$getPr2","required","propsDef","builtinProps","queryParam","getQueryParam","queryValue","getQueryValue","serialization","_Object$keys6","dotkey","getUrl","sendToChild","windowProp","_this7","_this8","_this9","_this$component$getPr4","propName","allowDelegate","overridesPromise","overrides","_ref7","_this$driver$delegate2","_this10","_arguments","_this11","closeWindowListener","onClose","_this12","unloadWindowListener","_this13","initChild","_this14","_this15","_ref8","_ref9","_this16","_this17","secondClosed","_this18","_ref10","_this19","prerenderWindow","renderTemplate","prerenderTemplate","_ref11","_ref11$width","_ref11$height","_ref11$element","_ref12","renderer","_ref13","_this20","outlet","dimensions","_ref14","_this21","containerTemplate","_this22","_this23","DelegateComponent","watchForSourceClose","getDelegate","getOverrides","closeSourceWindowListener","Node","isElementNode","isTextNode","isFragmentNode","ElementNode","_Node","inheritsLoose","_proto2","getTag","isTag","getText","TextNode","_Node2","text","_proto3","FragmentNode","_Node3","_proto4","normalizeChild","normalizeChildren","normalizedChild","_normalizedChild$chil2","subchild","node","DOM_EVENT","onBlur","onCancel","onClick","onContextMenu","onCopy","onCut","onAuxClick","onDoubleClick","onDragEnd","onDragStart","onDrop","onFocus","onInput","onInvalid","onKeyDown","onKeyPress","onKeyUp","onMouseDown","onMouseUp","onPaste","onPause","onPlay","onPointerCancel","onPointerDown","onPointerUp","onRateChange","onReset","onSeeked","onSubmit","onTouchCancel","onTouchEnd","onTouchStart","onVolumeChange","onAbort","onAnimationEnd","onAnimationIteration","onAnimationStart","onCanPlay","onCanPlayThrough","onDrag","onDragEnter","onDragExit","onDragLeave","onDragOver","onDurationChange","onEmptied","onEncrypted","onEnded","onGotPointerCapture","onLoad","onLoadedData","onLoadedMetadata","onLoadStart","onLostPointerCapture","onMouseMove","onMouseOut","onMouseOver","onPlaying","onPointerMove","onPointerOut","onPointerOver","onProgress","onScroll","onSeeking","onStalled","onSuspend","onTimeUpdate","onToggle","onTouchMove","onTransitionEnd","onWaiting","onWheel","CREATE_ELEMENT","_CREATE_ELEMENT","ADD_CHILDREN","_ADD_CHILDREN","firstChild","docElement","domRenderer","_ref9$doc","addProps","ELEMENT_PROP","_el$querySelectorAll2","querySelectorAll","script","newScript","textContent","replaceChild","fixScripts","addChildren","defaultContainerTemplate","_ref$dimensions","defaultPrerenderTemplate","drivers","require","Component","component_class","component_temp","_class2","bridgeUrl","defaultContext","driverCache","xprops","logger","PROP_TYPE_LIST","validatePropDefinitions","components","onChange","_ref$width","_ref$height","popup","debug","info","warn","registerChild","listenDelegate","dep","isChild","_ref2$data","canRenderTo","getBridgeUrl","getDefaultElement","getDefaultContext","renderTo","payload","activeComponents","destroyAll","destroyBridges","src","component_destroyAll","component_Component","constants","react","React","ReactDOM","_React$Component","componentDidMount","findDOMNode","setState","componentDidUpdate","vue","Vue","inheritAttrs","mounted","$el","$attrs","watch","deep","angular","ng","directive","scope","restrict","controller","$scope","$element","$root","$$phase","$apply","safeApply","$watch","angular2","zoid","AngularComponent","NgModule","ElementRef","NgZone","internalProps","zone","run","ComponentInstance","selector","template","inputs","Class","elementRef","_props","ngOnInit","targetElement","nativeElement","ngDoCheck","obj1","obj2","checked","equals","declarations"],"mappings":"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","file":"zoid.frameworks.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"zoid\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"zoid\"] = factory();\n\telse\n\t\troot[\"zoid\"] = factory();\n})((typeof self !== 'undefined' ? self : this), function() {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 21);\n","/* @flow */\n\nexport * from './device';\nexport * from './dom';\nexport * from './experiment';\nexport * from './global';\nexport * from './storage';\nexport * from './util';\nexport * from './http';\nexport * from './types';\nexport * from './decorators';\nexport * from './css';\nexport * from './test';\n","/* @flow */\n\nexport function isPromise(item : mixed) : boolean {\n    try {\n        if (!item) {\n            return false;\n        }\n\n        if (typeof Promise !== 'undefined' && item instanceof Promise) {\n            return true;\n        }\n\n        if (typeof window !== 'undefined' && window.Window && item instanceof window.Window) {\n            return false;\n        }\n\n        if (typeof window !== 'undefined' && window.constructor && item instanceof window.constructor) {\n            return false;\n        }\n\n        let toString = ({}).toString;\n\n        if (toString) {\n            let name = toString.call(item);\n\n            if (name === '[object Window]' || name === '[object global]' || name === '[object DOMWindow]') {\n                return false;\n            }\n        }\n\n        if (typeof item.then === 'function') {\n            return true;\n        }\n    } catch (err) {\n        return false;\n    }\n\n    return false;\n}\n","/* @flow */\n\nimport type { ZalgoPromise } from './promise';\n\ntype ZalgoGlobalType = {\n    flushPromises : Array<ZalgoPromise<mixed>>,\n    activeCount : number,\n    possiblyUnhandledPromiseHandlers : Array<<T>(mixed, ZalgoPromise<T>) => void>, // eslint-disable-line no-undef\n    dispatchedErrors : Array<mixed>\n};\n\nexport function getGlobal() : ZalgoGlobalType {\n\n    let glob;\n\n    if (typeof window !== 'undefined') {\n        glob = window;\n    } else if (typeof global !== 'undefined') {\n        glob = global;\n    } else {\n        throw new TypeError(`Can not find global`);\n    }\n\n    let zalgoGlobal = glob.__zalgopromise__ = glob.__zalgopromise__ || {};\n    zalgoGlobal.flushPromises = zalgoGlobal.flushPromises || [];\n    zalgoGlobal.activeCount = zalgoGlobal.activeCount || 0;\n    zalgoGlobal.possiblyUnhandledPromiseHandlers = zalgoGlobal.possiblyUnhandledPromiseHandlers || [];\n    zalgoGlobal.dispatchedErrors = zalgoGlobal.dispatchedErrors || [];\n\n    return zalgoGlobal;\n}\n","/* @flow */\n\nimport { isPromise } from './utils';\nimport { onPossiblyUnhandledException, dispatchPossiblyUnhandledError } from './exceptions';\nimport { getGlobal } from './global';\n\nexport class ZalgoPromise<R : mixed> {\n\n    resolved : boolean\n    rejected : boolean\n    errorHandled : boolean\n    value : R\n    error : mixed\n    handlers : Array<{\n        promise : ZalgoPromise<*>,\n        onSuccess : void | (result : R) => mixed,\n        onError : void | (error : mixed) => mixed\n    }>\n    dispatching : boolean\n    stack : string\n\n    constructor(handler : ?(resolve : (result : R) => void, reject : (error : mixed) => void) => void) {\n\n        this.resolved = false;\n        this.rejected = false;\n        this.errorHandled = false;\n\n        this.handlers = [];\n\n        if (handler) {\n\n            let result;\n            let error;\n            let resolved = false;\n            let rejected = false;\n            let isAsync = false;\n\n            try {\n                handler(res => {\n                    if (isAsync) {\n                        this.resolve(res);\n                    } else {\n                        resolved = true;\n                        result = res;\n                    }\n\n                }, err => {\n                    if (isAsync) {\n                        this.reject(err);\n                    } else {\n                        rejected = true;\n                        error = err;\n                    }\n                });\n\n            } catch (err) {\n                this.reject(err);\n                return;\n            }\n\n            isAsync = true;\n\n            if (resolved) {\n                // $FlowFixMe\n                this.resolve(result);\n            } else if (rejected) {\n                this.reject(error);\n            }\n        }\n\n        if (__DEBUG__) {\n            try {\n                throw new Error(`ZalgoPromise`);\n            } catch (err) {\n                this.stack = err.stack;\n            }\n        }\n    }\n\n    resolve(result : R) : ZalgoPromise<R> {\n        if (this.resolved || this.rejected) {\n            return this;\n        }\n\n        if (isPromise(result)) {\n            throw new Error('Can not resolve promise with another promise');\n        }\n\n        this.resolved = true;\n        this.value = result;\n        this.dispatch();\n\n        return this;\n    }\n\n    reject(error : mixed) : ZalgoPromise<R> {\n        if (this.resolved || this.rejected) {\n            return this;\n        }\n\n        if (isPromise(error)) {\n            throw new Error('Can not reject promise with another promise');\n        }\n\n        if (!error) {\n            let err = (error && typeof error.toString === 'function' ? error.toString() : Object.prototype.toString.call(error));\n            error = new Error(`Expected reject to be called with Error, got ${ err }`);\n        }\n\n        this.rejected = true;\n        this.error = error;\n\n        if (!this.errorHandled) {\n            setTimeout(() => {\n                if (!this.errorHandled) {\n                    dispatchPossiblyUnhandledError(error, this);\n                }\n            }, 1);\n        }\n\n        this.dispatch();\n\n        return this;\n    }\n\n    asyncReject(error : mixed) : ZalgoPromise<R> {\n        this.errorHandled = true;\n        this.reject(error);\n        return this;\n    }\n\n    // eslint-disable-next-line complexity\n    dispatch() {\n\n        let { dispatching, resolved, rejected, handlers } = this;\n\n        if (dispatching) {\n            return;\n        }\n\n        if (!resolved && !rejected) {\n            return;\n        }\n\n        this.dispatching = true;\n        getGlobal().activeCount += 1;\n\n        for (let i = 0; i < handlers.length; i++) {\n\n            let { onSuccess, onError, promise } = handlers[i];\n\n            let result;\n\n            if (resolved) {\n\n                try {\n                    result = onSuccess ? onSuccess(this.value) : this.value;\n                } catch (err) {\n                    promise.reject(err);\n                    continue;\n                }\n\n            } else if (rejected) {\n\n                if (!onError) {\n                    promise.reject(this.error);\n                    continue;\n                }\n\n                try {\n                    result = onError(this.error);\n                } catch (err) {\n                    promise.reject(err);\n                    continue;\n                }\n            }\n\n            if (result instanceof ZalgoPromise && (result.resolved || result.rejected)) {\n\n                if (result.resolved) {\n                    promise.resolve(result.value);\n                } else {\n                    promise.reject(result.error);\n                }\n\n                result.errorHandled = true;\n\n            } else if (isPromise(result)) {\n\n                if (result instanceof ZalgoPromise && (result.resolved || result.rejected)) {\n                    if (result.resolved) {\n                        promise.resolve(result.value);\n                    } else {\n                        promise.reject(result.error);\n                    }\n\n                } else {\n                    // $FlowFixMe\n                    result.then(res => {\n                        promise.resolve(res);\n                    }, err => {\n                        promise.reject(err);\n                    });\n                }\n\n            } else {\n\n                promise.resolve(result);\n            }\n        }\n\n        handlers.length = 0;\n        this.dispatching = false;\n        getGlobal().activeCount -= 1;\n\n        if (getGlobal().activeCount === 0) {\n            ZalgoPromise.flushQueue();\n        }\n    }\n\n    then<X : mixed, Y : mixed>(onSuccess : void | (result : R) => (ZalgoPromise<X> | Y), onError : void | (error : mixed) => (ZalgoPromise<X> | Y)) : ZalgoPromise<X | Y> {\n\n        if (onSuccess && typeof onSuccess !== 'function' && !onSuccess.call) {\n            throw new Error('Promise.then expected a function for success handler');\n        }\n\n        if (onError && typeof onError !== 'function' && !onError.call) {\n            throw new Error('Promise.then expected a function for error handler');\n        }\n\n        let promise : ZalgoPromise<X | Y> = new ZalgoPromise();\n\n        this.handlers.push({\n            promise,\n            onSuccess,\n            onError\n        });\n\n        this.errorHandled = true;\n\n        this.dispatch();\n\n        return promise;\n    }\n\n    catch<X : mixed, Y : mixed>(onError : (error : mixed) => ZalgoPromise<X> | Y) : ZalgoPromise<X | Y> {\n        return this.then(undefined, onError);\n    }\n\n    finally(onFinally : () => mixed) : ZalgoPromise<R> {\n\n        if (onFinally && typeof onFinally !== 'function' && !onFinally.call) {\n            throw new Error('Promise.finally expected a function');\n        }\n\n        return this.then((result) => {\n            return ZalgoPromise.try(onFinally)\n                .then(() => {\n                    return result;\n                });\n        }, (err) => {\n            return ZalgoPromise.try(onFinally)\n                .then(() => {\n                    throw err;\n                });\n        });\n    }\n\n    timeout(time : number, err : ?Error) : ZalgoPromise<R> {\n\n        if (this.resolved || this.rejected) {\n            return this;\n        }\n\n        let timeout = setTimeout(() => {\n\n            if (this.resolved || this.rejected) {\n                return;\n            }\n\n            this.reject(err || new Error(`Promise timed out after ${ time }ms`));\n\n        }, time);\n\n        return this.then(result => {\n            clearTimeout(timeout);\n            return result;\n        });\n    }\n\n    // $FlowFixMe\n    toPromise() : Promise<R> {\n        // $FlowFixMe\n        if (typeof Promise === 'undefined') {\n            throw new TypeError(`Could not find Promise`);\n        }\n        // $FlowFixMe\n        return Promise.resolve(this); // eslint-disable-line compat/compat\n    }\n\n    static resolve<X : mixed>(value : X | ZalgoPromise<X>) : ZalgoPromise<X> {\n\n        if (value instanceof ZalgoPromise) {\n            return value;\n        }\n\n        if (isPromise(value)) {\n            // $FlowFixMe\n            return new ZalgoPromise((resolve, reject) => value.then(resolve, reject));\n        }\n\n        return new ZalgoPromise().resolve(value);\n    }\n\n    static reject(error : mixed) : ZalgoPromise<R> {\n        return new ZalgoPromise().reject(error);\n    }\n\n    static asyncReject(error : mixed) : ZalgoPromise<R> {\n        return new ZalgoPromise().asyncReject(error);\n    }\n\n    static all<X : [*] | [*, *] | [*, *, *] | [*, *, *, *] | [*, *, *, *, *] | [*, *, *, *, *, *] | [*, *, *, *, *, *, *] | [*, *, *, *, *, *, *, *] | [*, *, *, *, *, *, *, *, *] | Array<mixed>>(promises : X) : ZalgoPromise<$TupleMap<X, <Y>(ZalgoPromise<Y> | Y) => Y>> { // eslint-disable-line no-undef\n\n        let promise = new ZalgoPromise();\n        let count = promises.length;\n        let results = [];\n\n        if (!count) {\n            promise.resolve(results);\n            return promise;\n        }\n\n        for (let i = 0; i < promises.length; i++) {\n            let prom = promises[i];\n\n            if (prom instanceof ZalgoPromise) {\n                if (prom.resolved) {\n                    results[i] = prom.value;\n                    count -= 1;\n                    continue;\n                }\n            } else if (!isPromise(prom)) {\n                results[i] = prom;\n                count -= 1;\n                continue;\n            }\n\n            ZalgoPromise.resolve(prom).then(result => {\n                results[i] = result;\n                count -= 1;\n                if (count === 0) {\n                    promise.resolve(results);\n                }\n            }, err => {\n                promise.reject(err);\n            });\n        }\n\n        if (count === 0) {\n            promise.resolve(results);\n        }\n\n        return promise;\n    }\n\n    static hash<O : { [string] : * }>(promises : O) : ZalgoPromise<$ObjMap<O, <Y>(ZalgoPromise<Y> | Y) => Y>> { // eslint-disable-line no-undef\n        let result = {};\n        \n        return ZalgoPromise.all(Object.keys(promises).map(key => {\n            return ZalgoPromise.resolve(promises[key]).then(value => {\n                result[key] = value;\n            });\n        })).then(() => {\n            return result;\n        });\n    }\n\n    static map<T, X>(items : Array<T>, method : (T) => (ZalgoPromise<X> | X)) : ZalgoPromise<Array<X>> {\n        // $FlowFixMe\n        return ZalgoPromise.all(items.map(method));\n    }\n\n    static onPossiblyUnhandledException(handler : (err : mixed) => void) : { cancel : () => void } {\n        return onPossiblyUnhandledException(handler);\n    }\n\n    static try<X : mixed, Y : mixed, C : mixed, A : Array<mixed>>(method : (...args : A) => (ZalgoPromise<X> | Y), context : ?C, args : ?A) : ZalgoPromise<X | Y> {\n\n        if (method && typeof method !== 'function' && !method.call) {\n            throw new Error('Promise.try expected a function');\n        }\n\n        let result;\n        \n        try {\n            // $FlowFixMe\n            result = method.apply(context, args || []);\n        } catch (err) {\n            return ZalgoPromise.reject(err);\n        }\n\n        return ZalgoPromise.resolve(result);\n    }\n\n    static delay(delay : number) : ZalgoPromise<void> {\n        return new ZalgoPromise(resolve => {\n            setTimeout(resolve, delay);\n        });\n    }\n\n    static isPromise(value : mixed) : boolean {\n\n        if (value && value instanceof ZalgoPromise) {\n            return true;\n        }\n\n        return isPromise(value);\n    }\n\n    static flush() : ZalgoPromise<void> {\n        let promise = new ZalgoPromise();\n        getGlobal().flushPromises.push(promise);\n\n        if (getGlobal().activeCount === 0) {\n            ZalgoPromise.flushQueue();\n        }\n\n        return promise;\n    }\n\n    static flushQueue() {\n        let promisesToFlush = getGlobal().flushPromises;\n        getGlobal().flushPromises = [];\n\n        for (let promise of promisesToFlush) {\n            promise.resolve();\n        }\n    }\n}\n","/* @flow */\n\nimport { getGlobal } from './global';\nimport type { ZalgoPromise } from './promise';\n\nexport function dispatchPossiblyUnhandledError<T>(err : mixed, promise : ZalgoPromise<T>) {\n\n    if (getGlobal().dispatchedErrors.indexOf(err) !== -1) {\n        return;\n    }\n\n    getGlobal().dispatchedErrors.push(err);\n\n    setTimeout(() => {\n        if (__DEBUG__) {\n            // $FlowFixMe\n            throw new Error(`${ err.stack || err.toString() }\\n\\nFrom promise:\\n\\n${ promise.stack }`);\n        }\n\n        throw err;\n    }, 1);\n\n    for (let j = 0; j < getGlobal().possiblyUnhandledPromiseHandlers.length; j++) {\n        getGlobal().possiblyUnhandledPromiseHandlers[j](err, promise);\n    }\n}\n\nexport function onPossiblyUnhandledException(handler : (mixed) => void) : { cancel : () => void } {\n    getGlobal().possiblyUnhandledPromiseHandlers.push(handler);\n\n    return {\n        cancel() {\n            getGlobal().possiblyUnhandledPromiseHandlers.splice(getGlobal().possiblyUnhandledPromiseHandlers.indexOf(handler), 1);\n        }\n    };\n}\n","/* @flow */\n\nexport { ZalgoPromise } from './promise';\n","/* @flow */\n\nexport * from './utils';\nexport * from './types';\nexport * from './constants';\n","/* @flow */\n\nimport { WINDOW_TYPE } from 'cross-domain-utils/src';\n\nexport const ZOID = `zoid`;\n\nexport const __ZOID__ = `__${ ZOID }__`;\n\nexport const POST_MESSAGE = {\n    DELEGATE:       `${ ZOID }_delegate`,\n    ALLOW_DELEGATE: `${ ZOID }_allow_delegate`\n};\n\nexport const PROP_TYPE = {\n    STRING:   `string`,\n    OBJECT:   `object`,\n    FUNCTION: `function`,\n    BOOLEAN:  `boolean`,\n    NUMBER:   `number`,\n    ARRAY:    `array`\n};\n\nexport const INITIAL_PROPS = {\n    RAW: 'raw',\n    UID: 'uid'\n};\n\nexport const WINDOW_REFERENCES = {\n    OPENER: `opener`,\n    TOP:    `top`,\n    PARENT: `parent`,\n    GLOBAL: `global`\n};\n\nexport const PROP_SERIALIZATION = {\n    JSON:   ('json' : 'json'),\n    DOTIFY: ('dotify' : 'dotify'),\n    BASE64: ('base64' : 'base64')\n};\n\nexport const CONTEXT = WINDOW_TYPE;\n\nexport const CLASS = {\n    OUTLET:            `${ ZOID }-outlet`,\n    COMPONENT_FRAME:   `${ ZOID }-component-frame`,\n    PRERENDER_FRAME:   `${ ZOID }-prerender-frame`,\n    VISIBLE:           `${ ZOID }-visible`,\n    INVISIBLE:         `${ ZOID }-invisible`\n};\n\nexport const WILDCARD = '*';\n\nexport const DEFAULT_DIMENSIONS = {\n    WIDTH:  '300px',\n    HEIGHT: '150px'\n};\n","/* @flow */\n/* eslint max-lines: 0 */\n\nimport { ZalgoPromise } from 'zalgo-promise/src';\nimport { WeakMap } from 'cross-domain-safe-weakmap/src';\n\nimport type { CancelableType } from './types';\n\nexport function base64encode(str : string) : string {\n    if (typeof btoa === 'function') {\n        return btoa(str);\n    } else if (typeof Buffer !== 'undefined') {\n        return Buffer.from(str, 'utf8').toString('base64');\n    }\n\n    throw new Error(`Can not find window.btoa or Buffer`);\n}\n\nexport function base64decode(str : string) : string {\n    if (typeof window !== 'undefined' && typeof window.atob === 'function') {\n        return window.atob(str);\n    }\n\n    if (typeof Buffer !== 'undefined') {\n        return Buffer.from(str, 'base64').toString('utf8');\n    }\n\n    throw new Error(`Can not find window.atob or Buffer`);\n}\n\nexport function uniqueID() : string {\n\n    let chars = '0123456789abcdef';\n\n    let randomID = 'xxxxxxxxxx'.replace(/./g, () => {\n        return chars.charAt(Math.floor(Math.random() * chars.length));\n    });\n\n    let timeID = base64encode(\n        new Date().toISOString().slice(11, 19).replace('T', '.')\n    ).replace(/[^a-zA-Z0-9]/g, '').toLowerCase();\n\n    return `${ randomID }_${ timeID }`;\n}\n\nexport function getGlobal() : Object {\n    if (typeof window !== 'undefined') {\n        return window;\n    }\n    if (typeof global !== 'undefined') {\n        return global;\n    }\n    if (typeof __GLOBAL__ !== 'undefined') {\n        return __GLOBAL__;\n    }\n    throw new Error(`No global found`);\n}\n\nlet objectIDs;\n\nexport function getObjectID(obj : Object) : string {\n\n    objectIDs = objectIDs || new WeakMap();\n\n    if (obj === null || obj === undefined || (typeof obj !== 'object' && typeof obj !== 'function')) {\n        throw new Error(`Invalid object`);\n    }\n\n    let uid = objectIDs.get(obj);\n\n    if (!uid) {\n        uid = `${ typeof obj }:${ uniqueID() }`;\n        objectIDs.set(obj, uid);\n    }\n\n    return uid;\n}\n\nfunction serializeArgs(args : Array<mixed>) : string {\n    try {\n        return JSON.stringify(Array.prototype.slice.call(args), (subkey, val) => {\n            if (typeof val === 'function') {\n                return `memoize[${ getObjectID(val) }]`;\n            }\n            return val;\n        });\n    } catch (err) {\n        throw new Error(`Arguments not serializable -- can not be used to memoize`);\n    }\n}\n\n// eslint-disable-next-line flowtype/no-weak-types\nexport function memoize<R>(method : (...args : Array<any>) => R, options : { time? : number, name? : string, thisNamespace? : boolean } = {}) : ((...args : Array<any>) => R) {\n    let cacheMap = new WeakMap();\n\n    // eslint-disable-next-line flowtype/no-weak-types\n    function memoizedFunction(...args : Array<any>) : R {\n        let cache = cacheMap.getOrSet(options.thisNamespace ? this : method, () => ({}));\n\n        let key : string = serializeArgs(args);\n\n        let cacheTime = options.time;\n        if (cache[key] && cacheTime && (Date.now() - cache[key].time) < cacheTime) {\n            delete cache[key];\n        }\n\n        if (cache[key]) {\n            return cache[key].value;\n        }\n\n        let time  = Date.now();\n        let value = method.apply(this, arguments);\n\n        cache[key] = { time, value };\n\n        return cache[key].value;\n    }\n\n    memoizedFunction.reset = () => {\n        cacheMap.delete(options.thisNamespace ? this : method);\n    };\n\n    if (options.name) {\n        memoizedFunction.displayName = `${ options.name }:memoized`;\n    }\n\n    return memoizedFunction;\n}\n\n// eslint-disable-next-line flowtype/no-weak-types\nexport function memoizePromise<R>(method : (...args : Array<any>) => ZalgoPromise<R>) : ((...args : Array<any>) => ZalgoPromise<R>) {\n    let cache = {};\n\n    // eslint-disable-next-line flowtype/no-weak-types\n    function memoizedPromiseFunction(...args : Array<any>) : ZalgoPromise<R> {\n        let key : string = serializeArgs(args);\n\n        if (cache.hasOwnProperty(key)) {\n            return cache[key];\n        }\n\n        cache[key] = method.apply(this, arguments)\n            .finally(() => {\n                delete cache[key];\n            });\n\n        return cache[key];\n    }\n\n    memoizedPromiseFunction.reset = () => {\n        cache = {};\n    };\n\n    return memoizedPromiseFunction;\n}\n\n// eslint-disable-next-line flowtype/no-weak-types\nexport function promisify<R>(method : (...args : Array<any>) => R, options : { name? : string } = {}) : ((...args : Array<any>) => ZalgoPromise<R>) {\n    function promisifiedFunction() : ZalgoPromise<R> {\n        return ZalgoPromise.try(method, this, arguments);\n    }\n\n    if (options.name) {\n        promisifiedFunction.displayName = `${ options.name }:promisified`;\n    }\n\n    return promisifiedFunction;\n}\n\n// eslint-disable-next-line flowtype/no-weak-types\nexport function inlineMemoize<R>(method : (...args : Array<any>) => R, logic : (...args : Array<any>) => R, args : Array<any> = []) : R {\n    let cache = method.__inline_memoize_cache__ = method.__inline_memoize_cache__ || {};\n    let key = serializeArgs(args);\n\n    if (cache.hasOwnProperty(key)) {\n        return cache[key];\n    }\n    \n    let result = cache[key] = logic(...args);\n    return result;\n}\n\n// eslint-disable-next-line no-unused-vars\nexport function noop(...args : Array<mixed>) {\n    // pass\n}\n\nexport function once(method : Function) : Function {\n    let called = false;\n\n    return function onceFunction() : mixed {\n        if (!called) {\n            called = true;\n            return method.apply(this, arguments);\n        }\n    };\n}\n\nexport function hashStr(str : string) : number {\n    let hash = 0;\n    for (let i = 0; i < str.length; i++) {\n        hash += str[i].charCodeAt(0) * Math.pow((i % 10) + 1, 5);\n    }\n    return Math.floor(Math.pow(Math.sqrt(hash), 5));\n}\n\nexport function strHashStr(str : string) : string {\n    let hash = '';\n\n    for (let i = 0; i < str.length; i++) {\n        let total = (str[i].charCodeAt(0) * i);\n\n        if (str[i + 1]) {\n            total += (str[i + 1].charCodeAt(0) * (i - 1));\n        }\n\n        hash += String.fromCharCode(97 + (Math.abs(total) % 26));\n    }\n\n    return hash;\n}\n\nexport function match(str : string, pattern : RegExp) : ?string {\n    let regmatch = str.match(pattern);\n    if (regmatch) {\n        return regmatch[1];\n    }\n}\n\nexport function awaitKey<T: mixed>(obj : Object, key : string) : ZalgoPromise<T> {\n    return new ZalgoPromise(resolve => {\n\n        let value = obj[key];\n\n        if (value) {\n            return resolve(value);\n        }\n\n        delete obj[key];\n\n        Object.defineProperty(obj, key, {\n\n            configurable: true,\n\n            set(item) {\n                value = item;\n\n                if (value) {\n                    resolve(value);\n                }\n            },\n\n            get() : mixed {\n                return value;\n            }\n        });\n    });\n}\n\nexport function stringifyError(err : mixed, level : number = 1) : string {\n\n    if (level >= 3) {\n        return 'stringifyError stack overflow';\n    }\n\n    try {\n        if (!err) {\n            return `<unknown error: ${ Object.prototype.toString.call(err) }>`;\n        }\n\n        if (typeof err === 'string') {\n            return err;\n        }\n\n        if (err instanceof Error) {\n            let stack = err && err.stack;\n            let message = err && err.message;\n\n            if (stack && message) {\n                if (stack.indexOf(message) !== -1) {\n                    return stack;\n                } else {\n                    return `${ message }\\n${ stack }`;\n                }\n            } else if (stack) {\n                return stack;\n            } else if (message) {\n                return message;\n            }\n        }\n\n        if (typeof err.toString === 'function') {\n            return err.toString();\n        }\n\n        return Object.prototype.toString.call(err);\n\n    } catch (newErr) { // eslint-disable-line unicorn/catch-error-name\n        return `Error while stringifying error: ${ stringifyError(newErr, level + 1) }`;\n    }\n}\n\nexport function stringifyErrorMessage(err : mixed) : string {\n\n    let defaultMessage = `<unknown error: ${ Object.prototype.toString.call(err) }>`;\n\n    if (!err) {\n        return defaultMessage;\n    }\n\n    if (err instanceof Error) {\n        return err.message || defaultMessage;\n    }\n\n    if (typeof err.message === 'string') {\n        return err.message || defaultMessage;\n    }\n\n    return defaultMessage;\n}\n\nexport function stringify(item : mixed) : string {\n    if (typeof item === 'string') {\n        return item;\n    }\n\n    if (item && typeof item.toString === 'function') {\n        return item.toString();\n    }\n\n    return Object.prototype.toString.call(item);\n}\n\nexport function domainMatches(hostname : string, domain : string) : boolean {\n    hostname = hostname.split('://')[1];\n    let index = hostname.indexOf(domain);\n    return (index !== -1 && hostname.slice(index) === domain);\n}\n\nexport function patchMethod(obj : Object, name : string, handler : Function) {\n    let original = obj[name];\n\n    obj[name] = function patchedMethod() : mixed {\n        return handler({\n            context:      this,\n            args:         Array.prototype.slice.call(arguments),\n            original,\n            callOriginal: () => original.apply(this, arguments)\n        });\n    };\n}\n\nexport function extend<T : Object | Function>(obj : T, source : Object) : T {\n    if (!source) {\n        return obj;\n    }\n\n    if (Object.assign) {\n        return Object.assign(obj, source);\n    }\n\n    for (let key in source) {\n        if (source.hasOwnProperty(key)) {\n            obj[key] = source[key];\n        }\n    }\n\n    return obj;\n}\n\nexport function values<T>(obj : { [string] : T }) : Array<T> {\n    let result = [];\n    for (let key in obj) {\n        if (obj.hasOwnProperty(key)) {\n            result.push(obj[key]);\n        }\n    }\n    return result;\n}\n\nexport function perc(pixels : number, percentage : number) : number {\n    return Math.round((pixels * percentage) / 100);\n}\n\nexport function min(...args : Array<number>) : number {\n    return Math.min(...args);\n}\n\nexport function max(...args : Array<number>) : number {\n    return Math.max(...args);\n}\n\nexport function regexMap<T>(str : string, regexp : RegExp, handler : () => T) : Array<T> {\n    let results = [];\n\n    // $FlowFixMe\n    str.replace(regexp, function regexMapMatcher(item) {\n        results.push(handler ? handler.apply(null, arguments) : item);\n    });\n\n    // $FlowFixMe\n    return results;\n}\n\nexport function svgToBase64(svg : string) : string {\n    return `data:image/svg+xml;base64,${ base64encode(svg) }`;\n}\n\nexport function objFilter<T, R>(obj : { [string] : T }, filter? : (T, ?string) => mixed = Boolean) : { [string] : R } {\n    let result = {};\n\n    for (let key in obj) {\n        if (!obj.hasOwnProperty(key) || !filter(obj[key], key)) {\n            continue;\n        }\n\n        result[key] = obj[key];\n    }\n\n    return result;\n}\n\nexport function identity <T>(item : T) : T {\n    return item;\n}\n\nexport function regexTokenize(text : string, regexp : RegExp) : Array<string> {\n    let result = [];\n    text.replace(regexp, token => {\n        result.push(token);\n        return '';\n    });\n    return result;\n}\n\nexport function promiseDebounce<T>(method : () => ZalgoPromise<T> | T, delay : number = 50) : () => ZalgoPromise<T> {\n\n    let promise;\n    let timeout;\n\n    return function promiseDebouncedMethod() : ZalgoPromise<T> {\n        if (timeout) {\n            clearTimeout(timeout);\n        }\n\n        let localPromise = promise = promise || new ZalgoPromise();\n\n        timeout = setTimeout(() => {\n            promise = null;\n            timeout = null;\n\n            ZalgoPromise.try(method).then(\n                result => { localPromise.resolve(result); },\n                err => { localPromise.reject(err); }\n            );\n        }, delay);\n\n        return localPromise;\n    };\n}\n\nexport function safeInterval(method : Function, time : number) : { cancel : () => void } {\n\n    let timeout;\n\n    function loop() {\n        timeout = setTimeout(() => {\n            method();\n            loop();\n        }, time);\n    }\n\n    loop();\n\n    return {\n        cancel() {\n            clearTimeout(timeout);\n        }\n    };\n}\n\nexport function isInteger(str : string) : boolean {\n    return Boolean(str.match(/^[0-9]+$/));\n}\n\nexport function isFloat(str : string) : boolean {\n    return Boolean(str.match(/^[0-9]+\\.[0-9]+$/));\n}\n\nexport function serializePrimitive(value : string | number | boolean) : string {\n    return value.toString();\n}\n\nexport function deserializePrimitive(value : string) : string | number | boolean {\n    if (value === 'true') {\n        return true;\n    } else if (value === 'false') {\n        return false;\n    } else if (isInteger(value)) {\n        return parseInt(value, 10);\n    } else if (isFloat(value)) {\n        return parseFloat(value);\n    } else {\n        return value;\n    }\n}\n\nexport function dotify(obj : Object, prefix : string = '', newobj : Object = {}) : { [string] : string } {\n    prefix = prefix ? `${ prefix }.` : prefix;\n    for (let key in obj) {\n        if (!obj.hasOwnProperty(key) || obj[key] === undefined || obj[key] === null || typeof obj[key] === 'function') {\n            continue;\n        } else if (obj[key] && Array.isArray(obj[key]) && obj[key].length && obj[key].every(val => typeof val !== 'object')) {\n            newobj[`${ prefix }${ key }[]`] = obj[key].join(',');\n        } else if (obj[key] && typeof obj[key] === 'object') {\n            newobj = dotify(obj[key], `${ prefix }${ key }`, newobj);\n        } else {\n            newobj[`${ prefix }${ key }`] = serializePrimitive(obj[key]);\n        }\n    }\n    return newobj;\n}\n\nexport function undotify(obj : { [string] : string }) : Object {\n    \n    let result = {};\n\n    for (let key in obj) {\n        if (!obj.hasOwnProperty(key) || typeof obj[key] !== 'string') {\n            continue;\n        }\n\n        let value = obj[key];\n\n        if (key.match(/^.+\\[\\]$/)) {\n            key = key.slice(0, key.length - 2);\n            value = value.split(',').map(deserializePrimitive);\n        } else {\n            value = deserializePrimitive(value);\n        }\n\n        let keyResult = result;\n        let parts = key.split('.');\n        for (let i = 0; i < parts.length; i++) {\n            let part = parts[i];\n            let isLast = (i + 1 === parts.length);\n            let isIndex = !isLast && isInteger(parts[i + 1]);\n\n            if (isLast) {\n                // $FlowFixMe\n                keyResult[part] = value;\n            } else {\n                // $FlowFixMe\n                keyResult = keyResult[part] = keyResult[part] || (isIndex ? [] : {});\n            }\n        }\n    }\n\n    return result;\n}\n\nexport type EventEmitterType = {\n    on : (eventName : string, handler : Function) => CancelableType,\n    once : (eventName : string, handler : Function) => CancelableType,\n    trigger : (eventName : string) => void,\n    triggerOnce : (eventName : string) => void\n};\n\nexport function eventEmitter() : EventEmitterType {\n\n    let triggered = {};\n    let handlers = {};\n\n    return {\n\n        on(eventName : string, handler : Function) : CancelableType {\n\n            let handlerList = handlers[eventName] = handlers[eventName] || [];\n\n            handlerList.push(handler);\n\n            let cancelled = false;\n\n            return {\n                cancel() {\n                    if (!cancelled) {\n                        cancelled = true;\n                        handlerList.splice(handlerList.indexOf(handler), 1);\n                    }\n\n                }\n            };\n        },\n\n        once(eventName : string, handler : Function) : CancelableType {\n\n            let listener = this.on(eventName, () => {\n                listener.cancel();\n                handler();\n            });\n\n            return listener;\n        },\n\n        trigger(eventName : string) {\n\n            let handlerList = handlers[eventName];\n\n            if (handlerList) {\n                for (let handler of handlerList) {\n                    handler();\n                }\n            }\n        },\n\n        triggerOnce(eventName : string) {\n\n            if (triggered[eventName]) {\n                return;\n            }\n\n            triggered[eventName] = true;\n            this.trigger(eventName);\n        }\n    };\n}\n\nexport function camelToDasherize(string : string) : string {\n    return string.replace(/([A-Z])/g, (g) => {\n        return `-${ g.toLowerCase() }`;\n    });\n}\n\nexport function dasherizeToCamel(string : string) : string {\n    return string.replace(/-([a-z])/g, (g) => {\n        return g[1].toUpperCase();\n    });\n}\n\nexport function capitalizeFirstLetter(string : string) : string {\n    return string.charAt(0).toUpperCase() + string.slice(1).toLowerCase();\n}\n\nexport function get(item : Object, path : string, def : mixed) : mixed {\n\n    if (!path) {\n        return def;\n    }\n\n    let pathParts = path.split('.');\n\n    // Loop through each section of our key path\n\n    for (let i = 0; i < pathParts.length; i++) {\n\n        // If we have an object, we can get the key\n        if (typeof item === 'object' && item !== null) {\n            item = item[pathParts[i]];\n\n        // Otherwise, we should return the default (undefined if not provided)\n        } else {\n            return def;\n        }\n    }\n\n    // If our final result is undefined, we should return the default\n\n    return item === undefined ? def : item;\n}\n\nexport function safeTimeout(method : Function, time : number) {\n\n    let interval = safeInterval(() => {\n        time -= 100;\n        if (time <= 0) {\n            interval.cancel();\n            method();\n        }\n    }, 100);\n}\n\nexport function defineLazyProp<T>(obj : Object | Array<mixed>, key : string | number, getter : () => T) {\n    if (Array.isArray(obj)) {\n        if (typeof key !== 'number') {\n            throw new TypeError(`Array key must be number`);\n        }\n    } else if (typeof obj === 'object' && obj !== null) {\n        if (typeof key !== 'string') {\n            throw new TypeError(`Object key must be string`);\n        }\n    }\n    \n    Object.defineProperty(obj, key, {\n        configurable: true,\n        enumerable:   true,\n        get:          () => {\n            // $FlowFixMe\n            delete obj[key];\n            let value = getter();\n            // $FlowFixMe\n            obj[key] = value;\n            return value;\n        },\n        set: (value : T) => {\n            // $FlowFixMe\n            delete obj[key];\n            // $FlowFixMe\n            obj[key] = value;\n        }\n    });\n}\n\nexport function isObject(item : mixed) : boolean {\n    return (typeof item === 'object' && item !== null);\n}\n\nexport function isObjectObject(obj : mixed) : boolean {\n    return isObject(obj) && Object.prototype.toString.call(obj) === '[object Object]';\n}\n\nexport function isPlainObject(obj : mixed) : boolean {\n    if (!isObjectObject(obj)) {\n        return false;\n    }\n\n    // $FlowFixMe\n    let constructor = obj.constructor;\n\n    if (typeof constructor !== 'function') {\n        return false;\n    }\n\n    let prototype = constructor.prototype;\n\n    if (!isObjectObject(prototype)) {\n        return false;\n    }\n\n    if (!prototype.hasOwnProperty('isPrototypeOf')) {\n        return false;\n    }\n\n    return true;\n}\n\nexport function replaceObject<T : Object | Array<mixed>> (item : T, replacer : (mixed, string | number, string) => mixed, fullKey : string = '') : T {\n\n    if (Array.isArray(item)) {\n        let length = item.length;\n        let result = [];\n\n        for (let i = 0; i < length; i++) {\n\n            \n            defineLazyProp(result, i, () => {\n                let itemKey = fullKey ? `${ fullKey }.${ i }` : `${ i }`;\n                let el = item[i];\n\n                let child = replacer(el, i, itemKey);\n\n                if (isPlainObject(child) || Array.isArray(child)) {\n                    // $FlowFixMe\n                    child = replaceObject(child, replacer, itemKey);\n                }\n\n                return child;\n            });\n        }\n\n        // $FlowFixMe\n        return result;\n    } else if (isPlainObject(item)) {\n        let result = {};\n\n        for (let key in item) {\n            if (!item.hasOwnProperty(key)) {\n                continue;\n            }\n\n            defineLazyProp(result, key, () => {\n                let itemKey = fullKey ? `${ fullKey }.${ key }` : `${ key }`;\n                // $FlowFixMe\n                let el = item[key];\n\n                let child = replacer(el, key, itemKey);\n\n                if (isPlainObject(child) || Array.isArray(child)) {\n                    // $FlowFixMe\n                    child = replaceObject(child, replacer, itemKey);\n                }\n\n                return child;\n            });\n        }\n\n        // $FlowFixMe\n        return result;\n    } else {\n        throw new Error(`Pass an object or array`);\n    }\n}\n\n\nexport function copyProp(source : Object, target : Object, name : string, def : mixed) {\n    if (source.hasOwnProperty(name)) {\n        let descriptor = Object.getOwnPropertyDescriptor(source, name);\n        // $FlowFixMe\n        Object.defineProperty(target, name, descriptor);\n\n    } else {\n        target[name] = def;\n    }\n}\n\ntype RegexResultType = {\n    text : string,\n    groups : Array<string>,\n    start : number,\n    end : number,\n    length : number,\n    replace : (text : string) => string\n};\n\nexport function regex(pattern : string | RegExp, string : string, start : number = 0) : ?RegexResultType {\n\n    if (typeof pattern === 'string') {\n        // eslint-disable-next-line security/detect-non-literal-regexp\n        pattern = new RegExp(pattern);\n    }\n\n    let result = string.slice(start).match(pattern);\n\n    if (!result) {\n        return;\n    }\n\n    // $FlowFixMe\n    let index : number = result.index;\n    let regmatch = result[0];\n\n    return {\n        text:   regmatch,\n        groups: result.slice(1),\n        start:  start + index,\n        end:    start + index + regmatch.length,\n        length: regmatch.length,\n\n        replace(text : string) : string {\n\n            if (!regmatch) {\n                return '';\n            }\n\n            return `${ regmatch.slice(0, start + index) }${ text }${ regmatch.slice(index + regmatch.length) }`;\n        }\n    };\n}\n\nexport function regexAll(pattern : string | RegExp, string : string) : Array<RegexResultType> {\n\n    let matches = [];\n    let start = 0;\n\n    // eslint-disable-next-line no-constant-condition\n    while (true) {\n        let regmatch = regex(pattern, string, start);\n\n        if (!regmatch) {\n            break;\n        }\n\n        matches.push(regmatch);\n        start = match.end;\n    }\n\n    return matches;\n}\n\nexport function isDefined(value : ?mixed) : boolean {\n    return value !== null && value !== undefined;\n}\n\nexport function cycle(method : Function) : ZalgoPromise<void> {\n    return ZalgoPromise.try(method).then(() => cycle(method));\n}\n\nexport function debounce<T>(method : (...args : Array<mixed>) => T, time : number = 100) : (...args : Array<mixed>) => void {\n\n    let timeout;\n\n    return function debounceWrapper() {\n        clearTimeout(timeout);\n\n        timeout = setTimeout(() => {\n            return method.apply(this, arguments);\n        }, time);\n    };\n}\n\nexport function isRegex(item : mixed) : boolean {\n    return Object.prototype.toString.call(item) === '[object RegExp]';\n}\n\ntype FunctionProxy<T : Function> = (method : T) => T;\n\n// eslint-disable-next-line flowtype/no-weak-types\nexport let weakMapMemoize : FunctionProxy<*> = <R : mixed>(method : (arg : any) => R) : ((...args : Array<any>) => R) => {\n\n    let weakmap = new WeakMap();\n\n    // eslint-disable-next-line flowtype/no-weak-types\n    return function weakmapMemoized(arg : any) : R {\n        return weakmap.getOrSet(arg, () => method.call(this, arg));\n    };\n};\n\ntype FunctionPromiseProxy<R : mixed, T : (...args : $ReadOnlyArray<mixed>) => ZalgoPromise<R>> = (T) => T;\n\n// eslint-disable-next-line flowtype/no-weak-types\nexport let weakMapMemoizePromise : FunctionPromiseProxy<*, *> = <R : mixed>(method : (arg : any) => ZalgoPromise<R>) : ((...args : Array<any>) => ZalgoPromise<R>) => {\n\n    let weakmap = new WeakMap();\n\n    // eslint-disable-next-line flowtype/no-weak-types\n    return function weakmapMemoizedPromise(arg : any) : ZalgoPromise<R> {\n        return weakmap.getOrSet(arg, () =>\n            method.call(this, arg).finally(() => {\n                weakmap.delete(arg);\n            })\n        );\n    };\n};\n\nexport function getOrSet<O : Object, T : mixed>(obj : O, key : string, getter : () => T) : T {\n    if (obj.hasOwnProperty(key)) {\n        return obj[key];\n    }\n\n    const val = getter();\n    obj[key] = val;\n    return val;\n}\n\nexport type CleanupType = {|\n    set : <T : mixed>(string, T) => T, // eslint-disable-line no-undef\n    register : (Function) => void,\n    all : () => ZalgoPromise<void>\n|};\n\nexport function cleanup(obj : Object) : CleanupType {\n\n    const tasks = [];\n    let cleaned = false;\n\n    return {\n        set<T : mixed>(name : string, item : T) : T {\n            if (!cleaned) {\n                obj[name] = item;\n                this.register(() => {\n                    delete obj[name];\n                });\n            }\n            return item;\n        },\n\n        register(method : Function) {\n            if (cleaned) {\n                method();\n            } else {\n                tasks.push(once(method));\n            }\n        },\n\n        all() : ZalgoPromise<void> {\n            const results = [];\n            cleaned = true;\n\n            while (tasks.length) {\n                const task = tasks.pop();\n                results.push(task());\n            }\n\n            return ZalgoPromise.all(results).then(noop);\n        }\n    };\n}\n\nexport function tryCatch<T>(fn : () => T) : {| result : T, error : void |} | {| result : void, error : mixed |} {\n    let result;\n    let error;\n\n    try {\n        result = fn();\n    } catch (err) {\n        error = err;\n    }\n    \n    // $FlowFixMe\n    return { result, error };\n}\n\nexport function removeFromArray<X, T : Array<X>>(arr : T, item : X) {\n    const index = arr.indexOf(item);\n    if (index !== -1) {\n        arr.splice(index, 1);\n    }\n}\n","export default function _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}","/* @flow */\n\nexport const PROTOCOL = {\n    MOCK:  ('mock:' : 'mock:'),\n    FILE:  ('file:' : 'file:'),\n    ABOUT: ('about:' : 'about:')\n};\n\nexport const WILDCARD = '*';\n\nexport const WINDOW_TYPE = {\n    IFRAME: ('iframe' : 'iframe'),\n    POPUP:  ('popup' : 'popup')\n};\n","/* @flow */\n\nexport function safeIndexOf<T>(collection : Array<T>, item : T) : number {\n    for (let i = 0; i < collection.length; i++) {\n\n        try {\n            if (collection[i] === item) {\n                return i;\n            }\n        } catch (err) {\n            // pass\n        }\n    }\n\n    return -1;\n}\n\n// eslint-disable-next-line no-unused-vars\nexport function noop(...args : Array<mixed>) {\n    // pass\n}\n","/* @flow */\n\nimport { isWindow, isWindowClosed } from 'cross-domain-utils/src';\n\nimport { hasNativeWeakMap } from './native';\nimport { noop, safeIndexOf } from './util';\n\nlet defineProperty = Object.defineProperty;\nlet counter = Date.now() % 1e9;\n\nexport class CrossDomainSafeWeakMap<K : Object, V : mixed> {\n\n    name : string\n    weakmap : WeakMap<K, V>\n    keys : Array<K>\n    values : Array<V>\n\n    constructor() {\n        counter += 1;\n\n        // eslint-disable-next-line no-bitwise\n        this.name = `__weakmap_${ Math.random() * 1e9 >>> 0 }__${ counter }`;\n\n        if (hasNativeWeakMap()) {\n            try {\n                this.weakmap = new WeakMap();\n            } catch (err) {\n                // pass\n            }\n        }\n\n        this.keys  = [];\n        this.values = [];\n    }\n\n    _cleanupClosedWindows() {\n\n        let weakmap = this.weakmap;\n        let keys = this.keys;\n\n        for (let i = 0; i < keys.length; i++) {\n            let value = keys[i];\n\n            if (isWindow(value) && isWindowClosed(value)) {\n\n                if (weakmap) {\n                    try {\n                        weakmap.delete(value);\n                    } catch (err) {\n                        // pass\n                    }\n                }\n\n                keys.splice(i, 1);\n                this.values.splice(i, 1);\n\n                i -= 1;\n            }\n        }\n    }\n\n    isSafeToReadWrite(key : K) : boolean {\n\n        if (isWindow(key)) {\n            return false;\n        }\n\n        try {\n            noop(key && key.self);\n            noop(key && key[this.name]);\n        } catch (err) {\n            return false;\n        }\n\n        return true;\n    }\n\n    set(key : K, value : V) {\n\n        if (!key) {\n            throw new Error(`WeakMap expected key`);\n        }\n\n        let weakmap = this.weakmap;\n\n        if (weakmap) {\n            try {\n                weakmap.set(key, value);\n            } catch (err) {\n                delete this.weakmap;\n            }\n        }\n\n        if (!this.isSafeToReadWrite(key)) {\n\n            this._cleanupClosedWindows();\n\n            let keys = this.keys;\n            let values = this.values;\n            let index = safeIndexOf(keys, key);\n\n            if (index === -1) {\n                keys.push(key);\n                values.push(value);\n            } else {\n                values[index] = value;\n            }\n\n        } else {\n\n            let name = this.name;\n            let entry = key[name];\n\n            if (entry && entry[0] === key) {\n                entry[1] = value;\n            } else {\n                defineProperty(key, name, {\n                    value:    [ key, value ],\n                    writable: true\n                });\n            }\n        }\n    }\n\n    get(key : K) : V | void {\n\n        if (!key) {\n            throw new Error(`WeakMap expected key`);\n        }\n\n        let weakmap = this.weakmap;\n\n        if (weakmap) {\n            try {\n                if (weakmap.has(key)) {\n                    return weakmap.get(key);\n                }\n            } catch (err) {\n                delete this.weakmap;\n            }\n        }\n\n        if (!this.isSafeToReadWrite(key)) {\n\n            this._cleanupClosedWindows();\n\n            let keys = this.keys;\n            let index = safeIndexOf(keys, key);\n\n            if (index === -1) {\n                return;\n            }\n\n            return this.values[index];\n\n        } else {\n\n            let entry = key[this.name];\n\n            if (entry && entry[0] === key) {\n                return entry[1];\n            }\n        }\n    }\n\n    delete(key : K) {\n\n        if (!key) {\n            throw new Error(`WeakMap expected key`);\n        }\n\n        let weakmap = this.weakmap;\n\n        if (weakmap) {\n            try {\n                weakmap.delete(key);\n            } catch (err) {\n                delete this.weakmap;\n            }\n        }\n\n        if (!this.isSafeToReadWrite(key)) {\n\n            this._cleanupClosedWindows();\n\n            let keys = this.keys;\n            let index = safeIndexOf(keys, key);\n\n            if (index !== -1) {\n                keys.splice(index, 1);\n                this.values.splice(index, 1);\n            }\n\n        } else {\n\n            let entry = key[this.name];\n\n            if (entry && entry[0] === key) {\n                entry[0] = entry[1] = undefined;\n            }\n        }\n    }\n\n    has(key : K) : boolean {\n\n        if (!key) {\n            throw new Error(`WeakMap expected key`);\n        }\n\n        let weakmap = this.weakmap;\n\n        if (weakmap) {\n            try {\n                if (weakmap.has(key)) {\n                    return true;\n                }\n            } catch (err) {\n                delete this.weakmap;\n            }\n        }\n\n        if (!this.isSafeToReadWrite(key)) {\n\n            this._cleanupClosedWindows();\n\n            let index = safeIndexOf(this.keys, key);\n            return index !== -1;\n\n        } else {\n\n            let entry = key[this.name];\n\n            if (entry && entry[0] === key) {\n                return true;\n            }\n\n            return false;\n        }\n    }\n\n    getOrSet(key : K, getter : () => V) : V {\n        if (this.has(key)) {\n            // $FlowFixMe\n            return this.get(key);\n        }\n\n        let value = getter();\n        this.set(key, value);\n        return value;\n    }\n}\n","/* @flow */\n\nexport function hasNativeWeakMap() : boolean {\n\n    if (typeof WeakMap === 'undefined') {\n        return false;\n    }\n\n    if (typeof Object.freeze === 'undefined') {\n        return false;\n    }\n\n    try {\n\n        let testWeakMap = new WeakMap();\n        let testKey = {};\n        let testValue = '__testvalue__';\n\n        Object.freeze(testKey);\n\n        testWeakMap.set(testKey, testValue);\n\n        if (testWeakMap.get(testKey) === testValue) {\n            return true;\n        }\n\n        return false;\n\n    } catch (err) {\n\n        return false;\n    }\n}\n","/* @flow */\n\n// eslint-disable-next-line import/no-namespace\nimport * as INTERFACE from './interface';\n\nexport * from './interface';\nexport default INTERFACE;\n","export default function _inheritsLoose(subClass, superClass) {\n  subClass.prototype = Object.create(superClass.prototype);\n  subClass.prototype.constructor = subClass;\n  subClass.__proto__ = superClass;\n}","/* @flow */\n\nexport function getUserAgent() : string {\n    return window.navigator.mockUserAgent || window.navigator.userAgent;\n}\n\nexport function isDevice() : boolean {\n    let userAgent = getUserAgent();\n    if (userAgent.match(/Android|webOS|iPhone|iPad|iPod|bada|Symbian|Palm|CriOS|BlackBerry|IEMobile|WindowsMobile|Opera Mini/i)) {\n        return true;\n    }\n\n    return false;\n}\n\nexport function isWebView() : boolean {\n    let userAgent = getUserAgent();\n    return (/(iPhone|iPod|iPad|Macintosh).*AppleWebKit(?!.*Safari)/i).test(userAgent) ||\n        (/\\bwv\\b/).test(userAgent) ||\n    (/Android.*Version\\/(\\d)\\.(\\d)/i).test(userAgent);\n}\n\nexport function isStandAlone() : boolean {\n    return (window.navigator.standalone === true || window.matchMedia('(display-mode: standalone)').matches);\n}\n\nexport function isFacebookWebView(ua? : string = getUserAgent()) : boolean {\n    return (ua.indexOf('FBAN') !== -1) || (ua.indexOf('FBAV') !== -1);\n}\n\nexport function isFirefoxIOS(ua? : string = getUserAgent()) : boolean {\n    return (/FxiOS/i).test(ua);\n}\n\nexport function isEdgeIOS(ua? : string = getUserAgent()) : boolean {\n    return (/EdgiOS/i).test(ua);\n}\n\nexport function isOperaMini(ua? : string = getUserAgent()) : boolean {\n    return ua.indexOf('Opera Mini') > -1;\n}\n\nexport function isAndroid(ua? : string = getUserAgent()) : boolean {\n    return (/Android/).test(ua);\n}\n\nexport function isIos(ua? : string = getUserAgent()) : boolean {\n    return (/iPhone|iPod|iPad/).test(ua);\n}\n\nexport function isGoogleSearchApp(ua? : string = getUserAgent()) : boolean {\n    return (/\\bGSA\\b/).test(ua);\n}\n\nexport function isQQBrowser(ua? : string = getUserAgent()) : boolean {\n    return (/QQBrowser/).test(ua);\n}\n\nexport function isIosWebview(ua? : string = getUserAgent()) : boolean {\n    if (isIos(ua)) {\n        if (isGoogleSearchApp(ua)) {\n            return true;\n        }\n        return (/.+AppleWebKit(?!.*Safari)/).test(ua);\n    }\n    return false;\n}\n\nexport function isAndroidWebview(ua? : string = getUserAgent()) : boolean {\n    if (isAndroid(ua)) {\n        return (/Version\\/[\\d.]+/).test(ua) && !isOperaMini(ua);\n    }\n    return false;\n}\n\nexport function isIE() : boolean {\n\n    if (window.document.documentMode) {\n        return true;\n    }\n\n    return Boolean(\n        window.navigator &&\n        window.navigator.userAgent &&\n        (/Edge|MSIE|rv:11/i).test(window.navigator.userAgent)\n    );\n}\n\nexport function isIECompHeader() : boolean {\n    let mHttp = window.document.querySelector('meta[http-equiv=\"X-UA-Compatible\"]');\n    let mContent = window.document.querySelector('meta[content=\"IE=edge\"]');\n    if (mHttp && mContent) {\n        return true;\n    }\n    return false;\n}\n\nexport function isElectron() : boolean {\n    if (typeof process !== 'undefined' && process.versions && process.versions.electron) {\n        return true;\n    }\n    return false;\n}\n\nexport function isIEIntranet() : boolean {\n\n    // This status check only works for older versions of IE with document.documentMode set\n\n    if (window.document.documentMode) {\n        try {\n            let status = window.status;\n\n            window.status = 'testIntranetMode';\n\n            if (window.status === 'testIntranetMode') {\n                window.status = status;\n\n                return true;\n            }\n\n            return false;\n\n        } catch (err) {\n\n            return false;\n        }\n    }\n\n    return false;\n}\n\nexport function isMacOsCna() : boolean {\n    let userAgent = getUserAgent();\n    return (/Macintosh.*AppleWebKit(?!.*Safari)/i).test(userAgent);\n}\n\nexport function supportsPopups(ua? : string = getUserAgent()) : boolean {\n    return !(isIosWebview(ua) || isAndroidWebview(ua) || isOperaMini(ua) ||\n        isFirefoxIOS(ua) || isEdgeIOS(ua) || isFacebookWebView(ua) || isQQBrowser(ua) || isElectron() || isMacOsCna() || isStandAlone());\n}\n","/* @flow */\n\nimport { uniqueID, getGlobal, inlineMemoize } from './util';\nimport { isLocalStorageEnabled } from './dom';\n\ntype Getter<T> = <T>(handler : (Object) => T) => T;\n\nexport type Storage = {\n    getState : Getter<*>,\n    getID : () => string,\n    getSessionState : Getter<*>,\n    getSessionID : () => string\n};\n\nexport function getStorage({ name, version = 'latest', lifetime = (5 * 60 * 1000) } : { name : string, version? : string, lifetime? : number }) : Storage {\n    return inlineMemoize(getStorage, () => {\n        const STORAGE_KEY = `__${ name }_${ version }_storage__`;\n\n        let accessedStorage;\n\n        function getState<T>(handler : (storage : Object) => T) : T {\n\n            let localStorageEnabled = isLocalStorageEnabled();\n            let storage;\n\n            if (accessedStorage) {\n                storage = accessedStorage;\n            }\n\n            if (!storage && localStorageEnabled) {\n                let rawStorage = window.localStorage.getItem(STORAGE_KEY);\n\n                if (rawStorage) {\n                    storage = JSON.parse(rawStorage);\n                }\n            }\n\n            if (!storage) {\n                storage = getGlobal()[STORAGE_KEY];\n            }\n\n            if (!storage) {\n                storage = {\n                    id: uniqueID()\n                };\n            }\n\n            if (!storage.id) {\n                storage.id = uniqueID();\n            }\n\n            accessedStorage = storage;\n\n            let result = handler(storage);\n\n            if (localStorageEnabled) {\n                window.localStorage.setItem(STORAGE_KEY, JSON.stringify(storage));\n            } else {\n                getGlobal()[STORAGE_KEY] = storage;\n            }\n\n            accessedStorage = null;\n\n            return result;\n        }\n\n        function getID() : string {\n            return getState(storage => storage.id);\n        }\n\n        function getSession<T>(handler : (state : Object) => T) : T {\n            return getState(storage => {\n\n                let session = storage.__session__;\n                let now = Date.now();\n\n                if (session && ((now - session.created) > lifetime)) {\n                    session = null;\n                }\n\n                if (!session) {\n                    session = {\n                        guid:    uniqueID(),\n                        created: now\n                    };\n                }\n\n                storage.__session__ = session;\n\n                return handler(session);\n            });\n        }\n\n        function getSessionState<T>(handler : (state : Object) => T) : T {\n            return getSession(session => {\n                session.state = session.state || {};\n                return handler(session.state);\n            });\n        }\n\n        function getSessionID() : string {\n            return getSession(session => session.guid);\n        }\n\n        return {\n            getState,\n            getID,\n            getSessionState,\n            getSessionID\n        };\n    }, [ { name, version, lifetime } ]);\n}\n","/* @flow */\n/* eslint max-lines: off */\n\nimport { ZalgoPromise } from 'zalgo-promise/src';\nimport { linkFrameWindow, isWindowClosed,\n    type SameDomainWindowType, type CrossDomainWindowType } from 'cross-domain-utils/src';\nimport { WeakMap } from 'cross-domain-safe-weakmap/src';\n\nimport { inlineMemoize, noop, stringify, capitalizeFirstLetter,\n    once, extend, safeInterval } from './util';\nimport { isDevice } from './device';\nimport { KEY_CODES } from './constants';\nimport type { CancelableType } from './types';\n\ntype ElementRefType = string | HTMLElement;\n\nexport function isDocumentReady() : boolean {\n    return Boolean(document.body) && document.readyState === 'complete';\n}\n\nexport function urlEncode(str : string) : string {\n    return str.replace(/\\?/g, '%3F').replace(/&/g, '%26').replace(/#/g, '%23').replace(/\\+/g, '%2B');\n}\n\nexport function waitForWindowReady() : ZalgoPromise<void> {\n    return inlineMemoize(waitForWindowReady, () : ZalgoPromise<void> => {\n        return new ZalgoPromise(resolve => {\n            if (isDocumentReady()) {\n                resolve();\n            }\n\n            window.addEventListener('load', () => resolve());\n        });\n    });\n}\n\nexport function waitForDocumentReady() : ZalgoPromise<void> {\n    return inlineMemoize(waitForDocumentReady, () : ZalgoPromise<void> => {\n        return new ZalgoPromise(resolve => {\n\n            if (isDocumentReady()) {\n                return resolve();\n            }\n\n            let interval = setInterval(() => {\n                if (isDocumentReady()) {\n                    clearInterval(interval);\n                    return resolve();\n                }\n            }, 10);\n        });\n    });\n}\n\nexport function waitForDocumentBody() : ZalgoPromise<HTMLBodyElement> {\n    return waitForDocumentReady().then(() => {\n        if (document.body) {\n            return document.body;\n        }\n\n        throw new Error('Document ready but document.body not present');\n    });\n}\n\nexport function parseQuery(queryString : string) : Object {\n    return inlineMemoize(parseQuery, () : Object => {\n        let params = {};\n\n        if (!queryString) {\n            return params;\n        }\n\n        if (queryString.indexOf('=') === -1) {\n            return params;\n        }\n\n        for (let pair of queryString.split('&')) {\n            pair = pair.split('=');\n\n            if (pair[0] && pair[1]) {\n                params[decodeURIComponent(pair[0])] = decodeURIComponent(pair[1]);\n            }\n        }\n\n        return params;\n    }, [ queryString ]);\n}\n\n\nexport function getQueryParam(name : string) : string {\n    return parseQuery(window.location.search.slice(1))[name];\n}\n\nexport function urlWillRedirectPage(url : string) : boolean {\n\n    if (url.indexOf('#') === -1) {\n        return true;\n    }\n\n    if (url.indexOf('#') === 0) {\n        return false;\n    }\n\n    if (url.split('#')[0] === window.location.href.split('#')[0]) {\n        return false;\n    }\n\n    return true;\n}\n\nexport function formatQuery(obj : { [ string ] : string } = {}) : string {\n\n    return Object.keys(obj).filter(key => {\n        return typeof obj[key] === 'string';\n    }).map(key => {\n        return `${ urlEncode(key) }=${ urlEncode(obj[key]) }`;\n    }).join('&');\n}\n\nexport function extendQuery(originalQuery : string, props : { [ string ] : string } = {}) : string {\n\n    if (!props || !Object.keys(props).length) {\n        return originalQuery;\n    }\n\n    return formatQuery({\n        ...parseQuery(originalQuery),\n        ...props\n    });\n}\n\nexport function extendUrl(url : string, options : { query? : { [string] : string }, hash? : { [string] : string } } = {}) : string {\n\n    let query = options.query || {};\n    let hash = options.hash || {};\n\n    let originalUrl;\n    let originalQuery;\n    let originalHash;\n\n    [ originalUrl, originalHash ] = url.split('#');\n    [ originalUrl, originalQuery ] = originalUrl.split('?');\n\n    let queryString = extendQuery(originalQuery, query);\n    let hashString = extendQuery(originalHash, hash);\n\n    if (queryString) {\n        originalUrl = `${ originalUrl }?${ queryString }`;\n    }\n\n    if (hashString) {\n        originalUrl = `${ originalUrl }#${ hashString }`;\n    }\n\n    return originalUrl;\n}\n\nexport function redirect(url : string, win : CrossDomainWindowType = window) : ZalgoPromise<void> {\n    return new ZalgoPromise(resolve => {\n        win.location = url;\n        if (!urlWillRedirectPage(url)) {\n            resolve();\n        }\n    });\n}\n\nexport function hasMetaViewPort() : boolean {\n    let meta = document.querySelector('meta[name=viewport]');\n\n    if (isDevice() && window.screen.width < 660 && !meta) {\n        return false;\n    }\n\n    return true;\n}\n\nexport function isElementVisible(el : HTMLElement) : boolean {\n    return Boolean(el.offsetWidth || el.offsetHeight || el.getClientRects().length);\n}\n\nexport function enablePerformance() : boolean {\n    return inlineMemoize(enablePerformance, () : boolean => {\n        /* eslint-disable compat/compat */\n        return Boolean(\n            window.performance &&\n            performance.now &&\n            performance.timing &&\n            performance.timing.connectEnd &&\n            performance.timing.navigationStart &&\n            (Math.abs(performance.now() - Date.now()) > 1000) &&\n            (performance.now() - (performance.timing.connectEnd - performance.timing.navigationStart)) > 0\n        );\n        /* eslint-enable compat/compat */\n    });\n}\n\nexport function getPageRenderTime() : ZalgoPromise<?number> {\n    return waitForDocumentReady().then(() => {\n\n        if (!enablePerformance()) {\n            return;\n        }\n\n        let timing = window.performance.timing;\n\n        if (timing.connectEnd && timing.domInteractive) {\n            return timing.domInteractive - timing.connectEnd;\n        }\n    });\n}\n\nexport function htmlEncode(html : string = '') : string {\n    return html.toString()\n        .replace(/&/g, '&amp;')\n        .replace(/</g, '&lt;')\n        .replace(/>/g, '&gt;')\n        .replace(/\"/g, '&quot;')\n        .replace(/'/g, '&#39;')\n        .replace(/\\//g, '&#x2F;');\n}\n\nexport function isBrowser() : boolean {\n    return (typeof window !== 'undefined');\n}\n\nexport function querySelectorAll(selector : string, doc : HTMLElement = window.document) : Array<Element> {\n    return Array.prototype.slice.call(doc.querySelectorAll(selector));\n}\n\nexport function onClick(element : Element, handler : (Event) => void) {\n    element.addEventListener('touchstart', noop);\n    element.addEventListener('click', handler);\n    element.addEventListener('keypress', (event : Event) => {\n        // $FlowFixMe\n        if (event.keyCode === KEY_CODES.ENTER) {\n            return handler(event);\n        }\n    });\n}\n\nexport function getScript({ host = window.location.host, path } : { host? : string, path : string }) : ?HTMLScriptElement {\n    return inlineMemoize(getScript, () : ?HTMLScriptElement => {\n\n        let url = `${ host }${ path }`;\n        let scripts = Array.prototype.slice.call(document.getElementsByTagName('script'));\n\n        for (let script of scripts) {\n            if (!script.src) {\n                continue;\n            }\n\n            let src = script.src.replace(/^https?:\\/\\//, '').split('?')[0];\n\n            if (src === url) {\n                return script;\n            }\n        }\n    }, [ path ]);\n}\n\nexport function isLocalStorageEnabled() : boolean {\n    return inlineMemoize(isLocalStorageEnabled, () => {\n        try {\n            if (typeof window === 'undefined') {\n                return false;\n            }\n\n            if (window.localStorage) {\n                let value = Math.random().toString();\n                window.localStorage.setItem('__test__localStorage__', value);\n                let result = window.localStorage.getItem('__test__localStorage__');\n                window.localStorage.removeItem('__test__localStorage__');\n                if (value === result) {\n                    return true;\n                }\n            }\n        } catch (err) {\n            // pass\n        }\n        return false;\n    });\n}\n\nexport function getBrowserLocales() : Array<{ country? : string, lang : string }> {\n    let nav = window.navigator;\n\n    let locales = nav.languages\n        ? Array.prototype.slice.apply(nav.languages)\n        : [];\n\n    if (nav.language) {\n        locales.push(nav.language);\n    }\n\n    if (nav.userLanguage) {\n        locales.push(nav.userLanguage);\n    }\n\n    return locales.map(locale => {\n\n        if (locale && locale.match(/^[a-z]{2}[-_][A-Z]{2}$/)) {\n            let [ lang, country ] = locale.split(/[-_]/);\n            return { country, lang };\n        }\n\n        if (locale && locale.match(/^[a-z]{2}$/)) {\n            return { lang: locale };\n        }\n\n        return null;\n\n    }).filter(Boolean);\n}\n\n\nexport function appendChild(container : HTMLElement, child : HTMLElement | Text) {\n    container.appendChild(child);\n}\n\nexport function isElement(element : mixed) : boolean {\n\n    if (element instanceof window.Element) {\n        return true;\n    }\n\n    if (element !== null && typeof element === 'object' && element.nodeType === 1 && typeof element.style === 'object' && typeof element.ownerDocument === 'object') {\n        return true;\n    }\n\n    return false;\n}\n\nexport function getElementSafe(id : ElementRefType, doc : Document | HTMLElement = document) : ?HTMLElement {\n\n    if (isElement(id)) {\n        // $FlowFixMe\n        return id;\n    }\n\n    if (typeof id === 'string') {\n        return doc.querySelector(id);\n    }\n}\n\nexport function getElement(id : ElementRefType, doc : Document | HTMLElement = document) : HTMLElement {\n\n    let element = getElementSafe(id, doc);\n\n    if (element) {\n        return element;\n    }\n\n    throw new Error(`Can not find element: ${ stringify(id) }`);\n}\n\nexport function elementReady(id : ElementRefType) : ZalgoPromise<window.HTMLElement> {\n    return new ZalgoPromise((resolve, reject) => {\n\n        let name = stringify(id);\n        let el = getElementSafe(id);\n\n        if (el) {\n            return resolve(el);\n        }\n\n        if (isDocumentReady()) {\n            return reject(new Error(`Document is ready and element ${ name } does not exist`));\n        }\n\n        let interval = setInterval(() => {\n\n            el = getElementSafe(id);\n\n            if (el) {\n                clearInterval(interval);\n                return resolve(el);\n            }\n\n            if (isDocumentReady()) {\n                clearInterval(interval);\n                return reject(new Error(`Document is ready and element ${ name } does not exist`));\n            }\n        }, 10);\n    });\n}\n\nexport function PopupOpenError(message : string) {\n    this.message = message;\n}\n\nPopupOpenError.prototype = Object.create(Error.prototype);\n\ntype PopupOptions = {|\n    name? : string,\n    width? : number,\n    height? : number,\n    top? : number,\n    left? : number,\n    status? : 0 | 1,\n    resizable? : 0 | 1,\n    toolbar? : 0 | 1,\n    menubar? : 0 | 1,\n    scrollbars? : 0 | 1\n|};\n\nexport function popup(url : string, options? : PopupOptions) : CrossDomainWindowType {\n\n    // $FlowFixMe\n    options = options || {};\n\n    let { width, height } = options;\n\n    let top = 0;\n    let left = 0;\n\n    if (width) {\n        if (window.outerWidth) {\n            left = Math.round((window.outerWidth - width) / 2) + window.screenX;\n        } else if (window.screen.width) {\n            left = Math.round((window.screen.width - width) / 2);\n        }\n    }\n\n    if (height) {\n        if (window.outerHeight) {\n            top = Math.round((window.outerHeight - height) / 2) + window.screenY;\n        } else if (window.screen.height) {\n            top = Math.round((window.screen.height - height) / 2);\n        }\n    }\n\n    options = {\n        top,\n        left,\n        width,\n        height,\n        status:     1,\n        toolbar:    0,\n        menubar:    0,\n        resizable:  1,\n        scrollbars: 1,\n        ...options\n    };\n\n    let name = options.name || '';\n    delete options.name;\n\n    // eslint-disable-next-line array-callback-return\n    let params = Object.keys(options).map(key => {\n        // $FlowFixMe\n        if (options[key]) {\n            return `${ key }=${ stringify(options[key]) }`;\n        }\n    }).filter(Boolean).join(',');\n\n    let win;\n\n    try {\n        win = window.open(url, name, params, true);\n    } catch (err) {\n        throw new PopupOpenError(`Can not open popup window - ${ err.stack || err.message }`);\n    }\n\n    if (isWindowClosed(win)) {\n        let err = new PopupOpenError(`Can not open popup window - blocked`);\n        throw err;\n    }\n\n    window.addEventListener('unload', () => win.close());\n\n    return win;\n}\n\n\nexport function writeToWindow(win : SameDomainWindowType, html : string) {\n    try {\n        win.document.open();\n        win.document.write(html);\n        win.document.close();\n    } catch (err) {\n        try {\n            win.location = `javascript: document.open(); document.write(${ JSON.stringify(html) }); document.close();`;\n        } catch (err2) {\n            // pass\n        }\n    }\n}\n\nexport function writeElementToWindow(win : SameDomainWindowType, el : HTMLElement) {\n\n    let tag = el.tagName.toLowerCase();\n\n    if (tag !== 'html') {\n        throw new Error(`Expected element to be html, got ${ tag }`);\n    }\n\n    let documentElement = win.document.documentElement;\n\n    while (documentElement.children && documentElement.children.length) {\n        documentElement.removeChild(documentElement.children[0]);\n    }\n\n    while (el.children.length) {\n        documentElement.appendChild(el.children[0]);\n    }\n}\n\nexport function setStyle(el : HTMLElement, styleText : string, doc : Document = window.document) {\n    // $FlowFixMe\n    if (el.styleSheet) {\n        // $FlowFixMe\n        el.styleSheet.cssText = styleText;\n    } else {\n        el.appendChild(doc.createTextNode(styleText));\n    }\n}\n\nexport type ElementOptionsType = {\n    style? : { [ string ] : string },\n    class? : ?Array<string>,\n    attributes? : { [ string ] : string },\n    styleSheet? : ?string,\n    html? : ?string\n};\n\nlet awaitFrameLoadPromises : WeakMap<HTMLIFrameElement, ZalgoPromise<HTMLIFrameElement>>;\n\nexport function awaitFrameLoad(frame : HTMLIFrameElement) : ZalgoPromise<HTMLIFrameElement> {\n    awaitFrameLoadPromises = awaitFrameLoadPromises || new WeakMap();\n\n    if (awaitFrameLoadPromises.has(frame)) {\n        let promise = awaitFrameLoadPromises.get(frame);\n        if (promise) {\n            return promise;\n        }\n    }\n\n    let promise = new ZalgoPromise((resolve, reject) => {\n        frame.addEventListener('load', () => {\n            linkFrameWindow(frame);\n            resolve(frame);\n        });\n\n        frame.addEventListener('error', (err : Event) => {\n            if (frame.contentWindow) {\n                resolve(frame);\n            } else {\n                reject(err);\n            }\n        });\n    });\n\n    awaitFrameLoadPromises.set(frame, promise);\n\n    return promise;\n}\n\nexport function awaitFrameWindow(frame : HTMLIFrameElement) : ZalgoPromise<CrossDomainWindowType> {\n\n    if (frame.contentWindow) {\n        return ZalgoPromise.resolve(frame.contentWindow);\n    }\n\n    return awaitFrameLoad(frame).then(loadedFrame => {\n\n        if (!loadedFrame.contentWindow) {\n            throw new Error(`Could not find window in iframe`);\n        }\n\n        return loadedFrame.contentWindow;\n    });\n}\n\nexport function createElement(tag : string = 'div', options : ElementOptionsType = {}, container : ?HTMLElement) : HTMLElement {\n\n    tag = tag.toLowerCase();\n    let element = document.createElement(tag);\n\n    if (options.style) {\n        extend(element.style, options.style);\n    }\n\n    if (options.class) {\n        element.className = options.class.join(' ');\n    }\n\n    if (options.attributes) {\n        for (let key of Object.keys(options.attributes)) {\n            element.setAttribute(key, options.attributes[key]);\n        }\n    }\n\n    if (options.styleSheet) {\n        setStyle(element, options.styleSheet);\n    }\n\n    if (container) {\n        appendChild(container, element);\n    }\n\n    if (options.html) {\n        if (tag === 'iframe') {\n            // $FlowFixMe\n            if (!container || !element.contentWindow) {\n                throw new Error(`Iframe html can not be written unless container provided and iframe in DOM`);\n            }\n\n            // $FlowFixMe\n            writeToWindow(element.contentWindow, options.html);\n\n        } else {\n            element.innerHTML = options.html;\n        }\n    }\n\n    return element;\n}\n\n\nexport type IframeElementOptionsType = {\n    style? : { [ string ] : string },\n    class? : ?Array<string>,\n    attributes? : { [ string ] : string },\n    styleSheet? : ?string,\n    html? : ?string,\n    url? : ?string\n};\n\nexport function iframe(options : IframeElementOptionsType = {}, container : HTMLElement, attempts : number = 3) : HTMLIFrameElement {\n\n    let el = getElement(container);\n\n    let attributes = options.attributes || {};\n    let style = options.style || {};\n\n    let frame = createElement('iframe', {\n        attributes: {\n            frameBorder:       '0',\n            allowTransparency: 'true',\n            ...attributes\n        },\n        style: {\n            backgroundColor: 'transparent',\n            ...style\n        },\n        html:  options.html,\n        class: options.class\n    });\n\n    // $FlowFixMe\n    awaitFrameLoad(frame);\n\n    el.appendChild(frame);\n\n    // $FlowFixMe\n    let win = frame.contentWindow;\n\n    if (win) {\n        try {\n            // $FlowFixMe\n            noop(win.name);\n        } catch (err) {\n            el.removeChild(frame);\n\n            if (!attempts) {\n                throw new Error(`Frame is cross-domain: ${ err.stack }`);\n            }\n\n            return iframe(options, container, attempts - 1);\n        }\n    }\n\n    if (options.url || window.navigator.userAgent.match(/MSIE|Edge/i)) {\n        frame.setAttribute('src', options.url || 'about:blank');\n    }\n\n    // $FlowFixMe\n    return frame;\n}\n\nexport function addEventListener(obj : HTMLElement, event : string, handler : (event : Event) => void) : CancelableType {\n    obj.addEventListener(event, handler);\n    return {\n        cancel() {\n            obj.removeEventListener(event, handler);\n        }\n    };\n}\n\nexport function bindEvents(element : HTMLElement, eventNames : Array<string>, handler : (event : Event) => void) : CancelableType {\n\n    handler = once(handler);\n\n    for (let eventName of eventNames) {\n        element.addEventListener(eventName, handler);\n    }\n\n    return {\n        cancel: once(() => {\n            for (let eventName of eventNames) {\n                element.removeEventListener(eventName, handler);\n            }\n        })\n    };\n}\n\nconst VENDOR_PREFIXES = [ 'webkit', 'moz', 'ms', 'o' ];\n\nexport function setVendorCSS(element : HTMLElement, name : string, value : string) {\n\n    // $FlowFixMe\n    element.style[name] = value;\n\n    let capitalizedName = capitalizeFirstLetter(name);\n\n    for (let prefix of VENDOR_PREFIXES) {\n        // $FlowFixMe\n        element.style[`${ prefix }${ capitalizedName }`] = value;\n    }\n}\n\nfunction isValidAnimation(element : HTMLElement, name : string) : boolean {\n\n    let CSSRule = window.CSSRule;\n\n    const KEYFRAMES_RULE = CSSRule.KEYFRAMES_RULE || CSSRule.WEBKIT_KEYFRAMES_RULE || CSSRule.MOZ_KEYFRAMES_RULE ||\n        CSSRule.O_KEYFRAMES_RULE || CSSRule.MS_KEYFRAMES_RULE;\n\n    let stylesheets = element.ownerDocument.styleSheets;\n\n    try {\n        for (let i = 0; i < stylesheets.length; i++) {\n\n            // $FlowFixMe\n            let cssRules = stylesheets[i].cssRules;\n\n            if (!cssRules) {\n                continue;\n            }\n\n            for (let j = 0; j < cssRules.length; j++) {\n\n                let cssRule = cssRules[j];\n\n                if (!cssRule) {\n                    continue;\n                }\n\n                if (cssRule.type === KEYFRAMES_RULE && cssRule.name === name) {\n                    return true;\n                }\n            }\n        }\n    } catch (err) {\n\n        return false;\n    }\n\n\n    return false;\n}\n\n\nconst ANIMATION_START_EVENTS = [ 'animationstart', 'webkitAnimationStart', 'oAnimationStart', 'MSAnimationStart' ];\nconst ANIMATION_END_EVENTS   = [ 'animationend', 'webkitAnimationEnd', 'oAnimationEnd', 'MSAnimationEnd' ];\n\nexport function animate(element : ElementRefType, name : string, clean : (Function) => void, timeout : number = 1000) : ZalgoPromise<void> {\n    return new ZalgoPromise((resolve, reject) => {\n\n        let el = getElement(element);\n\n        if (!el || !isValidAnimation(el, name)) {\n            return resolve();\n        }\n\n        let hasStarted = false;\n\n        let startTimeout;\n        let endTimeout;\n        let startEvent;\n        let endEvent;\n\n        function cleanUp() {\n            setVendorCSS(el, 'animationName', '');\n            clearTimeout(startTimeout);\n            clearTimeout(endTimeout);\n            startEvent.cancel();\n            endEvent.cancel();\n        }\n\n        startEvent = bindEvents(el, ANIMATION_START_EVENTS, event => {\n\n            // $FlowFixMe\n            if (event.target !== el || event.animationName !== name) {\n                return;\n            }\n\n            clearTimeout(startTimeout);\n\n            event.stopPropagation();\n\n            startEvent.cancel();\n            hasStarted = true;\n\n            endTimeout = setTimeout(() => {\n                cleanUp();\n                resolve();\n            }, timeout);\n        });\n\n        endEvent = bindEvents(el, ANIMATION_END_EVENTS, event => {\n\n            // $FlowFixMe\n            if (event.target !== el || event.animationName !== name) {\n                return;\n            }\n\n            cleanUp();\n\n            // $FlowFixMe\n            if (typeof event.animationName === 'string' && event.animationName !== name) {\n                return reject(`Expected animation name to be ${ name }, found ${ event.animationName }`);\n            }\n\n            return resolve();\n        });\n\n        setVendorCSS(el, 'animationName', name);\n\n        startTimeout = setTimeout(() => {\n            if (!hasStarted) {\n                cleanUp();\n                return resolve();\n            }\n        }, 200);\n\n        if (clean) {\n            clean(cleanUp);\n        }\n    });\n}\n\nconst STYLE = {\n\n    DISPLAY: {\n        NONE:  'none',\n        BLOCK: 'block'\n    },\n\n    VISIBILITY: {\n        VISIBLE: 'visible',\n        HIDDEN:  'hidden'\n    },\n\n    IMPORTANT: 'important'\n};\n\nexport function makeElementVisible(element : HTMLElement) {\n    element.style.setProperty('visibility', '');\n}\n\nexport function makeElementInvisible(element : HTMLElement) {\n    element.style.setProperty('visibility', STYLE.VISIBILITY.HIDDEN, STYLE.IMPORTANT);\n}\n\n\nexport function showElement(element : HTMLElement) {\n    element.style.setProperty('display', '');\n}\n\nexport function hideElement(element : HTMLElement) {\n    element.style.setProperty('display', STYLE.DISPLAY.NONE, STYLE.IMPORTANT);\n}\n\nexport function destroyElement(element : HTMLElement) {\n    if (element && element.parentNode) {\n        element.parentNode.removeChild(element);\n    }\n}\n\nexport function showAndAnimate(element : HTMLElement, name : string, clean : (Function) => void) : ZalgoPromise<void> {\n    let animation = animate(element, name, clean);\n    showElement(element);\n    return animation;\n}\n\nexport function animateAndHide(element : HTMLElement, name : string, clean : (Function) => void) : ZalgoPromise<void> {\n    return animate(element, name, clean).then(() => {\n        hideElement(element);\n    });\n}\n\nexport function addClass(element : HTMLElement, name : string) {\n    element.classList.add(name);\n}\n\nexport function removeClass(element : HTMLElement, name : string) {\n    element.classList.remove(name);\n}\n\nexport function isElementClosed(el : HTMLElement) : boolean {\n    if (!el || !el.parentNode) {\n        return true;\n    }\n    return false;\n}\n\nexport function watchElementForClose(element : HTMLElement, handler : () => mixed) : CancelableType {\n    handler = once(handler);\n\n    let interval;\n\n    if (isElementClosed(element)) {\n        handler();\n    } else {\n        interval = safeInterval(() => {\n            if (isElementClosed(element)) {\n                interval.cancel();\n                handler();\n            }\n        }, 50);\n    }\n\n    return {\n        cancel() {\n            if (interval) {\n                interval.cancel();\n            }\n        }\n    };\n}\n\nexport function fixScripts(el : HTMLElement, doc : Document = window.document) {\n    for (let script of querySelectorAll('script', el)) {\n        let parentNode = script.parentNode;\n\n        if (!parentNode) {\n            continue;\n        }\n\n        let newScript = doc.createElement('script');\n        newScript.text = script.textContent;\n        parentNode.replaceChild(newScript, script);\n    }\n}\n\ntype OnResizeOptions = {|\n    width? : boolean,\n    height? : boolean,\n    interval? : number,\n    win? : SameDomainWindowType\n|};\n\nexport function onResize(el : HTMLElement, handler : ({ width : number, height : number }) => void, { width = true, height = true, interval = 100, win = window } : OnResizeOptions = {}) : {} {\n    let currentWidth = el.offsetWidth;\n    let currentHeight = el.offsetHeight;\n\n    handler({ width: currentWidth, height: currentHeight });\n\n    let check = () => {\n        let newWidth = el.offsetWidth;\n        let newHeight = el.offsetHeight;\n\n        if ((width && newWidth !== currentWidth) || (height && newHeight !== currentHeight)) {\n            handler({ width: newWidth, height: newHeight });\n        }\n\n        currentWidth = newWidth;\n        currentHeight = newHeight;\n    };\n\n    let observer;\n    let timeout;\n\n    if (typeof win.ResizeObserver !== 'undefined') {\n        observer = new win.ResizeObserver(check);\n        observer.observe(el);\n\n    } else if (typeof win.MutationObserver !== 'undefined') {\n        observer = new win.MutationObserver(check);\n        observer.observe(el, {\n            attributes:    true,\n            childList:     true,\n            subtree:       true,\n            characterData: false\n        });\n        win.addEventListener('resize', check);\n    } else {\n        let loop = () => {\n            check();\n            timeout = setTimeout(loop, interval);\n        };\n        loop();\n    }\n\n    return {\n        cancel: () => {\n            observer.disconnect();\n            window.removeEventListener('resize', check);\n            clearTimeout(timeout);\n        }\n    };\n}\n","/* @flow */\n\nimport { noop } from './util';\nimport { getStorage } from './storage';\n\nfunction getBelterExperimentStorage() : Object {\n    return getStorage({ name: 'belter_experiment' });\n}\n\nfunction isEventUnique(name : string) : boolean {\n    return getBelterExperimentStorage().getSessionState(state => {\n        state.loggedBeacons = state.loggedBeacons || [];\n\n        if (state.loggedBeacons.indexOf(name) === -1) {\n            state.loggedBeacons.push(name);\n            return true;\n        }\n\n        return false;\n    });\n}\n\nexport type Experiment = {\n    isEnabled : () => boolean,\n    isDisabled : () => boolean,\n    getTreatment : () => string,\n    log : (string, payload? : { [string] : ?string }) => Experiment,\n    logStart : (payload? : { [string] : ?string }) => Experiment,\n    logComplete : (payload? : { [string] : ?string }) => Experiment\n};\n\nfunction getThrottlePercentile(name : string) : number {\n    return getBelterExperimentStorage().getState(state => {\n        state.throttlePercentiles = state.throttlePercentiles || {};\n        state.throttlePercentiles[name] = state.throttlePercentiles[name] || Math.floor(Math.random() * 100);\n        return state.throttlePercentiles[name];\n    });\n}\n\nconst THROTTLE_GROUP = {\n    TEST:     'test',\n    CONTROL:  'control',\n    THROTTLE: 'throttle'\n};\n\ntype ExperimentOptions = {\n    name : string,\n    sample? : number,\n    logTreatment? : ({ name : string, treatment : string }) => void,\n    logCheckpoint? : ({ name : string, treatment : string, checkpoint : string, payload? : { [string] : ?string } }) => void\n};\n\nexport function experiment({ name, sample = 50, logTreatment = noop, logCheckpoint = noop } : ExperimentOptions) : Experiment {\n\n    let throttle = getThrottlePercentile(name);\n\n    let group;\n\n    if (throttle < sample) {\n        group = THROTTLE_GROUP.TEST;\n    } else if ((sample >= 50) || ((sample <= throttle) && (throttle < (sample * 2)))) {\n        group = THROTTLE_GROUP.CONTROL;\n    } else {\n        group = THROTTLE_GROUP.THROTTLE;\n    }\n\n    let treatment = `${ name }_${ group }`;\n\n    let started = false;\n    let forced = false;\n\n    try {\n        if (window.localStorage && window.localStorage.getItem(name)) {\n            forced = true;\n        }\n    } catch (err) {\n        // pass\n    }\n\n    return {\n\n        isEnabled() : boolean {\n            return (group === THROTTLE_GROUP.TEST) || forced;\n        },\n\n        isDisabled() : boolean {\n            return (group !== THROTTLE_GROUP.TEST) && !forced;\n        },\n\n        getTreatment() : string {\n            return treatment;\n        },\n\n        log(checkpoint : string, payload? : { [string] : ?string } = {}) : Experiment {\n            if (!started) {\n                return this;\n            }\n\n            if (isEventUnique(`${ name }_${ treatment }`)) {\n                logTreatment({ name, treatment });\n            }\n\n            if (isEventUnique(`${ name }_${ treatment }_${ checkpoint }`)) {\n                logCheckpoint({ name, treatment, checkpoint, payload });\n            }\n\n            return this;\n        },\n\n        logStart(payload? : { [string] : ?string } = {}) : Experiment {\n            started = true;\n            return this.log(`start`, payload);\n        },\n\n        logComplete(payload? : { [string] : ?string } = {}) : Experiment {\n            return this.log(`complete`, payload);\n        }\n    };\n}\n","/* @flow */\n\nimport { getGlobal } from './util';\n\nexport function getGlobalNameSpace<T : Object>({ name, version = 'latest' } : { name : string, version? : string }) : { get : (string, defValue? : T) => T } {\n\n    let global = getGlobal();\n    let globalKey = `__${ name }__${ version }_global__`;\n\n    let namespace = global[globalKey] = global[globalKey] || {};\n\n    return {\n        get: (key : string, defValue? : T) : T => {\n            // $FlowFixMe\n            defValue = defValue || {};\n            let item = namespace[key] = namespace[key] || defValue;\n            return item;\n        }\n    };\n}\n","/* @flow */\n\nimport { ZalgoPromise } from 'zalgo-promise/src';\nimport { type SameDomainWindowType } from 'cross-domain-utils/src';\n\ntype RequestOptionsType = {\n    url : string,\n    method? : string,\n    headers? : { [key : string] : string },\n    json? : Object,\n    data? : { [key : string] : string },\n    body? : string,\n    win? : SameDomainWindowType,\n    timeout? : number\n};\n\ntype ResponseType = {\n    status : number,\n    headers : { [string] : string },\n    body : Object\n};\n\nconst HEADERS = {\n    CONTENT_TYPE: 'content-type',\n    ACCEPT:       'accept'\n};\n\nlet headerBuilders = [];\n\nfunction parseHeaders(rawHeaders : string = '') : { [string] : string } {\n    let result = {};\n    for (let line of rawHeaders.trim().split('\\n')) {\n        let [ key, ...values ] = line.split(':');\n        result[key.toLowerCase()] = values.join(':').trim();\n    }\n    return result;\n}\n\nexport function request({ url, method = 'get', headers = {}, json, data, body, win = window, timeout = 0 } : RequestOptionsType) : ZalgoPromise<ResponseType> {\n    return new ZalgoPromise((resolve, reject) => {\n\n        if ((json && data) || (json && body) || (data && json)) {\n            throw new Error(`Only options.json or options.data or options.body should be passed`);\n        }\n\n        let normalizedHeaders = {};\n\n        for (let key of Object.keys(headers)) {\n            normalizedHeaders[key.toLowerCase()] = headers[key];\n        }\n\n        if (json) {\n            normalizedHeaders[HEADERS.CONTENT_TYPE] = normalizedHeaders[HEADERS.CONTENT_TYPE] || 'application/json';\n        } else if (data || body) {\n            normalizedHeaders[HEADERS.CONTENT_TYPE] = normalizedHeaders[HEADERS.CONTENT_TYPE] || 'application/x-www-form-urlencoded; charset=utf-8';\n        }\n\n        normalizedHeaders[HEADERS.ACCEPT] = normalizedHeaders[HEADERS.ACCEPT] || 'application/json';\n\n        for (let headerBuilder of headerBuilders) {\n            let builtHeaders = headerBuilder();\n\n            for (let key of Object.keys(builtHeaders)) {\n                normalizedHeaders[key.toLowerCase()] = builtHeaders[key];\n            }\n        }\n\n        let xhr = new win.XMLHttpRequest();\n\n        xhr.addEventListener('load', function xhrLoad() : void {\n\n            let responseHeaders = parseHeaders(this.getAllResponseHeaders());\n\n            if (!this.status) {\n                return reject(new Error(`Request to ${ method.toLowerCase() } ${ url } failed: no response status code.`));\n            }\n            \n            let contentType = responseHeaders['content-type'];\n            let isJSON = contentType && (contentType.indexOf('application/json') === 0 || contentType.indexOf('text/json') === 0);\n            let responseBody = this.responseText;\n\n            try {\n                responseBody = JSON.parse(responseBody);\n            } catch (err) {\n                if (isJSON) {\n                    return reject(new Error(`Invalid json: ${ this.responseText }.`));\n                }\n            }\n\n            let res = {\n                status:  this.status,\n                headers: responseHeaders,\n                body:    responseBody\n            };\n\n            return resolve(res);\n\n        }, false);\n\n        xhr.addEventListener('error', (evt) => {\n            reject(new Error(`Request to ${ method.toLowerCase() } ${ url } failed: ${ evt.toString() }.`));\n        }, false);\n\n        xhr.open(method, url, true);\n\n        for (let key in normalizedHeaders) {\n            if (normalizedHeaders.hasOwnProperty(key)) {\n                xhr.setRequestHeader(key, normalizedHeaders[key]);\n            }\n        }\n\n        if (json) {\n            body = JSON.stringify(json);\n        } else if (data) {\n            body = Object.keys(data).map(key => {\n                return `${ encodeURIComponent(key) }=${ data ? encodeURIComponent(data[key]) : '' }`;\n            }).join('&');\n        }\n\n        xhr.timeout = timeout;\n        xhr.ontimeout = function xhrTimeout() {\n            reject(new Error(`Request to ${ method.toLowerCase() } ${ url } has timed out`));\n        };\n\n        xhr.send(body);\n    });\n}\n\nexport function addHeaderBuilder(method : () => { [string] : string }) {\n    headerBuilders.push(method);\n}\n","/* @flow */\n\nimport { memoize, promisify } from './util';\n\nexport function memoized(target : Object, name : string, descriptor : Object) {\n    descriptor.value = memoize(descriptor.value, { name, thisNamespace: true });\n}\n\nexport function promise(target : Object, name : string, descriptor : Object) {\n    descriptor.value = promisify(descriptor.value, { name });\n}\n","/* @flow */\n\nexport function isPerc(str : string) : boolean {\n    return typeof str === 'string' && (/^[0-9]+%$/).test(str);\n}\n\nexport function isPx(str : string) : boolean {\n    return typeof str === 'string' && (/^[0-9]+px$/).test(str);\n}\n\nexport function toNum(val : string | number) : number {\n\n    if (typeof val === 'number') {\n        return val;\n    }\n\n    let match = val.match(/^([0-9]+)(px|%)$/);\n\n    if (!match) {\n        throw new Error(`Could not match css value from ${ val }`);\n    }\n\n    return parseInt(match[1], 10);\n}\n\nexport function toPx(val : number | string) : string {\n    return `${ toNum(val) }px`;\n}\n\nexport function toCSS(val : number | string) : string {\n\n    if (typeof val === 'number') {\n        return toPx(val);\n    }\n\n    return isPerc(val) ? val : toPx(val);\n}\n\nexport function percOf(num : number, perc : string) : number {\n    return parseInt(num * toNum(perc)  / 100, 10);\n}\n\nexport function normalizeDimension(dim : string | number, max : number) : number {\n    if (typeof dim === 'number') {\n        return dim;\n    } else if (isPerc(dim)) {\n        return percOf(max, dim);\n    } else if (isPx(dim)) {\n        return toNum(dim);\n    } else {\n        throw new Error(`Can not normalize dimension: ${ dim }`);\n    }\n}\n","/* @flow */\n\nimport { ZalgoPromise } from 'zalgo-promise/src';\n\nimport { noop, tryCatch, removeFromArray } from './util';\n\ntype Handler = <T, A : $ReadOnlyArray<mixed>>(name : string, fn? : (...args : A) => T) => (...args : A) => T; // eslint-disable-line no-undef\ntype Wrapper<T> = ({ expect : Handler, avoid : Handler, expectError : Handler, error : Handler }) => (ZalgoPromise<T> | void);\n\nexport function wrapPromise<T>(method : Wrapper<T>, { timeout = 5000 } : { timeout? : number } = {}) : ZalgoPromise<void> {\n    let expected : Array<string> = [];\n    let promises : Array<ZalgoPromise<*>> = [];\n\n    let timeoutPromise = ZalgoPromise.delay(timeout);\n\n    let expect : Handler = (name, fn = noop) => {\n        expected.push(name);\n        \n        // $FlowFixMe\n        return function expectWrapper(...args) : * {\n            removeFromArray(expected, name);\n\n            // $FlowFixMe\n            let { result, error } = tryCatch(() => fn.call(this, ...args));\n\n            if (error) {\n                promises.push(ZalgoPromise.asyncReject(error));\n                throw error;\n            }\n\n            promises.push(ZalgoPromise.resolve(result));\n            return result;\n        };\n    };\n\n    let avoid : Handler = (name : string, fn = noop) => {\n\n        // $FlowFixMe\n        return function avoidWrapper(...args) : * {\n            promises.push(ZalgoPromise.asyncReject(new Error(`Expected ${ name } to not be called`)));\n            // $FlowFixMe\n            return fn.call(this, ...args);\n        };\n    };\n\n    let expectError : Handler = (name, fn = noop) => {\n        expected.push(name);\n\n        // $FlowFixMe\n        return function expectErrorWrapper(...args) : * {\n            removeFromArray(expected, name);\n\n            // $FlowFixMe\n            let { result, error } = tryCatch(() => fn.call(this, ...args));\n\n            if (error) {\n                throw error;\n            }\n\n            promises.push(ZalgoPromise.resolve(result).then(() => {\n                throw new Error(`Expected ${ name } to throw an error`);\n            }, noop));\n            return result;\n        };\n    };\n\n    promises.push(ZalgoPromise.try(() => method({ expect, avoid, expectError, error: avoid })));\n\n    let drain = () => {\n        return ZalgoPromise.try(() => {\n            if (promises.length) {\n                return promises.pop();\n            }\n        }).then(() => {\n            if (promises.length) {\n                return drain();\n            }\n        });\n    };\n\n    return drain().then(() => {\n        if (expected.length) {\n            return timeoutPromise.then(drain);\n        }\n    }).then(() => {\n        if (expected.length) {\n            throw new Error(`Expected ${ expected[0] } to be called`);\n        }\n    });\n}\n","/* @flow */\n\nexport function isRegex(item : mixed) : boolean {\n    return Object.prototype.toString.call(item) === '[object RegExp]';\n}\n\n// eslint-disable-next-line no-unused-vars\nexport function noop(...args : Array<mixed>) {\n    // pass\n}\n","/* @flow */\n/* eslint max-lines: 0 */\n\nimport { isRegex, noop } from './util';\nimport type { CrossDomainWindowType, SameDomainWindowType, DomainMatcher } from './types';\nimport { PROTOCOL, WILDCARD } from './constants';\n\nlet IE_WIN_ACCESS_ERROR = 'Call was rejected by callee.\\r\\n';\n\nexport function isFileProtocol(win : SameDomainWindowType = window) : boolean {\n    return win.location.protocol === PROTOCOL.FILE;\n}\n\nexport function isAboutProtocol(win : SameDomainWindowType = window) : boolean {\n    return win.location.protocol === PROTOCOL.ABOUT;\n}\n\nexport function getParent(win : ?CrossDomainWindowType) : ?CrossDomainWindowType {\n\n    if (!win) {\n        return;\n    }\n\n    try {\n        if (win.parent && win.parent !== win) {\n            return win.parent;\n        }\n    } catch (err) {\n        // pass\n    }\n}\n\nexport function getOpener(win : ?CrossDomainWindowType) : ?CrossDomainWindowType {\n\n    if (!win) {\n        return;\n    }\n\n    // Make sure we're not actually an iframe which has had window.open() called on us\n    if (getParent(win)) {\n        return;\n    }\n\n    try {\n        return win.opener;\n    } catch (err) {\n        // pass\n    }\n}\n\nexport function canReadFromWindow(win : CrossDomainWindowType | SameDomainWindowType) : boolean {\n    try {\n        // $FlowFixMe\n        noop(win && win.location && win.location.href);\n        return true;\n    } catch (err) {\n        // pass\n    }\n\n    return false;\n}\n\nexport function getActualDomain(win : ?SameDomainWindowType) : string {\n\n    win = win || window;\n\n    let location = win.location;\n\n    if (!location) {\n        throw new Error(`Can not read window location`);\n    }\n\n    let protocol = location.protocol;\n\n    if (!protocol) {\n        throw new Error(`Can not read window protocol`);\n    }\n\n    if (protocol === PROTOCOL.FILE) {\n        return `${ PROTOCOL.FILE }//`;\n    }\n\n    if (protocol === PROTOCOL.ABOUT) {\n\n        let parent = getParent(win);\n        if (parent && canReadFromWindow(parent)) {\n            // $FlowFixMe\n            return getActualDomain(parent);\n        }\n\n        return `${ PROTOCOL.ABOUT }//`;\n    }\n\n    let host = location.host;\n\n    if (!host) {\n        throw new Error(`Can not read window host`);\n    }\n\n    return `${ protocol }//${ host }`;\n}\n\nexport function getDomain(win : ?SameDomainWindowType) : string {\n\n    win = win || window;\n\n    let domain = getActualDomain(win);\n\n    if (domain && win.mockDomain && win.mockDomain.indexOf(PROTOCOL.MOCK) === 0) {\n        return win.mockDomain;\n    }\n\n    return domain;\n}\n\nexport function isBlankDomain(win : CrossDomainWindowType) : boolean {\n    try {\n        // $FlowFixMe\n        if (!win.location.href) {\n            return true;\n        }\n\n        if (win.location.href === 'about:blank') {\n            return true;\n        }\n    } catch (err) {\n        // pass\n    }\n\n    return false;\n}\n\nexport function isActuallySameDomain(win : CrossDomainWindowType) : boolean {\n\n    try {\n        if (win === window) {\n            return true;\n        }\n\n    } catch (err) {\n        // pass\n    }\n\n    try {\n        let desc = Object.getOwnPropertyDescriptor(win, 'location');\n\n        if (desc && desc.enumerable === false) {\n            return false;\n        }\n\n    } catch (err) {\n        // pass\n    }\n\n    try {\n        // $FlowFixMe\n        if (isAboutProtocol(win) && canReadFromWindow(win)) {\n            return true;\n        }\n    } catch (err) {\n        // pass\n    }\n\n    try {\n        // $FlowFixMe\n        if (getActualDomain(win) === getActualDomain(window)) {\n            return true;\n        }\n\n    } catch (err) {\n        // pass\n    }\n\n    return false;\n}\n\nexport function isSameDomain(win : CrossDomainWindowType | SameDomainWindowType) : boolean {\n\n    if (!isActuallySameDomain(win)) {\n        return false;\n    }\n\n    try {\n\n        if (win === window) {\n            return true;\n        }\n\n        // $FlowFixMe\n        if (isAboutProtocol(win) && canReadFromWindow(win)) {\n            return true;\n        }\n\n        // $FlowFixMe\n        if (getDomain(window) === getDomain(win)) {\n            return true;\n        }\n\n    } catch (err) {\n        // pass\n    }\n\n    return false;\n}\n\n\nexport function assertSameDomain(win : CrossDomainWindowType | SameDomainWindowType) : SameDomainWindowType {\n    if (!isSameDomain(win)) {\n        throw new Error(`Expected window to be same domain`);\n    }\n\n    // $FlowFixMe\n    return win;\n}\n\nexport function getParents(win : CrossDomainWindowType) : Array<CrossDomainWindowType> {\n\n    let result = [];\n\n    try {\n\n        while (win.parent !== win) {\n            result.push(win.parent);\n            win = win.parent;\n        }\n\n    } catch (err) {\n        // pass\n    }\n\n    return result;\n}\n\nexport function isAncestorParent(parent : CrossDomainWindowType, child : CrossDomainWindowType) : boolean {\n\n    if (!parent || !child) {\n        return false;\n    }\n\n    let childParent = getParent(child);\n\n    if (childParent) {\n        return childParent === parent;\n    }\n\n    if (getParents(child).indexOf(parent) !== -1) {\n        return true;\n    }\n\n    return false;\n}\n\nexport function getFrames(win : CrossDomainWindowType) : Array<CrossDomainWindowType> {\n\n    let result = [];\n\n    let frames;\n\n    try {\n        frames = win.frames;\n    } catch (err) {\n        frames = win;\n    }\n\n    let len;\n\n    try {\n        len = frames.length;\n    } catch (err) {\n        // pass\n    }\n\n    if (len === 0) {\n        return result;\n    }\n\n    if (len) {\n        for (let i = 0; i < len; i++) {\n\n            let frame;\n\n            try {\n                frame = frames[i];\n            } catch (err) {\n                continue;\n            }\n\n            result.push(frame);\n        }\n\n        return result;\n    }\n\n    for (let i = 0; i < 100; i++) {\n        let frame;\n\n        try {\n            frame = frames[i];\n        } catch (err) {\n            return result;\n        }\n\n        if (!frame) {\n            return result;\n        }\n\n        result.push(frame);\n    }\n\n    return result;\n}\n\n\nexport function getAllChildFrames(win : CrossDomainWindowType) : Array<CrossDomainWindowType> {\n\n    let result = [];\n\n    for (let frame of getFrames(win)) {\n        result.push(frame);\n\n        for (let childFrame of getAllChildFrames(frame)) {\n            result.push(childFrame);\n        }\n    }\n\n    return result;\n}\n\nexport function getTop(win : CrossDomainWindowType) : ?CrossDomainWindowType {\n\n    if (!win) {\n        return;\n    }\n\n    try {\n        if (win.top) {\n            return win.top;\n        }\n    } catch (err) {\n        // pass\n    }\n\n    if (getParent(win) === win) {\n        return win;\n    }\n\n    try {\n        if (isAncestorParent(window, win) && window.top) {\n            return window.top;\n        }\n    } catch (err) {\n        // pass\n    }\n\n    try {\n        if (isAncestorParent(win, window) && window.top) {\n            return window.top;\n        }\n    } catch (err) {\n        // pass\n    }\n\n    for (let frame of getAllChildFrames(win)) {\n        try {\n            if (frame.top) {\n                return frame.top;\n            }\n        } catch (err) {\n            // pass\n        }\n\n        if (getParent(frame) === frame) {\n            return frame;\n        }\n    }\n}\n\nexport function getNextOpener(win? : CrossDomainWindowType = window) : ?CrossDomainWindowType {\n    return getOpener(getTop(win) || win);\n}\n\nexport function getUltimateTop(win? : CrossDomainWindowType = window) : CrossDomainWindowType {\n    let opener = getNextOpener(win);\n\n    if (opener) {\n        return getUltimateTop(opener);\n    }\n\n    return top;\n}\n\nexport function getAllFramesInWindow(win : CrossDomainWindowType) : Array<CrossDomainWindowType> {\n    let top = getTop(win);\n\n    if (!top) {\n        throw new Error(`Can not determine top window`);\n    }\n\n    return [ ...getAllChildFrames(top), top ];\n}\n\nexport function getAllWindows(win? : CrossDomainWindowType = window) : $ReadOnlyArray<CrossDomainWindowType> {\n    let frames = getAllFramesInWindow(win);\n    let opener = getNextOpener(win);\n\n    if (opener) {\n        return [ ...getAllWindows(opener), ...frames ];\n    } else {\n        return frames;\n    }\n}\n\nexport function isTop(win : CrossDomainWindowType) : boolean {\n    return win === getTop(win);\n}\n\nexport function isFrameWindowClosed(frame : HTMLIFrameElement) : boolean {\n\n    if (!frame.contentWindow) {\n        return true;\n    }\n\n    if (!frame.parentNode) {\n        return true;\n    }\n\n    let doc = frame.ownerDocument;\n\n    if (doc && doc.documentElement && !doc.documentElement.contains(frame)) {\n        return true;\n    }\n\n    return false;\n}\n\nfunction safeIndexOf<T>(collection : Array<T>, item : T) : number {\n    for (let i = 0; i < collection.length; i++) {\n\n        try {\n            if (collection[i] === item) {\n                return i;\n            }\n        } catch (err) {\n            // pass\n        }\n    }\n\n    return -1;\n}\n\nlet iframeWindows = [];\nlet iframeFrames = [];\n\nexport function isWindowClosed(win : CrossDomainWindowType, allowMock : boolean = true) : boolean {\n\n    try {\n        if (win === window) {\n            return false;\n        }\n    } catch (err) {\n        return true;\n    }\n\n    try {\n        if (!win) {\n            return true;\n        }\n\n    } catch (err) {\n        return true;\n    }\n\n    try {\n        if (win.closed) {\n            return true;\n        }\n\n    } catch (err) {\n\n        // I love you so much IE\n\n        if (err && err.message === IE_WIN_ACCESS_ERROR) {\n            return false;\n        }\n\n        return true;\n    }\n\n\n    if (allowMock && isSameDomain(win)) {\n        try {\n            // $FlowFixMe\n            if (win.mockclosed) {\n                return true;\n            }\n        } catch (err) {\n            // pass\n        }\n    }\n\n    // Mobile safari\n\n    try {\n        if (!win.parent || !win.top) {\n            return true;\n        }\n    } catch (err) {\n        // pass\n    }\n\n    // Yes, this actually happens in IE. win === win errors out when the window\n    // is from an iframe, and the iframe was removed from the page.\n\n    try {\n        noop(win === win); // eslint-disable-line no-self-compare\n    } catch (err) {\n        return true;\n    }\n\n    // IE orphaned frame\n\n    let iframeIndex = safeIndexOf(iframeWindows, win);\n\n    if (iframeIndex !== -1) {\n        let frame = iframeFrames[iframeIndex];\n\n        if (frame && isFrameWindowClosed(frame)) {\n            return true;\n        }\n    }\n\n    return false;\n}\n\nfunction cleanIframes() {\n    for (let i = 0; i < iframeWindows.length; i++) {\n        let closed = false;\n\n        try {\n            closed = iframeWindows[i].closed;\n        } catch (err) {\n            // pass\n        }\n\n        if (closed) {\n            iframeFrames.splice(i, 1);\n            iframeWindows.splice(i, 1);\n        }\n    }\n}\n\nexport function linkFrameWindow(frame : HTMLIFrameElement) {\n\n    cleanIframes();\n\n    if (frame && frame.contentWindow) {\n        try {\n            iframeWindows.push(frame.contentWindow);\n            iframeFrames.push(frame);\n        } catch (err) {\n            // pass\n        }\n    }\n}\n\nexport function getUserAgent(win : ?SameDomainWindowType) : string {\n    win = win || window;\n    return win.navigator.mockUserAgent || win.navigator.userAgent;\n}\n\n\nexport function getFrameByName(win : CrossDomainWindowType, name : string) : ?CrossDomainWindowType {\n\n    let winFrames = getFrames(win);\n\n    for (let childFrame of winFrames) {\n        try {\n            // $FlowFixMe\n            if (isSameDomain(childFrame) && childFrame.name === name && winFrames.indexOf(childFrame) !== -1) {\n                return childFrame;\n            }\n        } catch (err) {\n            // pass\n        }\n    }\n\n    try {\n        // $FlowFixMe\n        if (winFrames.indexOf(win.frames[name]) !== -1) {\n            // $FlowFixMe\n            return win.frames[name];\n        }\n    } catch (err) {\n        // pass\n    }\n\n    try {\n        if (winFrames.indexOf(win[name]) !== -1) {\n            return win[name];\n        }\n    } catch (err) {\n        // pass\n    }\n}\n\nexport function findChildFrameByName(win : CrossDomainWindowType, name : string) : ?CrossDomainWindowType {\n\n    let frame = getFrameByName(win, name);\n\n    if (frame) {\n        return frame;\n    }\n\n    for (let childFrame of getFrames(win)) {\n        let namedFrame = findChildFrameByName(childFrame, name);\n\n        if (namedFrame) {\n            return namedFrame;\n        }\n    }\n}\n\nexport function findFrameByName(win : CrossDomainWindowType, name : string) : ?CrossDomainWindowType {\n\n    let frame;\n\n    frame = getFrameByName(win, name);\n\n    if (frame) {\n        return frame;\n    }\n\n    let top = getTop(win) || win;\n\n    return findChildFrameByName(top, name);\n}\n\nexport function isParent(win : CrossDomainWindowType, frame : CrossDomainWindowType) : boolean {\n\n    let frameParent = getParent(frame);\n\n    if (frameParent) {\n        return frameParent === win;\n    }\n\n    for (let childFrame of getFrames(win)) {\n        if (childFrame === frame) {\n            return true;\n        }\n    }\n\n    return false;\n}\n\nexport function isOpener(parent : CrossDomainWindowType, child : CrossDomainWindowType) : boolean {\n\n    return parent === getOpener(child);\n}\n\nexport function getAncestor(win : ?CrossDomainWindowType) : ?CrossDomainWindowType {\n    win = win || window;\n\n    let opener = getOpener(win);\n\n    if (opener) {\n        return opener;\n    }\n\n    let parent = getParent(win);\n\n    if (parent) {\n        return parent;\n    }\n}\n\nexport function getAncestors(win : CrossDomainWindowType) : Array<CrossDomainWindowType> {\n\n    let results = [];\n\n    let ancestor = win;\n\n    while (ancestor) {\n        ancestor = getAncestor(ancestor);\n        if (ancestor) {\n            results.push(ancestor);\n        }\n    }\n\n    return results;\n}\n\n\nexport function isAncestor(parent : CrossDomainWindowType, child : CrossDomainWindowType) : boolean {\n\n    let actualParent = getAncestor(child);\n\n    if (actualParent) {\n        if (actualParent === parent) {\n            return true;\n        }\n\n        return false;\n    }\n\n    if (child === parent) {\n        return false;\n    }\n\n    if (getTop(child) === child) {\n        return false;\n    }\n\n    for (let frame of getFrames(parent)) {\n        if (frame === child) {\n            return true;\n        }\n    }\n\n    return false;\n}\n\nexport function isPopup() : boolean {\n    return Boolean(getOpener(window));\n}\n\nexport function isIframe() : boolean {\n    return Boolean(getParent(window));\n}\n\nexport function isFullpage() : boolean {\n    return Boolean(!isIframe() && !isPopup());\n}\n\nfunction anyMatch(collection1, collection2) : boolean {\n\n    for (let item1 of collection1) {\n        for (let item2 of collection2) {\n            if (item1 === item2) {\n                return true;\n            }\n        }\n    }\n\n    return false;\n}\n\nexport function getDistanceFromTop(win : CrossDomainWindowType = window) : number {\n    let distance = 0;\n    let parent = win;\n\n    while (parent) {\n        parent = getParent(parent);\n        if (parent) {\n            distance += 1;\n        }\n    }\n\n    return distance;\n}\n\nexport function getNthParent(win : CrossDomainWindowType, n : number = 1) : ?CrossDomainWindowType {\n    let parent = win;\n\n    for (let i = 0; i < n; i++) {\n        if (!parent) {\n            return;\n        }\n\n        parent = getParent(parent);\n    }\n\n    return parent;\n}\n\nexport function getNthParentFromTop(win : CrossDomainWindowType, n : number = 1) : ?CrossDomainWindowType {\n    return getNthParent(win, getDistanceFromTop(win) - n);\n}\n\nexport function isSameTopWindow(win1 : CrossDomainWindowType, win2 : CrossDomainWindowType) : boolean {\n\n    let top1 = getTop(win1) || win1;\n    let top2 = getTop(win2) || win2;\n\n    try {\n        if (top1 && top2) {\n            if (top1 === top2) {\n                return true;\n            }\n\n            return false;\n        }\n    } catch (err) {\n        // pass\n    }\n\n    let allFrames1 = getAllFramesInWindow(win1);\n    let allFrames2 = getAllFramesInWindow(win2);\n\n    if (anyMatch(allFrames1, allFrames2)) {\n        return true;\n    }\n\n    let opener1 = getOpener(top1);\n    let opener2 = getOpener(top2);\n\n    if (opener1 && anyMatch(getAllFramesInWindow(opener1), allFrames2)) {\n        return false;\n    }\n\n    if (opener2 && anyMatch(getAllFramesInWindow(opener2), allFrames1)) {\n        return false;\n    }\n\n    return false;\n}\n\nexport function matchDomain(pattern : DomainMatcher, origin : DomainMatcher) : boolean {\n\n    if (typeof pattern === 'string') {\n\n        if (typeof origin === 'string') {\n            return pattern === WILDCARD || origin === pattern;\n        }\n\n        if (isRegex(origin)) {\n            return false;\n        }\n\n        if (Array.isArray(origin)) {\n            return false;\n        }\n    }\n\n    if (isRegex(pattern)) {\n\n        if (isRegex(origin)) {\n            return pattern.toString() === origin.toString();\n        }\n\n        if (Array.isArray(origin)) {\n            return false;\n        }\n\n        // $FlowFixMe\n        return Boolean(origin.match(pattern));\n    }\n\n    if (Array.isArray(pattern)) {\n\n        if (Array.isArray(origin)) {\n            return JSON.stringify(pattern) === JSON.stringify(origin);\n        }\n\n        if (isRegex(origin)) {\n            return false;\n        }\n\n        return pattern.some(subpattern => matchDomain(subpattern, origin));\n    }\n\n    return false;\n}\n\nexport function stringifyDomainPattern(pattern : DomainMatcher) : string {\n    if (Array.isArray(pattern)) {\n        return `(${ pattern.join(' | ') })`;\n    } else if (isRegex(pattern)) {\n        return `RegExp(${ pattern.toString() }`;\n    } else {\n        return pattern.toString();\n    }\n}\n\nexport function getDomainFromUrl(url : string) : string {\n\n    let domain;\n\n    if (url.match(/^(https?|mock|file):\\/\\//)) {\n        domain = url;\n    } else {\n        return getDomain();\n    }\n\n    domain = domain.split('/').slice(0, 3).join('/');\n\n    return domain;\n}\n\nexport function onCloseWindow(win : CrossDomainWindowType, callback : Function, delay : number = 1000, maxtime : number = Infinity) : { cancel : () => void } {\n\n    let timeout;\n\n    let check = () => {\n\n        if (isWindowClosed(win)) {\n\n            if (timeout) {\n                clearTimeout(timeout);\n            }\n\n            return callback();\n        }\n\n        if (maxtime <= 0) {\n            clearTimeout(timeout);\n        } else {\n            maxtime -= delay;\n            timeout = setTimeout(check, delay);\n        }\n    };\n\n    check();\n\n    return {\n        cancel() {\n            if (timeout) {\n                clearTimeout(timeout);\n            }\n        }\n    };\n}\n\n// eslint-disable-next-line complexity\nexport function isWindow(obj : Object) : boolean {\n\n    try {\n        if (obj === window) {\n            return true;\n        }\n    } catch (err) {\n        if (err && err.message === IE_WIN_ACCESS_ERROR) {\n            return true;\n        }\n    }\n\n    try {\n        if (Object.prototype.toString.call(obj) === '[object Window]') {\n            return true;\n        }\n    } catch (err) {\n        if (err && err.message === IE_WIN_ACCESS_ERROR) {\n            return true;\n        }\n    }\n\n    try {\n        if (window.Window && obj instanceof window.Window) {\n            return true;\n        }\n    } catch (err) {\n        if (err && err.message === IE_WIN_ACCESS_ERROR) {\n            return true;\n        }\n    }\n\n    try {\n        if (obj && obj.self === obj) {\n            return true;\n        }\n    } catch (err) {\n        if (err && err.message === IE_WIN_ACCESS_ERROR) {\n            return true;\n        }\n    }\n\n    try {\n        if (obj && obj.parent === obj) {\n            return true;\n        }\n    } catch (err) {\n        if (err && err.message === IE_WIN_ACCESS_ERROR) {\n            return true;\n        }\n    }\n\n    try {\n        if (obj && obj.top === obj) {\n            return true;\n        }\n    } catch (err) {\n        if (err && err.message === IE_WIN_ACCESS_ERROR) {\n            return true;\n        }\n    }\n\n    try {\n        noop(obj === obj);  // eslint-disable-line no-self-compare\n\n    } catch (err) {\n        return true;\n    }\n\n    try {\n        noop(obj && obj.__cross_domain_utils_window_check__);\n\n    } catch (err) {\n        return true;\n    }\n\n    return false;\n}\n\nexport function isBrowser() : boolean {\n    return (typeof window !== 'undefined' && typeof window.location !== 'undefined');\n}\n\nexport function isCurrentDomain(domain : string) : boolean {\n    if (!isBrowser()) {\n        return false;\n    }\n\n    return (getDomain() === domain);\n}\n\nexport function isMockDomain(domain : string) : boolean {\n    return domain.indexOf(PROTOCOL.MOCK) === 0;\n}\n\nexport function normalizeMockUrl(url : string) : string {\n    if (!isMockDomain(getDomainFromUrl(url))) {\n        return url;\n    }\n\n    if (!__TEST__) {\n        throw new Error(`Mock urls not supported out of test mode`);\n    }\n\n    return url.replace(/^mock:\\/\\/[^/]+/, getActualDomain(window));\n}\n","export default function _applyDecoratedDescriptor(target, property, decorators, descriptor, context) {\n  var desc = {};\n  Object['ke' + 'ys'](descriptor).forEach(function (key) {\n    desc[key] = descriptor[key];\n  });\n  desc.enumerable = !!desc.enumerable;\n  desc.configurable = !!desc.configurable;\n\n  if ('value' in desc || desc.initializer) {\n    desc.writable = true;\n  }\n\n  desc = decorators.slice().reverse().reduce(function (desc, decorator) {\n    return decorator(target, property, desc) || desc;\n  }, desc);\n\n  if (context && desc.initializer !== void 0) {\n    desc.value = desc.initializer ? desc.initializer.call(context) : void 0;\n    desc.initializer = undefined;\n  }\n\n  if (desc.initializer === void 0) {\n    Object['define' + 'Property'](target, property, desc);\n    desc = null;\n  }\n\n  return desc;\n}","/* @flow */\n\nexport const MESSAGE_TYPE = {\n    REQUEST:  ('postrobot_message_request' : 'postrobot_message_request'),\n    RESPONSE: ('postrobot_message_response' : 'postrobot_message_response'),\n    ACK:      ('postrobot_message_ack' : 'postrobot_message_ack')\n};\n\nexport const MESSAGE_ACK = {\n    SUCCESS: ('success' : 'success'),\n    ERROR:   ('error' : 'error')\n};\n\nexport const MESSAGE_NAME = {\n    METHOD:      ('postrobot_method' : 'postrobot_method'),\n    HELLO:       ('postrobot_hello' : 'postrobot_hello'),\n    OPEN_TUNNEL: ('postrobot_open_tunnel' : 'postrobot_open_tunnel')\n};\n\nexport const WINDOW_PROP = {\n    POSTROBOT: ('__postRobot__' : '__postRobot__')\n};\n\nexport const SEND_STRATEGY = {\n    POST_MESSAGE: ('postrobot_post_message' : 'postrobot_post_message'),\n    BRIDGE:       ('postrobot_bridge' : 'postrobot_bridge'),\n    GLOBAL:       ('postrobot_global' : 'postrobot_global')\n};\n\nexport const PROTOCOL = {\n    MOCK: ('mock:' : 'mock:'),\n    FILE: ('file:' : 'file:')\n};\n\nexport const BRIDGE_NAME_PREFIX = '__postrobot_bridge__';\nexport const POSTROBOT_PROXY =    '__postrobot_proxy__';\n\nexport const WILDCARD = '*';\n\nexport const SERIALIZATION_TYPE = {\n    CROSS_DOMAIN_ZALGO_PROMISE: ('cross_domain_zalgo_promise' : 'cross_domain_zalgo_promise'),\n    CROSS_DOMAIN_FUNCTION:      ('cross_domain_function' : 'cross_domain_function'),\n    CROSS_DOMAIN_WINDOW:        ('cross_domain_window' : 'cross_domain_window')\n};\n","/* @flow */\n\nimport { SEND_STRATEGY } from './constants';\n\nexport let CONFIG : Object = {\n    BRIDGE_TIMEOUT:       5000,\n    CHILD_WINDOW_TIMEOUT: 5000,\n\n    ACK_TIMEOUT:       2000,\n    ACK_TIMEOUT_KNOWN: 10000,\n    RES_TIMEOUT:       __TEST__ ? 2000 : -1,\n    \n    ALLOWED_POST_MESSAGE_METHODS: {\n        [ SEND_STRATEGY.POST_MESSAGE ]: true,\n        [ SEND_STRATEGY.BRIDGE ]:       true,\n        [ SEND_STRATEGY.GLOBAL ]:       true\n    }\n};\n","/* @flow */\n\nimport { type CrossDomainWindowType } from 'cross-domain-utils/src';\nimport { WeakMap } from 'cross-domain-safe-weakmap/src';\nimport { getOrSet } from 'belter/src';\n\nimport { WINDOW_PROP } from './conf';\n\nexport let global : Object = window[WINDOW_PROP.POSTROBOT] = window[WINDOW_PROP.POSTROBOT] || {};\nlet winStore = global.windowStore = global.windowStore || new WeakMap();\n\ntype WindowStore<T> = {|\n    get : ((CrossDomainWindowType, T) => T) & ((CrossDomainWindowType, void) => T | void),\n    set : (CrossDomainWindowType, T) => T,\n    has : (CrossDomainWindowType) => boolean,\n    del : (CrossDomainWindowType) => void,\n    getOrSet : (CrossDomainWindowType, () => T) => T\n|};\n\ntype ObjectGetter = () => Object;\n\nlet getObj : ObjectGetter = () => ({});\n\n// $FlowFixMe\nexport function windowStore<T>(key : string, defStore? : ObjectGetter = getObj) : WindowStore<T> {\n\n    function getStore(win : CrossDomainWindowType) : ObjectGetter {\n        return winStore.getOrSet(win, defStore);\n    }\n\n    return {\n        has: (win) => {\n            let store = getStore(win);\n            return store.hasOwnProperty(key);\n        },\n        get: (win, defVal) => {\n            let store = getStore(win);\n            // $FlowFixMe\n            return store.hasOwnProperty(key) ? store[key] : defVal;\n        },\n        set: (win, val) => {\n            let store = getStore(win);\n            store[key] = val;\n            return val;\n        },\n        del: (win) => {\n            let store = getStore(win);\n            delete store[key];\n        },\n        getOrSet: (win, getter) => {\n            let store = getStore(win);\n            if (store.hasOwnProperty(key)) {\n                return store[key];\n            }\n            let val = getter();\n            store[key] = val;\n            return val;\n        }\n    };\n}\n\ntype GlobalStore<T> = {|\n    get : ((string, T) => T) & ((string, void) => T | void),\n    set : (string, T) => T,\n    has : (string) => boolean,\n    del : (string) => void,\n    getOrSet : (string, () => T) => T,\n    reset : () => void,\n    keys : () => $ReadOnlyArray<string>\n|};\n\n// $FlowFixMe\nexport function globalStore<T : mixed>(key : string, defStore? : ObjectGetter = getObj) : GlobalStore<T> {\n    let store = getOrSet(global, key, defStore);\n\n    return {\n        has: (storeKey) => {\n            return store.hasOwnProperty(storeKey);\n        },\n        get: (storeKey, defVal) => {\n            // $FlowFixMe\n            return store.hasOwnProperty(storeKey) ? store[storeKey] : defVal;\n        },\n        set: (storeKey, val) => {\n            store[storeKey] = val;\n            return val;\n        },\n        del: (storeKey) => {\n            delete store[storeKey];\n        },\n        getOrSet: (storeKey, getter) => {\n            if (store.hasOwnProperty(storeKey)) {\n                return store[storeKey];\n            }\n            let val = getter();\n            store[storeKey] = val;\n            return val;\n        },\n        reset: () => {\n            store = defStore();\n        },\n        keys: () => {\n            return Object.keys(store);\n        }\n    };\n}\n","/* @flow */\n\nimport { getAncestor, type CrossDomainWindowType } from 'cross-domain-utils/src';\nimport { ZalgoPromise } from 'zalgo-promise/src';\nimport { noop, uniqueID, once, weakMapMemoizePromise } from 'belter/src';\n\nimport { MESSAGE_NAME, WILDCARD } from '../conf';\nimport { global, windowStore } from '../global';\n\nglobal.instanceID = global.instanceID || uniqueID();\nlet helloPromises = windowStore('helloPromises');\n\nfunction getHelloPromise(win : CrossDomainWindowType) : ZalgoPromise<{ win : CrossDomainWindowType, domain : string }> {\n    return helloPromises.getOrSet(win, () => new ZalgoPromise());\n}\n\nconst listenForHello = once(() => {\n    global.on(MESSAGE_NAME.HELLO, { domain: WILDCARD }, ({ source, origin }) => {\n        getHelloPromise(source).resolve({ win: source, domain: origin });\n        return { instanceID: global.instanceID };\n    });\n});\n\nexport function sayHello(win : CrossDomainWindowType) : ZalgoPromise<{ win : CrossDomainWindowType, domain : string, instanceID : string }> {\n    return global.send(win, MESSAGE_NAME.HELLO, { instanceID: global.instanceID }, { domain: WILDCARD, timeout: -1 })\n        .then(({ origin, data: { instanceID } }) => {\n            getHelloPromise(win).resolve({ win, domain: origin });\n            return { win, domain: origin, instanceID };\n        });\n}\n\nexport let getWindowInstanceID = weakMapMemoizePromise((win : CrossDomainWindowType) : ZalgoPromise<string> => {\n    return sayHello(win).then(({ instanceID }) => instanceID);\n});\n\nexport function initHello() {\n    listenForHello();\n\n    let parent = getAncestor();\n    if (parent) {\n        sayHello(parent).catch(noop);\n    }\n}\n\nexport function awaitWindowHello(win : CrossDomainWindowType, timeout : number = 5000, name : string = 'Window') : ZalgoPromise<{ win : CrossDomainWindowType, domain : string }> {\n    let promise = getHelloPromise(win);\n\n    if (timeout !== -1) {\n        promise = promise.timeout(timeout, new Error(`${ name } did not load after ${ timeout }ms`));\n    }\n\n    return promise;\n}\n","/* @flow */\n\nimport { type CrossDomainWindowType } from 'cross-domain-utils/src';\n\nimport { windowStore } from '../global';\n\nlet knownWindows = windowStore('knownWindows');\n\nexport function markWindowKnown(win : CrossDomainWindowType) {\n    knownWindows.set(win, true);\n}\n\nexport function isWindowKnown(win : CrossDomainWindowType) : boolean {\n    return knownWindows.get(win, false);\n}\n","/* @flow */\n\nexport const TYPE = {\n    FUNCTION:  ('function' : 'function'),\n    ERROR:     ('error' : 'error'),\n    PROMISE:   ('promise' : 'promise'),\n    REGEX:     ('regex' : 'regex'),\n    DATE:      ('date' : 'date'),\n    ARRAY:     ('array' : 'array'),\n    OBJECT:    ('object' : 'object'),\n    STRING:    ('string' : 'string'),\n    NUMBER:    ('number' : 'number'),\n    BOOLEAN:   ('boolean' : 'boolean'),\n    NULL:      ('null' : 'null'),\n    UNDEFINED: ('undefined' : 'undefined')\n};\n","/* @flow */\n\nimport { TYPE } from './constants';\nimport type { CustomSerializedType } from './types';\n\nexport function isSerializedType(item : mixed) : boolean {\n    return (typeof item === 'object' && item !== null && typeof item.__type__ === 'string');\n}\n\nexport function determineType(val : mixed) : $Values<typeof TYPE> | void {\n    if (typeof val === 'undefined') {\n        return TYPE.UNDEFINED;\n    }\n\n    if (val === null) {\n        return TYPE.NULL;\n    }\n\n    if (Array.isArray(val)) {\n        return TYPE.ARRAY;\n    }\n\n    if (typeof val === 'function') {\n        return TYPE.FUNCTION;\n    }\n\n    if (typeof val === 'object') {\n\n        if (val instanceof Error) {\n            return TYPE.ERROR;\n        }\n\n        if (typeof val.then === 'function') {\n            return TYPE.PROMISE;\n        }\n\n        if (Object.prototype.toString.call(val) === '[object RegExp]') {\n            return TYPE.REGEX;\n        }\n\n        if (Object.prototype.toString.call(val) === '[object Date]') {\n            return TYPE.DATE;\n        }\n\n        return TYPE.OBJECT;\n    }\n\n    if (typeof val === 'string') {\n        return TYPE.STRING;\n    }\n\n    if (typeof val === 'number') {\n        return TYPE.NUMBER;\n    }\n\n    if (typeof val === 'boolean') {\n        return TYPE.BOOLEAN;\n    }\n}\n\nexport function serializeType<T : string, V : mixed>(type : T, val : V) : CustomSerializedType<T, V> {\n    return {\n        __type__: type,\n        __val__:  val\n    };\n}\n","/* @flow */\n\nimport { TYPE } from './constants';\nimport type { Thenable, CustomSerializedType, NativeSerializedType } from './types';\nimport { determineType, isSerializedType } from './common';\nimport {\n    serializeFunction,\n    serializeError, type SerializedError,\n    serializePromise,\n    serializeRegex, type SerializedRegex,\n    serializeDate, type SerializedDate,\n    serializeArray,\n    serializeObject,\n    serializeString,\n    serializeNumber,\n    serializeBoolean,\n    serializeNull\n} from './serializers';\n\ntype NativeSerializer<V : mixed, S : mixed, T : $Values<typeof TYPE>> = (value : V, key : string) => NativeSerializedType<T, S>;\ntype CustomSerializer<V : mixed, S : mixed, T : string> = (value : V, key : string) => CustomSerializedType<T, S>;\ntype PrimitiveSerializer<V : mixed, S : mixed> = (value : V, key : string) => S;\ntype CustomOrPrimitiveSerializer<V : mixed, T : string> = CustomSerializer<V, *, T> | PrimitiveSerializer<V, *>;\ntype NativeOrCustomOrPrimitiveSerializer<V : mixed, S : mixed, T : string> = NativeSerializer<V, S, T> | CustomOrPrimitiveSerializer<V, T>;\n\ntype Serializers = {|\n    function? : CustomOrPrimitiveSerializer<Function, typeof TYPE.FUNCTION>,\n    error? : NativeOrCustomOrPrimitiveSerializer<Error, SerializedError, typeof TYPE.ERROR>,\n    promise? : CustomOrPrimitiveSerializer<Thenable, typeof TYPE.PROMISE>,\n    regex? : NativeOrCustomOrPrimitiveSerializer<RegExp, SerializedRegex, typeof TYPE.REGEX>,\n    date? : NativeOrCustomOrPrimitiveSerializer<Date, SerializedDate, typeof TYPE.DATE>,\n    array? : CustomOrPrimitiveSerializer<$ReadOnlyArray<mixed>, typeof TYPE.ARRAY>,\n    object? : CustomOrPrimitiveSerializer<Object, typeof TYPE.OBJECT>,\n    string? : CustomOrPrimitiveSerializer<string, typeof TYPE.STRING>,\n    number? : CustomOrPrimitiveSerializer<number, typeof TYPE.NUMBER>,\n    boolean? : CustomOrPrimitiveSerializer<boolean, typeof TYPE.BOOLEAN>,\n    null? : CustomOrPrimitiveSerializer<null, typeof TYPE.NULL>\n|};\n\nconst SERIALIZER : Serializers = {\n    [ TYPE.FUNCTION ]:  serializeFunction,\n    [ TYPE.ERROR ]:     serializeError,\n    [ TYPE.PROMISE ]:   serializePromise,\n    [ TYPE.REGEX ]:     serializeRegex,\n    [ TYPE.DATE ]:      serializeDate,\n    [ TYPE.ARRAY ]:     serializeArray,\n    [ TYPE.OBJECT ]:    serializeObject,\n    [ TYPE.STRING ]:    serializeString,\n    [ TYPE.NUMBER ]:    serializeNumber,\n    [ TYPE.BOOLEAN ]:   serializeBoolean,\n    [ TYPE.NULL ]:      serializeNull\n};\n\n// $FlowFixMe\nconst defaultSerializers : Serializers = {};\n\nexport function serialize<T : mixed>(obj : T, serializers : Serializers = defaultSerializers) : string {\n\n    function replacer(key) : ?mixed {\n        const val = this[key];\n\n        if (isSerializedType(this)) {\n            return val;\n        }\n        \n        const type = determineType(val);\n\n        if (!type) {\n            return val;\n        }\n\n        // $FlowFixMe\n        const serializer = serializers[type] || SERIALIZER[type];\n\n        if (!serializer) {\n            return val;\n        }\n\n        return serializer(val, key);\n    }\n\n    const result = JSON.stringify(obj, replacer);\n\n    if (typeof result === 'undefined') {\n        return TYPE.UNDEFINED;\n    }\n\n    return result;\n}\n","/* @flow */\n\nexport type SerializedFunction = void;\n\nexport function serializeFunction() : SerializedFunction {\n    // pass\n}\n\nexport function deserializeFunction() {\n    throw new Error(`Function serialization is not implemented; nothing to deserialize`);\n}\n","/* @flow */\n\nimport { serializeType } from '../common';\nimport { TYPE } from '../constants';\nimport type { NativeSerializedType } from '../types';\n\nexport type SerializedError = {|\n    message : string,\n    stack : string,\n    code : string | number | void\n|};\n\n// $FlowFixMe\nexport function serializeError({ message, stack, code } : Error) : NativeSerializedType<typeof TYPE.ERROR, SerializedError> {\n    return serializeType(TYPE.ERROR, { message, stack, code });\n}\n\nexport function deserializeError({ message, stack, code } : SerializedError) : Error {\n    const error = new Error(message);\n    // $FlowFixMe\n    error.code = code;\n    error.stack = `${ stack }\\n\\n${ error.stack }`;\n    return error;\n}\n","/* @flow */\n\nexport type SerializedPromise = void;\n\nexport function serializePromise() : SerializedPromise {\n    // pass\n}\n\nexport function deserializePromise() {\n    throw new Error(`Promise serialization is not implemented; nothing to deserialize`);\n}\n","/* @flow */\n\nimport { serializeType } from '../common';\nimport { TYPE } from '../constants';\nimport type { NativeSerializedType } from '../types';\n\nexport type SerializedRegex = string;\n\nexport function serializeRegex(val : RegExp) : NativeSerializedType<typeof TYPE.REGEX, SerializedRegex> {\n    return serializeType(TYPE.REGEX, val.source);\n}\n\nexport function deserializeRegex(val : string) : RegExp {\n    // eslint-disable-next-line security/detect-non-literal-regexp\n    return new RegExp(val);\n}\n","/* @flow */\n\nimport { serializeType } from '../common';\nimport { TYPE } from '../constants';\nimport type { NativeSerializedType } from '../types';\n\nexport type SerializedDate = string;\n\nexport function serializeDate(val : Date) : NativeSerializedType<typeof TYPE.DATE, SerializedDate> {\n    return serializeType(TYPE.DATE, val.toJSON());\n}\n\nexport function deserializeDate(val : string) : Date {\n    return new Date(val);\n}\n","/* @flow */\n\nexport type SerializedArray<T : mixed = mixed> = $ReadOnlyArray<T>;\n\nexport function serializeArray<T : mixed>(val : $ReadOnlyArray<T>) : SerializedArray<T> {\n    return val;\n}\n\nexport function deserializeArray<T : mixed>(val : SerializedArray<T>) : $ReadOnlyArray<T> {\n    return val;\n}\n","/* @flow */\n\nexport type SerializedObject = Object;\n\nexport function serializeObject(val : Object) : SerializedObject {\n    return val;\n}\n\nexport function deserializeObject(val : SerializedObject) : Object {\n    return val;\n}\n","/* @flow */\n\nexport type SerializedString = string;\n\nexport function serializeString(val : string) : SerializedString {\n    return val;\n}\n\nexport function deserializeString(val : SerializedString) : string {\n    return val;\n}\n","/* @flow */\n\nexport type SerializedNumber = number;\n\nexport function serializeNumber(val : number) : SerializedNumber {\n    return val;\n}\n\nexport function deserializeNumber(val : SerializedNumber) : number {\n    return val;\n}\n","/* @flow */\n\nexport type SerializedBoolean = boolean;\n\nexport function serializeBoolean(val : boolean) : SerializedBoolean {\n    return val;\n}\n\nexport function deserializeBoolean(val : SerializedBoolean) : boolean {\n    return val;\n}\n","/* @flow */\n\nexport type SerializedNull = null;\n\nexport function serializeNull(val : null) : SerializedNull {\n    return val;\n}\n\nexport function deserializeNull(val : SerializedNull) : null {\n    return val;\n}\n","/* @flow */\n\nimport type { Thenable } from './types';\nimport { TYPE } from './constants';\nimport { determineType, isSerializedType } from './common';\nimport {\n    deserializeFunction,\n    deserializeError, type SerializedError,\n    deserializePromise,\n    deserializeRegex, type SerializedRegex,\n    deserializeDate, type SerializedDate,\n    deserializeArray,\n    deserializeObject,\n    deserializeString,\n    deserializeNumber,\n    deserializeBoolean,\n    deserializeNull\n} from './serializers';\n\ntype Deserializer<V : mixed, S : mixed> = (serializedValue : S, key : string) => V;\ntype PrimitiveDeserializer<V, S = V> = (serializedValue : S, key : string) => V;\n\ntype Deserializers = {\n    function? : Deserializer<Function, *>,\n    error? : Deserializer<Error, SerializedError>,\n    promise? : Deserializer<Thenable, *>,\n    regex? : Deserializer<RegExp, SerializedRegex>,\n    date? : Deserializer<Date, SerializedDate>,\n    array? : PrimitiveDeserializer<$ReadOnlyArray<mixed>>,\n    object? : PrimitiveDeserializer<Object>,\n    string? : PrimitiveDeserializer<string>,\n    number? : PrimitiveDeserializer<number>,\n    boolean? : PrimitiveDeserializer<boolean>,\n    null? : PrimitiveDeserializer<null>,\n    [string] : Deserializer<mixed, *>\n};\n\n// $FlowFixMe\nconst DESERIALIZER : Deserializers = {\n    [ TYPE.FUNCTION ]:  deserializeFunction,\n    [ TYPE.ERROR ]:     deserializeError,\n    [ TYPE.PROMISE ]:   deserializePromise,\n    [ TYPE.REGEX ]:     deserializeRegex,\n    [ TYPE.DATE ]:      deserializeDate,\n    [ TYPE.ARRAY ]:     deserializeArray,\n    [ TYPE.OBJECT ]:    deserializeObject,\n    [ TYPE.STRING ]:    deserializeString,\n    [ TYPE.NUMBER ]:    deserializeNumber,\n    [ TYPE.BOOLEAN ]:   deserializeBoolean,\n    [ TYPE.NULL ]:      deserializeNull\n};\n\n// $FlowFixMe\nconst defaultDeserializers : Deserializers = {};\n\nexport function deserialize<T : mixed | null | void>(str : string, deserializers : Deserializers = defaultDeserializers) : T {\n    if (str === TYPE.UNDEFINED) {\n        // $FlowFixMe\n        return;\n    }\n\n    function replacer(key, val) : ?mixed {\n        if (isSerializedType(this)) {\n            return val;\n        }\n\n        let type;\n        let value;\n\n        if (isSerializedType(val)) {\n            type = val.__type__;\n            value = val.__val__;\n        } else {\n            type = determineType(val);\n            value = val;\n        }\n\n        if (!type) {\n            return value;\n        }\n\n        // $FlowFixMe\n        const deserializer = deserializers[type] || DESERIALIZER[type];\n\n        if (!deserializer) {\n            return value;\n        }\n\n        return deserializer(value, key);\n    }\n\n    return JSON.parse(str, replacer);\n}\n","/* @flow */\n\nimport { isSameDomain, isWindowClosed, type CrossDomainWindowType, type DomainMatcher, getOpener, WINDOW_TYPE } from 'cross-domain-utils/src';\nimport { ZalgoPromise } from 'zalgo-promise/src';\nimport { uniqueID, memoizePromise } from 'belter/src';\nimport { serializeType, type CustomSerializedType } from 'universal-serialize/src';\n\nimport { SERIALIZATION_TYPE } from '../conf';\nimport { windowStore, globalStore } from '../global';\nimport { getWindowInstanceID } from '../lib';\n\nlet winToProxyWindow = windowStore('winToProxyWindow');\nlet idToProxyWindow = globalStore('idToProxyWindow');\n\nfunction cleanupProxyWindows() {\n    for (let id of idToProxyWindow.keys()) {\n        // $FlowFixMe\n        if (idToProxyWindow.get(id).shouldClean()) {\n            idToProxyWindow.del(id);\n        }\n    }\n}\n\ntype SerializedProxyWindow = {|\n    id : string,\n    type : $Values<typeof WINDOW_TYPE>,\n    close : () => ZalgoPromise<void>,\n    focus : () => ZalgoPromise<void>,\n    isClosed : () => ZalgoPromise<boolean>,\n    setLocation : (string) => ZalgoPromise<void>,\n    setName : (string) => ZalgoPromise<void>,\n    getInstanceID : () => ZalgoPromise<string>\n|};\n\nexport class ProxyWindow {\n\n    isProxyWindow : true = true\n    serializedWindow : SerializedProxyWindow\n    actualWindow : CrossDomainWindowType\n    actualWindowPromise : ZalgoPromise<CrossDomainWindowType>\n\n    constructor(serializedWindow : SerializedProxyWindow, actualWindow? : CrossDomainWindowType) {\n        this.serializedWindow = serializedWindow;\n        this.actualWindowPromise = new ZalgoPromise();\n        if (actualWindow) {\n            this.setWindow(actualWindow);\n        }\n        this.serializedWindow.getInstanceID = memoizePromise(this.serializedWindow.getInstanceID);\n    }\n\n    getType() : $Values<typeof WINDOW_TYPE> {\n        return this.serializedWindow.type;\n    }\n\n    isPopup() : boolean {\n        return this.getType() === WINDOW_TYPE.POPUP;\n    }\n\n    isIframe() : boolean {\n        return this.getType() === WINDOW_TYPE.IFRAME;\n    }\n\n    setLocation(href : string) : ZalgoPromise<ProxyWindow> {\n        return ZalgoPromise.try(() => {\n            if (this.actualWindow) {\n                this.actualWindow.location = href;\n            } else {\n                return this.serializedWindow.setLocation(href);\n            }\n        }).then(() => this);\n    }\n\n    setName(name : string) : ZalgoPromise<ProxyWindow> {\n        return ZalgoPromise.try(() => {\n            if (this.actualWindow) {\n                if (!isSameDomain(this.actualWindow)) {\n                    throw new Error(`Can not set name for window on different domain`);\n                }\n                // $FlowFixMe\n                this.actualWindow.name = name;\n                // $FlowFixMe\n                if (this.actualWindow.frameElement) {\n                    // $FlowFixMe\n                    this.actualWindow.frameElement.setAttribute('name', name);\n                }\n\n                if (__POST_ROBOT__.__IE_POPUP_SUPPORT__) {\n                    const { linkWindow } = require('../bridge');\n                    linkWindow({ win: this.actualWindow, name });\n                }\n\n            } else {\n                return this.serializedWindow.setName(name);\n            }\n        }).then(() => this);\n    }\n\n    close() : ZalgoPromise<ProxyWindow> {\n        return ZalgoPromise.try(() => {\n            if (this.actualWindow) {\n                this.actualWindow.close();\n            } else {\n                return this.serializedWindow.close();\n            }\n        }).then(() => this);\n    }\n\n    focus() : ZalgoPromise<ProxyWindow> {\n        return ZalgoPromise.try(() => {\n            if (this.actualWindow) {\n                this.actualWindow.focus();\n            }\n            return this.serializedWindow.focus();\n        }).then(() => this);\n    }\n\n    isClosed() : ZalgoPromise<boolean> {\n        return ZalgoPromise.try(() => {\n            if (this.actualWindow) {\n                return isWindowClosed(this.actualWindow);\n            } else {\n                return this.serializedWindow.isClosed();\n            }\n        });\n    }\n\n    setWindow(win : CrossDomainWindowType) {\n        this.actualWindow = win;\n        this.actualWindowPromise.resolve(win);\n    }\n\n    matchWindow(win : CrossDomainWindowType) : ZalgoPromise<boolean> {\n        return ZalgoPromise.try(() => {\n            if (this.actualWindow) {\n                return win === this.actualWindow;\n            }\n            \n            return ZalgoPromise.all([\n                this.getInstanceID(),\n                getWindowInstanceID(win)\n            ]).then(([ proxyInstanceID, knownWindowInstanceID ]) => {\n                let match = proxyInstanceID === knownWindowInstanceID;\n\n                if (match) {\n                    this.setWindow(win);\n                }\n\n                return match;\n            });\n        });\n    }\n\n    unwrap() : CrossDomainWindowType | ProxyWindow {\n        return this.actualWindow || this;\n    }\n\n    awaitWindow() : ZalgoPromise<CrossDomainWindowType> {\n        return this.actualWindowPromise;\n    }\n\n    getInstanceID() : ZalgoPromise<string> {\n        if (this.actualWindow) {\n            return getWindowInstanceID(this.actualWindow);\n        } else {\n            return this.serializedWindow.getInstanceID();\n        }\n    }\n\n    serialize() : SerializedProxyWindow {\n        return this.serializedWindow;\n    }\n\n    shouldClean() : boolean {\n        return this.actualWindow && isWindowClosed(this.actualWindow);\n    }\n\n    static unwrap(win : CrossDomainWindowType | ProxyWindow) : CrossDomainWindowType | ProxyWindow {\n        return ProxyWindow.isProxyWindow(win)\n            // $FlowFixMe\n            ? win.unwrap()\n            : win;\n    }\n\n    static serialize(win : CrossDomainWindowType | ProxyWindow) : SerializedProxyWindow {\n        cleanupProxyWindows();\n\n        return ProxyWindow.toProxyWindow(win).serialize();\n    }\n\n    static deserialize(serializedWindow : SerializedProxyWindow) : ProxyWindow {\n        cleanupProxyWindows();\n        \n        return idToProxyWindow.getOrSet(serializedWindow.id, () => {\n            return new ProxyWindow(serializedWindow);\n        });\n    }\n\n    static isProxyWindow(obj : mixed) : boolean {\n        // $FlowFixMe\n        return Boolean(obj && obj.isProxyWindow);\n    }\n\n    static toProxyWindow(win : CrossDomainWindowType | ProxyWindow) : ProxyWindow {\n        cleanupProxyWindows();\n\n        if (ProxyWindow.isProxyWindow(win)) {\n            // $FlowFixMe\n            return win;\n        }\n\n        // $FlowFixMe\n        return winToProxyWindow.getOrSet(win, () => {\n            let id = uniqueID();\n\n            return idToProxyWindow.set(id, new ProxyWindow({\n                id,\n                // $FlowFixMe\n                type:          getOpener(win) ? WINDOW_TYPE.POPUP : WINDOW_TYPE.IFRAME,\n                getInstanceID: () => getWindowInstanceID(win),\n                close:         () => ZalgoPromise.try(() => {\n                    win.close();\n                }),\n                focus:         () => ZalgoPromise.try(() => {\n                    win.focus();\n                }),\n                isClosed:      () => ZalgoPromise.try(() => {\n                    // $FlowFixMe\n                    return isWindowClosed(win);\n                }),\n                setLocation:   (href) => ZalgoPromise.try(() => {\n                    // $FlowFixMe\n                    if (isSameDomain(win)) {\n                        try {\n                            if (win.location && typeof win.location.replace === 'function') {\n                                // $FlowFixMe\n                                win.location.replace(href);\n                                return;\n                            }\n                        } catch (err) {\n                            // pass\n                        }\n                    }\n    \n                    // $FlowFixMe\n                    win.location = href;\n                }),\n                setName:       (name) => ZalgoPromise.try(() => {\n                    if (__POST_ROBOT__.__IE_POPUP_SUPPORT__) {\n                        const { linkWindow } = require('../bridge');\n                        // $FlowFixMe\n                        linkWindow({ win, name });\n                    }\n                    // $FlowFixMe\n                    win.name = name;\n                })\n            // $FlowFixMe\n            }, win));\n        });\n    }\n}\n\nexport type SerializedWindow = CustomSerializedType<typeof SERIALIZATION_TYPE.CROSS_DOMAIN_WINDOW, SerializedProxyWindow>;\n\nexport function serializeWindow(destination : CrossDomainWindowType | ProxyWindow, domain : DomainMatcher, win : CrossDomainWindowType) : SerializedWindow {\n    return serializeType(SERIALIZATION_TYPE.CROSS_DOMAIN_WINDOW, ProxyWindow.serialize(win));\n}\n\nexport function deserializeWindow(source : CrossDomainWindowType | ProxyWindow, origin : string, win : SerializedProxyWindow) : ProxyWindow {\n    return ProxyWindow.deserialize(win);\n}\n","/* @flow */\n\nimport { matchDomain, getDomain, type CrossDomainWindowType, type DomainMatcher } from 'cross-domain-utils/src';\nimport { ZalgoPromise } from 'zalgo-promise/src';\nimport { once, uniqueID, isRegex } from 'belter/src';\nimport { serializeType, type CustomSerializedType } from 'universal-serialize/src';\n\nimport { MESSAGE_NAME, WILDCARD, SERIALIZATION_TYPE } from '../conf';\nimport { global, windowStore, globalStore } from '../global';\n\nimport { ProxyWindow } from './window';\n\nlet methodStore = windowStore('methodStore');\nlet proxyWindowMethods = globalStore('proxyWindowMethods');\nglobal.listeningForFunctions = global.listeningForFunctions || false;\n\nconst listenForFunctionCalls = once(() => {\n    if (global.listeningForFunctions) {\n        return;\n    }\n\n    global.listeningForFunctions = true;\n\n    global.on(MESSAGE_NAME.METHOD, { origin: WILDCARD }, ({ source, origin, data } : { source : CrossDomainWindowType, origin : string, data : Object }) => {\n        let { id, name } = data;\n        \n        return ZalgoPromise.try(() => {\n            let methods = methodStore.getOrSet(source, () => ({}));\n            let meth = methods[data.id] || proxyWindowMethods.get(id);\n\n            if (!meth) {\n                throw new Error(`Could not find method '${ data.name }' with id: ${ data.id } in ${ getDomain(window) }`);\n            }\n\n            let { proxy, domain, val } = meth;\n\n            return ZalgoPromise.try(() => {\n                if (!matchDomain(domain, origin)) {\n                    // $FlowFixMe\n                    throw new Error(`Method '${ data.name }' domain ${ JSON.stringify(isRegex(meth.domain) ? meth.domain.source : meth.domain) } does not match origin ${ origin } in ${ getDomain(window) }`);\n                }\n                \n                if (proxy) {\n                    // $FlowFixMe\n                    return proxy.matchWindow(source).then(match => { // eslint-disable-line max-nested-callbacks\n                        if (!match) {\n                            throw new Error(`Method call '${ data.name }' failed - proxy window does not match source in ${ getDomain(window) }`);\n                        }\n                    });\n                }\n            }).then(() => {\n                return val.apply({ source, origin, data }, data.args);\n            }, err => {\n                return ZalgoPromise.try(() => { // eslint-disable-line max-nested-callbacks\n                    if (val.onError) {\n                        return val.onError(err);\n                    }\n                }).then(() => { // eslint-disable-line max-nested-callbacks\n                    throw err;\n                });\n            }).then(result => {\n                return { result, id, name };\n            });\n        });\n    });\n});\n\nexport type SerializedFunction = CustomSerializedType<typeof SERIALIZATION_TYPE.CROSS_DOMAIN_FUNCTION, {\n    id : string,\n    name : string\n}>;\n\nexport function serializeFunction<T>(destination : CrossDomainWindowType | ProxyWindow, domain : DomainMatcher, val : () => ZalgoPromise<T> | T, key : string) : SerializedFunction {\n    listenForFunctionCalls();\n    \n    let id = uniqueID();\n    destination = ProxyWindow.unwrap(destination);\n\n    if (ProxyWindow.isProxyWindow(destination)) {\n        proxyWindowMethods.set(id, { proxy: destination, domain, val });\n        // $FlowFixMe\n        destination.awaitWindow().then(win => {\n            proxyWindowMethods.del(id);\n            let methods = methodStore.getOrSet(win, () => ({}));\n            methods[id] = { domain, val };\n        });\n    } else {\n        // $FlowFixMe\n        let methods = methodStore.getOrSet(destination, () => ({}));\n        methods[id] = { domain, val };\n    }\n\n    return serializeType(SERIALIZATION_TYPE.CROSS_DOMAIN_FUNCTION, { id, name: val.name || key });\n}\n\nexport function deserializeFunction<T>(source : CrossDomainWindowType | ProxyWindow, origin : string, { id, name } : { id : string, name : string }) : (...args : $ReadOnlyArray<mixed>) => ZalgoPromise<T> {\n    function innerWrapper<X : mixed>(args : $ReadOnlyArray<mixed>, opts? : Object = {}) : ZalgoPromise<X> {\n        let originalStack;\n\n        if (__DEBUG__) {\n            originalStack = (new Error(`Original call to ${ name }():`)).stack;\n        }\n\n        return ZalgoPromise.try(() => {\n            // $FlowFixMe\n            return ProxyWindow.isProxyWindow(source) ? source.awaitWindow() : source;\n        }).then(win => {\n            return global.send(win, MESSAGE_NAME.METHOD, { id, name, args }, { domain: origin, ...opts });\n        }).catch(err => {\n            // $FlowFixMe\n            if (__DEBUG__ && originalStack && err.stack) {\n                // $FlowFixMe\n                err.stack = `${ err.stack }\\n\\n${ originalStack }`;\n            }\n            throw err;\n        });\n    }\n\n    function crossDomainFunctionWrapper<X : mixed>() : ZalgoPromise<X> {\n        return innerWrapper(Array.prototype.slice.call(arguments))\n            .then(({ data }) => data.result);\n    }\n\n    crossDomainFunctionWrapper.fireAndForget = function crossDomainFireAndForgetFunctionWrapper<X : mixed>() : ZalgoPromise<X> {\n        return innerWrapper(Array.prototype.slice.call(arguments), { fireAndForget: true });\n    };\n\n    crossDomainFunctionWrapper.__name__ = name;\n    crossDomainFunctionWrapper.__xdomain__ = true;\n    crossDomainFunctionWrapper.origin = origin;\n\n    return crossDomainFunctionWrapper;\n}\n","/* @flow */\n\nimport { type CrossDomainWindowType, isWindow, type DomainMatcher } from 'cross-domain-utils/src';\nimport { TYPE, serialize, deserialize, type Thenable } from 'universal-serialize/src';\n\nimport { SERIALIZATION_TYPE } from '../conf';\n\nimport { serializeFunction, deserializeFunction, type SerializedFunction } from './function';\nimport { serializePromise, deserializePromise, type SerializedPromise } from './promise';\nimport { serializeWindow, deserializeWindow, type SerializedWindow, ProxyWindow } from './window';\n\nexport function serializeMessage<T : mixed>(destination : CrossDomainWindowType | ProxyWindow, domain : DomainMatcher, obj : T) : string {\n    return serialize(obj, {\n        [ TYPE.PROMISE ]:  (val : Thenable, key : string) : SerializedPromise => serializePromise(destination, domain, val, key),\n        [ TYPE.FUNCTION ]: (val : Function, key : string) : SerializedFunction => serializeFunction(destination, domain, val, key),\n        [ TYPE.OBJECT ]:   (val : CrossDomainWindowType) : Object | SerializedWindow => {\n            return (isWindow(val) || ProxyWindow.isProxyWindow(val)) ? serializeWindow(destination, domain, val) : val;\n        }\n    });\n}\n\nexport function deserializeMessage<T : mixed>(source : CrossDomainWindowType | ProxyWindow, origin : string, message : string) : T {\n    return deserialize(message, {\n        [ SERIALIZATION_TYPE.CROSS_DOMAIN_ZALGO_PROMISE ]: (serializedPromise)  => deserializePromise(source, origin, serializedPromise),\n        [ SERIALIZATION_TYPE.CROSS_DOMAIN_FUNCTION ]:      (serializedFunction) => deserializeFunction(source, origin, serializedFunction),\n        [ SERIALIZATION_TYPE.CROSS_DOMAIN_WINDOW ]:        (serializedWindow)   => deserializeWindow(source, origin, serializedWindow)\n    });\n}\n","/* @flow */\n\nimport { type CrossDomainWindowType, type DomainMatcher } from 'cross-domain-utils/src';\nimport { ZalgoPromise } from 'zalgo-promise/src';\nimport { serializeType, type CustomSerializedType, type Thenable } from 'universal-serialize/src';\n\nimport { SERIALIZATION_TYPE } from '../conf';\n\nimport { serializeFunction, type SerializedFunction } from './function';\nimport { ProxyWindow } from './window';\n\nexport type SerializedPromise = CustomSerializedType<typeof SERIALIZATION_TYPE.CROSS_DOMAIN_ZALGO_PROMISE, {\n    then : SerializedFunction\n}>;\n\nexport function serializePromise(destination : CrossDomainWindowType | ProxyWindow, domain : DomainMatcher, val : Thenable, key : string) : SerializedPromise {\n    return serializeType(SERIALIZATION_TYPE.CROSS_DOMAIN_ZALGO_PROMISE, {\n        then: serializeFunction(destination, domain, (resolve, reject) => val.then(resolve, reject), key)\n    });\n}\n\nexport function deserializePromise<T>(source : CrossDomainWindowType | ProxyWindow, origin : string, { then } : { then : Function }) : ZalgoPromise<T> {\n    return new ZalgoPromise(then);\n}\n","/* @flow */\n\nimport { isSameDomain, isSameTopWindow, isActuallySameDomain, getActualDomain, getDomain, type CrossDomainWindowType, type DomainMatcher } from 'cross-domain-utils/src';\n\nimport { SEND_STRATEGY, PROTOCOL, WILDCARD, WINDOW_PROP } from '../../conf';\nimport { needsGlobalMessagingForBrowser } from '../../lib';\n\nexport let SEND_MESSAGE_STRATEGIES = {};\n\n\nSEND_MESSAGE_STRATEGIES[SEND_STRATEGY.POST_MESSAGE] = (win : CrossDomainWindowType, serializedMessage : string, domain : DomainMatcher) => {\n\n    if (__TEST__) {\n        if (needsGlobalMessagingForBrowser() && isSameTopWindow(window, win) === false) {\n            return;\n        }\n    }\n\n    let domains;\n\n    if (Array.isArray(domain)) {\n        domains = domain;\n    } else if (typeof domain === 'string') {\n        domains = [ domain ];\n    } else {\n        domains = [ WILDCARD ];\n    }\n\n    domains = domains.map(dom => {\n\n        if (dom.indexOf(PROTOCOL.MOCK) === 0) {\n\n            if (window.location.protocol === PROTOCOL.FILE) {\n                return WILDCARD;\n            }\n\n            if (!isActuallySameDomain(win)) {\n                throw new Error(`Attempting to send messsage to mock domain ${ dom }, but window is actually cross-domain`);\n            }\n\n            // $FlowFixMe\n            return getActualDomain(win);\n        }\n\n        if (dom.indexOf(PROTOCOL.FILE) === 0) {\n            return WILDCARD;\n        }\n\n        return dom;\n    });\n\n    domains.forEach(dom => {\n        return win.postMessage(serializedMessage, dom);\n    });\n};\n\nif (__POST_ROBOT__.__IE_POPUP_SUPPORT__) {\n\n    let { sendBridgeMessage, needsBridgeForBrowser, isBridge } = require('../../bridge');\n\n    SEND_MESSAGE_STRATEGIES[SEND_STRATEGY.BRIDGE] = (win : CrossDomainWindowType, serializedMessage : string, domain : string) => {\n\n        if (!needsBridgeForBrowser() && !isBridge()) {\n            return;\n        }\n\n        if (isSameDomain(win)) {\n            throw new Error(`Post message through bridge disabled between same domain windows`);\n        }\n\n        if (isSameTopWindow(window, win) !== false) {\n            throw new Error(`Can only use bridge to communicate between two different windows, not between frames`);\n        }\n\n        return sendBridgeMessage(win, domain, serializedMessage);\n    };\n}\n\nif (__POST_ROBOT__.__IE_POPUP_SUPPORT__ || __POST_ROBOT__.__GLOBAL_MESSAGE_SUPPORT__) {\n    \n    SEND_MESSAGE_STRATEGIES[SEND_STRATEGY.GLOBAL] = (win : CrossDomainWindowType, serializedMessage : string) => {\n\n        if (!needsGlobalMessagingForBrowser()) {\n            return;\n        }\n\n        if (!isSameDomain(win)) {\n            throw new Error(`Post message through global disabled between different domain windows`);\n        }\n\n        if (isSameTopWindow(window, win) !== false) {\n            throw new Error(`Can only use global to communicate between two different windows, not between frames`);\n        }\n\n        // $FlowFixMe\n        let foreignGlobal = win[WINDOW_PROP.POSTROBOT];\n\n        if (!foreignGlobal) {\n            throw new Error(`Can not find postRobot global on foreign window`);\n        }\n\n        return foreignGlobal.receiveMessage({\n            source: window,\n            origin: getDomain(),\n            data:   serializedMessage\n        });\n    };\n}\n","/* @flow */\n\nimport { getUserAgent } from 'cross-domain-utils/src';\n\nexport function needsGlobalMessagingForBrowser() : boolean {\n\n    if (getUserAgent(window).match(/MSIE|rv:11|trident|edge\\/12|edge\\/13/i)) {\n        return true;\n    }\n\n    return false;\n}\n","/* @flow */\n\nimport { isWindowClosed, type CrossDomainWindowType } from 'cross-domain-utils/src';\nimport { ZalgoPromise } from 'zalgo-promise/src';\nimport { uniqueID, stringifyError } from 'belter/src';\n\nimport { MESSAGE_TYPE, CONFIG, MESSAGE_NAME, WILDCARD, WINDOW_PROP } from '../../conf';\nimport { serializeMessage } from '../../serialize';\nimport type { Message } from '../types';\n\nimport { SEND_MESSAGE_STRATEGIES } from './strategies';\n\nfunction logMessage(domain : string | $ReadOnlyArray<string>, message : Message) {\n    if (__DEBUG__) {\n        let level;\n\n        if (Object.keys(MESSAGE_NAME).map(key => MESSAGE_NAME[key]).indexOf(message.name) !== -1 || message.type === MESSAGE_TYPE.ACK) {\n            level = 'debug';\n        } else if (message.ack === 'error') {\n            level = 'error';\n        } else {\n            level = 'info';\n        }\n\n        // eslint-disable-next-line no-console\n        if (typeof console !== 'undefined' && typeof console[level] === 'function') {\n            // eslint-disable-next-line no-console\n            console[level]('postrobot_send', message.type.replace(/^postrobot_message_/, ''), '::', message.name, '::', domain || WILDCARD, '\\n\\n', message);\n        }\n    }\n}\n\nexport function sendMessage(win : CrossDomainWindowType, domain : string | $ReadOnlyArray<string>, message : Message) : ZalgoPromise<void> {\n    return ZalgoPromise.try(() => {\n\n        if (isWindowClosed(win)) {\n            throw new Error('Window is closed');\n        }\n\n        logMessage(domain, message);\n\n        const serializedMessage = serializeMessage(win, domain, {\n            [ WINDOW_PROP.POSTROBOT ]: {\n                id: uniqueID(),\n                ...message\n            }\n        });\n\n\n        let messages = [];\n\n        return ZalgoPromise.map(Object.keys(SEND_MESSAGE_STRATEGIES), strategyName => {\n\n            return ZalgoPromise.try(() => {\n\n                if (!CONFIG.ALLOWED_POST_MESSAGE_METHODS[strategyName]) {\n                    throw new Error(`Strategy disallowed: ${ strategyName }`);\n                }\n\n                return SEND_MESSAGE_STRATEGIES[strategyName](win, serializedMessage, domain);\n\n            }).then(() => {\n                messages.push(`${ strategyName }: success`);\n                return true;\n            }, err => {\n                messages.push(`${ strategyName }: ${ stringifyError(err) }\\n`);\n                return false;\n            });\n\n        }).then(results => {\n\n            let success = results.some(Boolean);\n            let status = `${ message.type } ${ message.name } ${ success ? 'success' : 'error' }:\\n  - ${ messages.join('\\n  - ') }\\n`;\n\n            if (!success) {\n                throw new Error(status);\n            }\n        });\n    });\n}\n","/* @flow */\n\nimport { type ZalgoPromise } from 'zalgo-promise/src';\nimport { matchDomain, type CrossDomainWindowType, type DomainMatcher } from 'cross-domain-utils/src';\nimport { isRegex, getOrSet } from 'belter/src';\n\nimport { global, globalStore, windowStore } from '../global';\nimport { WILDCARD } from '../conf';\n\nlet responseListeners = globalStore('responseListeners');\nlet requestListeners = windowStore('requestListeners');\nlet erroredResponseListeners = globalStore('erroredResponseListeners');\n\nexport function resetListeners() {\n    responseListeners.reset();\n    erroredResponseListeners.reset();\n}\n\nglobal.WINDOW_WILDCARD = global.WINDOW_WILDCARD || new (function WindowWildcard() { /* pass */ })();\n\nconst __DOMAIN_REGEX__ = '__domain_regex__';\n\nexport type RequestListenerType = {\n    handler : ({ source : CrossDomainWindowType, origin : string, data : mixed }) => (mixed | ZalgoPromise<mixed>),\n    handleError : (err : mixed) => void,\n    window : ?CrossDomainWindowType,\n    name : string,\n    domain : DomainMatcher\n};\n\nexport type ResponseListenerType = {\n    name : string,\n    window : CrossDomainWindowType,\n    domain : DomainMatcher,\n    respond : (err : ?mixed, result : ?mixed) => void,\n    ack? : ?boolean\n};\n\nexport function addResponseListener(hash : string, listener : ResponseListenerType) {\n    responseListeners.set(hash, listener);\n}\n\nexport function getResponseListener(hash : string) : ?ResponseListenerType {\n    return responseListeners.get(hash);\n}\n\nexport function deleteResponseListener(hash : string) {\n    responseListeners.del(hash);\n}\n\nexport function markResponseListenerErrored(hash : string) {\n    erroredResponseListeners.set(hash, true);\n}\n\nexport function isResponseListenerErrored(hash : string) : boolean {\n    return erroredResponseListeners.has(hash);\n}\n\nexport function getRequestListener({ name, win, domain } : { name : string, win : ?CrossDomainWindowType, domain : ?(string | RegExp) }) : ?RequestListenerType {\n\n    if (win === WILDCARD) {\n        win = null;\n    }\n\n    if (domain === WILDCARD) {\n        domain = null;\n    }\n\n    if (!name) {\n        throw new Error(`Name required to get request listener`);\n    }\n\n    for (let winQualifier of [ win, global.WINDOW_WILDCARD ]) {\n        if (!winQualifier) {\n            continue;\n        }\n\n        let nameListeners = requestListeners.get(winQualifier);\n\n        if (!nameListeners) {\n            continue;\n        }\n\n        let domainListeners = nameListeners[name];\n\n        if (!domainListeners) {\n            continue;\n        }\n\n        if (domain && typeof domain === 'string') {\n            if (domainListeners[domain]) {\n                return domainListeners[domain];\n            }\n\n            if (domainListeners[__DOMAIN_REGEX__]) {\n                for (let { regex, listener } of domainListeners[__DOMAIN_REGEX__]) {\n                    if (matchDomain(regex, domain)) {\n                        return listener;\n                    }\n                }\n            }\n        }\n\n        if (domainListeners[WILDCARD]) {\n            return domainListeners[WILDCARD];\n        }\n    }\n}\n\nexport function addRequestListener({ name, win, domain } : { name : string, win : ?CrossDomainWindowType, domain : ?DomainMatcher }, listener : RequestListenerType) : { cancel : () => void } {\n\n    if (!name || typeof name !== 'string') {\n        throw new Error(`Name required to add request listener`);\n    }\n\n    if (Array.isArray(win)) {\n        let listenersCollection = [];\n\n        for (let item of win) {\n            listenersCollection.push(addRequestListener({ name, domain, win: item }, listener));\n        }\n\n        return {\n            cancel() {\n                for (let cancelListener of listenersCollection) {\n                    cancelListener.cancel();\n                }\n            }\n        };\n    }\n\n    if (Array.isArray(domain)) {\n        let listenersCollection = [];\n\n        for (let item of domain) {\n            listenersCollection.push(addRequestListener({ name, win, domain: item }, listener));\n        }\n\n        return {\n            cancel() {\n                for (let cancelListener of listenersCollection) {\n                    cancelListener.cancel();\n                }\n            }\n        };\n    }\n\n    let existingListener = getRequestListener({ name, win, domain });\n\n    if (!win || win === WILDCARD) {\n        win = global.WINDOW_WILDCARD;\n    }\n\n    domain = domain || WILDCARD;\n\n    if (existingListener) {\n        if (win && domain) {\n            throw new Error(`Request listener already exists for ${ name } on domain ${ domain.toString() } for ${ win === global.WINDOW_WILDCARD ? 'wildcard' : 'specified' } window`);\n        } else if (win) {\n            throw new Error(`Request listener already exists for ${ name } for ${ win === global.WINDOW_WILDCARD ? 'wildcard' : 'specified' } window`);\n        } else if (domain) {\n            throw new Error(`Request listener already exists for ${ name } on domain ${ domain.toString() }`);\n        } else {\n            throw new Error(`Request listener already exists for ${ name }`);\n        }\n    }\n\n    let nameListeners = requestListeners.getOrSet(win, () => ({}));\n    // $FlowFixMe\n    let domainListeners = getOrSet(nameListeners, name, () => ({}));\n\n    let strDomain = domain.toString();\n\n    let regexListeners;\n    let regexListener;\n\n    if (isRegex(domain)) {\n        regexListeners = getOrSet(domainListeners, __DOMAIN_REGEX__, () => []);\n        regexListener = { regex: domain, listener };\n        regexListeners.push(regexListener);\n    } else {\n        domainListeners[strDomain] = listener;\n    }\n\n    return {\n        cancel() {\n            delete domainListeners[strDomain];\n\n            if (regexListener) {\n                regexListeners.splice(regexListeners.indexOf(regexListener, 1));\n\n                if (!regexListeners.length) {\n                    delete domainListeners[__DOMAIN_REGEX__];\n                }\n            }\n\n            if (!Object.keys(domainListeners).length) {\n                // $FlowFixMe\n                delete nameListeners[name];\n            }\n\n            // $FlowFixMe\n            if (win && !Object.keys(nameListeners).length) {\n                requestListeners.del(win);\n            }\n        }\n    };\n}\n","/* @flow */\n\nimport { ZalgoPromise } from 'zalgo-promise/src';\nimport { isWindowClosed, matchDomain, stringifyDomainPattern, type CrossDomainWindowType } from 'cross-domain-utils/src';\nimport { noop } from 'belter/src';\n\nimport { MESSAGE_TYPE, MESSAGE_ACK } from '../../conf';\nimport { sendMessage } from '../send';\nimport { getRequestListener, getResponseListener, deleteResponseListener, isResponseListenerErrored } from '../listeners';\nimport type { RequestMessage, AckResponseMessage, SuccessResponseMessage, ErrorResponseMessage } from '../types';\n\nexport let RECEIVE_MESSAGE_TYPES = {\n\n    [ MESSAGE_TYPE.REQUEST ](source : CrossDomainWindowType, origin : string, message : RequestMessage) : ZalgoPromise<void> {\n\n        let options = getRequestListener({ name: message.name, win: source, domain: origin });\n\n        function sendResponse(type : $Values<typeof MESSAGE_TYPE>, data = {}) : ZalgoPromise<void> {\n\n            if (message.fireAndForget || isWindowClosed(source)) {\n                return ZalgoPromise.resolve();\n            }\n\n            // $FlowFixMe\n            return sendMessage(source, origin, {\n                type,\n                hash:   message.hash,\n                name:   message.name,\n                ...data\n            });\n        }\n\n        return ZalgoPromise.all([\n\n            sendResponse(MESSAGE_TYPE.ACK),\n\n            ZalgoPromise.try(() => {\n\n                if (!options) {\n                    throw new Error(`No handler found for post message: ${ message.name } from ${ origin } in ${ window.location.protocol }//${ window.location.host }${ window.location.pathname }`);\n                }\n\n                if (!matchDomain(options.domain, origin)) {\n                    throw new Error(`Request origin ${ origin } does not match domain ${ options.domain.toString() }`);\n                }\n\n                let data = message.data;\n\n                return options.handler({ source, origin, data });\n\n            }).then(data => {\n                return sendResponse(MESSAGE_TYPE.RESPONSE, {\n                    ack:  MESSAGE_ACK.SUCCESS,\n                    data\n                });\n\n            }, error => {\n                return sendResponse(MESSAGE_TYPE.RESPONSE, {\n                    ack:  MESSAGE_ACK.ERROR,\n                    error\n                });\n            })\n\n        ]).then(noop).catch(err => {\n            if (options && options.handleError) {\n                return options.handleError(err);\n            } else {\n                throw err;\n            }\n        });\n    },\n\n    [ MESSAGE_TYPE.ACK ](source : CrossDomainWindowType, origin : string, message : AckResponseMessage) {\n\n        if (isResponseListenerErrored(message.hash)) {\n            return;\n        }\n\n        let options = getResponseListener(message.hash);\n\n        if (!options) {\n            throw new Error(`No handler found for post message ack for message: ${ message.name } from ${ origin } in ${ window.location.protocol }//${ window.location.host }${ window.location.pathname }`);\n        }\n\n        if (!matchDomain(options.domain, origin)) {\n            throw new Error(`Ack origin ${ origin } does not match domain ${ options.domain.toString() }`);\n        }\n\n        options.ack = true;\n    },\n\n    [ MESSAGE_TYPE.RESPONSE ](source : CrossDomainWindowType, origin : string, message : SuccessResponseMessage | ErrorResponseMessage) : void | ZalgoPromise<void> {\n\n        if (isResponseListenerErrored(message.hash)) {\n            return;\n        }\n\n        let options = getResponseListener(message.hash);\n\n        if (!options) {\n            throw new Error(`No handler found for post message response for message: ${ message.name } from ${ origin } in ${ window.location.protocol }//${ window.location.host }${ window.location.pathname }`);\n        }\n\n        if (!matchDomain(options.domain, origin)) {\n            throw new Error(`Response origin ${ origin } does not match domain ${ stringifyDomainPattern(options.domain) }`);\n        }\n\n        deleteResponseListener(message.hash);\n\n        if (message.ack === MESSAGE_ACK.ERROR) {\n            return options.respond(message.error, null);\n        } else if (message.ack === MESSAGE_ACK.SUCCESS) {\n            let data = message.data;\n            return options.respond(null, { source, origin, data });\n        }\n    }\n};\n","/* @flow */\n\nimport { isWindowClosed, type CrossDomainWindowType, getDomain, isSameTopWindow } from 'cross-domain-utils/src';\nimport { addEventListener, noop } from 'belter/src';\n\nimport { MESSAGE_NAME, WINDOW_PROP, MESSAGE_TYPE } from '../../conf';\nimport { markWindowKnown, needsGlobalMessagingForBrowser } from '../../lib';\nimport { deserializeMessage } from '../../serialize';\nimport { global, globalStore } from '../../global';\n\nimport { RECEIVE_MESSAGE_TYPES } from './types';\n\nlet receivedMessages = globalStore('receivedMessages');\n\ntype MessageEvent = {\n    source : CrossDomainWindowType,\n    origin : string,\n    data : string\n};\n\nfunction parseMessage(message : string, source : CrossDomainWindowType, origin : string) : ?Object {\n\n    let parsedMessage;\n\n    try {\n        parsedMessage = deserializeMessage(source, origin, message);\n    } catch (err) {\n        return;\n    }\n\n    if (!parsedMessage) {\n        return;\n    }\n\n    if (typeof parsedMessage !== 'object' || parsedMessage === null) {\n        return;\n    }\n\n    parsedMessage = parsedMessage[WINDOW_PROP.POSTROBOT];\n\n    if (!parsedMessage || typeof parsedMessage !== 'object' || parsedMessage === null) {\n        return;\n    }\n\n    if (!parsedMessage.type || typeof parsedMessage.type !== 'string') {\n        return;\n    }\n\n    if (!RECEIVE_MESSAGE_TYPES[parsedMessage.type]) {\n        return;\n    }\n\n    return parsedMessage;\n}\n\n\nexport function receiveMessage(event : MessageEvent) {\n\n    if (!window || window.closed) {\n        throw new Error(`Message recieved in closed window`);\n    }\n\n    try {\n        if (!event.source) {\n            return;\n        }\n    } catch (err) {\n        return;\n    }\n\n    let { source, origin, data } = event;\n\n    if (__TEST__) {\n        // $FlowFixMe\n        origin = getDomain(source);\n    }\n\n    let message = parseMessage(data, source, origin);\n\n    if (!message) {\n        return;\n    }\n\n    markWindowKnown(source);\n\n    if (receivedMessages.has(message.id)) {\n        return;\n    }\n\n    receivedMessages.set(message.id, true);\n\n    if (__DEBUG__) {\n        let level;\n\n        if (Object.keys(MESSAGE_NAME).map(key => MESSAGE_NAME[key]).indexOf(message.name) !== -1 || message.type === MESSAGE_TYPE.ACK) {\n            level = 'debug';\n        } else if (message.ack === 'error') {\n            level = 'error';\n        } else {\n            level = 'info';\n        }\n\n        // eslint-disable-next-line no-console\n        if (typeof console !== 'undefined' && typeof console[level] === 'function') {\n            // eslint-disable-next-line no-console\n            console[level]('postrobot_receive', message.type.replace(/^postrobot_message_/, ''), '::', message.name, '::', origin, '\\n\\n', message);\n        }\n    }\n\n    if (isWindowClosed(source) && !message.fireAndForget) {\n        return;\n    }\n\n    RECEIVE_MESSAGE_TYPES[message.type](source, origin, message);\n}\n\nexport function messageListener(event : { source : CrossDomainWindowType, origin : string, data : string, sourceElement : CrossDomainWindowType, originalEvent? : { origin : string } }) {\n\n    try {\n        noop(event.source);\n    } catch (err) {\n        return;\n    }\n\n    // $FlowFixMe\n    let messageEvent : MessageEvent = {\n        source: event.source || event.sourceElement,\n        origin: event.origin || (event.originalEvent && event.originalEvent.origin),\n        data:   event.data\n    };\n\n    if (!messageEvent.source) {\n        return;\n    }\n\n    if (!messageEvent.origin) {\n        throw new Error(`Post message did not have origin domain`);\n    }\n\n    if (__TEST__) {\n        if (needsGlobalMessagingForBrowser() && isSameTopWindow(messageEvent.source, window) === false) {\n            return;\n        }\n    }\n\n    receiveMessage(messageEvent);\n}\n\nexport function listenForMessages() {\n    // $FlowFixMe\n    addEventListener(window, 'message', messageListener);\n}\n\nglobal.receiveMessage = receiveMessage;\n","/* @flow */\n\nimport { ZalgoPromise } from 'zalgo-promise/src';\nimport { getAncestor, isAncestor, isWindowClosed, getDomain, matchDomain, type CrossDomainWindowType, type DomainMatcher } from 'cross-domain-utils/src';\nimport { uniqueID, isRegex } from 'belter/src';\n\n\nimport { CONFIG, MESSAGE_TYPE, WILDCARD } from '../conf';\nimport { sendMessage, addResponseListener, deleteResponseListener, markResponseListenerErrored, type ResponseListenerType } from '../drivers';\nimport { awaitWindowHello, sayHello, isWindowKnown } from '../lib';\nimport { global, windowStore } from '../global';\n\nexport let requestPromises = windowStore('requestPromises');\n\ntype WindowResolverType = CrossDomainWindowType | string | HTMLIFrameElement;\n\ntype RequestOptionsType = {\n    window? : ?WindowResolverType,\n    domain? : ?DomainMatcher,\n    name? : ?string,\n    data? : ?Object,\n    fireAndForget? : ?boolean,\n    timeout? : ?number\n};\n\ntype ResponseMessageEvent = {\n    source : CrossDomainWindowType,\n    origin : string,\n    data : Object\n};\n\nexport function request(options : RequestOptionsType) : ZalgoPromise<ResponseMessageEvent> {\n\n    let prom = ZalgoPromise.try(() => {\n\n        if (!options.name) {\n            throw new Error('Expected options.name');\n        }\n\n        let name = options.name;\n        let targetWindow : ?CrossDomainWindowType;\n        let domain : DomainMatcher;\n\n        if (typeof options.window === 'string') {\n            let el = document.getElementById(options.window);\n\n            if (!el) {\n                throw new Error(`Expected options.window ${ Object.prototype.toString.call(options.window) } to be a valid element id`);\n            }\n\n            if (el.tagName.toLowerCase() !== 'iframe') {\n                throw new Error(`Expected options.window ${ Object.prototype.toString.call(options.window) } to be an iframe`);\n            }\n\n            // $FlowFixMe\n            if (!el.contentWindow) {\n                throw new Error('Iframe must have contentWindow.  Make sure it has a src attribute and is in the DOM.');\n            }\n\n            // $FlowFixMe\n            targetWindow = el.contentWindow;\n\n        } else if (options.window instanceof HTMLIFrameElement) {\n\n            if (options.window.tagName.toLowerCase() !== 'iframe') {\n                throw new Error(`Expected options.window ${ Object.prototype.toString.call(options.window) } to be an iframe`);\n            }\n\n            if (options.window && !options.window.contentWindow) {\n                throw new Error('Iframe must have contentWindow.  Make sure it has a src attribute and is in the DOM.');\n            }\n\n            if (options.window && options.window.contentWindow) {\n                // $FlowFixMe\n                targetWindow = options.window.contentWindow;\n            }\n        } else {\n            targetWindow = options.window;\n        }\n\n        if (!targetWindow) {\n            throw new Error('Expected options.window to be a window object, iframe, or iframe element id.');\n        }\n\n        const win = targetWindow;\n\n        domain = options.domain || WILDCARD;\n\n        let hash = `${ options.name }_${ uniqueID() }`;\n\n        if (isWindowClosed(win)) {\n            throw new Error('Target window is closed');\n        }\n\n        let hasResult = false;\n\n        let reqPromises = requestPromises.getOrSet(win, () => []);\n\n        let requestPromise = ZalgoPromise.try(() => {\n\n            if (isAncestor(window, win)) {\n                return awaitWindowHello(win, options.timeout || CONFIG.CHILD_WINDOW_TIMEOUT);\n            }\n\n        }).then(({ domain: origin } = {}) => {\n\n            if (isRegex(domain) && !origin) {\n                return sayHello(win);\n            }\n\n        }).then(({ domain: origin } = {}) => {\n\n            if (isRegex(domain)) {\n                if (!matchDomain(domain, origin)) {\n                    throw new Error(`Remote window domain ${ origin } does not match regex: ${ domain.toString() }`);\n                }\n\n                domain = origin;\n            }\n\n            if (typeof domain !== 'string' && !Array.isArray(domain)) {\n                throw new TypeError(`Expected domain to be a string or array`);\n            }\n\n            const actualDomain = domain;\n\n            return new ZalgoPromise((resolve, reject) => {\n\n                let responseListener : ResponseListenerType;\n\n                if (!options.fireAndForget) {\n                    responseListener = {\n                        name,\n                        window: win,\n                        domain: actualDomain,\n                        respond(err, result) {\n                            if (!err) {\n                                hasResult = true;\n                                reqPromises.splice(reqPromises.indexOf(requestPromise, 1));\n                            }\n\n                            if (err) {\n                                reject(err);\n                            } else {\n                                resolve(result);\n                            }\n                        }\n                    };\n\n                    addResponseListener(hash, responseListener);\n                }\n\n                sendMessage(win, actualDomain, {\n                    type:          MESSAGE_TYPE.REQUEST,\n                    hash,\n                    name,\n                    data:          options.data,\n                    fireAndForget: Boolean(options.fireAndForget)\n                }).catch(reject);\n\n                if (options.fireAndForget) {\n                    return resolve();\n                }\n\n                let totalAckTimeout = isWindowKnown(win) ? CONFIG.ACK_TIMEOUT_KNOWN : CONFIG.ACK_TIMEOUT;\n                let totalResTimeout = options.timeout || CONFIG.RES_TIMEOUT;\n\n                let ackTimeout = totalAckTimeout;\n                let resTimeout = totalResTimeout;\n\n                let cycleTime = 100;\n\n                let cycle = () => {\n\n                    if (hasResult) {\n                        return;\n                    }\n\n                    if (isWindowClosed(win)) {\n\n                        if (!responseListener.ack) {\n                            return reject(new Error(`Window closed for ${ name } before ack`));\n                        }\n\n                        return reject(new Error(`Window closed for ${ name } before response`));\n                    }\n\n                    ackTimeout = Math.max(ackTimeout - cycleTime, 0);\n                    if (resTimeout !== -1) {\n                        resTimeout = Math.max(resTimeout - cycleTime, 0);\n                    }\n\n                    let hasAck = responseListener.ack;\n\n                    if (hasAck) {\n\n                        if (resTimeout === -1) {\n                            return;\n                        }\n\n                        cycleTime = Math.min(resTimeout, 2000);\n\n                    } else if (ackTimeout === 0) {\n                        return reject(new Error(`No ack for postMessage ${ name } in ${ getDomain() } in ${ totalAckTimeout }ms`));\n\n                    } else if (resTimeout === 0) {\n                        return reject(new Error(`No response for postMessage ${ name } in ${ getDomain() } in ${ totalResTimeout }ms`));\n                    }\n\n                    setTimeout(cycle, cycleTime);\n                };\n\n                setTimeout(cycle, cycleTime);\n            });\n        });\n\n        requestPromise.catch(() => {\n            markResponseListenerErrored(hash);\n            deleteResponseListener(hash);\n        });\n\n        reqPromises.push(requestPromise);\n\n        return requestPromise;\n    });\n\n    return prom;\n}\n\nexport function send(window : WindowResolverType, name : string, data : ?Object, options : ?RequestOptionsType) : ZalgoPromise<ResponseMessageEvent> {\n\n    options = options || {};\n    options.window = window;\n    options.name = name;\n    options.data = data;\n\n    return request(options);\n}\n\nexport function sendToParent(name : string, data : ?Object, options : ?RequestOptionsType) : ZalgoPromise<ResponseMessageEvent> {\n\n    let win = getAncestor();\n\n    if (!win) {\n        return new ZalgoPromise((resolve, reject) => reject(new Error('Window does not have a parent')));\n    }\n\n    return send(win, name, data, options);\n}\n\nexport function client(options : RequestOptionsType = {}) : { send : (string, ?Object) => ZalgoPromise<ResponseMessageEvent> } {\n\n    if (!options.window) {\n        throw new Error(`Expected options.window`);\n    }\n\n    const win = options.window;\n\n    return {\n        send(name : string, data : ?Object) : ZalgoPromise<ResponseMessageEvent> {\n            return send(win, name, data, options);\n        }\n    };\n}\n\nglobal.send = send;\n","/* @flow */\n\nimport { isWindowClosed, type CrossDomainWindowType, type DomainMatcher } from 'cross-domain-utils/src';\nimport { ZalgoPromise } from 'zalgo-promise/src';\nimport { once as onceFunction, safeInterval } from 'belter/src';\n\nimport { addRequestListener, type RequestListenerType } from '../drivers';\nimport { WILDCARD } from '../conf';\nimport { global } from '../global';\n\ntype ErrorHandlerType = (err : mixed) => void;\ntype HandlerType = ({ source : CrossDomainWindowType, origin : string, data : mixed }) => (void | mixed | ZalgoPromise<mixed>);\n\ntype ServerOptionsType = {\n    handler? : ?HandlerType,\n    errorHandler? : ?ErrorHandlerType,\n    window? : CrossDomainWindowType,\n    name? : ?string,\n    domain? : ?DomainMatcher,\n    once? : ?boolean,\n    errorOnClose? : ?boolean\n};\n\nexport function listen(options : ServerOptionsType) : { cancel : () => void } {\n\n    if (!options.name) {\n        throw new Error('Expected options.name');\n    }\n\n    if (!options.handler) {\n        throw new Error('Expected options.handler');\n    }\n\n    const name = options.name;\n    const win = options.window;\n    const domain = options.domain;\n\n    let listenerOptions : RequestListenerType = {\n        handler:     options.handler,\n        handleError: options.errorHandler || (err => {\n            throw err;\n        }),\n        window: win,\n        domain: domain || WILDCARD,\n        name\n    };\n\n    let requestListener = addRequestListener({ name, win, domain }, listenerOptions);\n\n    if (options.once) {\n        let handler = listenerOptions.handler;\n        listenerOptions.handler = onceFunction(function listenOnce() : mixed | ZalgoPromise<mixed> {\n            requestListener.cancel();\n            return handler.apply(this, arguments);\n        });\n    }\n\n    if (listenerOptions.window && options.errorOnClose) {\n        let interval = safeInterval(() => {\n            if (win && typeof win === 'object' && isWindowClosed(win)) {\n                interval.cancel();\n                listenerOptions.handleError(new Error('Post message target window is closed'));\n            }\n        }, 50);\n    }\n\n    return {\n        cancel() {\n            requestListener.cancel();\n        }\n    };\n}\n\nexport function on(name : string, options : ServerOptionsType | HandlerType, handler : ?HandlerType) : { cancel : () => void } {\n\n    if (typeof options === 'function') {\n        handler = options;\n        options = {};\n    }\n\n    options = options || {};\n\n    options.name = name;\n    options.handler = handler || options.handler;\n\n    return listen(options);\n}\n\nexport function once(name : string, options : ?(ServerOptionsType | HandlerType) = {}, handler : ?HandlerType) : ZalgoPromise<{ source : mixed, origin : string, data : Object }> {\n\n    if (typeof options === 'function') {\n        handler = options;\n        options = {};\n    }\n\n    options = options || {};\n    handler = handler || options.handler;\n    let errorHandler = options.errorHandler;\n\n    let promise = new ZalgoPromise((resolve, reject) => {\n\n        options = options || {};\n\n        options.name = name;\n        options.once = true;\n\n        options.handler = (event) => {\n            resolve(event);\n            if (handler) {\n                return handler(event);\n            }\n        };\n\n        options.errorHandler = (err) => {\n            reject(err);\n            if (errorHandler) {\n                return errorHandler(err);\n            }\n        };\n    });\n\n    let onceListener = listen(options);\n    promise.cancel = onceListener.cancel;\n\n    return promise;\n}\n\nexport function listener(options : ServerOptionsType = {}) : { on : (name : string, handler : HandlerType) => { cancel : () => void } } {\n\n    return {\n        on(name : string, handler : HandlerType) : { cancel : () => void } {\n            return on(name, options, handler);\n        }\n    };\n}\n\nglobal.on = on;\n","/* @flow */\n\nimport { WINDOW_PROP } from '../conf';\nimport { messageListener } from '../drivers';\n\nexport { CONFIG } from '../conf';\n\nexport function disable() {\n    delete window[WINDOW_PROP.POSTROBOT];\n    window.removeEventListener('message', messageListener);\n}\n","/* @flow */\n\nimport { getAncestor } from 'cross-domain-utils/src';\n\nexport * from './client';\nexport * from './server';\nexport * from './config';\n\nexport let parent = getAncestor();\n","/* @flow */\n\nimport { type CrossDomainWindowType } from 'cross-domain-utils/src';\nimport { noop } from 'belter/src';\n\nimport { requestPromises } from './public';\n\nexport function cleanUpWindow(win : CrossDomainWindowType) {\n    for (let promise of requestPromises.get(win, [])) {\n        promise.reject(new Error(`Window cleaned up before response`)).catch(noop);\n    }\n}\n","/* @flow */\n\nimport { initHello } from './lib';\nimport { listenForMessages } from './drivers';\nimport { global } from './global';\n\nexport * from './public';\nexport { markWindowKnown } from './lib';\nexport { serializeMessage, deserializeMessage, ProxyWindow } from './serialize';\nexport { cleanUpWindow } from './clean';\nexport { ZalgoPromise as Promise } from 'zalgo-promise/src';\nexport let bridge = __POST_ROBOT__.__IE_POPUP_SUPPORT__ ? require('./bridge/interface') : null;\n\nif (!global.initialized) {\n    global.initialized = true;\n\n    listenForMessages();\n\n    if (bridge) {\n        bridge.openTunnelToOpener();\n    }\n\n    initHello();\n}\n","/* @flow */\n\n// eslint-disable-next-line import/no-namespace\nimport * as INTERFACE from './interface';\n\nexport * from './interface';\nexport default INTERFACE;\n","/* @flow */\n\nimport { isSameDomain, type CrossDomainWindowType } from 'cross-domain-utils/src';\n\nimport { __ZOID__ } from '../constants';\n\nexport function globalFor(win : CrossDomainWindowType) : ?Object {\n\n    if (!isSameDomain(win)) {\n        return;\n    }\n\n    if (!win[__ZOID__]) {\n        win[__ZOID__] = {};\n    }\n\n    return win[__ZOID__];\n}\n\nexport function localGlobal() : Object {\n    const global = globalFor(window);\n\n    if (!global) {\n        throw new Error(`Could not get local global`);\n    }\n\n    return global;\n}\n\nexport const global = localGlobal();\n","/* @flow */\n\nimport { memoize, stringifyError, base64encode, base64decode } from 'belter/src';\n\nimport { ZOID } from '../constants';\nimport type { ChildPayload } from '../parent';\n\nexport function buildChildWindowName(name : string, childPayload : ChildPayload) : string {\n    return `__${ ZOID }__${ name }__${ base64encode(JSON.stringify(childPayload)) }__`;\n}\n\nexport const parseChildWindowName = memoize(() : ChildPayload => {\n    if (!window.name) {\n        throw new Error(`No window name`);\n    }\n\n    const [ , zoidcomp, name, encodedPayload ] = window.name.split('__');\n\n    if (zoidcomp !== ZOID) {\n        throw new Error(`Window not rendered by zoid - got ${ zoidcomp }`);\n    }\n\n    if (!name) {\n        throw new Error(`Expected component name`);\n    }\n\n    if (!encodedPayload) {\n        throw new Error(`Expected encoded payload`);\n    }\n\n    try {\n        return JSON.parse(base64decode(encodedPayload));\n    } catch (err) {\n        throw new Error(`Can not decode window name payload: ${ encodedPayload }: ${ stringifyError(err) }`);\n    }\n});\n\nexport const isZoidComponentWindow = memoize(() => {\n    try {\n        parseChildWindowName();\n    } catch (err) {\n        return false;\n    }\n\n    return true;\n});\n","/* @flow */\n\nimport { getDomain, isSameDomain, type CrossDomainWindowType } from 'cross-domain-utils/src';\n\nimport type { Component } from '../component';\nimport type { PropsType, MixedPropDefinitionType } from '../component/props';\n\nimport type { ChildHelpers } from './index';\n\nexport function normalizeChildProp<T, P>(component : Component<P>, props : (PropsType<P>), key : string, value : T, helpers : ChildHelpers<P>) : ?T  {\n\n    // $FlowFixMe\n    const prop : MixedPropDefinitionType<P> = component.getPropDefinition(key);\n\n    if (!prop) {\n        return value;\n    }\n\n    const { focus, close, resize, onError, onPropsChange } = helpers;\n\n    if (typeof prop.childDecorate === 'function') {\n        return prop.childDecorate({ value, focus, close, resize, onError, onPropsChange });\n    }\n\n    return value;\n}\n\n// eslint-disable-next-line max-params\nexport function normalizeChildProps<P>(parentComponentWindow : CrossDomainWindowType, component : Component<P>, props : (PropsType<P>), origin : string, helpers : ChildHelpers<P>, isUpdate : boolean = false) : (PropsType<P>) {\n\n    const result = {};\n\n    // $FlowFixMe\n    for (const key of Object.keys(props)) {\n        const prop = component.getPropDefinition(key);\n\n        if (prop && prop.sameDomain && (origin !== getDomain(window) || !isSameDomain(parentComponentWindow))) {\n            continue;\n        }\n\n        const value = normalizeChildProp(component, props, key, props[key], helpers);\n\n        result[key] = value;\n        if (prop && prop.alias && !result[prop.alias]) {\n            result[prop.alias] = value;\n        }\n    }\n\n    if (!isUpdate) {\n        for (const key of component.getPropNames()) {\n            if (!props.hasOwnProperty(key)) {\n                result[key] = normalizeChildProp(component, props, key, props[key], helpers);\n            }\n        }\n    }\n\n    // $FlowFixMe\n    return result;\n}\n","/* @flow */\n/* eslint max-lines: 0 */\n\nimport { isSameDomain, matchDomain, getDomain, getOpener, getTop, getParent,\n    getNthParentFromTop, getAncestor, getAllFramesInWindow, type CrossDomainWindowType, onCloseWindow } from 'cross-domain-utils/src';\nimport { markWindowKnown, deserializeMessage } from 'post-robot/src';\nimport { ZalgoPromise } from 'zalgo-promise/src';\nimport { extend, noop, memoized, waitForDocumentBody, onResize, getElementSafe } from 'belter/src';\n\nimport { parseChildWindowName, globalFor } from '../lib';\nimport { CONTEXT, INITIAL_PROPS, WINDOW_REFERENCES } from '../constants';\nimport type { Component } from '../component';\nimport type { PropsType } from '../component/props';\nimport type { WindowRef, PropRef, ParentExportsType } from '../parent';\n\nimport { normalizeChildProps } from './props';\n\nexport type ChildExportsType<P> = {|\n    updateProps : (props : (PropsType<P>)) => ZalgoPromise<void>,\n    close : () => ZalgoPromise<void>\n|};\n\nexport type ChildHelpers<P> = {|\n    close : () => ZalgoPromise<void>,\n    focus : () => ZalgoPromise<void>,\n    resize : ({ width : ?number, height : ?number }) => ZalgoPromise<void>,\n    onError : (mixed) => ZalgoPromise<void>,\n    onPropsChange : ((PropsType<P>) => void) => void\n|};\n\n/*  Child Component\n    ---------------\n\n    This is the portion of code which runs inside the frame or popup window containing the component's implementation.\n\n    When the component author calls myComponent.attach(), it creates a new instance of ChildComponent, which is then\n    responsible for managing the state and messaging back up to the parent, and providing props for the component to\n    utilize.\n*/\n\nexport class ChildComponent<P> {\n\n    component : Component<P>\n    props : PropsType<P>\n    context : string\n    parent : ParentExportsType<P>\n    parentComponentWindow : CrossDomainWindowType\n\n    onPropHandlers : Array<(PropsType<P>) => void> // eslint-disable-line flowtype/no-mutable-array\n    autoResize : { width : boolean, height : boolean, element? : string }\n\n    constructor(component : Component<P>) {\n        ZalgoPromise.try(() => {\n            this.component = component;\n            this.onPropHandlers = [];\n            \n            const { parent, domain, exports, context, props } = parseChildWindowName();\n\n            this.context = context;\n            this.parentComponentWindow = this.getWindowByRef(parent);\n            this.parent = deserializeMessage(this.parentComponentWindow, domain, exports);\n\n            this.checkParentDomain(domain);\n\n            const initialProps = this.getPropsByRef(this.parentComponentWindow, domain, props);\n            this.setProps(initialProps, domain);\n            markWindowKnown(this.parentComponentWindow);\n            \n            this.watchForClose();\n\n            return this.parent.init(this.buildExports());\n\n        }).then(() => {\n            return this.watchForResize();\n\n        }).catch(err => {\n            this.onError(err);\n        });\n    }\n\n    getHelpers() : ChildHelpers<P> {\n        return {\n            focus:         () => this.focus(),\n            close:         () => this.close(),\n            resize:        ({ width, height }) => this.resize({ width, height }),\n            onError:       (err) => this.onError(err),\n            onPropsChange: (handler) => this.onPropsChange(handler)\n        };\n    }\n\n    checkParentDomain(domain : string) {\n        if (!matchDomain(this.component.allowedParentDomains, domain)) {\n            throw new Error(`Can not be rendered by domain: ${ domain }`);\n        }\n    }\n\n    onPropsChange(handler : Function) {\n        this.onPropHandlers.push(handler);\n    }\n\n    getPropsByRef(parentComponentWindow : CrossDomainWindowType, domain : string, { type, value, uid } : PropRef) : (PropsType<P>) {\n        let props;\n\n        if (type === INITIAL_PROPS.RAW) {\n            props = value;\n        } else if (type === INITIAL_PROPS.UID) {\n\n            if (!isSameDomain(parentComponentWindow)) {\n                if (window.location.protocol === 'file:') {\n                    throw new Error(`Can not get props from file:// domain`);\n                }\n\n                throw new Error(`Parent component window is on a different domain - expected ${ getDomain() } - can not retrieve props`);\n            }\n\n            const global = globalFor(parentComponentWindow);\n\n            if (!global) {\n                throw new Error(`Can not find global for parent component - can not retrieve props`);\n            }\n\n            props = global.props[uid];\n        }\n\n        if (!props) {\n            throw new Error(`Initial props not found`);\n        }\n\n        return deserializeMessage(parentComponentWindow, domain, props);\n    }\n\n    getWindowByRef(ref : WindowRef) : CrossDomainWindowType {\n        const { type } = ref;\n        let result;\n    \n        if (type === WINDOW_REFERENCES.OPENER) {\n            result = getOpener(window);\n    \n        } else if (type === WINDOW_REFERENCES.TOP) {\n            result = getTop(window);\n    \n        } else if (type === WINDOW_REFERENCES.PARENT) {\n            // $FlowFixMe\n            const { distance } = ref;\n    \n            if (distance) {\n                result = getNthParentFromTop(window, distance);\n            } else {\n                result = getParent(window);\n            }\n        }\n    \n        if (type === WINDOW_REFERENCES.GLOBAL) {\n            // $FlowFixMe\n            const { uid } = ref;\n            const ancestor = getAncestor(window);\n    \n            if (ancestor) {\n                for (const frame of getAllFramesInWindow(ancestor)) {\n                    const global = globalFor(frame);\n    \n                    if (global && global.windows && global.windows[uid]) {\n                        result = global.windows[uid];\n                        break;\n                    }\n                }\n            }\n        }\n    \n        if (!result) {\n            throw new Error(`Unable to find ${ type } window`);\n        }\n    \n        return result;\n    }\n\n    getProps() : PropsType<P> {\n        // $FlowFixMe\n        this.props = this.props || {};\n        return this.props;\n    }\n\n\n    setProps(props : PropsType<P>, origin : string, isUpdate : boolean = false) {\n        const helpers = this.getHelpers();\n        const existingProps = this.getProps();\n        const normalizedProps = normalizeChildProps(this.parentComponentWindow, this.component, props, origin, helpers, isUpdate);\n\n        extend(existingProps, normalizedProps);\n\n        for (const handler of this.onPropHandlers) {\n            handler.call(this, existingProps);\n        }\n    }\n\n    watchForClose() {\n        window.addEventListener('beforeunload', () => {\n            return this.parent.checkClose.fireAndForget();\n        });\n\n        window.addEventListener('unload', () => {\n            return this.parent.checkClose.fireAndForget();\n        });\n\n        onCloseWindow(this.parentComponentWindow, () => {\n            this.destroy();\n        });\n    }\n\n    enableAutoResize({ width = false, height = true, element = 'body' } : { width : boolean, height : boolean, element : string } = {}) {\n        this.autoResize = { width, height, element };\n        this.watchForResize();\n    }\n\n    getAutoResize() : { width : boolean, height : boolean, element : ?HTMLElement } {\n        let { width = false, height = false, element = 'body' } = this.autoResize || this.component.autoResize || {};\n        element = getElementSafe(element);\n        return { width, height, element };\n    }\n\n    @memoized\n    watchForResize() : ?ZalgoPromise<void> {\n        return waitForDocumentBody().then(() => {\n            const { width, height, element } = this.getAutoResize();\n\n            if (!element) {\n                return;\n            }\n\n            if (!width && !height) {\n                return;\n            }\n    \n            if (this.context === CONTEXT.POPUP) {\n                return;\n            }\n\n            onResize(element, ({ width: newWidth, height: newHeight }) => {\n                this.resize({\n                    width:  width ? newWidth : undefined,\n                    height: height ? newHeight : undefined\n                });\n            }, { width, height });\n        });\n    }\n\n    buildExports() : ChildExportsType<P> {\n\n        const self = this;\n\n        return {\n            updateProps(props : (PropsType<P>)) : ZalgoPromise<void> {\n                return ZalgoPromise.try(() => self.setProps(props, this.origin, true));\n            },\n\n            close() : ZalgoPromise<void> {\n                return ZalgoPromise.try(() => self.destroy());\n            }\n        };\n    }\n\n    resize({ width, height } : { width : ?number, height : ?number }) : ZalgoPromise<void> {\n        return this.parent.resize.fireAndForget({ width, height });\n    }\n\n    close() : ZalgoPromise<void> {\n        return this.parent.close();\n    }\n    \n    destroy() : ZalgoPromise<void> {\n        return ZalgoPromise.try(() => {\n            window.close();\n        });\n    }\n\n    focus() : ZalgoPromise<void> {\n        return ZalgoPromise.try(() => {\n            window.focus();\n        });\n    }\n\n    onError(err : mixed) : ZalgoPromise<void> {\n        // eslint-disable-next-line promise/no-promise-in-callback\n        return ZalgoPromise.try(() => {\n            if (this.parent && this.parent.onError) {\n                return this.parent.onError(err);\n            }\n        }).catch(noop).then(() => {\n            throw err;\n        });\n    }\n}\n","/* @flow */\n\nimport { ZalgoPromise } from 'zalgo-promise/src';\nimport { cleanUpWindow, ProxyWindow } from 'post-robot/src';\nimport { type CrossDomainWindowType, type SameDomainWindowType, assertSameDomain, isSameDomain } from 'cross-domain-utils/src';\nimport { iframe, popup, toCSS,\n    destroyElement, normalizeDimension, watchElementForClose,\n    awaitFrameWindow, addClass, removeClass, uniqueID } from 'belter/src';\n\nimport { CONTEXT, CLASS } from '../constants';\n\n\nexport type ContextDriverType = {|\n\n    renderedIntoContainer : boolean,\n    callChildToClose : boolean,\n\n    open : () => ZalgoPromise<ProxyWindow>,\n    resize? : ({ width : ?number, height : ?number }) => void,\n\n    openPrerender : (CrossDomainWindowType) => ZalgoPromise<?SameDomainWindowType>,\n    switchPrerender? : () => void,\n\n    delegate : $ReadOnlyArray<string>\n|};\n\n/*  Render Drivers\n    --------------\n\n    There are various differences in how we treat:\n\n    - Opening frames and windows\n    - Rendering up to the parent\n    - Resizing\n    - etc.\n\n    based on the context we're rendering to.\n\n    These render drivers split this functionality out in a driver pattern, so our component code doesn't bunch up into a\n    series of if-popup-then-else-if-iframe code.\n*/\n\nexport const RENDER_DRIVERS : { [string] : ContextDriverType } = {};\n\n// Iframe context is rendered inline on the page, without any kind of parent template. It's the one context that is designed\n// to feel like a native element on the page.\n\nRENDER_DRIVERS[CONTEXT.IFRAME] = {\n\n    renderedIntoContainer: true,\n    callChildToClose:      false,\n\n    open() : ZalgoPromise<ProxyWindow> {\n\n        const frame = iframe({\n            attributes: {\n                title: this.component.name,\n                ...this.component.attributes.iframe\n            },\n            class: [\n                CLASS.COMPONENT_FRAME,\n                CLASS.INVISIBLE\n            ]\n        }, this.element);\n\n        this.clean.set('iframe', frame);\n\n        return awaitFrameWindow(frame).then(win => {\n            const detectClose = () => {\n                return this.close();\n            };\n\n            const iframeWatcher = watchElementForClose(frame, detectClose);\n            const elementWatcher = watchElementForClose(this.element, detectClose);\n\n            this.clean.register(() => {\n                iframeWatcher.cancel();\n                elementWatcher.cancel();\n                cleanUpWindow(win);\n                destroyElement(frame);\n            });\n\n            return ProxyWindow.toProxyWindow(win);\n        });\n    },\n\n    openPrerender() : ZalgoPromise<?SameDomainWindowType> {\n\n        const prerenderIframe = iframe({\n            attributes: {\n                name: `__zoid_prerender_frame__${ this.component.name }_${ uniqueID() }__`,\n                ...this.component.attributes.iframe\n            },\n            class: [\n                CLASS.PRERENDER_FRAME,\n                CLASS.VISIBLE\n            ]\n        }, this.element);\n\n        this.clean.set('prerenderIframe', prerenderIframe);\n\n        return awaitFrameWindow(prerenderIframe).then(prerenderFrameWindow => {\n            this.clean.register(() => destroyElement(prerenderIframe));\n            return assertSameDomain(prerenderFrameWindow);\n        });\n    },\n\n    switchPrerender() {\n        addClass(this.prerenderIframe, CLASS.INVISIBLE);\n        removeClass(this.prerenderIframe, CLASS.VISIBLE);\n\n        if (this.iframe) {\n            addClass(this.iframe, CLASS.VISIBLE);\n            removeClass(this.iframe, CLASS.INVISIBLE);\n        }\n\n        setTimeout(() => destroyElement(this.prerenderIframe), 1);\n    },\n\n    delegate: [\n        'renderContainer',\n        'prerender',\n        'resize',\n        'openPrerender',\n        'switchPrerender',\n        'open'\n    ],\n\n    resize({ width, height } : { width : ?number, height : ?number }) {\n\n        if (typeof width === 'number') {\n            this.element.style.width   = toCSS(width);\n        }\n\n        if (typeof height === 'number') {\n            this.element.style.height = toCSS(height);\n        }\n    }\n};\n\nif (__ZOID__.__POPUP_SUPPORT__) {\n    RENDER_DRIVERS[CONTEXT.POPUP] = {\n        \n        renderedIntoContainer: false,\n        callChildToClose:      true,\n\n        open() : ZalgoPromise<ProxyWindow> {\n            return ZalgoPromise.try(() => {\n                let { width, height } = this.component.dimensions;\n\n                width = normalizeDimension(width, window.outerWidth);\n                height = normalizeDimension(height, window.outerWidth);\n\n                const win = popup('', {\n                    width,\n                    height,\n                    ...this.component.attributes.popup\n                });\n\n                this.clean.register(() => {\n                    win.close();\n                    cleanUpWindow(win);\n                });\n\n                return ProxyWindow.toProxyWindow(win);\n            });\n        },\n\n        openPrerender(win : CrossDomainWindowType) : ZalgoPromise<?SameDomainWindowType> {\n            return ZalgoPromise.try(() => {\n                if (isSameDomain(win)) {\n                    return assertSameDomain(win);\n                }\n            });\n        },\n\n        delegate: [\n            'renderContainer'\n        ]\n    };\n}\n","/* @flow */\n/* eslint max-lines: 0 */\n\nimport { send, bridge, serializeMessage, ProxyWindow } from 'post-robot/src';\nimport { isSameDomain, matchDomain, getDomainFromUrl, isBlankDomain,\n    onCloseWindow, getDomain, type CrossDomainWindowType, getDistanceFromTop, isTop, normalizeMockUrl } from 'cross-domain-utils/src';\nimport { ZalgoPromise } from 'zalgo-promise/src';\nimport { addEventListener, uniqueID, elementReady, writeElementToWindow,\n    noop, onResize,\n    extend, extendUrl, getElement, memoized, appendChild, cleanup, type CleanupType,\n    once, stringifyError, type EventEmitterType, destroyElement, isDefined, createElement, getElementSafe } from 'belter/src';\n\nimport { POST_MESSAGE, CONTEXT, CLASS,\n    INITIAL_PROPS, WINDOW_REFERENCES } from '../constants';\nimport type { Component, onErrorPropType } from '../component';\nimport { global, buildChildWindowName } from '../lib';\nimport type { PropsInputType, PropsType } from '../component/props';\nimport type { ChildExportsType } from '../child';\nimport type { DimensionsType, ElementRefType } from '../types';\n\nimport { RENDER_DRIVERS, type ContextDriverType } from './drivers';\nimport { propsToQuery, normalizeProps } from './props';\n\nglobal.props = global.props || {};\nglobal.windows = global.windows || {};\n\nexport type RenderOptionsType<P> = {|\n    uid : string,\n    props : PropsInputType<P>,\n    tag : string,\n    context : string,\n    outlet : HTMLElement,\n    close : (?string) => ZalgoPromise<void>,\n    focus : () => ZalgoPromise<ProxyWindow>,\n    doc : Document,\n    container? : HTMLElement,\n    dimensions : DimensionsType,\n    state : Object\n|};\n\nexport type ParentExportsType<P> = {|\n    init : (ChildExportsType<P>) => ZalgoPromise<void>,\n    close : () => ZalgoPromise<void>,\n    checkClose : () => ZalgoPromise<void>,\n    resize : ({ width? : ?number, height? : ?number }) => ZalgoPromise<void>,\n    onError : (mixed) => ZalgoPromise<void>\n|};\n\nexport type PropRef =\n    {| type : typeof INITIAL_PROPS.RAW, uid? : string, value? : string |};\n\nexport type WindowRef =\n    {| type : typeof WINDOW_REFERENCES.OPENER |} |\n    {| type : typeof WINDOW_REFERENCES.TOP |} |\n    {| type : typeof WINDOW_REFERENCES.PARENT, distance : number |} |\n    {| type : typeof WINDOW_REFERENCES.GLOBAL, uid : string |};\n\nexport type ChildPayload = {|\n    uid : string,\n    tag : string,\n    context : $Values<typeof CONTEXT>,\n    domain : string,\n    parent : WindowRef,\n    props : PropRef,\n    exports : string\n|};\n\nexport type StateType = Object;\n\nexport type ParentHelpers<P> = {|\n    state : StateType,\n    close : () => ZalgoPromise<void>,\n    focus : () => ZalgoPromise<void>,\n    resize : ({ width : ?number, height : ?number }) => ZalgoPromise<void>,\n    onError : (mixed) => ZalgoPromise<void>,\n    updateProps : PropsInputType<P> => ZalgoPromise<void>\n|};\n\nexport class ParentComponent<P> {\n\n    component : Component<P>\n    driver : ContextDriverType\n    props : PropsType<P>\n    initPromise : ZalgoPromise<ParentComponent<P>>\n    errored : boolean\n    event : EventEmitterType\n    clean : CleanupType\n    state : StateType\n    proxyWin : ProxyWindow\n\n    container : HTMLElement\n    element : HTMLElement\n    iframe : HTMLIFrameElement\n    prerenderIframe : HTMLIFrameElement\n\n    child : ?ChildExportsType<P>\n\n    constructor(component : Component<P>, props : PropsInputType<P>) {\n        try {\n            this.initPromise = new ZalgoPromise();\n            this.clean = cleanup(this);\n            this.state = {};\n\n            this.component = component;\n    \n            this.setProps(props);\n            this.component.registerActiveComponent(this);\n            this.clean.register(() => this.component.destroyActiveComponent(this));\n\n        } catch (err) {\n            this.onError(err, props.onError).catch(noop);\n            throw err;\n        }\n    }\n\n    render(target : CrossDomainWindowType, element : ElementRefType, context : $Values<typeof CONTEXT>) : ZalgoPromise<void> {\n        return ZalgoPromise.try(() => {\n            this.component.log(`render`);\n\n            this.driver = RENDER_DRIVERS[context];\n            const uid = `${ this.component.tag }-${ uniqueID() }`;\n            const domain = this.getDomain();\n            const initialDomain = this.getInitialDomain();\n\n            this.component.checkAllowRender(target, domain, element);\n\n            if (target !== window) {\n                this.delegate(context, target);\n            }\n\n            const tasks = {};\n\n            tasks.init = this.initPromise;\n            tasks.buildUrl = this.buildUrl();\n            tasks.onRender = this.props.onRender();\n            this.watchForUnload();\n\n            tasks.renderContainer = ZalgoPromise.try(() => {\n                return this.renderContainer(element, { context, uid });\n            });\n\n            tasks.open = this.driver.renderedIntoContainer\n                ? tasks.renderContainer.then(() => this.open())\n                : this.open();\n\n            tasks.buildWindowName = tasks.open.then(proxyWin => {\n                return this.buildWindowName({ proxyWin, initialDomain, domain, target, context, uid });\n            });\n\n            tasks.setWindowName =  ZalgoPromise.all([ tasks.open, tasks.buildWindowName ]).then(([ proxyWin, windowName ]) => {\n                return proxyWin.setName(windowName);\n            });\n\n            tasks.watchForClose = tasks.open.then(proxyWin => {\n                return this.watchForClose(proxyWin);\n            });\n\n            tasks.prerender = ZalgoPromise.all([ tasks.open, tasks.renderContainer ]).then(([ proxyWin ]) => {\n                return this.prerender(proxyWin, { context, uid });\n            });\n\n            tasks.onDisplay = tasks.prerender.then(() => {\n                return this.props.onDisplay();\n            });\n\n            tasks.openBridge = tasks.open.then(proxyWin => {\n                return this.openBridge(proxyWin, initialDomain, context);\n            });\n\n            tasks.loadUrl = ZalgoPromise.all([ tasks.open, tasks.buildUrl, tasks.setWindowName ]).then(([ proxyWin, url ]) => {\n                return proxyWin.setLocation(url);\n            });\n\n            tasks.switchPrerender = ZalgoPromise.all([ tasks.prerender, tasks.init ]).then(() => {\n                return this.switchPrerender();\n            });\n\n            tasks.runTimeout = tasks.loadUrl.then(() => {\n                return this.runTimeout();\n            });\n\n            tasks.onRender = tasks.init.then(() => {\n                return this.props.onRendered();\n            });\n\n            return ZalgoPromise.hash(tasks);\n            \n        }).catch(err => {\n            return ZalgoPromise.all([\n                this.onError(err),\n                this.destroy(err)\n            ]);\n        }).then(noop);\n    }\n\n    buildWindowName({ proxyWin, initialDomain, domain, target, uid, context } : { proxyWin : ProxyWindow, initialDomain : string, domain : string | RegExp, target : CrossDomainWindowType, context : $Values<typeof CONTEXT>, uid : string }) : string {\n        return buildChildWindowName(this.component.name, this.buildChildPayload({ proxyWin, initialDomain, domain, target, context, uid }));\n    }\n\n    getPropsRef(proxyWin : ProxyWindow, target : CrossDomainWindowType, domain : string | RegExp, uid : string) : PropRef {\n        const value = serializeMessage(proxyWin, domain, this.getPropsForChild(domain));\n\n        const propRef = isSameDomain(target)\n            ? { type: INITIAL_PROPS.RAW, value }\n            : { type: INITIAL_PROPS.UID, uid };\n\n        if (propRef.type === INITIAL_PROPS.UID) {\n            global.props[uid] = value;\n\n            this.clean.register(() => {\n                delete global.props[uid];\n            });\n        }\n\n        return propRef;\n    }\n\n    buildChildPayload({ proxyWin, initialDomain, domain, target = window, context, uid } : { proxyWin : ProxyWindow, initialDomain : string, domain : string | RegExp, target : CrossDomainWindowType, context : $Values<typeof CONTEXT>, uid : string } = {}) : ChildPayload {\n        return {\n            uid,\n            context,\n            domain:  getDomain(window),\n            tag:     this.component.tag,\n            parent:  this.getWindowRef(target, initialDomain, uid, context),\n            props:   this.getPropsRef(proxyWin, target, domain, uid),\n            exports: serializeMessage(proxyWin, domain, this.buildParentExports(proxyWin))\n        };\n    }\n\n    getHelpers() : ParentHelpers<P> {\n        return {\n            state:       this.state,\n            close:       () => this.close(),\n            focus:       () => this.focus(),\n            resize:      ({ width, height }) => this.resize({ width, height }),\n            onError:     (err) => this.onError(err),\n            updateProps: (props) => this.updateProps(props)\n        };\n    }\n\n    setProps(props : PropsInputType<P>, isUpdate : boolean = false) {\n        if (this.component.validate) {\n            this.component.validate({ props });\n        }\n\n        const helpers = this.getHelpers();\n\n        // $FlowFixMe\n        this.props = this.props || {};\n        extend(this.props, normalizeProps(this.component, this, props, helpers, isUpdate));\n\n        for (const key of this.component.getPropNames()) {\n            const propDef = this.component.getPropDefinition(key);\n            if (propDef.required !== false && !isDefined(this.props[key])) {\n                throw new Error(`Expected prop \"${ key }\" to be defined`);\n            }\n        }\n    }\n\n    buildUrl() : ZalgoPromise<string> {\n        return propsToQuery({ ...this.component.props, ...this.component.builtinProps }, this.props).then(query => {\n            return extendUrl(normalizeMockUrl(this.component.getUrl(this.props)), { query });\n        });\n    }\n\n    getDomain() : string | RegExp {\n        return this.component.getDomain(this.props);\n    }\n\n    getInitialDomain() : string {\n        return this.component.getInitialDomain(this.props);\n    }\n\n    getPropsForChild(domain : string | RegExp) : (PropsType<P>) {\n        const result = {};\n\n        for (const key of Object.keys(this.props)) {\n            const prop = this.component.getPropDefinition(key);\n\n            if (prop && prop.sendToChild === false) {\n                continue;\n            }\n\n            if (prop && prop.sameDomain && !matchDomain(domain, getDomain(window))) {\n                continue;\n            }\n\n            // $FlowFixMe\n            result[key] = this.props[key];\n        }\n\n        // $FlowFixMe\n        return result;\n    }\n\n    updateProps(props : PropsInputType<P>) : ZalgoPromise<void> {\n        this.setProps(props, true);\n\n        return this.initPromise.then(() => {\n            if (this.child) {\n                return this.child.updateProps(this.getPropsForChild(this.getDomain()));\n            }\n        });\n    }\n    \n    open() : ZalgoPromise<ProxyWindow> {\n        return ZalgoPromise.try(() => {\n            this.component.log(`open`);\n\n            const windowProp = this.props.window;\n\n            if (windowProp) {\n                this.clean.register(() => windowProp.close());\n                // $FlowFixMe\n                return windowProp;\n            }\n\n            return this.driver.open.call(this);\n\n        }).then(proxyWin => {\n            this.proxyWin = proxyWin;\n            return proxyWin;\n        });\n    }\n\n    focus() : ZalgoPromise<void> {\n        return ZalgoPromise.try(() => {\n            if (this.proxyWin) {\n                return this.proxyWin.focus().then(noop);\n            }\n        });\n    }\n\n    switchPrerender() : ZalgoPromise<void> {\n        return ZalgoPromise.try(() => {\n            if (this.driver.switchPrerender) {\n                return this.driver.switchPrerender.call(this);\n            }\n        });\n    }\n\n    delegate(context : $Values<typeof CONTEXT>, target : CrossDomainWindowType) {\n        this.component.log(`delegate`);\n\n        const props = {};\n        for (const propName of this.component.getPropNames()) {\n            if (this.component.getPropDefinition(propName).allowDelegate) {\n                props[propName] = this.props[propName];\n            }\n        }\n\n        const overridesPromise = send(target, `${ POST_MESSAGE.DELEGATE }_${ this.component.name }`, {\n            context,\n            props,\n            overrides: {\n                focus:     () => this.focus(),\n                close:     () => this.close(),\n                onError:   (err) => this.onError(err)\n            }\n\n        }).then(({ data }) => {\n            this.clean.register(data.destroy);\n            return data.overrides;\n\n        }).catch(err => {\n            throw new Error(`Unable to delegate rendering. Possibly the component is not loaded in the target window.\\n\\n${ stringifyError(err) }`);\n        });\n\n        for (const key of this.driver.delegate) {\n            // $FlowFixMe\n            this[key] = function overriddenFunction() : ZalgoPromise<mixed> {\n                return overridesPromise.then(overrides => {\n                    return overrides[key].apply(this, arguments);\n                });\n            };\n        }\n    }\n\n    getWindowRef(target : CrossDomainWindowType, domain : string, uid : string, context : $Values<typeof CONTEXT>) : WindowRef {\n        \n        if (domain === getDomain(window)) {\n            global.windows[uid] = window;\n            this.clean.register(() => {\n                delete global.windows[uid];\n            });\n    \n            return { type: WINDOW_REFERENCES.GLOBAL, uid };\n        }\n\n        if (context === CONTEXT.POPUP) {\n            return { type: WINDOW_REFERENCES.OPENER };\n        }\n\n        if (isTop(window)) {\n            return { type: WINDOW_REFERENCES.TOP };\n        }\n\n        return { type: WINDOW_REFERENCES.PARENT, distance: getDistanceFromTop(window) };\n    }\n\n    watchForClose(proxyWin : ProxyWindow) : ZalgoPromise<void> {\n        return proxyWin.awaitWindow().then(win => {\n            const closeWindowListener = onCloseWindow(win, () => {\n                this.component.log(`detect_close_child`);\n\n                return ZalgoPromise.all([\n                    this.props.onClose(),\n                    this.destroy(new Error(`Window close detected`))\n                ]);\n            }, 2000);\n\n            this.clean.register(closeWindowListener.cancel);\n        });\n    }\n\n    watchForUnload() {\n        const unloadWindowListener = addEventListener(window, 'unload', once(() => {\n            this.component.log(`navigate_away`);\n            this.destroy(new Error(`Window navigated away`));\n        }));\n\n        this.clean.register(unloadWindowListener.cancel);\n    }\n\n    runTimeout() : ZalgoPromise<void> {\n        return ZalgoPromise.try(() => {\n            const timeout = this.props.timeout;\n\n            if (timeout) {\n                return this.initPromise.timeout(timeout, new Error(`Loading component timed out after ${ timeout } milliseconds`)).then(noop);\n            }\n        });\n    }\n\n    initChild(child : ChildExportsType<P>) : ZalgoPromise<void> {\n        return ZalgoPromise.try(() => {\n            this.clean.set('child', child);\n            this.initPromise.resolve(this);\n        });\n    }\n\n    buildParentExports(win : ProxyWindow) : ParentExportsType<P> {\n        const onError    = (err) => this.onError(err);\n        const init       = (child) => this.initChild(child);\n        const close      = () => this.close();\n        const checkClose = () => this.checkClose(win);\n        const resize     = ({ width, height }) => this.resize({ width, height });\n\n        init.onError = onError;\n\n        return { init, close, checkClose, resize, onError };\n    }\n\n    resize({ width, height } : { width? : ?number, height? : ?number }) : ZalgoPromise<void> {\n        return ZalgoPromise.try(() => {\n            if (this.driver.resize) {\n                return this.driver.resize.call(this, { width, height });\n            }\n        });\n    }\n\n    checkClose(win : ProxyWindow) : ZalgoPromise<void> {\n        return win.isClosed().then(closed => {\n            if (closed) {\n                return this.close();\n            }\n\n            return ZalgoPromise.delay(200)\n                .then(() => win.isClosed())\n                .then(secondClosed => {\n                    if (secondClosed) {\n                        return this.close();\n                    }\n                });\n        });\n    }\n\n    @memoized\n    close() : ZalgoPromise<void> {\n        return ZalgoPromise.try(() => {\n            this.component.log(`close`);\n            return this.props.onClose();\n\n        }).then(() => {\n            if (this.child && this.driver.callChildToClose) {\n                this.child.close.fireAndForget().catch(noop);\n            }\n\n            return this.destroy(new Error(`Window closed`));\n        });\n    }\n\n    prerender(proxyWin : ProxyWindow, { context, uid } : { context : $Values<typeof CONTEXT>, uid : string }) : ZalgoPromise<void> {\n        return ZalgoPromise.try(() => {\n            return proxyWin.awaitWindow();\n\n        }).then(win => {\n            return this.driver.openPrerender.call(this, win);\n            \n        }).then(prerenderWindow => {\n            if (!prerenderWindow || !isSameDomain(prerenderWindow) || !isBlankDomain(prerenderWindow)) {\n                return;\n            }\n    \n            const doc = prerenderWindow.document;\n            const el = this.renderTemplate(this.component.prerenderTemplate, { context, uid, document: doc });\n\n            if (el.ownerDocument !== doc) {\n                throw new Error(`Expected prerender template to have been created with document from child window`);\n            }\n\n            writeElementToWindow(prerenderWindow, el);\n\n            let { width = false, height = false, element = 'body' } = this.component.autoResize || {};\n            element = getElementSafe(element, doc);\n            \n            if (element && (width || height)) {\n                onResize(element, ({ width: newWidth, height: newHeight }) => {\n                    this.resize({\n                        width:  width ? newWidth : undefined,\n                        height: height ? newHeight : undefined\n                    });\n                }, { width, height, win: prerenderWindow });\n            }\n        });\n    }\n\n    renderTemplate(renderer : (RenderOptionsType<P>) => HTMLElement, { context, uid, container, document, outlet } : { context : $Values<typeof CONTEXT>, uid : string, container? : HTMLElement, document? : Document, outlet? : HTMLElement }) : HTMLElement {\n        // $FlowFixMe\n        return renderer.call(this, {\n            container,\n            outlet,\n            context,\n            uid,\n            focus:      () => this.focus(),\n            close:      () => this.close(),\n            state:      this.state,\n            props:      this.props,\n            tag:        this.component.tag,\n            doc:        document,\n            dimensions: this.component.dimensions\n        });\n    }\n\n    renderContainer(element : HTMLElement, { context, uid } : { context : $Values<typeof CONTEXT>, uid : string }) : ZalgoPromise<void> {\n        return ZalgoPromise.try(() => {\n            return elementReady(element);\n\n        }).then(() => {\n            const container = getElement(element);\n            this.element = createElement('div', {\n                class: [ CLASS.OUTLET ]\n            });\n\n            this.container = this.renderTemplate(this.component.containerTemplate, { context, uid, container, outlet: this.element });\n            appendChild(container, this.container);\n\n            this.clean.register(() => destroyElement(this.element));\n            this.clean.register(() => destroyElement(this.container));\n        });\n    }\n\n    destroy(err? : mixed = new Error(`Component destroyed before render complete`)) : ZalgoPromise<void> {\n        return ZalgoPromise.try(() => {\n            this.component.log(`destroy`);\n            this.initPromise.asyncReject(err);\n            return this.clean.all();\n        });\n    }\n\n    onError(err : mixed, onError? : onErrorPropType) : ZalgoPromise<void> {\n        // eslint-disable-next-line promise/no-promise-in-callback\n        return ZalgoPromise.try(() => {\n            this.initPromise.asyncReject(err);\n\n            if (!onError && this.props && this.props.onError) {\n                onError = this.props.onError;\n            }\n    \n            if (onError) {\n                return onError(err);\n            }\n\n        }).then(() => {\n            return this.initPromise;\n            \n        }).then(() => {\n            throw err;\n        });\n    }\n\n    openBridge(proxyWin : ProxyWindow, domain : string, context : $Values<typeof CONTEXT>) : ?ZalgoPromise<?CrossDomainWindowType> {\n        if (__POST_ROBOT__.__IE_POPUP_SUPPORT__) {\n            return ZalgoPromise.try(() => {\n                return proxyWin.awaitWindow();\n                \n            }).then(win => {\n                if (!bridge || !bridge.needsBridge({ win, domain }) || bridge.hasBridge(domain, domain)) {\n                    return;\n                }\n\n                const bridgeUrl = this.component.getBridgeUrl();\n\n                if (!bridgeUrl) {\n                    throw new Error(`Bridge needed to render ${ context }`);\n                }\n\n                const bridgeDomain = getDomainFromUrl(bridgeUrl);\n                bridge.linkUrl(win, domain);\n                return bridge.openBridge(normalizeMockUrl(bridgeUrl), bridgeDomain);\n            });\n        }\n    }\n}\n","/* @flow */\n\nimport { ZalgoPromise } from 'zalgo-promise/src';\nimport { dotify, isDefined } from 'belter/src';\n\nimport type { Component } from '../component';\nimport type { BuiltInPropsDefinitionType, PropsInputType, PropsType, MixedPropDefinitionType } from '../component/props';\nimport { PROP_SERIALIZATION } from '../constants';\n\nimport type { ParentComponent, ParentHelpers } from './index';\n\n/*  Normalize Props\n    ---------------\n\n    Turn props into normalized values, using defaults, function options, etc.\n*/\n\nexport function normalizeProps<P>(component : Component<P>, instance : ParentComponent<P>, props : PropsInputType<P>, helpers : ParentHelpers<P>, isUpdate : boolean = false) : (PropsType<P>) { // eslint-disable-line complexity\n\n    // $FlowFixMe\n    props = props || {};\n    const result : $Shape<P> = { ...props }; // eslint-disable-line no-undef\n\n    const propNames = isUpdate\n        ? []\n        : [ ...component.getPropNames() ];\n\n    // $FlowFixMe\n    for (const key of Object.keys(props)) {\n        if (propNames.indexOf(key) === -1) {\n            propNames.push(key);\n        }\n    }\n\n    const aliases = [];\n\n    const { state, close, focus, onError } = helpers;\n\n    for (const key of propNames) {\n        const propDef = component.getPropDefinition(key);\n        // $FlowFixMe\n        let value = props[key];\n\n        if (!propDef) {\n            continue;\n        }\n\n        const alias = propDef.alias;\n        if (alias) {\n            if (!isDefined(value) && isDefined(props[alias])) {\n                value = props[alias];\n            }\n            aliases.push(alias);\n        }\n\n        if (propDef.value) {\n            value = propDef.value({ props: result, state, close, focus, onError });\n        }\n\n        if (!isDefined(value) && propDef.default) {\n            value = propDef.default({ props: result, state, close, focus, onError });\n        }\n\n        if (isDefined(value)) {\n            if (propDef.type === 'array' ? !Array.isArray(value) : (typeof value !== propDef.type)) {\n                throw new TypeError(`Prop is not of type ${ propDef.type }: ${ key }`);\n            }\n        }\n        \n        // $FlowFixMe\n        result[key] = value;\n    }\n\n    for (const alias of aliases) {\n        // $FlowFixMe\n        delete result[alias];\n    }\n\n    // $FlowFixMe\n    for (const key of Object.keys(result)) {\n        const propDef = component.getPropDefinition(key);\n        // $FlowFixMe\n        const value = result[key];\n\n        if (!propDef) {\n            continue;\n        }\n\n        if (isDefined(value) && propDef.validate) {\n            // $FlowFixMe\n            propDef.validate({ value, props: result });\n        }\n\n        if (isDefined(value) && propDef.decorate) {\n            // $FlowFixMe\n            result[key] = propDef.decorate({ value, props: result, state, close, focus, onError });\n        }\n    }\n\n    // $FlowFixMe\n    return result;\n}\n\n// $FlowFixMe\nfunction getQueryParam<T, P>(prop : MixedPropDefinitionType<P>, key : string, value : T) : ZalgoPromise<string> {\n    return ZalgoPromise.try(() => {\n        if (typeof prop.queryParam === 'function') {\n            return prop.queryParam({ value });\n        } else if (typeof prop.queryParam === 'string') {\n            return prop.queryParam;\n        } else {\n            return key;\n        }\n    });\n}\n\n// $FlowFixMe\nfunction getQueryValue<T, P>(prop : MixedPropDefinitionType<P>, key : string, value : T) : ZalgoPromise<mixed> {\n    return ZalgoPromise.try(() => {\n        if (typeof prop.queryValue === 'function' && isDefined(value)) {\n            return prop.queryValue({ value });\n        } else {\n            return value;\n        }\n    });\n}\n\nexport function propsToQuery<P>(propsDef : BuiltInPropsDefinitionType<P>, props : (PropsType<P>)) : ZalgoPromise<{ [string] : string }> {\n\n    const params = {};\n\n    return ZalgoPromise.all(Object.keys(props).map(key => {\n\n        const prop = propsDef[key];\n\n        if (!prop) {\n            return; // eslint-disable-line array-callback-return\n        }\n\n        return ZalgoPromise.resolve().then(() => {\n\n            const value = props[key];\n\n            if (!value) {\n                return;\n            }\n\n            if (!prop.queryParam) {\n                return;\n            }\n\n            return value;\n\n        }).then(value => {\n\n            if (value === null || typeof value === 'undefined') {\n                return;\n            }\n\n            return ZalgoPromise.all([\n                // $FlowFixMe\n                getQueryParam(prop, key, value),\n                // $FlowFixMe\n                getQueryValue(prop, key, value)\n            ]).then(([ queryParam, queryValue ]) => {\n\n                let result;\n\n                if (typeof queryValue === 'boolean') {\n                    result = queryValue.toString();\n                } else if (typeof queryValue === 'string') {\n                    result = queryValue.toString();\n                } else if (typeof queryValue === 'object' && queryValue !== null) {\n\n                    if (prop.serialization === PROP_SERIALIZATION.JSON) {\n                        result = JSON.stringify(queryValue);\n                    } else if (prop.serialization === PROP_SERIALIZATION.BASE64) {\n                        result = btoa(JSON.stringify(queryValue));\n                    } else if (prop.serialization === PROP_SERIALIZATION.DOTIFY || !prop.serialization) {\n                        result = dotify(queryValue, key);\n\n                        for (const dotkey of Object.keys(result)) {\n                            params[dotkey] = result[dotkey];\n                        }\n\n                        return;\n                    }\n\n                } else if (typeof queryValue === 'number') {\n                    result = queryValue.toString();\n                }\n\n                params[queryParam] = result;\n            });\n        });\n\n    })).then(() => {\n        return params;\n    });\n}\n","/* @flow */\n\nimport { onCloseWindow, type CrossDomainWindowType } from 'cross-domain-utils/src';\nimport { ZalgoPromise } from 'zalgo-promise/src';\nimport { ProxyWindow } from 'post-robot/src';\nimport { cleanup, type CleanupType } from 'belter/src';\n\nimport { ParentComponent } from '../parent';\nimport { RENDER_DRIVERS, type ContextDriverType } from '../parent/drivers';\nimport type { Component } from '../component';\n\nexport type DelegatePropsType = {|\n    onClose : () => ?ZalgoPromise<void>,\n    onDisplay : () => ?ZalgoPromise<void>,\n    window : ?ProxyWindow\n|};\n\nexport type DelegateOptionsType = {|\n    context : string,\n    props : DelegatePropsType,\n    overrides : {\n        close : () => ZalgoPromise<void>,\n        onError : (mixed) => ZalgoPromise<void>,\n        focus : () => ZalgoPromise<void>\n    }\n|};\n\nexport type DelegateReturnType = {|\n    overrides : Object,\n    destroy : () => ZalgoPromise<void>\n|};\n\nexport class DelegateComponent<P>  {\n\n    component : Component<P>\n    source : CrossDomainWindowType\n    context : string\n    driver : ContextDriverType\n    props : DelegatePropsType\n    clean : CleanupType\n\n    close : () => ZalgoPromise<void>\n    onError : (mixed) => ZalgoPromise<void>\n    focus : () => ZalgoPromise<void>\n\n    constructor(component : Component<P>, source : CrossDomainWindowType, options : DelegateOptionsType) {\n        this.component = component;\n        this.context = options.context;\n        this.driver = RENDER_DRIVERS[options.context];\n        this.clean = cleanup(this);\n\n        // $FlowFixMe\n        this.close = ParentComponent.prototype.close;\n        // $FlowFixMe\n        this.resize = ParentComponent.prototype.resize;\n        // $FlowFixMe\n        this.renderTemplate = ParentComponent.prototype.renderTemplate;\n\n        // $FlowFixMe\n        this.props = {};\n        for (const propName of Object.keys(options.props)) {\n            if (options.props[propName] && this.component.getPropDefinition(propName) && this.component.getPropDefinition(propName).allowDelegate) {\n                this.props[propName] = options.props[propName];\n            }\n        }\n\n        this.close     = options.overrides.close;\n        this.onError   = options.overrides.onError;\n        this.focus     = options.overrides.focus;\n        \n        this.component.registerActiveComponent(this);\n        this.clean.register(() => this.component.destroyActiveComponent(this));\n\n        this.watchForSourceClose(source);\n    }\n\n    getDelegate() : DelegateReturnType {\n        return {\n            overrides: this.getOverrides(),\n            destroy:   () => this.destroy()\n        };\n    }\n\n    watchForSourceClose(source : CrossDomainWindowType) {\n        const closeSourceWindowListener = onCloseWindow(source, () => this.destroy(), 3000);\n        this.clean.register(closeSourceWindowListener.cancel);\n    }\n\n    getOverrides() : { [string] : mixed } {\n        const overrides = {};\n        const self = this;\n\n        for (const key of this.driver.delegate) {\n            overrides[key] = function delegateOverride() : mixed {\n                // $FlowFixMe\n                return ParentComponent.prototype[key].apply(self, arguments);\n            };\n        }\n\n        return overrides;\n    }\n\n    destroy() : ZalgoPromise<void> {\n        return this.clean.all();\n    }\n}\n","/* @flow */\n\nexport type NodePropsType = { [string] : mixed };\n// eslint-disable-next-line no-use-before-define\nexport type NodeType = ElementNode | TextNode | FragmentNode;\n// eslint-disable-next-line no-use-before-define\nexport type NodeChildrenType = $ReadOnlyArray<ElementNode | TextNode>;\nexport type NodeRenderer<T> = (string, NodePropsType, NodeChildrenType) => T;\nexport type NodeRendererFactory<T, O = Object> = (O | void) => NodeRenderer<T>;\n\nclass Node {\n    isElementNode() : boolean {\n        return false;\n    }\n\n    isTextNode() : boolean {\n        return false;\n    }\n\n    isFragmentNode() : boolean {\n        return false;\n    }\n}\n\nexport class ElementNode extends Node {\n    name : string\n    props : NodePropsType\n    children : NodeChildrenType\n    onRender : ?<T>(T) => void // eslint-disable-line no-undef\n\n    constructor(name : string, props : NodePropsType, children : NodeChildrenType) {\n        super();\n        this.name = name;\n        this.props = props;\n        this.children = children;\n\n        if (typeof props.onRender === 'function') {\n            this.onRender = props.onRender;\n            delete props.onRender;\n        }\n    }\n\n    getTag() : string {\n        return this.name;\n    }\n\n    isTag(name : string) : boolean {\n        return name === this.name;\n    }\n\n    isElementNode() : boolean {\n        return true;\n    }\n\n    render<T>(renderer : NodeRenderer<T>) : T {\n        const element = renderer(this.name, this.props, this.children);\n        if (this.onRender) {\n            this.onRender(element);\n        }\n        return element;\n    }\n\n    getText() : string {\n        throw new Error(`Can not get text of an element node`);\n    }\n}\n\nexport class TextNode extends Node {\n    text : string\n\n    constructor(text : string) {\n        super();\n        this.text = text;\n    }\n\n    getTag() : string {\n        throw new Error(`Can not get tag of text node`);\n    }\n\n    isTag(name : string) : boolean { // eslint-disable-line no-unused-vars\n        throw new Error(`Can not check tag of text node`);\n    }\n\n    isTextNode() : boolean {\n        return true;\n    }\n\n    render<T>(renderer : NodeRenderer<T>) : T { // eslint-disable-line no-unused-vars\n        throw new Error(`Can not render a text node`);\n    }\n\n    getText() : string {\n        return this.text;\n    }\n}\n\nexport class FragmentNode extends Node {\n    children : NodeChildrenType\n\n    constructor(children : NodeChildrenType) {\n        super();\n        this.children = children;\n    }\n\n    getTag() : string {\n        throw new Error(`Can not get tag of fragment node`);\n    }\n\n    isTag(name : string) : boolean { // eslint-disable-line no-unused-vars\n        throw new Error(`Can not check tag of fragment node`);\n    }\n\n    isFragmentNode() : boolean {\n        return true;\n    }\n\n    render<T>(renderer : NodeRenderer<T>) : $ReadOnlyArray<T> { // eslint-disable-line no-unused-vars\n        throw new Error(`Can not render a fragment node`);\n    }\n\n    getText() : string {\n        throw new Error(`Can not get text of a fragment node`);\n    }\n}\n\ntype JsxChildType = $ReadOnlyArray<JsxChildType> | NodeType | string;\ntype NullableJsxChildType = $ReadOnlyArray<NullableJsxChildType> | NodeType | string | null | void;\n\nfunction normalizeChild(child : NullableJsxChildType) : NodeType | void {\n    if (typeof child === 'string') {\n        return new TextNode(child);\n\n    } else if (child instanceof ElementNode || child instanceof TextNode || child instanceof FragmentNode) {\n        return child;\n\n    } else if (Array.isArray(child)) {\n        return new FragmentNode(normalizeChildren(child)); // eslint-disable-line no-use-before-define\n\n    } else if (child === null || typeof child === 'undefined') {\n        return; // eslint-disable-line no-useless-return\n\n    } else {\n        throw new Error(`Child node must be string or instance of jsx-pragmatic node; got ${ typeof child }`);\n    }\n}\n\nfunction normalizeChildren(children : $ReadOnlyArray<NullableJsxChildType>) : NodeChildrenType {\n    const result = [];\n\n    for (const child of children) {\n        const normalizedChild = normalizeChild(child);\n\n        if (!normalizedChild) {\n            continue;\n        }\n\n        if (normalizedChild instanceof FragmentNode) {\n            for (const subchild of normalizedChild.children) {\n                result.push(subchild);\n            }\n        } else {\n            result.push(normalizedChild);\n        }\n    }\n\n    return result;\n}\n\ntype JSXElementBuilder<P : NodePropsType> = (\n    element : string,\n    props : P | null,\n    ...children : $ReadOnlyArray<NullableJsxChildType>\n) => ElementNode;\n\ntype JSXElementFunctionBuilder<P : NodePropsType> = (\n    element : (P, $ReadOnlyArray<JsxChildType>) => ElementNode,\n    props : P | null,\n    ...children : $ReadOnlyArray<NullableJsxChildType>\n) => ElementNode;\n\ntype JSXTextFunctionBuilder<P : NodePropsType> = (\n    element : (P, $ReadOnlyArray<JsxChildType>) => string | TextNode,\n    props : P | null,\n    ...children : $ReadOnlyArray<NullableJsxChildType>\n) => TextNode;\n\ntype JSXFragmentFunctionBuilder<P : NodePropsType> = (\n    element : (P, $ReadOnlyArray<JsxChildType>) => FragmentNode | $ReadOnlyArray<NullableJsxChildType>,\n    props : P | null,\n    ...children : $ReadOnlyArray<NullableJsxChildType>\n) => FragmentNode;\n\ntype JSXEmptyFunctionBuilder<P : NodePropsType> = (\n    element : (P, $ReadOnlyArray<JsxChildType>) => null | void,\n    props : P | null,\n    ...children : $ReadOnlyArray<NullableJsxChildType>\n) => void;\n\ntype JSXBuilder<P : NodePropsType> = JSXElementBuilder<P> & JSXElementFunctionBuilder<P> & JSXTextFunctionBuilder<P> & JSXFragmentFunctionBuilder<P> & JSXEmptyFunctionBuilder<P>;\n\nexport const node : JSXBuilder<*> = <P : NodePropsType>(element, props : P | null, ...children) => {\n    if (typeof element === 'string') {\n        return new ElementNode(element, props || {}, normalizeChildren(children));\n    }\n\n    if (typeof element === 'function') {\n        // $FlowFixMe\n        return normalizeChild(element(props || {}, normalizeChildren(children)));\n    }\n    \n    throw new TypeError(`Expected jsx Element to be a string or a function`);\n};\n\nexport function Fragment(props : NodePropsType, ...children : $ReadOnlyArray<JsxChildType>) : FragmentNode {\n    \n    if (props && Object.keys(props).length) {\n        throw new Error(`Do not pass props to Fragment`);\n    }\n\n    return new FragmentNode(normalizeChildren(children));\n}\n","/* @flow */\n\nimport type { NodeChildrenType, NodePropsType, NodeRendererFactory, NodeRenderer } from '../node';\n\nconst ELEMENT_TAG = {\n    HTML:    'html',\n    IFRAME:  'iframe',\n    SCRIPT:  'script',\n    NODE:    'node',\n    DEFAULT: 'default'\n};\n\nconst ELEMENT_PROP = {\n    INNER_HTML: 'innerHTML',\n    EL:         'el'\n};\n\nconst DOM_EVENT = {\n    onBlur:               'blur',\n    onCancel:             'cancel',\n    onClick:              'click',\n    onClose:              'close',\n    onContextMenu:        'contextMenu',\n    onCopy:               'copy',\n    onCut:                'cut',\n    onAuxClick:           'auxClick',\n    onDoubleClick:        'doubleClick',\n    onDragEnd:            'dragEnd',\n    onDragStart:          'dragStart',\n    onDrop:               'drop',\n    onFocus:              'focus',\n    onInput:              'input',\n    onInvalid:            'invalid',\n    onKeyDown:            'keyDown',\n    onKeyPress:           'keyPress',\n    onKeyUp:              'keyUp',\n    onMouseDown:          'mouseDown',\n    onMouseUp:            'mouseUp',\n    onPaste:              'paste',\n    onPause:              'pause',\n    onPlay:               'play',\n    onPointerCancel:      'pointerCancel',\n    onPointerDown:        'pointerDown',\n    onPointerUp:          'pointerUp',\n    onRateChange:         'rateChange',\n    onReset:              'reset',\n    onSeeked:             'seeked',\n    onSubmit:             'submit',\n    onTouchCancel:        'touchCancel',\n    onTouchEnd:           'touchEnd',\n    onTouchStart:         'touchStart',\n    onVolumeChange:       'volumeChange',\n    onAbort:              'abort',\n    onAnimationEnd:       'animationEnd',\n    onAnimationIteration: 'animationIteration',\n    onAnimationStart:     'animationStart',\n    onCanPlay:            'canPlay',\n    onCanPlayThrough:     'canPlayThrough',\n    onDrag:               'drag',\n    onDragEnter:          'dragEnter',\n    onDragExit:           'dragExit',\n    onDragLeave:          'dragLeave',\n    onDragOver:           'dragOver',\n    onDurationChange:     'durationChange',\n    onEmptied:            'emptied',\n    onEncrypted:          'encrypted',\n    onEnded:              'ended',\n    onError:              'error',\n    onGotPointerCapture:  'gotPointerCapture',\n    onLoad:               'load',\n    onLoadedData:         'loadedData',\n    onLoadedMetadata:     'loadedMetadata',\n    onLoadStart:          'loadStart',\n    onLostPointerCapture: 'lostPointerCapture',\n    onMouseMove:          'mouseMove',\n    onMouseOut:           'mouseOut',\n    onMouseOver:          'mouseOver',\n    onPlaying:            'playing',\n    onPointerMove:        'pointerMove',\n    onPointerOut:         'pointerOut',\n    onPointerOver:        'pointerOver',\n    onProgress:           'progress',\n    onScroll:             'scroll',\n    onSeeking:            'seeking',\n    onStalled:            'stalled',\n    onSuspend:            'suspend',\n    onTimeUpdate:         'timeUpdate',\n    onToggle:             'toggle',\n    onTouchMove:          'touchMove',\n    onTransitionEnd:      'transitionEnd',\n    onWaiting:            'waiting',\n    onWheel:              'wheel'\n};\n\nfunction fixScripts(el : HTMLElement, doc : Document = window.document) {\n    for (const script of el.querySelectorAll('script')) {\n        const parentNode = script.parentNode;\n\n        if (!parentNode) {\n            continue;\n        }\n\n        const newScript = doc.createElement('script');\n        // $FlowFixMe\n        newScript.text = script.textContent;\n        parentNode.replaceChild(newScript, script);\n    }\n}\n\ntype CreateElementOptions = {|\n    doc : Document,\n    name : string,\n    props : NodePropsType\n|};\n\nconst CREATE_ELEMENT : { [string] : (CreateElementOptions) => HTMLElement } = {\n\n    [ ELEMENT_TAG.NODE ]: ({ props } : CreateElementOptions) => {\n        if (!props[ELEMENT_PROP.EL]) {\n            throw new Error(`Must pass ${ ELEMENT_PROP.EL } prop to ${ ELEMENT_TAG.NODE } element`);\n        }\n\n        if (Object.keys(props).length > 1) {\n            throw new Error(`Must not pass any prop other than ${ ELEMENT_PROP.EL } to ${ ELEMENT_TAG.NODE } element`);\n        }\n\n        // $FlowFixMe\n        return props[ELEMENT_PROP.EL];\n    },\n\n    [ ELEMENT_TAG.DEFAULT ]: ({ name, doc } : CreateElementOptions) => {\n        return doc.createElement(name);\n    }\n};\n\nfunction createElement({ doc, name, props } : CreateElementOptions) : HTMLElement {\n    const elementCreator = CREATE_ELEMENT[name] || CREATE_ELEMENT[ELEMENT_TAG.DEFAULT];\n    return elementCreator({ name, props, doc });\n}\n\ntype AddPropsOptions = {|\n    el : HTMLElement,\n    props : NodePropsType\n|};\n\nfunction addProps({ el, props } : AddPropsOptions) {\n    for (const prop of Object.keys(props)) {\n        const val = props[prop];\n\n        if (val === null || typeof val === 'undefined' || prop === ELEMENT_PROP.EL || prop === ELEMENT_PROP.INNER_HTML) {\n            continue;\n        }\n\n        if (DOM_EVENT.hasOwnProperty(prop)) {\n            if (typeof val !== 'undefined' && typeof val !== 'function') {\n                throw new TypeError(`Prop ${ prop } must be function`);\n            }\n\n            el.addEventListener(DOM_EVENT[prop], val);\n\n        } else if (typeof val === 'string' || typeof val === 'number') {\n            el.setAttribute(prop, val.toString());\n\n        } else if (typeof val === 'boolean') {\n            if (val === true) {\n                el.setAttribute(prop, '');\n            }\n\n        } else {\n            throw new TypeError(`Can not render prop ${ prop } of type ${ typeof val }`);\n        }\n    }\n}\n\ntype AddChildrenOptions = {|\n    el : HTMLElement,\n    name : string,\n    children : NodeChildrenType,\n    doc : Document,\n    props : NodePropsType,\n    domRenderer : NodeRenderer<HTMLElement>\n|};\n\nconst ADD_CHILDREN : { [string] : (AddChildrenOptions) => void } = {\n\n    [ ELEMENT_TAG.IFRAME ]: ({ el, children } : AddChildrenOptions) => {\n        const firstChild = children[0];\n\n        if (children.length > 1 || !firstChild.isElementNode()) {\n            throw new Error(`Expected only single element node as child of ${ ELEMENT_TAG.IFRAME } element`);\n        }\n\n        if (!firstChild.isTag(ELEMENT_TAG.HTML)) {\n            throw new Error(`Expected element to be inserted into frame to be html, got ${ firstChild.getTag() }`);\n        }\n    \n        el.addEventListener('load', () => {\n\n            // $FlowFixMe\n            const win = el.contentWindow;\n    \n            if (!win) {\n                throw new Error(`Expected frame to have contentWindow`);\n            }\n\n            const doc = win.document;\n            const docElement = doc.documentElement;\n\n            while (docElement.children && docElement.children.length) {\n                docElement.removeChild(docElement.children[0]);\n            }\n\n            // eslint-disable-next-line no-use-before-define\n            const child = firstChild.render(dom({ doc }));\n        \n            while (child.children.length) {\n                docElement.appendChild(child.children[0]);\n            }\n        });\n    },\n\n    [ ELEMENT_TAG.SCRIPT ]: ({ el, children } : AddChildrenOptions) => {\n        const firstChild = children[0];\n\n        if (children.length !== 1 || !firstChild.isTextNode()) {\n            throw new Error(`Expected only single text node as child of ${ ELEMENT_TAG.SCRIPT } element`);\n        }\n        \n        // $FlowFixMe\n        el.text = firstChild.getText();\n    },\n\n    [ ELEMENT_TAG.DEFAULT ]: ({ el, children, doc, domRenderer } : AddChildrenOptions) => {\n        for (const child of children) {\n            if (child.isTextNode()) {\n                el.appendChild(doc.createTextNode(child.getText()));\n            } else {\n                el.appendChild(child.render(domRenderer));\n            }\n        }\n    }\n};\n\nfunction addChildren({ el, name, props, children, doc, domRenderer } : AddChildrenOptions) {\n    if (props.hasOwnProperty(ELEMENT_PROP.INNER_HTML)) {\n\n        if (children.length >= 1) {\n            throw new Error(`Expected no children to be passed when ${ ELEMENT_PROP.INNER_HTML } prop is set`);\n        }\n\n        const html = props[ELEMENT_PROP.INNER_HTML];\n\n        if (typeof html !== 'string') {\n            throw new TypeError(`${ ELEMENT_PROP.INNER_HTML } prop must be string`);\n        }\n\n        if (name === ELEMENT_TAG.SCRIPT) {\n            // $FlowFixMe\n            el.text = html;\n        } else {\n            el.innerHTML = html;\n            fixScripts(el, doc);\n        }\n\n    } else {\n        const addChildrenToElement = ADD_CHILDREN[name] || ADD_CHILDREN[ELEMENT_TAG.DEFAULT];\n        addChildrenToElement({ el, name, props, children, doc, domRenderer });\n    }\n}\n\n\nexport const dom : NodeRendererFactory<HTMLElement> = ({ doc = document } : { doc? : Document } = {}) => {\n    const domRenderer = (name, props, children) => {\n        const el = createElement({ name, props, doc });\n        addProps({ el, props });\n        addChildren({ el, name, props, children, doc, domRenderer });\n        return el;\n    };\n\n    return domRenderer;\n};\n","/* @flow */\n/* @jsx node */\n/* eslint react/react-in-jsx-scope: off */\n\nimport { node, dom } from 'jsx-pragmatic/src';\n\nimport { type RenderOptionsType } from '../../parent';\nimport { CLASS } from '../../constants';\n\nexport function defaultContainerTemplate<P>({ uid, outlet, doc, dimensions : { width, height } } : RenderOptionsType<P>) : HTMLElement {\n\n    return (\n        <div id={ uid }>\n            <style>\n                {`\n                    #${ uid }, #${ uid } > .${ CLASS.OUTLET } {\n                        width: ${ width };\n                        height: ${ height };\n                    }\n\n                    #${ uid } > .${ CLASS.OUTLET } {\n                        display: inline-block;\n                        position: relative;\n                    }\n\n                    #${ uid } > .${ CLASS.OUTLET } > iframe {\n                        height: 100%;\n                        width: 100%;\n                        position: absolute;\n                        top: 0;\n                        left: 0;\n                        transition: opacity .2s ease-in-out;\n                    }\n\n                    #${ uid } > .${ CLASS.OUTLET } > iframe.${ CLASS.VISIBLE } {\n                        opacity: 1;\n                    }\n\n                    #${ uid } > .${ CLASS.OUTLET } > iframe.${ CLASS.INVISIBLE } {\n                        opacity: 0;\n                    }\n                `}\n            </style>\n\n            <node el={ outlet } />\n        </div>\n    ).render(dom({ doc }));\n}\n","/* @flow */\n/** @jsx node */\n/* eslint react/react-in-jsx-scope: off */\n\nimport { node, dom } from 'jsx-pragmatic/src';\n\nimport { type RenderOptionsType } from '../../parent';\n\nexport function defaultPrerenderTemplate<P>({ doc } : RenderOptionsType<P>) : HTMLElement {\n    return (\n        <html>\n            <head>\n                <style>\n                    {`\n                        html, body {\n                            width: 100%;\n                            height: 100%;\n                            overflow: hidden;\n                            top: 0;\n                            left: 0;\n                            margin: 0;\n                            text-align: center;\n                        }\n\n                        .spinner {\n                            position: absolute;\n                            max-height: 60vmin;\n                            max-width: 60vmin;\n                            height: 40px;\n                            width: 40px;\n                            top: 50%;\n                            left: 50%;\n                            transform: translateX(-50%) translateY(-50%);\n                            z-index: 10;\n                        }\n\n                        .spinner .loader {\n                            height: 100%;\n                            width: 100%;\n                            box-sizing: border-box;\n                            border: 3px solid rgba(0, 0, 0, .2);\n                            border-top-color: rgba(33, 128, 192, 0.8);\n                            border-radius: 100%;\n                            animation: rotation .7s infinite linear;\n\n                        }\n\n                        @keyframes rotation {\n                            from {\n                                transform: rotate(0deg)\n                            }\n                            to {\n                                transform: rotate(359deg)\n                            }\n                        }\n                    `}\n                </style>\n            </head>\n            <body>\n                <div class=\"spinner\">\n                    <div id=\"loader\" class=\"loader\" />\n                </div>\n            </body>\n        </html>\n    ).render(dom({ doc }));\n}\n","/* @flow */\n/* eslint max-lines: 0 */\n\nimport { on, send, ProxyWindow, bridge } from 'post-robot/src';\nimport { ZalgoPromise } from 'zalgo-promise/src';\nimport { isWindow, getDomainFromUrl, type CrossDomainWindowType, isSameTopWindow, getDomain, matchDomain, isSameDomain } from 'cross-domain-utils/src';\nimport { memoize, isRegex, noop, isElement } from 'belter/src';\n\nimport { ChildComponent } from '../child';\nimport { ParentComponent, type RenderOptionsType, type ParentHelpers } from '../parent';\nimport { DelegateComponent } from '../delegate';\nimport { CONTEXT, POST_MESSAGE, WILDCARD, DEFAULT_DIMENSIONS } from '../constants';\nimport { isZoidComponentWindow, parseChildWindowName } from '../lib';\nimport type { CssDimensionsType, StringMatcherType, ElementRefType } from '../types';\n\nimport { validate } from './validate';\nimport { defaultContainerTemplate, defaultPrerenderTemplate } from './templates';\nimport { getInternalProps, type UserPropsDefinitionType, type BuiltInPropsDefinitionType, type PropsInputType, type PropsType, type MixedPropDefinitionType } from './props';\n\nconst drivers = __ZOID__.__FRAMEWORK_SUPPORT__\n    ? require('../drivers')\n    : {};\n\ntype LoggerPayload = { [string] : ?string };\n\n// eslint-disable-next-line flowtype/require-exact-type\ntype Logger = {\n    debug : (event : string, payload? : LoggerPayload) => void,\n    info : (event : string, payload? : LoggerPayload) => void,\n    warn : (event : string, payload? : LoggerPayload) => void,\n    error : (event : string, payload? : LoggerPayload) => void\n};\n\n/*  Component\n    ---------\n\n    This is the spec for the component. The idea is, when I call zoid.create(), it will create a new instance\n    of Component with the blueprint needed to set up ParentComponents and ChildComponents.\n\n    This is the one portion of code which is required by -- and shared to -- both the parent and child windows, and\n    contains all of the configuration needed for them to set themselves up.\n*/\n\nexport type ComponentOptionsType<P> = {|\n\n    tag : string,\n\n    url : string | ({ props : PropsType<P> }) => string,\n    domain? : string | RegExp,\n    bridgeUrl? : string,\n\n    props? : UserPropsDefinitionType<P>,\n\n    dimensions? : CssDimensionsType,\n    autoResize? : { width? : boolean, height? : boolean, element? : string },\n\n    allowedParentDomains? : StringMatcherType,\n\n    attributes? : {\n        iframe? : { [string] : string },\n        popup? : { [string] : string }\n    },\n\n    defaultContext? : $Values<typeof CONTEXT>,\n\n    containerTemplate? : (RenderOptionsType<P>) => HTMLElement,\n    prerenderTemplate? : (RenderOptionsType<P>) => HTMLElement,\n\n    validate? : ({ props : PropsInputType<P> }) => void,\n\n    logger? : Logger\n|};\n\ntype ZoidRenderer = {|\n    render : (element? : ElementRefType, context? : $Values<typeof CONTEXT>) => ZalgoPromise<void>,\n    renderTo : (target : CrossDomainWindowType, element? : ElementRefType, context? : $Values<typeof CONTEXT>) => ZalgoPromise<void>\n|};\n\nexport type ZoidComponentInstance<P> = {| ...ParentHelpers<P>, ...ZoidRenderer |};\n\nexport type ZoidComponent<P> = {|\n    (PropsInputType<P>) : ZoidComponentInstance<P>,\n    driver : (string, mixed) => mixed,\n    isChild : () => boolean,\n    xprops? : PropsType<P>,\n    canRenderTo : (CrossDomainWindowType) => ZalgoPromise<boolean>\n|};\n\nexport class Component<P> {\n\n    tag : string\n    name : string\n    \n    url : string | ({ props : PropsType<P> }) => string\n    domain : void | string | RegExp\n    bridgeUrl : void | string\n\n    props : UserPropsDefinitionType<P>\n    builtinProps : BuiltInPropsDefinitionType<P>\n\n    dimensions : CssDimensionsType\n    autoResize : void | { width? : boolean, height? : boolean, element? : string }\n\n    allowedParentDomains : StringMatcherType\n\n    defaultContext : $Values<typeof CONTEXT>\n    \n    attributes : {\n        iframe? : { [string] : string },\n        popup? : { [string] : string }\n    }\n\n    containerTemplate : (RenderOptionsType<P>) => HTMLElement\n    prerenderTemplate : (RenderOptionsType<P>) => HTMLElement\n\n    validate : void | ({ props : PropsInputType<P> }) => void\n\n    driverCache : { [string] : mixed }\n\n    xprops : ?PropsType<P>\n\n    logger : Logger\n\n    constructor(options : ComponentOptionsType<P>) {\n        validate(options);\n\n        // The tag name of the component. Used by some drivers (e.g. angular) to turn the component into an html element,\n        // e.g. <my-component>\n\n        this.tag = options.tag;\n        this.name = this.tag.replace(/-/g, '_');\n\n        this.allowedParentDomains = options.allowedParentDomains || WILDCARD;\n\n        if (Component.components[this.tag]) {\n            throw new Error(`Can not register multiple components with the same tag: ${ this.tag }`);\n        }\n\n        // A json based spec describing what kind of props the component accepts. This is used to validate any props before\n        // they are passed down to the child.\n\n        this.builtinProps = getInternalProps();\n        this.props = options.props || {};\n\n        // The dimensions of the component, e.g. { width: '300px', height: '150px' }\n\n        const { width = DEFAULT_DIMENSIONS.WIDTH, height = DEFAULT_DIMENSIONS.HEIGHT } = options.dimensions || {};\n        this.dimensions = { width, height };\n\n        this.url = options.url;\n        this.domain = options.domain;\n        this.bridgeUrl = options.bridgeUrl;\n\n        this.attributes = options.attributes || {};\n        this.attributes.iframe = this.attributes.iframe || {};\n        this.attributes.popup = this.attributes.popup || {};\n\n        this.defaultContext = options.defaultContext || CONTEXT.IFRAME;\n\n        this.autoResize = options.autoResize;\n\n        this.containerTemplate = options.containerTemplate || defaultContainerTemplate;\n        this.prerenderTemplate = options.prerenderTemplate || defaultPrerenderTemplate;\n\n        this.validate = options.validate;\n\n        this.logger = options.logger || {\n            debug: noop,\n            info:  noop,\n            warn:  noop,\n            error: noop\n        };\n\n        this.registerChild();\n        this.listenDelegate();\n\n        Component.components[this.tag] = this;\n    }\n\n    @memoize\n    getPropNames() : $ReadOnlyArray<string> {\n        const props = Object.keys(this.props);\n\n        for (const key of Object.keys(this.builtinProps)) {\n            if (props.indexOf(key) === -1) {\n                props.push(key);\n            }\n        }\n\n        return props;\n    }\n\n    // $FlowFixMe\n    getPropDefinition(name : string) : MixedPropDefinitionType<P> {\n        // $FlowFixMe\n        return this.props[name] || this.builtinProps[name];\n    }\n\n    driver(name : string, dep : mixed) : mixed {\n        if (!drivers[name]) {\n            throw new Error(`Could not find driver for framework: ${ name }`);\n        }\n\n        this.driverCache = this.driverCache || {};\n\n        if (!this.driverCache[name]) {\n            this.driverCache[name] = drivers[name].register(this, dep);\n        }\n\n        return this.driverCache[name];\n    }\n\n    registerChild() {\n        if (this.isChild()) {\n            if (window.xprops) {\n                throw new Error(`Can not register ${ this.name } as child - can not attach multiple components to the same window`);\n            }\n\n            const child = new ChildComponent(this);\n            window.xprops = this.xprops = child.getProps();\n        }\n    }\n\n    listenDelegate() {\n        on(`${ POST_MESSAGE.ALLOW_DELEGATE }_${ this.name }`, () => {\n            return true;\n        });\n\n        on(`${ POST_MESSAGE.DELEGATE }_${ this.name }`, ({ source, data: { context, props, overrides } }) => {\n            const delegate = new DelegateComponent(this, source, { context, props, overrides });\n            return delegate.getDelegate();\n        });\n    }\n\n    canRenderTo(win : CrossDomainWindowType) : ZalgoPromise<boolean> {\n        return send(win, `${ POST_MESSAGE.ALLOW_DELEGATE }_${ this.name }`).then(({ data }) => {\n            return data;\n        }).catch(() => {\n            return false;\n        });\n    }\n\n    getUrl(props : PropsType<P>) : string {\n        if (typeof this.url === 'function') {\n            return this.url({ props });\n        }\n\n        return this.url;\n    }\n\n    getInitialDomain(props : PropsType<P>) : string {\n        if (this.domain && typeof this.domain === 'string') {\n            return this.domain;\n        }\n\n        return getDomainFromUrl(this.getUrl(props));\n    }\n\n    getDomain(props : PropsType<P>) : string | RegExp {\n        if (isRegex(this.domain)) {\n            // $FlowFixMe\n            return this.domain;\n        }\n\n        return this.getInitialDomain(props);\n    }\n\n    getBridgeUrl() : ?string {\n        if (this.bridgeUrl) {\n            return this.bridgeUrl;\n        }\n    }\n\n    isChild() : boolean {\n        return isZoidComponentWindow() && parseChildWindowName().tag === this.tag;\n    }\n\n    getDefaultElement(context : $Values<typeof CONTEXT>, element : ?ElementRefType) : ElementRefType {\n        if (element) {\n            if (!isElement(element) && typeof element !== 'string') {\n                throw new Error(`Expected element to be passed`);\n            }\n\n            return element;\n        }\n\n        if (context === CONTEXT.POPUP) {\n            return 'body';\n        }\n\n        throw new Error(`Expected element to be passed to render iframe`);\n    }\n\n    getDefaultContext(context : ?$Values<typeof CONTEXT>, props : PropsInputType<P>) : $Values<typeof CONTEXT> {\n        if (props.window) {\n            return ProxyWindow.toProxyWindow(props.window).getType();\n        }\n\n        if (context) {\n            if (context !== CONTEXT.IFRAME && context !== CONTEXT.POPUP) {\n                throw new Error(`Unrecognized context: ${ context }`);\n            }\n            \n            return context;\n        }\n\n        return this.defaultContext;\n    }\n\n    init(props : PropsInputType<P>) : ZoidComponentInstance<P> {\n\n        // $FlowFixMe\n        props = props || {};\n        \n        const parent = new ParentComponent(this, props);\n\n        const render = (target, element, context) => ZalgoPromise.try(() => {\n            if (!isWindow(target)) {\n                throw new Error(`Must pass window to renderTo`);\n            }\n\n            context = this.getDefaultContext(context, props);\n            element = this.getDefaultElement(context, element);\n            return parent.render(target, element, context);\n        });\n\n        return {\n            ...parent.getHelpers(),\n            render:   (element, context) => render(window, element, context),\n            renderTo: (target, element, context) => render(target, element, context)\n        };\n    }\n\n    checkAllowRender(target : CrossDomainWindowType, domain : string | RegExp, element : ElementRefType) {\n        if (target === window) {\n            return;\n        }\n\n        if (!isSameTopWindow(window, target)) {\n            throw new Error(`Can only renderTo an adjacent frame`);\n        }\n\n        const origin = getDomain();\n\n        if (!matchDomain(domain, origin) && !isSameDomain(target)) {\n            throw new Error(`Can not render remotely to ${ domain.toString() } - can only render to ${ origin }`);\n        }\n\n        if (element && typeof element !== 'string') {\n            throw new Error(`Element passed to renderTo must be a string selector, got ${ typeof element } ${ element }`);\n        }\n    }\n\n    log(event : string, payload? : LoggerPayload) {\n        this.logger.info(`${ this.name }_${ event }`, payload);\n    }\n\n    static components : { [string] : Component<*> } = {}\n    static activeComponents : Array<ParentComponent<*> | DelegateComponent<*>> = [] // eslint-disable-line flowtype/no-mutable-array\n\n    registerActiveComponent<Q>(instance : ParentComponent<Q> | DelegateComponent<Q>) {\n        Component.activeComponents.push(instance);\n    }\n\n    destroyActiveComponent<Q>(instance : ParentComponent<Q> | DelegateComponent<Q>) {\n        Component.activeComponents.splice(Component.activeComponents.indexOf(instance), 1);\n    }\n\n    static destroyAll() : ZalgoPromise<void> {\n        if (bridge) {\n            bridge.destroyBridges();\n        }\n\n        const results = [];\n\n        while (Component.activeComponents.length) {\n            results.push(Component.activeComponents[0].destroy());\n        }\n\n        return ZalgoPromise.all(results).then(noop);\n    }\n}\n\nexport type ComponentDriverType<P, T : mixed> = {|\n    register : (Component<P>, T) => mixed\n|};\n\nexport function create<P>(options : ComponentOptionsType<P>) : ZoidComponent<P> {\n    const component : Component<P> = new Component(options);\n\n    const init = (props) => component.init(props);\n    init.driver = (name, dep) => component.driver(name, dep);\n    init.isChild = () => component.isChild();\n    init.canRenderTo = (win) => component.canRenderTo(win);\n    init.xprops = component.xprops;\n\n    // $FlowFixMe\n    return init;\n}\n\nexport function destroyAll() : ZalgoPromise<void> {\n    return Component.destroyAll();\n}\n","/* @flow */\n\nimport { isPerc, isPx, values } from 'belter/src';\n\nimport { CONTEXT, PROP_TYPE } from '../constants';\n\nimport type { ComponentOptionsType } from './index';\n\nfunction validatePropDefinitions<P>(options : ComponentOptionsType<P>) {\n\n    if (options.props && !(typeof options.props === 'object')) {\n        throw new Error(`Expected options.props to be an object`);\n    }\n\n    const PROP_TYPE_LIST = values(PROP_TYPE);\n\n    if (options.props) {\n        for (const key of Object.keys(options.props)) {\n\n            // $FlowFixMe\n            const prop = options.props[key];\n\n            if (!prop || !(typeof prop === 'object')) {\n                throw new Error(`Expected options.props.${ key } to be an object`);\n            }\n\n            if (!prop.type) {\n                throw new Error(`Expected prop.type`);\n            }\n\n            if (PROP_TYPE_LIST.indexOf(prop.type) === -1) {\n                throw new Error(`Expected prop.type to be one of ${ PROP_TYPE_LIST.join(', ') }`);\n            }\n\n            if (prop.required && prop.default) {\n                throw new Error(`Required prop can not have a default value`);\n            }\n\n            if (prop.type === PROP_TYPE.FUNCTION && prop.queryParam) {\n                throw new Error(`Do not pass queryParam for function prop`);\n            }\n        }\n    }\n}\n\n// eslint-disable-next-line complexity\nexport function validate<P>(options : ?ComponentOptionsType<P>) { // eslint-ignore-line\n\n    if (!options) {\n        throw new Error(`Expected options to be passed`);\n    }\n\n    // eslint-disable-next-line security/detect-unsafe-regex, unicorn/no-unsafe-regex\n    if (!options.tag || !options.tag.match(/^([a-z0-9]+-)+[a-z0-9]+$/)) {\n        throw new Error(`Invalid options.tag: ${ options.tag }`);\n    }\n\n    validatePropDefinitions(options);\n\n    if (options.dimensions) {\n        if (options.dimensions && !isPx(options.dimensions.width) && !isPerc(options.dimensions.width)) {\n            throw new Error(`Expected options.dimensions.width to be a px or % string value`);\n        }\n\n        if (options.dimensions && !isPx(options.dimensions.height) && !isPerc(options.dimensions.height)) {\n            throw new Error(`Expected options.dimensions.height to be a px or % string value`);\n        }\n    }\n\n    if (options.defaultContext) {\n        if (options.defaultContext !== CONTEXT.IFRAME && options.defaultContext !== CONTEXT.POPUP) {\n            throw new Error(`Unsupported context type: ${ options.defaultContext || 'unknown' }`);\n        }\n    }\n\n    if (!options.url) {\n        throw new Error(`Must pass url`);\n    }\n\n    if (typeof options.url !== 'string' && typeof options.url !== 'function') {\n        throw new TypeError(`Expected url to be string or function`);\n    }\n\n    if (options.prerenderTemplate && typeof options.prerenderTemplate !== 'function') {\n        throw new Error(`Expected options.prerenderTemplate to be a function`);\n    }\n\n    if (options.containerTemplate && typeof options.containerTemplate !== 'function') {\n        throw new Error(`Expected options.containerTemplate to be a function`);\n    }\n}\n","/* @flow */\n\nimport { ZalgoPromise } from 'zalgo-promise/src';\nimport { once, noop } from 'belter/src';\nimport { isWindow, type CrossDomainWindowType } from 'cross-domain-utils/src';\nimport { ProxyWindow } from 'post-robot/src/serialize/window';\n\nimport { PROP_SERIALIZATION } from '../constants';\n\nexport type EventHandlerType<T> = (T) => void | ZalgoPromise<void>;\n\nexport type timeoutPropType = number;\nexport type windowPropType = CrossDomainWindowType | ProxyWindow;\nexport type closePropType = () => ZalgoPromise<void>;\nexport type focusPropType = () => ZalgoPromise<void>;\nexport type resizePropType = ({ width : ?number, height : ?number }) => ZalgoPromise<void>;\n\nexport type onDisplayPropType = EventHandlerType<void>;\nexport type onRenderedPropType = EventHandlerType<void>;\nexport type onRenderPropType = EventHandlerType<void>;\nexport type onClosePropType = EventHandlerType<void>;\nexport type onErrorPropType = EventHandlerType<mixed>;\nexport type onChangePropType<P> = ((PropsType<P>) => void) => void; // eslint-disable-line no-use-before-define\n\nexport type PropsInputType<P> = {\n    timeout? : timeoutPropType,\n    window? : windowPropType,\n\n    onDisplay? : onDisplayPropType,\n    onRendered? : onRenderedPropType,\n    onRender? : onRenderPropType,\n    onClose? : onClosePropType,\n    onError? : onErrorPropType\n} & P;\n\nexport type PropsType<P> = {|\n    timeout? : timeoutPropType,\n    window? : ?windowPropType,\n    close? : ?closePropType,\n    focus? : ?focusPropType,\n    resize? : ?resizePropType,\n\n    onDisplay : onDisplayPropType,\n    onRendered : onRenderedPropType,\n    onRender : onRenderPropType,\n    onClose : onClosePropType,\n    onError : onErrorPropType,\n    onChange : onChangePropType<P>\n|} & P;\n\ntype PropDefinitionType<T, P, S : string> = {|\n    type : S,\n    alias? : string,\n    value? : ({ props : P, state : Object, close : () => ZalgoPromise<void>, focus : () => ZalgoPromise<void>, onError : (mixed) => ZalgoPromise<void> }) => ?T,\n    required? : boolean,\n    queryParam? : boolean | string | ({ value : T }) => (string | ZalgoPromise<string>),\n    queryValue? : ({ value : T }) => (ZalgoPromise<mixed> | mixed),\n    sendToChild? : boolean,\n    allowDelegate? : boolean,\n    validate? : ({ value : T, props : PropsInputType<P> }) => void,\n    decorate? : ({ value : T, props : PropsType<P>, state : Object, close : () => ZalgoPromise<void>, focus : () => ZalgoPromise<void>, onError : (mixed) => ZalgoPromise<void> }) => T,\n    default? : ({ props : P, state : Object }) => ?T,\n    sameDomain? : boolean,\n    serialization? : $Values<typeof PROP_SERIALIZATION>,\n    childDecorate? : ({ value : T, close : () => ZalgoPromise<void>, focus : () => ZalgoPromise<void>, onError : (mixed) => ZalgoPromise<void>, onPropsChange : ((PropsType<P>) => void) => void, resize : ({ width : ?number, height : ?number }) => ZalgoPromise<void> }) => ?T\n|};\n\nexport type BooleanPropDefinitionType<T : boolean, P> = PropDefinitionType<T, P, 'boolean'>;\nexport type StringPropDefinitionType<T : string, P> = PropDefinitionType<T, P, 'string'>;\nexport type NumberPropDefinitionType<T : number, P> = PropDefinitionType<T, P, 'number'>;\nexport type FunctionPropDefinitionType<T : Function, P> = PropDefinitionType<T, P, 'function'>;\nexport type ArrayPropDefinitionType<T : Array<*>, P> = PropDefinitionType<T, P, 'array'>; // eslint-disable-line flowtype/no-mutable-array\nexport type ObjectPropDefinitionType<T : Object, P> = PropDefinitionType<T, P, 'object'>;\n\nexport type MixedPropDefinitionType<P> = BooleanPropDefinitionType<*, P> | StringPropDefinitionType<*, P> | NumberPropDefinitionType<*, P> | FunctionPropDefinitionType<*, P> | ObjectPropDefinitionType<*, P> | ArrayPropDefinitionType<*, P>;\n\nexport type UserPropsDefinitionType<P> = {\n    [string] : MixedPropDefinitionType<P>\n};\n\n// eslint-disable-next-line flowtype/require-exact-type\nexport type BuiltInPropsDefinitionType<P> = {\n    timeout : NumberPropDefinitionType<timeoutPropType, P>,\n    window : ObjectPropDefinitionType<windowPropType, P>,\n    close : FunctionPropDefinitionType<closePropType, P>,\n    focus : FunctionPropDefinitionType<focusPropType, P>,\n    resize : FunctionPropDefinitionType<resizePropType, P>,\n\n    onDisplay : FunctionPropDefinitionType<onDisplayPropType, P>,\n    onRendered : FunctionPropDefinitionType<onRenderedPropType, P>,\n    onRender : FunctionPropDefinitionType<onRenderPropType, P>,\n    onClose : FunctionPropDefinitionType<onClosePropType, P>,\n    onError : FunctionPropDefinitionType<onErrorPropType, P>,\n    onChange : FunctionPropDefinitionType<onChangePropType<P>, P>\n};\n\nexport function getInternalProps<P>() : BuiltInPropsDefinitionType<P> {\n    return {\n        window: {\n            type:          'object',\n            sendToChild:   false,\n            required:      false,\n            allowDelegate: true,\n            validate({ value } : { value : CrossDomainWindowType | ProxyWindow }) {\n                if (!isWindow(value) && !ProxyWindow.isProxyWindow(value)) {\n                    throw new Error(`Expected Window or ProxyWindow`);\n                }\n            },\n            decorate({ value } : { value : CrossDomainWindowType | ProxyWindow }) : ProxyWindow {\n                return ProxyWindow.toProxyWindow(value);\n            }\n        },\n\n        timeout: {\n            type:        'number',\n            required:    false,\n            sendToChild: false\n        },\n\n        close: {\n            type:          'function',\n            required:      false,\n            sendToChild:   false,\n            childDecorate: ({ close }) => {\n                return close;\n            }\n        },\n\n        focus: {\n            type:          'function',\n            required:      false,\n            sendToChild:   false,\n            childDecorate: ({ focus }) => {\n                return focus;\n            }\n        },\n\n        resize: {\n            type:          'function',\n            required:      false,\n            sendToChild:   false,\n            childDecorate: ({ resize }) => {\n                return resize;\n            }\n        },\n\n        onDisplay: {\n            type:          'function',\n            required:      false,\n            sendToChild:   false,\n            allowDelegate: true,\n            default:       () => noop,\n            decorate:      ({ value }) => once(value)\n        },\n\n        onRendered: {\n            type:        'function',\n            required:    false,\n            sendToChild: false,\n            default:     () => noop,\n            decorate:    ({ value }) => once(value)\n        },\n\n        onRender: {\n            type:        'function',\n            required:    false,\n            sendToChild: false,\n            default:     () => noop,\n            decorate:    ({ value }) => once(value)\n        },\n\n        onClose: {\n            type:          'function',\n            required:      false,\n            sendToChild:   false,\n            allowDelegate: true,\n            default:       () => noop,\n            decorate:      ({ value }) => once(value)\n        },\n\n        onError: {\n            type:          'function',\n            required:      false,\n            sendToChild:   false,\n            childDecorate: ({ onError }) => {\n                return function childOnError(err : mixed) : ZalgoPromise<void> {\n                    return onError(err);\n                };\n            }\n        },\n\n        onChange: {\n            type:          'function',\n            required:      false,\n            sendToChild:   false,\n            childDecorate: ({ onPropsChange }) => {\n                return onPropsChange;\n            }\n        }\n    };\n}\n","/* @flow */\n\nexport { PopupOpenError } from 'belter/src';\nexport { create, destroyAll, Component } from './component';\nexport type { ZoidComponent } from './component';\nexport { PROP_TYPE, PROP_SERIALIZATION, CONTEXT, CLASS } from './constants';\n","/* @flow */\n/* eslint react/no-deprecated: off, react/no-find-dom-node: off, react/display-name: off, react/no-did-mount-set-state: off, react/destructuring-assignment: off, react/prop-types: off */\n\nimport { extend, noop } from 'belter/src';\n\nimport type { Component, ComponentDriverType } from '../component';\nimport { CONTEXT } from '../constants';\n\ndeclare class ReactClassType {\n\n}\n\ntype ReactElementType = {|\n\n|};\n\ndeclare class __ReactComponent {\n\n}\n\ntype ReactType = {|\n    Component : __ReactComponent,\n    createClass : ({ render : () => ReactElementType, componentDidMount : () => void, componentDidUpdate : () => void }) => (typeof ReactClassType),\n    createElement : (string, ?{ [string] : mixed }, ...children : $ReadOnlyArray<ReactElementType>) => ReactElementType\n|};\n\ntype ReactDomType = {|\n    findDOMNode : (typeof ReactClassType) => HTMLElement\n|};\n\ntype ReactLibraryType = {|\n    React : ReactType,\n    ReactDOM : ReactDomType\n|};\n\nexport const react : ComponentDriverType<*, ReactLibraryType> = {\n\n    register(component : Component<*>, { React, ReactDOM } : ReactLibraryType) : (typeof ReactClassType) {\n\n        // $FlowFixMe\n        return class extends React.Component {\n            render() : ReactElementType {\n                return React.createElement('div', null);\n            }\n\n            componentDidMount() {\n                component.log(`instantiate_react_component`);\n\n                // $FlowFixMe\n                const el = ReactDOM.findDOMNode(this);\n\n                const parent = component.init(extend({}, this.props));\n                parent.render(el, CONTEXT.IFRAME);\n                this.setState({ parent });\n            }\n\n            componentDidUpdate() {\n\n                if (this.state && this.state.parent) {\n                    this.state.parent.updateProps(extend({}, this.props)).catch(noop);\n                }\n            }\n        };\n    }\n};\n","/* @flow */\n\nimport { extend, noop } from 'belter/src';\n\nimport type { Component, ComponentDriverType } from '../component';\nimport { CONTEXT } from '../constants';\n\ntype VueComponent = {|\n    render : (Function) => Element,\n    inheritAttrs : boolean,\n    mounted : () => void,\n    watch : {|\n        $attrs : {|\n            deep : boolean,\n            handler : () => void\n        |}\n    |}\n|};\n\ntype RegisteredVueComponent = {|\n    \n|};\n\ntype VueType = {|\n    component : (string, VueComponent) => RegisteredVueComponent\n|};\n\nexport const vue : ComponentDriverType<*, VueType> = {\n\n    register<P>(component : Component<P>, Vue : VueType) : RegisteredVueComponent {\n\n        return Vue.component(component.tag, {\n            render(createElement) : Element {\n                return createElement('div');\n            },\n\n            inheritAttrs: false,\n\n            mounted() {\n                const el = this.$el;\n\n                // $FlowFixMe\n                this.parent = component.init(extend({}, this.$attrs));\n                this.parent.render(el, CONTEXT.IFRAME);\n            },\n\n            watch: {\n                $attrs: {\n                    handler: function onChange() {\n                        if (this.parent && this.$attrs) {\n                            this.parent.updateProps(extend({}, this.$attrs)).catch(noop);\n                        }\n                    },\n                    deep: true\n                }\n            }\n        });\n    }\n};\n","/* @flow */\n\nimport { dasherizeToCamel, replaceObject, noop } from 'belter/src';\n\nimport type { Component, ComponentDriverType } from '../component';\nimport { CONTEXT } from '../constants';\n\ntype AngularModule = {|\n    directive : (string, () => {\n        scope : { [string] : '=' | '@' },\n        restrict : string,\n        controller : $ReadOnlyArray<string | Function>\n    }) => AngularModule\n|};\n\ntype Angular = {|\n    module : (string, $ReadOnlyArray<string>) => AngularModule\n|};\n\nexport const angular : ComponentDriverType<*, Angular> = {\n\n    register(component : Component<*>, ng : Angular) : AngularModule {\n\n        const module = ng.module(component.tag, []).directive(dasherizeToCamel(component.tag), () => {\n\n            const scope = {};\n\n            for (const key of component.getPropNames()) {\n                scope[key] = '=';\n            }\n\n            scope.props = '=';\n\n            return {\n                scope,\n\n                restrict: 'E',\n\n                controller: [ '$scope', '$element', ($scope, $element) => {\n                    component.log(`instantiate_angular_component`);\n\n                    function safeApply() {\n                        if ($scope.$root.$$phase !== '$apply' && $scope.$root.$$phase !== '$digest') {\n                            try {\n                                $scope.$apply();\n                            } catch (err) {\n                                // pass\n                            }\n                        }\n                    }\n\n                    const getProps = () => {\n                        return replaceObject($scope.props, item => {\n                            if (typeof item === 'function') {\n                                return function angularWrapped() : mixed {\n                                    const result = item.apply(this, arguments);\n                                    safeApply();\n                                    return result;\n                                };\n                            }\n                            return item;\n                        });\n                    };\n\n                    const instance = component.init(getProps());\n                    instance.render($element[0], CONTEXT.IFRAME);\n\n                    $scope.$watch(() => {\n                        instance.updateProps(getProps()).catch(noop);\n                    });\n                } ]\n            };\n        });\n\n        return module;\n    }\n};\n","/* @flow */\n/* eslint new-cap: 0 */\n\nimport { replaceObject } from 'belter/src';\n\nimport type { Component, ComponentDriverType } from '../component';\nimport { CONTEXT } from '../constants';\n\ntype Angular2Injection = {||};\n\ntype Angular2Component = {||};\n\ntype Angular2Module = {||};\n\ntype Angular2 = {|\n    Component : ({ selector : string, template : string, inputs : $ReadOnlyArray<string> }) => {\n        Class : ({ constructor : $ReadOnlyArray<Angular2Injection | Function>, ngOnInit : () => void, ngDoCheck : () => void }) => Angular2Component\n    },\n    NgModule : ({ declarations : $ReadOnlyArray<Angular2Component>, exports : $ReadOnlyArray<Angular2Component> }) => {\n        Class : ({ constructor : () => void }) => Angular2Module\n    },\n    ElementRef : Angular2Injection,\n    NgZone : Angular2Injection\n|};\n\nconst equals = (obj1, obj2) => {\n    const checked = {};\n\n    for (const key in obj1) {\n        if (obj1.hasOwnProperty(key)) {\n            checked[key] = true;\n\n            if (obj1[key] !== obj2[key]) {\n                return false;\n            }\n        }\n    }\n\n    for (const key in obj2) {\n        if (!checked[key]) {\n            return false;\n        }\n    }\n\n    return true;\n};\n\nexport const angular2 : ComponentDriverType<*, Angular2> = {\n\n    register(zoid : Component<*>, { Component : AngularComponent, NgModule, ElementRef, NgZone }) : Angular2Module {\n\n        zoid.log('initializing angular2 component');\n\n        const getProps = (component) => {\n            return replaceObject({ ...component.internalProps, ...component.props }, item => {\n                if (typeof item === 'function') {\n                    return function angular2Wrapped() : void {\n                        return component.zone.run(() => item.apply(this, arguments));\n                    };\n                }\n                return item;\n            });\n        };\n\n        const ComponentInstance =\n            AngularComponent({\n                selector: zoid.tag,\n                template: '<div></div>',\n                inputs:   [ 'props' ]\n            }).Class({\n                constructor: [ ElementRef, NgZone, function angularConstructor(elementRef, zone) {\n                    this._props = {};\n                    this.elementRef = elementRef;\n                    this.zone = zone;\n                } ],\n                ngOnInit () {\n                    const targetElement = this.elementRef.nativeElement;\n                    \n                    this.parent = zoid.init(getProps(this));\n                    this.parent.render(targetElement, CONTEXT.IFRAME);\n                },\n                ngDoCheck() {\n                    if (this.parent && !equals(this._props, this.props)) {\n                        this._props = { ...this.props };\n                        this.parent.updateProps(getProps(this));\n                    }\n                }\n            });\n\n\n        const ModuleInstance = NgModule({\n            declarations: [ ComponentInstance ],\n            exports:      [ ComponentInstance ]\n        }).Class({\n            constructor () {\n                // pass\n            }\n        });\n\n        return ModuleInstance;\n    }\n};\n","/* @flow */\n\nexport * from './react';\nexport * from './vue';\nexport * from './angular';\nexport * from './angular2';\n"],"sourceRoot":""}