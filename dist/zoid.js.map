{"version":3,"sources":["webpack://zoid/webpack/universalModuleDefinition","webpack://zoid/webpack/bootstrap","webpack://zoid/./node_modules/@babel/runtime/helpers/esm/extends.js","webpack://zoid/./node_modules/zalgo-promise/src/utils.js","webpack://zoid/./node_modules/zalgo-promise/src/exceptions.js","webpack://zoid/./node_modules/zalgo-promise/src/flush.js","webpack://zoid/./node_modules/zalgo-promise/src/promise.js","webpack://zoid/./node_modules/cross-domain-utils/src/util.js","webpack://zoid/./node_modules/cross-domain-utils/src/constants.js","webpack://zoid/./node_modules/cross-domain-utils/src/utils.js","webpack://zoid/./node_modules/cross-domain-safe-weakmap/src/util.js","webpack://zoid/./node_modules/cross-domain-safe-weakmap/src/weakmap.js","webpack://zoid/./node_modules/belter/src/util.js","webpack://zoid/./node_modules/belter/src/dom.js","webpack://zoid/./node_modules/cross-domain-safe-weakmap/src/native.js","webpack://zoid/./node_modules/belter/src/css.js","webpack://zoid/./node_modules/post-robot/src/conf/config.js","webpack://zoid/./node_modules/post-robot/src/conf/constants.js","webpack://zoid/./node_modules/post-robot/src/global.js","webpack://zoid/./node_modules/post-robot/src/lib/hello.js","webpack://zoid/./node_modules/post-robot/src/lib/windows.js","webpack://zoid/./node_modules/universal-serialize/src/constants.js","webpack://zoid/./node_modules/universal-serialize/src/common.js","webpack://zoid/./node_modules/universal-serialize/src/serialize.js","webpack://zoid/./node_modules/universal-serialize/src/serializers/function.js","webpack://zoid/./node_modules/universal-serialize/src/serializers/error.js","webpack://zoid/./node_modules/universal-serialize/src/serializers/promise.js","webpack://zoid/./node_modules/universal-serialize/src/serializers/regex.js","webpack://zoid/./node_modules/universal-serialize/src/serializers/date.js","webpack://zoid/./node_modules/universal-serialize/src/serializers/array.js","webpack://zoid/./node_modules/universal-serialize/src/serializers/object.js","webpack://zoid/./node_modules/universal-serialize/src/serializers/string.js","webpack://zoid/./node_modules/universal-serialize/src/serializers/number.js","webpack://zoid/./node_modules/universal-serialize/src/serializers/boolean.js","webpack://zoid/./node_modules/universal-serialize/src/serializers/null.js","webpack://zoid/./node_modules/universal-serialize/src/deserialize.js","webpack://zoid/./node_modules/post-robot/src/bridge/common.js","webpack://zoid/./node_modules/post-robot/src/bridge/parent.js","webpack://zoid/./node_modules/post-robot/src/bridge/setup.js","webpack://zoid/./node_modules/post-robot/src/bridge/bridge.js","webpack://zoid/./node_modules/post-robot/src/bridge/child.js","webpack://zoid/./node_modules/post-robot/src/serialize/window.js","webpack://zoid/./node_modules/post-robot/src/serialize/function.js","webpack://zoid/./node_modules/post-robot/src/serialize/serialize.js","webpack://zoid/./node_modules/post-robot/src/serialize/promise.js","webpack://zoid/./node_modules/post-robot/src/drivers/send/strategies.js","webpack://zoid/./node_modules/post-robot/src/lib/compat.js","webpack://zoid/./node_modules/post-robot/src/drivers/send/index.js","webpack://zoid/./node_modules/post-robot/src/drivers/listeners.js","webpack://zoid/./node_modules/post-robot/src/drivers/receive/types.js","webpack://zoid/./node_modules/post-robot/src/index.js","webpack://zoid/./node_modules/post-robot/src/drivers/receive/index.js","webpack://zoid/./node_modules/post-robot/src/public/on.js","webpack://zoid/./node_modules/post-robot/src/public/send.js","webpack://zoid/./node_modules/post-robot/src/setup.js","webpack://zoid/./node_modules/post-robot/src/clean.js","webpack://zoid/./src/lib/global.js","webpack://zoid/./src/lib/serialize.js","webpack://zoid/./src/constants.js","webpack://zoid/./src/child/props.js","webpack://zoid/./src/child/window.js","webpack://zoid/./src/child/index.js","webpack://zoid/./src/parent/drivers.js","webpack://zoid/./src/parent/props.js","webpack://zoid/./src/parent/index.js","webpack://zoid/./src/delegate/index.js","webpack://zoid/./node_modules/@babel/runtime/helpers/esm/inheritsLoose.js","webpack://zoid/./node_modules/jsx-pragmatic/src/node.js","webpack://zoid/./node_modules/jsx-pragmatic/src/renderers/dom.js","webpack://zoid/./src/component/templates/container.jsx","webpack://zoid/./src/component/templates/component.jsx","webpack://zoid/./src/component/props.js","webpack://zoid/./src/component/component.js","webpack://zoid/./src/component/validate.js","webpack://zoid/./src/index.js"],"names":["root","factory","exports","module","define","amd","self","this","installedModules","__webpack_require__","moduleId","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","_extends","assign","target","arguments","length","source","apply","isPromise","item","Promise","window","Window","constructor","toString","then","err","flushPromise","dispatchedErrors","possiblyUnhandledPromiseHandlers","activeCount","flushActive","promise","resolve","startActive","endActive","ZalgoPromise","handler","_this","resolved","rejected","errorHandled","error","handlers","dispatching","stack","result","isAsync","res","reject","_proto","Error","dispatch","_this2","setTimeout","indexOf","push","j","dispatchPossiblyUnhandledError","asyncReject","_this3","_loop","_handlers$i","onSuccess","onError","catch","undefined","finally","onFinally","try","timeout","time","_this4","clearTimeout","toPromise","TypeError","all","promises","count","results","_loop2","prom","hash","keys","map","items","method","onPossiblyUnhandledException","cancel","splice","context","args","delay","flush","Zalgo","awaitActive","isRegex","PROTOCOL","MOCK","FILE","ABOUT","WILDCARD","WINDOW_TYPE","IFRAME","POPUP","IE_WIN_ACCESS_ERROR","isAboutProtocol","win","location","protocol","getParent","parent","getOpener","opener","canReadFromWindow","href","getActualDomain","host","getDomain","domain","mockDomain","isActuallySameDomain","desc","getOwnPropertyDescriptor","isSameDomain","assertSameDomain","isAncestorParent","child","childParent","getParents","getFrames","frames","len","frame","getAllChildFrames","_i3","_getFrames2","_i5","_getAllChildFrames2","childFrame","getTop","top","_i7","_getAllChildFrames4","getAllFramesInWindow","concat","iframeWindows","iframeFrames","isWindowClosed","allowMock","closed","message","mockclosed","iframeIndex","collection","safeIndexOf","contentWindow","parentNode","doc","ownerDocument","documentElement","contains","isFrameWindowClosed","getUserAgent","navigator","mockUserAgent","userAgent","getFrameByName","winFrames","_i9","isOpener","getAncestor","anyMatch","collection1","collection2","_i17","item1","_i19","getDistanceFromTop","distance","isSameTopWindow","win1","win2","top1","top2","allFrames1","allFrames2","opener1","opener2","matchDomain","pattern","origin","Array","isArray","Boolean","match","JSON","stringify","some","subpattern","getDomainFromUrl","url","split","slice","join","onCloseWindow","callback","maxtime","Infinity","check","isWindow","obj","__cross_domain_utils_window_check__","normalizeMockUrl","objectIDs","awaitFrameLoadPromises","counter","Date","now","CrossDomainSafeWeakMap","weakmap","values","Math","random","WeakMap","freeze","testWeakMap","testKey","set","hasNativeWeakMap","_cleanupClosedWindows","delete","isSafeToReadWrite","entry","writable","index","has","getOrSet","base64encode","str","btoa","Buffer","from","uniqueID","chars","replace","charAt","floor","toISOString","toLowerCase","serializeArgs","subkey","val","uid","getObjectID","inlineMemoize","logic","cache","__inline_memoize_cache__","noop","once","called","stringifyError","level","newErr","extend","isDefined","cleanup","tasks","cleaned","register","task","pop","assertExists","thing","isDocumentReady","document","body","readyState","urlEncode","waitForDocumentReady","interval","setInterval","clearInterval","parseQuery","queryString","params","_i2","_queryString$split2","pair","decodeURIComponent","extendQuery","originalQuery","props","filter","formatQuery","appendChild","container","isElement","element","Element","nodeType","style","getElementSafe","id","querySelector","elementReady","el","PopupOpenError","awaitFrameLoad","addEventListener","cleanIframes","linkFrameWindow","awaitFrameWindow","loadedFrame","iframe","options","attempts","attributes","tag","createElement","class","className","setAttribute","_i6","_Object$keys2","styleSheet","styleText","cssText","createTextNode","setStyle","html","innerHTML","frameBorder","allowTransparency","backgroundColor","getElement","removeChild","event","removeEventListener","destroyElement","isElementClosed","onResize","_temp","_ref2","_ref2$width","width","_ref2$height","height","_ref2$interval","_ref2$win","currentWidth","offsetWidth","currentHeight","offsetHeight","observer","newWidth","newHeight","ResizeObserver","observe","MutationObserver","childList","subtree","characterData","loop","disconnect","isPerc","test","isPx","toNum","parseInt","toPx","toCSS","normalizeDimension","dim","max","CHILD_WINDOW_TIMEOUT","ACK_TIMEOUT","ACK_TIMEOUT_KNOWN","RES_TIMEOUT","MESSAGE_TYPE","REQUEST","RESPONSE","ACK","MESSAGE_NAME","METHOD","HELLO","OPEN_TUNNEL","BRIDGE_NAME_PREFIX","SERIALIZATION_TYPE","CROSS_DOMAIN_ZALGO_PROMISE","CROSS_DOMAIN_FUNCTION","CROSS_DOMAIN_WINDOW","getGlobal","getObj","globalStore","defStore","store","storeKey","defVal","del","reset","WildCard","getWildcard","global","WINDOW_WILDCARD","windowStore","winStore","getStore","getInstanceID","getHelloPromise","sayHello","_ref3","send","instanceID","_ref4","data","getWindowInstanceID","_ref5","_ref6","awaitWindowHello","markWindowKnown","TYPE","FUNCTION","ERROR","PROMISE","REGEX","DATE","ARRAY","OBJECT","STRING","NUMBER","BOOLEAN","NULL","UNDEFINED","isSerializedType","__type__","determineType","serializeType","type","__val__","SERIALIZER","_SERIALIZER","_ref","code","toJSON","defaultSerializers","DESERIALIZER","_DESERIALIZER","RegExp","defaultDeserializers","needsBridgeForBrowser","needsBridgeForWin","needsBridgeForDomain","needsBridge","getBridgeName","sanitizedDomain","isBridge","documentBodyReady","registerRemoteWindow","findRemoteWindow","remoteWinPromise","registerRemoteSendMessage","sendMessage","remoteWin","remoteDomain","fireAndForget","rejectRemoteSendMessage","linkWindow","popupWindowsByName","popupWindowsByWin","_popupWindowsByName$k2","winName","details","setupBridge","windowOpen","on","receiveMessage","open","last","bridgePromise","bridge","winDetails","listenForOpenTunnel","openTunnelToParent","canary","tunnelWindows","parentWindow","_tunnelWindows$keys2","tunnelWindow","cleanTunnelWindows","addTunnelWindow","setupOpenTunnelToParent","openTunnelToOpener","cleanupProxyWindows","idToProxyWindow","_idToProxyWindow$keys2","shouldClean","ProxyWindow","serializedWindow","actualWindow","isProxyWindow","actualWindowPromise","setWindow","memoizedPromiseFunction","_len2","_key2","memoizePromise","getType","isPopup","isIframe","setLocation","setName","frameElement","close","focus","isClosed","_this5","getWindow","awaitWindow","matchWindow","_this6","unwrap","serialize","toProxyWindow","deserialize","addMethod","methodStore","proxyWindowMethods","lookupMethod","serializeFunction","destination","meth","methodSource","listenForFunctionCalls","__id__","__name__","serializeMessage","_serialize","serializers","serializer","serializePromise","serializeWindow","deserializeMessage","_deserialize","deserializers","parse","deserializer","serializedPromise","serializedFunction","getDeserializedFunction","opts","crossDomainFunctionWrapper","_arguments","__origin__","__source__","deserializeFunction","_ref7","deserializeWindow","SEND_MESSAGE_STRATEGIES","serializedMessage","dom","forEach","postMessage","messagingChild","messagingParent","sendBridgeMessage","foreignGlobal","_serializeMessage","success","strategyName","__DOMAIN_REGEX__","getResponseListener","deleteResponseListener","isResponseListenerErrored","getRequestListener","requestListeners","winQualifier","nameListeners","domainListeners","_i4","_domainListeners$__DO2","_domainListeners$__DO3","regex","listener","RECEIVE_MESSAGE_TYPES","_RECEIVE_MESSAGE_TYPE","sendResponse","ack","response","pathname","handleError","receivedMessages","parsedMessage","parseMessage","requestListener","addRequestListener","listenersCollection","_win2","_i8","_i10","_domain2","_i12","existingListener","regexListeners","regexListener","strDomain","errorHandler","responseTimeout","childTimeout","reqPromises","requestPromise","actualParent","_i15","_getFrames8","isAncestor","hasResult","markResponseListenerErrored","responseListener","addResponseListener","totalAckTimeout","isWindowKnown","totalResTimeout","ackTimeout","resTimeout","cycleTime","cycle","min","internalSerializeMessage","internalDeserializeMessage","cleanUpWindow","_requestPromises$get2","openBridge","bridges","bridgeFrames","src","openBridgeFrame","linkUrl","hasBridge","destroyBridges","_bridgeFrames$keys2","initialized","messageEvent","sourceElement","originalEvent","messageListener","listenForMessages","initHello","setup","globalFor","getProxyElement","resize","ZOID","POST_MESSAGE","PROP_TYPE","PROP_SERIALIZATION","DOTIFY","BASE64","CONTEXT","DEFAULT_DIMENSIONS","WIDTH","HEIGHT","EVENT","RENDER","RENDERED","DISPLAY","CLOSE","PROPS","normalizeChildProp","component","helpers","prop","getPropDefinition","childDecorate","parseChildWindowName","windowName","_windowName$split","zoidcomp","encodedPayload","atob","base64decode","getChildPayload","ChildComponent","parentComponentWindow","onPropHandlers","autoResize","childPayload","getParentComponentWindow","checkParentDomain","initialProps","getPropsByRef","setProps","watchForClose","init","buildExports","watchForResize","getHelpers","onProps","allowedParentDomains","ref","getNthParent","getNthParentFromTop","ancestor","_getAllFramesInWindow2","windows","getProps","isUpdate","existingProps","sameDomain","alias","_component$getPropNam2","getPropNames","normalizeChildProps","_this$onPropHandlers2","checkClose","destroy","getAutoResize","_ref3$width","_ref3$height","_ref3$element","_this4$getAutoResize","updateProps","RENDER_DRIVERS","openOnClick","openFrame","title","proxyFrame","frameWatcher","safeInterval","watchElementForClose","clean","openPrerenderFrame","openPrerender","proxyWin","proxyPrerenderFrame","prerenderFrame","prerenderFrameWindow","delegate","proxyContainer","_this3$component$dime","dimensions","_options","left","outerWidth","round","screenX","screen","outerHeight","screenY","status","toolbar","menubar","resizable","scrollbars","popup","getQueryParam","queryParam","getQueryValue","queryValue","ParentComponent","driver","initPromise","state","setupEvents","registerActiveComponent","destroyActiveComponent","watchForUnload","triggered","eventName","handlerList","cancelled","trigger","_len3","_key3","triggerOnce","_len4","_key4","onRender","onDisplay","onRendered","onClose","render","log","initialDomain","getInitialDomain","checkAllowRender","buildUrl","getProxyContainer","renderContainer","setState","setProxyWin","prerender","proxyPrerenderWin","loadUrl","setWindowName","buildWindowName","runTimeout","containerElement","buildChildPayload","getPropsRef","getPropsForChild","propRef","_ref7$target","getWindowRef","buildParentExports","_ref8","validate","instance","propNames","aliases","propDef","default","_Object$keys4","decorate","normalizeProps","_this$component$getPr2","required","propsDef","builtinProps","serialization","dotify","prefix","newobj","every","_Object$keys6","dotkey","query","originalUrl","originalHash","_url$split","_originalUrl$split","hashString","extendUrl","getUrl","sendToChild","_this7","_this8","_this9","_this10","windowProp","_this11","_this12","_this13","_this$component$getPr4","propName","allowDelegate","overridesPromise","overrides","_ref9","_this$driver$delegate2","_this14","_this15","closeWindowListener","_this16","unloadWindowListener","_this17","initChild","_this18","_this19","_ref10","_ref11","_this20","_this21","secondClosed","_this22","_ref12","_this23","prerenderTemplate","prerenderWindow","isBlankDomain","renderTemplate","tagName","children","writeElementToWindow","_ref13","_ref13$width","_ref13$height","_ref13$element","_ref14","renderer","_ref15","_this24","_ref16","_this25","_ref17","innerContainer","containerTemplate","_this26","_this27","_this28","bridgeUrl","getBridgeUrl","bridgeDomain","DelegateComponent","watchForSourceClose","getDelegate","getOverrides","closeSourceWindowListener","_inheritsLoose","subClass","superClass","__proto__","Node","isElementNode","isTextNode","isFragmentNode","ElementNode","_Node","_proto2","getTag","isTag","getText","TextNode","_Node2","text","_proto3","FragmentNode","_Node3","_proto4","normalizeChild","normalizeChildren","normalizedChild","_normalizedChild$chil2","subchild","node","_len","_key","ELEMENT_TAG","ELEMENT_PROP","CREATE_ELEMENT","_CREATE_ELEMENT","ADD_CHILDREN","_ADD_CHILDREN","firstChild","docElement","domRenderer","_ref9$doc","addProps","_el$querySelectorAll2","querySelectorAll","script","newScript","textContent","replaceChild","fixScripts","addChildren","CLASS","VISIBLE","INVISIBLE","defaultContainerTemplate","_ref$dimensions","classList","add","remove","defaultPrerenderTemplate","defaultNoop","decorateOnce","Component","defaultContext","driverCache","xprops","logger","PROP_TYPE_LIST","validatePropDefinitions","components","_ref$width","_ref$height","debug","info","warn","registerChild","listenDelegate","dep","isChild","_ref2$data","canRenderTo","payload","getDefaultContainer","getDefaultContext","renderTo","activeComponents","destroyAll","__webpack_exports__","component_destroyAll","component_Component"],"mappings":"CAAA,SAAAA,MAAAC;IACA,mBAAAC,WAAA,mBAAAC,SACAA,OAAAD,UAAAD,YACA,qBAAAG,iBAAAC,MACAD,OAAA,YAAAH,WACA,mBAAAC,UACAA,QAAA,OAAAD,YAEAD,KAAA,OAAAC;CARA,CASC,sBAAAK,cAAAC,MAAA;IACD;QCTA,IAAAC,mBAAA;QAGA,SAAAC,oBAAAC;YAGA,IAAAF,iBAAAE,WACA,OAAAF,iBAAAE,UAAAR;YAGA,IAAAC,SAAAK,iBAAAE,YAAA;gBACAC,GAAAD;gBACAE,IAAA;gBACAV,SAAA;;YAIAW,QAAAH,UAAAI,KAAAX,OAAAD,SAAAC,eAAAD,SAAAO;YAGAN,OAAAS,KAAA;YAGA,OAAAT,OAAAD;;QAKAO,oBAAAM,IAAAF;QAGAJ,oBAAAO,IAAAR;QAGAC,oBAAAQ,IAAA,SAAAf,SAAAgB,MAAAC;YACAV,oBAAAW,EAAAlB,SAAAgB,SACAG,OAAAC,eAAApB,SAAAgB,MAAA;gBAA0CK,aAAA;gBAAAC,KAAAL;;;QAK1CV,oBAAAgB,IAAA,SAAAvB;YACA,sBAAAwB,iBAAAC,eACAN,OAAAC,eAAApB,SAAAwB,OAAAC,aAAA;gBAAwDC,OAAA;;YAExDP,OAAAC,eAAApB,SAAA;gBAAiD0B,QAAA;;;QAQjDnB,oBAAAoB,IAAA,SAAAD,OAAAE;YACA,IAAAA,SAAAF,QAAAnB,oBAAAmB;YACA,QAAAE,MAAA,OAAAF;YACA,QAAAE,QAAA,mBAAAF,wBAAAG,YAAA,OAAAH;YACA,IAAAI,KAAAX,OAAAY,OAAA;YACAxB,oBAAAgB,EAAAO;YACAX,OAAAC,eAAAU,IAAA;gBAAyCT,aAAA;gBAAAK;;YACzC,QAAAE,QAAA,mBAAAF,OAAA,SAAAM,OAAAN,OAAAnB,oBAAAQ,EAAAe,IAAAE,KAAA,SAAAA;gBAAgH,OAAAN,MAAAM;cAAqBC,KAAA,MAAAD;YACrI,OAAAF;;QAIAvB,oBAAA2B,IAAA,SAAAjC;YACA,IAAAgB,SAAAhB,iBAAA4B,aACA;gBAA2B,OAAA5B,OAAA;gBAC3B;gBAAiC,OAAAA;;YACjCM,oBAAAQ,EAAAE,QAAA,KAAAA;YACA,OAAAA;;QAIAV,oBAAAW,IAAA,SAAAiB,QAAAC;YAAsD,OAAAjB,OAAAkB,UAAAC,eAAA1B,KAAAuB,QAAAC;;QAGtD7B,oBAAAgC,IAAA;QAIA,OAAAhC,wCAAAiC,IAAA;;;;;;;;;QClFe,SAASC;YAetB,QAdAA,WAAWtB,OAAOuB,UAAU,SAAUC;gBACpC,KAAK,IAAIlC,IAAI,GAAGA,IAAImC,UAAUC,QAAQpC,KAAK;oBACzC,IAAIqC,SAASF,UAAUnC;oBAEvB,KAAK,IAAIuB,OAAOc,QACV3B,OAAOkB,UAAUC,eAAe1B,KAAKkC,QAAQd,SAC/CW,OAAOX,OAAOc,OAAOd;;gBAK3B,OAAOW;eAGOI,MAAM1C,MAAMuC;;QCbvB,SAASI,gBAAUC;YACtB;gBACI,KAAKA,MACD,QAAO;gBAGX,IAAuB,sBAAZC,WAA2BD,gBAAgBC,SAClD,QAAO;gBAGX,IAAsB,sBAAXC,UAA0BA,OAAOC,UAAUH,gBAAgBE,OAAOC,QACzE,QAAO;gBAGX,IAAsB,sBAAXD,UAA0BA,OAAOE,eAAeJ,gBAAgBE,OAAOE,aAC9E,QAAO;gBAGX,IAAIC,YAAY,GAAIA;gBAEpB,IAAIA,WAAU;oBACV,IAAItC,OAAOsC,UAAS1C,KAAKqC;oBAEzB,IAAa,sBAATjC,QAAuC,sBAATA,QAAuC,yBAATA,MAC5D,QAAO;;gBAIf,IAAyB,qBAAdiC,KAAKM,MACZ,QAAO;cAEb,OAAOC;gBACL,QAAO;;YAGX,QAAO;;QCjCX,ICCIC,cDDEC,mBAAmB,IACnBC,mCAAmC,ICDrCC,cAAc;QAGlB,SAASC;YACL,KAAKD,eAAeH,cAAc;gBAC9B,IAAMK,UAAUL;gBAChBA,eAAe;gBACfK,QAAQC;;;QAIT,SAASC;YACZJ,eAAe;;QAGZ,SAASK;YACZL,eAAe;YACfC;;QCfG,IAAMK,uBAAb;YAeI,SAAAA,aAAYC;gBAAuF,IAAAC,QAAA/D;gBAAAA,KAbnGgE,gBAamG;gBAAAhE,KAZnGiE,gBAYmG;gBAAAjE,KAXnGkE,oBAWmG;gBAAAlE,KAVnGqB,aAUmG;gBAAArB,KATnGmE,aASmG;gBAAAnE,KARnGoE,gBAQmG;gBAAApE,KAHnGqE,mBAGmG;gBAAArE,KAFnGsE,aAEmG;gBAE/FtE,KAAKgE,YAAW;gBAChBhE,KAAKiE,YAAW;gBAChBjE,KAAKkE,gBAAe;gBAEpBlE,KAAKoE,WAAW;gBAEhB,IAAIN,SAAS;oBAET,IAAIS,SACAJ,QACAH,YAAW,GACXC,YAAW,GACXO,WAAU;oBAEdb;oBAEA;wBACIG,QAAQ,SAAAW;4BACJ,IAAID,SACAT,MAAKL,QAAQe,WACV;gCACHT,YAAW;gCACXO,UAASE;;2BAGd,SAAAtB;4BACC,IAAIqB,SACAT,MAAKW,OAAOvB,WACT;gCACHc,YAAW;gCACXE,SAAQhB;;;sBAIlB,OAAOA;wBACLS;wBACA5D,KAAK0E,OAAOvB;wBACZ;;oBAGJS;oBAEAY,WAAU;oBAENR,WAEAhE,KAAK0D,QAAQa,WACNN,YACPjE,KAAK0E,OAAOP;;;YAjE5B,IAAAQ,SAAAd,aAAA7B;YAAA2C,OA8EIjB,UAAA,SAAQa;gBACJ,IAAIvE,KAAKgE,YAAYhE,KAAKiE,UACtB,OAAOjE;gBAGX,IAAI2C,gBAAU4B,SACV,MAAM,IAAIK,MAAM;gBAGpB5E,KAAKgE,YAAW;gBAChBhE,KAAKqB,QAAQkD;gBACbvE,KAAK6E;gBAEL,OAAO7E;;YA3Ff2E,OA8FID,SAAA,SAAOP;gBAAiC,IAAAW,SAAA9E;gBACpC,IAAIA,KAAKgE,YAAYhE,KAAKiE,UACtB,OAAOjE;gBAGX,IAAI2C,gBAAUwB,QACV,MAAM,IAAIS,MAAM;gBAGpB,KAAKT,OAAO;oBACR,IAAIhB,OAAOgB,SAAmC,qBAAnBA,MAAMlB,WAA0BkB,MAAMlB,aAAanC,OAAOkB,UAAUiB,SAAS1C,KAAK4D;oBAC7GA,QAAQ,IAAIS,MAAJ,kDAA2DzB;;gBAGvEnD,KAAKiE,YAAW;gBAChBjE,KAAKmE,QAAQA;gBAERnE,KAAKkE,gBACNa,WAAW;oBACFD,OAAKZ,gBFhHnB,SAA2Cf,KAAaM;wBAE3D,KAAuC,MAAnCJ,iBAAiB2B,QAAQ7B,MAA7B;4BAIAE,iBAAiB4B,KAAK9B;4BAEtB4B,WAAW;gCAMP,MAAM5B;+BACP;4BAEH,KAAK,IAAI+B,IAAI,GAAGA,IAAI5B,iCAAiCd,QAAQ0C,KAEzD5B,iCAAiC4B,GAAG/B,KAAKM;;qBE8F7B0B,CAA+BhB,OAAOW;mBAE3C;gBAGP9E,KAAK6E;gBAEL,OAAO7E;;YAzHf2E,OA4HIS,cAAA,SAAYjB;gBACRnE,KAAKkE,gBAAe;gBACpBlE,KAAK0E,OAAOP;gBACZ,OAAOnE;;YA/Hf2E,OAkIIE,WAAA;gBAAW,IAAAQ,SAAArF,MAEDqE,cAA8CrE,KAA9CqE,aAAaL,WAAiChE,KAAjCgE,UAAUC,WAAuBjE,KAAvBiE,UAAUG,WAAapE,KAAboE;gBAEvC,KAAIC,gBAICL,YAAaC,WAAlB;oBAIAjE,KAAKqE,eAAc;oBACnBV;oBAEA,KAfO,IAAA2B,QAAA,SAeElF;wBAfF,IAAAmF,cAiBmCnB,SAAShE,IAAzCoF,YAjBHD,YAiBGC,WAAWC,UAjBdF,YAiBcE,SAAShC,UAjBvB8B,YAiBuB9B,SAEtBc,cAAM;wBAEV,IAAIP,UAEA;4BACIO,SAASiB,YAAYA,UAAUH,OAAKhE,SAASgE,OAAKhE;0BACpD,OAAO8B;4BACLM,QAAQiB,OAAOvB;4BACf;+BAGD,IAAIc,UAAU;4BAEjB,KAAKwB,SAAS;gCACVhC,QAAQiB,OAAOW,OAAKlB;gCACpB;;4BAGJ;gCACII,SAASkB,QAAQJ,OAAKlB;8BACxB,OAAOhB;gCACLM,QAAQiB,OAAOvB;gCACf;;;wBAIR,IAAIoB,kBAAkBV,iBAAiBU,OAAOP,YAAYO,OAAON,WAAW;4BAEpEM,OAAOP,WACPP,QAAQC,QAAQa,OAAOlD,SAEvBoC,QAAQiB,OAAOH,OAAOJ;4BAG1BI,OAAOL,gBAAe;+BAEfvB,gBAAU4B,UAEbA,kBAAkBV,iBAAiBU,OAAOP,YAAYO,OAAON,YACzDM,OAAOP,WACPP,QAAQC,QAAQa,OAAOlD,SAEvBoC,QAAQiB,OAAOH,OAAOJ,SAK1BI,OAAOrB,KAAK,SAAAuB;4BACRhB,QAAQC,QAAQe;2BACjB,SAAAtB;4BACCM,QAAQiB,OAAOvB;6BAMvBM,QAAQC,QAAQa;uBA5DfnE,IAAI,GAAGA,IAAIgE,SAAS5B,QAAQpC,KAAKkF,MAAjClF;oBAgETgE,SAAS5B,SAAS;oBAClBxC,KAAKqE,eAAc;oBACnBT;;;YAnNRe,OAsNIzB,OAAA,SAA2BsC,WAA0DC;gBAEjF,IAAID,aAAkC,qBAAdA,cAA6BA,UAAUjF,MAC3D,MAAM,IAAIqE,MAAM;gBAGpB,IAAIa,WAA8B,qBAAZA,YAA2BA,QAAQlF,MACrD,MAAM,IAAIqE,MAAM;gBAGpB,IAAInB,UAAgC,IAAII;gBAExC7D,KAAKoE,SAASa,KAAK;oBACfxB;oBACA+B;oBACAC;;gBAGJzF,KAAKkE,gBAAe;gBAEpBlE,KAAK6E;gBAEL,OAAOpB;;YA5OfkB,OA+OIe,QAAA,SAA4BD;gBACxB,OAAOzF,KAAKkD,UAAKyC,GAAWF;;YAhPpCd,OAmPIiB,UAAA,SAAQC;gBAEJ,IAAIA,aAAkC,qBAAdA,cAA6BA,UAAUtF,MAC3D,MAAM,IAAIqE,MAAM;gBAGpB,OAAO5E,KAAKkD,KAAK,SAACqB;oBACd,OAAOV,aAAaiC,IAAID,WACnB3C,KAAK;wBACF,OAAOqB;;mBAEhB,SAACpB;oBACA,OAAOU,aAAaiC,IAAID,WACnB3C,KAAK;wBACF,MAAMC;;;;YAjQ1BwB,OAsQIoB,UAAA,SAAQC,MAAe7C;gBAAgC,IAAA8C,SAAAjG;gBAEnD,IAAIA,KAAKgE,YAAYhE,KAAKiE,UACtB,OAAOjE;gBAGX,IAAI+F,UAAUhB,WAAW;oBAEjBkB,OAAKjC,YAAYiC,OAAKhC,YAI1BgC,OAAKvB,OAAOvB,OAAO,IAAIyB,MAAJ,6BAAsCoB,OAAtC;mBAEpBA;gBAEH,OAAOhG,KAAKkD,KAAK,SAAAqB;oBACb2B,aAAaH;oBACb,OAAOxB;;;YAxRnBI,OA6RIwB,YAAA;gBAEI,IAAuB,sBAAZtD,SACP,MAAM,IAAIuD,UAAJ;gBAGV,OAAOvD,QAAQa,QAAQ1D;;YAnS/B6D,aAsSWH,UAAP,SAA0BrC;gBAEtB,OAAIA,iBAAiBwC,eACVxC,QAGPsB,gBAAUtB,SAEH,IAAIwC,aAAa,SAACH,SAASgB;oBAAV,OAAqBrD,MAAM6B,KAAKQ,SAASgB;qBAG9D,IAAIb,eAAeH,QAAQrC;;YAjT1CwC,aAoTWa,SAAP,SAAcP;gBACV,OAAO,IAAIN,eAAea,OAAOP;;YArTzCN,aAwTWuB,cAAP,SAAmBjB;gBACf,OAAO,IAAIN,eAAeuB,YAAYjB;;YAzT9CN,aA4TWwC,MAAP,SAA+LC;gBAE3L,IAAI7C,UAAU,IAAII,gBACd0C,QAAQD,SAAS9D,QACjBgE,UAAU;gBAEd,KAAKD,OAAO;oBACR9C,QAAQC,QAAQ8C;oBAChB,OAAO/C;;gBAGX,KAXqQ,IAAAgD,SAAA,SAW5PrG;oBACL,IAAIsG,OAAOJ,SAASlG;oBAEpB,IAAIsG,gBAAgB7C;wBAChB,IAAI6C,KAAK1C,UAAU;4BACfwC,QAAQpG,KAAKsG,KAAKrF;4BAClBkF,SAAS;4BACT;;2BAED,KAAK5D,gBAAU+D,OAAO;wBACzBF,QAAQpG,KAAKsG;wBACbH,SAAS;wBACT;;oBAGJ1C,aAAaH,QAAQgD,MAAMxD,KAAK,SAAAqB;wBAC5BiC,QAAQpG,KAAKmE;wBAEC,MADdgC,SAAS,MAEL9C,QAAQC,QAAQ8C;uBAErB,SAAArD;wBACCM,QAAQiB,OAAOvB;;mBAtBd/C,IAAI,GAAGA,IAAIkG,SAAS9D,QAAQpC,KAAKqG,OAAjCrG;gBA0BK,MAAVmG,SACA9C,QAAQC,QAAQ8C;gBAGpB,OAAO/C;;YArWfI,aAwWW8C,OAAP,SAAkCL;gBAC9B,IAAI/B,SAAS;gBAEb,OAAOV,aAAawC,IAAIvF,OAAO8F,KAAKN,UAAUO,IAAI,SAAAlF;oBAC9C,OAAOkC,aAAaH,QAAQ4C,SAAS3E,MAAMuB,KAAK,SAAA7B;wBAC5CkD,OAAO5C,OAAON;;oBAElB6B,KAAK;oBACL,OAAOqB;;;YAhXnBV,aAoXWgD,MAAP,SAAiBC,OAAkBC;gBAE/B,OAAOlD,aAAawC,IAAIS,MAAMD,IAAIE;;YAtX1ClD,aAyXWmD,+BAAP,SAAoClD;gBAChC,OFlWD,SAAsCA;oBACzCR,iCAAiC2B,KAAKnB;oBAEtC,OAAO;wBACHmD,QADG;4BAEC3D,iCAAiC4D,OAAO5D,iCAAiC0B,QAAQlB,UAAU;;;iBE6VxFkD,CAA6BlD;;YA1X5CD,aA6XWiC,MAAP,SAA8DiB,QAAiDI,SAAcC;gBAEzH,IAAIL,UAA4B,qBAAXA,WAA0BA,OAAOxG,MAClD,MAAM,IAAIqE,MAAM;gBAGpB,IAAIL;gBAEJZ;gBAEA;oBAEIY,SAASwC,OAAOrE,MAAMyE,SAASC,QAAQ;kBACzC,OAAOjE;oBACLS;oBACA,OAAOC,aAAaa,OAAOvB;;gBAG/BS;gBAEA,OAAOC,aAAaH,QAAQa;;YAjZpCV,aAoZWwD,QAAP,SAAaA;gBACT,OAAO,IAAIxD,aAAa,SAAAH;oBACpBqB,WAAWrB,SAAS2D;;;YAtZhCxD,aA0ZWlB,YAAP,SAAiBtB;gBAEb,UAAIA,SAASA,iBAAiBwC,iBAIvBlB,gBAAUtB;;YAhazBwC,aAmaWyD,QAAP;gBACI,ODlZD,SAAqBC;oBACxB,IAAI9D,UAAUL,eAAeA,gBAAgB,ICiZtBS;oBDhZvBL;oBACA,OAAOC;iBC+YI+D;;YApaf,OAAA3D;SAAA;QCJO,SAAS4D,QAAQ7E;YACpB,OAAgD,sBAAzC9B,OAAOkB,UAAUiB,SAAS1C,KAAKqC;;QCDnC,IAAM8E,WAAW;YACpBC,MAAQ;YACRC,MAAQ;YACRC,OAAQ;WAGCC,WAAW,KAEXC,cAAc;YACvBC,QAAS;YACTC,OAAS;WCLTC,sBAAsB;QAMnB,SAASC,gBAAgBC;iBAA+C,MAA/CA,cAA6BtF;YACzD,OAAOsF,IAAIC,SAASC,aAAaZ,SAASG;;QAGvC,SAASU,UAAUH;YAEtB,IAAKA,KAIL;gBACI,IAAIA,IAAII,UAAUJ,IAAII,WAAWJ,KAC7B,OAAOA,IAAII;cAEjB,OAAOrF;;QAKN,SAASsF,UAAUL;YAEtB,IAAKA,QAKDG,UAAUH,MAId;gBACI,OAAOA,IAAIM;cACb,OAAOvF;;QAKN,SAASwF,kBAAkBP;YAC9B;gBAESA,OAAOA,IAAIC,YAAYD,IAAIC,SAASO;gBACzC,QAAO;cACT,OAAOzF;YAIT,QAAO;;QAGJ,SAAS0F,gBAAgBT;YAI5B,IAAIC,YAFJD,MAAMA,OAAOtF,QAEMuF;YAEnB,KAAKA,UACD,MAAM,IAAIzD,MAAJ;YAGV,IAAI0D,WAAWD,SAASC;YAExB,KAAKA,UACD,MAAM,IAAI1D,MAAJ;YAGV,IAAI0D,aAAaZ,SAASE,MACtB,OAAWF,SAASE,OAApB;YAGJ,IAAIU,aAAaZ,SAASG,OAAO;gBAE7B,IAAIW,SAASD,UAAUH;gBACvB,OAAII,UAAUG,kBAAkBH,UAErBK,gBAAgBL,UAGhBd,SAASG,QAApB;;YAGJ,IAAIiB,OAAOT,SAASS;YAEpB,KAAKA,MACD,MAAM,IAAIlE,MAAJ;YAGV,OAAW0D,WAAX,OAA0BQ;;QAGvB,SAASC,gBAAUX;YAItB,IAAIY,SAASH,gBAFbT,MAAMA,OAAOtF;YAIb,OAAIkG,UAAUZ,IAAIa,cAAwD,MAA1Cb,IAAIa,WAAWjE,QAAQ0C,SAASC,QACrDS,IAAIa,aAGRD;;QAoBJ,SAASE,qBAAqBd;YAEjC;gBACI,IAAIA,QAAQtF,QACR,QAAO;cAGb,OAAOK;YAIT;gBACI,IAAIgG,OAAOrI,OAAOsI,yBAAyBhB,KAAK;gBAEhD,IAAIe,SAA4B,MAApBA,KAAKnI,YACb,QAAO;cAGb,OAAOmC;YAIT;gBAEI,IAAIgF,gBAAgBC,QAAQO,kBAAkBP,MAC1C,QAAO;cAEb,OAAOjF;YAIT;gBAEI,IAAI0F,gBAAgBT,SAASS,gBAAgB/F,SACzC,QAAO;cAGb,OAAOK;YAIT,QAAO;;QAGJ,SAASkG,aAAajB;YAEzB,KAAKc,qBAAqBd,MACtB,QAAO;YAGX;gBAEI,IAAIA,QAAQtF,QACR,QAAO;gBAIX,IAAIqF,gBAAgBC,QAAQO,kBAAkBP,MAC1C,QAAO;gBAIX,IAAIW,gBAAUjG,YAAYiG,gBAAUX,MAChC,QAAO;cAGb,OAAOjF;YAIT,QAAO;;QAIJ,SAASmG,iBAAiBlB;YAC7B,KAAKiB,aAAajB,MACd,MAAM,IAAIxD,MAAJ;YAIV,OAAOwD;;QAqBJ,SAASmB,iBAAiBf,QAAgCgB;YAE7D,KAAKhB,WAAWgB,OACZ,QAAO;YAGX,IAAIC,cAAclB,UAAUiB;YAE5B,OAAIC,cACOA,gBAAgBjB,UAGgB,MA9BxC,SAAoBJ;gBAEvB,IAAI7D,SAAS;gBAEb;oBAEI,MAAO6D,IAAII,WAAWJ,OAAK;wBACvB7D,OAAOU,KAAKmD,IAAII;wBAChBJ,MAAMA,IAAII;;kBAGhB,OAAOrF;gBAIT,OAAOoB;aAeHmF,CAAWF,OAAOxE,QAAQwD;;QAO3B,SAASmB,UAAUvB;YAEtB,IAEIwB,QAQAC,KAVAtF,SAAS;YAIb;gBACIqF,SAASxB,IAAIwB;cACf,OAAOzG;gBACLyG,SAASxB;;YAKb;gBACIyB,MAAMD,OAAOpH;cACf,OAAOW;YAIT,IAAY,MAAR0G,KACA,OAAOtF;YAGX,IAAIsF,KAAK;gBACL,KAAK,IAAIzJ,IAAI,GAAGA,IAAIyJ,KAAKzJ,KAAK;oBAE1B,IAAI0J,aAAK;oBAET;wBACIA,QAAQF,OAAOxJ;sBACjB,OAAO+C;wBACL;;oBAGJoB,OAAOU,KAAK6E;;gBAGhB,OAAOvF;;YAGX,KAAK,IAAInE,KAAI,GAAGA,KAAI,KAAKA,MAAK;gBAC1B,IAAI0J,cAAK;gBAET;oBACIA,SAAQF,OAAOxJ;kBACjB,OAAO+C;oBACL,OAAOoB;;gBAGX,KAAKuF,QACD,OAAOvF;gBAGXA,OAAOU,KAAK6E;;YAGhB,OAAOvF;;QAIJ,SAASwF,kBAAkB3B;YAA4D,KAE1F,IAAI7D,SAAS,IAF6EyF,MAAA,GAAAC,cAIxEN,UAAUvB,MAJ8D4B,MAAAC,YAAAzH,QAAAwH,OAIxD;gBAA7B,IAAIF,QAAKG,YAAAD;gBACVzF,OAAOU,KAAK6E;gBADkB,SAAAI,MAAA,GAAAC,sBAGPJ,kBAAkBD,QAHXI,MAAAC,oBAAA3H,QAAA0H,OAGmB;oBAA5C,IAAIE,aAAUD,oBAAAD;oBACf3F,OAAOU,KAAKmF;;;YAIpB,OAAO7F;;QAGJ,SAAS8F,OAAOjC;YAEnB,IAAKA,KAAL;gBAIA;oBACI,IAAIA,IAAIkC,KACJ,OAAOlC,IAAIkC;kBAEjB,OAAOnH;gBAIT,IAAIoF,UAAUH,SAASA,KACnB,OAAOA;gBAGX;oBACI,IAAImB,iBAAiBzG,QAAQsF,QAAQtF,OAAOwH,KACxC,OAAOxH,OAAOwH;kBAEpB,OAAOnH;gBAIT;oBACI,IAAIoG,iBAAiBnB,KAAKtF,WAAWA,OAAOwH,KACxC,OAAOxH,OAAOwH;kBAEpB,OAAOnH;gBA9BgE,SAAAoH,MAAA,GAAAC,sBAkCvDT,kBAAkB3B,MAlCqCmC,MAAAC,oBAAAhI,QAAA+H,OAkC/B;oBAArC,IAAIT,QAAKU,oBAAAD;oBACV;wBACI,IAAIT,MAAMQ,KACN,OAAOR,MAAMQ;sBAEnB,OAAOnH;oBAIT,IAAIoF,UAAUuB,WAAWA,OACrB,OAAOA;;;;QAmBZ,SAASW,qBAAqBrC;YACjC,IAAIkC,MAAMD,OAAOjC;YAEjB,KAAKkC,KACD,MAAM,IAAI1F,MAAJ;YAGV,UAAA8F,OAAYX,kBAAkBO,MAA9B,EAAoCA;;QAoDxC,IAAIK,gBAAgB,IAChBC,eAAe;QAEZ,SAASC,eAAezC,KAA6B0C;iBAAsC,MAAtCA,2BAAsB;YAE9E;gBACI,IAAI1C,QAAQtF,QACR,QAAO;cAEb,OAAOK;gBACL,QAAO;;YAGX;gBACI,KAAKiF,KACD,QAAO;cAGb,OAAOjF;gBACL,QAAO;;YAGX;gBACI,IAAIiF,IAAI2C,QACJ,QAAO;cAGb,OAAO5H;gBAIL,QAAIA,OAAOA,IAAI6H,YAAY9C;;YAQ/B,IAAI4C,aAAazB,aAAajB,MAC1B;gBAEI,IAAIA,IAAI6C,YACJ,QAAO;cAEb,OAAO9H;YAOb;gBACI,KAAKiF,IAAII,WAAWJ,IAAIkC,KACpB,QAAO;cAEb,OAAOnH;YAeT,IAAI+H,cAtFR,SAAwBC,YAAuBvI;gBAC3C,KAAK,IAAIxC,IAAI,GAAGA,IAAI+K,WAAW3I,QAAQpC,KAEnC;oBACI,IAAI+K,WAAW/K,OAAOwC,MAClB,OAAOxC;kBAEb,OAAO+C;gBAKb,QAAQ;aA0EUiI,CAAYT,eAAevC;YAE7C,KAAqB,MAAjB8C,aAAoB;gBACpB,IAAIpB,QAAQc,aAAaM;gBAEzB,IAAIpB,SA9GL,SAA6BA;oBAEhC,KAAKA,MAAMuB,eACP,QAAO;oBAGX,KAAKvB,MAAMwB,YACP,QAAO;oBAGX,IAAIC,MAAMzB,MAAM0B;oBAEhB,UAAID,QAAOA,IAAIE,mBAAoBF,IAAIE,gBAAgBC,SAAS5B;iBAkG/C6B,CAAoB7B,QAC7B,QAAO;;YAIf,QAAO;;QAkCJ,SAAS8B,mBAAaxD;YAEzB,QADAA,MAAMA,OAAOtF,QACF+I,UAAUC,iBAAiB1D,IAAIyD,UAAUE;;QAIjD,SAASC,eAAe5D,KAA6BzH;YAAwC,KAEhG,IAAIsL,YAAYtC,UAAUvB,MAFsE8D,MAAA,GAAAA,MAIzED,UAJyEzJ,QAAA0J,OAI9D;gBAA7B,IAAI9B,aAAc6B,UAAJC;gBACf;oBAEI,IAAI7C,aAAae,eAAeA,WAAWzJ,SAASA,SAA2C,MAAnCsL,UAAUjH,QAAQoF,aAC1E,OAAOA;kBAEb,OAAOjH;;YAKb;gBAEI,KAA6C,MAAzC8I,UAAUjH,QAAQoD,IAAIwB,OAAOjJ,QAE7B,OAAOyH,IAAIwB,OAAOjJ;cAExB,OAAOwC;YAIT;gBACI,KAAsC,MAAlC8I,UAAUjH,QAAQoD,IAAIzH,QACtB,OAAOyH,IAAIzH;cAEjB,OAAOwC;;QAsDN,SAASgJ,SAAS3D,QAAgCgB;YAErD,OAAOhB,WAAWC,UAAUe;;QAGzB,SAAS4C,YAAYhE;YAKxB,OAFaK,UAFbL,MAAMA,OAAOtF,WAQAyF,UAAUH,aAEvB;;QA+DJ,SAASiE,SAASC,aAAaC;YAAuB,SAAAC,OAAA,GAAAA,OAEhCF,YAFgC9J,QAAAgK,QAEnB,KAA1B,IAAIC,QAASH,YAAJE,OAAiBE,OAAA,GAAAA,OACTH,YADS/J,QAAAkK,QAEvB,IAAID,UADUF,YAAJG,OAEN,QAAO;YAKnB,QAAO;;QAGJ,SAASC,mBAAmBvE;iBAA+C,MAA/CA,cAA8BtF;YAI7D,KAHA,IAAI8J,WAAW,GACXpE,SAASJ,KAENI,WACHA,SAASD,UAAUC,aAEfoE,YAAY;YAIpB,OAAOA;;QAqBJ,SAASC,gBAAgBC,MAA8BC;YAE1D,IAAIC,OAAO3C,OAAOyC,SAASA,MACvBG,OAAO5C,OAAO0C,SAASA;YAE3B;gBACI,IAAIC,QAAQC,MACR,OAAID,SAASC;cAMnB,OAAO9J;YAIT,IAAI+J,aAAazC,qBAAqBqC,OAClCK,aAAa1C,qBAAqBsC;YAEtC,IAAIV,SAASa,YAAYC,aACrB,QAAO;YAGX,IAAIC,UAAU3E,UAAUuE,OACpBK,UAAU5E,UAAUwE;YAExB,SAAIG,WAAWf,SAAS5B,qBAAqB2C,UAAUD,gBAInDE,WAAWhB,SAAS5B,qBAAqB4C,UAAUH;YAC5C;;QAMR,SAASI,YAAYC,SAAyBC;YAEjD,IAAuB,mBAAZD,SAAsB;gBAE7B,IAAsB,mBAAXC,QACP,OAAOD,YAAYzF,YAAY0F,WAAWD;gBAG9C,IAAI9F,QAAQ+F,SACR,QAAO;gBAGX,IAAIC,MAAMC,QAAQF,SACd,QAAO;;YAIf,OAAI/F,QAAQ8F,WAEJ9F,QAAQ+F,UACDD,QAAQtK,eAAeuK,OAAOvK,cAGrCwK,MAAMC,QAAQF,WAKXG,QAAQH,OAAOI,MAAML,cAG5BE,MAAMC,QAAQH,aAEVE,MAAMC,QAAQF,UACPK,KAAKC,UAAUP,aAAaM,KAAKC,UAAUN,WAGlD/F,QAAQ+F,WAILD,QAAQQ,KAAK,SAAAC;gBAAU,OAAIV,YAAYU,YAAYR;;;QAgB3D,SAASS,iBAAiBC;YAI7B,OAAIA,IAAIN,MAAM,8BACDM,IAKGC,MAAM,KAAKC,MAAM,GAAG,GAAGC,KAAK,OAHjCtF;;QAQR,SAASuF,cAAclG,KAA6BmG,UAAqBlH,OAAuBmH;iBAAuD,MAA9EnH,kBAAiB;iBAA6D,MAAvDmH,sBAAmBC;YAEtH,IAAI1I;aAEQ,SAAR2I;gBAEA,IAAI7D,eAAezC,MAAM;oBAEjBrC,WACAG,aAAaH;oBAGjB,OAAOwI;;gBAGX,IAAIC,WAAW,GACXtI,aAAaH,eACV;oBACHyI,WAAWnH;oBACXtB,UAAUhB,WAAW2J,OAAOrH;;aAIpCqH;YAEA,OAAO;gBACHzH,QADG;oBAEKlB,WACAG,aAAaH;;;;QAOtB,SAAS4I,SAASC;YAErB;gBACI,IAAIA,QAAQ9L,QACR,QAAO;cAEb,OAAOK;gBACL,IAAIA,OAAOA,IAAI6H,YAAY9C,qBACvB,QAAO;;YAIf;gBACI,IAA4C,sBAAxCpH,OAAOkB,UAAUiB,SAAS1C,KAAKqO,MAC/B,QAAO;cAEb,OAAOzL;gBACL,IAAIA,OAAOA,IAAI6H,YAAY9C,qBACvB,QAAO;;YAIf;gBACI,IAAIpF,OAAOC,UAAU6L,eAAe9L,OAAOC,QACvC,QAAO;cAEb,OAAOI;gBACL,IAAIA,OAAOA,IAAI6H,YAAY9C,qBACvB,QAAO;;YAIf;gBACI,IAAI0G,OAAOA,IAAI7O,SAAS6O,KACpB,QAAO;cAEb,OAAOzL;gBACL,IAAIA,OAAOA,IAAI6H,YAAY9C,qBACvB,QAAO;;YAIf;gBACI,IAAI0G,OAAOA,IAAIpG,WAAWoG,KACtB,QAAO;cAEb,OAAOzL;gBACL,IAAIA,OAAOA,IAAI6H,YAAY9C,qBACvB,QAAO;;YAIf;gBACI,IAAI0G,OAAOA,IAAItE,QAAQsE,KACnB,QAAO;cAEb,OAAOzL;gBACL,IAAIA,OAAOA,IAAI6H,YAAY9C,qBACvB,QAAO;;YAWf;gBACS0G,OAAOA,IAAIC;cAElB,OAAO1L;gBACL,QAAO;;YAGX,QAAO;;QAmBJ,SAAS2L,iBAAiBZ;YAC7B,MALyBlF,SAKPiF,iBAAiBC,MAJM,MAAlClF,OAAOhE,QAAQ0C,SAASC,QAK3B,OAAOuG;YANR,IAAsBlF;YAUrB,MAAM,IAAIpE,MAAJ;;QC9/BP,SAASwG,iBAAeD,YAAuBvI;YAClD,KAAK,IAAIxC,IAAI,GAAGA,IAAI+K,WAAW3I,QAAQpC,KAEnC;gBACI,IAAI+K,WAAW/K,OAAOwC,MAClB,OAAOxC;cAEb,OAAO+C;YAKb,QAAQ;;QCPZ,ICmDI4L,WCodAC,wBFvgBAjO,iBAAiBD,OAAOC,gBACxBkO,UAAUC,KAAKC,QAAQ,KAEdC,iCAAb;YAOI,SAAAA;gBAAcpP,KALdW,YAKc;gBAAAX,KAJdqP,eAIc;gBAAArP,KAHd4G,YAGc;gBAAA5G,KAFdsP,cAEc;gBACVL,WAAW;gBAGXjP,KAAKW,OAAL,gBAA0C,MAAhB4O,KAAKC,aAAmB,KAAlD,OAA0DP;gBAE1D,IGrBD;oBAEH,IAAuB,sBAAZQ,SACP,QAAO;oBAGX,SAA6B,MAAlB3O,OAAO4O,QACd,QAAO;oBAGX;wBAEI,IAAIC,cAAc,IAAIF,WAClBG,UAAU;wBAGd9O,OAAO4O,OAAOE;wBAEdD,YAAYE,IAAID,SAJA;wBAMhB,OANgB,oBAMZD,YAAY1O,IAAI2O;sBAMtB,OAAOzM;wBAEL,QAAO;;iBHPH2M,IACA;oBACI9P,KAAKqP,UAAU,IAAII;kBACrB,OAAOtM;gBAKbnD,KAAK4G,OAAQ;gBACb5G,KAAKsP,SAAS;;YAtBtB,IAAA3K,SAAAyK,uBAAApN;YAAA2C,OAyBIoL,wBAAA;gBAKI,KAHA,IAAIV,UAAUrP,KAAKqP,SACfzI,OAAO5G,KAAK4G,MAEPxG,IAAI,GAAGA,IAAIwG,KAAKpE,QAAQpC,KAAK;oBAClC,IAAIiB,QAAQuF,KAAKxG;oBAEjB,IAAIuO,SAAStN,UAAUwJ,eAAexJ,QAAQ;wBAE1C,IAAIgO,SACA;4BACIA,QAAQW,OAAO3O;0BACjB,OAAO8B;wBAKbyD,KAAKM,OAAO9G,GAAG;wBACfJ,KAAKsP,OAAOpI,OAAO9G,GAAG;wBAEtBA,KAAK;;;;YA9CrBuE,OAmDIsL,oBAAA,SAAkBtO;gBAEd,IAAIgN,SAAShN,MACT,QAAO;gBAGX;oBACSA,OAAOA,IAAI5B;oBACX4B,OAAOA,IAAI3B,KAAKW;kBACvB,OAAOwC;oBACL,QAAO;;gBAGX,QAAO;;YAhEfwB,OAmEIkL,MAAA,SAAIlO,KAASN;gBAET,KAAKM,KACD,MAAM,IAAIiD,MAAJ;gBAGV,IAAIyK,UAAUrP,KAAKqP;gBAEnB,IAAIA,SACA;oBACIA,QAAQQ,IAAIlO,KAAKN;kBACnB,OAAO8B;2BACEnD,KAAKqP;;gBAIpB,IAAKrP,KAAKiQ,kBAAkBtO,MAerB;oBAEH,IAAIhB,OAAOX,KAAKW,MACZuP,QAAQvO,IAAIhB;oBAEZuP,SAASA,MAAM,OAAOvO,MACtBuO,MAAM,KAAK7O,QAEXN,eAAeY,KAAKhB,MAAM;wBACtBU,OAAU,EAAEM,KAAKN;wBACjB8O,WAAU;;uBAzBY;oBAE9BnQ,KAAK+P;oBAEL,IAAInJ,OAAO5G,KAAK4G,MACZ0I,SAAStP,KAAKsP,QACdc,QAAQhF,iBAAYxE,MAAMjF;oBAE9B,KAAe,MAAXyO,OAAc;wBACdxJ,KAAK3B,KAAKtD;wBACV2N,OAAOrK,KAAK5D;2BAEZiO,OAAOc,SAAS/O;;;YA/FhCsD,OAkHI1D,MAAA,SAAIU;gBAEA,KAAKA,KACD,MAAM,IAAIiD,MAAJ;gBAGV,IAAIyK,UAAUrP,KAAKqP;gBAEnB,IAAIA,SACA;oBACI,IAAIA,QAAQgB,IAAI1O,MACZ,OAAO0N,QAAQpO,IAAIU;kBAEzB,OAAOwB;2BACEnD,KAAKqP;;gBAIpB,KAAKrP,KAAKiQ,kBAAkBtO,MAAM;oBAE9B3B,KAAK+P;oBAEL,IACIK,QAAQhF,iBADDpL,KAAK4G,MACcjF;oBAE9B,KAAe,MAAXyO,OACA;oBAGJ,OAAOpQ,KAAKsP,OAAOc;;gBAInB,IAAIF,QAAQvO,IAAI3B,KAAKW;gBAErB,IAAIuP,SAASA,MAAM,OAAOvO,KACtB,OAAOuO,MAAM;;YAtJ7BvL,OA2JIqL,SAAA,SAAOrO;gBAEH,KAAKA,KACD,MAAM,IAAIiD,MAAJ;gBAGV,IAAIyK,UAAUrP,KAAKqP;gBAEnB,IAAIA,SACA;oBACIA,QAAQW,OAAOrO;kBACjB,OAAOwB;2BACEnD,KAAKqP;;gBAIpB,IAAKrP,KAAKiQ,kBAAkBtO,MAYrB;oBAEH,IAAIuO,QAAQvO,IAAI3B,KAAKW;oBAEjBuP,SAASA,MAAM,OAAOvO,QACtBuO,MAAM,KAAKA,MAAM,UAAKvK;uBAjBI;oBAE9B3F,KAAK+P;oBAEL,IAAInJ,OAAO5G,KAAK4G,MACZwJ,QAAQhF,iBAAYxE,MAAMjF;oBAE9B,KAAe,MAAXyO,OAAc;wBACdxJ,KAAKM,OAAOkJ,OAAO;wBACnBpQ,KAAKsP,OAAOpI,OAAOkJ,OAAO;;;;YApL1CzL,OAiMI0L,MAAA,SAAI1O;gBAEA,KAAKA,KACD,MAAM,IAAIiD,MAAJ;gBAGV,IAAIyK,UAAUrP,KAAKqP;gBAEnB,IAAIA,SACA;oBACI,IAAIA,QAAQgB,IAAI1O,MACZ,QAAO;kBAEb,OAAOwB;2BACEnD,KAAKqP;;gBAIpB,IAAKrP,KAAKiQ,kBAAkBtO,MAOrB;oBAEH,IAAIuO,QAAQvO,IAAI3B,KAAKW;oBAErB,UAAIuP,SAASA,MAAM,OAAOvO;;gBAT1B3B,KAAK+P;gBAGL,QAAkB,MADN3E,iBAAYpL,KAAK4G,MAAMjF;;YAvN/CgD,OAsOI2L,WAAA,SAAS3O,KAASf;gBACd,IAAIZ,KAAKqQ,IAAI1O,MAET,OAAO3B,KAAKiB,IAAIU;gBAGpB,IAAIN,QAAQT;gBACZZ,KAAK6P,IAAIlO,KAAKN;gBACd,OAAOA;;YA9Of,OAAA+N;SAAA;QCFO,SAASmB,aAAaC;YACzB,IAAoB,qBAATC,MACP,OAAOA,KAAKD;YACT,IAAsB,sBAAXE,QACd,OAAOA,OAAOC,KAAKH,KAAK,QAAQvN,SAAS;YAG7C,MAAM,IAAI2B,MAAJ;;QAeH,SAASgM;YAEZ,IAAIC,QAAQ;YAUZ,OARe,aAAaC,QAAQ,MAAM;gBACtC,OAAOD,MAAME,OAAOxB,KAAKyB,MAAMzB,KAAKC,WAAWqB,MAAMrO;iBAOzD,MAJa+N,aACT,IAAIrB,OAAO+B,cAAc7C,MAAM,IAAI,IAAI0C,QAAQ,KAAK,MACtDA,QAAQ,iBAAiB,IAAII;;QAsCnC,SAASC,cAAc/J;YACnB;gBACI,OAAOyG,KAAKC,UAAUL,MAAMzL,UAAUoM,MAAM7N,KAAK6G,OAAO,SAACgK,QAAQC;oBAC7D,OAAmB,qBAARA,MACP,aAtBT,SAAqBzC;wBAExBG,YAAYA,aAAa,IAAIU;wBAE7B,IAAIb,eAAqD,mBAARA,OAAmC,qBAARA,KACxE,MAAM,IAAIhK,MAAJ;wBAGV,IAAI0M,MAAMvC,UAAU9N,IAAI2N;wBAExB,KAAK0C,KAAK;4BACNA,aAAiB1C,MAAd,MAAuBgC;4BAC1B7B,UAAUc,IAAIjB,KAAK0C;;wBAGvB,OAAOA;qBAOwBC,CAAYF,OAA/B,MAEGA;;cAEb,OAAOlO;gBACL,MAAM,IAAIyB,MAAJ;;;QAmFP,SAAS4M,cAAiBzK,QAAsC0K,OAAqCrK;iBAA4B,MAA5BA,gBAAoB;YAC5H,IAAIsK,QAAQ3K,OAAO4K,2BAA2B5K,OAAO4K,4BAA4B,IAC7EhQ,MAAMwP,cAAc/J;YAExB,OAAIsK,MAAMzP,eAAeN,OACd+P,MAAM/P,OAGJ+P,MAAM/P,OAAO8P,MAAK/O,WAAL,GAAS0E;;QAKhC,SAASwK;QAIT,SAASC,KAAK9K;YACjB,IAAI+K,UAAS;YAEb,OAAO;gBACH,KAAKA,QAAQ;oBACTA,UAAS;oBACT,OAAO/K,OAAOrE,MAAM1C,MAAMuC;;;;QAkE/B,SAASwP,eAAe5O,KAAa6O;iBAA6B,MAA7BA,kBAAiB;YAEzD,IAAIA,SAAS,GACT,OAAO;YAGX;gBACI,KAAK7O,KACD,4BAA2BrC,OAAOkB,UAAUiB,SAAS1C,KAAK4C,OAA1D;gBAGJ,IAAmB,mBAARA,KACP,OAAOA;gBAGX,IAAIA,eAAeyB,OAAO;oBACtB,IAAIN,QAAQnB,OAAOA,IAAImB,OACnB0G,UAAU7H,OAAOA,IAAI6H;oBAEzB,IAAI1G,SAAS0G,SACT,QAAgC,MAA5B1G,MAAMU,QAAQgG,WACP1G,QAEI0G,UAAX,OAAyB1G;oBAE1B,IAAIA,OACP,OAAOA;oBACJ,IAAI0G,SACP,OAAOA;;gBAIf,OAA4B,qBAAjB7H,IAAIF,WACJE,IAAIF,aAGRnC,OAAOkB,UAAUiB,SAAS1C,KAAK4C;cAExC,OAAO8O;gBACL,4CAA2CF,eAAeE,QAAQD,QAAQ;;;QAuB3E,SAASlE,UAAUlL;YACtB,OAAoB,mBAATA,OACAA,OAGPA,QAAiC,qBAAlBA,KAAKK,WACbL,KAAKK,aAGTnC,OAAOkB,UAAUiB,SAAS1C,KAAKqC;;QAsBnC,SAASsP,OAA8BtD,KAASnM;YACnD,KAAKA,QACD,OAAOmM;YAGX,IAAI9N,OAAOuB,QACP,OAAOvB,OAAOuB,OAAOuM,KAAKnM;YAG9B,KAAK,IAAId,OAAOc,QACRA,OAAOR,eAAeN,SACtBiN,IAAIjN,OAAOc,OAAOd;YAI1B,OAAOiN;;QAggBJ,SAASuD,UAAU9Q;YACtB,OAAOA;;QAoBJ,SAASoG,aAAQ7E;YACpB,OAAgD,sBAAzC9B,OAAOkB,UAAUiB,SAAS1C,KAAKqC;;QAiCnC,SAAS0N,cAAgC1B,KAASjN,KAAcf;YACnE,IAAIgO,IAAI3M,eAAeN,MACnB,OAAOiN,IAAIjN;YAGf,IAAM0P,MAAMzQ;YACZgO,IAAIjN,OAAO0P;YACX,OAAOA;;QASJ,SAASe,QAAQxD;YAEpB,IAAMyD,QAAQ,IACVC,WAAU;YAEd,OAAO;gBACHzC,KADG,SACYlP,MAAeiC;oBAC1B,KAAK0P,SAAS;wBACV1D,IAAIjO,QAAQiC;wBACZ5C,KAAKuS,SAAS;mCACH3D,IAAIjO;;;oBAGnB,OAAOiC;;gBAGX2P,UAXG,SAWMxL;oBACDuL,UACAvL,WAEAsL,MAAMpN,KAAK4M,KAAK9K;;gBAIxBV,KAnBG;oBAoBC,IAAMG,UAAU;oBAChB8L,WAAU;oBAEV,MAAOD,MAAM7P,UAAQ;wBACjB,IAAMgQ,OAAOH,MAAMI;wBACnBjM,QAAQvB,KAAKuN;;oBAGjB,OAAO3O,qBAAawC,IAAIG,SAAStD,KAAK0O;;;;QA0B3C,SAASc,aAAgB/R,MAAegS;YAC3C,IAAIA,eACA,MAAM,IAAI/N,MAAJ,cAAuBjE,OAAvB;YAGV,OAAOgS;;QCt+BJ,SAASC;YACZ,OAAOjF,QAAQkF,SAASC,SAAiC,eAAxBD,SAASE;;QAGvC,SAASC,UAAUxC;YACtB,OAAOA,IAAIM,QAAQ,OAAO,OAAOA,QAAQ,MAAM,OAAOA,QAAQ,MAAM,OAAOA,QAAQ,OAAO;;QAevF,SAASmC;YACZ,OAAOzB,cAAcyB,sBAAsB;gBACvC,OAAO,IAAIpP,qBAAa,SAAAH;oBAEpB,IAAIkP,mBACA,OAAOlP;oBAGX,IAAIwP,WAAWC,YAAY;wBACvB,IAAIP,mBAAmB;4BACnBQ,cAAcF;4BACd,OAAOxP;;uBAEZ;;;;QAeR,SAAS2P,WAAWC;YACvB,OAAO9B,cAAc6B,YAAY;gBAC7B,IAAIE,SAAS;gBAEb,KAAKD,aACD,OAAOC;gBAGX,KAAkC,MAA9BD,YAAYtO,QAAQ,MACpB,OAAOuO;gBARiC,SAAAC,MAAA,GAAAC,sBAW3BH,YAAYnF,MAAM,MAXSqF,MAAAC,oBAAAjR,QAAAgR,OAWH;oBAApC,IAAIE,OAAID,oBAAAD;qBACTE,OAAOA,KAAKvF,MAAM,MAET,MAAMuF,KAAK,OAChBH,OAAOI,mBAAmBD,KAAK,OAAOC,mBAAmBD,KAAK;;gBAItE,OAAOH;eACR,EAAED;;QAkCF,SAASM,YAAYC,eAAwBC;iBAA+C,MAA/CA,kBAAkC;YAElF,OAAKA,SAAUhT,OAAO8F,KAAKkN,OAAOtR,SAX/B,SAAqBoM;qBAA6C,MAA7CA,cAAgC;gBAExD,OAAO9N,OAAO8F,KAAKgI,KAAKmF,OAAO,SAAApS;oBAC3B,OAA2B,mBAAbiN,IAAIjN;mBACnBkF,IAAI,SAAAlF;oBACH,OAAWqR,UAAUrR,OAArB,MAA+BqR,UAAUpE,IAAIjN;mBAC9C0M,KAAK;aASD2F,CAAY5R,SAAA,IACZiR,WAAWQ,gBACXC,UALID;;QAiMR,SAASI,YAAYC,WAAyB1K;YACjD0K,UAAUD,YAAYzK;;QAGnB,SAAS2K,UAAUC;YAEtB,OAAIA,mBAAmBtR,OAAOuR,WAId,SAAZD,WAAuC,mBAAZA,WAA6C,MAArBA,QAAQE,YAA2C,mBAAlBF,QAAQG,SAAuD,mBAA1BH,QAAQ5I;;QAOlI,SAASgJ,eAAeC,IAAqBlJ;iBAAwD,MAAxDA,cAA+BsH;YAE/E,OAAIsB,UAAUM,MAEHA,KAGO,mBAAPA,KACAlJ,IAAImJ,cAAcD,WAD7B;;QAgBG,SAASE,aAAaF;YACzB,OAAO,IAAI5Q,qBAAa,SAACH,SAASgB;gBAE9B,IAAI/D,OAAOmN,UAAU2G,KACjBG,KAAKJ,eAAeC;gBAExB,IAAIG,IACA,OAAOlR,QAAQkR;gBAGnB,IAAIhC,mBACA,OAAOlO,OAAO,IAAIE,MAAJ,mCAA4CjE,OAA5C;gBAGlB,IAAIuS,WAAWC,YAAY;oBAIvB,IAFAyB,KAAKJ,eAAeC,KAEZ;wBACJrB,cAAcF;wBACd,OAAOxP,QAAQkR;;oBAGnB,IAAIhC,mBAAmB;wBACnBQ,cAAcF;wBACd,OAAOxO,OAAO,IAAIE,MAAJ,mCAA4CjE,OAA5C;;mBAEnB;;;QAIJ,SAASkU,eAAe7J;YAC3BhL,KAAKgL,UAAUA;;QAGnB6J,eAAe7S,YAAYlB,OAAOY,OAAOkD,MAAM5C;QA0IxC,SAAS8S,eAAehL;YAG3B,KAFAkF,yBAAyBA,0BAA0B,IAAIS,kCAE5BY,IAAIvG,QAAQ;gBACnC,IAAIrG,WAAUuL,uBAAuB/N,IAAI6I;gBACzC,IAAIrG,UACA,OAAOA;;YAIf,IAAIA,UAAU,IAAII,qBAAa,SAACH,SAASgB;gBACrCoF,MAAMiL,iBAAiB,QAAQ;qBJYhC,SAAyBjL;yBAjBhC;4BACI,KAAK,IAAI1J,IAAI,GAAGA,IAAIuK,cAAcnI,QAAQpC,KAAK;gCAC3C,IAAI2K,UAAS;gCAEb;oCACIA,SAASJ,cAAcvK,GAAG2K;kCAC5B,OAAO5H;gCAIT,IAAI4H,QAAQ;oCACRH,aAAa1D,OAAO9G,GAAG;oCACvBuK,cAAczD,OAAO9G,GAAG;;;yBAOhC4U;wBAEA,IAAIlL,SAASA,MAAMuB,eACf;4BACIV,cAAc1F,KAAK6E,MAAMuB;4BACzBT,aAAa3F,KAAK6E;0BACpB,OAAO3G;qBInBL8R,CAAgBnL;oBAChBpG,QAAQoG;;gBAGZA,MAAMiL,iBAAiB,SAAS,SAAC5R;oBACzB2G,MAAMuB,gBACN3H,QAAQoG,SAERpF,OAAOvB;;;YAKnB6L,uBAAuBa,IAAI/F,OAAOrG;YAElC,OAAOA;;QAGJ,SAASyR,iBAAiBpL;YAE7B,OAAIA,MAAMuB,gBACCxH,qBAAaH,QAAQoG,MAAMuB,iBAG/ByJ,eAAehL,OAAO5G,KAAK,SAAAiS;gBAE9B,KAAKA,YAAY9J,eACb,MAAM,IAAIzG,MAAJ;gBAGV,OAAOuQ,YAAY9J;;;QA+DpB,SAAS+J,WAAOC,SAAyCnB,WAA0BoB;iBAA2C,MAA9GD,sBAAqC;iBAAyE,MAA3CC,wBAAoB;YAE1G,IAAIC,aAAaF,QAAQE,cAAc,IACnChB,QAAQc,QAAQd,SAAS,IAEzBzK,QAhED,SAAuB0L,KAAsBH,SAAmCnB;qBAAwC,MAAjGsB,cAAe;qBAAkF,MAA3EH,sBAA+B;gBAE/EG,MAAMA,IAAItE;gBACV,IAAIkD,UAAUvB,SAAS4C,cAAcD;gBAEjCH,QAAQd,SACRrC,OAAOkC,QAAQG,OAAOc,QAAQd;gBAG9Bc,QAAQK,UACRtB,QAAQuB,YAAYN,QAAQK,MAAMrH,KAAK;gBAGvCgH,QAAQZ,MACRL,QAAQwB,aAAa,MAAMP,QAAQZ;gBAGvC,IAAIY,QAAQE,YAAY,SAAAM,MAAA,GAAAC,gBACJhV,OAAO8F,KAAKyO,QAAQE,aADhBM,MAAAC,cAAAtT,QAAAqT,OAC6B;oBAA5C,IAAIlU,MAAGmU,cAAAD;oBACRzB,QAAQwB,aAAajU,KAAK0T,QAAQE,WAAW5T;;gBAIjD0T,QAAQU,cA1FT,SAAkBnB,IAAkBoB,WAAoBzK;yBAAkC,MAAlCA,cAAiBzI,OAAO+P;oBAE/E+B,GAAGmB,aAEHnB,GAAGmB,WAAWE,UAAUD,YAExBpB,GAAGX,YAAY1I,IAAI2K,eAAeF;iBAqFlCG,CAAS/B,SAASiB,QAAQU;gBAO9B,IAAIV,QAAQe,MACR;oBAAA,IAAY,aAARZ,KAGI,MAAM,IAAI5Q,MAAJ;oBAOVwP,QAAQiC,YAAYhB,QAAQe;;gBAIpC,OAAOhC;aAkBKqB,CAAc,UAAU;gBAChCF,YAAYnT,SAAA;oBACRkU,aAAmB;oBACnBC,mBAAmB;mBAChBhB;gBAEPhB,OAAOnS,SAAA;oBACHoU,iBAAiB;mBACdjC;gBAEP6B,MAAOf,QAAQe;gBACfV,OAAOL,QAAQK;;YAInBZ,eAAehL;YAEf,IAAIoK,WAAW;gBACX,IAAIU,KAxTL,SAAoBH,IAAqBlJ;yBAAuD,MAAvDA,cAA+BsH;oBAE3E,IAAIuB,UAAUI,eAAeC,IAAIlJ;oBAEjC,IAAI6I,SACA,OAAOA;oBAGX,MAAM,IAAIxP,MAAJ,2BAAoCkJ,UAAU2G;iBAgTvCgC,CAAWvC;gBACpBU,GAAGX,YAAYnK;gBAGf,IAAI1B,MAAM0B,MAAMuB;gBAEhB,IAAIjD,KACA;oBAESA,IAAIzH;kBACX,OAAOwC;oBACLyR,GAAG8B,YAAY5M;oBAEf,KAAKwL,UACD,MAAM,IAAI1Q,MAAJ,4BAAqCzB,IAAImB;oBAGnD,OAAO8Q,WAAOC,SAASnB,WAAWoB,WAAW;;;aAKrDD,QAAQnH,OAAOpL,OAAO+I,UAAUE,UAAU6B,MAAM,kBAChD9D,MAAM8L,aAAa,OAAOP,QAAQnH,OAAO;YAI7C,OAAOpE;;QAGJ,SAASiL,iBAAiBnG,KAAmB+H,OAAgB7S;YAChE8K,IAAImG,iBAAiB4B,OAAO7S;YAC5B,OAAO;gBACHmD,QADG;oBAEC2H,IAAIgI,oBAAoBD,OAAO7S;;;;QA6LpC,SAAS+S,eAAezC;YACvBA,WAAWA,QAAQ9I,cACnB8I,QAAQ9I,WAAWoL,YAAYtC;;QAwBhC,SAAS0C,gBAAgBlC;YAC5B,QAAKA,OAAOA,GAAGtJ;;QAoDZ,SAASyL,SAASnC,IAAkB9Q,SAApCkT;YAAwL,IAAAC,aAAA,MAAAD,QAAT,KAASA,OAAAE,cAAAD,MAAzFE,oBAAyF,MAAAD,4BAAAE,eAAAH,MAA3EI,sBAA2E,MAAAD,8BAAAE,iBAAAL,MAA5D/D,0BAA4D,MAAAoE,iBAAjD,MAAiDA,gBAAAC,YAAAN,MAA5C7O,gBAA4C,MAAAmP,YAAtCzU,SAAsCyU,WACvLC,eAAe5C,GAAG6C,aAClBC,gBAAgB9C,GAAG+C;YAEvB7T,QAAQ;gBAAEqT,OAAOK;gBAAcH,QAAQK;;YAEvC,IAYIE,UACA7R,SAbA2I,QAAQ;gBACR,IAAImJ,WAAWjD,GAAG6C,aACdK,YAAYlD,GAAG+C;iBAEdR,SAASU,aAAaL,gBAAkBH,UAAUS,cAAcJ,kBACjE5T,QAAQ;oBAAEqT,OAAOU;oBAAUR,QAAQS;;gBAGvCN,eAAeK;gBACfH,gBAAgBI;;YAMpB,SAAkC,MAAvB1P,IAAI2P,iBACXH,WAAW,IAAIxP,IAAI2P,eAAerJ,QACzBsJ,QAAQpD,UAEd,SAAoC,MAAzBxM,IAAI6P,kBAAkC;iBACpDL,WAAW,IAAIxP,IAAI6P,iBAAiBvJ,QAC3BsJ,QAAQpD,IAAI;oBACjBW,aAAe;oBACf2C,YAAe;oBACfC,UAAe;oBACfC,gBAAe;;gBAEnBhQ,IAAI2M,iBAAiB,UAAUrG;oBAEpB,SAAP2J;gBACA3J;gBACA3I,UAAUhB,WAAWsT,MAAMnF;aAE/BmF;YAGJ,OAAO;gBACHpR,QAAQ;oBACJ2Q,SAASU;oBACTxV,OAAO8T,oBAAoB,UAAUlI;oBACrCxI,aAAaH;;;;QE1+BlB,SAASwS,OAAO/H;YACnB,OAAsB,mBAARA,OAAqB,YAAagI,KAAKhI;;QAGlD,SAASiI,KAAKjI;YACjB,OAAsB,mBAARA,OAAqB,aAAcgI,KAAKhI;;QAGnD,SAASkI,MAAMrH;YAElB,IAAmB,mBAARA,KACP,OAAOA;YAGX,IAAIzD,QAAQyD,IAAIzD,MAAM;YAEtB,KAAKA,OACD,MAAM,IAAIhJ,MAAJ,oCAA6CyM;YAGvD,OAAOsH,SAAS/K,MAAM,IAAI;;QAGvB,SAASgL,KAAKvH;YACjB,OAAWqH,MAAMrH,OAAjB;;QAGG,SAASwH,MAAMxH;YAElB,OAAmB,mBAARA,MACAuH,KAAKvH,OAGTkH,OAAOlH,OAAOA,MAAMuH,KAAKvH;;QAO7B,SAASyH,mBAAmBC,KAAuBC;YACtD,IAAmB,mBAARD,KACP,OAAOA;YACJ,IAAIR,OAAOQ,MACd,OAPGJ,SAOWK,MAPIN,MAOCK,OAPc,KAAK;YAQnC,IAAIN,KAAKM,MACZ,OAAOL,MAAMK;YAEb,MAAM,IAAInU,MAAJ,kCAA2CmU;;QChDlD,IACME,uBAAuB,KAEvBC,cAAc,KACdC,oBAAoB,KACpBC,eAAiC,GCLjCC,eAAe;YACxBC,SAAW;YACXC,UAAW;YACXC,KAAW;WAQFC,eAAe;YACxBC,QAAc;YACdC,OAAc;YACdC,aAAc;WASLC,qBAAqB,wBAGrB/R,qBAAW,KAEXgS,qBAAqB;YAC9BC,4BAA6B;YAC7BC,uBAA6B;YAC7BC,qBAA6B;;QC3B1B,SAASC,iBAAU9R;iBAA8C,MAA9CA,cAA6BtF;YACnD,OAAIsF,QAAQtF,SACDsF,IAAG,wBAEUA,IAAG,wBAAkCA,IAAG,yBAAmC;;QAKvG,IAAM+R,SAAwB;YAAA,OAAO;;QAe9B,SAASC,YAAuBzY,KAAyB0Y;iBAAoD,MAA7E1Y,cAAgB;iBAA6D,MAApD0Y,wBAA2BF;YACvF,OAAO7J,cAAS4J,oBAAavY,KAAK;gBAC9B,IAAI2Y,QAAQD;gBAEZ,OAAO;oBACHhK,KAAK,SAACkK;wBACF,OAAOD,MAAMrY,eAAesY;;oBAEhCtZ,KAAK,SAACsZ,UAAUC;wBAEZ,OAAOF,MAAMrY,eAAesY,YAAYD,MAAMC,YAAYC;;oBAE9D3K,KAAK,SAAC0K,UAAUlJ;wBACZiJ,MAAMC,YAAYlJ;wBAClB,OAAOA;;oBAEXoJ,KAAK,SAACF;+BACKD,MAAMC;;oBAEjBjK,UAAU,SAACiK,UAAU3Z;wBAEjB,OAAO0P,cAASgK,OAAOC,UAAU3Z;;oBAErC8Z,OAAO;wBACHJ,QAAQD;;oBAEZzT,MAAM;wBACF,OAAO9F,OAAO8F,KAAK0T;;;;;QAM5B,IAAMK,WAAb;QAEO,SAASC;YACZ,IAAMC,SAASX;YACfW,OAAOC,kBAAkBD,OAAOC,mBAAmB,IAAIH;YACvD,OAAOE,OAAOC;;QAYX,SAASC,YAAepZ,KAAyB0Y;iBAAoD,MAA7E1Y,cAAgB;iBAA6D,MAApD0Y,wBAA2BF;YAC/E,OAAOC,YAAY,eAAe9J,SAAS3O,KAAK;gBAC5C,IAAMqZ,WAAW,IAAIvL,kCAEfwL,WAAW,SAAC7S;oBACd,OAAO4S,SAAS1K,SAASlI,KAAKiS;;gBAGlC,OAAO;oBACHhK,KAAK,SAACjI;wBAEF,OADc6S,SAAS7S,KACVnG,eAAeN;;oBAEhCV,KAAK,SAACmH,KAAKoS;wBACP,IAAMF,QAAQW,SAAS7S;wBAEvB,OAAOkS,MAAMrY,eAAeN,OAAO2Y,MAAM3Y,OAAO6Y;;oBAEpD3K,KAAK,SAACzH,KAAKiJ;wBACO4J,SAAS7S,KACjBzG,OAAO0P;wBACb,OAAOA;;oBAEXoJ,KAAK,SAACrS;+BACY6S,SAAS7S,KACVzG;;oBAEjB2O,UAAU,SAAClI,KAAKxH;wBAEZ,OAAO0P,cADO2K,SAAS7S,MACAzG,KAAKf;;;;;QCnG5C,SAASsa;YACL,OAAOd,YAAY,YAAY9J,SAAS,cAAcM;;QAG1D,SAASuK,gBAAgB/S;YAErB,OADsB2S,YAAY,iBACbzK,SAASlI,KAAK;gBAAA,OAAM,IAAIvE;;;QAU1C,SAASuX,SAAShT,KAAlBiT;YACH,QAAOC,GADiKD,MAApHC,MACxClT,KAAKqR,aAAaE,OAAO;gBAAE4B,YAAYL;eAAmB;gBAAElS,QAAQlB;gBAAU/B,UAAU;eAC/F7C,KAAK,SAAAsY;gBAAsC,IAAnChO,SAAmCgO,MAAnChO,QAAgB+N,aAAmBC,MAA3BC,KAAQF;gBACrBJ,gBAAgB/S,KAAK1E,QAAQ;oBAAE0E;oBAAKY,QAAQwE;;gBAC5C,OAAO;oBAAEpF;oBAAKY,QAAQwE;oBAAQ+N;;;;QAInC,SAASG,oBAAoBtT,KAA7BuT;YAAiH,IAArDL,OAAqDK,MAArDL;YAC/D,OAAOP,YAAY,4BAA4BzK,SAASlI,KAAK;gBACzD,OAAOgT,SAAShT,KAAK;oBAAEkT;mBAAQpY,KAAK,SAAA0Y;oBAAA,OAAAA,MAAGL;;;;QAiBxC,SAASM,iBAAiBzT,KAA6BrC,SAAyBpF;iBAA2F,MAApHoF,sBAAmB;iBAAiG,MAA3FpF,gBAAgB;YACnG,IAAI8C,UAAU0X,gBAAgB/S;aAEb,MAAbrC,YACAtC,UAAUA,QAAQsC,QAAQA,SAAS,IAAInB,MAAUjE,OAAd,yBAA2CoF,UAA3C;YAGvC,OAAOtC;;QCtDJ,SAASqY,gBAAgB1T;YACP2S,YAAY,gBACpBlL,IAAIzH,MAAK;;QCNnB,iBAAM2T,OAAO;YAChBC,UAAY;YACZC,OAAY;YACZC,SAAY;YACZC,OAAY;YACZC,MAAY;YACZC,OAAY;YACZC,QAAY;YACZC,QAAY;YACZC,QAAY;YACZC,SAAY;YACZC,MAAY;YACZC,WAAY;;QCTT,SAASC,iBAAiBha;YAC7B,OAAwB,mBAATA,QAA8B,SAATA,QAA0C,mBAAlBA,KAAKia;;QAG9D,SAASC,cAAczL;YAC1B,YAAmB,MAARA,MACA0K,KAAKY,YAGJ,SAARtL,MACO0K,KAAKW,OAGZjP,MAAMC,QAAQ2D,OACP0K,KAAKM,QAGG,qBAARhL,MACA0K,KAAKC,WAGG,mBAAR3K,MAEHA,eAAezM,QACRmX,KAAKE,QAGQ,qBAAb5K,IAAInO,OACJ6Y,KAAKG,UAG4B,sBAAxCpb,OAAOkB,UAAUiB,SAAS1C,KAAK8Q,OACxB0K,KAAKI,QAG4B,oBAAxCrb,OAAOkB,UAAUiB,SAAS1C,KAAK8Q,OACxB0K,KAAKK,OAGTL,KAAKO,SAGG,mBAARjL,MACA0K,KAAKQ,SAGG,mBAARlL,MACA0K,KAAKS,SAGG,oBAARnL,MACA0K,KAAKU,eADhB;;QAKG,SAASM,cAAqCC,MAAU3L;YAC3D,OAAO;gBACHwL,UAAUG;gBACVC,SAAU5L;;;QCxBlB,mBAAM6L,eAAwBC,cAAA,IACxBpB,KAAKC,YCpCJ;QDmCuBmB,YAExBpB,KAAKE,SE5BJ,SAAAmB;YAAqH,IAA3FpS,UAA2FoS,KAA3FpS,SAAS1G,QAAkF8Y,KAAlF9Y,OAAO+Y,OAA2ED,KAA3EC;YAC7C,OAAON,cAAchB,KAAKE,OAAO;gBAAEjR;gBAAS1G;gBAAO+Y;;WFyBzBF,YAGxBpB,KAAKG,WGtCJ,eHmCuBiB,YAIxBpB,KAAKI,SInCJ,SAAwB9K;YAC3B,OAAO0L,cAAchB,KAAKI,OAAO9K,IAAI5O;WJ8BX0a,YAKxBpB,KAAKK,QKpCJ,SAAuB/K;YAC1B,OAAO0L,cAAchB,KAAKK,MAAM/K,IAAIiM;WL8BVH,YAMxBpB,KAAKM,SMzCJ,SAAmChL;YACtC,OAAOA;WNkCmB8L,YAOxBpB,KAAKO,UO1CJ,SAAyBjL;YAC5B,OAAOA;WPkCmB8L,YAQxBpB,KAAKQ,UQ3CJ,SAAyBlL;YAC5B,OAAOA;WRkCmB8L,YASxBpB,KAAKS,US5CJ,SAAyBnL;YAC5B,OAAOA;WTkCmB8L,YAUxBpB,KAAKU,WU7CJ,SAA0BpL;YAC7B,OAAOA;WVkCmB8L,YAWxBpB,KAAKW,QW9CJ,SAAuBrL;YAC1B,OAAOA;WXkCmB8L,cAexBI,qBAAmC,IYhBnCC,iBAA4BC,gBAAA,IAC5B1B,KAAKC,YX/BJ;YACH,MAAM,IAAIpX,MAAJ;WW6BwB6Y,cAE5B1B,KAAKE,SVvBJ,SAAAhF;YAA8E,IAAlDjM,UAAkDiM,MAAlDjM,SAAS1G,QAAyC2S,MAAzC3S,OAAO+Y,OAAkCpG,MAAlCoG,MACzClZ,QAAQ,IAAIS,MAAMoG;YAExB7G,MAAMkZ,OAAOA;YACblZ,MAAMG,QAAYA,QAAlB,SAAgCH,MAAMG;YACtC,OAAOH;WUgBuBsZ,cAG5B1B,KAAKG,WTjCJ;YACH,MAAM,IAAItX,MAAJ;WS6BwB6Y,cAI5B1B,KAAKI,SR9BJ,SAA0B9K;YAE7B,OAAO,IAAIqM,OAAOrM;WQwBYoM,cAK5B1B,KAAKK,QP/BJ,SAAyB/K;YAC5B,OAAO,IAAInC,KAAKmC;WOyBcoM,cAM5B1B,KAAKM,SNpCJ,SAAqChL;YACxC,OAAOA;WM6BuBoM,cAO5B1B,KAAKO,ULrCJ,SAA2BjL;YAC9B,OAAOA;WK6BuBoM,cAQ5B1B,KAAKQ,UJtCJ,SAA2BlL;YAC9B,OAAOA;WI6BuBoM,cAS5B1B,KAAKS,UHvCJ,SAA2BnL;YAC9B,OAAOA;WG6BuBoM,cAU5B1B,KAAKU,WFxCJ,SAA4BpL;YAC/B,OAAOA;WE6BuBoM,cAW5B1B,KAAKW,QDzCJ,SAAyBrL;YAC5B,OAAOA;WC6BuBoM,gBAe5BE,uBAAuC;QC5CtC,SAASC;YAEZ,SAAIhS,mBAAa9I,QAAQ8K,MAAM;;QAO5B,SAASiQ,kBAAkBzV;YAE9B,QAAKyE,gBAAgB/J,QAAQsF;;QAO1B,SAAS0V,qBAAqB9U,QAAkBZ;YAEnD,IAAIY;gBACA,IAAID,sBAAgBkF,iBAAiBjF,SACjC,QAAO;mBAER,IAAIZ,QACFiB,aAAajB,MACd,QAAO;YAIf,QAAO;;QAGJ,SAAS2V,YAATX;YAAqG,IAA9EhV,MAA8EgV,KAA9EhV,KAAKY,SAAyEoU,KAAzEpU;YAE/B,UAAK4U,2BAID5U,WAAW8U,qBAAqB9U,QAAQZ,QAIxCA,QAAQyV,kBAAkBzV;;QAO3B,SAAS4V,cAAchV;YAI1B,IAAMiV,mBAFNjV,SAASA,UAAUiF,iBAAiBjF,SAEL8H,QAAQ,kBAAkB;YAIzD,OAFe+I,qBAAP,MAA+BoE;;QAKpC,SAASC;YACZ,OAAOvQ,QAAQ7K,OAAOnC,QAAQmC,OAAOnC,SAASqd,cAAcjV;;QAGzD,IAAMoV,oBAAoB,IAAIta,qBAAa,SAAAH;YAE9C,IAAIZ,OAAO+P,YAAY/P,OAAO+P,SAASC,MACnC,OAAOpP,QAAQZ,OAAO+P,SAASC;YAGnC,IAAMI,WAAWC,YAAY;gBACzB,IAAIrQ,OAAO+P,YAAY/P,OAAO+P,SAASC,MAAM;oBACzCM,cAAcF;oBACd,OAAOxP,QAAQZ,OAAO+P,SAASC;;eAEpC;;QAGA,SAASsL,qBAAqBhW;YACJ2S,YAAY,wBACpBzK,SAASlI,KAAK;gBAAA,OAAM,IAAIvE;;;QAG1C,SAASwa,iBAAiBjW;YAC7B,IACMkW,mBADuBvD,YAAY,wBACK9Z,IAAImH;YAElD,KAAKkW,kBACD,MAAM,IAAI1Z,MAAJ;YAGV,OAAO0Z;;QAGJ,SAASC,0BAA0BnW,KAA6BY,QAAiBwV;YAapFH,iBAAiBjW,KAAK1E,QAZK,SAAC+a,WAAmCC,cAAuB1T;gBAClF,IAAIyT,cAAcrW,KACd,MAAM,IAAIxD,MAAJ;gBAGV,KAAK0I,YAAYoR,cAAc1V,SAC3B,MAAM,IAAIpE,MAAJ,mBAA4B8Z,eAA5B,4BAAoE1V;gBAG9EwV,YAAYG,cAAc3T;;;QAM3B,SAAS4T,wBAAwBxW,KAA6BjF;YACjEkb,iBAAiBjW,KAAK1D,OAAOvB,KAAKuC,MAAMkM;;QCyCrC,SAASiN,WAATxD;YAAqE,SAA/CjT,MAA+CiT,MAA/CjT,KAAKzH,OAA0C0a,MAA1C1a,MAAMqI,SAAoCqS,MAApCrS,QAC9B8V,qBAAqB1E,YAAY,uBACjC2E,oBAAoBhE,YAAY,sBAFkCvH,MAAA,GAAAwL,yBAIlDF,mBAAmBlY,QAJ+B4M,MAAAwL,uBAAAxc,QAAAgR,OAIvB;gBAA5C,IAAMyL,UAAOD,uBAAAxL;gBAEV3I,eAAeiU,mBAAmB7d,IAAIge,SAAS7W,QAC/C0W,mBAAmBrE,IAAIwE;;YAI/B,IAAMC,UAAuBH,kBAAkBzO,SAASlI,KAAK;gBACzD,OAAKzH,OAIEme,mBAAmBxO,SAAS3P,MAAM;oBACrC,OAAO;wBAAEyH;wBAAKzH;;qBAJP;oBAAEyH;;;YAQjB,IAAI8W,QAAQ9W,OAAO8W,QAAQ9W,QAAQA,KAC/B,MAAM,IAAIxD,MAAJ,kDAA0DjE,QAAQ;YAG5E,IAAIA,MAAM;gBACN,IAAIue,QAAQve,QAAQue,QAAQve,SAASA,MACjC,MAAM,IAAIiE,MAAJ,8CAAuDjE,OAAvD,OAAkEue,QAAQve;gBAGpFue,QAAQve,OAAOA;gBACfme,mBAAmBjP,IAAIlP,MAAMue;;YAGjC,IAAIlW,QAAQ;gBACRkW,QAAQlW,SAASA;gBACjBoV,qBAAqBhW;;YAGzB2W,kBAAkBlP,IAAIzH,KAAK8W;YAE3B,OAAOA;;QCnMJ,SAASC,YAAT/B;YAA2H,ID2MxHgC,YC3MoBC,KAAoGjC,KAApGiC,IAAI/D,OAAgG8B,KAAhG9B,MAAMgE,iBAA0FlC,KAA1FkC;YD2M9BF,aAAatc,OAAOyc,MAE1Bzc,OAAOyc,OAAO,SAA2BrR,KAAcvN,MAAe0U,SAAkBmK;gBACpF,IAAMpX,MAAMgX,WAAW7e,KAAKP,MAAM8O,iBAAiBZ,MAAMvN,MAAM0U,SAASmK;gBAExE,KAAKpX,KACD,OAAOA;gBAGXyW,WAAW;oBAAEzW;oBAAKzH;oBAAMqI,QAAQkF,MAAMD,iBAAiBC,OAAO;;gBAE9D,OAAO9F;;aAlNR,SAAAgV;gBAAmI,IAApGiC,KAAoGjC,KAApGiC,IAAI/D,OAAgG8B,KAAhG9B,MAAMgE,iBAA0FlC,KAA1FkC,gBACtCR,qBAAqB1E,YAAY;gBAEvCiF,GAAG5F,aAAaG,aAAa,SAAA3C;oBAA8B,IAA3BxU,SAA2BwU,MAA3BxU,QAAQ+K,SAAmByJ,MAAnBzJ,QAAQiO,OAAWxE,MAAXwE,MACtCgE,gBAAgBrF,YAAY,WAAWnZ,IAAIuM;oBAEjD,KAAKiS,eACD,MAAM,IAAI7a,MAAJ,4CAAqD4I;oBAG/D,OAAOiS,cAAcvc,KAAK,SAAAwc;wBAGtB,IAAIjd,WAAWid,QAEX,MAAM,IAAI9a,MAAJ,kEAA2E4I;wBAGrF,KAAKiO,KAAK9a,MACN,MAAM,IAAIiE,MAAJ;wBAGV,KAAK6W,KAAK+C,aACN,MAAM,IAAI5Z,MAAJ;wBAGV,KAAKka,mBAAmBzO,IAAIoL,KAAK9a,OAC7B,MAAM,IAAIiE,MAAJ,sBAA+B6W,KAAK9a,OAApC;wBAIV,KAAKme,mBAAmB7d,IAAIwa,KAAK9a,MAAMqI,QACnC,MAAM,IAAIpE,MAAJ,mDAA4D6W,KAAK9a;wBAI3E,IAAIme,mBAAmB7d,IAAIwa,KAAK9a,MAAMqI,WAAWwE,QAE7C,MAAM,IAAI5I,MAAJ,oBAA6B4I,SAA7B,gDAAmFsR,mBAAmB7d,IAAIwa,KAAK9a,MAAMqI;wBAI/HuV,0BAA0BO,mBAAmB7d,IAAIwa,KAAK9a,MAAMyH,KAAKoF,QAAQiO,KAAK+C;wBAE9E,OAAO;4BACHA,aADG,SACSxT;gCAER,IAAKlI,WAAUA,OAAOiI,QAAtB;oCAIA,IAAM4U,aAAab,mBAAmB7d,IAAIwa,KAAK9a;oCAE/C,IAAKgf,YAIL;wCACIL,eAAe;4CACX7D,MAAQzQ;4CACRwC,QAAQmS,WAAW3W;4CACnBvG,QAAQkd,WAAWvX;2CACpB;4CAAEiX;4CAAI/D;;sCACX,OAAOnY;wCACLU,qBAAaa,OAAOvB;;;;;;;aClExCyc,CAAoB;gBAAEP;gBAAI/D;gBAAMgE;;aCkC7B,SAAArI;gBAAiE,IAA9BqE,OAA8BrE,MAA9BqE;gBACtCpB,iBAAUpX,QAAQ+c,qBAAqB,SAAAxE;oBAA+H,IAAjG1a,OAAiG0a,MAAjG1a,MAAM8B,SAA2F4Y,MAA3F5Y,QAAQqd,SAAmFzE,MAAnFyE,QAAQtB,cAA2EnD,MAA3EmD,aAEjFuB,gBAAgB3F,YAAY,kBAC5B4F,eAAezX,UAAUzF;oBAE/B,KAAKkd,cACD,MAAM,IAAIpb,MAAJ;oBAGV,IAAM6P,KAlBd,SAAA2I;wBAAgG,IAArEzc,OAAqEyc,KAArEzc,MAAM8B,SAA+D2a,KAA/D3a,QAAQqd,SAAuD1C,KAAvD0C,QAAQtB,cAA+CpB,KAA/CoB;yBA1BjD;4BAA8B,KAC1B,IAAMuB,gBAAgB3F,YAAY,kBADR5G,MAAA,GAAAyM,uBAGRF,cAAcnZ,QAHN4M,MAAAyM,qBAAAzd,QAAAgR,OAGc;gCAAnC,IAAM7R,MAAGse,qBAAAzM,MACJ0M,eAAeH,cAAcpe;gCAEnC;oCACSue,aAAazd;kCACpB,OAAOU;oCACL4c,cAActF,IAAI9Y;oCAClB;;gCAGAkJ,eAAeqV,aAAazd,WAC5Bsd,cAActF,IAAI9Y;;yBAa1Bwe;wBACA,IAAM1L,KAAK7D;wBACWwJ,YAAY,iBACpBvK,IAAI4E,IAAI;4BAAE9T;4BAAM8B;4BAAQqd;4BAAQtB;;wBAC9C,OAAO/J;qBAaQ2L,CAAgB;wBAAEzf;wBAAM8B;wBAAQqd;wBAAQtB;;oBAEnD,OAAOlD,KAAK0E,cAAcvG,aAAaG,aAAa;wBAEhDjZ;wBAEA6d,aAJgD;4BAM5C,IAAM0B,eAAeH,cAAc9e,IAAIwT;4BAEvC;gCAESyL,gBAAgBA,aAAazd;8BACpC,OAAOU;gCACL4c,cAActF,IAAIhG;gCAClB;;4BAGJ,IAAKyL,gBAAiBA,aAAazd,WAAUoI,eAAeqV,aAAazd,SAAzE;gCAIA;oCACIyd,aAAaJ;kCACf,OAAO3c;oCACL;;gCAGJ+c,aAAa1B,YAAY9b,MAAM1C,MAAMuC;;;uBAG1C;wBAAEyG,QAAQlB;;;aD1EjBuY,CAAwB;gBAAEhB;gBAAI/D;;aEqC3B,SAAA8B;gBAAuJ,IAAzHiC,KAAyHjC,KAAzHiC,IAAI/D,OAAqH8B,KAArH9B,MAAMgE,iBAA+GlC,KAA/GkC;gBACpCzb,qBAAaiC,IAAI;oBACpB,IAAM4C,SAASD,UAAU3F;oBAEzB,IAAK4F,UAIAqV,YAAY;wBAAE3V,KAAKM;wBAAxB;wBAIA0V,qBAAqB1V;wBAErB,QAnD6BN,MAmDKM,QAlD/BqS,YAAY,wBAAwBzK,SAASlI,KAAK;4BACrD,OAAOvE,qBAAaiC,IAAI;gCACpB,IAAMgE,QAAQkC,eAAe5D,KAAK4V,cAAcjV;gCAEhD,KAAKe,OACD,MAAM,IAAIlF,MAAJ,kCAA2CmE;gCAIrD,OAAIM,aAAaS,UAAUoQ,iBAAUpQ,SAC1BA,QAGJ,IAAIjG,qBAAa,SAACH,SAASgB;oCAE9B,IAAIwO,UACAnN;oCAEJmN,WAAWC,YAAY;wCAEnB,IAAIrJ,SAAST,aAAaS,UAAUoQ,iBAAUpQ,QAAQ;4CAClDsJ,cAAcF;4CACdhN,aAAaH;4CACb,OAAOrC,QAAQoG;;uCAEpB;oCAEH/D,UAAUhB,WAAW;wCACjBqO,cAAcF;wCACd,OAAOxO,OAAO,IAAIE,MAAJ,kCAA2CmE;uCAC1D;;;4BAoB+B7F,KAAK,SAAAwc;4BAE3C,OAAK5c,OAAOnC,OAKLuZ,iBAAUwF,QAAQG,mBAAmB;gCAExClf,MAAMmC,OAAOnC;gCAEb8B,QAAQK;gCAERgd,QANwC;gCAUxCtB,aAVwC,SAU5BxT;oCAQR,IAAKlI,WAAUA,OAAOiI,QAItB;wCACIuU,eAAe;4CACX7D,MAAQzQ;4CACRwC,QAAQxN,KAAKwN;4CACb/K,QAAQzC,KAAKyC;2CACd;4CAAE4c;4CAAI/D;;sCACX,OAAOnY;wCACLU,qBAAaa,OAAOvB;;;+BAI7BD,KAAK,SAAA+T;gCAA8B,IAA3BxU,SAA2BwU,MAA3BxU,QAAQ+K,SAAmByJ,MAAnBzJ,QAAQiO,OAAWxE,MAAXwE;gCAEvB,IAAIhZ,WAAWiG,QACX,MAAM,IAAI9D,MAAJ;gCAGV2Z,0BAA0B9b,QAAQ+K,QAAQiO,KAAK+C;+BAEhD9Y,MAAM,SAAAvC;gCAELyb,wBAAwBlW,QAAQvF;gCAChC,MAAMA;iCAhDCyb,wBAAwBlW,QAAQ,IAAI9D,MAAJ;;wBAtDvD,IAAqCwD;;;aFCjCkY,CAAmB;gBAAEjB;gBAAI/D;gBAAMgE;;;QGCnC,SAASiB;YAAsB,KAC3B,IAAMC,kBAAkBpG,YAAY,oBADT5G,MAAA,GAAAiN,yBAEVD,gBAAgB5Z,QAFN4M,MAAAiN,uBAAAje,QAAAgR,OAEc;gBAApC,IAAMiB,KAAEgM,uBAAAjN;gBAELgN,gBAAgBvf,IAAIwT,IAAIiM,iBACxBF,gBAAgB/F,IAAIhG;;;QAgBzB,IAAMkM,qBAAb;YAQI,SAAAA,YAAYC,kBAA0CC,cAAtDzD;gBAA8H,IAA9B9B,OAA8B8B,KAA9B9B;gBAA8Btb,KAN9H8gB,iBAAuB;gBAMuG9gB,KAL9H4gB,wBAK8H;gBAAA5gB,KAJ9H6gB,oBAI8H;gBAAA7gB,KAH9H+gB,2BAG8H;gBAAA/gB,KAF9Hsb,YAE8H;gBAC1Htb,KAAK4gB,mBAAmBA;gBACxB5gB,KAAK+gB,sBAAsB,IAAIld;gBAC3Bgd,gBACA7gB,KAAKghB,UAAUH;gBAEnB7gB,KAAK4gB,iBAAiB1F,gB7BkFvB,SAA2BnU;oBAC9B,IAAI2K,QAAQ;oBAGZ,SAASuP;wBAAgE,SAAAC,QAAA3e,UAAAC,QAArC4E,OAAqC,IAAAqG,MAAAyT,QAAAC,QAAA,GAAAA,QAAAD,OAAAC,SAArC/Z,KAAqC+Z,SAAA5e,UAAA4e;wBACrE,IAAIxf,MAAewP,cAAc/J;wBAEjC,IAAIsK,MAAMzP,eAAeN,MACrB,OAAO+P,MAAM/P;wBAGjB+P,MAAM/P,OAAOoF,OAAOrE,MAAM1C,MAAMuC,WAC3BqD,QAAQ;mCACE8L,MAAM/P;;wBAGrB,OAAO+P,MAAM/P;;oBAGjBsf,wBAAwBvG,QAAQ;wBAC5BhJ,QAAQ;;oBAGZ,OAAOuP;iB6BzGmCG,CAAephB,KAAK4gB,iBAAiB1F;gBAC3Elb,KAAKsb,OAAOA;;YAfpB,IAAA3W,SAAAgc,YAAA3e;YAAA2C,OAkBI0c,UAAA;gBACI,OAAOrhB,KAAK4gB,iBAAiB5D;;YAnBrCrY,OAsBI2c,UAAA;gBACI,OAAOthB,KAAKqhB,cAActZ,YAAYE;;YAvB9CtD,OA0BI4c,WAAA;gBACI,OAAOvhB,KAAKqhB,cAActZ,YAAYC;;YA3B9CrD,OA8BI6c,cAAA,SAAY5Y;gBAA2C,IAAA7E,QAAA/D;gBACnD,OAAO6D,qBAAaiC,IAAI;oBACpB,KAAI/B,MAAK8c,cAGL,OAAO9c,MAAK6c,iBAAiBY,YAAY5Y;oBAFzC7E,MAAK8c,aAAaxY,WAAWO;mBAIlC1F,KAAK;oBAAA,OAAMa;;;YArCtBY,OAwCI8c,UAAA,SAAQ9gB;gBAA2C,IAAAmE,SAAA9E;gBAC/C,OAAO6D,qBAAaiC,IAAI;oBACpB,KAAIhB,OAAK+b,cAkBL,OAAO/b,OAAK8b,iBAAiBa,QAAQ9gB;oBAjBrC,KAAK0I,aAAavE,OAAK+b,eACnB,MAAM,IAAIjc,MAAJ;oBAGVE,OAAK+b,aAAalgB,OAAOA;oBAErBmE,OAAK+b,aAAaa,gBAElB5c,OAAK+b,aAAaa,aAAa9L,aAAa,QAAQjV;oBAKpDke,WAAW;wBAAEzW,KAAKtD,OAAK+b;wBAAclgB;;mBAM9CuC,KAAK;oBAAA,OAAM4B;;;YA9DtBH,OAiEIgd,QAAA;gBAAoC,IAAAtc,SAAArF;gBAChC,OAAO6D,qBAAaiC,IAAI;oBACpB,KAAIT,OAAKwb,cAGL,OAAOxb,OAAKub,iBAAiBe;oBAF7Btc,OAAKwb,aAAac;mBAIvBze,KAAK;oBAAA,OAAMmC;;;YAxEtBV,OA2EIid,QAAA;gBAAoC,IAAA3b,SAAAjG;gBAChC,OAAO6D,qBAAaiC,IAAI;oBAChBG,OAAK4a,gBACL5a,OAAK4a,aAAae;oBAEtB,OAAO3b,OAAK2a,iBAAiBgB;mBAC9B1e,KAAK;oBAAA,OAAM+C;;;YAjFtBtB,OAoFIkd,WAAA;gBAAmC,IAAAC,SAAA9hB;gBAC/B,OAAO6D,qBAAaiC,IAAI;oBACpB,OAAIgc,OAAKjB,eACEhW,eAAeiX,OAAKjB,gBAEpBiB,OAAKlB,iBAAiBiB;;;YAzF7Cld,OA8FIod,YAAA;gBACI,OAAO/hB,KAAK6gB;;YA/FpBlc,OAkGIqc,YAAA,SAAU5Y;gBACNpI,KAAK6gB,eAAezY;gBACpBpI,KAAK+gB,oBAAoBrd,QAAQ0E;;YApGzCzD,OAuGIqd,cAAA;gBACI,OAAOhiB,KAAK+gB;;YAxGpBpc,OA2GIsd,cAAA,SAAY7Z;gBAAqD,IAAA8Z,SAAAliB;gBAC7D,OAAO6D,qBAAaiC,IAAI;oBACpB,OAAIoc,OAAKrB,eACEzY,QAAQ8Z,OAAKrB,eAGjBhd,qBAAawC,IAAI,EACpB6b,OAAKhH,iBACLQ,oBAAoBtT,KAAK;wBAAEkT,MAAM4G,OAAK5G;0BACvCpY,KAAK,SAAA+T;wBAAgD,IAC9CrJ,QAD8CqJ,MAAA,OAAAA,MAAA;wBAGhDrJ,SACAsU,OAAKlB,UAAU5Y;wBAGnB,OAAOwF;;;;YA3HvBjJ,OAgIIwd,SAAA;gBACI,OAAOniB,KAAK6gB,gBAAgB7gB;;YAjIpC2E,OAoIIuW,gBAAA;gBACI,OAAIlb,KAAK6gB,eACEnF,oBAAoB1b,KAAK6gB,cAAc;oBAAEvF,MAAMtb,KAAKsb;qBAEpDtb,KAAK4gB,iBAAiB1F;;YAxIzCvW,OA4IIyd,YAAA;gBACI,OAAOpiB,KAAK4gB;;YA7IpBjc,OAgJI+b,cAAA;gBACI,OAAO1gB,KAAK6gB,gBAAgBhW,eAAe7K,KAAK6gB;;YAjJxDF,YAoJWwB,SAAP,SAAc/Z;gBACV,OAAOuY,YAAYG,cAAc1Y,OAE3BA,IAAI+Z,WACJ/Z;;YAxJduY,YA2JWyB,YAAP,SAAiBha,KAAjBiT;gBAAoH,IAAtDC,OAAsDD,MAAtDC;gBAC1DiF;gBAEA,OAAOI,YAAY0B,cAAcja,KAAK;oBAAEkT;mBAAQ8G;;YA9JxDzB,YAiKW2B,cAAP,SAAmB1B,kBAAnBpF;gBAA4H,IAA7D6D,KAA6D7D,MAA7D6D,IAAI/D,OAAyDE,MAAzDF;gBAC/DiF;gBAEA,OAAOnG,YAAY,mBAAmB9J,SAASsQ,iBAAiBnM,IAAI;oBAChE,OAAO,IAAIkM,YAAYC,kBAAkB,MAAM;wBAAEvB;wBAAI/D;;;;YArKjEqF,YAyKWG,gBAAP,SAAqBlS;gBAEjB,OAAOjB,QAAQiB,QAAQD,SAASC,QAAQA,IAAIkS;;YA3KpDH,YA8KW0B,gBAAP,SAAqBja,KAArBuT;gBAA8G,IAA5CL,OAA4CK,MAA5CL;gBAC9DiF;gBAEA,OAAII,YAAYG,cAAc1Y,OAEnBA,MAIJ2S,YAAY,oBAAoBzK,SAASlI,KAAK;oBACjD,IAAMqM,KAAK7D;oBAEX,OAAOwJ,YAAY,mBAAmBvK,IAAI4E,IAAI,IAAIkM,YAAY;wBAC1DlM;wBAEAuI,MAAevU,UAAUL,OAAOL,YAAYE,QAAQF,YAAYC;wBAEhEkT,eAAe;4BAAA,OAAMQ,oBAAoBtT,KAAK;gCAAEkT;;;wBAChDqG,OAAe;4BAAA,OAAM9d,qBAAaiC,IAAI;gCAClCsC,IAAIuZ;;;wBAERC,OAAe;4BAAA,OAAM/d,qBAAaiC,IAAI;gCAClCsC,IAAIwZ;;;wBAERC,UAAe;4BAAA,OAAMhe,qBAAaiC,IAAI;gCAElC,OAAO+E,eAAezC;;;wBAE1BoZ,aAAe,SAAC5Y;4BAAD,OAAU/E,qBAAaiC,IAAI;gCAEtC,IAAIuD,aAAajB,MACb;oCACI,IAAIA,IAAIC,YAA4C,qBAAzBD,IAAIC,SAASyI,SAAwB;wCAE5D1I,IAAIC,SAASyI,QAAQlI;wCACrB;;kCAEN,OAAOzF;gCAMbiF,IAAIC,WAAWO;;;wBAEnB6Y,SAAe,SAAC9gB;4BAAD,OAAUkD,qBAAaiC,IAAI;gCAGlC+Y,WAAW;oCAAEzW;oCAAKzH;;gCAGtByH,IAAIzH,OAAOA;;;uBAGhByH,KAAK;wBAAEkT;;;;YApOtB,OAAAqF;SAAA;QCdA,SAAS4B,UAAU9N,IAAapD,KAAgB1Q,MAAe8B,QAA8CuG;YACzG,IAAMwZ,cAAczH,YAAY,gBAC1B0H,qBAAqBrI,YAAY;YAEvC,IAAIuG,mBAAYG,cAAcre,SAC1BggB,mBAAmB5S,IAAI4E,IAAI;gBAAEpD;gBAAK1Q;gBAAMqI;gBAAQvG;qBAC7C;gBACHggB,mBAAmBhI,IAAIhG;gBAEP+N,YAAYlS,SAAS7N,QAAQ;oBAAA,OAAO;mBAC5CgS,MAAM;oBAAEzL;oBAAQrI;oBAAM0Q;oBAAK5O;;;;QAI3C,SAASigB,aAAajgB,QAAgCgS;YAClD,IAAM+N,cAAczH,YAAY,gBAC1B0H,qBAAqBrI,YAAY;YAEvC,OADgBoI,YAAYlS,SAAS7N,QAAQ;gBAAA,OAAO;eACrCgS,OAAOgO,mBAAmBxhB,IAAIwT;;QAoD1C,SAASkO,2BAAqBC,aAAmD5Z,QAAwBqI,KAAiC1P,KAA1I0Z;aAjDP,SAAA+B;gBAA2E,IAAzCiC,KAiD4KhE,MAA7CgE;gBAhDtJjF,YAAY,oBAAoB9J,SAAS,iBAAiB;oBAC7D,OAAO+O,GAAG5F,aAAaC,QAAQ;wBAAE1Q,QAAQlB;uBAAY,SAAAmP;wBAAmG,IAAhGxU,SAAgGwU,MAAhGxU,QAAQ+K,SAAwFyJ,MAAxFzJ,QAAQiO,OAAgFxE,MAAhFwE,MAC5DhH,KAAagH,KAAbhH,IAAI9T,OAAS8a,KAAT9a,MAENkiB,OAAOH,aAAajgB,QAAQgS;wBAElC,KAAKoO,MACD,MAAM,IAAIje,MAAJ,4BAAqC6W,KAAK9a,OAA1C,gBAA8D8a,KAAKhH,KAAnE,SAA8E1L,gBAAUjG;wBANkD,IASpIggB,eAA8BD,KAAtCpgB,QAAsBuG,SAAgB6Z,KAAhB7Z,QAAQqI,MAAQwR,KAARxR;wBAEtC,OAAOxN,qBAAaiC,IAAI;4BACpB,KAAKwH,YAAYtE,QAAQwE,SAErB,MAAM,IAAI5I,MAAJ,aAAsB6W,KAAK9a,OAA3B,cAA6CkN,KAAKC,UAAUrG,aAAQob,KAAK7Z,UAAU6Z,KAAK7Z,OAAOvG,SAASogB,KAAK7Z,UAA7G,4BAAgJwE,SAAhJ,SAA+JzE,gBAAUjG;4BAGnL,IAAI6d,mBAAYG,cAAcgC,eAE1B,OAAOA,aAAab,YAAYxf,QAAQS,KAAK,SAAA0K;gCACzC,KAAKA,OACD,MAAM,IAAIhJ,MAAJ,kBAA2B6W,KAAK9a,OAAhC,sDAA0FoI,gBAAUjG;;2BAIvHI,KAAK;4BACJ,OAAOmO,IAAI3O,MAAM;gCAAED;gCAAQ+K;+BAAUiO,KAAKrU;2BAC3C,SAAAjE;4BACC,OAAOU,qBAAaiC,IAAI;gCACpB,IAAIuL,IAAI5L,SACJ,OAAO4L,IAAI5L,QAAQtC;+BAExBD,KAAK;gCACJ,MAAMC;;2BAEXD,KAAK,SAAAqB;4BACJ,OAAO;gCAAEA;gCAAQkQ;gCAAI9T;;;;;aAYjCoiB;YAEA,IAAMtO,KAAKpD,IAAI2R,UAAUpS;YACzBgS,cAAcjC,mBAAYwB,OAAOS;YACjC,IAAMjiB,OAAO0Q,IAAI4R,YAAY5R,IAAI1Q,QAAQgB;YAEzC,IAAIgf,mBAAYG,cAAc8B,cAAc;gBACxCL,UAAU9N,IAAIpD,KAAK1Q,MAAMiiB,aAAa5Z;gBAGtC4Z,YAAYZ,cAAc9e,KAAK,SAAAkF;oBAC3Bma,UAAU9N,IAAIpD,KAAK1Q,MAAMyH,KAAKY;;mBAGlCuZ,UAAU9N,IAAIpD,KAAK1Q,MAAMiiB,aAAa5Z;YAG1C,OAAO+T,cAAcjD,mBAAmBE,uBAAuB;gBAAEvF;gBAAI9T;;;QChGlE,SAASuiB,iBAA4BN,aAAmD5Z,QAAwB4F,KAAhHwO;YAAmL,IAAA+F,YAAxD9D,KAAwDjC,KAAxDiC,IAAI/D,OAAoD8B,KAApD9B;YAClI,OpB2CG,SAA8B1M,KAASwU;qBAAyD,MAAzDA,8BAA4B7F;gBAyBtE,IAAMhZ,SAASsJ,KAAKC,UAAUc,KAvB9B,SAAkBjN;oBACd,IAAM0P,MAAMrR,KAAK2B;oBAEjB,IAAIib,iBAAiB5c,OACjB,OAAOqR;oBAGX,IAAM2L,OAAOF,cAAczL;oBAE3B,KAAK2L,MACD,OAAO3L;oBAIX,IAAMgS,aAAaD,YAAYpG,SAASE,WAAWF;oBAEnD,OAAKqG,aAIEA,WAAWhS,KAAK1P,OAHZ0P;;gBAQf,YAAsB,MAAX9M,SACAwX,KAAKY,YAGTpY;aoB1EA6d,CAAUxT,OAADuU,aAAA,IACVpH,KAAKG,WAAY,SAAC7K,KAAgB1P;gBAAjB,OCEpB,SAA0BihB,aAAmD5Z,QAAwBqI,KAAgB1P,KAArHyb;oBAAwM,IAAnEiC,KAAmEjC,KAAnEiC,IAAI/D,OAA+D8B,KAA/D9B;oBAC5I,OAAOyB,cAAcjD,mBAAmBC,4BAA4B;wBAChE7W,MAAMyf,2BAAkBC,aAAa5Z,QAAQ,SAACtF,SAASgB;4BAAV,OAAqB2M,IAAInO,KAAKQ,SAASgB;2BAAS/C,KAAK;4BAAE0d;4BAAI/D;;;iBDJ/BgI,CAAiBV,aAAa5Z,QAAQqI,KAAK1P,KAAK;oBAAE0d;oBAAI/D;;eADnH6H,WAEVpH,KAAKC,YAAY,SAAC3K,KAAgB1P;gBAAjB,OAAuDghB,2BAAkBC,aAAa5Z,QAAQqI,KAAK1P,KAAK;oBAAE0d;oBAAI/D;;eAFrH6H,WAGVpH,KAAKO,UAAY,SAACjL;gBAChB,OAAQ1C,SAAS0C,QAAQsP,mBAAYG,cAAczP,OF4PxD,SAAyBuR,aAAmD5Z,QAAwBZ,KAApGwT;oBAAoL,IAAjDN,OAAiDM,MAAjDN;oBACtI,OAAOyB,cAAcjD,mBAAmBG,qBAAqB0G,mBAAYyB,UAAUha,KAAK;wBAAEkT;;iBE7PvBiI,CAAgBX,GAAa5Z,GAAQqI,KAAK;oBAAEgO;oBAAI/D;qBAAUjK;eAJ7G8R;;QASb,SAASK,mBAA8B/gB,QAA8C+K,QAAiBxC,SAAtGiM;YAA6K,IAAAwM,cAAnDpE,KAAmDpI,MAAnDoI,IAAI/D,OAA+CrE,MAA/CqE;YACjI,ORgCG,SAA8C9K,KAAckT;qBAA0D,MAA1DA,kCAAgC/F;gBAC/F,IAAInN,QAAQuL,KAAKY,WAmCjB,OAAO9O,KAAK8V,MAAMnT,KA9BlB,SAAkB7O,KAAK0P;oBACnB,IAAIuL,iBAAiB5c,OACjB,OAAOqR;oBAGX,IAAI2L,MACA3b;oBAEJ,IAAIub,iBAAiBvL,MAAM;wBACvB2L,OAAO3L,IAAIwL;wBACXxb,QAAQgQ,IAAI4L;2BACT;wBACHD,OAAOF,cAAczL;wBACrBhQ,QAAQgQ;;oBAGZ,KAAK2L,MACD,OAAO3b;oBAIX,IAAMuiB,eAAeF,cAAc1G,SAASQ,aAAaR;oBAEzD,OAAK4G,eAIEA,aAAaviB,OAAOM,OAHhBN;;aQ9DRihB,CAAYtX,WAADyY,eAAA,IACZ3J,mBAAmBC,8BAA8B,SAAC8J;gBAAD,OCF4C3gB,ODEe2gB,kBCFf3gB,MAC5F,IAAIW,qBAAaX;gBADrB,IAAgGA;eDCjFugB,aAEZ3J,mBAAmBE,yBAA8B,SAAC8J;gBAAD,ODsFpD,SAAgCrhB,QAA8C+K,QAA9EgO,OAAAG;oBAAqO,IAApIlH,KAAoI+G,MAApI/G,IAAI9T,OAAgI6a,MAAhI7a,MAA2C2a,OAAqFK,MAArFL,MAC7IyI,0BAA0B,SAACC;6BAAwB,MAAxBA,gBAAiB;wBAC9C,SAASC;4BAA0D,IAAAC,aAAA3hB;4BAO/D,OAAOoe,mBAAY0B,cAAc5f,QAAQ;gCAAE6Y;+BAAQ0G,cAAc9e,KAAK,SAAAkF;gCAClE,IAAMya,OAAOH,aAAata,KAAKqM;gCAE/B,OAAIoO,QAAQA,KAAKxR,QAAQ4S,6BACdpB,KAAKxR,IAAI3O,MAAM;oCAAED,QAAQK;oCAAQ0K,QAAQzE;mCAAexG,cAExD+Y,KAAKlT,KAAKqR,aAAaC,QAAQ;oCAAEjF;oCAAI9T;oCAAMyG,MAAMqG,MAAMzL,UAAUoM,MAAM7N,KAAKgC;mCAAc;oCAAEyG,QAAQwE;oCAAQmR,eAAeqF,KAAKrF;mCAClIzb,KAAK,SAAAuB;oCACF,KAAKuf,KAAKrF,eACN,OAAOla,IAAIgX,KAAKlX;;+BAKjCmB,MAAM,SAAAvC;gCAML,MAAMA;;;wBAId8gB,2BAA2BhB,WAAWtiB;wBACtCsjB,2BAA2BE,aAAa3W;wBACxCyW,2BAA2BG,aAAa3hB;wBACxCwhB,2BAA2BjB,SAASvO;wBAEpCwP,2BAA2BzW,SAASA;wBAEpC,OAAOyW;uBAGLA,6BAA6BF;oBACnCE,2BAA2BtF,gBAAgBoF,wBAAwB;wBAAEpF,gBAAe;;oBAEpF,OAAOsF;iBCpIwEI,CAAoB5hB,QAAQ+K,QAAQsW,oBAAoB;oBAAEzE;oBAAI/D;;eAF3HmI,aAGZ3J,mBAAmBG,uBAA8B,SAAC2G;gBAAD,OFuPpD,SAA2Bne,QAA8C+K,QAAiBpF,KAA1Fkc;oBAAsL,IAA7DjF,KAA6DiF,MAA7DjF,IAAI/D,OAAyDgJ,MAAzDhJ;oBAChI,OAAOqF,mBAAY2B,YAAYla,KAAK;wBAAEiX;wBAAI/D;;iBExPqCiJ,CAAkB9hB,GAAQ+K,GAAQoT,kBAAkB;oBAAEvB;oBAAI/D;;eAHvHmI;;QEbf,IAAMe,0BAA0B;YAEvCA,wBAAsD,SAACpc,KAA6Bqc,mBAA4Bzb;iBAUxGyE,MAAMC,QAAQ1E,UACJA,SACe,mBAAXA,SACJ,EAAEA,WAEF,EAAElB,sBAGEjB,IAAI,SAAA6d;oBAElB,IAAmC,MAA/BA,IAAI1f,QAAQ0C,SAASC,OAAa;wBAElC,IAAI7E,OAAOuF,SAASC,aAAaZ,SAASE,MACtC,OAAOE;wBAGX,KAAKoB,qBAAqBd,MACtB,MAAM,IAAIxD,MAAJ,gDAAyD8f,MAAzD;wBAIV,OAAO7b,gBAAgBT;;oBAG3B,OAAmC,MAA/Bsc,IAAI1f,QAAQ0C,SAASE,QACdE,qBAGJ4c;mBAGHC,QAAQ,SAAAD;oBACZtc,IAAIwc,YAAYH,mBAAmBC;;;YAMvCF,kBAAgD,SAACpc,KAA6Bqc,mBAA4Bzb;gBAEtG,IAAK4U,2BAA4BM,YAAjC;oBAIA,IAAI7U,aAAajB,MACb,MAAM,IAAIxD,MAAJ;oBAGV,KAAqC,MAAjCiI,gBAAgB/J,QAAQsF,MACxB,MAAM,IAAIxD,MAAJ;qBTqDX,SAA2BwD,KAA6BY,QAAiBgC;wBAE5E,IAAM6Z,iBAAkB1Y,SAASrJ,QAAQsF,MACnC0c,kBAAkB3Y,SAAS/D,KAAKtF;wBAEtC,KAAK+hB,mBAAmBC,iBACpB,MAAM,IAAIlgB,MAAJ;wBAGHyZ,iBAAiBjW,KAAKlF,KAAK,SAAAsb;4BAC9B,OAAOA,YAAYpW,KAAKY,QAAQgC;;qBS5DhC+Z,CAAkB3c,KAAKY,QAAQyb;;;YAMnCD,kBAAgD,SAACpc,KAA6Bqc;gBAE1E,IC5EA7Y,mBAAa9I,QAAQ8K,MAAM,0CD4E3B;oBAIA,KAAKvE,aAAajB,MACd,MAAM,IAAIxD,MAAJ;oBAGV,KAAqC,MAAjCiI,gBAAgB/J,QAAQsF,MACxB,MAAM,IAAIxD,MAAJ;oBAIV,IAAMogB,gBAAgB9K,iBAAU9R;oBAEhC,KAAK4c,eACD,MAAM,IAAIpgB,MAAJ;oBAGVogB,cAAc1F,eAAe;wBACzB7c,QAAQK;wBACR0K,QAAQzE;wBACR0S,MAAQgJ;;;;;QE7Fb,SAASjG,iBAAYpW,KAA6BY,QAAwBgC,SAA1EoS;YAA8I,IAAA6H,mBAA/C5F,KAA+CjC,KAA/CiC,IAAI/D,OAA2C8B,KAA3C9B;YACtG,IAAIzQ,eAAezC,MACf,MAAM,IAAIxD,MAAM;YAF6H,KAKjJ,IAQIT,OAREsgB,oBAAoBvB,iBAAiB9a,KAAKY,UAANic,oBAAA,4BAAA7iB,SAAA;gBAElCqS,IAAI7D;eACD5F,UAH+Bia,oBAKvC;gBAAE5F;gBAAI/D;gBAEL4J,WAAU,GAZmI1R,MAAA,GAAAsC,gBAetHhV,OAAO8F,KAAK4d,0BAf0GhR,MAAAsC,cAAAtT,QAAAgR,OAehF;gBAA5D,IAAM2R,eAAYrP,cAAAtC;gBACnB;oBACIgR,wBAAwBW,cAAc/c,KAAKqc,mBAAmBzb;oBAC9Dkc,WAAU;kBACZ,OAAO/hB;oBACLgB,QAAQA,SAAShB;;;YAIzB,KAAK+hB,SACD,MAAM/gB;;QCpBd,2BAAMihB,mBAAmB;QAuBlB,SAASC,oBAAoB1e;YAEhC,OAD0ByT,YAAY,qBACbnZ,IAAI0F;;QAG1B,SAAS2e,uBAAuB3e;YACTyT,YAAY,qBACpBK,IAAI9T;;QAQnB,SAAS4e,0BAA0B5e;YAEtC,OADiCyT,YAAY,4BACb/J,IAAI1J;;QAGjC,SAAS6e,mBAATpI;YAAsK,IAAxIzc,OAAwIyc,KAAxIzc,MAAMyH,MAAkIgV,KAAlIhV,KAAKY,SAA6HoU,KAA7HpU,QACtCyc,mBAAmB1K,YAAY;YAEjC3S,QAAQN,uBACRM,MAAM;YAGNY,WAAWlB,uBACXkB,SAAS;YAGb,KAAKrI,MACD,MAAM,IAAIiE,MAAJ;YAZ+J,SAAA4O,MAAA,GAAA6H,QAe9I,EAAEjT,KAAKwS,iBAfuIpH,MAAA6H,MAAA7Y,QAAAgR,OAetH;gBAA9C,IAAMkS,eAAYrK,MAAA7H;gBACnB,IAAKkS,cAAL;oBAIA,IAAMC,gBAAgBF,iBAAiBxkB,IAAIykB;oBAE3C,IAAKC,eAAL;wBAIA,IAAMC,kBAAkBD,cAAchlB;wBAEtC,IAAKilB,iBAAL;4BAIA,IAAI5c,UAA4B,mBAAXA,QAAqB;gCACtC,IAAI4c,gBAAgB5c,SAChB,OAAO4c,gBAAgB5c;gCAG3B,IAAI4c,gBAAgBR,mBAAmB,SAAAS,MAAA,GAAAC,yBACDF,gBAAgBR,mBADfS,MAAAC,uBAAAtjB,QAAAqjB,OACkC;oCAAA,IAAAE,yBAAAD,uBAAAD,MAAxDG,QAAwDD,uBAAxDC,OAAOC,WAAiDF,uBAAjDE;oCAChB,IAAI3Y,YAAY0Y,OAAOhd,SACnB,OAAOid;;;4BAMvB,IAAIL,gBAAgB9d,qBAChB,OAAO8d,gBAAgB9d;;;;;;QC9F5B,ICEI4X,YDFEwG,0BAAqBC,wBAAA,IAE5B9M,aAAaC,WAFe,SAEL7W,QAAgC+K,QAAiBxC,SAF5CoS;YAE4I,IAApEiC,KAAoEjC,KAApEiC,IAAI/D,OAAgE8B,KAAhE9B,MAEhGjG,UAAUmQ,mBAAmB;gBAAE7kB,MAAMqK,QAAQrK;gBAAMyH,KAAK3F;gBAAQuG,QAAQwE;;YAE7DxC,QAAQrK,SAAS8Y,aAAaC,UAAU1O,QAAQyQ,QAAqC,mBAAtBzQ,QAAQyQ,KAAK9a,OAAyBqK,QAAQyQ,KAAK9a,OAAYqK,QAAQrK;YAOvJ,SAASylB,aAAapJ,MAAqCqJ,KAAoCC;qBAAe,MAAfA,wBAAW;gBAElGtb,QAAQ2T,iBAAiB9T,eAAepI,WAe5C+b,iBAAY/b,QAAQ+K,QAATpL,SAAA;oBACP4a;oBACAqJ;oBACA1f,MAAQqE,QAAQrE;oBAChBhG,MAAQqK,QAAQrK;mBACb2lB,WACJ;oBAAEjH;oBAAI/D;;;YAGb,OAAOzX,qBAAawC,IAAI,EAEpB+f,aAAa/M,aAAaG,MAE1B3V,qBAAaiC,IAAI;gBAEb,KAAKuP,SACD,MAAM,IAAIzQ,MAAJ,wCAAiDoG,QAAQrK,OAAzD,WAAwE6M,SAAxE,SAAuF1K,OAAOuF,SAASC,WAAvG,OAAsHxF,OAAOuF,SAASS,OAAShG,OAAOuF,SAASke;gBAGzK,KAAKjZ,YAAY+H,QAAQrM,QAAQwE,SAC7B,MAAM,IAAI5I,MAAJ,oBAA6B4I,SAA7B,4BAA+D6H,QAAQrM,OAAO/F;gBAGxF,IAAMwY,OAAOzQ,QAAQyQ;gBAErB,OAAOpG,QAAQvR,QAAQ;oBAAErB;oBAAQ+K;oBAAQiO;;eAE1CvY,KAAK,SAAAuY;gBACJ,OAAO2K,aAAa/M,aAAaE,UhC7DnC,WgC6DkE;oBAAEkC;;eAEnE,SAAAtX;gBACC,OAAOiiB,aAAa/M,aAAaE,UhC/DnC,SgC+DgE;oBAAEpV;;kBAGrEjB,KAAK0O,eAAMlM,MAAM,SAAAvC;gBAChB,IAAIkS,WAAWA,QAAQmR,aACnB,OAAOnR,QAAQmR,YAAYrjB;gBAE3B,MAAMA;;WApEYgjB,sBAyE5B9M,aAAaG,OAzEe,SAyET/W,QAAgC+K,QAAiBxC;YAElE,KAAIua,0BAA0Bva,QAAQrE,OAAtC;gBAIA,IAAM0O,UAAUgQ,oBAAoBra,QAAQrE;gBAE5C,KAAK0O,SACD,MAAM,IAAIzQ,MAAJ,wDAAiEoG,QAAQrK,OAAzE,WAAwF6M,SAAxF,SAAuG1K,OAAOuF,SAASC,WAAvH,OAAsIxF,OAAOuF,SAASS,OAAShG,OAAOuF,SAASke;gBAGzL,KAAKjZ,YAAY+H,QAAQrM,QAAQwE,SAC7B,MAAM,IAAI5I,MAAJ,gBAAyB4I,SAAzB,4BAA2D6H,QAAQrM,OAAO/F;gBAGpF,IAAIR,WAAW4S,QAAQjN,KACnB,MAAM,IAAIxD,MAAJ;gBAGVyQ,QAAQgR,OAAM;;WA7FYF,sBAgG5B9M,aAAaE,YAhGe,SAgGJ9W,QAAgC+K,QAAiBxC;YAEvE,KAAIua,0BAA0Bva,QAAQrE,OAAtC;gBAIA,IxC6uB+B4G,SwC7uBzB8H,UAAUgQ,oBAAoBra,QAAQrE;gBAE5C,KAAK0O,SACD,MAAM,IAAIzQ,MAAJ,6DAAsEoG,QAAQrK,OAA9E,WAA6F6M,SAA7F,SAA4G1K,OAAOuF,SAASC,WAA5H,OAA2IxF,OAAOuF,SAASS,OAAShG,OAAOuF,SAASke;gBAG9L,KAAKjZ,YAAY+H,QAAQrM,QAAQwE,SAC7B,MAAM,IAAI5I,MAAJ,qBAA8B4I,SAA9B,6BxCsuBqBD,UwCtuBkE8H,QAAQrM;gBxCuuBzGyE,MAAMC,QAAQH,WACd,MAAYA,QAAQc,KAAK,SAAzB,MACO5G,QAAQ8F,WACf,YAAkBA,QAAQtK,aAEnBsK,QAAQtK;gBwCzuBf,IAAIR,WAAW4S,QAAQjN,KACnB,MAAM,IAAIxD,MAAJ;gBAGV0gB,uBAAuBta,QAAQrE;gBAEdqE,QAAQrK,SAAS8Y,aAAaC,UAAU1O,QAAQyQ,QAAqC,mBAAtBzQ,QAAQyQ,KAAK9a,OAAyBqK,QAAQyQ,KAAK9a,OAAYqK,QAAQrK;gBhCxHjJ,YgC0HFqK,QAAQqb,MAKRhR,QAAQ5R,QAAQiB,OAAOsG,QAAQ7G,ShChI7B,cgCkIK6G,QAAQqb,OAKfhR,QAAQ5R,QAAQC,QAAQ;oBAAEjB;oBAAQ+K;oBAAQiO,MAAMzQ,QAAQyQ;;;WApIlC0K;QEmC3B,SAAS7G,uBAAe3I,OAAxBM;YAA+F,IAA/CoI,KAA+CpI,MAA/CoI,IAAI/D,OAA2CrE,MAA3CqE,MACjDmL,mBAAmBrM,YAAY;YAErC,KAAKtX,UAAUA,OAAOiI,QAClB,MAAM,IAAInG,MAAJ;YAGV;gBACI,KAAK+R,MAAMlU,QACP;cAEN,OAAOU;gBACL;;YAZ8F,IAe5FV,SAAyBkU,MAAzBlU,QAAQ+K,SAAiBmJ,MAAjBnJ,QAORxC,UAzDV,SAAsBA,SAAkBvI,QAAgC+K,QAAxE4P;gBAAoJ,IAE5IsJ,eAFmFrH,KAAyDjC,KAAzDiC,IAAI/D,OAAqD8B,KAArD9B;gBAI3F;oBACIoL,gBAAgBlD,mBAAmB/gB,QAAQ+K,QAAQxC,SAAS;wBAAEqU;wBAAI/D;;kBACpE,OAAOnY;oBACL;;gBAGJ,IAAKujB,iBAIwB,mBAAlBA,iBAAgD,SAAlBA,kBAIzCA,gBAAgBA,cAAa,0BAEkB,mBAAlBA,iBAAgD,SAAlBA,iBAItDA,cAAc1J,QAAsC,mBAAvB0J,cAAc1J,QAI3CkJ,sBAAsBQ,cAAc1J,OAIzC,OAAO0J;aAyBSC,CAPehQ,MAAT8E,MAOahZ,QAAQ+K,QAAQ;gBAAE6R;gBAAI/D;;YAEzD,IAAKtQ,SAAL;gBAIA8Q,gBAAgBrZ;gBAEhB,KAAIgkB,iBAAiBpW,IAAIrF,QAAQyJ,KAAjC;oBAIAgS,iBAAiB5W,IAAI7E,QAAQyJ,KAAI;oBAE7B5J,eAAepI,YAAYuI,QAAQ2T,iBAIvCuH,sBAAsBlb,QAAQgS,MAAMva,QAAQ+K,QAAQxC,SAAS;wBAAEqU;wBAAI/D;;;;;QC/EhE,SAAS+D,MAAG1e,MAAe0U,SAA2CvR;YAEzE,KAAKnD,MACD,MAAM,IAAIiE,MAAM;YAGpB,IAAuB,qBAAZyQ,SAAwB;gBAC/BvR,UAAUuR;gBAEVA,UAAU;;YAGd,KAAKvR,SACD,MAAM,IAAIc,MAAM;aAGpByQ,UAAUA,WAAW,IACb1U,OAAOA;YACf0U,QAAQvR,UAAUA,WAAWuR,QAAQvR;YAErC,IAAMsE,MAAMiN,QAAQvS,QACdkG,SAASqM,QAAQrM,QAYjB4d,kBJsEH,SAASC,mBAATrL,OAA2IyK;gBAA0D,IAAvKtlB,OAAuK6a,MAAvK7a,MAAMyH,MAAiKoT,MAAjKpT,KAAKY,SAA4JwS,MAA5JxS,QACtCyc,mBAAmB1K,YAAY;gBAErC,KAAKpa,QAAwB,mBAATA,MAChB,MAAM,IAAIiE,MAAJ;gBAGV,IAAI6I,MAAMC,QAAQtF,MAAM;oBAAA,KACpB,IAAM0e,sBAAsB,IADRjR,MAAA,GAAAkR,QAGD3e,KAHCyN,MAAAkR,MAAAvkB,QAAAqT,OAGI;wBAAnB,IAAMjT,OAAImkB,MAAAlR;wBACXiR,oBAAoB7hB,KAAK4hB,mBAAmB;4BAAElmB;4BAAMqI;4BAAQZ,KAAKxF;2BAAQqjB;;oBAG7E,OAAO;wBACHhf,QADG;4BACM,SAAA+f,MAAA,GAAAA,MACwBF,oBADxBtkB,QAAAwkB,OACwBF,oBAAJE,KACN/f;;;;gBAM/B,IAAIwG,MAAMC,QAAQ1E,SAAS;oBAAA,KACvB,IAAM8d,uBAAsB,IADLG,OAAA,GAAAC,WAGJle,QAHIie,OAAAC,SAAA1kB,QAAAykB,QAGI;wBAAtB,IAAMrkB,QAAIskB,SAAAD;wBACXH,qBAAoB7hB,KAAK4hB,mBAAmB;4BAAElmB;4BAAMyH;4BAAKY,QAAQpG;2BAAQqjB;;oBAG7E,OAAO;wBACHhf,QADG;4BACM,SAAAkgB,OAAA,GAAAA,OACwBL,qBADxBtkB,QAAA2kB,QACwBL,qBAAJK,MACNlgB;;;;gBAM/B,IAAMmgB,mBAAmB5B,mBAAmB;oBAAE7kB;oBAAMyH;oBAAKY;;gBAEpDZ,OAAOA,QAAQN,uBAChBM,MAAMwS;gBAGV5R,SAASA,UAAUlB;gBAEnB,IAAIsf,kBACA,MAAIhf,OAAOY,SACD,IAAIpE,MAAJ,yCAAkDjE,OAAlD,gBAAsEqI,OAAO/F,aAA7E,WAAiGmF,QAAQwS,gBAAgB,aAAa,eAAtI,aACCxS,MACD,IAAIxD,MAAJ,yCAAkDjE,OAAlD,WAAgEyH,QAAQwS,gBAAgB,aAAa,eAArG,aACC5R,SACD,IAAIpE,MAAJ,yCAAkDjE,OAAlD,gBAAsEqI,OAAO/F,cAE7E,IAAI2B,MAAJ,yCAAkDjE;gBAIhE,IAMI0mB,gBACAC,eAPE3B,gBAAgBF,iBAAiBnV,SAASlI,KAAK;oBAAA,OAAO;oBAEtDwd,kBAAkBtV,cAASqV,eAAehlB,MAAM;oBAAA,OAAO;oBAEvD4mB,YAAYve,OAAO/F;gBAKzB,IAAIwE,aAAQuB,SAAS;oBACjBqe,iBAAiB/W,cAASsV,iBAAiBR,kBAAkB;wBAAA,OAAM;;oBACnEkC,gBAAgB;wBAAEtB,OAAOhd;wBAAQid;;oBACjCoB,eAAepiB,KAAKqiB;uBAEpB1B,gBAAgB2B,aAAatB;gBAGjC,OAAO;oBACHhf,QADG;+BAEQ2e,gBAAgB2B;wBAEvB,IAAID,eAAe;4BACfD,eAAengB,OAAOmgB,eAAeriB,QAAQsiB,eAAe;4BAEvDD,eAAe7kB,iBACTojB,gBAAgBR;;wBAI1BtkB,OAAO8F,KAAKgf,iBAAiBpjB,iBAEvBmjB,cAAchlB;wBAIrByH,QAAQtH,OAAO8F,KAAK+e,eAAenjB,UACnCijB,iBAAiBhL,IAAIrS;;;aIrKTye,CAAmB;gBAAElmB;gBAAMyH;gBAAKY;eAVV;gBAC1ClF,SAAauR,QAAQvR;gBACrB0iB,aAAanR,QAAQmS,gBAAiB,SAAArkB;oBAClC,MAAMA;;gBAEVL,QAAQsF;gBACRY,QAAQA,UAAUlB;gBAClBnH;;YAKJ,OAAO;gBACHsG,QADG;oBAEC2f,gBAAgB3f;;;;QC9BrB,SAASqU,UAAKlT,KAA6BzH,MAAe8a,MAAgBpG;YAI7E,IAAIrM,UADJqM,UAAUA,WAAW,IACArM,UAAUlB,oBACzB2f,kBAAkBpS,QAAQtP,WAAWqT,aACrCsO,eAAerS,QAAQtP,WAAWkT,sBAClC0F,gBAAgBtJ,QAAQsJ,kBAAiB;YAuI/C,OArIa9a,qBAAaiC,IAAI;gBAC1B,KAAKnF,MACD,MAAM,IAAIiE,MAAM;gBAGpB,IAAIoE,UACsB,mBAAXA,WAAwByE,MAAMC,QAAQ1E,YAAYvB,aAAQuB,SACjE,MAAM,IAAI5C,UAAJ;gBAId,IAAIyE,eAAezC,MACf,MAAM,IAAIxD,MAAM;gBAGpB,IAAM+iB,cAAc5M,YAAY,mBAAmBzK,SAASlI,KAAK;oBAAA,OAAM;oBAGjEwf,iBAAiB/jB,qBAAaiC,IAAI;oBAEpC,O5CwoBL,SAAoB0C,QAAgCgB;wBAEvD,IAAIqe,eAAezb,YAAY5C;wBAE/B,IAAIqe,cACA,OAAIA,iBAAiBrf;wBAOzB,IAAIgB,UAAUhB,QACV,QAAO;wBAGX,IAAI6B,OAAOb,WAAWA,OAClB,QAAO;wBAjBqF,SAAAse,OAAA,GAAAC,cAoB9Epe,UAAUnB,SApBoEsf,OAAAC,YAAAvlB,QAAAslB,QAqB5F,IADUC,YAAAD,UACIte,OACV,QAAO;wBAIf,QAAO;qB4ClqBKwe,CAAWllB,QAAQsF,OACZyT,iBAAiBzT,KAAKsf,gBACtBjgB,aAAQuB,UACRoS,SAAShT,KAAK;wBAAEkT;8BADpB;mBAKRpY,KAAK,SAAA8T;oBAA6B,IAAlBxJ,eAAkB,MAAAwJ,QAAP,KAAOA,OAA1BhO;oBAEP,IAAIvB,aAAQuB,SAAS;wBACjB,KAAKsE,YAAYtE,QAAQwE,SAErB,MAAM,IAAI5I,MAAJ,0BAAmC4I,SAAnC,4BAAqExE,OAAOvG;wBAEtFuG,SAASwE;;oBAGI7M,SAAS8Y,aAAaC,UAAU+B,QAA6B,mBAAdA,KAAK9a,QAAyB8a,KAAK9a;oBAMnG,IAAIsnB,aAAY,GAEVxkB,UAAU,IAAII;oBACpBJ,QAAQmC,QAAQ;wBACZqiB,aAAY;wBACZN,YAAYzgB,OAAOygB,YAAY3iB,QAAQ4iB,gBAAgB;uBACxDliB,MAAMkM;oBAET,IAAMjL,OAAWhG,OAAP,MAAiBiQ;oBAE3B4N,iBAAYpW,KAAKY,QAAQ;wBACrBgU,MAAM3D,aAAaC;wBACnB3S;wBACAhG;wBACA8a;wBACAkD;uBACD;wBAAEU;wBAAI/D;;oBAET,IAAIqD,eACA,OAAOlb,QAAQC;oBAGnBD,QAAQiC,MAAM;yBLxCnB,SAAqCiB;4BACPyT,YAAY,4BACpBvK,IAAIlJ,OAAM;yBKuCvBuhB,CAA4BvhB;wBAC5B2e,uBAAuB3e;;oBAG3B,IAAMwhB,mBAA0C;wBAC5CxnB;wBACAyH;wBACAY;wBACAvF;;qBLhET,SAA6BkD,MAAesf;wBACrB7L,YAAY,qBACpBvK,IAAIlJ,MAAMsf;qBKiEpBmC,CAAoBzhB,MAAMwhB;oBAE1B,IAAME,kBjC5FX,SAAuBjgB;wBAE1B,OADqB2S,YAAY,gBACb9Z,IAAImH,MAAK;qBiC0FGkgB,CAAclgB,OAAO+Q,oBAAoBD,aAC3DqP,kBAAkBd,iBAEpBe,aAAaH,iBACbI,aAAaF,iBAEbG,YAAY;oBAuChB3jB,WArCc,SAAR4jB;wBACF,KAAIV,WAAJ;4BAIA,IAAIpd,eAAezC,MACf,OAAK+f,iBAAiB9B,MAGX5iB,QAAQiB,OAAO,IAAIE,MAAJ,uBAAgCjE,OAAhC,uBAFf8C,QAAQiB,OAAO,IAAIE,MAAJ,uBAAgCjE,OAAhC;4BAM9B6nB,aAAajZ,KAAKyJ,IAAIwP,aAAaE,WAAW;6BAC1B,MAAhBD,eACAA,aAAalZ,KAAKyJ,IAAIyP,aAAaC,WAAW;4BAKlD,IAFeP,iBAAiB9B,KAEpB;gCACR,KAAoB,MAAhBoC,YACA;gCAGJC,YAAYnZ,KAAKqZ,IAAIH,YAAY;mCAE9B;gCAAA,IAAmB,MAAfD,YACP,OAAO/kB,QAAQiB,OAAO,IAAIE,MAAJ,4BAAqCjE,OAArC,SAAkDoI,oBAAlD,SAAsEsf,kBAAtE;gCAEnB,IAAmB,MAAfI,YACP,OAAOhlB,QAAQiB,OAAO,IAAIE,MAAJ,iCAA0CjE,OAA1C,SAAuDoI,oBAAvD,SAA2Ewf,kBAA3E;;4BAG1BxjB,WAAW4jB,OAAOD;;uBAGJA;oBAElB,OAAOjlB;;gBAGXkkB,YAAY1iB,KAAK2iB;gBACjB,OAAOA;;;QC/IR,SAAS1E,uBAAoBN,aAAmD5Z,QAAwB4F;YAC3G,OAAOia,iBAAyBjG,aAAa5Z,QAAQ4F,KAAK;gBAAEyQ;gBAAI/D;;;QAG7D,SAASkI,yBAA8B/gB,QAA8C+K,QAAiBxC;YACzG,OAAO8d,mBAA2BrmB,QAAQ+K,QAAQxC,SAAS;gBAAEqU;gBAAI/D;;;QAG9D,SAAS+G,oBAAcja;YAC1B,OAAOuY,mBAAY0B,cAAcja,KAAK;gBAAEkT;;;QCbrC,SAASyN,cAAc3gB;YAA6B,KACvD,IADuDoL,MAAA,GAAAwV,wBAC/BjO,YAAY,mBACE9Z,IAAImH,KAAK,KAFQoL,MAAAwV,sBAAAxmB,QAAAgR,OAErCwV,sBAAAxV,KACN9O,OAAO,IAAIE,MAAJ,sCAAgDc,MAAMkM;;QLOzE8N,aAAS;YAAEP;YAAa8J,Yb+FrB,SAAoB/a,KAAclF;gBACrC,IAAMkgB,UAAU9O,YAAY,YACtB+O,eAAe/O,YAAY;gBAEjCpR,SAASA,UAAUiF,iBAAiBC;gBAEpC,OAAOgb,QAAQ5Y,SAAStH,QAAQ;oBAAA,OAAMnF,qBAAaiC,IAAI;wBAEnD,IAAIiD,sBAAgBC,QAChB,MAAM,IAAIpE,MAAJ,+DAAwEoE;wBAGlF,IAAMrI,OAAQqd,cAAchV;wBAG5B,IAFcgD,eAAelJ,QAAQnC,OAGjC,MAAM,IAAIiE,MAAJ,qBAA8BjE,OAA9B;wBAGV,IAAMyU,SA/Cd,SAAyBzU,MAAeuN;4BAEpC,IAAMkH,SAASvC,SAAS4C,cAAT;4BAEfL,OAAOQ,aAAP,QAA4BjV;4BAC5ByU,OAAOQ,aAAP,MAA4BjV;4BAE5ByU,OAAOQ,aAAP;4BACAR,OAAOQ,aAAP;4BACAR,OAAOQ,aAAP;4BACAR,OAAOQ,aAAP;4BACAR,OAAOQ,aAAP;4BAEAR,OAAOQ,aAAP;4BACAR,OAAOQ,aAAP;4BACAR,OAAOQ,aAAP;4BACAR,OAAOQ,aAAP;4BAEAR,OAAOgU,MAAMlb;4BAEb,OAAOkH;yBA2BYiU,CAAgB1oB,MAAMuN;wBACrCib,aAAatZ,IAAI7G,QAAQoM;wBAEzB,OAAO+I,kBAAkBjb,KAAK,SAAA4P;4BAE1BA,KAAKmB,YAAYmB;4BACjB,IAAMsK,SAAStK,OAAO/J;4BAEtB,OAAO,IAAIxH,qBAAa,SAACH,SAASgB;gCAE9B0Q,OAAOL,iBAAiB,QAAQrR;gCAChC0R,OAAOL,iBAAiB,SAASrQ;+BAElCxB,KAAK;gCAEJ,OAAO2Y,iBAAiB6D,QrBhJV,KqBgJS,YAAoCxR;+BAE5DhL,KAAK;gCAEJ,OAAOwc;;;;;;YarIiBb;YAAYyK,Sb6L7C,SAAiBlhB,KAA6B8F;gBACjD2Q,WAAW;oBAAEzW;oBAAKY,QAAQiF,iBAAiBC;;;Ya9LcgQ;YAAUH;YAC/DH;YAAuB2L,WbyFxB,SAAmBrb,KAAclF;gBAEpC,OADgBoR,YAAY,WACb/J,IAAIrH,UAAUiF,iBAAiBC;;Ya3FR2P;YAAmBC;YAAsB0L,gBbgN5E;gBAA0B,KAC7B,IAAMN,UAAU9O,YAAY,YACtB+O,eAAe/O,YAAY,iBAFJyL,MAAA,GAAA4D,sBAIRN,aAAaviB,QAJLif,MAAA4D,oBAAAjnB,QAAAqjB,OAIa;oBAArC,IAAM7c,SAAMygB,oBAAA5D,MACP/b,QAAQqf,aAAaloB,IAAI+H;oBAC3Bc,SAASA,MAAMwB,cACfxB,MAAMwB,WAAWoL,YAAY5M;;gBAGrCqf,aAAazO;gBACbwO,QAAQxO;;;SiBtNL;YACH,KAAKR,mBAAYwP,aAAa;gBAC1BxP,mBAAYwP,eAAc;iBH8G3B,SAAA/N;oBAA6F,IAAhE0D,KAAgE1D,MAAhE0D,IAAI/D,OAA4DK,MAA5DL;oBAC7BlB,cAAc9J,SAAS,wBAAwB;wBAElD,OAAOyE,iBAAiBjS,QAAQ,WAAW,SAAA6T;6BAnC5C,SAAyBA,OAAzB6E;gCAAiG,IAA/C6D,KAA+C7D,MAA/C6D,IAAI/D,OAA2CE,MAA3CF;gCAEzD;oCACS3E,MAAMlU;kCACb,OAAOU;oCACL;;gCAIJ,IAAMwmB,eAA8B;oCAChClnB,QAAQkU,MAAMlU,UAAUkU,MAAMiT;oCAC9Bpc,QAAQmJ,MAAMnJ,UAAWmJ,MAAMkT,iBAAiBlT,MAAMkT,cAAcrc;oCACpEiO,MAAQ9E,MAAM8E;;gCAGlB,IAAKkO,aAAalnB,QAAlB;oCAIA,KAAKknB,aAAanc,QACd,MAAM,IAAI5I,MAAJ;oCASV0a,uBAAeqK,cAAc;wCAAEtK;wCAAI/D;;;6BAQ3BwO,CAAgBnT,OAAO;gCAAE0I;gCAAI/D;;;;iBGjHjCyO,CAAkB;oBAAE1K;oBAAI/D;;gBAGpB6D,YAAY;oBAAEE;oBAAI/D;oBAAMgE;;iBnCU7B,SAAAgF;oBAAqF,IAAhEjF,KAAgEiF,MAAhEjF,IAAI/D,OAA4DgJ,MAA5DhJ;oBACrBlB,YAAY,oBAAoB9J,SAAS,iBAAiB;wBAC7D,IAAM2V,WAA4B5G,GAtB5B5F,aAAaE,OAAO;4BAAE3Q,QAAQlB;2BAAY,SAAAmP;4BAAwB,IAArBxU,SAAqBwU,MAArBxU,QAAQ+K,SAAayJ,MAAbzJ;4BAC3D2N,gBAAgB1Y,QAAQiB,QAAQ;gCAAE0E,KAAK3F;gCAAQuG,QAAQwE;;4BACvD,OAAO;gCAAE+N,YAAYL;;4BAsBf1S,SAAS4D;wBACX5D,UACA4S,SAAS5S,QAAQ;4BAAE8S;2BAAQ5V,MAAMkM;wBAGrC,OAAOqU;;iBmChBP+D,CAAU;oBAAE3K;oBAAI/D;;gBHyDoB+D,MAArChE,QGxD2B;oBAAEgE;oBAAI/D;mBHwDI+D,IAAI/D,OAA2CD,MAA3CC,OACtCT,SAASX,oBACRoF,iBAAiBzE,OAAOyE,kBAAmB,SAAAtU;oBAAO,OAAIsU,uBAAetU,SAAS;wBAAEqU;wBAAI/D;;;;YAFxF,IAAAD,OAAqCgE,IAAI/D,MACtCT;SDrENoP;QMlBG,SAASC,UAAU9hB;YAEtB,KAAKiB,aAAajB,MACd,MAAM,IAAIxD,MAAJ;YAGLwD,IAAG,mBACJA,IAAG,iBAA4B;YAGnC,OAAOA,IAAG;;QCJP,SAAS+hB,gBAAiC/V;YAC7C,OAAO;gBACHgW,QADG,SAAAhN;oBAC+D,IAAzDjG,QAAyDiG,KAAzDjG,OAAOE,SAAkD+F,KAAlD/F;oBACS,mBAAVF,UACP/C,QAAQG,MAAM4C,QAAQ0B,MAAM1B;oBAGV,mBAAXE,WACPjD,QAAQG,MAAM8C,SAASwB,MAAMxB;;gBAIrCZ,YAXG;oBAW4B,IAAA1S,QAAA/D;oBAC3B,OAAO6D,qBAAaiC,IAAI;wBACpB,IAAI/B,MAAKtB,UAAUsB,MAAKtB,WAAWK,QAC/B,MAAM,IAAI8B,MAAJ;wBAGV,OAAOwP;;;;;QCxBhB,IAAMiW,OAAI,QAEJC,wBACWD,OAAZ,aADCC,8BAEWD,OAAN,mBAGLE,YAAY;YACrBhO,QAAM;YACND,QAAM;YACNN,UAAQ;YACRS,SAAO;YACPD,QAAM;YACNH,OAAK;WAeImO,qBAAqB;YAC9B3c,MAAS;YACT4c,QAAS;YACTC,QAAS;WAGAC,UAAU5iB,aAEVD,yBAAW,KAEX8iB,qBAAqB;YAC9BC,OAAQ;YACRC,QAAQ;WAGCC,QAAQ;YACjBC,QAAU;YACVC,UAAU;YACVC,SAAU;YACVjP,OAAU;YACVkP,OAAU;YACVC,OAAU;;QC5CP,SAASC,mBAAyBC,WAA0BxX,OAAwBnS,KAAcN,OAAWkqB;YAGhH,IAAMC,OAAoCF,UAAUG,kBAAkB9pB;YAEtE,OAAK6pB,QAI6B,qBAAvBA,KAAKE,gBACLF,KAAKE,cAALtpB,SAAA;gBAAqBf;eAAUkqB,YAJ/BlqB;;QCRf,SAASsqB,qBAAqBC;YAC1B,OAAOpa,cAAcma,sBAAsB;gBACvC,KAAKC,YACD,MAAM,IAAIhnB,MAAJ;gBAFmC,IAAAinB,oBAKAD,WAAWzd,MAAM,OAApD2d,WALmCD,kBAAA,IAKzBlrB,OALyBkrB,kBAAA,IAKnBE,iBALmBF,kBAAA;gBAO7C,IAAIC,aAAazB,MACb,MAAM,IAAIzlB,MAAJ,uCAAgDknB;gBAG1D,KAAKnrB,MACD,MAAM,IAAIiE,MAAJ;gBAGV,KAAKmnB,gBACD,MAAM,IAAInnB,MAAJ;gBAGV;oBACI,OAAOiJ,KAAK8V,MhDVjB,SAAsBnT;wBACzB,IAAsB,sBAAX1N,UAAiD,qBAAhBA,OAAOkpB,MAC/C,OAAOlpB,OAAOkpB,KAAKxb;wBAGvB,IAAsB,sBAAXE,QACP,OAAOA,OAAOC,KAAKH,KAAK,UAAUvN,SAAS;wBAG/C,MAAM,IAAI2B,MAAJ;qBgDCoBqnB,CAAaF;kBACjC,OAAO5oB;oBACL,MAAM,IAAIyB,MAAJ,yCAAkDmnB,iBAAlD,OAAuEha,eAAe5O;;eAEjG,EAAEyoB;;QAGF,SAASM;YACZ;gBACI,OAAOP,qBAAqB7oB,OAAOnC;cACrC,OAAOwC;;QCMN,IAAMgpB,uBAAb;YAWI,SAAAA,eAAYb;gBAA0B,IAAAvnB,QAAA/D;gBAAAA,KATtCsrB,iBASsC;gBAAAtrB,KARtC8T,aAQsC;gBAAA9T,KAPtCmH,eAOsC;gBAAAnH,KANtCwI,cAMsC;gBAAAxI,KALtCosB,6BAKsC;gBAAApsB,KAHtCqsB,sBAGsC;gBAAArsB,KAFtCssB,kBAEsC;gBAClCzoB,qBAAaiC,IAAI;oBACb/B,MAAKunB,YAAYA;oBACjBvnB,MAAKsoB,iBAAiB;oBAEtB,IAAME,eAAeL;oBAErB,KAAKK,cACD,MAAM,IAAI3nB,MAAJ;oBAPS,IAUX4D,SAA4C+jB,aAA5C/jB,QAAQQ,SAAoCujB,aAApCvjB,QAAQrJ,UAA4B4sB,aAA5B5sB,SAASwH,UAAmBolB,aAAnBplB,SAAS2M,QAAUyY,aAAVzY;oBAE1C/P,MAAKoD,UAAUA;oBACfpD,MAAKqoB,wBAAwBroB,MAAKyoB,yBAAyBhkB;oBAC3DzE,MAAKyE,SAASgb,yBAAmBzf,MAAKqoB,uBAAuBpjB,QAAQrJ;oBAErEoE,MAAK0oB,kBAAkBzjB;oBAEvB,IAAM0jB,eAAe3oB,MAAK4oB,cAAc5oB,MAAKqoB,uBAAuBpjB,QAAQ8K;oBAC5E/P,MAAK6oB,SAASF,cAAc1jB;oBAC5B8S,gBAAgB/X,MAAKqoB;oBAErBroB,MAAK8oB;oBAEL,OAAO9oB,MAAKyE,OAAOskB,KAAK/oB,MAAKgpB;mBAE9B7pB,KAAK;oBACJ,OAAOa,MAAKipB;mBAEbtnB,MAAM,SAAAvC;oBACLY,MAAK0B,QAAQtC;;;YA1CzB,IAAAwB,SAAAwnB,eAAAnqB;YAAA2C,OA8CIsoB,aAAA;gBAA+B,IAAAnoB,SAAA9E;gBAC3B,OAAO;oBACH4hB,OAAe;wBAAA,OAAM9c,OAAK8c;;oBAC1BD,OAAe;wBAAA,OAAM7c,OAAK6c;;oBAC1ByI,QAAe,SAAAhN;wBAAA,IAAGjG,QAAHiG,KAAGjG,OAAOE,SAAV+F,KAAU/F;wBAAV,OAAuBvS,OAAKslB,OAAO;4BAAEjT;4BAAOE;;;oBAC3D5R,SAAe,SAACtC;wBAAD,OAAS2B,OAAKW,QAAQtC;;oBACrC+pB,SAAS,SAACppB;wBAAD,OAAagB,OAAKooB,QAAQppB;;;;YApD/Ca,OAwDI8nB,oBAAA,SAAkBzjB;gBACd,KAAKsE,YAAYtN,KAAKsrB,UAAU6B,sBAAsBnkB,SAClD,MAAM,IAAIpE,MAAJ,oCAA6CoE;;YA1D/DrE,OA8DIuoB,UAAA,SAAQppB;gBACJ9D,KAAKqsB,eAAepnB,KAAKnB;;YA/DjCa,OAkEIgoB,gBAAA,SAAcP,uBAA+CpjB,QAA7DiO;gBAA+H,IACvHnD,OADwEkJ,OAA+C/F,MAA/C+F,MAAM3b,QAAyC4V,MAAzC5V,OAAOiQ,MAAkC2F,MAAlC3F;gBAGzF,IH5FC,UG4FG0L,MACAlJ,QAAQzS,YACL,IH7FN,UG6FU2b,MAA4B;oBACnC,KAAK3T,aAAa+iB,wBACd,MAAM,IAAIxnB,MAAJ,iEAA0EmE,oBAA1E;oBAGV,IAAM8R,SAASqP,UAAUkC;oBACzBtY,QAAQpB,aAAa,SAASmI,UAAUA,OAAO/G,MAAMxC;;gBAGzD,KAAKwC,OACD,MAAM,IAAIlP,MAAJ;gBAGV,OAAO4e,yBAAmB4I,uBAAuBpjB,QAAQ8K;;YApFjEnP,OAuFI6nB,2BAAA,SAAyBY;gBAAyC,IACtDpQ,OAASoQ,IAATpQ;gBAER,IH5GE,aG4GEA,MACA,OAAOtK,aAAa,UAAUjK,UAAU3F;gBAErC,IH7GL,aG6GSka,MAAmC;oBAE1C,IAAMpQ,WAAWwgB,IAAIxgB;oBACrB,OAAO8F,aAAa,UpD0nBzB,SAA6BtK,KAA6BvG;6BAAyC,MAAzCA,UAAa;wBAC1E,OAfG,SAAsBuG,KAA6BvG;iCAAyC,MAAzCA,UAAa;4BAGnE,KAFA,IAAI2G,SAASJ,KAEJhI,IAAI,GAAGA,IAAIyB,GAAGzB,KAAK;gCACxB,KAAKoI,QACD;gCAGJA,SAASD,UAAUC;;4BAGvB,OAAOA;yBAIA6kB,CAAajlB,KAAKuE,mBAAmBvE,OAAOvG;qBoD3nBbyrB,CAAoBxqB,QAAQ8J;;gBAEvD,IHjHL,aGiHSoQ,MAAmC;oBAAA,IAElC1L,MAAQ8b,IAAR9b,KACFic,WAAWnhB,YAAYtJ;oBAE7B,KAAKyqB,UACD,MAAM,IAAI3oB,MAAJ;oBANgC,SAAA4O,MAAA,GAAAga,yBAStB/iB,qBAAqB8iB,WATC/Z,MAAAga,uBAAAhrB,QAAAgR,OASU;wBAA/C,IAAM1J,QAAK0jB,uBAAAha;wBACZ,IAAInK,aAAaS,QAAQ;4BACrB,IAAM+Q,SAASqP,UAAUpgB;4BAEzB,IAAI+Q,UAAUA,OAAO4S,WAAW5S,OAAO4S,QAAQnc,MAC3C,OAAOuJ,OAAO4S,QAAQnc;;;;gBAMtC,MAAM,IAAI1M,MAAJ,oBAA6BoY,OAA7B;;YAtHdrY,OAyHI+oB,WAAA;gBAEI1tB,KAAK8T,QAAQ9T,KAAK8T,SAAS;gBAC3B,OAAO9T,KAAK8T;;YA5HpBnP,OAgIIioB,WAAA,SAAS9Y,OAAsBtG,QAAiBmgB;qBAA4B,MAA5BA,yBAAqB;gBACjE,IAAMpC,UAAUvrB,KAAKitB,cACfW,gBAAgB5tB,KAAK0tB;gBAG3Bxb,OAAO0b,eFvJR,SAAgCxB,uBAA+Cd,WAA0BxX,OAAwBtG,QAAiB+d,SAA2BoC;yBAA6C,MAA7CA,yBAAqB;oBAAwB,KAE7N,IAAMppB,SAAS,IAF8MiP,MAAA,GAAAsC,gBAK3MhV,OAAO8F,KAAKkN,QAL+LN,MAAAsC,cAAAtT,QAAAgR,OAKvL;wBAAjC,IAAM7R,MAAGmU,cAAAtC,MACJgY,OAAOF,UAAUG,kBAAkB9pB;wBAEzC,KAAI6pB,SAAQA,KAAKqC,cAAergB,WAAWzE,gBAAUjG,WAAYuG,aAAa+iB,wBAA9E;4BAIA,IAAM/qB,QAAQgqB,mBAAmBC,WAAWxX,GAAOnS,KAAKmS,MAAMnS,MAAM4pB;4BAEpEhnB,OAAO5C,OAAON;4BACVmqB,QAAQA,KAAKsC,UAAUvpB,OAAOinB,KAAKsC,WACnCvpB,OAAOinB,KAAKsC,SAASzsB;;;oBAI7B,KAAKssB,UAAU,SAAA9H,MAAA,GAAAkI,yBACOzC,UAAU0C,gBADjBnI,MAAAkI,uBAAAvrB,QAAAqjB,OACiC;wBAAvC,IAAMlkB,OAAGosB,uBAAAlI;wBACL/R,MAAM7R,eAAeN,UACtB4C,OAAO5C,QAAO0pB,mBAAmBC,WAAWxX,GAAOnS,MAAKmS,MAAMnS,OAAM4pB;;oBAMhF,OAAOhnB;iBEwHqB0pB,CAAoBjuB,KAAKosB,uBAAuBpsB,KAAKsrB,WAAWxX,OAAOtG,QAAQ+d,SAASoC;gBAHxC,SAAA9H,MAAA,GAAAqI,wBAOlDluB,KAAKqsB,gBAP6CxG,MAAAqI,sBAAA1rB,QAAAqjB,OAOtDqI,sBAAArI,KACNtlB,KAAKP,MAAM4tB;;YAxI/BjpB,OA4IIkoB,gBAAA;gBAAgB,IAAAxnB,SAAArF;gBACZ8C,OAAOiS,iBAAiB,gBAAgB;oBACpC1P,OAAKmD,OAAO2lB,WAAWxP;;gBAG3B7b,OAAOiS,iBAAiB,UAAU;oBAC9B1P,OAAKmD,OAAO2lB,WAAWxP;;gBAG3BrQ,cAActO,KAAKosB,uBAAuB;oBACtC/mB,OAAK+oB;;;YAtJjBzpB,OA0JI0pB,gBAAA;gBAAgF,IAAAhT,QAClBrb,KAAKssB,cAActsB,KAAKsrB,UAAUgB,cAAc,IAD9BgC,cAAAjT,MACtElE,oBADsE,MAAAmX,4BAAAC,eAAAlT,MACvDhE,sBADuD,MAAAkX,8BAAAC,gBAAAnT,MACvCjH,wBADuC,MAAAoa,gBAC7B,SAD6BA;gBAG5E,OAAO;oBAAErX;oBAAOE;oBAAQjD,SADxBA,UAAUI,eAAeJ;;;YA5JjCzP,OAgKIqoB,iBAAA;gBAAuC,IAAA/mB,SAAAjG;gBACnC,OhDtJGiT,uBAAuB/P,KAAK;oBAC/B,IAAI2P,SAASC,MACT,OAAOD,SAASC;oBAGpB,MAAM,IAAIlO,MAAM;mBgDiJa1B,KAAK;oBAAM,IAAAurB,uBACDxoB,OAAKooB,iBAAhClX,QAD4BsX,qBAC5BtX,OAAOE,SADqBoX,qBACrBpX,QAAQjD,UADaqa,qBACbra;oBAElBA,YAAa+C,SAAUE,WAAWpR,OAAKkB,YAAYwjB,QAAQ1iB,SAIhE8O,SAAS3C,SAAS,SAAAoH;wBAA4C,IAAlC3D,WAAkC2D,MAAzCrE,OAAyBW,YAAgB0D,MAAxBnE;wBAClCpR,OAAKmkB,OAAO;4BACRjT,OAAQA,QAAQU,gBAAWlS;4BAC3B0R,QAAQA,SAASS,iBAAYnS;;uBAElC;wBAAEwR;wBAAOE;;;;YA7KxB1S,OAiLIooB,eAAA;gBAEI,IAAMhtB,OAAOC;gBAEb,OAAO;oBACH0uB,aADG,SACS5a;wBAA6C,IAAAgO,SAAA9hB;wBACrD,OAAO6D,qBAAaiC,IAAI;4BAAA,OAAM/F,KAAK6sB,SAAS9Y,OAAOgO,OAAKqC,aAAY;;;oBAGxExC,OALG;wBAMC,OAAO9d,qBAAaiC,IAAI;4BAAA,OAAM/F,KAAKquB;;;;;YA3LnDzpB,OAgMIylB,SAAA,SAAAzO;gBAAuF,IAA9ExE,QAA8EwE,MAA9ExE,OAAOE,SAAuEsE,MAAvEtE;gBACZ,OAAOrX,KAAKwI,OAAO4hB,OAAOzL,cAAc;oBAAExH;oBAAOE;;;YAjMzD1S,OAoMIgd,QAAA;gBACI,OAAO3hB,KAAKwI,OAAOmZ;;YArM3Bhd,OAwMIypB,UAAA;gBACI,OAAOvqB,qBAAaiC,IAAI;oBACpBhD,OAAO6e;;;YA1MnBhd,OA8MIid,QAAA;gBACI,OAAO/d,qBAAaiC,IAAI;oBACpBhD,OAAO8e;;;YAhNnBjd,OAoNIc,UAAA,SAAQtC;gBAAkC,IAAA+e,SAAAliB;gBACtC,OAAO6D,qBAAaiC,IAAI;oBACpB,IAAIoc,OAAK1Z,UAAU0Z,OAAK1Z,OAAO/C,SAC3B,OAAOyc,OAAK1Z,OAAO/C,QAAQtC;oBAE3B,MAAMA;;;YAzNtB,OAAAgpB;SAAA,ICtBawC,iBAAoD;QAEjEA,eAAehE,QAAQ3iB,UAAU;YAC7B4mB,cAAa;YAEbC,WAH6B;gBAIzB,OAAO1E,gBAAgB/U,WAAO;oBAC1BG,YAAYnT,SAAA;wBACR0sB,OAAO9uB,KAAKsrB,UAAU3qB;uBACnBX,KAAKsrB,UAAU/V,WAAWH;;;YAKzCmK,MAZ6B,SAYxBwP;gBAA2E,IAAAhrB,QAAA/D;gBAC5E,KAAK+uB,YACD,MAAM,IAAInqB,MAAJ;gBAGV,OAAOmqB,WAAWtY,aAAavT,KAAK,SAAA4G;oBAChC,OAAOoL,iBAAiBpL,OAAO5G,KAAK,SAAAkF;wBAEhC,IAAM4mB,ejDo2Bf,SAA8B5a,SAAuBtQ;4BACxDA,UAAU+N,KAAK/N;4BAEf,IAAIoP;4BAEA4D,gBAAgB1C,WAChBtQ,YAEAoP,WD3cD,SAAsBnM,QAAmBf;gCAE5C,IAAID;iCAEJ,SAASsS;oCACLtS,UAAUhB,WAAW;yCCscG;4CACpB,IAAI+R,gBAAgB1C,UAAU;gDAC1BlB,SAASjM;gDACTnD;;yCDxcJiD;wCACAsR;uCCycD;iCDrcPA;gCAEA,OAAO;oCACHpR,QADG;wCAECf,aAAaH;;;6BC4bNkpB;4BAQf,OAAO;gCACHhoB,QADG;oCAEKiM,YACAA,SAASjM;;;yBiDv3BYioB,CAAqBplB,OAAO;4BAAA,OAAM/F,MAAK4d;;wBAC5D5d,MAAKorB,MAAM5c,SAAS;4BAAA,OAAMyc,aAAa/nB;;wBACvClD,MAAKorB,MAAM5c,SAAS;4BAAA,OAAMsE,eAAe/M;;wBACzC/F,MAAKorB,MAAM5c,SAAS;4BAAA,OAAMwW,cAAc3gB;;wBAExC,OAAOia,oBAAcja;;;;YAKjCgnB,oBA9B6B;gBA+BzB,OAAOjF,gBAAgB/U,WAAO;oBAC1BG,YAAYnT,SAAA;wBACRzB,MAAI,6BAA+BX,KAAKsrB,UAAU3qB,OAA9C,MAAwDiQ,aAAxD;wBACJke,OAAK,gBAAiB9uB,KAAKsrB,UAAU3qB;uBAClCX,KAAKsrB,UAAU/V,WAAWH;;;YAKzCia,eAxC6B,SAwCfC,UAAwBC;gBAAoF,IAAAzqB,SAAA9E;gBACtH,KAAKuvB,qBACD,MAAM,IAAI3qB,MAAJ;gBAGV,OAAO2qB,oBAAoB9Y,aAAavT,KAAK,SAAAssB;oBACzC1qB,OAAKqqB,MAAM5c,SAAS;wBAAA,OAAMsE,eAAe2Y;;oBAEzC,OAAOta,iBAAiBsa,gBAAgBtsB,KAAK,SAAAusB;wBACzC,OAAOnmB,iBAAiBmmB;uBACzBvsB,KAAK,SAAAkF;wBACJ,OAAOia,oBAAcja;;;;YAKjCsnB,UAAU,EACN,qBACA,mBACA,aACA,sBACA,aACA,QACA;YAGJtF,QAlE6B,SAAAhN;gBAkEqC,IAAzDjG,QAAyDiG,KAAzDjG,OAAOE,SAAkD+F,KAAlD/F;gBACRrX,KAAK2vB,kBACL3vB,KAAK2vB,eAAevF,OAAO;oBAAEjT;oBAAOE;;;;QAM5CsX,eAAehE,QAAQ1iB,SAAS;YAC5B2mB,cAAa;YAEbrP,MAH4B;gBAGO,IAAAla,SAAArF;gBAC/B,OAAO6D,qBAAaiC,IAAI;oBAAM,IAAA8pB,wBACFvqB,OAAKimB,UAAUuE,YAAjC1Y,QADoByY,sBACpBzY,OAAOE,SADauY,sBACbvY,QAKPjP,MjDySf,SAAe8F,KAAcmH;wBAAiD,IAAAya,WAGjFza,UAAUA,WAAW,IAEf8B,QAL2E2Y,SAK3E3Y,OAAOE,SALoEyY,SAKpEzY,QAET/M,MAAM,GACNylB,OAAO;wBAEP5Y,UACIrU,OAAOktB,aACPD,OAAOxgB,KAAK0gB,OAAOntB,OAAOktB,aAAa7Y,SAAS,KAAKrU,OAAOotB,UACrDptB,OAAOqtB,OAAOhZ,UACrB4Y,OAAOxgB,KAAK0gB,OAAOntB,OAAOqtB,OAAOhZ,QAAQA,SAAS;wBAItDE,WACIvU,OAAOstB,cACP9lB,MAAMiF,KAAK0gB,OAAOntB,OAAOstB,cAAc/Y,UAAU,KAAKvU,OAAOutB,UACtDvtB,OAAOqtB,OAAO9Y,WACrB/M,MAAMiF,KAAK0gB,OAAOntB,OAAOqtB,OAAO9Y,SAASA,UAAU;wBAiB3D,IAAI1W,QAbJ0U,UAAUjT,SAAA;4BACNkI;4BACAylB;4BACA5Y;4BACAE;4BACAiZ,QAAY;4BACZC,SAAY;4BACZC,SAAY;4BACZC,WAAY;4BACZC,YAAY;2BACTrb,UAGY1U,QAAQ;+BACpB0U,QAAQ1U;wBAGf,IAOIyH,KAPAmL,SAASzS,OAAO8F,KAAKyO,SAASxO,IAAI,SAAAlF;4BAElC,IAAI0T,QAAQ1T,MACR,OAAWA,MAAX,MAAoBmM,UAAUuH,QAAQ1T;2BAE3CoS,OAAOpG,SAASU,KAAK;wBAIxB;4BACIjG,MAAMtF,OAAOyc,KiD9Va,IjD8VH5e,MAAM4S,SAAQ;0BACvC,OAAOpQ;4BACL,MAAM,IAAI0R,eAAJ,kCAAmD1R,IAAImB,SAASnB,IAAI6H;;wBAG9E,IAAIH,eAAezC,MAAM;4BACrB,IAAIjF;4BACJ,MADU,IAAI0R,eAAJ;;wBAId/R,OAAOiS,iBAAiB,UAAU;4BAAA,OAAM3M,IAAIuZ;;wBAE5C,OAAOvZ;qBiD1WiBuoB,CAAM,GAADvuB,SAAA;wBACb+U,OAJJA,QAAQ2B,mBAAmB3B,OAAOrU,OAAOktB;wBAKrC3Y,QAJJA,SAASyB,mBAAmBzB,QAAQvU,OAAOktB;uBAKpC3qB,OAAKimB,UAAU/V,WAAWob;oBAGjCtrB,OAAK8pB,MAAM5c,SAAS;wBAChBnK,IAAIuZ;wBACJoH,cAAc3gB;;oBAGlB,OAAOia,oBAAcja;;;YAI7BinB,eAzB4B,SAyBdC;gBACV,OAAOzrB,qBAAaiC,IAAI;oBACpB,OAAOwpB;;;YAIfI,UAAU,EACN,qBACA,mBACA;;QC5BZ,SAASkB,oBAAoBpF,MAAmC7pB,KAAcN;YAC1E,OAAOwC,qBAAaiC,IAAI;gBACpB,OAA+B,qBAApB0lB,KAAKqF,aACLrF,KAAKqF,WAAW;oBAAExvB;qBACS,mBAApBmqB,KAAKqF,aACZrF,KAAKqF,aAELlvB;;;QAMnB,SAASmvB,cAAoBtF,MAAmC7pB,KAAcN;YAC1E,OAAOwC,qBAAaiC,IAAI;gBACpB,OAA+B,qBAApB0lB,KAAKuF,cAA6B5e,UAAU9Q,SAC5CmqB,KAAKuF,WAAW;oBAAE1vB;qBAElBA;;;QC7CZ,IAAM2vB,yBAAb;YAgBI,SAAAA,gBAAY1F,WAA0BxX;gBAA2B,IAAA/P,QAAA/D;gBAAAA,KAdjEsrB,iBAciE;gBAAAtrB,KAbjEixB,cAaiE;gBAAAjxB,KAZjEmvB,aAYiE;gBAAAnvB,KAXjE2W,aAWiE;gBAAA3W,KATjEkxB,mBASiE;gBAAAlxB,KAPjE8T,aAOiE;gBAAA9T,KANjEmxB,aAMiE;gBAAAnxB,KALjEwJ,aAKiE;gBAAAxJ,KAHjEsvB,gBAGiE;gBAAAtvB,KAFjE2vB,sBAEiE;gBAC7D;oBACI3vB,KAAKkxB,cAAc,IAAIrtB;oBAEvB7D,KAAKmvB,QAAQ/c,QAAQpS;oBACrBA,KAAKmxB,QAAQ;oBAEbnxB,KAAKsrB,YAAYA;oBAEjBtrB,KAAKoxB,YAAYtd,MAAMrO;oBACvBzF,KAAK4sB,SAAS9Y;oBACd9T,KAAKsrB,UAAU+F,wBAAwBrxB;oBACvCA,KAAKmvB,MAAM5c,SAAS;wBAAA,OAAMxO,MAAKunB,UAAUgG,uBAAuBvtB;;oBAChE/D,KAAKuxB;kBAEP,OAAOpuB;oBACLnD,KAAKyF,QAAQtC,KAAKuC,MAAMkM;oBACxB,MAAMzO;;;YAjClB,IAAAwB,SAAAqsB,gBAAAhvB;YAAA2C,OAqCIysB,cAAA,SAAY3rB;gBAA4B,IpDucpC+rB,WACAptB,UoDxcoCU,SAAA9E;gBACpCA,KAAK2W,SpDscL6a,YAAY,IACZptB,WAAW,IAER;oBAEHib,IAFG,SAEAoS,WAAoB3tB;wBACnB,IAAI4tB,cAActtB,SAASqtB,aAAartB,SAASqtB,cAAc;wBAE/DC,YAAYzsB,KAAKnB;wBAEjB,IAAI6tB,aAAY;wBAEhB,OAAO;4BACH1qB,QADG;gCAEC,KAAK0qB,WAAW;oCACZA,aAAY;oCACZD,YAAYxqB,OAAOwqB,YAAY1sB,QAAQlB,UAAU;;;;;oBAOjE+N,MApBG,SAoBE4f,WAAoB3tB;wBAErB,IAAImiB,WAAWjmB,KAAKqf,GAAGoS,WAAW;4BAC9BxL,SAAShf;4BACTnD;;wBAGJ,OAAOmiB;;oBAGX2L,SA9BG,SA8BKH;wBAA0E,SAAAI,QAAAtvB,UAAAC,QAAnD4E,OAAmD,IAAAqG,MAAAokB,QAAA,IAAAA,QAAA,QAAAC,QAAA,GAAAA,QAAAD,OAAAC,SAAnD1qB,KAAmD0qB,QAAA,KAAAvvB,UAAAuvB;wBAE9E,IAAIJ,cAActtB,SAASqtB,YACvBnrB,WAAW;wBAEf,IAAIorB,aAAa,SAAApsB,QAAA,SAAAkO;4BACR,IAAI1P,UAAW4tB,YAAJle;4BACZlN,SAASrB,KAAKpB,qBAAaiC,IAAI;gCAAA,OAAMhC,QAAOpB,WAAP,GAAW0E;;2BAFvCoM,MAAA,GAAAA,MACOke,YADPlvB,QAAAgR,OACoBlO,MAAAkO;wBAKrC,OAAO3P,qBAAawC,IAAIC,UAAUpD,KAAK0O;;oBAG3CmgB,aA5CG,SA4CSN;wBAER,IAAID,UAAUC,YACV,OAAO5tB,qBAAaH;wBAGxB8tB,UAAUC,cAAa;wBAN2D,SAAAO,QAAAzvB,UAAAC,QAAnD4E,OAAmD,IAAAqG,MAAAukB,QAAA,IAAAA,QAAA,QAAAC,QAAA,GAAAA,QAAAD,OAAAC,SAAnD7qB,KAAmD6qB,QAAA,KAAA1vB,UAAA0vB;wBAOlF,OAAOjyB,KAAK4xB,QAALlvB,MAAA1C,MAAA,EAAayxB,YAAb/mB,OAA2BtD;;;gBoD1ftCpH,KAAK2W,MAAM0I,GAAG0L,MAAMC,QAAU;oBAAA,OAAMlmB,OAAKgP,MAAMoe;;gBAC/ClyB,KAAK2W,MAAM0I,GAAG0L,MAAMG,SAAU;oBAAA,OAAMpmB,OAAKgP,MAAMqe;;gBAC/CnyB,KAAK2W,MAAM0I,GAAG0L,MAAME,UAAU;oBAAA,OAAMnmB,OAAKgP,MAAMse;;gBAC/CpyB,KAAK2W,MAAM0I,GAAG0L,MAAMI,OAAU;oBAAA,OAAMrmB,OAAKgP,MAAMue;;gBAC/CryB,KAAK2W,MAAM0I,GAAG0L,MAAMK,OAAU,SAACtX;oBAAD,OAAWhP,OAAKgP,MAAMoZ,QAAQpZ;;gBAE5D9T,KAAK2W,MAAM0I,GAAG0L,MAAM9O,OAAO,SAAA9Y;oBACvB,IAAI2B,OAAKgP,SAAShP,OAAKgP,MAAMrO,SACzB,OAAOX,OAAKgP,MAAMrO,QAAQtC;oBACvB,IAAIsC,SACP,OAAOA,QAAQtC;oBAEf,MAAMA;;;YApDtBwB,OAyDI2tB,SAAA,SAAOhwB,QAAgC4R,WAAkC/M;gBAAwD,IAAA9B,SAAArF;gBAC7H,OAAO6D,qBAAaiC,IAAI;oBACpBT,OAAKimB,UAAUiH,IAAf;oBAEAltB,OAAK4rB,SAAStC,eAAexnB;oBAC7B,IAAMmK,MAAU+Y,OAAP,MAAiBhlB,OAAKimB,UAAU9V,MAAhC,MAAyC5E,YAC5C5H,SAAS3D,OAAK0D,aACdypB,gBAAgBntB,OAAKotB;oBAE3BptB,OAAKimB,UAAUoH,iBAAiBpwB,QAAQ0G,QAAQkL;oBAE5C5R,WAAWQ,UACXuC,OAAKqqB,SAASvoB,SAAS7E;oBAG3B,IAAM+P,QAAQ;oBAEdA,MAAMya,OAAOznB,OAAK6rB;oBAClB7e,MAAMsgB,WAAWttB,OAAKstB;oBACtBtgB,MAAM6f,WAAW7sB,OAAKsR,MAAMib,QAAQ7G,MAAMC;oBAE1C3Y,MAAMugB,oBAAoBvtB,OAAKutB,kBAAkB1e;oBAEjD7B,MAAMwc,YAAYxpB,OAAKwpB;oBACvBxc,MAAM+c,qBAAqB/pB,OAAK+pB;oBAEhC/c,MAAMwgB,kBAAkBhvB,qBAAawC,IAAI,EAAEgM,MAAMugB,mBAAmBvgB,MAAMwc,WAAWxc,MAAM+c,sBAAsBlsB,KAAK,SAAAka;wBAAyD,IAAtDuS,iBAAsDvS,KAAA,IAAtC2R,aAAsC3R,KAAA,IAA1BmS,sBAA0BnS,KAAA;wBAC3K,OAAO/X,OAAKwtB,gBAAgBlD,gBAAgB;4BAAExoB;4BAASmK;4BAAKyd;4BAAYQ;;;oBAG5Eld,MAAMkN,OAAOla,OAAK4rB,OAAOrC,cACnBvpB,OAAKka,SACLlN,MAAMwc,UAAU3rB,KAAK,SAAA6rB;wBAAU,OAAI1pB,OAAKka,KAAKwP;;oBAEnD1c,MAAMgd,gBAAgBxrB,qBAAawC,IAAI,EAAEgM,MAAMkN,MAAMlN,MAAM+c,sBAAsBlsB,KAAK,SAAA+T;wBAAuC,IAApCqY,WAAoCrY,MAAA,IAA1BsY,sBAA0BtY,MAAA;wBACzH,OAAO5R,OAAKgqB,cAAcC,UAAUC;;oBAGxCld,MAAMygB,WAAWjvB,qBAAawC,IAAI,EAC9BgM,MAAMkN,KAAKrc,KAAK,SAAAosB;wBACZjqB,OAAKiqB,WAAWA;wBAChB,OAAOjqB,OAAK0tB,YAAYzD;wBAE5Bjd,MAAMwgB,gBAAgB3vB,KAAK,SAAAysB;wBACvBtqB,OAAKsqB,iBAAiBA;;oBAI9Btd,MAAM2gB,YAAYnvB,qBAAawC,IAAI,EAAEgM,MAAMgd,eAAehd,MAAMygB,YAAY5vB,KAAK,SAAAmY;wBAA2B,IAAxB4X,oBAAwB5X,MAAA;wBACxG,OAAOhW,OAAK2tB,UAAUC,mBAAmB;4BAAE9rB;4BAASmK;;;oBAGxDe,MAAM6gB,UAAUrvB,qBAAawC,IAAI,EAAEgM,MAAMkN,MAAMlN,MAAMsgB,UAAUtgB,MAAM8gB,eAAe9gB,MAAM2gB,aAAa9vB,KAAK,SAAAsY;wBAAuB,IAApB8T,WAAoB9T,MAAA,IAAVtN,MAAUsN,MAAA;wBAC/H,OAAO8T,SAAS9N,YAAYtT;;oBAGhCmE,MAAM+gB,kBAAkB/gB,MAAMkN,KAAKrc,KAAK,SAAAosB;wBACpC,OAAOjqB,OAAK+tB,gBAAgB;4BAAE9D;4BAAUkD;4BAAexpB;4BAAQ1G;4BAAQ6E;4BAASmK;;;oBAGpFe,MAAM8gB,gBAAiBtvB,qBAAawC,IAAI,EAAEgM,MAAMkN,MAAMlN,MAAM+gB,mBAAmBlwB,KAAK,SAAAyY;wBAA8B,IAA3B2T,WAA2B3T,MAAA,IAAjBiQ,aAAiBjQ,MAAA;wBAC9G,OAAO2T,SAAS7N,QAAQmK;;oBAG5BvZ,MAAMwa,gBAAgBxa,MAAMkN,KAAKrc,KAAK,SAAAosB;wBAClC,OAAOjqB,OAAKwnB,cAAcyC;;oBAG9Bjd,MAAM8f,YAAY9f,MAAM2gB,UAAU9vB,KAAK;wBACnC,OAAOmC,OAAKsR,MAAMib,QAAQ7G,MAAMG;;oBAGpC7Y,MAAM4W,aAAa5W,MAAMkN,KAAKrc,KAAK,SAAAosB;wBAC/B,OAAOjqB,OAAK4jB,WAAWqG,UAAUkD,eAAerrB;;oBAGpDkL,MAAMghB,aAAahhB,MAAM6gB,QAAQhwB,KAAK;wBAClC,OAAOmC,OAAKguB;;oBAGhBhhB,MAAM6f,WAAW7f,MAAMya,KAAK5pB,KAAK;wBAC7B,OAAOmC,OAAKsR,MAAMib,QAAQ7G,MAAME;;oBAGpC,OAAOpnB,qBAAa8C,KAAK0L;mBAE1B3M,MAAM,SAAAvC;oBACL,OAAOU,qBAAawC,IAAI,EACpBhB,OAAKI,QAAQtC,MACbkC,OAAK+oB,QAAQjrB;mBAElBD,KAAK0O;;YApJhBjN,OAuJIiuB,oBAAA,SAAkB1e;gBACd,OAAOrQ,qBAAaiC,IAAI;oBACpB,OAAO6O,aAAaT;mBACrBhR,KAAK,SAAAowB;oBACJ,OAAOnJ,gBAAgBmJ;;;YA3JnC3uB,OA+JIyuB,kBAAA,SAAAxX;gBAAoP,IAAlO0T,WAAkO1T,MAAlO0T,UAAUkD,gBAAwN5W,MAAxN4W,eAAexpB,SAAyM4S,MAAzM5S,QAAQ1G,SAAiMsZ,MAAjMtZ,QAAQgP,MAAyLsK,MAAzLtK,KAAKnK,UAAoLyU,MAApLzU,SACtDolB,eAAevsB,KAAKuzB,kBAAkB;oBAAEjE;oBAAUkD;oBAAexpB;oBAAQ1G;oBAAQ6E;oBAASmK;;gBAChG,cAAa+Y,OAAb,OAAwBrqB,KAAKsrB,UAAU3qB,OAAvC,OAAkD4P,aAAa1C,KAAKC,UAAUye,iBAA9E;;YAjKR5nB,OAoKI6uB,cAAA,SAAYlE,UAAwBhtB,QAAgC0G,QAA0BsI;gBAC1F,IAAMjQ,QAAQ6hB,uBAAiBoM,UAAUtmB,QAAQhJ,KAAKyzB,iBAAiBzqB,UAEjE0qB,UAAUrqB,aAAa/G,UACvB;oBAAE0a,MNhOP;oBMgOgC3b;oBAC3B;oBAAE2b,MNhOP;oBMgOgC1L;;gBAEjC,INlOC,UMkOGoiB,QAAQ1W,MAA4B;oBACpC,IAAMnC,SAASqP,UAAUpnB;oBACzB+X,OAAO/G,QAAQ+G,OAAO/G,SAAS;oBAC/B+G,OAAO/G,MAAMxC,OAAOjQ;oBAEpBrB,KAAKmvB,MAAM5c,SAAS;+BACTsI,OAAO/G,MAAMxC;;;gBAI5B,OAAOoiB;;YArLf/uB,OAwLI4uB,oBAAA,SAAAvc;gBAA0Q,IAAAsN,aAAA,MAAAtN,QAAnB,KAAmBA,OAAtPsY,WAAsPhL,MAAtPgL,UAAUkD,gBAA4OlO,MAA5OkO,eAAexpB,SAA6Nsb,MAA7Ntb,QAA6N2qB,eAAArP,MAArNhiB,sBAAqN,MAAAqxB,eAA5M7wB,SAA4M6wB,cAApMxsB,UAAoMmd,MAApMnd,SAASmK,MAA2LgT,MAA3LhT;gBAC3E,OAAO;oBACHA;oBACAnK;oBACA6B,QAASD,gBAAUjG;oBACnB0S,KAASxV,KAAKsrB,UAAU9V;oBACxBhN,QAASxI,KAAK4zB,aAAatxB,QAAQkwB,eAAelhB,KAAKnK;oBACvD2M,OAAS9T,KAAKwzB,YAAYlE,UAAUhtB,QAAQ0G,QAAQsI;oBACpD3R,SAASujB,uBAAiBoM,UAAUtmB,QAAQhJ,KAAK6zB,mBAAmBvE;;;YAhMhF3qB,OAoMIouB,cAAA,SAAYzD;gBAA6C,IAAArpB,SAAAjG;gBACrD,OAAO6D,qBAAaiC,IAAI;oBACpBG,OAAKqpB,WAAWA;;;YAtM5B3qB,OA0MIsoB,aAAA;gBAAgC,IAAAnL,SAAA9hB;gBAC5B,OAAO;oBACHmxB,OAAanxB,KAAKmxB;oBAClBxa,OAAa3W,KAAK2W;oBAClBgL,OAAa;wBAAA,OAAMG,OAAKH;;oBACxBC,OAAa;wBAAA,OAAME,OAAKF;;oBACxBwI,QAAa,SAAA0J;wBAAA,IAAG3c,QAAH2c,MAAG3c,OAAOE,SAAVyc,MAAUzc;wBAAV,OAAuByK,OAAKsI,OAAO;4BAAEjT;4BAAOE;;;oBACzD5R,SAAa,SAACtC;wBAAD,OAAS2e,OAAKrc,QAAQtC;;oBACnCurB,aAAa,SAAC5a;wBAAD,OAAWgO,OAAK4M,YAAY5a;;;;YAlNrDnP,OAsNIioB,WAAA,SAAS9Y,OAA2B6Z;qBAA4B,MAA5BA,yBAAqB;gBACjD3tB,KAAKsrB,UAAUyI,YACf/zB,KAAKsrB,UAAUyI,SAAS;oBAAEjgB;;gBAG9B,IAAMyX,UAAUvrB,KAAKitB;gBAGrBjtB,KAAK8T,QAAQ9T,KAAK8T,SAAS;gBAC3B5B,OAAOlS,KAAK8T,OD3Rb,SAA2BwX,WAA0B0I,UAA+BlgB,OAA2ByX,SAA4BoC;yBAA6C,MAA7CA,yBAAqB;oBAAwB,KAI3L,IAAMppB,SAAqBnC,SAAA,IAD3B0R,QAAQA,SAAS,KAGXmgB,YAAYtG,WACZ,KADoB,GAAAjjB,OAEf4gB,UAAU0C,iBARsKxa,MAAA,GAAAsC,gBAWzKhV,OAAO8F,KAAKkN,QAX6JN,MAAAsC,cAAAtT,QAAAgR,OAWrJ;wBAAjC,IAAM7R,MAAGmU,cAAAtC;yBACsB,MAA5BygB,UAAUjvB,QAAQrD,QAClBsyB,UAAUhvB,KAAKtD;;oBAboK,KAiB3L,IAAMuyB,UAAU,IAER/C,QAAiC5F,QAAjC4F,OAAOxP,QAA0B4J,QAA1B5J,OAAOC,QAAmB2J,QAAnB3J,OAAOnc,UAAY8lB,QAAZ9lB,SAnB8JogB,MAAA,GAAAA,MAqBzKoO,UArByKzxB,QAAAqjB,OAqB9J;wBAAxB,IAAMlkB,OAAOsyB,UAAJpO,MACJsO,UAAU7I,UAAUG,kBAAkB9pB,OAExCN,QAAQyS,MAAMnS;wBAElB,IAAKwyB,SAAL;4BAIA,IAAMrG,QAAQqG,QAAQrG;4BACtB,IAAIA,OAAO;iCACF3b,UAAU9Q,UAAU8Q,UAAU2B,MAAMga,YACrCzsB,QAAQyS,MAAMga;gCAElBoG,QAAQjvB,KAAK6oB;;4BAGbqG,QAAQ9yB,UACRA,QAAQ8yB,QAAQ9yB,MAAM;gCAAEyS,OAAOvP;gCAAQ4sB;gCAAOxP;gCAAOC;gCAAOnc;;6BAG3D0M,UAAU9Q,UAAU8yB,QAAQC,YAC7B/yB,QAAQ8yB,QAAQC,QAAQ;gCAAEtgB,OAAOvP;gCAAQ4sB;gCAAOxP;gCAAOC;gCAAOnc;;4BAGlE,IAAI0M,UAAU9Q,WACW,YAAjB8yB,QAAQnX,QAAoBvP,MAAMC,QAAQrM,gBAAiBA,UAAU8yB,QAAQnX,OAC7E,MAAM,IAAI5W,UAAJ,yBAAsC+tB,QAAQnX,OAA9C,OAAyDrb;4BAKvE4C,OAAO5C,QAAON;;;oBArDyK,SAAAwU,MAAA,GAAAA,MAwDvKqe,QAxDuK1xB,QAAAqT,cA0DhLtR,OAFS2vB,QAAJre;oBAxD2K,SAAAmR,MAAA,GAAAqN,gBA8DzKvzB,OAAO8F,KAAKrC,SA9D6JyiB,MAAAqN,cAAA7xB,QAAAwkB,OA8DpJ;wBAAlC,IAAMrlB,QAAG0yB,cAAArN,MACJmN,WAAU7I,UAAUG,kBAAkB9pB,QAEtCN,SAAQkD,OAAO5C;wBAErB,IAAKwyB,UAAL;4BAIIhiB,UAAU9Q,WAAU8yB,SAAQJ,YAE5BI,SAAQJ,SAAS;gCAAE1yB;gCAAOyS,OAAOvP;;4BAGjC4N,UAAU9Q,WAAU8yB,SAAQG,aAE5B/vB,OAAO5C,SAAOwyB,SAAQG,SAAS;gCAAEjzB;gCAAOyS,OAAOvP;gCAAQ4sB;gCAAOxP;gCAAOC;gCAAOnc;;;;oBAKpF,OAAOlB;iBCwMgBgwB,CAAev0B,KAAKsrB,WAAWtrB,GAAM8T,OAAOyX,SAASoC;gBATZ,SAAAna,MAAA,GAAAghB,yBAW1Cx0B,KAAKsrB,UAAU0C,gBAX2Bxa,MAAAghB,uBAAAhyB,QAAAgR,OAWX;oBAA5C,IAAM7R,MAAG6yB,uBAAAhhB;oBAEV,KAAyB,MADTxT,KAAKsrB,UAAUG,kBAAkB9pB,KACrC8yB,aAAuBtiB,UAAUnS,KAAK8T,MAAMnS,OACpD,MAAM,IAAIiD,MAAJ,oBAA6BjD,MAA7B;;;YApOtBgD,OAyOIguB,WAAA;gBAAkC,IDvLN+B,UAA0C5gB,OAEhEP,QCqL4B2O,SAAAliB;gBAC9B,QDxLwB00B,WCwLJtyB,SAAA,IAAKpC,KAAKsrB,UAAUxX,OAAU9T,KAAKsrB,UAAUqJ;gBDxLC7gB,QCwLe9T,KAAK8T,ODtLpFP,SAAS,IAER1P,qBAAawC,IAAIvF,OAAO8F,KAAKkN,OAAOjN,IAAI,SAAAlF;oBAE3C,IAAM6pB,OAAOkJ,SAAS/yB;oBAEtB,IAAK6pB,MAIL,OAAO3nB,qBAAaH,UAAUR,KAAK;wBAE/B,IAAM7B,QAAQyS,MAAMnS;wBAEpB,IAAKN,SAIAmqB,KAAKqF,YAIV,OAAOxvB;uBAER6B,KAAK,SAAA7B;wBAEJ,IAAIA,eAIJ,OAAOwC,qBAAawC,IAAI,EAEpBuqB,oBAAcpF,MAAM7pB,KAAKN,QAEzByvB,cAActF,MAAM7pB,GAAKN,UAC1B6B,KAAK,SAAAka;4BAAgC,IAEhC7Y,QAFGssB,aAA6BzT,KAAA,IAAjB2T,aAAiB3T,KAAA;4BAIpC,IAA0B,oBAAf2T,YACPxsB,SAASwsB,WAAW9tB,iBACjB,IAA0B,mBAAf8tB,YACdxsB,SAASwsB,WAAW9tB,iBACjB,IAA0B,mBAAf8tB,cAA0C,SAAfA;gCAEzC,IAAIvF,KAAKoJ,kBAAkBpK,mBAAmB3c,MAC1CtJ,SAASsJ,KAAKC,UAAUijB,kBACrB,IAAIvF,KAAKoJ,kBAAkBpK,mBAAmBE,QACjDnmB,SAASkM,KAAK5C,KAAKC,UAAUijB,mBAC1B,IAAIvF,KAAKoJ,kBAAkBpK,mBAAmBC,WAAWe,KAAKoJ,eAAe;oCAChFrwB,SnDwUjB,SAASswB,OAAOjmB,KAAckmB,QAAsBC;6CAA8C,MAApED,oBAAkB;6CAAkD,MAA9CC,oBAAkB;wCACzED,SAASA,SAAaA,SAAP,MAAoBA;wCACnC,KAAK,IAAInzB,OAAOiN,KACPA,IAAI3M,eAAeN,aAAqBgE,MAAbiJ,IAAIjN,QAAmC,SAAbiN,IAAIjN,QAAqC,qBAAbiN,IAAIjN,SAE/EiN,IAAIjN,QAAQ8L,MAAMC,QAAQkB,IAAIjN,SAASiN,IAAIjN,KAAKa,UAAUoM,IAAIjN,KAAKqzB,MAAM,SAAA3jB;4CAAG,OAAmB,mBAARA;6CAC9F0jB,OAAM,KAAKD,SAAWnzB,MAAhB,QAA4BiN,IAAIjN,KAAK0M,KAAK,OACzCO,IAAIjN,QAA4B,mBAAbiN,IAAIjN,OAC9BozB,SAASF,OAAOjmB,IAAIjN,MAAL,KAAemzB,SAAWnzB,KAAQozB,UAEjDA,OAAM,KAAKD,SAAWnzB,OAA6BiN,IAAIjN,KA3BlDsB;wCA8Bb,OAAO8xB;qCmDrVsBF,CAAO9D,YAAYpvB;oCADoD,SAAAslB,OAAA,GAAAgO,gBAG3Dn0B,OAAO8F,KAAKrC,SAH+C0iB,OAAAgO,cAAAzyB,QAAAykB,QAGtC;wCAArC,IAAMiO,SAAMD,cAAAhO;wCACb1T,OAAO2hB,UAAU3wB,OAAO2wB;;oCAG5B;;mCAGyB,mBAAfnE,eACdxsB,SAASwsB,WAAW9tB;4BAGxBsQ,OAAOsd,cAActsB;;;oBAI7BrB,KAAK;oBACL,OAAOqQ;oBCkHsFrQ,KAAK,SAAAiyB;oBAC9F,OnDrLL,SAAmBjnB,KAAcmH;6BAA2F,MAA3FA,sBAA8E;wBAElH,IAGI+f,aAEAC,cALAF,QAAQ9f,QAAQ8f,SAAS,IACzBxuB,OAAO0O,QAAQ1O,QAAQ,IAHoG2uB,aAS/FpnB,IAAIC,MAAM;wBAAxCinB,cAT6HE,WAAA;wBAShHD,eATgHC,WAAA;wBAAA,IAAAC,qBAU9FH,YAAYjnB,MAAM;wBAAjDinB,cAV6HG,mBAAA;wBAY/H,IAAIjiB,cAAcM,YAZ6G2hB,mBAAA,IAYlFJ,QACzCK,aAAa5hB,YAAYyhB,cAAc1uB;wBAEvC2M,gBACA8hB,cAAkBA,cAAP,MAAwB9hB;wBAGnCkiB,eACAJ,cAAkBA,cAAP,MAAwBI;wBAGvC,OAAOJ;qBmD8JQK,CAAU3mB,iBAAiBoT,OAAKoJ,UAAUoK,OAAOxT,OAAKpO,SAAS;wBAAEqhB;;;;YA3OpFxwB,OA+OIoE,YAAA;gBACI,OAAO/I,KAAKsrB,UAAUviB,UAAU/I,KAAK8T;;YAhP7CnP,OAmPI8tB,mBAAA;gBACI,OAAOzyB,KAAKsrB,UAAUmH,iBAAiBzyB,KAAK8T;;YApPpDnP,OAuPI8uB,mBAAA,SAAiBzqB;gBAA2C,KACxD,IAAMzE,SAAS,IADyCshB,MAAA,GAAA/P,gBAGtChV,OAAO8F,KAAK5G,KAAK8T,QAHqB+R,MAAA/P,cAAAtT,QAAAqjB,OAGb;oBAAtC,IAAMlkB,MAAGmU,cAAA+P,MACJ2F,OAAOxrB,KAAKsrB,UAAUG,kBAAkB9pB;oBAE1C6pB,SAA6B,MAArBA,KAAKmK,eAIbnK,QAAQA,KAAKqC,eAAevgB,YAAYtE,QAAQD,gBAAUjG,aAK9DyB,OAAO5C,OAAO3B,KAAK8T,MAAMnS;;gBAI7B,OAAO4C;;YA1QfI,OA6QI+pB,cAAA,SAAY5a;gBAAgD,IAAA8hB,SAAA51B;gBACxDA,KAAK4sB,SAAS9Y,QAAO;gBAErB,OAAO9T,KAAKkxB,YAAYhuB,KAAK;oBACzB,IAAI0yB,OAAKpsB,OACL,OAAOosB,OAAKpsB,MAAMklB,YAAYkH,OAAKnC,iBAAiBmC,OAAK7sB;;;YAlRzEpE,OAuRIkqB,YAAA;gBAA6D,IAAAgH,SAAA71B;gBACzD,OAAO6D,qBAAaiC,IAAI;oBACpB,IAAI+vB,OAAK5E,OAAOpC,WACZ,OAAOgH,OAAK5E,OAAOpC,UAAUtuB,KAAKs1B;;;YA1RlDlxB,OA+RIyqB,qBAAA;gBAAsE,IAAA0G,SAAA91B;gBAClE,OAAO6D,qBAAaiC,IAAI;oBACpB,IAAIgwB,OAAK7E,OAAO7B,oBACZ,OAAO0G,OAAK7E,OAAO7B,mBAAmB7uB,KAAKu1B;;;YAlS3DnxB,OAuSI4a,OAAA,SAAKwP;gBAA2E,IAAAgH,UAAA/1B;gBAC5E,OAAO6D,qBAAaiC,IAAI;oBACpBiwB,QAAKzK,UAAUiH,IAAf;oBAEA,IAAMyD,aAAaD,QAAKjiB,MAAMhR;oBAE9B,IAAIkzB,YAAY;wBACZD,QAAK5G,MAAM5c,SAAS;4BAAA,OAAMyjB,WAAWrU;;wBACrC,OAAOU,oBAAc2T;;oBAGzB,OAAOD,QAAK9E,OAAO1R,KAAKhf,KAAKw1B,SAAMhH;mBAEpC7rB,KAAK,SAAAosB;oBACJyG,QAAKzG,WAAWA;oBAChB,OAAOA;;;YAtTnB3qB,OA0TI0qB,gBAAA,SAAcC,UAAwBC;gBAAoF,IAAA0G,UAAAj2B;gBACtH,OAAO6D,qBAAaiC,IAAI;oBACpB,OAAOmwB,QAAKhF,OAAO5B,cAAc9uB,KAAK01B,SAAM3G,UAAUC;;;YA5TlE5qB,OAgUIid,QAAA;gBAA6B,IAAAsU,UAAAl2B;gBACzB,OAAO6D,qBAAaiC,IAAI;oBACpB,IAAIowB,QAAK5G,UACL,OAAO4G,QAAK5G,SAAS1N,QAAQ1e,KAAK0O;;;YAnUlDjN,OAwUI+qB,WAAA,SAASvoB,SAAmC7E;gBAAgC,IAAA6zB,UAAAn2B;gBACxEA,KAAKsrB,UAAUiH,IAAf;gBADwE,KAGxE,IAAMze,QAAQ,IAH0D+B,MAAA,GAAAugB,yBAIjDp2B,KAAKsrB,UAAU0C,gBAJkCnY,MAAAugB,uBAAA5zB,QAAAqT,OAIlB;oBAAjD,IAAMwgB,WAAQD,uBAAAvgB;oBACX7V,KAAKsrB,UAAUG,kBAAkB4K,UAAUC,kBAC3CxiB,MAAMuiB,YAAYr2B,KAAK8T,MAAMuiB;;gBANmC,KAUxE,IAAME,mBAAmBjb,UAAKhZ,QAAYgoB,wBAAb,MAAwCtqB,KAAKsrB,UAAU3qB,MAAS;oBACzFwG;oBACA2M;oBACA0iB,WAAW;wBACP7f,OAAS3W,KAAK2W;wBACdgL,OAAS;4BAAA,OAAMwU,QAAKxU;;wBACpBlc,SAAS,SAACtC;4BAAD,OAASgzB,QAAK1wB,QAAQtC;;;mBAGpCD,KAAK,SAAAuzB;oBAAc,IAAXhb,OAAWgb,MAAXhb;oBACP0a,QAAKhH,MAAM5c,SAASkJ,KAAK2S;oBACzB,OAAO3S,KAAK+a;mBAEb9wB,MAAM,SAAAvC;oBACL,MAAM,IAAIyB,MAAJ,iGAA0GmN,eAAe5O;oBAxB3DmC,QAAA,SAAA0hB,KAAA0P;oBA2BnE,IAAM/0B,MAAG+0B,uBAAA1P;oBAEVmP,QAAKx0B,OAAO;wBAAoD,IAAAg1B,UAAA32B,MAAAkkB,aAAA3hB;wBAC5D,OAAOg0B,iBAAiBrzB,KAAK,SAAAszB;4BACzB,OAAOA,UAAU70B,KAAKe,MAAMi0B,SAAMp0B;;;mBA/B0BykB,MAAA,GAAA0P,yBA2BtD12B,KAAKixB,OAAOvB,UA3B0C1I,MAAA0P,uBAAAl0B,QAAAwkB,OA2BhC1hB,MAAA0hB,KAAA0P;;YAnWhD/xB,OA6WIivB,eAAA,SAAatxB,QAAgC0G,QAAiBsI,KAAcnK;gBAExE,IAAI6B,WAAWD,gBAAUjG,SAAS;oBAC9B,IAAM+X,SAASqP,UAAUpnB;oBACzB+X,OAAO4S,UAAU5S,OAAO4S,WAAW;oBACnC5S,OAAO4S,QAAQnc,OAAOxO;oBACtB9C,KAAKmvB,MAAM5c,SAAS;+BACTsI,OAAO4S,QAAQnc;;oBAG1B,OAAO;wBAAE0L,MNvaX;wBMua2C1L;;;gBAG7C,OAAInK,YAAYwjB,QAAQ1iB,QACb;oBAAE+U,MN9aX;oBMibK;oBAAEA,MN/aP;oBM+auCpQ,UAAUD,mBAAmB7J;;;YA9X9E6B,OAiYIkoB,gBAAA,SAAcyC;gBAA6C,IAAAsH,UAAA52B;gBACvD,OAAOsvB,SAAStN,cAAc9e,KAAK,SAAAkF;oBAC/B,IAAMyuB,sBAAsBvoB,cAAclG,KAAK;wBAC3CwuB,QAAKtL,UAAUiH,IAAf;wBACA,OAAOqE,QAAKjV;uBACb;oBAEHiV,QAAKzH,MAAM5c,SAASskB,oBAAoB5vB;;;YAxYpDtC,OA4YI4sB,iBAAA;gBAAiB,IAAAuF,UAAA92B,MACP+2B,uBAAuBhiB,iBAAiBjS,QAAQ,UAAU+O,KAAK;oBACjEilB,QAAKxL,UAAUiH,IAAf;oBACAuE,QAAK1I,QAAQ,IAAIxpB,MAAJ;;gBAGjB5E,KAAKmvB,MAAM5c,SAASwkB,qBAAqB9vB;;YAlZjDtC,OAqZI0uB,aAAA;gBAAkC,IAAA2D,UAAAh3B;gBAC9B,OAAO6D,qBAAaiC,IAAI;oBACpB,IAAMC,UAAUixB,QAAKljB,MAAM/N;oBAE3B,IAAIA,SACA,OAAOixB,QAAK9F,YAAYnrB,QAAQA,SAAS,IAAInB,MAAJ,uCAAgDmB,UAAhD;;;YA1ZzDpB,OA+ZIsyB,YAAA,SAAUztB;gBAAkD,IAAA0tB,UAAAl3B;gBACxD,OAAO6D,qBAAaiC,IAAI;oBACpBoxB,QAAK/H,MAAMtf,IAAI,SAASrG;oBACxB0tB,QAAKhG,YAAYxtB;;;YAla7BiB,OAsaIkvB,qBAAA,SAAmBzrB;gBAA0C,IAAA+uB,UAAAn3B,MACnDyF,UAAa,SAACtC;oBAAD,OAASg0B,QAAK1xB,QAAQtC;mBACnC2pB,OAAa,SAACtjB;oBAAD,OAAW2tB,QAAKF,UAAUztB;;gBAK7CsjB,KAAKrnB,UAAUA;gBAEf,OAAO;oBAAEqnB;oBAAMnL,OANI;wBAAA,OAAMwV,QAAKxV;;oBAMRwM,YALH;wBAAA,OAAMgJ,QAAKhJ,WAAW/lB;;oBAKPgiB,QAJf,SAAAgN;wBAAA,IAAGjgB,QAAHigB,OAAGjgB,OAAOE,SAAV+f,OAAU/f;wBAAV,OAAuB8f,QAAK/M,OAAO;4BAAEjT;4BAAOE;;;oBAIrB5R;;;YA/alDd,OAkbIylB,SAAA,SAAAiN;gBAAyF,IAAAC,UAAAt3B,MAAhFmX,QAAgFkgB,OAAhFlgB,OAAOE,SAAyEggB,OAAzEhgB;gBACZ,OAAOxT,qBAAaiC,IAAI;oBACpB,IAAIwxB,QAAKrG,OAAO7G,QACZ,OAAOkN,QAAKrG,OAAO7G,OAAO7pB,KAAK+2B,SAAM;wBAAEngB;wBAAOE;;;;YArb9D1S,OA0bIwpB,aAAA,SAAW/lB;gBAAwC,IAAAmvB,UAAAv3B;gBAC/C,OAAOoI,IAAIyZ,WAAW3e,KAAK,SAAA6H;oBACvB,OAAIA,SACOwsB,QAAK5V,UAGT9d,qBAAawD,MAAM,KACrBnE,KAAK;wBAAA,OAAMkF,IAAIyZ;uBACf3e,KAAK,SAAAs0B;wBACF,IAAIA,cACA,OAAOD,QAAK5V;;;;YApcpChd,OA0cIgd,QAAA;gBAA6B,IAAA8V,UAAAz3B;gBACzB,OAAO6D,qBAAaiC,IAAI;oBACpB2xB,QAAKnM,UAAUiH,IAAf;oBACA,OAAOkF,QAAK9gB,MAAMib,QAAQ7G,MAAMI;mBAEjCjoB,KAAK;oBACAu0B,QAAKjuB,SACLiuB,QAAKjuB,MAAMmY,MAAMhD,gBAAgBjZ,MAAMkM;oBAG3C,OAAO6lB,QAAKrJ,QAAQ,IAAIxpB,MAAJ;;;YApdhCD,OAwdIquB,YAAA,SAAUC,mBAAVyE;gBAAwI,IAAAC,UAAA33B,MAA3FmH,UAA2FuwB,OAA3FvwB,SAASmK,MAAkFomB,OAAlFpmB;gBAClD,OAAOzN,qBAAaiC,IAAI;oBACpB,IAAM8xB,oBAAoBD,QAAKrM,UAAUsM;oBAEzC,IAAKA,mBAAL;wBAIA,IAAIC,kBAAkB5E,kBAAkBlR;wBAExC,IAAK8V,mBAAoBxuB,aAAawuB,oBvD5b3C,SAAuBzvB;4BAC1B;gCAEI,KAAKA,IAAIC,SAASO,MACd,QAAO;gCAGX,IAA0B,kBAAtBR,IAAIC,SAASO,MACb,QAAO;8BAEb,OAAOzF;4BAIT,QAAO;yBuD8a4D20B,CAAcD,kBAAzE;4BAMA,IAAMtsB,OAFNssB,kBAAkBvuB,iBAAiBuuB,kBAEPhlB,UACtB+B,KAAK+iB,QAAKI,eAAeH,mBAAmB;gCAAEzwB;gCAASmK;gCAAK/F;;4BAElE,IAAKqJ,IAAL;gCAIA,IAAIA,GAAGpJ,kBAAkBD,KACrB,MAAM,IAAI3G,MAAJ;iCnDrFf,SAA8BwD,KAA4BwM;oCAE7D,IAAIY,MAAMZ,GAAGojB,QAAQ9mB;oCAErB,IAAY,WAARsE,KACA,MAAM,IAAI5Q,MAAJ,sCAA+C4Q;oCAKzD,KAFA,IAAI/J,kBAAkBrD,IAAIyK,SAASpH,iBAE5BA,gBAAgBwsB,YAAYxsB,gBAAgBwsB,SAASz1B,UACxDiJ,gBAAgBiL,YAAYjL,gBAAgBwsB,SAAS;oCAGzD,MAAOrjB,GAAGqjB,SAASz1B,UACfiJ,gBAAgBwI,YAAYW,GAAGqjB,SAAS;iCmDyEpCC,CAAqBL,iBAAiBjjB;gCA1BZ,IAAAujB,SA4BgCR,QAAKrM,UAAUgB,cAAc,IA5B7D8L,eAAAD,OA4BpBhhB,oBA5BoB,MAAAihB,8BAAAC,gBAAAF,OA4BL9gB,sBA5BK,MAAAghB,gCAAAC,iBAAAH,OA4BW/jB,wBA5BX,MAAAkkB,iBA4BqB,SA5BrBA;iCA6B1BlkB,UAAUI,eAAeJ,SAAS7I,UAElB4L,SAASE,WACrBN,SAAS3C,SAAS,SAAAmkB;oCAA4C,IAAlC1gB,WAAkC0gB,OAAzCphB,OAAyBW,YAAgBygB,OAAxBlhB;oCAClCsgB,QAAKvN,OAAO;wCACRjT,OAAQA,QAAQU,gBAAWlS;wCAC3B0R,QAAQA,SAASS,iBAAYnS;;mCAElC;oCAAEwR;oCAAOE;oCAAQjP,KAAKyvB;;;;;;;YA9fzClzB,OAmgBIozB,iBAAA,SAAeS,UAAfC;gBAA6S,IAAAC,UAAA14B,MAAzOmH,UAAyOsxB,OAAzOtxB,SAASmK,MAAgOmnB,OAAhOnnB,KAAK4C,YAA2NukB,OAA3NvkB,WAAW3I,MAAgNktB,OAAhNltB,KAAKzB,QAA2M2uB,OAA3M3uB,OAAO0lB,iBAAoMiJ,OAApMjJ;gBAErG,OAAOgJ,SAASj4B,KAAKP,MAAM;oBACvBkU;oBACA/M;oBACAmK;oBACA/F;oBACAzB;oBACA0lB;oBACA5N,OAAY;wBAAA,OAAM8W,QAAK9W;;oBACvBD,OAAY;wBAAA,OAAM+W,QAAK/W;;oBACvBwP,OAAYnxB,KAAKmxB;oBACjBrd,OAAY9T,KAAK8T;oBACjB0B,KAAYxV,KAAKsrB,UAAU9V;oBAC3Bqa,YAAY7vB,KAAKsrB,UAAUuE;oBAC3BlZ,OAAY3W,KAAK2W;;;YAlhB7BhS,OAshBIkuB,kBAAA,SAAgBlD,gBAAhBgJ;gBAAuT,IAAAC,UAAA54B,MAAzP+uB,aAAyP4J,OAAzP5J,YAAYQ,sBAA6OoJ,OAA7OpJ,qBAAqBpoB,UAAwNwxB,OAAxNxxB,SAASmK,MAA+MqnB,OAA/MrnB;gBACpG,OAAOzN,qBAAawC,IAAI,EACpBspB,eAAelZ,aAAavT,KAAKyR,eAEjCoa,aAAaA,WAAWtY,eAAe,MAEvC8Y,sBAAsBA,oBAAoB9Y,eAAe,QAC1DvT,KAAK,SAAA21B;oBAA0C,IAAvC3kB,YAAuC2kB,OAAA,IAA5B/uB,QAA4B+uB,OAAA,IAArBrJ,iBAAqBqJ,OAAA,IACxCC,iBAAiBF,QAAKb,eAAea,QAAKtN,UAAUyN,mBAAmB;wBAAE5xB;wBAASmK;wBAAK4C;wBAAWpK;wBAAO0lB;wBAAgBjkB,KAAKsH;;oBACpI,IAAIimB,gBAAgB;wBAChB7kB,YAAYC,WAAW4kB;wBACvBF,QAAKzJ,MAAM5c,SAAS;4BAAA,OAAMsE,eAAeiiB;;wBACzCF,QAAKjJ,iBAAiBxF,gBAAgB2O;wBACtC,OAAOF,QAAKjJ;;;;YAniB5BhrB,OAwiBIypB,UAAA,SAAQjrB;gBAA4F,IAAA61B,UAAAh5B;qBAAA,MAA5FmD,cAAc,IAAIyB,MAAJ;gBAClB,OAAOf,qBAAaiC,IAAI;oBACpBkzB,QAAK1N,UAAUiH,IAAf;oBACAyG,QAAK9H,YAAY9rB,YAAYjC;oBAC7B,OAAO61B,QAAK7J,MAAM9oB;;;YA5iB9B1B,OAgjBIc,UAAA,SAAQtC;gBAAkC,IAAA81B,UAAAj5B;gBAEtC,OAAO6D,qBAAaiC,IAAI;oBACpBmzB,QAAK/H,YAAY9rB,YAAYjC;oBAC7B,OAAO81B,QAAKtiB,MAAMib,QAAQ7G,MAAM9O,OAAO9Y;mBAExCD,KAAK;oBACJ,OAAO+1B,QAAK/H;mBAEbhuB,KAAK;oBACJ,MAAMC;;;YA1jBlBwB,OA8jBIskB,aAAA,SAAWqG,UAAwBtmB,QAAiB7B;gBAA2E,IAAA+xB,UAAAl5B;gBAEvH,OAAO6D,qBAAaiC,IAAI;oBACpB,OAAOwpB,SAAStN;mBAEjB9e,KAAK,SAAAkF;oBACJ,IAAKsX,cAAWA,WAAO3B,YAAY;wBAAE3V;wBAAKY;2BAAa0W,WAAO6J,UAAUvgB,QAAQA,SAAhF;wBAIA,IAAMmwB,YAAYD,QAAK5N,UAAU8N;wBAEjC,KAAKD,WACD,MAAM,IAAIv0B,MAAJ,6BAAsCuC;wBAGhD,IAAMkyB,eAAeprB,iBAAiBkrB;wBACtCzZ,WAAO4J,QAAQlhB,KAAKY;wBACpB,OAAO0W,WAAOuJ,WAAWna,iBAAiBqqB,YAAYE;;;;YAhlBtE,OAAArI;SAAA,IC7CasI,6BAAb;YAiBI,SAAAA,kBAAYhO,WAA0B7oB,QAAgC4S;gBAA+B,IAAAtR,QAAA/D;gBAAAA,KAfrGsrB,iBAeqG;gBAAAtrB,KAdrGyC,cAcqG;gBAAAzC,KAbrGmH,eAaqG;gBAAAnH,KAZrGixB,cAYqG;gBAAAjxB,KAXrG8T,aAWqG;gBAAA9T,KAVrGmvB,aAUqG;gBAAAnvB,KARrG4hB,aAQqG;gBAAA5hB,KAPrGoqB,cAOqG;gBAAApqB,KANrG+3B,sBAMqG;gBAAA/3B,KAJrG2hB,aAIqG;gBAAA3hB,KAHrGyF,eAGqG;gBAAAzF,KAFrG2W,aAEqG;gBACjG3W,KAAKsrB,YAAYA;gBACjBtrB,KAAKmH,UAAUkO,QAAQlO;gBACvBnH,KAAKixB,SAAStC,eAAetZ,QAAQlO;gBACrCnH,KAAKmvB,QAAQ/c,QAAQpS;gBAErBA,KAAK4hB,QAAQoP,uBAAgBhvB,UAAU4f;gBACvC5hB,KAAKoqB,SAAS4G,uBAAgBhvB,UAAUooB;gBACxCpqB,KAAK+3B,iBAAiB/G,uBAAgBhvB,UAAU+1B;gBAGhD/3B,KAAK8T,QAAQ;gBAXoF,SAAAN,MAAA,GAAAsC,gBAY1EhV,OAAO8F,KAAKyO,QAAQvB,QAZsDN,MAAAsC,cAAAtT,QAAAgR,OAY9C;oBAA9C,IAAM6iB,WAAQvgB,cAAAtC,MACT2gB,UAAUn0B,KAAKsrB,UAAUG,kBAAkB4K;oBAC7ClC,WAAWA,QAAQmC,iBAAiBjhB,QAAQvB,MAAMuiB,cAElDr2B,KAAK8T,MAAMuiB,YAAYhhB,QAAQvB,MAAMuiB;;gBAI7Cr2B,KAAK2hB,QAAUtM,QAAQmhB,UAAU7U;gBACjC3hB,KAAKyF,UAAU4P,QAAQmhB,UAAU/wB;gBACjCzF,KAAK2W,QAAUtB,QAAQmhB,UAAU7f;gBAEjC3W,KAAKsrB,UAAU+F,wBAAwBrxB;gBACvCA,KAAKmvB,MAAM5c,SAAS;oBAAA,OAAMxO,MAAKunB,UAAUgG,uBAAuBvtB;;gBAEhE/D,KAAKu5B,oBAAoB92B;;YA5CjC,IAAAkC,SAAA20B,kBAAAt3B;YAAA2C,OA+CI60B,cAAA;gBAAmC,IAAA10B,SAAA9E;gBAC/B,OAAO;oBACHw2B,WAAWx2B,KAAKy5B;oBAChBrL,SAAW;wBAAA,OAAMtpB,OAAKspB;;;;YAlDlCzpB,OAsDI40B,sBAAA,SAAoB92B;gBAAgC,IAAA4C,SAAArF,MAC1C05B,4BAA4BprB,cAAc7L,QAAQ;oBAAA,OAAM4C,OAAK+oB;mBAAW;gBAC9EpuB,KAAKmvB,MAAM5c,SAASmnB,0BAA0BzyB;;YAxDtDtC,OA2DI80B,eAAA;gBAAsC,KAClC,IAAMjD,YAAY,IACZz2B,OAAOC,MAFqBsF,QAAA,SAAAugB,KAAA6Q;oBAI7B,IAAM/0B,MAAG+0B,uBAAA7Q;oBACV2Q,UAAU70B,OAAO;wBAEb,OAAOqvB,uBAAgBhvB,UAAUL,KAAKe,MAAM3C,MAAMwC;;oBAEtDi0B,UAAU70B,KAAKshB,WAAWthB;mBATIkkB,MAAA,GAAA6Q,yBAIhB12B,KAAKixB,OAAOvB,UAJI7J,MAAA6Q,uBAAAl0B,QAAAqjB,OAIMvgB,MAAAugB,KAAA6Q;gBAQxC,OAAOF;;YAvEf7xB,OA0EIypB,UAAA;gBACI,OAAOpuB,KAAKmvB,MAAM9oB;;YA3E1B,OAAAizB;SAAA;QChCe,SAASK,eAAeC,UAAUC;YAC/CD,SAAS53B,YAAYlB,OAAOY,OAAOm4B,WAAW73B;YAC9C43B,SAAS53B,UAAUgB,cAAc42B;YACjCA,SAASE,YAAYD;;YCOjBE;;;mBACFC,gBAAA;gBACI,QAAO;;mBAGXC,aAAA;gBACI,QAAO;;mBAGXC,iBAAA;gBACI,QAAO;;;aAIFC,mBAAb,SAAAC;YAAAT,eAAAQ,aAAAC;YAMI,SAAAD,YAAYx5B,MAAemT,OAAuBmkB;gBAA6B,IAAAl0B;iBAC3EA,QAAAq2B,MAAA75B,KAAAP,eANJW,YAK+E;gBAAAoD,MAJ/E+P,aAI+E;gBAAA/P,MAH/Ek0B,gBAG+E;gBAAAl0B,MAF/EmuB,gBAE+E;gBAE3EnuB,MAAKpD,OAAOA;gBACZoD,MAAK+P,QAAQA;gBACb/P,MAAKk0B,WAAWA;gBAEhB,IAA8B,qBAAnBnkB,MAAMoe,UAAyB;oBACtCnuB,MAAKmuB,WAAWpe,MAAMoe;2BACfpe,MAAMoe;;gBAR0D,OAAAnuB;;YANnF,IAAAs2B,UAAAF,YAAAn4B;YAAAq4B,QAkBIC,SAAA;gBACI,OAAOt6B,KAAKW;;YAnBpB05B,QAsBIE,QAAA,SAAM55B;gBACF,OAAOA,SAASX,KAAKW;;YAvB7B05B,QA0BIL,gBAAA;gBACI,QAAO;;YA3BfK,QA8BI/H,SAAA,SAAUkG;gBACN,IAAMpkB,UAAUokB,SAASx4B,KAAKW,MAAMX,KAAK8T,OAAO9T,KAAKi4B;gBACjDj4B,KAAKkyB,YACLlyB,KAAKkyB,SAAS9d;gBAElB,OAAOA;;YAnCfimB,QAsCIG,UAAA;gBACI,MAAM,IAAI51B,MAAJ;;YAvCd,OAAAu1B;SAAA,CAAiCJ,OA2CpBU,gBAAb,SAAAC;YAAAf,eAAAc,UAAAC;YAGI,SAAAD,SAAYE;gBAAe,IAAA71B;iBACvBA,SAAA41B,OAAAn6B,KAAAP,eAHJ26B,YAE2B;gBAEvB71B,OAAK61B,OAAOA;gBAFW,OAAA71B;;YAH/B,IAAA81B,UAAAH,SAAAz4B;YAAA44B,QAQIN,SAAA;gBACI,MAAM,IAAI11B,MAAJ;;YATdg2B,QAYIL,QAAA,SAAM55B;gBACF,MAAM,IAAIiE,MAAJ;;YAbdg2B,QAgBIX,aAAA;gBACI,QAAO;;YAjBfW,QAoBItI,SAAA,SAAUkG;gBACN,MAAM,IAAI5zB,MAAJ;;YArBdg2B,QAwBIJ,UAAA;gBACI,OAAOx6B,KAAK26B;;YAzBpB,OAAAF;SAAA,CAA8BV,OA6BjBc,oBAAb,SAAAC;YAAAnB,eAAAkB,cAAAC;YAGI,SAAAD,aAAY5C;gBAA6B,IAAA5yB;iBACrCA,SAAAy1B,OAAAv6B,KAAAP,eAHJi4B,gBAEyC;gBAErC5yB,OAAK4yB,WAAWA;gBAFqB,OAAA5yB;;YAH7C,IAAA01B,UAAAF,aAAA74B;YAAA+4B,QAQIT,SAAA;gBACI,MAAM,IAAI11B,MAAJ;;YATdm2B,QAYIR,QAAA,SAAM55B;gBACF,MAAM,IAAIiE,MAAJ;;YAbdm2B,QAgBIb,iBAAA;gBACI,QAAO;;YAjBfa,QAoBIzI,SAAA,SAAUkG;gBACN,MAAM,IAAI5zB,MAAJ;;YArBdm2B,QAwBIP,UAAA;gBACI,MAAM,IAAI51B,MAAJ;;YAzBd,OAAAi2B;SAAA,CAAkCd;QAgClC,SAASiB,eAAexxB;YACpB,IAAqB,mBAAVA,OACP,OAAO,IAAIixB,cAASjxB;YAEjB,IAAIA,iBAAiB2wB,oBAAe3wB,iBAAiBixB,iBAAYjxB,iBAAiBqxB,mBACrF,OAAOrxB;YAEJ,IAAIiE,MAAMC,QAAQlE,QACrB,OAAO,IAAIqxB,kBAAaI,kBAAkBzxB;YAEvC,IAAIA,eAIP,MAAM,IAAI5E,MAAJ,6EAAsF4E;;QAIpG,SAASyxB,kBAAkBhD;YAAoE,KAC3F,IAAM1zB,SAAS,IAD4EiP,MAAA,GAAAA,MAGvEykB,SAHuEz1B,QAAAgR,OAG7D;gBAAzB,IACK0nB,kBAAkBF,eADR/C,SAAJzkB;gBAGZ,IAAK0nB,iBAIL,IAAIA,2BAA2BL,mBAAc,SAAAhV,MAAA,GAAAsV,yBAClBD,gBAAgBjD,UADEpS,MAAAsV,uBAAA34B,QAAAqjB,OACQ;oBAA5C,IAAMuV,WAAQD,uBAAAtV;oBACfthB,OAAOU,KAAKm2B;uBAGhB72B,OAAOU,KAAKi2B;;YAIpB,OAAO32B;;QAmCJ,oCAAM82B,OAAuB,SAAoBjnB,SAASN;YAAkC,SAAAwnB,OAAA/4B,UAAAC,QAAby1B,WAAa,IAAAxqB,MAAA6tB,OAAA,IAAAA,OAAA,QAAAC,OAAA,GAAAA,OAAAD,MAAAC,QAAbtD,SAAasD,OAAA,KAAAh5B,UAAAg5B;YAC/F,IAAuB,mBAAZnnB,SACP,OAAO,IAAI+lB,iBAAY/lB,SAASN,SAAS,IAAImnB,kBAAkBhD;YAGnE,IAAuB,qBAAZ7jB,SAEP,OAAO4mB,eAAe5mB,QAAQN,SAAS,IAAImnB,kBAAkBhD;YAGjE,MAAM,IAAI7xB,UAAJ;WC9MJo1B,mBACO,QADPA,qBAEO,UAFPA,qBAGO,UAHPA,mBAIO,QAJPA,sBAKO,WAGPC,0BACU,aADVA,kBAEU,MAwBVC,mBAAqEC,kBAAA,IAErEH,oBAAoB,SAAApe;YAAsC,IAAnCtJ,QAAmCsJ,KAAnCtJ;YACrB,KAAKA,MAAM2nB,kBACP,MAAM,IAAI72B,MAAJ,eAAwB62B,kBAAxB,cAAqDD,mBAArD;YAGV,IAAI16B,OAAO8F,KAAKkN,OAAOtR,SAAS,GAC5B,MAAM,IAAIoC,MAAJ,uCAAgD62B,kBAAhD,SAAwED,mBAAxE;YAIV,OAAO1nB,MAAM2nB;WAZsDE,gBAerEH,uBAAuB,SAAAvkB;YAA0C,IAAvCtW,OAAuCsW,MAAvCtW;YACxB,OAD+DsW,MAAjC1L,IACnBkK,cAAc9U;WAhB0Cg7B,kBA+DrEC,iBAA0DC,gBAAA,IAE1DL,sBAAsB,SAAA7f;YAA2C,IAAxC/G,KAAwC+G,MAAxC/G,IAAIqjB,WAAoCtc,MAApCsc,UACrB6D,aAAa7D,SAAS;YAE5B,IAAIA,SAASz1B,SAAS,MAAMs5B,WAAW9B,iBACnC,MAAM,IAAIp1B,MAAJ,mDAA4D42B,qBAA5D;YAGV,KAAKM,WAAWvB,MAAMiB,mBAClB,MAAM,IAAI52B,MAAJ,gEAAyEk3B,WAAWxB;YAG9F1lB,GAAGG,iBAAiB,QAAQ;gBAGxB,IAAM3M,MAAMwM,GAAGvJ;gBAEf,KAAKjD,KACD,MAAM,IAAIxD,MAAJ;gBAMV,KAHA,IAAM2G,MAAMnD,IAAIyK,UACVkpB,aAAaxwB,IAAIE,iBAEhBswB,WAAW9D,YAAY8D,WAAW9D,SAASz1B,UAC9Cu5B,WAAWrlB,YAAYqlB,WAAW9D,SAAS;gBAM/C,KAFA,IAAMzuB,QAAQsyB,WAAWxJ,OAAO5N,QAAI;oBAAEnZ;qBAE/B/B,MAAMyuB,SAASz1B,UAClBu5B,WAAW9nB,YAAYzK,MAAMyuB,SAAS;;WAjCU4D,cAsC1DL,sBAAsB,SAAA5f;YAA2C,IAAxChH,KAAwCgH,MAAxChH,IAAIqjB,WAAoCrc,MAApCqc,UACrB6D,aAAa7D,SAAS;YAE5B,IAAwB,MAApBA,SAASz1B,WAAiBs5B,WAAW7B,cACrC,MAAM,IAAIr1B,MAAJ,gDAAyD42B,qBAAzD;YAIV5mB,GAAG+lB,OAAOmB,WAAWtB;WA9CmCqB,cAiD1DL,uBAAuB,SAAAlX;YAA6D,SAA1D1P,KAA0D0P,MAA1D1P,IAAIqjB,WAAsD3T,MAAtD2T,UAAU1sB,MAA4C+Y,MAA5C/Y,KAAKywB,cAAuC1X,MAAvC0X,aAAuCnmB,MAAA,GAAAA,MAC9DoiB,SAD8Dz1B,QAAAqT,OACpD;gBAAzB,IAAMrM,QAASyuB,SAAJpiB;gBACRrM,MAAMywB,eACNrlB,GAAGX,YAAY1I,IAAI2K,eAAe1M,MAAMgxB,cAExC5lB,GAAGX,YAAYzK,MAAM8oB,OAAO0J;;WAtDoBH,gBAwFnDnX,UAAyC,SAAA1N;YAAmD,IAAAilB,kBAAA,MAAAjlB,QAAP,KAAOA,OAAhDzL,gBAAgD,MAAA0wB,YAA1CppB,WAA0CopB;YAQrG,OAPoB,SAAdD,YAAer7B,MAAMmT,OAAOmkB;gBAC9B,IAAMrjB,KArId,SAAAyG;oBAAkF,IAAzD9P,MAAyD8P,MAAzD9P,KAAK5K,OAAoD0a,MAApD1a,MAAMmT,QAA8CuH,MAA9CvH;oBAEhC,QADuB4nB,eAAe/6B,SAAS+6B,eAAeF,sBACxC;wBAAE76B;wBAAMmT;wBAAOvI;;iBAmItBkK,CAAc;oBAAE9U;oBAAMmT;oBAAOvI;;iBA3HhD,SAAAiQ;oBAAmD,SAA/B5G,KAA+B4G,MAA/B5G,IAAId,QAA2B0H,MAA3B1H,OAA2B+R,MAAA,GAAA/P,gBAC5BhV,OAAO8F,KAAKkN,QADgB+R,MAAA/P,cAAAtT,QAAAqjB,OACR;wBAAlC,IAAM2F,OAAI1V,cAAA+P,MACLxU,MAAMyC,MAAM0X;wBAElB,IAAIna,eAA8Cma,SAASiQ,mBAAmBjQ,SAASiQ,yBAIvF,IAAIjQ,KAAK5d,MAAM,oBAAmC,qBAARyD,KACtCuD,GAAGG,iBAAiByW,KAAKpd,MAAM,GAAG8C,eAAeG,WAC9C,IAAmB,mBAARA,OAAmC,mBAARA,KACzCuD,GAAGgB,aAAa4V,MAAMna,IAAIpO,kBAEvB;4BAAA,IAAmB,oBAARoO,KAMd,MAAM,IAAIjL,UAAJ,yBAAsColB,OAAtC,qBAA+Dna;6BALzD,MAARA,OACAuD,GAAGgB,aAAa4V,MAAM;;;iBA6G9B0Q,CAAS;oBAAEtnB;oBAAId;;iBA/BvB,SAAAggB;oBAA2F,IAApElf,KAAoEkf,MAApElf,IAAIjU,OAAgEmzB,MAAhEnzB,MAAMmT,QAA0DggB,MAA1DhgB,OAAOmkB,WAAmDnE,MAAnDmE,UAAU1sB,MAAyCuoB,MAAzCvoB,KAAKywB,cAAoClI,MAApCkI;oBACnD,IAAIloB,MAAM7R,eAAew5B,0BAA0B;wBAE/C,IAAIxD,SAASz1B,UAAU,GACnB,MAAM,IAAIoC,MAAJ,4CAAqD62B,0BAArD;wBAGV,IAAMrlB,OAAOtC,MAAM2nB;wBAEnB,IAAoB,mBAATrlB,MACP,MAAM,IAAIhQ,UAAcq1B,0BAAlB;wBAGV,IAAI96B,SAAS66B,oBAET5mB,GAAG+lB,OAAOvkB,WACP;4BACHxB,GAAGyB,YAAYD;6BAjK3B,SAAoBxB,IAAkBrJ;qCAAkC,MAAlCA,cAAiBzI,OAAO+P;gCAAU,SAAAW,MAAA,GAAA2oB,wBAC/CvnB,GAAGwnB,iBAAiB,WAD2B5oB,MAAA2oB,sBAAA35B,QAAAgR,OAChB;oCAA/C,IAAM6oB,SAAMF,sBAAA3oB,MACPlI,aAAa+wB,OAAO/wB;oCAE1B,IAAKA,YAAL;wCAIA,IAAMgxB,YAAY/wB,IAAIkK,cAAc;wCAEpC6mB,UAAU3B,OAAO0B,OAAOE;wCACxBjxB,WAAWkxB,aAAaF,WAAWD;;;6BAuJ/BI,CAAW7nB,IAAIrJ;;4BAIUqwB,aAAaj7B,SAASi7B,aAAaJ,sBAC3C;wBAAE5mB;wBAAIjU;wBAAMmT;wBAAOmkB;wBAAU1sB;wBAAKywB;;iBASvDU,CAAY;oBAAE9nB;oBAAIjU;oBAAMmT;oBAAOmkB;oBAAU1sB;oBAAKywB;;gBAC9C,OAAOpnB;;WCxLT+nB,QAAQ;YACVC,SAAW;YACXC,WAAW;;QAGR,SAASC,yBAAT1f;YAAuJ,IAAhH9L,MAAgH8L,KAAhH9L,KAAKxH,QAA2GsT,KAA3GtT,OAAO0lB,iBAAoGpS,KAApGoS,gBAAgBjkB,MAAoF6R,KAApF7R,KAAKoL,QAA+EyG,KAA/EzG,OAA+EomB,kBAAA3f,KAAxEyS,YAAe1Y,QAAyD4lB,gBAAzD5lB,OAAOE,SAAkD0lB,gBAAlD1lB;YAExG,IAAKvN,SAAU0lB,gBAAf;gBAIAA,eAAewN,UAAUC,IAAIN,MAAMC;gBACnC9yB,MAAMkzB,UAAUC,IAAIN,MAAME;gBAE1BlmB,MAAM0I,GAAG0L,MAAME,UAAU;oBACrBuE,eAAewN,UAAUE,OAAOP,MAAMC;oBACtCpN,eAAewN,UAAUC,IAAIN,MAAME;oBAEnC/yB,MAAMkzB,UAAUE,OAAOP,MAAME;oBAC7B/yB,MAAMkzB,UAAUC,IAAIN,MAAMC;oBAE1B73B,WAAW;wBACP8R,eAAe2Y;uBAChB;;gBAGP,OACI6L,KAAA;oBAAK5mB,IAAKnD;mBACN+pB,KAAA,2CAEY/pB,MAFZ,qIAKsB6F,QALtB,wCAMuBE,SANvB,sDASY/F,MATZ,2WAmBYA,MAnBZ,eAmB8BqrB,MAAME,YAnBpC,4FAuBYvrB,MAvBZ,eAuB8BqrB,MAAMC,UAvBpC,qFA6BAvB,KAAA;oBAAMzmB,IAAK9K;oBACXuxB,KAAA;oBAAMzmB,IAAK4a;oBAEjB8C,OAAO5N,QAAI;oBAAEnZ;;;;QC9DZ,SAAS4xB,yBAAT/f;YAAmF,IAA5C7R,MAA4C6R,KAA5C7R;YAC1C,OACI8vB,KAAA,cACIA,KAAA,cACIA,KAAA,6lCA2BAA,KAAA;gBAAK3lB,OAAM;iBAGrB4c,OAAO5N,QAAI;gBAAEnZ;;;QCuDnB,IAAM6xB,oBAAc;YAAA,OAAMxrB;WACpByrB,qBAAe,SAAAjgB;YAAA,OAAevL,KAAfuL,KAAG/b;WCdXi8B,sBAAb;YAqCI,SAAAA,UAAYjoB;gBAAmCrV,KAnC/CwV,WAmC+C;gBAAAxV,KAlC/CW,YAkC+C;gBAAAX,KAhC/CkO,WAgC+C;gBAAAlO,KA/B/CgJ,cA+B+C;gBAAAhJ,KA9B/Cm5B,iBA8B+C;gBAAAn5B,KA5B/C8T,aA4B+C;gBAAA9T,KA3B/C20B,oBA2B+C;gBAAA30B,KAzB/C6vB,kBAyB+C;gBAAA7vB,KAxB/CssB,kBAwB+C;gBAAAtsB,KAtB/CmtB,4BAsB+C;gBAAAntB,KApB/Cu9B,sBAoB+C;gBAAAv9B,KAlB/CuV,kBAkB+C;gBAAAvV,KAb/C+4B,yBAa+C;gBAAA/4B,KAZ/C43B,yBAY+C;gBAAA53B,KAV/C+zB,gBAU+C;gBAAA/zB,KAR/Cw9B,mBAQ+C;gBAAAx9B,KAN/Cy9B,cAM+C;gBAAAz9B,KAJ/C09B,cAI+C;gBAAA19B,KAF/Ci0B,iBAE+C;iBC3E5C,SAAqB5e;oBAExB,KAAKA,SACD,MAAM,IAAIzQ,MAAJ;oBAIV,KAAKyQ,QAAQG,QAAQH,QAAQG,IAAI5H,MAAM,6BACnC,MAAM,IAAIhJ,MAAJ,0BAAmCyQ,QAAQG;qBA9CzD,SAAoCH;wBAEhC,IAAIA,QAAQvB,SAAoC,mBAAlBuB,QAAQvB,OAClC,MAAM,IAAIlP,MAAJ;wBAGV,IAAM+4B,iB7DoWH,SAAmB/uB;4BACtB,IAAIrK,SAAS;4BACb,KAAK,IAAI5C,OAAOiN,KACRA,IAAI3M,eAAeN,QACnB4C,OAAOU,KAAK2J,IAAIjN;4BAGxB,OAAO4C;yB6D3WgB+K,CAAOib;wBAE9B,IAAIlV,QAAQvB,OAAO,SAAAN,MAAA,GAAAsC,gBACGhV,OAAO8F,KAAKyO,QAAQvB,QADvBN,MAAAsC,cAAAtT,QAAAgR,OAC+B;4BAAzC,IAAM7R,MAAGmU,cAAAtC,MAGJgY,OAAOnW,QAAQvB,MAAMnS;4BAE3B,KAAK6pB,QAA0B,mBAATA,MAClB,MAAM,IAAI5mB,MAAJ,4BAAqCjD,MAArC;4BAGV,KAAK6pB,KAAKxO,MACN,MAAM,IAAIpY,MAAJ;4BAGV,KAA2C,MAAvC+4B,eAAe34B,QAAQwmB,KAAKxO,OAC5B,MAAM,IAAIpY,MAAJ,qCAA8C+4B,eAAetvB,KAAK;4BAG5E,IAAImd,KAAKiJ,YAAYjJ,KAAK4I,SACtB,MAAM,IAAIxvB,MAAJ;4BAGV,IAAI4mB,KAAKxO,SAASuN,UAAUvO,YAAYwP,KAAKqF,eAAerF,KAAKuF,YAC7D,MAAM,IAAInsB,MAAJ;;qBAkBlBg5B,CAAwBvoB;oBAExB,IAAIA,QAAQwa,YAAY;wBACpB,IAAIxa,QAAQwa,eAAepX,KAAKpD,QAAQwa,WAAW1Y,WAAWoB,OAAOlD,QAAQwa,WAAW1Y,QACpF,MAAM,IAAIvS,MAAJ;wBAGV,IAAIyQ,QAAQwa,eAAepX,KAAKpD,QAAQwa,WAAWxY,YAAYkB,OAAOlD,QAAQwa,WAAWxY,SACrF,MAAM,IAAIzS,MAAJ;;oBAId,IAAIyQ,QAAQkoB,kBACJloB,QAAQkoB,mBAAmB5S,QAAQ3iB,UAAUqN,QAAQkoB,mBAAmB5S,QAAQ1iB,OAChF,MAAM,IAAIrD,MAAJ,gCAAwCyQ,QAAQkoB,kBAAkB;oBAIhF,KAAKloB,QAAQnH,KACT,MAAM,IAAItJ,MAAJ;oBAGV,IAA2B,mBAAhByQ,QAAQnH,OAA2C,qBAAhBmH,QAAQnH,KAClD,MAAM,IAAI9H,UAAJ;oBAGV,IAAIiP,QAAQuiB,qBAA0D,qBAA9BviB,QAAQuiB,mBAC5C,MAAM,IAAIhzB,MAAJ;oBAGV,IAAKyQ,QAAQ0jB,qBAA8F,qBAA9B1jB,QAAQ0jB,mBACjF,MAAM,IAAIn0B,MAAJ;iBDkCNmvB,CAAS1e;gBAKTrV,KAAKwV,MAAMH,QAAQG;gBACnBxV,KAAKW,OAAOX,KAAKwV,IAAI1E,QAAQ,MAAM;gBAEnC9Q,KAAKmtB,uBAAuB9X,QAAQ8X,wBAAwBrlB;gBAE5D,IAAIw1B,UAAUO,WAAW79B,KAAKwV,MAC1B,MAAM,IAAI5Q,MAAJ,6DAAsE5E,KAAKwV;gBAMrFxV,KAAK20B,eDtCF;oBACH7xB,QAAQ;wBACJka,MAAe;wBACf2Y,cAAe;wBACflB,WAAe;wBACf6B,gBAAe;wBACfvC,UALI,SAAA9c;4BAKkE,IAA3D5V,QAA2D4V,MAA3D5V;4BACP,KAAKsN,SAAStN,WAAWsf,mBAAYG,cAAczf,QAC/C,MAAM,IAAIuD,MAAJ;;wBAGd0vB,UAVI,SAAAjZ;4BAWA,OAAOgH,oBADyEhH,MAAzEha;;;oBAKf0E,SAAS;wBACLiX,MAAa;wBACbyX,WAAa;wBACbkB,cAAa;;oBAGjBhU,OAAO;wBACH3E,MAAe;wBACfyX,WAAe;wBACfkB,cAAe;wBACfjK,eAAe,SAAAlQ;4BAAA,OAAAA,MAAGmG;;;oBAGtBC,OAAO;wBACH5E,MAAe;wBACfyX,WAAe;wBACfkB,cAAe;wBACfjK,eAAe,SAAA/P;4BAAA,OAAAA,MAAGiG;;;oBAGtBwI,QAAQ;wBACJpN,MAAe;wBACfyX,WAAe;wBACfkB,cAAe;wBACfjK,eAAe,SAAA9P;4BAAA,OAAAA,MAAGwO;;;oBAGtB+H,WAAW;wBACPnV,MAAe;wBACfyX,WAAe;wBACfkB,cAAe;wBACfW,gBAAe;wBACflC,SAAegJ;wBACf9I,UAAe+I;;oBAGnBjL,YAAY;wBACRpV,MAAa;wBACbyX,WAAa;wBACbkB,cAAa;wBACbvB,SAAagJ;wBACb9I,UAAa+I;;oBAGjBnL,UAAU;wBACNlV,MAAa;wBACbyX,WAAa;wBACbkB,cAAa;wBACbvB,SAAagJ;wBACb9I,UAAa+I;;oBAGjBhL,SAAS;wBACLrV,MAAe;wBACfyX,WAAe;wBACfkB,cAAe;wBACfW,gBAAe;wBACflC,SAAegJ;wBACf9I,UAAe+I;;oBAGnB53B,SAAS;wBACLuX,MAAe;wBACfyX,WAAe;wBACfkB,cAAe;wBACfjK,eAAe,SAAApH;4BAAA,OAAAA,MAAG7e;;;oBAGtBynB,SAAS;wBACLlQ,MAAe;wBACfyX,WAAe;wBACfkB,cAAe;wBACfvB,SAAegJ;wBACf1R,eAAe,SAAAoI;4BAAA,OAAAA,MAAG5G;;;;gBClDtBltB,KAAK8T,QAAQuB,QAAQvB,SAAS;gBAnBa,IAAAsJ,OAuBsC/H,QAAQwa,cAAc,IAvB5DiO,aAAA1gB,KAuBnCjG,oBAvBmC,MAAA2mB,aAuB3BlT,mBAAmBC,QAvBQiT,YAAAC,cAAA3gB,KAuBD/F,sBAvBC,MAAA0mB,cAuBQnT,mBAAmBE,SAvB3BiT;gBAwB3C/9B,KAAK6vB,aAAa;oBAAE1Y;oBAAOE;;gBAE3BrX,KAAKkO,MAAMmH,QAAQnH;gBACnBlO,KAAKgJ,SAASqM,QAAQrM;gBACtBhJ,KAAKm5B,YAAY9jB,QAAQ8jB;gBAEzBn5B,KAAKuV,aAAaF,QAAQE,cAAc;gBACxCvV,KAAKuV,WAAWH,SAASpV,KAAKuV,WAAWH,UAAU;gBACnDpV,KAAKuV,WAAWob,QAAQ3wB,KAAKuV,WAAWob,SAAS;gBAEjD3wB,KAAKu9B,iBAAiBloB,QAAQkoB,kBAAkB5S,QAAQ3iB;gBAExDhI,KAAKssB,aAAajX,QAAQiX;gBAG1BtsB,KAAK+4B,oBAAoB1jB,QAAQ0jB,qBAAuD+D;gBACxF98B,KAAK43B,oBAAoBviB,QAAQuiB,qBAAuDuF;gBAExFn9B,KAAK+zB,WAAW1e,QAAQ0e;gBAExB/zB,KAAK09B,SAASroB,QAAQqoB,UAAU;oBAC5BM,OAAOpsB;oBACPqsB,MAAOrsB;oBACPssB,MAAOtsB;oBACPzN,OAAOyN;;gBAGX5R,KAAKm+B;gBACLn+B,KAAKo+B;gBAELd,UAAUO,WAAW79B,KAAKwV,OAAOxV;;YA3FzC,IAAA2E,SAAA24B,UAAAt7B;YAAA2C,OA8FIqpB,eAAA;gBACI,IAAIhuB,KAAKi0B,WACL,OAAOj0B,KAAKi0B;gBAFoB,KAKpC,IAAMA,YAAYnzB,OAAO8F,KAAK5G,KAAK8T,QALCN,MAAA,GAAAsC,gBAMlBhV,OAAO8F,KAAK5G,KAAK20B,eANCnhB,MAAAsC,cAAAtT,QAAAgR,OAMc;oBAA7C,IAAM7R,MAAGmU,cAAAtC;qBACsB,MAA5BygB,UAAUjvB,QAAQrD,QAClBsyB,UAAUhvB,KAAKtD;;gBAIvB3B,KAAKi0B,YAAYA;gBACjB,OAAOA;;YA3GftvB,OA+GI8mB,oBAAA,SAAkB9qB;gBAEd,OAAOX,KAAK8T,MAAMnT,SAASX,KAAK20B,aAAah0B;;YAjHrDgE,OAoHIssB,SAAA,SAAOtwB,MAAe09B;gBAgBd,MAAM,IAAIz5B,MAAJ;;YApIlBD,OAwIIw5B,gBAAA;gBACI,IAAIn+B,KAAKs+B,WAAW;oBAChB,IAAIx7B,OAAO26B,QACP,MAAM,IAAI74B,MAAJ,sBAA+B5E,KAAKW,OAApC;oBAGV,IAAM6I,QAAQ,IAAI2iB,qBAAensB;oBACjC8C,OAAO26B,SAASz9B,KAAKy9B,SAASj0B,MAAMkkB;;;YA/IhD/oB,OAmJIy5B,iBAAA;gBAAiB,IAAAr6B,QAAA/D;gBACbqf,MAAOiL,8BAAL,MAAsCtqB,KAAKW,MAAS;oBAClD,QAAO;;gBAGX0e,MAAOiL,wBAAL,MAAgCtqB,KAAKW,MAAS,SAAAsW;oBAAqD,IAAlDxU,SAAkDwU,MAAlDxU,QAAkD87B,aAAAtnB,MAA1CwE,MAAQtU,UAAkCo3B,WAAlCp3B,SAAS2M,QAAyByqB,WAAzBzqB,OAAO0iB,YAAkB+H,WAAlB/H;oBAE/E,OADiB,IAAI8C,2BAAkBv1B,OAAMtB,QAAQ;wBAAE0E;wBAAS2M;wBAAO0iB;uBACvDgD;;;YA1J5B70B,OA8JI65B,cAAA,SAAYp2B;gBACR,OAAOkT,UAAKlT,KAASkiB,8BAAV,MAA2CtqB,KAAKW,MAASuC,KAAK,SAAAmY;oBACrE,OADmFA,MAAXI;mBAEzE/V,MAAM;oBACL,QAAO;;;YAlKnBf,OAsKI+wB,SAAA,SAAO5hB;gBACH,OAAwB,qBAAb9T,KAAKkO,MACLlO,KAAKkO,IAAI;oBAAE4F;qBAGf9T,KAAKkO;;YA3KpBvJ,OA8KI8tB,mBAAA,SAAiB3e;gBACb,OAAI9T,KAAKgJ,UAAiC,mBAAhBhJ,KAAKgJ,SACpBhJ,KAAKgJ,SAGTiF,iBAAiBjO,KAAK01B,OAAO5hB;;YAnL5CnP,OAsLIoE,YAAA,SAAU+K;gBACN,OAAIrM,aAAQzH,KAAKgJ,UAENhJ,KAAKgJ,SAGThJ,KAAKyyB,iBAAiB3e;;YA5LrCnP,OA+LIy0B,eAAA;gBACI,IAAIp5B,KAAKm5B,WACL,OAAOn5B,KAAKm5B;;YAjMxBx0B,OAqMI25B,UAAA;gBACI,IAAMG,UAAUvS;gBAChB,OAAOve,QAAQ8wB,WAAWA,QAAQjpB,QAAQxV,KAAKwV;;YAvMvD7Q,OA0MI+5B,sBAAA,SAAgDv3B,SAAmC+M;gBAC/E,IAAIA,WAAW;oBACX,IAAyB,mBAAdA,cAA2BC,UAAUD,YAC5C,MAAM,IAAI9N,UAAJ;oBAGV,OAAO8N;;gBAGX,IAAI/M,YAAYwjB,QAAQ1iB,OAEpB,OAAO;gBAGX,MAAM,IAAIrD,MAAJ;;YAxNdD,OA2NIg6B,oBAAA,SAAkBx3B,SAAoC2M;gBAClD,IAAIA,MAAMhR,QACN,OAAOuf,oBAAcvO,MAAMhR,QAAQue;gBAGvC,IAAIla,SAAS;oBACT,IAAIA,YAAYwjB,QAAQ3iB,UAAUb,YAAYwjB,QAAQ1iB,OAClD,MAAM,IAAIrD,MAAJ,2BAAoCuC;oBAG9C,OAAOA;;gBAGX,OAAOnH,KAAKu9B;;YAxOpB54B,OA2OImoB,OAAA,SAAKhZ;gBAAsD,IAAAhP,SAAA9E,MAKjDwI,SAAS,IAAIwoB,uBAAgBhxB,MAFnC8T,QAAQA,SAAS,KAIXwe,UAAS,SAAChwB,QAAQ4R,WAAW/M;oBAApB,OAAgCtD,qBAAaiC,IAAI;wBAC5D,KAAK6I,SAASrM,SACV,MAAM,IAAIsC,MAAJ;wBAGVuC,UAAUrC,OAAK65B,kBAAkBx3B,SAAS2M;wBAC1CI,YAAYpP,OAAK45B,oBAAoBv3B,SAAS+M;wBAC9C,OAAO1L,OAAO8pB,OAAOhwB,QAAQ4R,WAAW/M;;;gBAG5C,OAAA/E,SAAA,IACOoG,OAAOykB,cADd;oBAEIqF,QAAU,SAACpe,WAAW/M;wBAAZ,OAAwBmrB,QAAOxvB,QAAQoR,WAAW/M;;oBAC5Dy3B,UAAU,SAACt8B,QAAQ4R,WAAW/M;wBAApB,OAAgCmrB,QAAOhwB,QAAQ4R,WAAW/M;;;;YA/PhFxC,OAmQI+tB,mBAAA,SAAiBpwB,QAAgC0G,QAA0BkL;gBACvE,IAAI5R,WAAWQ,QAAf;oBAIA,KAAK+J,gBAAgB/J,QAAQR,SACzB,MAAM,IAAIsC,MAAJ;oBAGV,IAAM4I,SAASzE;oBAEf,KAAKuE,YAAYtE,QAAQwE,YAAYnE,aAAa/G,SAC9C,MAAM,IAAIsC,MAAJ,gCAAyCoE,OAAO/F,aAAhD,2BAAqFuK;oBAG/F,IAAI0G,aAAkC,mBAAdA,WACpB,MAAM,IAAItP,MAAJ,wEAAiFsP,YAAjF;;;YAnRlBvP,OAuRI4tB,MAAA,SAAI5b,OAAgB8nB;gBAChBz+B,KAAK09B,OAAOO,KAASj+B,KAAKW,OAA1B,MAAoCgW,OAAU8nB;;YAxRtD95B,OA8RI0sB,0BAAA,SAA2B2C;gBACvBsJ,UAAUuB,iBAAiB55B,KAAK+uB;;YA/RxCrvB,OAkSI2sB,yBAAA,SAA0B0C;gBACtBsJ,UAAUuB,iBAAiB33B,OAAOo2B,UAAUuB,iBAAiB75B,QAAQgvB,WAAW;;YAnSxFsJ,UAsSWwB,aAAP;gBACQpf,cACAA,WAAO8J;gBAKX,KAFA,IAAMhjB,UAAU,IAET82B,UAAUuB,iBAAiBr8B,UAC9BgE,QAAQvB,KAAKq4B,UAAUuB,iBAAiB,GAAGzQ;gBAG/C,OAAOvqB,qBAAawC,IAAIG,SAAStD,KAAK0O;;YAjT9C,OAAA0rB;SAAA;QAAaA,oBA2RFO,aAA2C;QA3RzCP,oBA4RFuB,mBAAsE;QA6B1E,SAASn9B,OAAU2T;YACtB,IAAMiW,YAA2B,IAAIgS,oBAAUjoB,UAEzCyX,OAAO,SAAChZ;gBAAD,OAAWwX,UAAUwB,KAAKhZ;;YACvCgZ,KAAKmE,SAAS,SAACtwB,MAAM09B;gBAAP,OAAe/S,UAAU2F,OAAOtwB,MAAM09B;;YACpDvR,KAAKwR,UAAU;gBAAA,OAAMhT,UAAUgT;;YAC/BxR,KAAK0R,cAAc,SAACp2B;gBAAD,OAASkjB,UAAUkT,YAAYp2B;;YAClD0kB,KAAK2Q,SAASnS,UAAUmS;YAGxB,OAAO3Q;;QAGJ,SAASgS;YACZ,OAAOxB,oBAAUwB;;QEzZrB5+B,oBAAAQ,EAAAq+B,qBAAA;YAAA,OAAAlqB;;QAAA3U,oBAAAQ,EAAAq+B,qBAAA;YAAA,OAAAr9B;;QAAAxB,oBAAAQ,EAAAq+B,qBAAA;YAAA,OAAAC;;QAAA9+B,oBAAAQ,EAAAq+B,qBAAA;YAAA,OAAAE;;QAAA/+B,oBAAAQ,EAAAq+B,qBAAA;YAAA,OAAAxU;;QAAArqB,oBAAAQ,EAAAq+B,qBAAA;YAAA,OAAAvU;;QAAAtqB,oBAAAQ,EAAAq+B,qBAAA;YAAA,OAAApU;;QAAAzqB,oBAAAQ,EAAAq+B,qBAAA;YAAA,OAAAhU","file":"zoid.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"zoid\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"zoid\"] = factory();\n\telse\n\t\troot[\"zoid\"] = factory();\n})((typeof self !== 'undefined' ? self : this), function() {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 0);\n","export default function _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}","/* @flow */\n\nexport function isPromise(item : mixed) : boolean {\n    try {\n        if (!item) {\n            return false;\n        }\n\n        if (typeof Promise !== 'undefined' && item instanceof Promise) {\n            return true;\n        }\n\n        if (typeof window !== 'undefined' && window.Window && item instanceof window.Window) {\n            return false;\n        }\n\n        if (typeof window !== 'undefined' && window.constructor && item instanceof window.constructor) {\n            return false;\n        }\n\n        let toString = ({}).toString;\n\n        if (toString) {\n            let name = toString.call(item);\n\n            if (name === '[object Window]' || name === '[object global]' || name === '[object DOMWindow]') {\n                return false;\n            }\n        }\n\n        if (typeof item.then === 'function') {\n            return true;\n        }\n    } catch (err) {\n        return false;\n    }\n\n    return false;\n}\n","/* @flow */\n\nimport type { ZalgoPromise } from './promise';\n\nconst dispatchedErrors = [];\nconst possiblyUnhandledPromiseHandlers = [];\n\nexport function dispatchPossiblyUnhandledError<T>(err : mixed, promise : ZalgoPromise<T>) {\n\n    if (dispatchedErrors.indexOf(err) !== -1) {\n        return;\n    }\n\n    dispatchedErrors.push(err);\n\n    setTimeout(() => {\n        if (__DEBUG__) {\n            // $FlowFixMe\n            throw new Error(`${ err.stack || err.toString() }\\n\\nFrom promise:\\n\\n${ promise.stack }`);\n        }\n\n        throw err;\n    }, 1);\n\n    for (let j = 0; j < possiblyUnhandledPromiseHandlers.length; j++) {\n        // $FlowFixMe\n        possiblyUnhandledPromiseHandlers[j](err, promise);\n    }\n}\n\nexport function onPossiblyUnhandledException(handler : (mixed, promise? : ZalgoPromise<*>) => void) : { cancel : () => void } {\n    possiblyUnhandledPromiseHandlers.push(handler);\n\n    return {\n        cancel() {\n            possiblyUnhandledPromiseHandlers.splice(possiblyUnhandledPromiseHandlers.indexOf(handler), 1);\n        }\n    };\n}\n","/* @flow */\n\nimport type { ZalgoPromise } from './promise';\n\nlet activeCount = 0;\nlet flushPromise;\n\nfunction flushActive() {\n    if (!activeCount && flushPromise) {\n        const promise = flushPromise;\n        flushPromise = null;\n        promise.resolve();\n    }\n}\n\nexport function startActive() {\n    activeCount += 1;\n}\n\nexport function endActive() {\n    activeCount -= 1;\n    flushActive();\n}\n\nexport function awaitActive(Zalgo : Class<ZalgoPromise<*>>) : ZalgoPromise<void> { // eslint-disable-line no-undef\n    let promise = flushPromise = flushPromise || new Zalgo();\n    flushActive();\n    return promise;\n}\n","/* @flow */\n\nimport { isPromise } from './utils';\nimport { onPossiblyUnhandledException, dispatchPossiblyUnhandledError } from './exceptions';\nimport { startActive, endActive, awaitActive } from './flush';\n\nexport class ZalgoPromise<R : mixed> {\n\n    resolved : boolean\n    rejected : boolean\n    errorHandled : boolean\n    value : R\n    error : mixed\n    handlers : Array<{\n        promise : ZalgoPromise<*>,\n        onSuccess : void | (result : R) => mixed,\n        onError : void | (error : mixed) => mixed\n    }>\n    dispatching : boolean\n    stack : string\n\n    constructor(handler : ?(resolve : (result : R) => void, reject : (error : mixed) => void) => void) {\n\n        this.resolved = false;\n        this.rejected = false;\n        this.errorHandled = false;\n\n        this.handlers = [];\n\n        if (handler) {\n\n            let result;\n            let error;\n            let resolved = false;\n            let rejected = false;\n            let isAsync = false;\n\n            startActive();\n\n            try {\n                handler(res => {\n                    if (isAsync) {\n                        this.resolve(res);\n                    } else {\n                        resolved = true;\n                        result = res;\n                    }\n\n                }, err => {\n                    if (isAsync) {\n                        this.reject(err);\n                    } else {\n                        rejected = true;\n                        error = err;\n                    }\n                });\n\n            } catch (err) {\n                endActive();\n                this.reject(err);\n                return;\n            }\n\n            endActive();\n\n            isAsync = true;\n\n            if (resolved) {\n                // $FlowFixMe\n                this.resolve(result);\n            } else if (rejected) {\n                this.reject(error);\n            }\n        }\n\n        if (__DEBUG__) {\n            try {\n                throw new Error(`ZalgoPromise`);\n            } catch (err) {\n                this.stack = err.stack;\n            }\n        }\n    }\n\n    resolve(result : R) : ZalgoPromise<R> {\n        if (this.resolved || this.rejected) {\n            return this;\n        }\n\n        if (isPromise(result)) {\n            throw new Error('Can not resolve promise with another promise');\n        }\n\n        this.resolved = true;\n        this.value = result;\n        this.dispatch();\n\n        return this;\n    }\n\n    reject(error : mixed) : ZalgoPromise<R> {\n        if (this.resolved || this.rejected) {\n            return this;\n        }\n\n        if (isPromise(error)) {\n            throw new Error('Can not reject promise with another promise');\n        }\n\n        if (!error) {\n            let err = (error && typeof error.toString === 'function' ? error.toString() : Object.prototype.toString.call(error));\n            error = new Error(`Expected reject to be called with Error, got ${ err }`);\n        }\n\n        this.rejected = true;\n        this.error = error;\n\n        if (!this.errorHandled) {\n            setTimeout(() => {\n                if (!this.errorHandled) {\n                    dispatchPossiblyUnhandledError(error, this);\n                }\n            }, 1);\n        }\n\n        this.dispatch();\n\n        return this;\n    }\n\n    asyncReject(error : mixed) : ZalgoPromise<R> {\n        this.errorHandled = true;\n        this.reject(error);\n        return this;\n    }\n    \n    dispatch() {\n\n        let { dispatching, resolved, rejected, handlers } = this;\n\n        if (dispatching) {\n            return;\n        }\n\n        if (!resolved && !rejected) {\n            return;\n        }\n\n        this.dispatching = true;\n        startActive();\n\n        for (let i = 0; i < handlers.length; i++) {\n\n            let { onSuccess, onError, promise } = handlers[i];\n\n            let result;\n\n            if (resolved) {\n\n                try {\n                    result = onSuccess ? onSuccess(this.value) : this.value;\n                } catch (err) {\n                    promise.reject(err);\n                    continue;\n                }\n\n            } else if (rejected) {\n\n                if (!onError) {\n                    promise.reject(this.error);\n                    continue;\n                }\n\n                try {\n                    result = onError(this.error);\n                } catch (err) {\n                    promise.reject(err);\n                    continue;\n                }\n            }\n\n            if (result instanceof ZalgoPromise && (result.resolved || result.rejected)) {\n\n                if (result.resolved) {\n                    promise.resolve(result.value);\n                } else {\n                    promise.reject(result.error);\n                }\n\n                result.errorHandled = true;\n\n            } else if (isPromise(result)) {\n\n                if (result instanceof ZalgoPromise && (result.resolved || result.rejected)) {\n                    if (result.resolved) {\n                        promise.resolve(result.value);\n                    } else {\n                        promise.reject(result.error);\n                    }\n\n                } else {\n                    // $FlowFixMe\n                    result.then(res => {\n                        promise.resolve(res);\n                    }, err => {\n                        promise.reject(err);\n                    });\n                }\n\n            } else {\n\n                promise.resolve(result);\n            }\n        }\n\n        handlers.length = 0;\n        this.dispatching = false;\n        endActive();\n    }\n\n    then<X : mixed, Y : mixed>(onSuccess : void | (result : R) => (ZalgoPromise<X> | Y), onError : void | (error : mixed) => (ZalgoPromise<X> | Y)) : ZalgoPromise<X | Y> {\n\n        if (onSuccess && typeof onSuccess !== 'function' && !onSuccess.call) {\n            throw new Error('Promise.then expected a function for success handler');\n        }\n\n        if (onError && typeof onError !== 'function' && !onError.call) {\n            throw new Error('Promise.then expected a function for error handler');\n        }\n\n        let promise : ZalgoPromise<X | Y> = new ZalgoPromise();\n\n        this.handlers.push({\n            promise,\n            onSuccess,\n            onError\n        });\n\n        this.errorHandled = true;\n\n        this.dispatch();\n\n        return promise;\n    }\n\n    catch<X : mixed, Y : mixed>(onError : (error : mixed) => ZalgoPromise<X> | Y) : ZalgoPromise<X | Y> {\n        return this.then(undefined, onError);\n    }\n\n    finally(onFinally : () => mixed) : ZalgoPromise<R> {\n\n        if (onFinally && typeof onFinally !== 'function' && !onFinally.call) {\n            throw new Error('Promise.finally expected a function');\n        }\n\n        return this.then((result) => {\n            return ZalgoPromise.try(onFinally)\n                .then(() => {\n                    return result;\n                });\n        }, (err) => {\n            return ZalgoPromise.try(onFinally)\n                .then(() => {\n                    throw err;\n                });\n        });\n    }\n\n    timeout(time : number, err : ?Error) : ZalgoPromise<R> {\n\n        if (this.resolved || this.rejected) {\n            return this;\n        }\n\n        let timeout = setTimeout(() => {\n\n            if (this.resolved || this.rejected) {\n                return;\n            }\n\n            this.reject(err || new Error(`Promise timed out after ${ time }ms`));\n\n        }, time);\n\n        return this.then(result => {\n            clearTimeout(timeout);\n            return result;\n        });\n    }\n\n    // $FlowFixMe\n    toPromise() : Promise<R> {\n        // $FlowFixMe\n        if (typeof Promise === 'undefined') {\n            throw new TypeError(`Could not find Promise`);\n        }\n        // $FlowFixMe\n        return Promise.resolve(this); // eslint-disable-line compat/compat\n    }\n\n    static resolve<X : mixed>(value : X | ZalgoPromise<X>) : ZalgoPromise<X> {\n\n        if (value instanceof ZalgoPromise) {\n            return value;\n        }\n\n        if (isPromise(value)) {\n            // $FlowFixMe\n            return new ZalgoPromise((resolve, reject) => value.then(resolve, reject));\n        }\n\n        return new ZalgoPromise().resolve(value);\n    }\n\n    static reject(error : mixed) : ZalgoPromise<R> {\n        return new ZalgoPromise().reject(error);\n    }\n\n    static asyncReject(error : mixed) : ZalgoPromise<R> {\n        return new ZalgoPromise().asyncReject(error);\n    }\n\n    static all<X : [*] | [*, *] | [*, *, *] | [*, *, *, *] | [*, *, *, *, *] | [*, *, *, *, *, *] | [*, *, *, *, *, *, *] | [*, *, *, *, *, *, *, *] | [*, *, *, *, *, *, *, *, *] | Array<mixed>>(promises : X) : ZalgoPromise<$TupleMap<X, <Y>(ZalgoPromise<Y> | Y) => Y>> { // eslint-disable-line no-undef\n\n        let promise = new ZalgoPromise();\n        let count = promises.length;\n        let results = [];\n\n        if (!count) {\n            promise.resolve(results);\n            return promise;\n        }\n\n        for (let i = 0; i < promises.length; i++) {\n            let prom = promises[i];\n\n            if (prom instanceof ZalgoPromise) {\n                if (prom.resolved) {\n                    results[i] = prom.value;\n                    count -= 1;\n                    continue;\n                }\n            } else if (!isPromise(prom)) {\n                results[i] = prom;\n                count -= 1;\n                continue;\n            }\n\n            ZalgoPromise.resolve(prom).then(result => {\n                results[i] = result;\n                count -= 1;\n                if (count === 0) {\n                    promise.resolve(results);\n                }\n            }, err => {\n                promise.reject(err);\n            });\n        }\n\n        if (count === 0) {\n            promise.resolve(results);\n        }\n\n        return promise;\n    }\n\n    static hash<O : { [string] : * }>(promises : O) : ZalgoPromise<$ObjMap<O, <Y>(ZalgoPromise<Y> | Y) => Y>> { // eslint-disable-line no-undef\n        let result = {};\n        \n        return ZalgoPromise.all(Object.keys(promises).map(key => {\n            return ZalgoPromise.resolve(promises[key]).then(value => {\n                result[key] = value;\n            });\n        })).then(() => {\n            return result;\n        });\n    }\n\n    static map<T, X>(items : Array<T>, method : (T) => (ZalgoPromise<X> | X)) : ZalgoPromise<Array<X>> {\n        // $FlowFixMe\n        return ZalgoPromise.all(items.map(method));\n    }\n\n    static onPossiblyUnhandledException(handler : (err : mixed) => void) : { cancel : () => void } {\n        return onPossiblyUnhandledException(handler);\n    }\n\n    static try<X : mixed, Y : mixed, C : mixed, A : Array<mixed>>(method : (...args : A) => (ZalgoPromise<X> | Y), context : ?C, args : ?A) : ZalgoPromise<X | Y> {\n\n        if (method && typeof method !== 'function' && !method.call) {\n            throw new Error('Promise.try expected a function');\n        }\n\n        let result;\n\n        startActive();\n        \n        try {\n            // $FlowFixMe\n            result = method.apply(context, args || []);\n        } catch (err) {\n            endActive();\n            return ZalgoPromise.reject(err);\n        }\n\n        endActive();\n\n        return ZalgoPromise.resolve(result);\n    }\n\n    static delay(delay : number) : ZalgoPromise<void> {\n        return new ZalgoPromise(resolve => {\n            setTimeout(resolve, delay);\n        });\n    }\n\n    static isPromise(value : mixed) : boolean {\n\n        if (value && value instanceof ZalgoPromise) {\n            return true;\n        }\n\n        return isPromise(value);\n    }\n\n    static flush() : ZalgoPromise<void> {\n        return awaitActive(ZalgoPromise);\n    }\n}\n","/* @flow */\n\nexport function isRegex(item : mixed) : boolean {\n    return Object.prototype.toString.call(item) === '[object RegExp]';\n}\n\n// eslint-disable-next-line no-unused-vars\nexport function noop(...args : Array<mixed>) {\n    // pass\n}\n","/* @flow */\n\nexport const PROTOCOL = {\n    MOCK:  ('mock:' : 'mock:'),\n    FILE:  ('file:' : 'file:'),\n    ABOUT: ('about:' : 'about:')\n};\n\nexport const WILDCARD = '*';\n\nexport const WINDOW_TYPE = {\n    IFRAME: ('iframe' : 'iframe'),\n    POPUP:  ('popup' : 'popup')\n};\n","/* @flow */\n/* eslint max-lines: 0 */\n\nimport { isRegex, noop } from './util';\nimport type { CrossDomainWindowType, SameDomainWindowType, DomainMatcher } from './types';\nimport { PROTOCOL, WILDCARD } from './constants';\n\nlet IE_WIN_ACCESS_ERROR = 'Call was rejected by callee.\\r\\n';\n\nexport function isFileProtocol(win : SameDomainWindowType = window) : boolean {\n    return win.location.protocol === PROTOCOL.FILE;\n}\n\nexport function isAboutProtocol(win : SameDomainWindowType = window) : boolean {\n    return win.location.protocol === PROTOCOL.ABOUT;\n}\n\nexport function getParent(win : ?CrossDomainWindowType) : ?CrossDomainWindowType {\n\n    if (!win) {\n        return;\n    }\n\n    try {\n        if (win.parent && win.parent !== win) {\n            return win.parent;\n        }\n    } catch (err) {\n        // pass\n    }\n}\n\nexport function getOpener(win : ?CrossDomainWindowType) : ?CrossDomainWindowType {\n\n    if (!win) {\n        return;\n    }\n\n    // Make sure we're not actually an iframe which has had window.open() called on us\n    if (getParent(win)) {\n        return;\n    }\n\n    try {\n        return win.opener;\n    } catch (err) {\n        // pass\n    }\n}\n\nexport function canReadFromWindow(win : CrossDomainWindowType | SameDomainWindowType) : boolean {\n    try {\n        // $FlowFixMe\n        noop(win && win.location && win.location.href);\n        return true;\n    } catch (err) {\n        // pass\n    }\n\n    return false;\n}\n\nexport function getActualDomain(win : ?SameDomainWindowType) : string {\n\n    win = win || window;\n\n    let location = win.location;\n\n    if (!location) {\n        throw new Error(`Can not read window location`);\n    }\n\n    let protocol = location.protocol;\n\n    if (!protocol) {\n        throw new Error(`Can not read window protocol`);\n    }\n\n    if (protocol === PROTOCOL.FILE) {\n        return `${ PROTOCOL.FILE }//`;\n    }\n\n    if (protocol === PROTOCOL.ABOUT) {\n\n        let parent = getParent(win);\n        if (parent && canReadFromWindow(parent)) {\n            // $FlowFixMe\n            return getActualDomain(parent);\n        }\n\n        return `${ PROTOCOL.ABOUT }//`;\n    }\n\n    let host = location.host;\n\n    if (!host) {\n        throw new Error(`Can not read window host`);\n    }\n\n    return `${ protocol }//${ host }`;\n}\n\nexport function getDomain(win : ?SameDomainWindowType) : string {\n\n    win = win || window;\n\n    let domain = getActualDomain(win);\n\n    if (domain && win.mockDomain && win.mockDomain.indexOf(PROTOCOL.MOCK) === 0) {\n        return win.mockDomain;\n    }\n\n    return domain;\n}\n\nexport function isBlankDomain(win : CrossDomainWindowType) : boolean {\n    try {\n        // $FlowFixMe\n        if (!win.location.href) {\n            return true;\n        }\n\n        if (win.location.href === 'about:blank') {\n            return true;\n        }\n    } catch (err) {\n        // pass\n    }\n\n    return false;\n}\n\nexport function isActuallySameDomain(win : CrossDomainWindowType) : boolean {\n\n    try {\n        if (win === window) {\n            return true;\n        }\n\n    } catch (err) {\n        // pass\n    }\n\n    try {\n        let desc = Object.getOwnPropertyDescriptor(win, 'location');\n\n        if (desc && desc.enumerable === false) {\n            return false;\n        }\n\n    } catch (err) {\n        // pass\n    }\n\n    try {\n        // $FlowFixMe\n        if (isAboutProtocol(win) && canReadFromWindow(win)) {\n            return true;\n        }\n    } catch (err) {\n        // pass\n    }\n\n    try {\n        // $FlowFixMe\n        if (getActualDomain(win) === getActualDomain(window)) {\n            return true;\n        }\n\n    } catch (err) {\n        // pass\n    }\n\n    return false;\n}\n\nexport function isSameDomain(win : CrossDomainWindowType | SameDomainWindowType) : boolean {\n\n    if (!isActuallySameDomain(win)) {\n        return false;\n    }\n\n    try {\n\n        if (win === window) {\n            return true;\n        }\n\n        // $FlowFixMe\n        if (isAboutProtocol(win) && canReadFromWindow(win)) {\n            return true;\n        }\n\n        // $FlowFixMe\n        if (getDomain(window) === getDomain(win)) {\n            return true;\n        }\n\n    } catch (err) {\n        // pass\n    }\n\n    return false;\n}\n\n\nexport function assertSameDomain(win : CrossDomainWindowType | SameDomainWindowType) : SameDomainWindowType {\n    if (!isSameDomain(win)) {\n        throw new Error(`Expected window to be same domain`);\n    }\n\n    // $FlowFixMe\n    return win;\n}\n\nexport function getParents(win : CrossDomainWindowType) : Array<CrossDomainWindowType> {\n\n    let result = [];\n\n    try {\n\n        while (win.parent !== win) {\n            result.push(win.parent);\n            win = win.parent;\n        }\n\n    } catch (err) {\n        // pass\n    }\n\n    return result;\n}\n\nexport function isAncestorParent(parent : CrossDomainWindowType, child : CrossDomainWindowType) : boolean {\n\n    if (!parent || !child) {\n        return false;\n    }\n\n    let childParent = getParent(child);\n\n    if (childParent) {\n        return childParent === parent;\n    }\n\n    if (getParents(child).indexOf(parent) !== -1) {\n        return true;\n    }\n\n    return false;\n}\n\nexport function getFrames(win : CrossDomainWindowType) : Array<CrossDomainWindowType> {\n\n    let result = [];\n\n    let frames;\n\n    try {\n        frames = win.frames;\n    } catch (err) {\n        frames = win;\n    }\n\n    let len;\n\n    try {\n        len = frames.length;\n    } catch (err) {\n        // pass\n    }\n\n    if (len === 0) {\n        return result;\n    }\n\n    if (len) {\n        for (let i = 0; i < len; i++) {\n\n            let frame;\n\n            try {\n                frame = frames[i];\n            } catch (err) {\n                continue;\n            }\n\n            result.push(frame);\n        }\n\n        return result;\n    }\n\n    for (let i = 0; i < 100; i++) {\n        let frame;\n\n        try {\n            frame = frames[i];\n        } catch (err) {\n            return result;\n        }\n\n        if (!frame) {\n            return result;\n        }\n\n        result.push(frame);\n    }\n\n    return result;\n}\n\n\nexport function getAllChildFrames(win : CrossDomainWindowType) : Array<CrossDomainWindowType> {\n\n    let result = [];\n\n    for (let frame of getFrames(win)) {\n        result.push(frame);\n\n        for (let childFrame of getAllChildFrames(frame)) {\n            result.push(childFrame);\n        }\n    }\n\n    return result;\n}\n\nexport function getTop(win : CrossDomainWindowType) : ?CrossDomainWindowType {\n\n    if (!win) {\n        return;\n    }\n\n    try {\n        if (win.top) {\n            return win.top;\n        }\n    } catch (err) {\n        // pass\n    }\n\n    if (getParent(win) === win) {\n        return win;\n    }\n\n    try {\n        if (isAncestorParent(window, win) && window.top) {\n            return window.top;\n        }\n    } catch (err) {\n        // pass\n    }\n\n    try {\n        if (isAncestorParent(win, window) && window.top) {\n            return window.top;\n        }\n    } catch (err) {\n        // pass\n    }\n\n    for (let frame of getAllChildFrames(win)) {\n        try {\n            if (frame.top) {\n                return frame.top;\n            }\n        } catch (err) {\n            // pass\n        }\n\n        if (getParent(frame) === frame) {\n            return frame;\n        }\n    }\n}\n\nexport function getNextOpener(win? : CrossDomainWindowType = window) : ?CrossDomainWindowType {\n    return getOpener(getTop(win) || win);\n}\n\nexport function getUltimateTop(win? : CrossDomainWindowType = window) : CrossDomainWindowType {\n    let opener = getNextOpener(win);\n\n    if (opener) {\n        return getUltimateTop(opener);\n    }\n\n    return top;\n}\n\nexport function getAllFramesInWindow(win : CrossDomainWindowType) : Array<CrossDomainWindowType> {\n    let top = getTop(win);\n\n    if (!top) {\n        throw new Error(`Can not determine top window`);\n    }\n\n    return [ ...getAllChildFrames(top), top ];\n}\n\nexport function getAllWindows(win? : CrossDomainWindowType = window) : $ReadOnlyArray<CrossDomainWindowType> {\n    let frames = getAllFramesInWindow(win);\n    let opener = getNextOpener(win);\n\n    if (opener) {\n        return [ ...getAllWindows(opener), ...frames ];\n    } else {\n        return frames;\n    }\n}\n\nexport function isTop(win : CrossDomainWindowType) : boolean {\n    return win === getTop(win);\n}\n\nexport function isFrameWindowClosed(frame : HTMLIFrameElement) : boolean {\n\n    if (!frame.contentWindow) {\n        return true;\n    }\n\n    if (!frame.parentNode) {\n        return true;\n    }\n\n    let doc = frame.ownerDocument;\n\n    if (doc && doc.documentElement && !doc.documentElement.contains(frame)) {\n        return true;\n    }\n\n    return false;\n}\n\nfunction safeIndexOf<T>(collection : Array<T>, item : T) : number {\n    for (let i = 0; i < collection.length; i++) {\n\n        try {\n            if (collection[i] === item) {\n                return i;\n            }\n        } catch (err) {\n            // pass\n        }\n    }\n\n    return -1;\n}\n\nlet iframeWindows = [];\nlet iframeFrames = [];\n\nexport function isWindowClosed(win : CrossDomainWindowType, allowMock : boolean = true) : boolean {\n\n    try {\n        if (win === window) {\n            return false;\n        }\n    } catch (err) {\n        return true;\n    }\n\n    try {\n        if (!win) {\n            return true;\n        }\n\n    } catch (err) {\n        return true;\n    }\n\n    try {\n        if (win.closed) {\n            return true;\n        }\n\n    } catch (err) {\n\n        // I love you so much IE\n\n        if (err && err.message === IE_WIN_ACCESS_ERROR) {\n            return false;\n        }\n\n        return true;\n    }\n\n\n    if (allowMock && isSameDomain(win)) {\n        try {\n            // $FlowFixMe\n            if (win.mockclosed) {\n                return true;\n            }\n        } catch (err) {\n            // pass\n        }\n    }\n\n    // Mobile safari\n\n    try {\n        if (!win.parent || !win.top) {\n            return true;\n        }\n    } catch (err) {\n        // pass\n    }\n\n    // Yes, this actually happens in IE. win === win errors out when the window\n    // is from an iframe, and the iframe was removed from the page.\n\n    try {\n        noop(win === win); // eslint-disable-line no-self-compare\n    } catch (err) {\n        return true;\n    }\n\n    // IE orphaned frame\n\n    let iframeIndex = safeIndexOf(iframeWindows, win);\n\n    if (iframeIndex !== -1) {\n        let frame = iframeFrames[iframeIndex];\n\n        if (frame && isFrameWindowClosed(frame)) {\n            return true;\n        }\n    }\n\n    return false;\n}\n\nfunction cleanIframes() {\n    for (let i = 0; i < iframeWindows.length; i++) {\n        let closed = false;\n\n        try {\n            closed = iframeWindows[i].closed;\n        } catch (err) {\n            // pass\n        }\n\n        if (closed) {\n            iframeFrames.splice(i, 1);\n            iframeWindows.splice(i, 1);\n        }\n    }\n}\n\nexport function linkFrameWindow(frame : HTMLIFrameElement) {\n\n    cleanIframes();\n\n    if (frame && frame.contentWindow) {\n        try {\n            iframeWindows.push(frame.contentWindow);\n            iframeFrames.push(frame);\n        } catch (err) {\n            // pass\n        }\n    }\n}\n\nexport function getUserAgent(win : ?SameDomainWindowType) : string {\n    win = win || window;\n    return win.navigator.mockUserAgent || win.navigator.userAgent;\n}\n\n\nexport function getFrameByName(win : CrossDomainWindowType, name : string) : ?CrossDomainWindowType {\n\n    let winFrames = getFrames(win);\n\n    for (let childFrame of winFrames) {\n        try {\n            // $FlowFixMe\n            if (isSameDomain(childFrame) && childFrame.name === name && winFrames.indexOf(childFrame) !== -1) {\n                return childFrame;\n            }\n        } catch (err) {\n            // pass\n        }\n    }\n\n    try {\n        // $FlowFixMe\n        if (winFrames.indexOf(win.frames[name]) !== -1) {\n            // $FlowFixMe\n            return win.frames[name];\n        }\n    } catch (err) {\n        // pass\n    }\n\n    try {\n        if (winFrames.indexOf(win[name]) !== -1) {\n            return win[name];\n        }\n    } catch (err) {\n        // pass\n    }\n}\n\nexport function findChildFrameByName(win : CrossDomainWindowType, name : string) : ?CrossDomainWindowType {\n\n    let frame = getFrameByName(win, name);\n\n    if (frame) {\n        return frame;\n    }\n\n    for (let childFrame of getFrames(win)) {\n        let namedFrame = findChildFrameByName(childFrame, name);\n\n        if (namedFrame) {\n            return namedFrame;\n        }\n    }\n}\n\nexport function findFrameByName(win : CrossDomainWindowType, name : string) : ?CrossDomainWindowType {\n\n    let frame;\n\n    frame = getFrameByName(win, name);\n\n    if (frame) {\n        return frame;\n    }\n\n    let top = getTop(win) || win;\n\n    return findChildFrameByName(top, name);\n}\n\nexport function isParent(win : CrossDomainWindowType, frame : CrossDomainWindowType) : boolean {\n\n    let frameParent = getParent(frame);\n\n    if (frameParent) {\n        return frameParent === win;\n    }\n\n    for (let childFrame of getFrames(win)) {\n        if (childFrame === frame) {\n            return true;\n        }\n    }\n\n    return false;\n}\n\nexport function isOpener(parent : CrossDomainWindowType, child : CrossDomainWindowType) : boolean {\n\n    return parent === getOpener(child);\n}\n\nexport function getAncestor(win : ?CrossDomainWindowType) : ?CrossDomainWindowType {\n    win = win || window;\n\n    let opener = getOpener(win);\n\n    if (opener) {\n        return opener;\n    }\n\n    let parent = getParent(win);\n\n    if (parent) {\n        return parent;\n    }\n}\n\nexport function getAncestors(win : CrossDomainWindowType) : Array<CrossDomainWindowType> {\n\n    let results = [];\n\n    let ancestor = win;\n\n    while (ancestor) {\n        ancestor = getAncestor(ancestor);\n        if (ancestor) {\n            results.push(ancestor);\n        }\n    }\n\n    return results;\n}\n\n\nexport function isAncestor(parent : CrossDomainWindowType, child : CrossDomainWindowType) : boolean {\n\n    let actualParent = getAncestor(child);\n\n    if (actualParent) {\n        if (actualParent === parent) {\n            return true;\n        }\n\n        return false;\n    }\n\n    if (child === parent) {\n        return false;\n    }\n\n    if (getTop(child) === child) {\n        return false;\n    }\n\n    for (let frame of getFrames(parent)) {\n        if (frame === child) {\n            return true;\n        }\n    }\n\n    return false;\n}\n\nexport function isPopup() : boolean {\n    return Boolean(getOpener(window));\n}\n\nexport function isIframe() : boolean {\n    return Boolean(getParent(window));\n}\n\nexport function isFullpage() : boolean {\n    return Boolean(!isIframe() && !isPopup());\n}\n\nfunction anyMatch(collection1, collection2) : boolean {\n\n    for (let item1 of collection1) {\n        for (let item2 of collection2) {\n            if (item1 === item2) {\n                return true;\n            }\n        }\n    }\n\n    return false;\n}\n\nexport function getDistanceFromTop(win : CrossDomainWindowType = window) : number {\n    let distance = 0;\n    let parent = win;\n\n    while (parent) {\n        parent = getParent(parent);\n        if (parent) {\n            distance += 1;\n        }\n    }\n\n    return distance;\n}\n\nexport function getNthParent(win : CrossDomainWindowType, n : number = 1) : ?CrossDomainWindowType {\n    let parent = win;\n\n    for (let i = 0; i < n; i++) {\n        if (!parent) {\n            return;\n        }\n\n        parent = getParent(parent);\n    }\n\n    return parent;\n}\n\nexport function getNthParentFromTop(win : CrossDomainWindowType, n : number = 1) : ?CrossDomainWindowType {\n    return getNthParent(win, getDistanceFromTop(win) - n);\n}\n\nexport function isSameTopWindow(win1 : CrossDomainWindowType, win2 : CrossDomainWindowType) : boolean {\n\n    let top1 = getTop(win1) || win1;\n    let top2 = getTop(win2) || win2;\n\n    try {\n        if (top1 && top2) {\n            if (top1 === top2) {\n                return true;\n            }\n\n            return false;\n        }\n    } catch (err) {\n        // pass\n    }\n\n    let allFrames1 = getAllFramesInWindow(win1);\n    let allFrames2 = getAllFramesInWindow(win2);\n\n    if (anyMatch(allFrames1, allFrames2)) {\n        return true;\n    }\n\n    let opener1 = getOpener(top1);\n    let opener2 = getOpener(top2);\n\n    if (opener1 && anyMatch(getAllFramesInWindow(opener1), allFrames2)) {\n        return false;\n    }\n\n    if (opener2 && anyMatch(getAllFramesInWindow(opener2), allFrames1)) {\n        return false;\n    }\n\n    return false;\n}\n\nexport function matchDomain(pattern : DomainMatcher, origin : DomainMatcher) : boolean {\n\n    if (typeof pattern === 'string') {\n\n        if (typeof origin === 'string') {\n            return pattern === WILDCARD || origin === pattern;\n        }\n\n        if (isRegex(origin)) {\n            return false;\n        }\n\n        if (Array.isArray(origin)) {\n            return false;\n        }\n    }\n\n    if (isRegex(pattern)) {\n\n        if (isRegex(origin)) {\n            return pattern.toString() === origin.toString();\n        }\n\n        if (Array.isArray(origin)) {\n            return false;\n        }\n\n        // $FlowFixMe\n        return Boolean(origin.match(pattern));\n    }\n\n    if (Array.isArray(pattern)) {\n\n        if (Array.isArray(origin)) {\n            return JSON.stringify(pattern) === JSON.stringify(origin);\n        }\n\n        if (isRegex(origin)) {\n            return false;\n        }\n\n        return pattern.some(subpattern => matchDomain(subpattern, origin));\n    }\n\n    return false;\n}\n\nexport function stringifyDomainPattern(pattern : DomainMatcher) : string {\n    if (Array.isArray(pattern)) {\n        return `(${ pattern.join(' | ') })`;\n    } else if (isRegex(pattern)) {\n        return `RegExp(${ pattern.toString() }`;\n    } else {\n        return pattern.toString();\n    }\n}\n\nexport function getDomainFromUrl(url : string) : string {\n\n    let domain;\n\n    if (url.match(/^(https?|mock|file):\\/\\//)) {\n        domain = url;\n    } else {\n        return getDomain();\n    }\n\n    domain = domain.split('/').slice(0, 3).join('/');\n\n    return domain;\n}\n\nexport function onCloseWindow(win : CrossDomainWindowType, callback : Function, delay : number = 1000, maxtime : number = Infinity) : { cancel : () => void } {\n\n    let timeout;\n\n    let check = () => {\n\n        if (isWindowClosed(win)) {\n\n            if (timeout) {\n                clearTimeout(timeout);\n            }\n\n            return callback();\n        }\n\n        if (maxtime <= 0) {\n            clearTimeout(timeout);\n        } else {\n            maxtime -= delay;\n            timeout = setTimeout(check, delay);\n        }\n    };\n\n    check();\n\n    return {\n        cancel() {\n            if (timeout) {\n                clearTimeout(timeout);\n            }\n        }\n    };\n}\n\n// eslint-disable-next-line complexity\nexport function isWindow(obj : Object) : boolean {\n\n    try {\n        if (obj === window) {\n            return true;\n        }\n    } catch (err) {\n        if (err && err.message === IE_WIN_ACCESS_ERROR) {\n            return true;\n        }\n    }\n\n    try {\n        if (Object.prototype.toString.call(obj) === '[object Window]') {\n            return true;\n        }\n    } catch (err) {\n        if (err && err.message === IE_WIN_ACCESS_ERROR) {\n            return true;\n        }\n    }\n\n    try {\n        if (window.Window && obj instanceof window.Window) {\n            return true;\n        }\n    } catch (err) {\n        if (err && err.message === IE_WIN_ACCESS_ERROR) {\n            return true;\n        }\n    }\n\n    try {\n        if (obj && obj.self === obj) {\n            return true;\n        }\n    } catch (err) {\n        if (err && err.message === IE_WIN_ACCESS_ERROR) {\n            return true;\n        }\n    }\n\n    try {\n        if (obj && obj.parent === obj) {\n            return true;\n        }\n    } catch (err) {\n        if (err && err.message === IE_WIN_ACCESS_ERROR) {\n            return true;\n        }\n    }\n\n    try {\n        if (obj && obj.top === obj) {\n            return true;\n        }\n    } catch (err) {\n        if (err && err.message === IE_WIN_ACCESS_ERROR) {\n            return true;\n        }\n    }\n\n    try {\n        noop(obj === obj);  // eslint-disable-line no-self-compare\n\n    } catch (err) {\n        return true;\n    }\n\n    try {\n        noop(obj && obj.__cross_domain_utils_window_check__);\n\n    } catch (err) {\n        return true;\n    }\n\n    return false;\n}\n\nexport function isBrowser() : boolean {\n    return (typeof window !== 'undefined' && typeof window.location !== 'undefined');\n}\n\nexport function isCurrentDomain(domain : string) : boolean {\n    if (!isBrowser()) {\n        return false;\n    }\n\n    return (getDomain() === domain);\n}\n\nexport function isMockDomain(domain : string) : boolean {\n    return domain.indexOf(PROTOCOL.MOCK) === 0;\n}\n\nexport function normalizeMockUrl(url : string) : string {\n    if (!isMockDomain(getDomainFromUrl(url))) {\n        return url;\n    }\n\n    if (!__TEST__) {\n        throw new Error(`Mock urls not supported out of test mode`);\n    }\n\n    return url.replace(/^mock:\\/\\/[^/]+/, getActualDomain(window));\n}\n","/* @flow */\n\nexport function safeIndexOf<T>(collection : Array<T>, item : T) : number {\n    for (let i = 0; i < collection.length; i++) {\n\n        try {\n            if (collection[i] === item) {\n                return i;\n            }\n        } catch (err) {\n            // pass\n        }\n    }\n\n    return -1;\n}\n\n// eslint-disable-next-line no-unused-vars\nexport function noop(...args : Array<mixed>) {\n    // pass\n}\n","/* @flow */\n\nimport { isWindow, isWindowClosed } from 'cross-domain-utils/src';\n\nimport { hasNativeWeakMap } from './native';\nimport { noop, safeIndexOf } from './util';\n\nlet defineProperty = Object.defineProperty;\nlet counter = Date.now() % 1e9;\n\nexport class CrossDomainSafeWeakMap<K : Object, V : mixed> {\n\n    name : string\n    weakmap : WeakMap<K, V>\n    keys : Array<K>\n    values : Array<V>\n\n    constructor() {\n        counter += 1;\n\n        // eslint-disable-next-line no-bitwise\n        this.name = `__weakmap_${ Math.random() * 1e9 >>> 0 }__${ counter }`;\n\n        if (hasNativeWeakMap()) {\n            try {\n                this.weakmap = new WeakMap();\n            } catch (err) {\n                // pass\n            }\n        }\n\n        this.keys  = [];\n        this.values = [];\n    }\n\n    _cleanupClosedWindows() {\n\n        let weakmap = this.weakmap;\n        let keys = this.keys;\n\n        for (let i = 0; i < keys.length; i++) {\n            let value = keys[i];\n\n            if (isWindow(value) && isWindowClosed(value)) {\n\n                if (weakmap) {\n                    try {\n                        weakmap.delete(value);\n                    } catch (err) {\n                        // pass\n                    }\n                }\n\n                keys.splice(i, 1);\n                this.values.splice(i, 1);\n\n                i -= 1;\n            }\n        }\n    }\n\n    isSafeToReadWrite(key : K) : boolean {\n\n        if (isWindow(key)) {\n            return false;\n        }\n\n        try {\n            noop(key && key.self);\n            noop(key && key[this.name]);\n        } catch (err) {\n            return false;\n        }\n\n        return true;\n    }\n\n    set(key : K, value : V) {\n\n        if (!key) {\n            throw new Error(`WeakMap expected key`);\n        }\n\n        let weakmap = this.weakmap;\n\n        if (weakmap) {\n            try {\n                weakmap.set(key, value);\n            } catch (err) {\n                delete this.weakmap;\n            }\n        }\n\n        if (!this.isSafeToReadWrite(key)) {\n\n            this._cleanupClosedWindows();\n\n            let keys = this.keys;\n            let values = this.values;\n            let index = safeIndexOf(keys, key);\n\n            if (index === -1) {\n                keys.push(key);\n                values.push(value);\n            } else {\n                values[index] = value;\n            }\n\n        } else {\n\n            let name = this.name;\n            let entry = key[name];\n\n            if (entry && entry[0] === key) {\n                entry[1] = value;\n            } else {\n                defineProperty(key, name, {\n                    value:    [ key, value ],\n                    writable: true\n                });\n            }\n        }\n    }\n\n    get(key : K) : V | void {\n\n        if (!key) {\n            throw new Error(`WeakMap expected key`);\n        }\n\n        let weakmap = this.weakmap;\n\n        if (weakmap) {\n            try {\n                if (weakmap.has(key)) {\n                    return weakmap.get(key);\n                }\n            } catch (err) {\n                delete this.weakmap;\n            }\n        }\n\n        if (!this.isSafeToReadWrite(key)) {\n\n            this._cleanupClosedWindows();\n\n            let keys = this.keys;\n            let index = safeIndexOf(keys, key);\n\n            if (index === -1) {\n                return;\n            }\n\n            return this.values[index];\n\n        } else {\n\n            let entry = key[this.name];\n\n            if (entry && entry[0] === key) {\n                return entry[1];\n            }\n        }\n    }\n\n    delete(key : K) {\n\n        if (!key) {\n            throw new Error(`WeakMap expected key`);\n        }\n\n        let weakmap = this.weakmap;\n\n        if (weakmap) {\n            try {\n                weakmap.delete(key);\n            } catch (err) {\n                delete this.weakmap;\n            }\n        }\n\n        if (!this.isSafeToReadWrite(key)) {\n\n            this._cleanupClosedWindows();\n\n            let keys = this.keys;\n            let index = safeIndexOf(keys, key);\n\n            if (index !== -1) {\n                keys.splice(index, 1);\n                this.values.splice(index, 1);\n            }\n\n        } else {\n\n            let entry = key[this.name];\n\n            if (entry && entry[0] === key) {\n                entry[0] = entry[1] = undefined;\n            }\n        }\n    }\n\n    has(key : K) : boolean {\n\n        if (!key) {\n            throw new Error(`WeakMap expected key`);\n        }\n\n        let weakmap = this.weakmap;\n\n        if (weakmap) {\n            try {\n                if (weakmap.has(key)) {\n                    return true;\n                }\n            } catch (err) {\n                delete this.weakmap;\n            }\n        }\n\n        if (!this.isSafeToReadWrite(key)) {\n\n            this._cleanupClosedWindows();\n\n            let index = safeIndexOf(this.keys, key);\n            return index !== -1;\n\n        } else {\n\n            let entry = key[this.name];\n\n            if (entry && entry[0] === key) {\n                return true;\n            }\n\n            return false;\n        }\n    }\n\n    getOrSet(key : K, getter : () => V) : V {\n        if (this.has(key)) {\n            // $FlowFixMe\n            return this.get(key);\n        }\n\n        let value = getter();\n        this.set(key, value);\n        return value;\n    }\n}\n","/* @flow */\n/* eslint max-lines: 0 */\n\nimport { ZalgoPromise } from 'zalgo-promise/src';\nimport { WeakMap } from 'cross-domain-safe-weakmap/src';\n\nimport type { CancelableType } from './types';\n\nexport function base64encode(str : string) : string {\n    if (typeof btoa === 'function') {\n        return btoa(str);\n    } else if (typeof Buffer !== 'undefined') {\n        return Buffer.from(str, 'utf8').toString('base64');\n    }\n\n    throw new Error(`Can not find window.btoa or Buffer`);\n}\n\nexport function base64decode(str : string) : string {\n    if (typeof window !== 'undefined' && typeof window.atob === 'function') {\n        return window.atob(str);\n    }\n\n    if (typeof Buffer !== 'undefined') {\n        return Buffer.from(str, 'base64').toString('utf8');\n    }\n\n    throw new Error(`Can not find window.atob or Buffer`);\n}\n\nexport function uniqueID() : string {\n\n    let chars = '0123456789abcdef';\n\n    let randomID = 'xxxxxxxxxx'.replace(/./g, () => {\n        return chars.charAt(Math.floor(Math.random() * chars.length));\n    });\n\n    let timeID = base64encode(\n        new Date().toISOString().slice(11, 19).replace('T', '.')\n    ).replace(/[^a-zA-Z0-9]/g, '').toLowerCase();\n\n    return `${ randomID }_${ timeID }`;\n}\n\nexport function getGlobal() : Object {\n    if (typeof window !== 'undefined') {\n        return window;\n    }\n    if (typeof global !== 'undefined') {\n        return global;\n    }\n    if (typeof __GLOBAL__ !== 'undefined') {\n        return __GLOBAL__;\n    }\n    throw new Error(`No global found`);\n}\n\nlet objectIDs;\n\nexport function getObjectID(obj : Object) : string {\n\n    objectIDs = objectIDs || new WeakMap();\n\n    if (obj === null || obj === undefined || (typeof obj !== 'object' && typeof obj !== 'function')) {\n        throw new Error(`Invalid object`);\n    }\n\n    let uid = objectIDs.get(obj);\n\n    if (!uid) {\n        uid = `${ typeof obj }:${ uniqueID() }`;\n        objectIDs.set(obj, uid);\n    }\n\n    return uid;\n}\n\nfunction serializeArgs(args : Array<mixed>) : string {\n    try {\n        return JSON.stringify(Array.prototype.slice.call(args), (subkey, val) => {\n            if (typeof val === 'function') {\n                return `memoize[${ getObjectID(val) }]`;\n            }\n            return val;\n        });\n    } catch (err) {\n        throw new Error(`Arguments not serializable -- can not be used to memoize`);\n    }\n}\n\n// eslint-disable-next-line flowtype/no-weak-types\nexport function memoize<R>(method : (...args : Array<any>) => R, options : { time? : number, name? : string, thisNamespace? : boolean } = {}) : ((...args : Array<any>) => R) {\n    let cacheMap = new WeakMap();\n\n    // eslint-disable-next-line flowtype/no-weak-types\n    function memoizedFunction(...args : Array<any>) : R {\n        let cache = cacheMap.getOrSet(options.thisNamespace ? this : method, () => ({}));\n\n        let key : string = serializeArgs(args);\n\n        let cacheTime = options.time;\n        if (cache[key] && cacheTime && (Date.now() - cache[key].time) < cacheTime) {\n            delete cache[key];\n        }\n\n        if (cache[key]) {\n            return cache[key].value;\n        }\n\n        let time  = Date.now();\n        let value = method.apply(this, arguments);\n\n        cache[key] = { time, value };\n\n        return cache[key].value;\n    }\n\n    memoizedFunction.reset = () => {\n        cacheMap.delete(options.thisNamespace ? this : method);\n    };\n\n    if (options.name) {\n        memoizedFunction.displayName = `${ options.name }:memoized`;\n    }\n\n    return memoizedFunction;\n}\n\n// eslint-disable-next-line flowtype/no-weak-types\nexport function memoizePromise<R>(method : (...args : Array<any>) => ZalgoPromise<R>) : ((...args : Array<any>) => ZalgoPromise<R>) {\n    let cache = {};\n\n    // eslint-disable-next-line flowtype/no-weak-types\n    function memoizedPromiseFunction(...args : Array<any>) : ZalgoPromise<R> {\n        let key : string = serializeArgs(args);\n\n        if (cache.hasOwnProperty(key)) {\n            return cache[key];\n        }\n\n        cache[key] = method.apply(this, arguments)\n            .finally(() => {\n                delete cache[key];\n            });\n\n        return cache[key];\n    }\n\n    memoizedPromiseFunction.reset = () => {\n        cache = {};\n    };\n\n    return memoizedPromiseFunction;\n}\n\n// eslint-disable-next-line flowtype/no-weak-types\nexport function promisify<R>(method : (...args : Array<any>) => R, options : { name? : string } = {}) : ((...args : Array<any>) => ZalgoPromise<R>) {\n    function promisifiedFunction() : ZalgoPromise<R> {\n        return ZalgoPromise.try(method, this, arguments);\n    }\n\n    if (options.name) {\n        promisifiedFunction.displayName = `${ options.name }:promisified`;\n    }\n\n    return promisifiedFunction;\n}\n\n// eslint-disable-next-line flowtype/no-weak-types\nexport function inlineMemoize<R>(method : (...args : Array<any>) => R, logic : (...args : Array<any>) => R, args : Array<any> = []) : R {\n    let cache = method.__inline_memoize_cache__ = method.__inline_memoize_cache__ || {};\n    let key = serializeArgs(args);\n\n    if (cache.hasOwnProperty(key)) {\n        return cache[key];\n    }\n    \n    let result = cache[key] = logic(...args);\n    return result;\n}\n\n// eslint-disable-next-line no-unused-vars\nexport function noop(...args : Array<mixed>) {\n    // pass\n}\n\nexport function once(method : Function) : Function {\n    let called = false;\n\n    return function onceFunction() : mixed {\n        if (!called) {\n            called = true;\n            return method.apply(this, arguments);\n        }\n    };\n}\n\nexport function hashStr(str : string) : number {\n    let hash = 0;\n    for (let i = 0; i < str.length; i++) {\n        hash += str[i].charCodeAt(0) * Math.pow((i % 10) + 1, 5);\n    }\n    return Math.floor(Math.pow(Math.sqrt(hash), 5));\n}\n\nexport function strHashStr(str : string) : string {\n    let hash = '';\n\n    for (let i = 0; i < str.length; i++) {\n        let total = (str[i].charCodeAt(0) * i);\n\n        if (str[i + 1]) {\n            total += (str[i + 1].charCodeAt(0) * (i - 1));\n        }\n\n        hash += String.fromCharCode(97 + (Math.abs(total) % 26));\n    }\n\n    return hash;\n}\n\nexport function match(str : string, pattern : RegExp) : ?string {\n    let regmatch = str.match(pattern);\n    if (regmatch) {\n        return regmatch[1];\n    }\n}\n\nexport function awaitKey<T: mixed>(obj : Object, key : string) : ZalgoPromise<T> {\n    return new ZalgoPromise(resolve => {\n\n        let value = obj[key];\n\n        if (value) {\n            return resolve(value);\n        }\n\n        delete obj[key];\n\n        Object.defineProperty(obj, key, {\n\n            configurable: true,\n\n            set(item) {\n                value = item;\n\n                if (value) {\n                    resolve(value);\n                }\n            },\n\n            get() : mixed {\n                return value;\n            }\n        });\n    });\n}\n\nexport function stringifyError(err : mixed, level : number = 1) : string {\n\n    if (level >= 3) {\n        return 'stringifyError stack overflow';\n    }\n\n    try {\n        if (!err) {\n            return `<unknown error: ${ Object.prototype.toString.call(err) }>`;\n        }\n\n        if (typeof err === 'string') {\n            return err;\n        }\n\n        if (err instanceof Error) {\n            let stack = err && err.stack;\n            let message = err && err.message;\n\n            if (stack && message) {\n                if (stack.indexOf(message) !== -1) {\n                    return stack;\n                } else {\n                    return `${ message }\\n${ stack }`;\n                }\n            } else if (stack) {\n                return stack;\n            } else if (message) {\n                return message;\n            }\n        }\n\n        if (typeof err.toString === 'function') {\n            return err.toString();\n        }\n\n        return Object.prototype.toString.call(err);\n\n    } catch (newErr) { // eslint-disable-line unicorn/catch-error-name\n        return `Error while stringifying error: ${ stringifyError(newErr, level + 1) }`;\n    }\n}\n\nexport function stringifyErrorMessage(err : mixed) : string {\n\n    let defaultMessage = `<unknown error: ${ Object.prototype.toString.call(err) }>`;\n\n    if (!err) {\n        return defaultMessage;\n    }\n\n    if (err instanceof Error) {\n        return err.message || defaultMessage;\n    }\n\n    if (typeof err.message === 'string') {\n        return err.message || defaultMessage;\n    }\n\n    return defaultMessage;\n}\n\nexport function stringify(item : mixed) : string {\n    if (typeof item === 'string') {\n        return item;\n    }\n\n    if (item && typeof item.toString === 'function') {\n        return item.toString();\n    }\n\n    return Object.prototype.toString.call(item);\n}\n\nexport function domainMatches(hostname : string, domain : string) : boolean {\n    hostname = hostname.split('://')[1];\n    let index = hostname.indexOf(domain);\n    return (index !== -1 && hostname.slice(index) === domain);\n}\n\nexport function patchMethod(obj : Object, name : string, handler : Function) {\n    let original = obj[name];\n\n    obj[name] = function patchedMethod() : mixed {\n        return handler({\n            context:      this,\n            args:         Array.prototype.slice.call(arguments),\n            original,\n            callOriginal: () => original.apply(this, arguments)\n        });\n    };\n}\n\nexport function extend<T : Object | Function>(obj : T, source : Object) : T {\n    if (!source) {\n        return obj;\n    }\n\n    if (Object.assign) {\n        return Object.assign(obj, source);\n    }\n\n    for (let key in source) {\n        if (source.hasOwnProperty(key)) {\n            obj[key] = source[key];\n        }\n    }\n\n    return obj;\n}\n\nexport function values<T>(obj : { [string] : T }) : Array<T> {\n    let result = [];\n    for (let key in obj) {\n        if (obj.hasOwnProperty(key)) {\n            result.push(obj[key]);\n        }\n    }\n    return result;\n}\n\nexport function perc(pixels : number, percentage : number) : number {\n    return Math.round((pixels * percentage) / 100);\n}\n\nexport function min(...args : Array<number>) : number {\n    return Math.min(...args);\n}\n\nexport function max(...args : Array<number>) : number {\n    return Math.max(...args);\n}\n\nexport function regexMap<T>(str : string, regexp : RegExp, handler : () => T) : Array<T> {\n    let results = [];\n\n    // $FlowFixMe\n    str.replace(regexp, function regexMapMatcher(item) {\n        results.push(handler ? handler.apply(null, arguments) : item);\n    });\n\n    // $FlowFixMe\n    return results;\n}\n\nexport function svgToBase64(svg : string) : string {\n    return `data:image/svg+xml;base64,${ base64encode(svg) }`;\n}\n\nexport function objFilter<T, R>(obj : { [string] : T }, filter? : (T, ?string) => mixed = Boolean) : { [string] : R } {\n    let result = {};\n\n    for (let key in obj) {\n        if (!obj.hasOwnProperty(key) || !filter(obj[key], key)) {\n            continue;\n        }\n\n        result[key] = obj[key];\n    }\n\n    return result;\n}\n\nexport function identity <T>(item : T) : T {\n    return item;\n}\n\nexport function regexTokenize(text : string, regexp : RegExp) : Array<string> {\n    let result = [];\n    text.replace(regexp, token => {\n        result.push(token);\n        return '';\n    });\n    return result;\n}\n\nexport function promiseDebounce<T>(method : () => ZalgoPromise<T> | T, delay : number = 50) : () => ZalgoPromise<T> {\n\n    let promise;\n    let timeout;\n\n    return function promiseDebouncedMethod() : ZalgoPromise<T> {\n        if (timeout) {\n            clearTimeout(timeout);\n        }\n\n        let localPromise = promise = promise || new ZalgoPromise();\n\n        timeout = setTimeout(() => {\n            promise = null;\n            timeout = null;\n\n            ZalgoPromise.try(method).then(\n                result => { localPromise.resolve(result); },\n                err => { localPromise.reject(err); }\n            );\n        }, delay);\n\n        return localPromise;\n    };\n}\n\nexport function safeInterval(method : Function, time : number) : { cancel : () => void } {\n\n    let timeout;\n\n    function loop() {\n        timeout = setTimeout(() => {\n            method();\n            loop();\n        }, time);\n    }\n\n    loop();\n\n    return {\n        cancel() {\n            clearTimeout(timeout);\n        }\n    };\n}\n\nexport function isInteger(str : string) : boolean {\n    return Boolean(str.match(/^[0-9]+$/));\n}\n\nexport function isFloat(str : string) : boolean {\n    return Boolean(str.match(/^[0-9]+\\.[0-9]+$/));\n}\n\nexport function serializePrimitive(value : string | number | boolean) : string {\n    return value.toString();\n}\n\nexport function deserializePrimitive(value : string) : string | number | boolean {\n    if (value === 'true') {\n        return true;\n    } else if (value === 'false') {\n        return false;\n    } else if (isInteger(value)) {\n        return parseInt(value, 10);\n    } else if (isFloat(value)) {\n        return parseFloat(value);\n    } else {\n        return value;\n    }\n}\n\nexport function dotify(obj : Object, prefix : string = '', newobj : Object = {}) : { [string] : string } {\n    prefix = prefix ? `${ prefix }.` : prefix;\n    for (let key in obj) {\n        if (!obj.hasOwnProperty(key) || obj[key] === undefined || obj[key] === null || typeof obj[key] === 'function') {\n            continue;\n        } else if (obj[key] && Array.isArray(obj[key]) && obj[key].length && obj[key].every(val => typeof val !== 'object')) {\n            newobj[`${ prefix }${ key }[]`] = obj[key].join(',');\n        } else if (obj[key] && typeof obj[key] === 'object') {\n            newobj = dotify(obj[key], `${ prefix }${ key }`, newobj);\n        } else {\n            newobj[`${ prefix }${ key }`] = serializePrimitive(obj[key]);\n        }\n    }\n    return newobj;\n}\n\nexport function undotify(obj : { [string] : string }) : Object {\n    \n    let result = {};\n\n    for (let key in obj) {\n        if (!obj.hasOwnProperty(key) || typeof obj[key] !== 'string') {\n            continue;\n        }\n\n        let value = obj[key];\n\n        if (key.match(/^.+\\[\\]$/)) {\n            key = key.slice(0, key.length - 2);\n            value = value.split(',').map(deserializePrimitive);\n        } else {\n            value = deserializePrimitive(value);\n        }\n\n        let keyResult = result;\n        let parts = key.split('.');\n        for (let i = 0; i < parts.length; i++) {\n            let part = parts[i];\n            let isLast = (i + 1 === parts.length);\n            let isIndex = !isLast && isInteger(parts[i + 1]);\n\n            if (isLast) {\n                // $FlowFixMe\n                keyResult[part] = value;\n            } else {\n                // $FlowFixMe\n                keyResult = keyResult[part] = keyResult[part] || (isIndex ? [] : {});\n            }\n        }\n    }\n\n    return result;\n}\n\nexport type EventEmitterType = {\n    on : (eventName : string, handler : Function) => CancelableType,\n    once : (eventName : string, handler : Function) => CancelableType,\n    trigger : (eventName : string, ...args : $ReadOnlyArray<mixed>) => ZalgoPromise<void>,\n    triggerOnce : (eventName : string, ...args : $ReadOnlyArray<mixed>) => ZalgoPromise<void>\n};\n\nexport function eventEmitter() : EventEmitterType {\n    let triggered = {};\n    let handlers = {};\n\n    return {\n\n        on(eventName : string, handler : Function) : CancelableType {\n            let handlerList = handlers[eventName] = handlers[eventName] || [];\n\n            handlerList.push(handler);\n\n            let cancelled = false;\n\n            return {\n                cancel() {\n                    if (!cancelled) {\n                        cancelled = true;\n                        handlerList.splice(handlerList.indexOf(handler), 1);\n                    }\n\n                }\n            };\n        },\n\n        once(eventName : string, handler : Function) : CancelableType {\n\n            let listener = this.on(eventName, () => {\n                listener.cancel();\n                handler();\n            });\n\n            return listener;\n        },\n\n        trigger(eventName : string, ...args : $ReadOnlyArray<mixed>) : ZalgoPromise<void> {\n\n            let handlerList = handlers[eventName];\n            let promises = [];\n\n            if (handlerList) {\n                for (let handler of handlerList) {\n                    promises.push(ZalgoPromise.try(() => handler(...args)));\n                }\n            }\n\n            return ZalgoPromise.all(promises).then(noop);\n        },\n\n        triggerOnce(eventName : string, ...args : $ReadOnlyArray<mixed>) : ZalgoPromise<void> {\n\n            if (triggered[eventName]) {\n                return ZalgoPromise.resolve();\n            }\n\n            triggered[eventName] = true;\n            return this.trigger(eventName, ...args);\n        }\n    };\n}\n\nexport function camelToDasherize(string : string) : string {\n    return string.replace(/([A-Z])/g, (g) => {\n        return `-${ g.toLowerCase() }`;\n    });\n}\n\nexport function dasherizeToCamel(string : string) : string {\n    return string.replace(/-([a-z])/g, (g) => {\n        return g[1].toUpperCase();\n    });\n}\n\nexport function capitalizeFirstLetter(string : string) : string {\n    return string.charAt(0).toUpperCase() + string.slice(1).toLowerCase();\n}\n\nexport function get(item : Object, path : string, def : mixed) : mixed {\n\n    if (!path) {\n        return def;\n    }\n\n    let pathParts = path.split('.');\n\n    // Loop through each section of our key path\n\n    for (let i = 0; i < pathParts.length; i++) {\n\n        // If we have an object, we can get the key\n        if (typeof item === 'object' && item !== null) {\n            item = item[pathParts[i]];\n\n        // Otherwise, we should return the default (undefined if not provided)\n        } else {\n            return def;\n        }\n    }\n\n    // If our final result is undefined, we should return the default\n\n    return item === undefined ? def : item;\n}\n\nexport function safeTimeout(method : Function, time : number) {\n\n    let interval = safeInterval(() => {\n        time -= 100;\n        if (time <= 0) {\n            interval.cancel();\n            method();\n        }\n    }, 100);\n}\n\nexport function defineLazyProp<T>(obj : Object | Array<mixed>, key : string | number, getter : () => T) {\n    if (Array.isArray(obj)) {\n        if (typeof key !== 'number') {\n            throw new TypeError(`Array key must be number`);\n        }\n    } else if (typeof obj === 'object' && obj !== null) {\n        if (typeof key !== 'string') {\n            throw new TypeError(`Object key must be string`);\n        }\n    }\n    \n    Object.defineProperty(obj, key, {\n        configurable: true,\n        enumerable:   true,\n        get:          () => {\n            // $FlowFixMe\n            delete obj[key];\n            let value = getter();\n            // $FlowFixMe\n            obj[key] = value;\n            return value;\n        },\n        set: (value : T) => {\n            // $FlowFixMe\n            delete obj[key];\n            // $FlowFixMe\n            obj[key] = value;\n        }\n    });\n}\n\nexport function isObject(item : mixed) : boolean {\n    return (typeof item === 'object' && item !== null);\n}\n\nexport function isObjectObject(obj : mixed) : boolean {\n    return isObject(obj) && Object.prototype.toString.call(obj) === '[object Object]';\n}\n\nexport function isPlainObject(obj : mixed) : boolean {\n    if (!isObjectObject(obj)) {\n        return false;\n    }\n\n    // $FlowFixMe\n    let constructor = obj.constructor;\n\n    if (typeof constructor !== 'function') {\n        return false;\n    }\n\n    let prototype = constructor.prototype;\n\n    if (!isObjectObject(prototype)) {\n        return false;\n    }\n\n    if (!prototype.hasOwnProperty('isPrototypeOf')) {\n        return false;\n    }\n\n    return true;\n}\n\nexport function replaceObject<T : Object | Array<mixed>> (item : T, replacer : (mixed, string | number, string) => mixed, fullKey : string = '') : T {\n\n    if (Array.isArray(item)) {\n        let length = item.length;\n        let result = [];\n\n        for (let i = 0; i < length; i++) {\n\n            \n            defineLazyProp(result, i, () => {\n                let itemKey = fullKey ? `${ fullKey }.${ i }` : `${ i }`;\n                let el = item[i];\n\n                let child = replacer(el, i, itemKey);\n\n                if (isPlainObject(child) || Array.isArray(child)) {\n                    // $FlowFixMe\n                    child = replaceObject(child, replacer, itemKey);\n                }\n\n                return child;\n            });\n        }\n\n        // $FlowFixMe\n        return result;\n    } else if (isPlainObject(item)) {\n        let result = {};\n\n        for (let key in item) {\n            if (!item.hasOwnProperty(key)) {\n                continue;\n            }\n\n            defineLazyProp(result, key, () => {\n                let itemKey = fullKey ? `${ fullKey }.${ key }` : `${ key }`;\n                // $FlowFixMe\n                let el = item[key];\n\n                let child = replacer(el, key, itemKey);\n\n                if (isPlainObject(child) || Array.isArray(child)) {\n                    // $FlowFixMe\n                    child = replaceObject(child, replacer, itemKey);\n                }\n\n                return child;\n            });\n        }\n\n        // $FlowFixMe\n        return result;\n    } else {\n        throw new Error(`Pass an object or array`);\n    }\n}\n\n\nexport function copyProp(source : Object, target : Object, name : string, def : mixed) {\n    if (source.hasOwnProperty(name)) {\n        let descriptor = Object.getOwnPropertyDescriptor(source, name);\n        // $FlowFixMe\n        Object.defineProperty(target, name, descriptor);\n\n    } else {\n        target[name] = def;\n    }\n}\n\ntype RegexResultType = {\n    text : string,\n    groups : Array<string>,\n    start : number,\n    end : number,\n    length : number,\n    replace : (text : string) => string\n};\n\nexport function regex(pattern : string | RegExp, string : string, start : number = 0) : ?RegexResultType {\n\n    if (typeof pattern === 'string') {\n        // eslint-disable-next-line security/detect-non-literal-regexp\n        pattern = new RegExp(pattern);\n    }\n\n    let result = string.slice(start).match(pattern);\n\n    if (!result) {\n        return;\n    }\n\n    // $FlowFixMe\n    let index : number = result.index;\n    let regmatch = result[0];\n\n    return {\n        text:   regmatch,\n        groups: result.slice(1),\n        start:  start + index,\n        end:    start + index + regmatch.length,\n        length: regmatch.length,\n\n        replace(text : string) : string {\n\n            if (!regmatch) {\n                return '';\n            }\n\n            return `${ regmatch.slice(0, start + index) }${ text }${ regmatch.slice(index + regmatch.length) }`;\n        }\n    };\n}\n\nexport function regexAll(pattern : string | RegExp, string : string) : Array<RegexResultType> {\n\n    let matches = [];\n    let start = 0;\n\n    // eslint-disable-next-line no-constant-condition\n    while (true) {\n        let regmatch = regex(pattern, string, start);\n\n        if (!regmatch) {\n            break;\n        }\n\n        matches.push(regmatch);\n        start = match.end;\n    }\n\n    return matches;\n}\n\nexport function isDefined(value : ?mixed) : boolean {\n    return value !== null && value !== undefined;\n}\n\nexport function cycle(method : Function) : ZalgoPromise<void> {\n    return ZalgoPromise.try(method).then(() => cycle(method));\n}\n\nexport function debounce<T>(method : (...args : Array<mixed>) => T, time : number = 100) : (...args : Array<mixed>) => void {\n\n    let timeout;\n\n    return function debounceWrapper() {\n        clearTimeout(timeout);\n\n        timeout = setTimeout(() => {\n            return method.apply(this, arguments);\n        }, time);\n    };\n}\n\nexport function isRegex(item : mixed) : boolean {\n    return Object.prototype.toString.call(item) === '[object RegExp]';\n}\n\ntype FunctionProxy<T : Function> = (method : T) => T;\n\n// eslint-disable-next-line flowtype/no-weak-types\nexport let weakMapMemoize : FunctionProxy<*> = <R : mixed>(method : (arg : any) => R) : ((...args : Array<any>) => R) => {\n\n    let weakmap = new WeakMap();\n\n    // eslint-disable-next-line flowtype/no-weak-types\n    return function weakmapMemoized(arg : any) : R {\n        return weakmap.getOrSet(arg, () => method.call(this, arg));\n    };\n};\n\ntype FunctionPromiseProxy<R : mixed, T : (...args : $ReadOnlyArray<mixed>) => ZalgoPromise<R>> = (T) => T;\n\n// eslint-disable-next-line flowtype/no-weak-types\nexport let weakMapMemoizePromise : FunctionPromiseProxy<*, *> = <R : mixed>(method : (arg : any) => ZalgoPromise<R>) : ((...args : Array<any>) => ZalgoPromise<R>) => {\n\n    let weakmap = new WeakMap();\n\n    // eslint-disable-next-line flowtype/no-weak-types\n    return function weakmapMemoizedPromise(arg : any) : ZalgoPromise<R> {\n        return weakmap.getOrSet(arg, () =>\n            method.call(this, arg).finally(() => {\n                weakmap.delete(arg);\n            })\n        );\n    };\n};\n\nexport function getOrSet<O : Object, T : mixed>(obj : O, key : string, getter : () => T) : T {\n    if (obj.hasOwnProperty(key)) {\n        return obj[key];\n    }\n\n    const val = getter();\n    obj[key] = val;\n    return val;\n}\n\nexport type CleanupType = {|\n    set : <T : mixed>(string, T) => T, // eslint-disable-line no-undef\n    register : (Function) => void,\n    all : () => ZalgoPromise<void>\n|};\n\nexport function cleanup(obj : Object) : CleanupType {\n\n    const tasks = [];\n    let cleaned = false;\n\n    return {\n        set<T : mixed>(name : string, item : T) : T {\n            if (!cleaned) {\n                obj[name] = item;\n                this.register(() => {\n                    delete obj[name];\n                });\n            }\n            return item;\n        },\n\n        register(method : Function) {\n            if (cleaned) {\n                method();\n            } else {\n                tasks.push(once(method));\n            }\n        },\n\n        all() : ZalgoPromise<void> {\n            const results = [];\n            cleaned = true;\n\n            while (tasks.length) {\n                const task = tasks.pop();\n                results.push(task());\n            }\n\n            return ZalgoPromise.all(results).then(noop);\n        }\n    };\n}\n\nexport function tryCatch<T>(fn : () => T) : {| result : T, error : void |} | {| result : void, error : mixed |} {\n    let result;\n    let error;\n\n    try {\n        result = fn();\n    } catch (err) {\n        error = err;\n    }\n    \n    // $FlowFixMe\n    return { result, error };\n}\n\nexport function removeFromArray<X, T : Array<X>>(arr : T, item : X) {\n    const index = arr.indexOf(item);\n    if (index !== -1) {\n        arr.splice(index, 1);\n    }\n}\n\nexport function assertExists<T>(name : string, thing : void | null | T) : T {\n    if (thing === null || typeof thing === 'undefined') {\n        throw new Error(`Expected ${ name } to be present`);\n    }\n\n    return thing;\n}\n","/* @flow */\n/* eslint max-lines: off */\n\nimport { ZalgoPromise } from 'zalgo-promise/src';\nimport { linkFrameWindow, isWindowClosed,\n    type SameDomainWindowType, type CrossDomainWindowType } from 'cross-domain-utils/src';\nimport { WeakMap } from 'cross-domain-safe-weakmap/src';\n\nimport { inlineMemoize, noop, stringify, capitalizeFirstLetter,\n    once, extend, safeInterval } from './util';\nimport { isDevice } from './device';\nimport { KEY_CODES } from './constants';\nimport type { CancelableType } from './types';\n\ntype ElementRefType = string | HTMLElement;\n\nexport function isDocumentReady() : boolean {\n    return Boolean(document.body) && document.readyState === 'complete';\n}\n\nexport function urlEncode(str : string) : string {\n    return str.replace(/\\?/g, '%3F').replace(/&/g, '%26').replace(/#/g, '%23').replace(/\\+/g, '%2B');\n}\n\nexport function waitForWindowReady() : ZalgoPromise<void> {\n    return inlineMemoize(waitForWindowReady, () : ZalgoPromise<void> => {\n        return new ZalgoPromise(resolve => {\n            if (isDocumentReady()) {\n                resolve();\n            }\n\n            window.addEventListener('load', () => resolve());\n        });\n    });\n}\n\nexport function waitForDocumentReady() : ZalgoPromise<void> {\n    return inlineMemoize(waitForDocumentReady, () : ZalgoPromise<void> => {\n        return new ZalgoPromise(resolve => {\n\n            if (isDocumentReady()) {\n                return resolve();\n            }\n\n            let interval = setInterval(() => {\n                if (isDocumentReady()) {\n                    clearInterval(interval);\n                    return resolve();\n                }\n            }, 10);\n        });\n    });\n}\n\nexport function waitForDocumentBody() : ZalgoPromise<HTMLBodyElement> {\n    return waitForDocumentReady().then(() => {\n        if (document.body) {\n            return document.body;\n        }\n\n        throw new Error('Document ready but document.body not present');\n    });\n}\n\nexport function parseQuery(queryString : string) : Object {\n    return inlineMemoize(parseQuery, () : Object => {\n        let params = {};\n\n        if (!queryString) {\n            return params;\n        }\n\n        if (queryString.indexOf('=') === -1) {\n            return params;\n        }\n\n        for (let pair of queryString.split('&')) {\n            pair = pair.split('=');\n\n            if (pair[0] && pair[1]) {\n                params[decodeURIComponent(pair[0])] = decodeURIComponent(pair[1]);\n            }\n        }\n\n        return params;\n    }, [ queryString ]);\n}\n\n\nexport function getQueryParam(name : string) : string {\n    return parseQuery(window.location.search.slice(1))[name];\n}\n\nexport function urlWillRedirectPage(url : string) : boolean {\n\n    if (url.indexOf('#') === -1) {\n        return true;\n    }\n\n    if (url.indexOf('#') === 0) {\n        return false;\n    }\n\n    if (url.split('#')[0] === window.location.href.split('#')[0]) {\n        return false;\n    }\n\n    return true;\n}\n\nexport function formatQuery(obj : { [ string ] : string } = {}) : string {\n\n    return Object.keys(obj).filter(key => {\n        return typeof obj[key] === 'string';\n    }).map(key => {\n        return `${ urlEncode(key) }=${ urlEncode(obj[key]) }`;\n    }).join('&');\n}\n\nexport function extendQuery(originalQuery : string, props : { [ string ] : string } = {}) : string {\n\n    if (!props || !Object.keys(props).length) {\n        return originalQuery;\n    }\n\n    return formatQuery({\n        ...parseQuery(originalQuery),\n        ...props\n    });\n}\n\nexport function extendUrl(url : string, options : { query? : { [string] : string }, hash? : { [string] : string } } = {}) : string {\n\n    let query = options.query || {};\n    let hash = options.hash || {};\n\n    let originalUrl;\n    let originalQuery;\n    let originalHash;\n\n    [ originalUrl, originalHash ] = url.split('#');\n    [ originalUrl, originalQuery ] = originalUrl.split('?');\n\n    let queryString = extendQuery(originalQuery, query);\n    let hashString = extendQuery(originalHash, hash);\n\n    if (queryString) {\n        originalUrl = `${ originalUrl }?${ queryString }`;\n    }\n\n    if (hashString) {\n        originalUrl = `${ originalUrl }#${ hashString }`;\n    }\n\n    return originalUrl;\n}\n\nexport function redirect(url : string, win : CrossDomainWindowType = window) : ZalgoPromise<void> {\n    return new ZalgoPromise(resolve => {\n        win.location = url;\n        if (!urlWillRedirectPage(url)) {\n            resolve();\n        }\n    });\n}\n\nexport function hasMetaViewPort() : boolean {\n    let meta = document.querySelector('meta[name=viewport]');\n\n    if (isDevice() && window.screen.width < 660 && !meta) {\n        return false;\n    }\n\n    return true;\n}\n\nexport function isElementVisible(el : HTMLElement) : boolean {\n    return Boolean(el.offsetWidth || el.offsetHeight || el.getClientRects().length);\n}\n\nexport function enablePerformance() : boolean {\n    return inlineMemoize(enablePerformance, () : boolean => {\n        /* eslint-disable compat/compat */\n        return Boolean(\n            window.performance &&\n            performance.now &&\n            performance.timing &&\n            performance.timing.connectEnd &&\n            performance.timing.navigationStart &&\n            (Math.abs(performance.now() - Date.now()) > 1000) &&\n            (performance.now() - (performance.timing.connectEnd - performance.timing.navigationStart)) > 0\n        );\n        /* eslint-enable compat/compat */\n    });\n}\n\nexport function getPageRenderTime() : ZalgoPromise<?number> {\n    return waitForDocumentReady().then(() => {\n\n        if (!enablePerformance()) {\n            return;\n        }\n\n        let timing = window.performance.timing;\n\n        if (timing.connectEnd && timing.domInteractive) {\n            return timing.domInteractive - timing.connectEnd;\n        }\n    });\n}\n\nexport function htmlEncode(html : string = '') : string {\n    return html.toString()\n        .replace(/&/g, '&amp;')\n        .replace(/</g, '&lt;')\n        .replace(/>/g, '&gt;')\n        .replace(/\"/g, '&quot;')\n        .replace(/'/g, '&#39;')\n        .replace(/\\//g, '&#x2F;');\n}\n\nexport function isBrowser() : boolean {\n    return (typeof window !== 'undefined');\n}\n\nexport function querySelectorAll(selector : string, doc : HTMLElement = window.document) : Array<Element> {\n    return Array.prototype.slice.call(doc.querySelectorAll(selector));\n}\n\nexport function onClick(element : Element, handler : (Event) => void) {\n    element.addEventListener('touchstart', noop);\n    element.addEventListener('click', handler);\n    element.addEventListener('keypress', (event : Event) => {\n        // $FlowFixMe\n        if (event.keyCode === KEY_CODES.ENTER) {\n            return handler(event);\n        }\n    });\n}\n\nexport function getScript({ host = window.location.host, path } : { host? : string, path : string }) : ?HTMLScriptElement {\n    return inlineMemoize(getScript, () : ?HTMLScriptElement => {\n\n        let url = `${ host }${ path }`;\n        let scripts = Array.prototype.slice.call(document.getElementsByTagName('script'));\n\n        for (let script of scripts) {\n            if (!script.src) {\n                continue;\n            }\n\n            let src = script.src.replace(/^https?:\\/\\//, '').split('?')[0];\n\n            if (src === url) {\n                return script;\n            }\n        }\n    }, [ path ]);\n}\n\nexport function isLocalStorageEnabled() : boolean {\n    return inlineMemoize(isLocalStorageEnabled, () => {\n        try {\n            if (typeof window === 'undefined') {\n                return false;\n            }\n\n            if (window.localStorage) {\n                let value = Math.random().toString();\n                window.localStorage.setItem('__test__localStorage__', value);\n                let result = window.localStorage.getItem('__test__localStorage__');\n                window.localStorage.removeItem('__test__localStorage__');\n                if (value === result) {\n                    return true;\n                }\n            }\n        } catch (err) {\n            // pass\n        }\n        return false;\n    });\n}\n\nexport function getBrowserLocales() : Array<{ country? : string, lang : string }> {\n    let nav = window.navigator;\n\n    let locales = nav.languages\n        ? Array.prototype.slice.apply(nav.languages)\n        : [];\n\n    if (nav.language) {\n        locales.push(nav.language);\n    }\n\n    if (nav.userLanguage) {\n        locales.push(nav.userLanguage);\n    }\n\n    return locales.map(locale => {\n\n        if (locale && locale.match(/^[a-z]{2}[-_][A-Z]{2}$/)) {\n            let [ lang, country ] = locale.split(/[-_]/);\n            return { country, lang };\n        }\n\n        if (locale && locale.match(/^[a-z]{2}$/)) {\n            return { lang: locale };\n        }\n\n        return null;\n\n    }).filter(Boolean);\n}\n\n\nexport function appendChild(container : HTMLElement, child : HTMLElement | Text) {\n    container.appendChild(child);\n}\n\nexport function isElement(element : mixed) : boolean {\n\n    if (element instanceof window.Element) {\n        return true;\n    }\n\n    if (element !== null && typeof element === 'object' && element.nodeType === 1 && typeof element.style === 'object' && typeof element.ownerDocument === 'object') {\n        return true;\n    }\n\n    return false;\n}\n\nexport function getElementSafe(id : ElementRefType, doc : Document | HTMLElement = document) : ?HTMLElement {\n\n    if (isElement(id)) {\n        // $FlowFixMe\n        return id;\n    }\n\n    if (typeof id === 'string') {\n        return doc.querySelector(id);\n    }\n}\n\nexport function getElement(id : ElementRefType, doc : Document | HTMLElement = document) : HTMLElement {\n\n    let element = getElementSafe(id, doc);\n\n    if (element) {\n        return element;\n    }\n\n    throw new Error(`Can not find element: ${ stringify(id) }`);\n}\n\nexport function elementReady(id : ElementRefType) : ZalgoPromise<window.HTMLElement> {\n    return new ZalgoPromise((resolve, reject) => {\n\n        let name = stringify(id);\n        let el = getElementSafe(id);\n\n        if (el) {\n            return resolve(el);\n        }\n\n        if (isDocumentReady()) {\n            return reject(new Error(`Document is ready and element ${ name } does not exist`));\n        }\n\n        let interval = setInterval(() => {\n\n            el = getElementSafe(id);\n\n            if (el) {\n                clearInterval(interval);\n                return resolve(el);\n            }\n\n            if (isDocumentReady()) {\n                clearInterval(interval);\n                return reject(new Error(`Document is ready and element ${ name } does not exist`));\n            }\n        }, 10);\n    });\n}\n\nexport function PopupOpenError(message : string) {\n    this.message = message;\n}\n\nPopupOpenError.prototype = Object.create(Error.prototype);\n\ntype PopupOptions = {|\n    name? : string,\n    width? : number,\n    height? : number,\n    top? : number,\n    left? : number,\n    status? : 0 | 1,\n    resizable? : 0 | 1,\n    toolbar? : 0 | 1,\n    menubar? : 0 | 1,\n    scrollbars? : 0 | 1\n|};\n\nexport function popup(url : string, options? : PopupOptions) : CrossDomainWindowType {\n\n    // $FlowFixMe\n    options = options || {};\n\n    let { width, height } = options;\n\n    let top = 0;\n    let left = 0;\n\n    if (width) {\n        if (window.outerWidth) {\n            left = Math.round((window.outerWidth - width) / 2) + window.screenX;\n        } else if (window.screen.width) {\n            left = Math.round((window.screen.width - width) / 2);\n        }\n    }\n\n    if (height) {\n        if (window.outerHeight) {\n            top = Math.round((window.outerHeight - height) / 2) + window.screenY;\n        } else if (window.screen.height) {\n            top = Math.round((window.screen.height - height) / 2);\n        }\n    }\n\n    options = {\n        top,\n        left,\n        width,\n        height,\n        status:     1,\n        toolbar:    0,\n        menubar:    0,\n        resizable:  1,\n        scrollbars: 1,\n        ...options\n    };\n\n    let name = options.name || '';\n    delete options.name;\n\n    // eslint-disable-next-line array-callback-return\n    let params = Object.keys(options).map(key => {\n        // $FlowFixMe\n        if (options[key]) {\n            return `${ key }=${ stringify(options[key]) }`;\n        }\n    }).filter(Boolean).join(',');\n\n    let win;\n\n    try {\n        win = window.open(url, name, params, true);\n    } catch (err) {\n        throw new PopupOpenError(`Can not open popup window - ${ err.stack || err.message }`);\n    }\n\n    if (isWindowClosed(win)) {\n        let err = new PopupOpenError(`Can not open popup window - blocked`);\n        throw err;\n    }\n\n    window.addEventListener('unload', () => win.close());\n\n    return win;\n}\n\n\nexport function writeToWindow(win : SameDomainWindowType, html : string) {\n    try {\n        win.document.open();\n        win.document.write(html);\n        win.document.close();\n    } catch (err) {\n        try {\n            win.location = `javascript: document.open(); document.write(${ JSON.stringify(html) }); document.close();`;\n        } catch (err2) {\n            // pass\n        }\n    }\n}\n\nexport function writeElementToWindow(win : SameDomainWindowType, el : HTMLElement) {\n\n    let tag = el.tagName.toLowerCase();\n\n    if (tag !== 'html') {\n        throw new Error(`Expected element to be html, got ${ tag }`);\n    }\n\n    let documentElement = win.document.documentElement;\n\n    while (documentElement.children && documentElement.children.length) {\n        documentElement.removeChild(documentElement.children[0]);\n    }\n\n    while (el.children.length) {\n        documentElement.appendChild(el.children[0]);\n    }\n}\n\nexport function setStyle(el : HTMLElement, styleText : string, doc : Document = window.document) {\n    // $FlowFixMe\n    if (el.styleSheet) {\n        // $FlowFixMe\n        el.styleSheet.cssText = styleText;\n    } else {\n        el.appendChild(doc.createTextNode(styleText));\n    }\n}\n\nexport type ElementOptionsType = {\n    style? : { [ string ] : string },\n    id? : string,\n    class? : ?Array<string>,\n    attributes? : { [ string ] : string },\n    styleSheet? : ?string,\n    html? : ?string\n};\n\nlet awaitFrameLoadPromises : WeakMap<HTMLIFrameElement, ZalgoPromise<HTMLIFrameElement>>;\n\nexport function awaitFrameLoad(frame : HTMLIFrameElement) : ZalgoPromise<HTMLIFrameElement> {\n    awaitFrameLoadPromises = awaitFrameLoadPromises || new WeakMap();\n\n    if (awaitFrameLoadPromises.has(frame)) {\n        let promise = awaitFrameLoadPromises.get(frame);\n        if (promise) {\n            return promise;\n        }\n    }\n\n    let promise = new ZalgoPromise((resolve, reject) => {\n        frame.addEventListener('load', () => {\n            linkFrameWindow(frame);\n            resolve(frame);\n        });\n\n        frame.addEventListener('error', (err : Event) => {\n            if (frame.contentWindow) {\n                resolve(frame);\n            } else {\n                reject(err);\n            }\n        });\n    });\n\n    awaitFrameLoadPromises.set(frame, promise);\n\n    return promise;\n}\n\nexport function awaitFrameWindow(frame : HTMLIFrameElement) : ZalgoPromise<CrossDomainWindowType> {\n\n    if (frame.contentWindow) {\n        return ZalgoPromise.resolve(frame.contentWindow);\n    }\n\n    return awaitFrameLoad(frame).then(loadedFrame => {\n\n        if (!loadedFrame.contentWindow) {\n            throw new Error(`Could not find window in iframe`);\n        }\n\n        return loadedFrame.contentWindow;\n    });\n}\n\nexport function createElement(tag : string = 'div', options : ElementOptionsType = {}, container : ?HTMLElement) : HTMLElement {\n\n    tag = tag.toLowerCase();\n    let element = document.createElement(tag);\n\n    if (options.style) {\n        extend(element.style, options.style);\n    }\n\n    if (options.class) {\n        element.className = options.class.join(' ');\n    }\n\n    if (options.id) {\n        element.setAttribute('id', options.id);\n    }\n\n    if (options.attributes) {\n        for (let key of Object.keys(options.attributes)) {\n            element.setAttribute(key, options.attributes[key]);\n        }\n    }\n\n    if (options.styleSheet) {\n        setStyle(element, options.styleSheet);\n    }\n\n    if (container) {\n        appendChild(container, element);\n    }\n\n    if (options.html) {\n        if (tag === 'iframe') {\n            // $FlowFixMe\n            if (!container || !element.contentWindow) {\n                throw new Error(`Iframe html can not be written unless container provided and iframe in DOM`);\n            }\n\n            // $FlowFixMe\n            writeToWindow(element.contentWindow, options.html);\n\n        } else {\n            element.innerHTML = options.html;\n        }\n    }\n\n    return element;\n}\n\n\nexport type IframeElementOptionsType = {\n    style? : { [ string ] : string },\n    class? : ?Array<string>,\n    attributes? : { [ string ] : string },\n    styleSheet? : ?string,\n    html? : ?string,\n    url? : ?string\n};\n\nexport function iframe(options : IframeElementOptionsType = {}, container : ?HTMLElement, attempts : number = 3) : HTMLIFrameElement {\n\n    let attributes = options.attributes || {};\n    let style = options.style || {};\n\n    let frame = createElement('iframe', {\n        attributes: {\n            frameBorder:       '0',\n            allowTransparency: 'true',\n            ...attributes\n        },\n        style: {\n            backgroundColor: 'transparent',\n            ...style\n        },\n        html:  options.html,\n        class: options.class\n    });\n\n    // $FlowFixMe\n    awaitFrameLoad(frame);\n\n    if (container) {\n        let el = getElement(container);\n        el.appendChild(frame);\n    \n        // $FlowFixMe\n        let win = frame.contentWindow;\n    \n        if (win) {\n            try {\n                // $FlowFixMe\n                noop(win.name);\n            } catch (err) {\n                el.removeChild(frame);\n    \n                if (!attempts) {\n                    throw new Error(`Frame is cross-domain: ${ err.stack }`);\n                }\n    \n                return iframe(options, container, attempts - 1);\n            }\n        }\n    }\n\n    if (options.url || window.navigator.userAgent.match(/MSIE|Edge/i)) {\n        frame.setAttribute('src', options.url || 'about:blank');\n    }\n\n    // $FlowFixMe\n    return frame;\n}\n\nexport function addEventListener(obj : HTMLElement, event : string, handler : (event : Event) => void) : CancelableType {\n    obj.addEventListener(event, handler);\n    return {\n        cancel() {\n            obj.removeEventListener(event, handler);\n        }\n    };\n}\n\nexport function bindEvents(element : HTMLElement, eventNames : Array<string>, handler : (event : Event) => void) : CancelableType {\n\n    handler = once(handler);\n\n    for (let eventName of eventNames) {\n        element.addEventListener(eventName, handler);\n    }\n\n    return {\n        cancel: once(() => {\n            for (let eventName of eventNames) {\n                element.removeEventListener(eventName, handler);\n            }\n        })\n    };\n}\n\nconst VENDOR_PREFIXES = [ 'webkit', 'moz', 'ms', 'o' ];\n\nexport function setVendorCSS(element : HTMLElement, name : string, value : string) {\n\n    // $FlowFixMe\n    element.style[name] = value;\n\n    let capitalizedName = capitalizeFirstLetter(name);\n\n    for (let prefix of VENDOR_PREFIXES) {\n        // $FlowFixMe\n        element.style[`${ prefix }${ capitalizedName }`] = value;\n    }\n}\n\nfunction isValidAnimation(element : HTMLElement, name : string) : boolean {\n\n    let CSSRule = window.CSSRule;\n\n    const KEYFRAMES_RULE = CSSRule.KEYFRAMES_RULE || CSSRule.WEBKIT_KEYFRAMES_RULE || CSSRule.MOZ_KEYFRAMES_RULE ||\n        CSSRule.O_KEYFRAMES_RULE || CSSRule.MS_KEYFRAMES_RULE;\n\n    let stylesheets = element.ownerDocument.styleSheets;\n\n    try {\n        for (let i = 0; i < stylesheets.length; i++) {\n\n            // $FlowFixMe\n            let cssRules = stylesheets[i].cssRules;\n\n            if (!cssRules) {\n                continue;\n            }\n\n            for (let j = 0; j < cssRules.length; j++) {\n\n                let cssRule = cssRules[j];\n\n                if (!cssRule) {\n                    continue;\n                }\n\n                if (cssRule.type === KEYFRAMES_RULE && cssRule.name === name) {\n                    return true;\n                }\n            }\n        }\n    } catch (err) {\n\n        return false;\n    }\n\n\n    return false;\n}\n\n\nconst ANIMATION_START_EVENTS = [ 'animationstart', 'webkitAnimationStart', 'oAnimationStart', 'MSAnimationStart' ];\nconst ANIMATION_END_EVENTS   = [ 'animationend', 'webkitAnimationEnd', 'oAnimationEnd', 'MSAnimationEnd' ];\n\nexport function animate(element : ElementRefType, name : string, clean : (Function) => void, timeout : number = 1000) : ZalgoPromise<void> {\n    return new ZalgoPromise((resolve, reject) => {\n\n        let el = getElement(element);\n\n        if (!el || !isValidAnimation(el, name)) {\n            return resolve();\n        }\n\n        let hasStarted = false;\n\n        let startTimeout;\n        let endTimeout;\n        let startEvent;\n        let endEvent;\n\n        function cleanUp() {\n            clearTimeout(startTimeout);\n            clearTimeout(endTimeout);\n            startEvent.cancel();\n            endEvent.cancel();\n        }\n\n        startEvent = bindEvents(el, ANIMATION_START_EVENTS, event => {\n\n            // $FlowFixMe\n            if (event.target !== el || event.animationName !== name) {\n                return;\n            }\n\n            clearTimeout(startTimeout);\n\n            event.stopPropagation();\n\n            startEvent.cancel();\n            hasStarted = true;\n\n            endTimeout = setTimeout(() => {\n                cleanUp();\n                resolve();\n            }, timeout);\n        });\n\n        endEvent = bindEvents(el, ANIMATION_END_EVENTS, event => {\n\n            // $FlowFixMe\n            if (event.target !== el || event.animationName !== name) {\n                return;\n            }\n\n            cleanUp();\n\n            // $FlowFixMe\n            if (typeof event.animationName === 'string' && event.animationName !== name) {\n                return reject(`Expected animation name to be ${ name }, found ${ event.animationName }`);\n            }\n\n            return resolve();\n        });\n\n        setVendorCSS(el, 'animationName', name);\n\n        startTimeout = setTimeout(() => {\n            if (!hasStarted) {\n                cleanUp();\n                return resolve();\n            }\n        }, 200);\n\n        if (clean) {\n            clean(cleanUp);\n        }\n    });\n}\n\nconst STYLE = {\n\n    DISPLAY: {\n        NONE:  'none',\n        BLOCK: 'block'\n    },\n\n    VISIBILITY: {\n        VISIBLE: 'visible',\n        HIDDEN:  'hidden'\n    },\n\n    IMPORTANT: 'important'\n};\n\nexport function makeElementVisible(element : HTMLElement) {\n    element.style.setProperty('visibility', '');\n}\n\nexport function makeElementInvisible(element : HTMLElement) {\n    element.style.setProperty('visibility', STYLE.VISIBILITY.HIDDEN, STYLE.IMPORTANT);\n}\n\n\nexport function showElement(element : HTMLElement) {\n    element.style.setProperty('display', '');\n}\n\nexport function hideElement(element : HTMLElement) {\n    element.style.setProperty('display', STYLE.DISPLAY.NONE, STYLE.IMPORTANT);\n}\n\nexport function destroyElement(element : HTMLElement) {\n    if (element && element.parentNode) {\n        element.parentNode.removeChild(element);\n    }\n}\n\nexport function showAndAnimate(element : HTMLElement, name : string, clean : (Function) => void) : ZalgoPromise<void> {\n    let animation = animate(element, name, clean);\n    showElement(element);\n    return animation;\n}\n\nexport function animateAndHide(element : HTMLElement, name : string, clean : (Function) => void) : ZalgoPromise<void> {\n    return animate(element, name, clean).then(() => {\n        hideElement(element);\n    });\n}\n\nexport function addClass(element : HTMLElement, name : string) {\n    element.classList.add(name);\n}\n\nexport function removeClass(element : HTMLElement, name : string) {\n    element.classList.remove(name);\n}\n\nexport function isElementClosed(el : HTMLElement) : boolean {\n    if (!el || !el.parentNode) {\n        return true;\n    }\n    return false;\n}\n\nexport function watchElementForClose(element : HTMLElement, handler : () => mixed) : CancelableType {\n    handler = once(handler);\n\n    let interval;\n\n    if (isElementClosed(element)) {\n        handler();\n    } else {\n        interval = safeInterval(() => {\n            if (isElementClosed(element)) {\n                interval.cancel();\n                handler();\n            }\n        }, 50);\n    }\n\n    return {\n        cancel() {\n            if (interval) {\n                interval.cancel();\n            }\n        }\n    };\n}\n\nexport function fixScripts(el : HTMLElement, doc : Document = window.document) {\n    for (let script of querySelectorAll('script', el)) {\n        let parentNode = script.parentNode;\n\n        if (!parentNode) {\n            continue;\n        }\n\n        let newScript = doc.createElement('script');\n        newScript.text = script.textContent;\n        parentNode.replaceChild(newScript, script);\n    }\n}\n\ntype OnResizeOptions = {|\n    width? : boolean,\n    height? : boolean,\n    interval? : number,\n    win? : SameDomainWindowType\n|};\n\nexport function onResize(el : HTMLElement, handler : ({ width : number, height : number }) => void, { width = true, height = true, interval = 100, win = window } : OnResizeOptions = {}) : {} {\n    let currentWidth = el.offsetWidth;\n    let currentHeight = el.offsetHeight;\n\n    handler({ width: currentWidth, height: currentHeight });\n\n    let check = () => {\n        let newWidth = el.offsetWidth;\n        let newHeight = el.offsetHeight;\n\n        if ((width && newWidth !== currentWidth) || (height && newHeight !== currentHeight)) {\n            handler({ width: newWidth, height: newHeight });\n        }\n\n        currentWidth = newWidth;\n        currentHeight = newHeight;\n    };\n\n    let observer;\n    let timeout;\n\n    if (typeof win.ResizeObserver !== 'undefined') {\n        observer = new win.ResizeObserver(check);\n        observer.observe(el);\n\n    } else if (typeof win.MutationObserver !== 'undefined') {\n        observer = new win.MutationObserver(check);\n        observer.observe(el, {\n            attributes:    true,\n            childList:     true,\n            subtree:       true,\n            characterData: false\n        });\n        win.addEventListener('resize', check);\n    } else {\n        let loop = () => {\n            check();\n            timeout = setTimeout(loop, interval);\n        };\n        loop();\n    }\n\n    return {\n        cancel: () => {\n            observer.disconnect();\n            window.removeEventListener('resize', check);\n            clearTimeout(timeout);\n        }\n    };\n}\n","/* @flow */\n\nexport function hasNativeWeakMap() : boolean {\n\n    if (typeof WeakMap === 'undefined') {\n        return false;\n    }\n\n    if (typeof Object.freeze === 'undefined') {\n        return false;\n    }\n\n    try {\n\n        let testWeakMap = new WeakMap();\n        let testKey = {};\n        let testValue = '__testvalue__';\n\n        Object.freeze(testKey);\n\n        testWeakMap.set(testKey, testValue);\n\n        if (testWeakMap.get(testKey) === testValue) {\n            return true;\n        }\n\n        return false;\n\n    } catch (err) {\n\n        return false;\n    }\n}\n","/* @flow */\n\nexport function isPerc(str : string) : boolean {\n    return typeof str === 'string' && (/^[0-9]+%$/).test(str);\n}\n\nexport function isPx(str : string) : boolean {\n    return typeof str === 'string' && (/^[0-9]+px$/).test(str);\n}\n\nexport function toNum(val : string | number) : number {\n\n    if (typeof val === 'number') {\n        return val;\n    }\n\n    let match = val.match(/^([0-9]+)(px|%)$/);\n\n    if (!match) {\n        throw new Error(`Could not match css value from ${ val }`);\n    }\n\n    return parseInt(match[1], 10);\n}\n\nexport function toPx(val : number | string) : string {\n    return `${ toNum(val) }px`;\n}\n\nexport function toCSS(val : number | string) : string {\n\n    if (typeof val === 'number') {\n        return toPx(val);\n    }\n\n    return isPerc(val) ? val : toPx(val);\n}\n\nexport function percOf(num : number, perc : string) : number {\n    return parseInt(num * toNum(perc)  / 100, 10);\n}\n\nexport function normalizeDimension(dim : string | number, max : number) : number {\n    if (typeof dim === 'number') {\n        return dim;\n    } else if (isPerc(dim)) {\n        return percOf(max, dim);\n    } else if (isPx(dim)) {\n        return toNum(dim);\n    } else {\n        throw new Error(`Can not normalize dimension: ${ dim }`);\n    }\n}\n","/* @flow */\n\nexport const BRIDGE_TIMEOUT = 5000;\nexport const CHILD_WINDOW_TIMEOUT = 5000;\n\nexport const ACK_TIMEOUT = 2000;\nexport const ACK_TIMEOUT_KNOWN = 10000;\nexport const RES_TIMEOUT = __TEST__ ? 2000 : -1;\n","/* @flow */\n\nexport const MESSAGE_TYPE = {\n    REQUEST:  ('postrobot_message_request' : 'postrobot_message_request'),\n    RESPONSE: ('postrobot_message_response' : 'postrobot_message_response'),\n    ACK:      ('postrobot_message_ack' : 'postrobot_message_ack')\n};\n\nexport const MESSAGE_ACK = {\n    SUCCESS: ('success' : 'success'),\n    ERROR:   ('error' : 'error')\n};\n\nexport const MESSAGE_NAME = {\n    METHOD:      ('postrobot_method' : 'postrobot_method'),\n    HELLO:       ('postrobot_hello' : 'postrobot_hello'),\n    OPEN_TUNNEL: ('postrobot_open_tunnel' : 'postrobot_open_tunnel')\n};\n\nexport const SEND_STRATEGY = {\n    POST_MESSAGE: ('postrobot_post_message' : 'postrobot_post_message'),\n    BRIDGE:       ('postrobot_bridge' : 'postrobot_bridge'),\n    GLOBAL:       ('postrobot_global' : 'postrobot_global')\n};\n\nexport const BRIDGE_NAME_PREFIX = '__postrobot_bridge__';\nexport const POSTROBOT_PROXY =    '__postrobot_proxy__';\n\nexport const WILDCARD = '*';\n\nexport const SERIALIZATION_TYPE = {\n    CROSS_DOMAIN_ZALGO_PROMISE: ('cross_domain_zalgo_promise' : 'cross_domain_zalgo_promise'),\n    CROSS_DOMAIN_FUNCTION:      ('cross_domain_function' : 'cross_domain_function'),\n    CROSS_DOMAIN_WINDOW:        ('cross_domain_window' : 'cross_domain_window')\n};\n","/* @flow */\n\nimport { type CrossDomainWindowType, type SameDomainWindowType } from 'cross-domain-utils/src';\nimport { WeakMap } from 'cross-domain-safe-weakmap/src';\nimport { getOrSet } from 'belter/src';\n\nexport function getGlobal(win : SameDomainWindowType = window) : Object {\n    if (win !== window) {\n        return win[__POST_ROBOT__.__GLOBAL_KEY__];\n    }\n    const global : Object = win[__POST_ROBOT__.__GLOBAL_KEY__] = win[__POST_ROBOT__.__GLOBAL_KEY__] || {};\n    return global;\n}\n\ntype ObjectGetter = () => Object;\nconst getObj : ObjectGetter = () => ({});\n\ntype GetOrSet<T> = ((string, () => T) => T) & ((string, () => void) => void);\n\ntype GlobalStore<T> = {|\n    get : ((string, T) => T) & ((string, void) => T | void),\n    set : (string, T) => T,\n    has : (string) => boolean,\n    del : (string) => void,\n    getOrSet : GetOrSet<T>,\n    reset : () => void,\n    keys : () => $ReadOnlyArray<string>\n|};\n\n// $FlowFixMe\nexport function globalStore<T : mixed>(key? : string = 'store', defStore? : ObjectGetter = getObj) : GlobalStore<T> {\n    return getOrSet(getGlobal(), key, () => {\n        let store = defStore();\n\n        return {\n            has: (storeKey) => {\n                return store.hasOwnProperty(storeKey);\n            },\n            get: (storeKey, defVal) => {\n                // $FlowFixMe\n                return store.hasOwnProperty(storeKey) ? store[storeKey] : defVal;\n            },\n            set: (storeKey, val) => {\n                store[storeKey] = val;\n                return val;\n            },\n            del: (storeKey) => {\n                delete store[storeKey];\n            },\n            getOrSet: (storeKey, getter) => {\n                // $FlowFixMe\n                return getOrSet(store, storeKey, getter);\n            },\n            reset: () => {\n                store = defStore();\n            },\n            keys: () => {\n                return Object.keys(store);\n            }\n        };\n    });\n}\n\nexport class WildCard {}\n\nexport function getWildcard() : WildCard {\n    const global = getGlobal();\n    global.WINDOW_WILDCARD = global.WINDOW_WILDCARD || new WildCard();\n    return global.WINDOW_WILDCARD;\n}\n\ntype WindowStore<T> = {|\n    get : ((CrossDomainWindowType | WildCard, T) => T) & ((CrossDomainWindowType | WildCard, void) => T | void),\n    set : (CrossDomainWindowType | WildCard, T) => T,\n    has : (CrossDomainWindowType | WildCard) => boolean,\n    del : (CrossDomainWindowType | WildCard) => void,\n    getOrSet : (CrossDomainWindowType | WildCard, () => T) => T\n|};\n\n// $FlowFixMe\nexport function windowStore<T>(key? : string = 'store', defStore? : ObjectGetter = getObj) : WindowStore<T> {\n    return globalStore('windowStore').getOrSet(key, () => {\n        const winStore = new WeakMap();\n\n        const getStore = (win : CrossDomainWindowType | WildCard) : ObjectGetter => {\n            return winStore.getOrSet(win, defStore);\n        };\n    \n        return {\n            has: (win) => {\n                const store = getStore(win);\n                return store.hasOwnProperty(key);\n            },\n            get: (win, defVal) => {\n                const store = getStore(win);\n                // $FlowFixMe\n                return store.hasOwnProperty(key) ? store[key] : defVal;\n            },\n            set: (win, val) => {\n                const store = getStore(win);\n                store[key] = val;\n                return val;\n            },\n            del: (win) => {\n                const store = getStore(win);\n                delete store[key];\n            },\n            getOrSet: (win, getter) => {\n                const store = getStore(win);\n                return getOrSet(store, key, getter);\n            }\n        };\n    });\n}\n","/* @flow */\n\nimport { getAncestor, type CrossDomainWindowType } from 'cross-domain-utils/src';\nimport { ZalgoPromise } from 'zalgo-promise/src';\nimport { noop, uniqueID } from 'belter/src';\n\nimport { MESSAGE_NAME, WILDCARD } from '../conf';\nimport { windowStore, globalStore } from '../global';\nimport type { OnType, SendType, CancelableType } from '../types';\n\nfunction getInstanceID() : string {\n    return globalStore('instance').getOrSet('instanceID', uniqueID);\n}\n\nfunction getHelloPromise(win : CrossDomainWindowType) : ZalgoPromise<{ win : CrossDomainWindowType, domain : string }> {\n    const helloPromises = windowStore('helloPromises');\n    return helloPromises.getOrSet(win, () => new ZalgoPromise());\n}\n\nfunction listenForHello({ on } : { on : OnType }) : CancelableType {\n    return on(MESSAGE_NAME.HELLO, { domain: WILDCARD }, ({ source, origin }) => {\n        getHelloPromise(source).resolve({ win: source, domain: origin });\n        return { instanceID: getInstanceID() };\n    });\n}\n\nexport function sayHello(win : CrossDomainWindowType, { send } : { send : SendType }) : ZalgoPromise<{ win : CrossDomainWindowType, domain : string, instanceID : string }> {\n    return send(win, MESSAGE_NAME.HELLO, { instanceID: getInstanceID() }, { domain: WILDCARD, timeout: -1 })\n        .then(({ origin, data: { instanceID } }) => {\n            getHelloPromise(win).resolve({ win, domain: origin });\n            return { win, domain: origin, instanceID };\n        });\n}\n\nexport function getWindowInstanceID(win : CrossDomainWindowType, { send } : { send : SendType }) : ZalgoPromise<string> {\n    return windowStore('windowInstanceIDPromises').getOrSet(win, () => {\n        return sayHello(win, { send }).then(({ instanceID }) => instanceID);\n    });\n}\n\nexport function initHello({ on, send } : { on : OnType, send : SendType }) : CancelableType {\n    return globalStore('builtinListeners').getOrSet('helloListener', () => {\n        const listener = listenForHello({ on });\n\n        const parent = getAncestor();\n        if (parent) {\n            sayHello(parent, { send }).catch(noop);\n        }\n\n        return listener;\n    });\n}\n\nexport function awaitWindowHello(win : CrossDomainWindowType, timeout : number = 5000, name : string = 'Window') : ZalgoPromise<{ win : CrossDomainWindowType, domain : string }> {\n    let promise = getHelloPromise(win);\n\n    if (timeout !== -1) {\n        promise = promise.timeout(timeout, new Error(`${ name } did not load after ${ timeout }ms`));\n    }\n\n    return promise;\n}\n","/* @flow */\n\nimport { type CrossDomainWindowType } from 'cross-domain-utils/src';\n\nimport { windowStore } from '../global';\n\nexport function markWindowKnown(win : CrossDomainWindowType) {\n    const knownWindows = windowStore('knownWindows');\n    knownWindows.set(win, true);\n}\n\nexport function isWindowKnown(win : CrossDomainWindowType) : boolean {\n    const knownWindows = windowStore('knownWindows');\n    return knownWindows.get(win, false);\n}\n","/* @flow */\n\nexport const TYPE = {\n    FUNCTION:  ('function' : 'function'),\n    ERROR:     ('error' : 'error'),\n    PROMISE:   ('promise' : 'promise'),\n    REGEX:     ('regex' : 'regex'),\n    DATE:      ('date' : 'date'),\n    ARRAY:     ('array' : 'array'),\n    OBJECT:    ('object' : 'object'),\n    STRING:    ('string' : 'string'),\n    NUMBER:    ('number' : 'number'),\n    BOOLEAN:   ('boolean' : 'boolean'),\n    NULL:      ('null' : 'null'),\n    UNDEFINED: ('undefined' : 'undefined')\n};\n","/* @flow */\n\nimport { TYPE } from './constants';\nimport type { CustomSerializedType } from './types';\n\nexport function isSerializedType(item : mixed) : boolean {\n    return (typeof item === 'object' && item !== null && typeof item.__type__ === 'string');\n}\n\nexport function determineType(val : mixed) : $Values<typeof TYPE> | void {\n    if (typeof val === 'undefined') {\n        return TYPE.UNDEFINED;\n    }\n\n    if (val === null) {\n        return TYPE.NULL;\n    }\n\n    if (Array.isArray(val)) {\n        return TYPE.ARRAY;\n    }\n\n    if (typeof val === 'function') {\n        return TYPE.FUNCTION;\n    }\n\n    if (typeof val === 'object') {\n\n        if (val instanceof Error) {\n            return TYPE.ERROR;\n        }\n\n        if (typeof val.then === 'function') {\n            return TYPE.PROMISE;\n        }\n\n        if (Object.prototype.toString.call(val) === '[object RegExp]') {\n            return TYPE.REGEX;\n        }\n\n        if (Object.prototype.toString.call(val) === '[object Date]') {\n            return TYPE.DATE;\n        }\n\n        return TYPE.OBJECT;\n    }\n\n    if (typeof val === 'string') {\n        return TYPE.STRING;\n    }\n\n    if (typeof val === 'number') {\n        return TYPE.NUMBER;\n    }\n\n    if (typeof val === 'boolean') {\n        return TYPE.BOOLEAN;\n    }\n}\n\nexport function serializeType<T : string, V : mixed>(type : T, val : V) : CustomSerializedType<T, V> {\n    return {\n        __type__: type,\n        __val__:  val\n    };\n}\n","/* @flow */\n\nimport { TYPE } from './constants';\nimport type { Thenable, CustomSerializedType, NativeSerializedType } from './types';\nimport { determineType, isSerializedType } from './common';\nimport {\n    serializeFunction,\n    serializeError, type SerializedError,\n    serializePromise,\n    serializeRegex, type SerializedRegex,\n    serializeDate, type SerializedDate,\n    serializeArray,\n    serializeObject,\n    serializeString,\n    serializeNumber,\n    serializeBoolean,\n    serializeNull\n} from './serializers';\n\ntype NativeSerializer<V : mixed, S : mixed, T : $Values<typeof TYPE>> = (value : V, key : string) => NativeSerializedType<T, S>;\ntype CustomSerializer<V : mixed, S : mixed, T : string> = (value : V, key : string) => CustomSerializedType<T, S>;\ntype PrimitiveSerializer<V : mixed, S : mixed> = (value : V, key : string) => S;\ntype CustomOrPrimitiveSerializer<V : mixed, T : string> = CustomSerializer<V, *, T> | PrimitiveSerializer<V, *>;\ntype NativeOrCustomOrPrimitiveSerializer<V : mixed, S : mixed, T : string> = NativeSerializer<V, S, T> | CustomOrPrimitiveSerializer<V, T>;\n\ntype Serializers = {|\n    function? : CustomOrPrimitiveSerializer<Function, typeof TYPE.FUNCTION>,\n    error? : NativeOrCustomOrPrimitiveSerializer<Error, SerializedError, typeof TYPE.ERROR>,\n    promise? : CustomOrPrimitiveSerializer<Thenable, typeof TYPE.PROMISE>,\n    regex? : NativeOrCustomOrPrimitiveSerializer<RegExp, SerializedRegex, typeof TYPE.REGEX>,\n    date? : NativeOrCustomOrPrimitiveSerializer<Date, SerializedDate, typeof TYPE.DATE>,\n    array? : CustomOrPrimitiveSerializer<$ReadOnlyArray<mixed>, typeof TYPE.ARRAY>,\n    object? : CustomOrPrimitiveSerializer<Object, typeof TYPE.OBJECT>,\n    string? : CustomOrPrimitiveSerializer<string, typeof TYPE.STRING>,\n    number? : CustomOrPrimitiveSerializer<number, typeof TYPE.NUMBER>,\n    boolean? : CustomOrPrimitiveSerializer<boolean, typeof TYPE.BOOLEAN>,\n    null? : CustomOrPrimitiveSerializer<null, typeof TYPE.NULL>\n|};\n\nconst SERIALIZER : Serializers = {\n    [ TYPE.FUNCTION ]:  serializeFunction,\n    [ TYPE.ERROR ]:     serializeError,\n    [ TYPE.PROMISE ]:   serializePromise,\n    [ TYPE.REGEX ]:     serializeRegex,\n    [ TYPE.DATE ]:      serializeDate,\n    [ TYPE.ARRAY ]:     serializeArray,\n    [ TYPE.OBJECT ]:    serializeObject,\n    [ TYPE.STRING ]:    serializeString,\n    [ TYPE.NUMBER ]:    serializeNumber,\n    [ TYPE.BOOLEAN ]:   serializeBoolean,\n    [ TYPE.NULL ]:      serializeNull\n};\n\n// $FlowFixMe\nconst defaultSerializers : Serializers = {};\n\nexport function serialize<T : mixed>(obj : T, serializers : Serializers = defaultSerializers) : string {\n\n    function replacer(key) : ?mixed {\n        const val = this[key];\n\n        if (isSerializedType(this)) {\n            return val;\n        }\n        \n        const type = determineType(val);\n\n        if (!type) {\n            return val;\n        }\n\n        // $FlowFixMe\n        const serializer = serializers[type] || SERIALIZER[type];\n\n        if (!serializer) {\n            return val;\n        }\n\n        return serializer(val, key);\n    }\n\n    const result = JSON.stringify(obj, replacer);\n\n    if (typeof result === 'undefined') {\n        return TYPE.UNDEFINED;\n    }\n\n    return result;\n}\n","/* @flow */\n\nexport type SerializedFunction = void;\n\nexport function serializeFunction() : SerializedFunction {\n    // pass\n}\n\nexport function deserializeFunction() {\n    throw new Error(`Function serialization is not implemented; nothing to deserialize`);\n}\n","/* @flow */\n\nimport { serializeType } from '../common';\nimport { TYPE } from '../constants';\nimport type { NativeSerializedType } from '../types';\n\nexport type SerializedError = {|\n    message : string,\n    stack : string,\n    code : string | number | void\n|};\n\n// $FlowFixMe\nexport function serializeError({ message, stack, code } : Error) : NativeSerializedType<typeof TYPE.ERROR, SerializedError> {\n    return serializeType(TYPE.ERROR, { message, stack, code });\n}\n\nexport function deserializeError({ message, stack, code } : SerializedError) : Error {\n    const error = new Error(message);\n    // $FlowFixMe\n    error.code = code;\n    error.stack = `${ stack }\\n\\n${ error.stack }`;\n    return error;\n}\n","/* @flow */\n\nexport type SerializedPromise = void;\n\nexport function serializePromise() : SerializedPromise {\n    // pass\n}\n\nexport function deserializePromise() {\n    throw new Error(`Promise serialization is not implemented; nothing to deserialize`);\n}\n","/* @flow */\n\nimport { serializeType } from '../common';\nimport { TYPE } from '../constants';\nimport type { NativeSerializedType } from '../types';\n\nexport type SerializedRegex = string;\n\nexport function serializeRegex(val : RegExp) : NativeSerializedType<typeof TYPE.REGEX, SerializedRegex> {\n    return serializeType(TYPE.REGEX, val.source);\n}\n\nexport function deserializeRegex(val : string) : RegExp {\n    // eslint-disable-next-line security/detect-non-literal-regexp\n    return new RegExp(val);\n}\n","/* @flow */\n\nimport { serializeType } from '../common';\nimport { TYPE } from '../constants';\nimport type { NativeSerializedType } from '../types';\n\nexport type SerializedDate = string;\n\nexport function serializeDate(val : Date) : NativeSerializedType<typeof TYPE.DATE, SerializedDate> {\n    return serializeType(TYPE.DATE, val.toJSON());\n}\n\nexport function deserializeDate(val : string) : Date {\n    return new Date(val);\n}\n","/* @flow */\n\nexport type SerializedArray<T : mixed = mixed> = $ReadOnlyArray<T>;\n\nexport function serializeArray<T : mixed>(val : $ReadOnlyArray<T>) : SerializedArray<T> {\n    return val;\n}\n\nexport function deserializeArray<T : mixed>(val : SerializedArray<T>) : $ReadOnlyArray<T> {\n    return val;\n}\n","/* @flow */\n\nexport type SerializedObject = Object;\n\nexport function serializeObject(val : Object) : SerializedObject {\n    return val;\n}\n\nexport function deserializeObject(val : SerializedObject) : Object {\n    return val;\n}\n","/* @flow */\n\nexport type SerializedString = string;\n\nexport function serializeString(val : string) : SerializedString {\n    return val;\n}\n\nexport function deserializeString(val : SerializedString) : string {\n    return val;\n}\n","/* @flow */\n\nexport type SerializedNumber = number;\n\nexport function serializeNumber(val : number) : SerializedNumber {\n    return val;\n}\n\nexport function deserializeNumber(val : SerializedNumber) : number {\n    return val;\n}\n","/* @flow */\n\nexport type SerializedBoolean = boolean;\n\nexport function serializeBoolean(val : boolean) : SerializedBoolean {\n    return val;\n}\n\nexport function deserializeBoolean(val : SerializedBoolean) : boolean {\n    return val;\n}\n","/* @flow */\n\nexport type SerializedNull = null;\n\nexport function serializeNull(val : null) : SerializedNull {\n    return val;\n}\n\nexport function deserializeNull(val : SerializedNull) : null {\n    return val;\n}\n","/* @flow */\n\nimport type { Thenable } from './types';\nimport { TYPE } from './constants';\nimport { determineType, isSerializedType } from './common';\nimport {\n    deserializeFunction,\n    deserializeError, type SerializedError,\n    deserializePromise,\n    deserializeRegex, type SerializedRegex,\n    deserializeDate, type SerializedDate,\n    deserializeArray,\n    deserializeObject,\n    deserializeString,\n    deserializeNumber,\n    deserializeBoolean,\n    deserializeNull\n} from './serializers';\n\ntype Deserializer<V : mixed, S : mixed> = (serializedValue : S, key : string) => V;\ntype PrimitiveDeserializer<V, S = V> = (serializedValue : S, key : string) => V;\n\ntype Deserializers = {\n    function? : Deserializer<Function, *>,\n    error? : Deserializer<Error, SerializedError>,\n    promise? : Deserializer<Thenable, *>,\n    regex? : Deserializer<RegExp, SerializedRegex>,\n    date? : Deserializer<Date, SerializedDate>,\n    array? : PrimitiveDeserializer<$ReadOnlyArray<mixed>>,\n    object? : PrimitiveDeserializer<Object>,\n    string? : PrimitiveDeserializer<string>,\n    number? : PrimitiveDeserializer<number>,\n    boolean? : PrimitiveDeserializer<boolean>,\n    null? : PrimitiveDeserializer<null>,\n    [string] : Deserializer<mixed, *>\n};\n\n// $FlowFixMe\nconst DESERIALIZER : Deserializers = {\n    [ TYPE.FUNCTION ]:  deserializeFunction,\n    [ TYPE.ERROR ]:     deserializeError,\n    [ TYPE.PROMISE ]:   deserializePromise,\n    [ TYPE.REGEX ]:     deserializeRegex,\n    [ TYPE.DATE ]:      deserializeDate,\n    [ TYPE.ARRAY ]:     deserializeArray,\n    [ TYPE.OBJECT ]:    deserializeObject,\n    [ TYPE.STRING ]:    deserializeString,\n    [ TYPE.NUMBER ]:    deserializeNumber,\n    [ TYPE.BOOLEAN ]:   deserializeBoolean,\n    [ TYPE.NULL ]:      deserializeNull\n};\n\n// $FlowFixMe\nconst defaultDeserializers : Deserializers = {};\n\nexport function deserialize<T : mixed | null | void>(str : string, deserializers : Deserializers = defaultDeserializers) : T {\n    if (str === TYPE.UNDEFINED) {\n        // $FlowFixMe\n        return;\n    }\n\n    function replacer(key, val) : ?mixed {\n        if (isSerializedType(this)) {\n            return val;\n        }\n\n        let type;\n        let value;\n\n        if (isSerializedType(val)) {\n            type = val.__type__;\n            value = val.__val__;\n        } else {\n            type = determineType(val);\n            value = val;\n        }\n\n        if (!type) {\n            return value;\n        }\n\n        // $FlowFixMe\n        const deserializer = deserializers[type] || DESERIALIZER[type];\n\n        if (!deserializer) {\n            return value;\n        }\n\n        return deserializer(value, key);\n    }\n\n    return JSON.parse(str, replacer);\n}\n","/* @flow */\n\nimport { ZalgoPromise } from 'zalgo-promise/src';\nimport { getDomain, isSameDomain, isOpener, isSameTopWindow, matchDomain, getUserAgent, getDomainFromUrl, type CrossDomainWindowType } from 'cross-domain-utils/src';\nimport { noop } from 'belter/src';\n\nimport { BRIDGE_NAME_PREFIX } from '../conf';\nimport { windowStore } from '../global';\n\nexport function needsBridgeForBrowser() : boolean {\n\n    if (getUserAgent(window).match(/MSIE|trident|edge\\/12|edge\\/13/i)) {\n        return true;\n    }\n\n    return false;\n}\n\nexport function needsBridgeForWin(win : CrossDomainWindowType) : boolean {\n\n    if (!isSameTopWindow(window, win)) {\n        return true;\n    }\n\n    return false;\n}\n\nexport function needsBridgeForDomain(domain : ?string, win : ?CrossDomainWindowType) : boolean {\n\n    if (domain) {\n        if (getDomain() !== getDomainFromUrl(domain)) {\n            return true;\n        }\n    } else if (win) {\n        if (!isSameDomain(win))  {\n            return true;\n        }\n    }\n\n    return false;\n}\n\nexport function needsBridge({ win, domain } : { win? : CrossDomainWindowType, domain? : string }) : boolean {\n\n    if (!needsBridgeForBrowser()) {\n        return false;\n    }\n\n    if (domain && !needsBridgeForDomain(domain, win)) {\n        return false;\n    }\n\n    if (win && !needsBridgeForWin(win)) {\n        return false;\n    }\n\n    return true;\n}\n\nexport function getBridgeName(domain : string) : string {\n\n    domain = domain || getDomainFromUrl(domain);\n\n    const sanitizedDomain = domain.replace(/[^a-zA-Z0-9]+/g, '_');\n\n    const id = `${ BRIDGE_NAME_PREFIX }_${ sanitizedDomain }`;\n\n    return id;\n}\n\nexport function isBridge() : boolean {\n    return Boolean(window.name && window.name === getBridgeName(getDomain()));\n}\n\nexport const documentBodyReady = new ZalgoPromise(resolve => {\n\n    if (window.document && window.document.body) {\n        return resolve(window.document.body);\n    }\n\n    const interval = setInterval(() => {\n        if (window.document && window.document.body) {\n            clearInterval(interval);\n            return resolve(window.document.body);\n        }\n    }, 10);\n});\n\nexport function registerRemoteWindow(win : CrossDomainWindowType) {\n    const remoteWindowPromises = windowStore('remoteWindowPromises');\n    remoteWindowPromises.getOrSet(win, () => new ZalgoPromise());\n}\n\nexport function findRemoteWindow(win : CrossDomainWindowType) : ZalgoPromise<(remoteWin : CrossDomainWindowType, message : string, remoteDomain : string) => void> {\n    const remoteWindowPromises = windowStore('remoteWindowPromises');\n    const remoteWinPromise = remoteWindowPromises.get(win);\n\n    if (!remoteWinPromise) {\n        throw new Error(`Remote window promise not found`);\n    }\n\n    return remoteWinPromise;\n}\n\nexport function registerRemoteSendMessage(win : CrossDomainWindowType, domain : string, sendMessage : (message : string) => void) {\n    const sendMessageWrapper = (remoteWin : CrossDomainWindowType, remoteDomain : string, message : string) => {\n        if (remoteWin !== win) {\n            throw new Error(`Remote window does not match window`);\n        }\n\n        if (!matchDomain(remoteDomain, domain)) {\n            throw new Error(`Remote domain ${ remoteDomain } does not match domain ${ domain }`);\n        }\n\n        sendMessage.fireAndForget(message);\n    };\n\n    findRemoteWindow(win).resolve(sendMessageWrapper);\n}\n\nexport function rejectRemoteSendMessage(win : CrossDomainWindowType, err : Error) {\n    findRemoteWindow(win).reject(err).catch(noop);\n}\n\nexport function sendBridgeMessage(win : CrossDomainWindowType, domain : string, message : string) : ZalgoPromise<void> {\n\n    const messagingChild  = isOpener(window, win);\n    const messagingParent = isOpener(win, window);\n\n    if (!messagingChild && !messagingParent) {\n        throw new Error(`Can only send messages to and from parent and popup windows`);\n    }\n\n    return findRemoteWindow(win).then(sendMessage => {\n        return sendMessage(win, domain, message);\n    });\n}\n","/* @flow */\n\nimport { ZalgoPromise } from 'zalgo-promise/src';\nimport { getDomain, getFrameByName, isWindowClosed, getDomainFromUrl, normalizeMockUrl, type CrossDomainWindowType } from 'cross-domain-utils/src';\n\nimport { BRIDGE_TIMEOUT, MESSAGE_NAME } from '../conf';\nimport { awaitWindowHello } from '../lib';\nimport { windowStore, globalStore } from '../global';\nimport type { OnType, SendType, ReceiveMessageType } from '../types';\n\nimport { getBridgeName, documentBodyReady, registerRemoteSendMessage, registerRemoteWindow } from './common';\n\nexport function listenForOpenTunnel({ on, send, receiveMessage } : { on : OnType, send : SendType, receiveMessage : ReceiveMessageType }) {\n    const popupWindowsByName = globalStore('popupWindowsByName');\n\n    on(MESSAGE_NAME.OPEN_TUNNEL, ({ source, origin, data }) => {\n        const bridgePromise = globalStore('bridges').get(origin);\n\n        if (!bridgePromise) {\n            throw new Error(`Can not find bridge promise for domain ${ origin }`);\n        }\n\n        return bridgePromise.then(bridge => {\n\n            // $FlowFixMe\n            if (source !== bridge) {\n                // $FlowFixMe\n                throw new Error(`Message source does not matched registered bridge for domain ${ origin }`);\n            }\n\n            if (!data.name) {\n                throw new Error(`Register window expected to be passed window name`);\n            }\n\n            if (!data.sendMessage) {\n                throw new Error(`Register window expected to be passed sendMessage method`);\n            }\n\n            if (!popupWindowsByName.has(data.name)) {\n                throw new Error(`Window with name ${ data.name } does not exist, or was not opened by this window`);\n            }\n\n            // $FlowFixMe\n            if (!popupWindowsByName.get(data.name).domain) {\n                throw new Error(`We do not have a registered domain for window ${ data.name }`);\n            }\n\n            // $FlowFixMe\n            if (popupWindowsByName.get(data.name).domain !== origin) {\n                // $FlowFixMe\n                throw new Error(`Message origin ${ origin } does not matched registered window origin ${ popupWindowsByName.get(data.name).domain }`);\n            }\n\n            // $FlowFixMe\n            registerRemoteSendMessage(popupWindowsByName.get(data.name).win, origin, data.sendMessage);\n\n            return {\n                sendMessage(message) {\n\n                    if (!window || window.closed) {\n                        return;\n                    }\n\n                    const winDetails = popupWindowsByName.get(data.name);\n\n                    if (!winDetails) {\n                        return;\n                    }\n\n                    try {\n                        receiveMessage({\n                            data:   message,\n                            origin: winDetails.domain,\n                            source: winDetails.win\n                        }, { on, send });\n                    } catch (err) {\n                        ZalgoPromise.reject(err);\n                    }\n                }\n            };\n        });\n    });\n}\n\nfunction openBridgeFrame(name : string, url : string) : HTMLIFrameElement {\n\n    const iframe = document.createElement(`iframe`);\n\n    iframe.setAttribute(`name`, name);\n    iframe.setAttribute(`id`,   name);\n\n    iframe.setAttribute(`style`, `display: none; margin: 0; padding: 0; border: 0px none; overflow: hidden;`);\n    iframe.setAttribute(`frameborder`, `0`);\n    iframe.setAttribute(`border`, `0`);\n    iframe.setAttribute(`scrolling`, `no`);\n    iframe.setAttribute(`allowTransparency`, `true`);\n\n    iframe.setAttribute(`tabindex`, `-1`);\n    iframe.setAttribute(`hidden`, `true`);\n    iframe.setAttribute(`title`, ``);\n    iframe.setAttribute(`role`, `presentation`);\n\n    iframe.src = url;\n\n    return iframe;\n}\n\nexport function hasBridge(url : string, domain : string) : boolean {\n    const bridges = globalStore('bridges');\n    return bridges.has(domain || getDomainFromUrl(url));\n}\n\nexport function openBridge(url : string, domain : string) : ZalgoPromise<CrossDomainWindowType> {\n    const bridges = globalStore('bridges');\n    const bridgeFrames = globalStore('bridgeFrames');\n    \n    domain = domain || getDomainFromUrl(url);\n    \n    return bridges.getOrSet(domain, () => ZalgoPromise.try(() => {\n\n        if (getDomain() === domain) {\n            throw new Error(`Can not open bridge on the same domain as current domain: ${ domain }`);\n        }\n\n        const name  = getBridgeName(domain);\n        const frame = getFrameByName(window, name);\n\n        if (frame) {\n            throw new Error(`Frame with name ${ name } already exists on page`);\n        }\n\n        const iframe = openBridgeFrame(name, url);\n        bridgeFrames.set(domain, iframe);\n\n        return documentBodyReady.then(body => {\n\n            body.appendChild(iframe);\n            const bridge = iframe.contentWindow;\n\n            return new ZalgoPromise((resolve, reject) => {\n\n                iframe.addEventListener('load', resolve);\n                iframe.addEventListener('error', reject);\n\n            }).then(() => {\n\n                return awaitWindowHello(bridge, BRIDGE_TIMEOUT, `Bridge ${ url }`);\n\n            }).then(() => {\n\n                return bridge;\n            });\n        });\n    }));\n}\n\ntype WinDetails = {|\n    win : CrossDomainWindowType,\n    domain? : ?string,\n    name? : ?string\n|};\n\nexport function linkWindow({ win, name, domain } : WinDetails) : WinDetails {\n    const popupWindowsByName = globalStore('popupWindowsByName');\n    const popupWindowsByWin = windowStore('popupWindowsByWin');\n\n    for (const winName of popupWindowsByName.keys()) {\n        // $FlowFixMe\n        if (isWindowClosed(popupWindowsByName.get(winName).win)) {\n            popupWindowsByName.del(winName);\n        }\n    }\n\n    const details : WinDetails = popupWindowsByWin.getOrSet(win, () => {\n        if (!name) {\n            return { win };\n        }\n        \n        return popupWindowsByName.getOrSet(name, () => {\n            return { win, name };\n        });\n    });\n\n    if (details.win && details.win !== win) {\n        throw new Error(`Different window already linked for window: ${ name || 'undefined' }`);\n    }\n\n    if (name) {\n        if (details.name && details.name !== name) {\n            throw new Error(`Different window already linked for name ${ name }: ${ details.name }`);\n        }\n\n        details.name = name;\n        popupWindowsByName.set(name, details);\n    }\n\n    if (domain) {\n        details.domain = domain;\n        registerRemoteWindow(win);\n    }\n\n    popupWindowsByWin.set(win, details);\n    \n    return details;\n}\n\nexport function linkUrl(win : CrossDomainWindowType, url : string) {\n    linkWindow({ win, domain: getDomainFromUrl(url) });\n}\n\nexport function listenForWindowOpen() {\n    const windowOpen = window.open;\n\n    window.open = function windowOpenWrapper(url : string, name : string, options : string, last : mixed) : mixed {\n        const win = windowOpen.call(this, normalizeMockUrl(url), name, options, last);\n    \n        if (!win) {\n            return win;\n        }\n    \n        linkWindow({ win, name, domain: url ? getDomainFromUrl(url) : null });\n    \n        return win;\n    };\n}\n\nexport function destroyBridges() {\n    const bridges = globalStore('bridges');\n    const bridgeFrames = globalStore('bridgeFrames');\n\n    for (const domain of bridgeFrames.keys()) {\n        const frame = bridgeFrames.get(domain);\n        if (frame && frame.parentNode) {\n            frame.parentNode.removeChild(frame);\n        }\n    }\n    bridgeFrames.reset();\n    bridges.reset();\n}\n","/* @flow */\n\nimport type { OnType, SendType, ReceiveMessageType } from '../types';\n\nimport { listenForWindowOpen, listenForOpenTunnel } from './parent';\nimport { setupOpenTunnelToParent } from './bridge';\nimport { openTunnelToOpener } from './child';\n\nexport function setupBridge({ on, send, receiveMessage } : { on : OnType, send : SendType, receiveMessage : ReceiveMessageType }) {\n    listenForWindowOpen();\n    listenForOpenTunnel({ on, send, receiveMessage });\n    setupOpenTunnelToParent({ on, send });\n    openTunnelToOpener({ on, send, receiveMessage });\n}\n","/* @flow */\n\nimport { type ZalgoPromise } from 'zalgo-promise/src';\nimport { getParent, isWindowClosed, type CrossDomainWindowType } from 'cross-domain-utils/src';\nimport { noop, uniqueID } from 'belter/src';\n\nimport { MESSAGE_NAME, WILDCARD } from '../conf';\nimport { getGlobal, globalStore } from '../global';\nimport type { SendType, ResponseMessageEvent } from '../types';\n\nfunction cleanTunnelWindows() {\n    const tunnelWindows = globalStore('tunnelWindows');\n\n    for (const key of tunnelWindows.keys()) {\n        const tunnelWindow = tunnelWindows[key];\n\n        try {\n            noop(tunnelWindow.source);\n        } catch (err) {\n            tunnelWindows.del(key);\n            continue;\n        }\n\n        if (isWindowClosed(tunnelWindow.source)) {\n            tunnelWindows.del(key);\n        }\n    }\n}\n\ntype TunnelWindowDataType = {|\n    name : string,\n    source : CrossDomainWindowType,\n    canary : () => void,\n    sendMessage : (message : string) => void\n|};\n\nfunction addTunnelWindow({ name, source, canary, sendMessage } : TunnelWindowDataType) : string {\n    cleanTunnelWindows();\n    const id = uniqueID();\n    const tunnelWindows = globalStore('tunnelWindows');\n    tunnelWindows.set(id, { name, source, canary, sendMessage });\n    return id;\n}\n\nexport function setupOpenTunnelToParent({ send } : { send : SendType }) {\n    getGlobal(window).openTunnelToParent = function openTunnelToParent({ name, source, canary, sendMessage } : TunnelWindowDataType) : ZalgoPromise<ResponseMessageEvent> {\n\n        const tunnelWindows = globalStore('tunnelWindows');\n        const parentWindow = getParent(window);\n    \n        if (!parentWindow) {\n            throw new Error(`No parent window found to open tunnel to`);\n        }\n    \n        const id = addTunnelWindow({ name, source, canary, sendMessage });\n    \n        return send(parentWindow, MESSAGE_NAME.OPEN_TUNNEL, {\n    \n            name,\n    \n            sendMessage() {\n    \n                const tunnelWindow = tunnelWindows.get(id);\n    \n                try {\n                    // IE gets antsy if you try to even reference a closed window\n                    noop(tunnelWindow && tunnelWindow.source);\n                } catch (err) {\n                    tunnelWindows.del(id);\n                    return;\n                }\n    \n                if (!tunnelWindow || !tunnelWindow.source || isWindowClosed(tunnelWindow.source)) {\n                    return;\n                }\n    \n                try {\n                    tunnelWindow.canary();\n                } catch (err) {\n                    return;\n                }\n    \n                tunnelWindow.sendMessage.apply(this, arguments);\n            }\n    \n        }, { domain: WILDCARD });\n    };\n}\n","/* @flow */\n\nimport { ZalgoPromise } from 'zalgo-promise/src';\nimport { isSameDomain, getOpener, getDomain, getFrameByName, type CrossDomainWindowType } from 'cross-domain-utils/src';\nimport { noop } from 'belter/src';\n\nimport { getGlobal, windowStore } from '../global';\nimport type { OnType, SendType, ReceiveMessageType } from '../types';\n\nimport { needsBridge, registerRemoteWindow, rejectRemoteSendMessage, registerRemoteSendMessage, getBridgeName } from './common';\n\nfunction awaitRemoteBridgeForWindow (win : CrossDomainWindowType) : ZalgoPromise<?CrossDomainWindowType> {\n    return windowStore('remoteBridgeAwaiters').getOrSet(win, () => {\n        return ZalgoPromise.try(() => {\n            const frame = getFrameByName(win, getBridgeName(getDomain()));\n\n            if (!frame) {\n                throw new Error(`Bridge not found for domain: ${ getDomain() }`);\n            }\n\n            // $FlowFixMe\n            if (isSameDomain(frame) && getGlobal(frame)) {\n                return frame;\n            }\n\n            return new ZalgoPromise((resolve, reject) => {\n\n                let interval;\n                let timeout; // eslint-disable-line prefer-const\n\n                interval = setInterval(() => { // eslint-disable-line prefer-const\n                    // $FlowFixMe\n                    if (frame && isSameDomain(frame) && getGlobal(frame)) {\n                        clearInterval(interval);\n                        clearTimeout(timeout);\n                        return resolve(frame);\n                    }\n                }, 100);\n\n                timeout = setTimeout(() => {\n                    clearInterval(interval);\n                    return reject(new Error(`Bridge not found for domain: ${ getDomain() }`));\n                }, 2000);\n            });\n        });\n    });\n}\n\nexport function openTunnelToOpener({ on, send, receiveMessage } : { on : OnType, send : SendType, receiveMessage : ReceiveMessageType }) : ZalgoPromise<void> {\n    return ZalgoPromise.try(() => {\n        const opener = getOpener(window);\n\n        if (!opener) {\n            return;\n        }\n\n        if (!needsBridge({ win: opener })) {\n            return;\n        }\n\n        registerRemoteWindow(opener);\n\n        return awaitRemoteBridgeForWindow(opener).then(bridge => {\n\n            if (!window.name) {\n                return rejectRemoteSendMessage(opener, new Error(`Can not register with opener: window does not have a name`));\n            }\n\n            // $FlowFixMe\n            return getGlobal(bridge).openTunnelToParent({\n\n                name: window.name,\n\n                source: window,\n\n                canary() {\n                    // pass\n                },\n\n                sendMessage(message) {\n\n                    try {\n                        noop(window);\n                    } catch (err) {\n                        return;\n                    }\n\n                    if (!window || window.closed) {\n                        return;\n                    }\n\n                    try {\n                        receiveMessage({\n                            data:   message,\n                            origin: this.origin,\n                            source: this.source\n                        }, { on, send });\n                    } catch (err) {\n                        ZalgoPromise.reject(err);\n                    }\n                }\n\n            }).then(({ source, origin, data }) => {\n\n                if (source !== opener) {\n                    throw new Error(`Source does not match opener`);\n                }\n\n                registerRemoteSendMessage(source, origin, data.sendMessage);\n\n            }).catch(err => {\n\n                rejectRemoteSendMessage(opener, err);\n                throw err;\n            });\n        });\n    });\n}\n","/* @flow */\n\nimport { isSameDomain, isWindowClosed, type CrossDomainWindowType, type DomainMatcher, getOpener, WINDOW_TYPE, isWindow } from 'cross-domain-utils/src';\nimport { ZalgoPromise } from 'zalgo-promise/src';\nimport { uniqueID, memoizePromise } from 'belter/src';\nimport { serializeType, type CustomSerializedType } from 'universal-serialize/src';\n\nimport { SERIALIZATION_TYPE } from '../conf';\nimport { windowStore, globalStore } from '../global';\nimport { getWindowInstanceID } from '../lib';\nimport { linkWindow } from '../bridge';\nimport type { OnType, SendType } from '../types';\n\nfunction cleanupProxyWindows() {\n    const idToProxyWindow = globalStore('idToProxyWindow');\n    for (const id of idToProxyWindow.keys()) {\n        // $FlowFixMe\n        if (idToProxyWindow.get(id).shouldClean()) {\n            idToProxyWindow.del(id);\n        }\n    }\n}\n\ntype SerializedProxyWindow = {|\n    id : string,\n    type : $Values<typeof WINDOW_TYPE>,\n    close : () => ZalgoPromise<void>,\n    focus : () => ZalgoPromise<void>,\n    isClosed : () => ZalgoPromise<boolean>,\n    setLocation : (string) => ZalgoPromise<void>,\n    setName : (string) => ZalgoPromise<void>,\n    getInstanceID : () => ZalgoPromise<string>\n|};\n\nexport class ProxyWindow {\n\n    isProxyWindow : true = true\n    serializedWindow : SerializedProxyWindow\n    actualWindow : CrossDomainWindowType\n    actualWindowPromise : ZalgoPromise<CrossDomainWindowType>\n    send : SendType\n\n    constructor(serializedWindow : SerializedProxyWindow, actualWindow? : ?CrossDomainWindowType, { send } : { send : SendType }) {\n        this.serializedWindow = serializedWindow;\n        this.actualWindowPromise = new ZalgoPromise();\n        if (actualWindow) {\n            this.setWindow(actualWindow);\n        }\n        this.serializedWindow.getInstanceID = memoizePromise(this.serializedWindow.getInstanceID);\n        this.send = send;\n    }\n\n    getType() : $Values<typeof WINDOW_TYPE> {\n        return this.serializedWindow.type;\n    }\n\n    isPopup() : boolean {\n        return this.getType() === WINDOW_TYPE.POPUP;\n    }\n\n    isIframe() : boolean {\n        return this.getType() === WINDOW_TYPE.IFRAME;\n    }\n\n    setLocation(href : string) : ZalgoPromise<ProxyWindow> {\n        return ZalgoPromise.try(() => {\n            if (this.actualWindow) {\n                this.actualWindow.location = href;\n            } else {\n                return this.serializedWindow.setLocation(href);\n            }\n        }).then(() => this);\n    }\n\n    setName(name : string) : ZalgoPromise<ProxyWindow> {\n        return ZalgoPromise.try(() => {\n            if (this.actualWindow) {\n                if (!isSameDomain(this.actualWindow)) {\n                    throw new Error(`Can not set name for window on different domain`);\n                }\n                // $FlowFixMe\n                this.actualWindow.name = name;\n                // $FlowFixMe\n                if (this.actualWindow.frameElement) {\n                    // $FlowFixMe\n                    this.actualWindow.frameElement.setAttribute('name', name);\n                }\n\n                if (__POST_ROBOT__.__IE_POPUP_SUPPORT__) {\n                    \n                    linkWindow({ win: this.actualWindow, name });\n                }\n\n            } else {\n                return this.serializedWindow.setName(name);\n            }\n        }).then(() => this);\n    }\n\n    close() : ZalgoPromise<ProxyWindow> {\n        return ZalgoPromise.try(() => {\n            if (this.actualWindow) {\n                this.actualWindow.close();\n            } else {\n                return this.serializedWindow.close();\n            }\n        }).then(() => this);\n    }\n\n    focus() : ZalgoPromise<ProxyWindow> {\n        return ZalgoPromise.try(() => {\n            if (this.actualWindow) {\n                this.actualWindow.focus();\n            }\n            return this.serializedWindow.focus();\n        }).then(() => this);\n    }\n\n    isClosed() : ZalgoPromise<boolean> {\n        return ZalgoPromise.try(() => {\n            if (this.actualWindow) {\n                return isWindowClosed(this.actualWindow);\n            } else {\n                return this.serializedWindow.isClosed();\n            }\n        });\n    }\n\n    getWindow() : ?CrossDomainWindowType {\n        return this.actualWindow;\n    }\n\n    setWindow(win : CrossDomainWindowType) {\n        this.actualWindow = win;\n        this.actualWindowPromise.resolve(win);\n    }\n\n    awaitWindow() : ZalgoPromise<CrossDomainWindowType> {\n        return this.actualWindowPromise;\n    }\n\n    matchWindow(win : CrossDomainWindowType) : ZalgoPromise<boolean> {\n        return ZalgoPromise.try(() => {\n            if (this.actualWindow) {\n                return win === this.actualWindow;\n            }\n            \n            return ZalgoPromise.all([\n                this.getInstanceID(),\n                getWindowInstanceID(win, { send: this.send })\n            ]).then(([ proxyInstanceID, knownWindowInstanceID ]) => {\n                const match = proxyInstanceID === knownWindowInstanceID;\n\n                if (match) {\n                    this.setWindow(win);\n                }\n\n                return match;\n            });\n        });\n    }\n\n    unwrap() : CrossDomainWindowType | ProxyWindow {\n        return this.actualWindow || this;\n    }\n\n    getInstanceID() : ZalgoPromise<string> {\n        if (this.actualWindow) {\n            return getWindowInstanceID(this.actualWindow, { send: this.send });\n        } else {\n            return this.serializedWindow.getInstanceID();\n        }\n    }\n\n    serialize() : SerializedProxyWindow {\n        return this.serializedWindow;\n    }\n\n    shouldClean() : boolean {\n        return this.actualWindow && isWindowClosed(this.actualWindow);\n    }\n\n    static unwrap(win : CrossDomainWindowType | ProxyWindow) : CrossDomainWindowType | ProxyWindow {\n        return ProxyWindow.isProxyWindow(win)\n            // $FlowFixMe\n            ? win.unwrap()\n            : win;\n    }\n\n    static serialize(win : CrossDomainWindowType | ProxyWindow, { send } : { send : SendType }) : SerializedProxyWindow {\n        cleanupProxyWindows();\n\n        return ProxyWindow.toProxyWindow(win, { send }).serialize();\n    }\n\n    static deserialize(serializedWindow : SerializedProxyWindow, { on, send } : { on : OnType, send : SendType }) : ProxyWindow {\n        cleanupProxyWindows();\n        \n        return globalStore('idToProxyWindow').getOrSet(serializedWindow.id, () => {\n            return new ProxyWindow(serializedWindow, null, { on, send });\n        });\n    }\n\n    static isProxyWindow(obj : CrossDomainWindowType | ProxyWindow) : boolean {\n        // $FlowFixMe\n        return Boolean(obj && !isWindow(obj) && obj.isProxyWindow);\n    }\n\n    static toProxyWindow(win : CrossDomainWindowType | ProxyWindow, { send } : { send : SendType }) : ProxyWindow {\n        cleanupProxyWindows();\n\n        if (ProxyWindow.isProxyWindow(win)) {\n            // $FlowFixMe\n            return win;\n        }\n\n        // $FlowFixMe\n        return windowStore('winToProxyWindow').getOrSet(win, () => {\n            const id = uniqueID();\n\n            return globalStore('idToProxyWindow').set(id, new ProxyWindow({\n                id,\n                // $FlowFixMe\n                type:          getOpener(win) ? WINDOW_TYPE.POPUP : WINDOW_TYPE.IFRAME,\n                // $FlowFixMe\n                getInstanceID: () => getWindowInstanceID(win, { send }),\n                close:         () => ZalgoPromise.try(() => {\n                    win.close();\n                }),\n                focus:         () => ZalgoPromise.try(() => {\n                    win.focus();\n                }),\n                isClosed:      () => ZalgoPromise.try(() => {\n                    // $FlowFixMe\n                    return isWindowClosed(win);\n                }),\n                setLocation:   (href) => ZalgoPromise.try(() => {\n                    // $FlowFixMe\n                    if (isSameDomain(win)) {\n                        try {\n                            if (win.location && typeof win.location.replace === 'function') {\n                                // $FlowFixMe\n                                win.location.replace(href);\n                                return;\n                            }\n                        } catch (err) {\n                            // pass\n                        }\n                    }\n    \n                    // $FlowFixMe\n                    win.location = href;\n                }),\n                setName:       (name) => ZalgoPromise.try(() => {\n                    if (__POST_ROBOT__.__IE_POPUP_SUPPORT__) {\n                        // $FlowFixMe\n                        linkWindow({ win, name });\n                    }\n                    // $FlowFixMe\n                    win.name = name;\n                })\n            // $FlowFixMe\n            }, win, { send }));\n        });\n    }\n}\n\nexport type SerializedWindow = CustomSerializedType<typeof SERIALIZATION_TYPE.CROSS_DOMAIN_WINDOW, SerializedProxyWindow>;\n\nexport function serializeWindow(destination : CrossDomainWindowType | ProxyWindow, domain : DomainMatcher, win : CrossDomainWindowType, { send } : { send : SendType }) : SerializedWindow {\n    return serializeType(SERIALIZATION_TYPE.CROSS_DOMAIN_WINDOW, ProxyWindow.serialize(win, { send }));\n}\n\nexport function deserializeWindow(source : CrossDomainWindowType | ProxyWindow, origin : string, win : SerializedProxyWindow, { on, send } : { on : OnType, send : SendType }) : ProxyWindow {\n    return ProxyWindow.deserialize(win, { on, send });\n}\n","/* @flow */\n\nimport { matchDomain, getDomain, type CrossDomainWindowType, type DomainMatcher } from 'cross-domain-utils/src';\nimport { ZalgoPromise } from 'zalgo-promise/src';\nimport { uniqueID, isRegex } from 'belter/src';\nimport { serializeType, type CustomSerializedType } from 'universal-serialize/src';\n\nimport { MESSAGE_NAME, WILDCARD, SERIALIZATION_TYPE } from '../conf';\nimport { windowStore, globalStore } from '../global';\nimport type { OnType, SendType, CancelableType } from '../types';\n\nimport { ProxyWindow } from './window';\n\ntype StoredMethod = {|\n    name : string,\n    domain : DomainMatcher,\n    val : Function,\n    source : CrossDomainWindowType | ProxyWindow\n|};\n\nfunction addMethod(id : string, val : Function, name : string, source : CrossDomainWindowType | ProxyWindow, domain : DomainMatcher) {\n    const methodStore = windowStore('methodStore');\n    const proxyWindowMethods = globalStore('proxyWindowMethods');\n    \n    if (ProxyWindow.isProxyWindow(source)) {\n        proxyWindowMethods.set(id, { val, name, domain, source });\n    } else {\n        proxyWindowMethods.del(id);\n        // $FlowFixMe\n        const methods = methodStore.getOrSet(source, () => ({}));\n        methods[id] = { domain, name, val, source };\n    }\n}\n\nfunction lookupMethod(source : CrossDomainWindowType, id : string) : ?StoredMethod {\n    const methodStore = windowStore('methodStore');\n    const proxyWindowMethods = globalStore('proxyWindowMethods');\n    const methods = methodStore.getOrSet(source, () => ({}));\n    return methods[id] || proxyWindowMethods.get(id);\n}\n\nfunction listenForFunctionCalls({ on } : { on : OnType }) : CancelableType {\n    return globalStore('builtinListeners').getOrSet('functionCalls', () => {\n        return on(MESSAGE_NAME.METHOD, { domain: WILDCARD }, ({ source, origin, data } : { source : CrossDomainWindowType, origin : string, data : Object }) => {\n            const { id, name } = data;\n\n            const meth = lookupMethod(source, id);\n    \n            if (!meth) {\n                throw new Error(`Could not find method '${ data.name }' with id: ${ data.id } in ${ getDomain(window) }`);\n            }\n\n            const { source: methodSource, domain, val } = meth;\n            \n            return ZalgoPromise.try(() => {\n                if (!matchDomain(domain, origin)) {\n                    // $FlowFixMe\n                    throw new Error(`Method '${ data.name }' domain ${ JSON.stringify(isRegex(meth.domain) ? meth.domain.source : meth.domain) } does not match origin ${ origin } in ${ getDomain(window) }`);\n                }\n                \n                if (ProxyWindow.isProxyWindow(methodSource)) {\n                    // $FlowFixMe\n                    return methodSource.matchWindow(source).then(match => {\n                        if (!match) {\n                            throw new Error(`Method call '${ data.name }' failed - proxy window does not match source in ${ getDomain(window) }`);\n                        }\n                    });\n                }\n            }).then(() => {\n                return val.apply({ source, origin }, data.args);\n            }, err => {\n                return ZalgoPromise.try(() => {\n                    if (val.onError) {\n                        return val.onError(err);\n                    }\n                }).then(() => {\n                    throw err;\n                });\n            }).then(result => {\n                return { result, id, name };\n            });\n        });\n    });\n}\n\nexport type SerializedFunction = CustomSerializedType<typeof SERIALIZATION_TYPE.CROSS_DOMAIN_FUNCTION, {\n    id : string,\n    name : string\n}>;\n\nexport function serializeFunction<T>(destination : CrossDomainWindowType | ProxyWindow, domain : DomainMatcher, val : () => ZalgoPromise<T> | T, key : string, { on } : { on : OnType }) : SerializedFunction {\n    listenForFunctionCalls({ on });\n    \n    const id = val.__id__ || uniqueID();\n    destination = ProxyWindow.unwrap(destination);\n    const name = val.__name__ || val.name || key;\n\n    if (ProxyWindow.isProxyWindow(destination)) {\n        addMethod(id, val, name, destination, domain);\n\n        // $FlowFixMe\n        destination.awaitWindow().then(win => {\n            addMethod(id, val, name, win, domain);\n        });\n    } else {\n        addMethod(id, val, name, destination, domain);\n    }\n\n    return serializeType(SERIALIZATION_TYPE.CROSS_DOMAIN_FUNCTION, { id, name });\n}\n\nexport function deserializeFunction<T>(source : CrossDomainWindowType | ProxyWindow, origin : string, { id, name } : { id : string, name : string }, { send } : { send : SendType }) : (...args : $ReadOnlyArray<mixed>) => ZalgoPromise<T> {\n    const getDeserializedFunction = (opts? : Object = {}) => {\n        function crossDomainFunctionWrapper<X : mixed>() : ZalgoPromise<X> {\n            let originalStack;\n    \n            if (__DEBUG__) {\n                originalStack = (new Error(`Original call to ${ name }():`)).stack;\n            }\n    \n            return ProxyWindow.toProxyWindow(source, { send }).awaitWindow().then(win => {\n                const meth = lookupMethod(win, id);\n    \n                if (meth && meth.val !== crossDomainFunctionWrapper) {\n                    return meth.val.apply({ source: window, origin: getDomain() }, arguments);\n                } else {\n                    return send(win, MESSAGE_NAME.METHOD, { id, name, args: Array.prototype.slice.call(arguments) }, { domain: origin, fireAndForget: opts.fireAndForget })\n                        .then(res => {\n                            if (!opts.fireAndForget) {\n                                return res.data.result;\n                            }\n                        });\n                }\n    \n            }).catch(err => {\n                // $FlowFixMe\n                if (__DEBUG__ && originalStack && err.stack) {\n                    // $FlowFixMe\n                    err.stack = `${ err.stack }\\n\\n${ originalStack }`;\n                }\n                throw err;\n            });\n        }\n\n        crossDomainFunctionWrapper.__name__ = name;\n        crossDomainFunctionWrapper.__origin__ = origin;\n        crossDomainFunctionWrapper.__source__ = source;\n        crossDomainFunctionWrapper.__id__ = id;\n\n        crossDomainFunctionWrapper.origin = origin;\n\n        return crossDomainFunctionWrapper;\n    };\n\n    const crossDomainFunctionWrapper = getDeserializedFunction();\n    crossDomainFunctionWrapper.fireAndForget = getDeserializedFunction({ fireAndForget: true });\n\n    return crossDomainFunctionWrapper;\n}\n","/* @flow */\n\nimport { type CrossDomainWindowType, isWindow, type DomainMatcher } from 'cross-domain-utils/src';\nimport { TYPE, serialize, deserialize, type Thenable } from 'universal-serialize/src';\n\nimport { SERIALIZATION_TYPE } from '../conf';\nimport type { OnType, SendType } from '../types';\n\nimport { serializeFunction, deserializeFunction, type SerializedFunction } from './function';\nimport { serializePromise, deserializePromise, type SerializedPromise } from './promise';\nimport { serializeWindow, deserializeWindow, type SerializedWindow, ProxyWindow } from './window';\n\nexport function serializeMessage<T : mixed>(destination : CrossDomainWindowType | ProxyWindow, domain : DomainMatcher, obj : T, { on, send } : { on : OnType, send : SendType }) : string {\n    return serialize(obj, {\n        [ TYPE.PROMISE ]:  (val : Thenable, key : string) : SerializedPromise => serializePromise(destination, domain, val, key, { on, send }),\n        [ TYPE.FUNCTION ]: (val : Function, key : string) : SerializedFunction => serializeFunction(destination, domain, val, key, { on, send }),\n        [ TYPE.OBJECT ]:   (val : CrossDomainWindowType) : Object | SerializedWindow => {\n            return (isWindow(val) || ProxyWindow.isProxyWindow(val)) ? serializeWindow(destination, domain, val, { on, send }) : val;\n        }\n    });\n}\n\nexport function deserializeMessage<T : mixed>(source : CrossDomainWindowType | ProxyWindow, origin : string, message : string, { on, send } : { on : OnType, send : SendType }) : T {\n    return deserialize(message, {\n        [ SERIALIZATION_TYPE.CROSS_DOMAIN_ZALGO_PROMISE ]: (serializedPromise)  => deserializePromise(source, origin, serializedPromise),\n        [ SERIALIZATION_TYPE.CROSS_DOMAIN_FUNCTION ]:      (serializedFunction) => deserializeFunction(source, origin, serializedFunction, { on, send }),\n        [ SERIALIZATION_TYPE.CROSS_DOMAIN_WINDOW ]:        (serializedWindow)   => deserializeWindow(source, origin, serializedWindow, { on, send })\n    });\n}\n","/* @flow */\n\nimport { type CrossDomainWindowType, type DomainMatcher } from 'cross-domain-utils/src';\nimport { ZalgoPromise } from 'zalgo-promise/src';\nimport { serializeType, type CustomSerializedType, type Thenable } from 'universal-serialize/src';\n\nimport { SERIALIZATION_TYPE } from '../conf';\nimport type { OnType, SendType } from '../types';\n\nimport { serializeFunction, type SerializedFunction } from './function';\nimport { ProxyWindow } from './window';\n\nexport type SerializedPromise = CustomSerializedType<typeof SERIALIZATION_TYPE.CROSS_DOMAIN_ZALGO_PROMISE, {\n    then : SerializedFunction\n}>;\n\nexport function serializePromise(destination : CrossDomainWindowType | ProxyWindow, domain : DomainMatcher, val : Thenable, key : string, { on, send } : { on : OnType, send : SendType }) : SerializedPromise {\n    return serializeType(SERIALIZATION_TYPE.CROSS_DOMAIN_ZALGO_PROMISE, {\n        then: serializeFunction(destination, domain, (resolve, reject) => val.then(resolve, reject), key, { on, send })\n    });\n}\n\nexport function deserializePromise<T>(source : CrossDomainWindowType | ProxyWindow, origin : string, { then } : { then : Function }) : ZalgoPromise<T> {\n    return new ZalgoPromise(then);\n}\n","/* @flow */\n\nimport { isSameDomain, isSameTopWindow, isActuallySameDomain, getActualDomain,\n    getDomain, type CrossDomainWindowType, type DomainMatcher, PROTOCOL } from 'cross-domain-utils/src';\n\nimport { SEND_STRATEGY, WILDCARD } from '../../conf';\nimport { needsGlobalMessagingForBrowser } from '../../lib';\nimport { getGlobal } from '../../global';\nimport { sendBridgeMessage, needsBridgeForBrowser, isBridge } from '../../bridge';\n\nexport const SEND_MESSAGE_STRATEGIES = {};\n\nSEND_MESSAGE_STRATEGIES[SEND_STRATEGY.POST_MESSAGE] = (win : CrossDomainWindowType, serializedMessage : string, domain : DomainMatcher) => {\n\n    if (__TEST__) {\n        if (needsGlobalMessagingForBrowser() && isSameTopWindow(window, win) === false) {\n            return;\n        }\n    }\n\n    let domains;\n\n    if (Array.isArray(domain)) {\n        domains = domain;\n    } else if (typeof domain === 'string') {\n        domains = [ domain ];\n    } else {\n        domains = [ WILDCARD ];\n    }\n\n    domains = domains.map(dom => {\n\n        if (dom.indexOf(PROTOCOL.MOCK) === 0) {\n\n            if (window.location.protocol === PROTOCOL.FILE) {\n                return WILDCARD;\n            }\n\n            if (!isActuallySameDomain(win)) {\n                throw new Error(`Attempting to send messsage to mock domain ${ dom }, but window is actually cross-domain`);\n            }\n\n            // $FlowFixMe\n            return getActualDomain(win);\n        }\n\n        if (dom.indexOf(PROTOCOL.FILE) === 0) {\n            return WILDCARD;\n        }\n\n        return dom;\n    });\n\n    domains.forEach(dom => {\n        win.postMessage(serializedMessage, dom);\n    });\n};\n\nif (__POST_ROBOT__.__IE_POPUP_SUPPORT__) {\n\n    SEND_MESSAGE_STRATEGIES[SEND_STRATEGY.BRIDGE] = (win : CrossDomainWindowType, serializedMessage : string, domain : string) => {\n\n        if (!needsBridgeForBrowser() && !isBridge()) {\n            return;\n        }\n\n        if (isSameDomain(win)) {\n            throw new Error(`Post message through bridge disabled between same domain windows`);\n        }\n\n        if (isSameTopWindow(window, win) !== false) {\n            throw new Error(`Can only use bridge to communicate between two different windows, not between frames`);\n        }\n\n        sendBridgeMessage(win, domain, serializedMessage);\n    };\n}\n\nif (__POST_ROBOT__.__IE_POPUP_SUPPORT__ || __POST_ROBOT__.__GLOBAL_MESSAGE_SUPPORT__) {\n    \n    SEND_MESSAGE_STRATEGIES[SEND_STRATEGY.GLOBAL] = (win : CrossDomainWindowType, serializedMessage : string) => {\n\n        if (!needsGlobalMessagingForBrowser()) {\n            return;\n        }\n\n        if (!isSameDomain(win)) {\n            throw new Error(`Post message through global disabled between different domain windows`);\n        }\n\n        if (isSameTopWindow(window, win) !== false) {\n            throw new Error(`Can only use global to communicate between two different windows, not between frames`);\n        }\n\n        // $FlowFixMe\n        const foreignGlobal = getGlobal(win);\n\n        if (!foreignGlobal) {\n            throw new Error(`Can not find postRobot global on foreign window`);\n        }\n\n        foreignGlobal.receiveMessage({\n            source: window,\n            origin: getDomain(),\n            data:   serializedMessage\n        });\n    };\n}\n","/* @flow */\n\nimport { getUserAgent } from 'cross-domain-utils/src';\n\nexport function needsGlobalMessagingForBrowser() : boolean {\n\n    if (getUserAgent(window).match(/MSIE|rv:11|trident|edge\\/12|edge\\/13/i)) {\n        return true;\n    }\n\n    return false;\n}\n","/* @flow */\n\nimport { isWindowClosed, type CrossDomainWindowType, type DomainMatcher } from 'cross-domain-utils/src';\nimport { uniqueID } from 'belter/src';\n\nimport { serializeMessage } from '../../serialize';\nimport type { Message } from '../types';\nimport type { OnType, SendType } from '../../types';\n\nimport { SEND_MESSAGE_STRATEGIES } from './strategies';\n\nexport function sendMessage(win : CrossDomainWindowType, domain : DomainMatcher, message : Message, { on, send } : { on : OnType, send : SendType }) {\n    if (isWindowClosed(win)) {\n        throw new Error('Window is closed');\n    }\n    \n    const serializedMessage = serializeMessage(win, domain, {\n        [ __POST_ROBOT__.__GLOBAL_KEY__ ]: {\n            id: uniqueID(),\n            ...message\n        }\n    }, { on, send });\n\n    let success = false;\n    let error;\n\n    for (const strategyName of Object.keys(SEND_MESSAGE_STRATEGIES)) {\n        try {\n            SEND_MESSAGE_STRATEGIES[strategyName](win, serializedMessage, domain);\n            success = true;\n        } catch (err) {\n            error = error || err;\n        }\n    }\n\n    if (!success) {\n        throw error;\n    }\n}\n","/* @flow */\n\nimport { type ZalgoPromise } from 'zalgo-promise/src';\nimport { matchDomain, type CrossDomainWindowType, type DomainMatcher } from 'cross-domain-utils/src';\nimport { isRegex, getOrSet } from 'belter/src';\n\nimport { getWildcard, type WildCard, globalStore, windowStore } from '../global';\nimport { WILDCARD } from '../conf';\n\nexport function resetListeners() {\n    const responseListeners = globalStore('responseListeners');\n    const erroredResponseListeners = globalStore('erroredResponseListeners');\n    responseListeners.reset();\n    erroredResponseListeners.reset();\n}\n\nconst __DOMAIN_REGEX__ = '__domain_regex__';\n\nexport type RequestListenerType = {|\n    handler : ({ source : CrossDomainWindowType, origin : string, data : mixed }) => (mixed | ZalgoPromise<mixed>),\n    handleError : (err : mixed) => void,\n    window : ?CrossDomainWindowType,\n    name : string,\n    domain : DomainMatcher\n|};\n\nexport type ResponseListenerType = {|\n    name : string,\n    win : CrossDomainWindowType,\n    domain : DomainMatcher,\n    promise : ZalgoPromise<*>,\n    ack? : ?boolean\n|};\n\nexport function addResponseListener(hash : string, listener : ResponseListenerType) {\n    const responseListeners = globalStore('responseListeners');\n    responseListeners.set(hash, listener);\n}\n\nexport function getResponseListener(hash : string) : ?ResponseListenerType {\n    const responseListeners = globalStore('responseListeners');\n    return responseListeners.get(hash);\n}\n\nexport function deleteResponseListener(hash : string) {\n    const responseListeners = globalStore('responseListeners');\n    responseListeners.del(hash);\n}\n\nexport function markResponseListenerErrored(hash : string) {\n    const erroredResponseListeners = globalStore('erroredResponseListeners');\n    erroredResponseListeners.set(hash, true);\n}\n\nexport function isResponseListenerErrored(hash : string) : boolean {\n    const erroredResponseListeners = globalStore('erroredResponseListeners');\n    return erroredResponseListeners.has(hash);\n}\n\nexport function getRequestListener({ name, win, domain } : { name : string, win : ?(CrossDomainWindowType | WildCard), domain : ?(string | RegExp) }) : ?RequestListenerType {\n    const requestListeners = windowStore('requestListeners');\n\n    if (win === WILDCARD) {\n        win = null;\n    }\n\n    if (domain === WILDCARD) {\n        domain = null;\n    }\n\n    if (!name) {\n        throw new Error(`Name required to get request listener`);\n    }\n\n    for (const winQualifier of [ win, getWildcard() ]) {\n        if (!winQualifier) {\n            continue;\n        }\n\n        const nameListeners = requestListeners.get(winQualifier);\n\n        if (!nameListeners) {\n            continue;\n        }\n\n        const domainListeners = nameListeners[name];\n\n        if (!domainListeners) {\n            continue;\n        }\n\n        if (domain && typeof domain === 'string') {\n            if (domainListeners[domain]) {\n                return domainListeners[domain];\n            }\n\n            if (domainListeners[__DOMAIN_REGEX__]) {\n                for (const { regex, listener } of domainListeners[__DOMAIN_REGEX__]) {\n                    if (matchDomain(regex, domain)) {\n                        return listener;\n                    }\n                }\n            }\n        }\n\n        if (domainListeners[WILDCARD]) {\n            return domainListeners[WILDCARD];\n        }\n    }\n}\n\nexport function addRequestListener({ name, win, domain } : { name : string, win : ?(CrossDomainWindowType | WildCard), domain : ?DomainMatcher }, listener : RequestListenerType) : { cancel : () => void } {\n    const requestListeners = windowStore('requestListeners');\n\n    if (!name || typeof name !== 'string') {\n        throw new Error(`Name required to add request listener`);\n    }\n\n    if (Array.isArray(win)) {\n        const listenersCollection = [];\n\n        for (const item of win) {\n            listenersCollection.push(addRequestListener({ name, domain, win: item }, listener));\n        }\n\n        return {\n            cancel() {\n                for (const cancelListener of listenersCollection) {\n                    cancelListener.cancel();\n                }\n            }\n        };\n    }\n\n    if (Array.isArray(domain)) {\n        const listenersCollection = [];\n\n        for (const item of domain) {\n            listenersCollection.push(addRequestListener({ name, win, domain: item }, listener));\n        }\n\n        return {\n            cancel() {\n                for (const cancelListener of listenersCollection) {\n                    cancelListener.cancel();\n                }\n            }\n        };\n    }\n\n    const existingListener = getRequestListener({ name, win, domain });\n\n    if (!win || win === WILDCARD) {\n        win = getWildcard();\n    }\n\n    domain = domain || WILDCARD;\n\n    if (existingListener) {\n        if (win && domain) {\n            throw new Error(`Request listener already exists for ${ name } on domain ${ domain.toString() } for ${ win === getWildcard() ? 'wildcard' : 'specified' } window`);\n        } else if (win) {\n            throw new Error(`Request listener already exists for ${ name } for ${ win === getWildcard() ? 'wildcard' : 'specified' } window`);\n        } else if (domain) {\n            throw new Error(`Request listener already exists for ${ name } on domain ${ domain.toString() }`);\n        } else {\n            throw new Error(`Request listener already exists for ${ name }`);\n        }\n    }\n\n    const nameListeners = requestListeners.getOrSet(win, () => ({}));\n    // $FlowFixMe\n    const domainListeners = getOrSet(nameListeners, name, () => ({}));\n\n    const strDomain = domain.toString();\n\n    let regexListeners;\n    let regexListener;\n\n    if (isRegex(domain)) {\n        regexListeners = getOrSet(domainListeners, __DOMAIN_REGEX__, () => []);\n        regexListener = { regex: domain, listener };\n        regexListeners.push(regexListener);\n    } else {\n        domainListeners[strDomain] = listener;\n    }\n\n    return {\n        cancel() {\n            delete domainListeners[strDomain];\n\n            if (regexListener) {\n                regexListeners.splice(regexListeners.indexOf(regexListener, 1));\n\n                if (!regexListeners.length) {\n                    delete domainListeners[__DOMAIN_REGEX__];\n                }\n            }\n\n            if (!Object.keys(domainListeners).length) {\n                // $FlowFixMe\n                delete nameListeners[name];\n            }\n\n            // $FlowFixMe\n            if (win && !Object.keys(nameListeners).length) {\n                requestListeners.del(win);\n            }\n        }\n    };\n}\n","/* @flow */\n\nimport { ZalgoPromise } from 'zalgo-promise/src';\nimport { isWindowClosed, matchDomain, stringifyDomainPattern, type CrossDomainWindowType } from 'cross-domain-utils/src';\nimport { noop } from 'belter/src';\n\nimport { MESSAGE_TYPE, MESSAGE_ACK, MESSAGE_NAME } from '../../conf';\nimport { sendMessage } from '../send';\nimport { getRequestListener, getResponseListener, deleteResponseListener, isResponseListenerErrored } from '../listeners';\nimport type { RequestMessage, AckResponseMessage, SuccessResponseMessage, ErrorResponseMessage } from '../types';\nimport type { OnType, SendType } from '../../types';\n\nexport const RECEIVE_MESSAGE_TYPES = {\n\n    [ MESSAGE_TYPE.REQUEST ](source : CrossDomainWindowType, origin : string, message : RequestMessage, { on, send } : { on : OnType, send : SendType }) : ZalgoPromise<void> {\n\n        const options = getRequestListener({ name: message.name, win: source, domain: origin });\n\n        const logName = (message.name === MESSAGE_NAME.METHOD && message.data && typeof message.data.name === 'string') ? `${ message.data.name }()` : message.name;\n\n        if (__DEBUG__) {\n            // eslint-disable-next-line no-console\n            console.info('receive::req', logName, origin, '\\n\\n', message.data);\n        }\n\n        function sendResponse(type : $Values<typeof MESSAGE_TYPE>, ack? : $Values<typeof MESSAGE_ACK>, response = {}) {\n\n            if (message.fireAndForget || isWindowClosed(source)) {\n                return;\n            }\n\n            if (__DEBUG__ && type !== MESSAGE_TYPE.ACK) {\n                if (ack === MESSAGE_ACK.SUCCESS) {\n                    // $FlowFixMe\n                    console.info('respond::res', logName, origin, '\\n\\n', response.data);  // eslint-disable-line no-console\n                } else if (ack === MESSAGE_ACK.ERROR) {\n                    // $FlowFixMe\n                    console.error('respond::err', logName, origin, '\\n\\n', response.error); // eslint-disable-line no-console\n                }\n            }\n\n            // $FlowFixMe\n            sendMessage(source, origin, {\n                type,\n                ack,\n                hash:   message.hash,\n                name:   message.name,\n                ...response\n            }, { on, send });\n        }\n\n        return ZalgoPromise.all([\n\n            sendResponse(MESSAGE_TYPE.ACK),\n\n            ZalgoPromise.try(() => {\n\n                if (!options) {\n                    throw new Error(`No handler found for post message: ${ message.name } from ${ origin } in ${ window.location.protocol }//${ window.location.host }${ window.location.pathname }`);\n                }\n\n                if (!matchDomain(options.domain, origin)) {\n                    throw new Error(`Request origin ${ origin } does not match domain ${ options.domain.toString() }`);\n                }\n\n                const data = message.data;\n\n                return options.handler({ source, origin, data });\n\n            }).then(data => {\n                return sendResponse(MESSAGE_TYPE.RESPONSE, MESSAGE_ACK.SUCCESS, { data });\n\n            }, error => {\n                return sendResponse(MESSAGE_TYPE.RESPONSE, MESSAGE_ACK.ERROR, { error });\n            })\n\n        ]).then(noop).catch(err => {\n            if (options && options.handleError) {\n                return options.handleError(err);\n            } else {\n                throw err;\n            }\n        });\n    },\n\n    [ MESSAGE_TYPE.ACK ](source : CrossDomainWindowType, origin : string, message : AckResponseMessage) {\n\n        if (isResponseListenerErrored(message.hash)) {\n            return;\n        }\n\n        const options = getResponseListener(message.hash);\n\n        if (!options) {\n            throw new Error(`No handler found for post message ack for message: ${ message.name } from ${ origin } in ${ window.location.protocol }//${ window.location.host }${ window.location.pathname }`);\n        }\n\n        if (!matchDomain(options.domain, origin)) {\n            throw new Error(`Ack origin ${ origin } does not match domain ${ options.domain.toString() }`);\n        }\n\n        if (source !== options.win) {\n            throw new Error(`Ack source does not match registered window`);\n        }\n\n        options.ack = true;\n    },\n\n    [ MESSAGE_TYPE.RESPONSE ](source : CrossDomainWindowType, origin : string, message : SuccessResponseMessage | ErrorResponseMessage) : void | ZalgoPromise<void> {\n\n        if (isResponseListenerErrored(message.hash)) {\n            return;\n        }\n\n        const options = getResponseListener(message.hash);\n\n        if (!options) {\n            throw new Error(`No handler found for post message response for message: ${ message.name } from ${ origin } in ${ window.location.protocol }//${ window.location.host }${ window.location.pathname }`);\n        }\n\n        if (!matchDomain(options.domain, origin)) {\n            throw new Error(`Response origin ${ origin } does not match domain ${ stringifyDomainPattern(options.domain) }`);\n        }\n\n        if (source !== options.win) {\n            throw new Error(`Response source does not match registered window`);\n        }\n\n        deleteResponseListener(message.hash);\n\n        const logName = (message.name === MESSAGE_NAME.METHOD && message.data && typeof message.data.name === 'string') ? `${ message.data.name }()` : message.name;\n\n        if (message.ack === MESSAGE_ACK.ERROR) {\n            if (__DEBUG__) {\n                console.error('receive::err', logName, origin, '\\n\\n', message.error); // eslint-disable-line no-console\n            }\n\n            options.promise.reject(message.error);\n\n        } else if (message.ack === MESSAGE_ACK.SUCCESS) {\n            if (__DEBUG__) {\n                console.info('receive::res', logName, origin, '\\n\\n', message.data); // eslint-disable-line no-console\n            }\n\n            options.promise.resolve({ source, origin, data: message.data });\n        }\n    }\n};\n","/* @flow */\n\nimport { setup } from './setup';\nimport { setupBridge, openBridge, linkWindow, linkUrl, isBridge, needsBridge, needsBridgeForBrowser, hasBridge,\n    needsBridgeForWin, needsBridgeForDomain, destroyBridges } from './bridge';\n\nexport { ZalgoPromise as Promise } from 'zalgo-promise/src';\n\nexport * from './types';\nexport { ProxyWindow } from './serialize';\nexport { setup, serializeMessage, deserializeMessage, toProxyWindow } from './setup';\nexport { on, once, send } from './public';\nexport { markWindowKnown } from './lib';\nexport { cleanUpWindow } from './clean';\nexport let bridge;\n\nif (__POST_ROBOT__.__IE_POPUP_SUPPORT__) {\n    bridge = { setupBridge, openBridge, linkWindow, linkUrl, isBridge, needsBridge,\n        needsBridgeForBrowser, hasBridge, needsBridgeForWin, needsBridgeForDomain, destroyBridges };\n}\n\nif (__POST_ROBOT__.__AUTO_SETUP__) {\n    setup();\n}\n","/* @flow */\n\nimport { isWindowClosed, type CrossDomainWindowType, getDomain, isSameTopWindow } from 'cross-domain-utils/src';\nimport { addEventListener, noop } from 'belter/src';\n\nimport { markWindowKnown, needsGlobalMessagingForBrowser } from '../../lib';\nimport { deserializeMessage } from '../../serialize';\nimport { getGlobal, globalStore } from '../../global';\nimport type { OnType, SendType, MessageEvent, CancelableType } from '../../types';\n\nimport { RECEIVE_MESSAGE_TYPES } from './types';\n\nfunction parseMessage(message : string, source : CrossDomainWindowType, origin : string, { on, send } : { on : OnType, send : SendType }) : ?Object {\n\n    let parsedMessage;\n\n    try {\n        parsedMessage = deserializeMessage(source, origin, message, { on, send });\n    } catch (err) {\n        return;\n    }\n\n    if (!parsedMessage) {\n        return;\n    }\n\n    if (typeof parsedMessage !== 'object' || parsedMessage === null) {\n        return;\n    }\n\n    parsedMessage = parsedMessage[__POST_ROBOT__.__GLOBAL_KEY__];\n\n    if (!parsedMessage || typeof parsedMessage !== 'object' || parsedMessage === null) {\n        return;\n    }\n\n    if (!parsedMessage.type || typeof parsedMessage.type !== 'string') {\n        return;\n    }\n\n    if (!RECEIVE_MESSAGE_TYPES[parsedMessage.type]) {\n        return;\n    }\n\n    return parsedMessage;\n}\n\nexport function receiveMessage(event : MessageEvent, { on, send } : { on : OnType, send : SendType }) {\n    const receivedMessages = globalStore('receivedMessages');\n\n    if (!window || window.closed) {\n        throw new Error(`Message recieved in closed window`);\n    }\n\n    try {\n        if (!event.source) {\n            return;\n        }\n    } catch (err) {\n        return;\n    }\n\n    let { source, origin, data } = event;\n\n    if (__TEST__) {\n        // $FlowFixMe\n        origin = getDomain(source);\n    }\n\n    const message = parseMessage(data, source, origin, { on, send });\n\n    if (!message) {\n        return;\n    }\n\n    markWindowKnown(source);\n\n    if (receivedMessages.has(message.id)) {\n        return;\n    }\n\n    receivedMessages.set(message.id, true);\n\n    if (isWindowClosed(source) && !message.fireAndForget) {\n        return;\n    }\n\n    RECEIVE_MESSAGE_TYPES[message.type](source, origin, message, { on, send });\n}\n\nexport function setupGlobalReceiveMessage({ on, send } : { on : OnType, send : SendType }) {\n    const global = getGlobal();\n    global.receiveMessage = global.receiveMessage || (message => receiveMessage(message, { on, send }));\n}\n\ntype ListenerEvent = {|\n    source : CrossDomainWindowType,\n    origin : string,\n    data : string,\n    sourceElement : CrossDomainWindowType,\n    originalEvent? : { origin : string }\n|};\n\nexport function messageListener(event : ListenerEvent, { on, send } : { on : OnType, send : SendType }) {\n\n    try {\n        noop(event.source);\n    } catch (err) {\n        return;\n    }\n\n    // $FlowFixMe\n    const messageEvent : MessageEvent = {\n        source: event.source || event.sourceElement,\n        origin: event.origin || (event.originalEvent && event.originalEvent.origin),\n        data:   event.data\n    };\n\n    if (!messageEvent.source) {\n        return;\n    }\n\n    if (!messageEvent.origin) {\n        throw new Error(`Post message did not have origin domain`);\n    }\n\n    if (__TEST__) {\n        if (needsGlobalMessagingForBrowser() && isSameTopWindow(messageEvent.source, window) === false) {\n            return;\n        }\n    }\n\n    receiveMessage(messageEvent, { on, send });\n}\n\nexport function listenForMessages({ on, send } : { on : OnType, send : SendType }) : CancelableType {\n    return globalStore().getOrSet('postMessageListeners', () => {\n        // $FlowFixMe\n        return addEventListener(window, 'message', event => {\n            // $FlowFixMe\n            messageListener(event, { on, send });\n        });\n    });\n}\n","/* @flow */\n\nimport { ZalgoPromise } from 'zalgo-promise/src';\n\nimport { addRequestListener, type RequestListenerType } from '../drivers';\nimport { WILDCARD } from '../conf';\nimport type { ServerOptionsType, HandlerType, CancelableType } from '../types';\n\nexport function on(name : string, options : ServerOptionsType | HandlerType, handler : ?HandlerType) : CancelableType {\n\n    if (!name) {\n        throw new Error('Expected name');\n    }\n\n    if (typeof options === 'function') {\n        handler = options;\n        // $FlowFixMe\n        options = {};\n    }\n\n    if (!handler) {\n        throw new Error('Expected handler');\n    }\n\n    options = options || {};\n    options.name = name;\n    options.handler = handler || options.handler;\n\n    const win = options.window;\n    const domain = options.domain;\n\n    const listenerOptions : RequestListenerType = {\n        handler:     options.handler,\n        handleError: options.errorHandler || (err => {\n            throw err;\n        }),\n        window: win,\n        domain: domain || WILDCARD,\n        name\n    };\n\n    const requestListener = addRequestListener({ name, win, domain }, listenerOptions);\n\n    return {\n        cancel() {\n            requestListener.cancel();\n        }\n    };\n}\n\nexport function once(name : string, options : ServerOptionsType | HandlerType, handler : ?HandlerType) : ZalgoPromise<{ source : mixed, origin : string, data : Object }> {\n    \n    // $FlowFixMe\n    options = options || {};\n    if (typeof options === 'function') {\n        handler = options;\n        // $FlowFixMe\n        options = {};\n    }\n\n    const promise = new ZalgoPromise();\n    let listener; // eslint-disable-line prefer-const\n\n    options.errorHandler = (err) => {\n        listener.cancel();\n        promise.reject(err);\n    };\n\n    listener = on(name, options, event => {\n        listener.cancel();\n        promise.resolve(event);\n        if (handler) {\n            return handler(event);\n        }\n    });\n\n    promise.cancel = listener.cancel;\n    return promise;\n}\n","/* @flow */\n\nimport { ZalgoPromise } from 'zalgo-promise/src';\nimport { isAncestor, isWindowClosed, getDomain, matchDomain, type CrossDomainWindowType } from 'cross-domain-utils/src';\nimport { uniqueID, isRegex, noop } from 'belter/src';\n\n\nimport { CHILD_WINDOW_TIMEOUT, MESSAGE_TYPE, WILDCARD, MESSAGE_NAME, ACK_TIMEOUT, RES_TIMEOUT, ACK_TIMEOUT_KNOWN } from '../conf';\nimport { sendMessage, addResponseListener, deleteResponseListener, markResponseListenerErrored, type ResponseListenerType } from '../drivers';\nimport { awaitWindowHello, sayHello, isWindowKnown } from '../lib';\nimport { windowStore } from '../global';\nimport type { RequestOptionsType, ResponseMessageEvent } from '../types';\n\nimport { on } from './on';\n\nexport function send(win : CrossDomainWindowType, name : string, data : ?Object, options? : RequestOptionsType) : ZalgoPromise<ResponseMessageEvent> {\n    \n    // $FlowFixMe\n    options = options || {};\n    let domain = options.domain || WILDCARD;\n    const responseTimeout = options.timeout || RES_TIMEOUT;\n    const childTimeout = options.timeout || CHILD_WINDOW_TIMEOUT;\n    const fireAndForget = options.fireAndForget || false;\n\n    const prom = ZalgoPromise.try(() => {\n        if (!name) {\n            throw new Error('Expected name');\n        }\n\n        if (domain) {\n            if (typeof domain !== 'string' && !Array.isArray(domain) && !isRegex(domain)) {\n                throw new TypeError(`Expected domain to be a string, array, or regex`);\n            }\n        }\n\n        if (isWindowClosed(win)) {\n            throw new Error('Target window is closed');\n        }\n\n        const reqPromises = windowStore('requestPromises').getOrSet(win, () => []);\n\n        // $FlowFixMe\n        const requestPromise = ZalgoPromise.try(() => {\n\n            if (isAncestor(window, win)) {\n                return awaitWindowHello(win, childTimeout);\n            } else if (isRegex(domain)) {\n                return sayHello(win, { send });\n            }\n\n        // $FlowFixMe\n        }).then(({ domain: origin } = {}) => {\n\n            if (isRegex(domain)) {\n                if (!matchDomain(domain, origin)) {\n                    // $FlowFixMe\n                    throw new Error(`Remote window domain ${ origin } does not match regex: ${ domain.source }`);\n                }\n                domain = origin;\n            }\n\n            const logName = (name === MESSAGE_NAME.METHOD && data && typeof data.name === 'string') ? `${ data.name }()` : name;\n\n            if (__DEBUG__) {\n                console.info('send::req', logName, domain, '\\n\\n', data); // eslint-disable-line no-console\n            }\n\n            let hasResult = false;\n\n            const promise = new ZalgoPromise();\n            promise.finally(() => {\n                hasResult = true;\n                reqPromises.splice(reqPromises.indexOf(requestPromise, 1));\n            }).catch(noop);\n\n            const hash = `${ name }_${ uniqueID() }`;\n\n            sendMessage(win, domain, {\n                type: MESSAGE_TYPE.REQUEST,\n                hash,\n                name,\n                data,\n                fireAndForget\n            }, { on, send });\n\n            if (fireAndForget) {\n                return promise.resolve();\n            }\n\n            promise.catch(() => {\n                markResponseListenerErrored(hash);\n                deleteResponseListener(hash);\n            });\n\n            const responseListener : ResponseListenerType = {\n                name,\n                win,\n                domain,\n                promise\n            };\n\n            addResponseListener(hash, responseListener);\n\n            const totalAckTimeout = isWindowKnown(win) ? ACK_TIMEOUT_KNOWN : ACK_TIMEOUT;\n            const totalResTimeout = responseTimeout;\n\n            let ackTimeout = totalAckTimeout;\n            let resTimeout = totalResTimeout;\n\n            let cycleTime = 100;\n\n            const cycle = () => {\n                if (hasResult) {\n                    return;\n                }\n\n                if (isWindowClosed(win)) {\n                    if (!responseListener.ack) {\n                        return promise.reject(new Error(`Window closed for ${ name } before ack`));\n                    } else {\n                        return promise.reject(new Error(`Window closed for ${ name } before response`));\n                    }\n                }\n\n                ackTimeout = Math.max(ackTimeout - cycleTime, 0);\n                if (resTimeout !== -1) {\n                    resTimeout = Math.max(resTimeout - cycleTime, 0);\n                }\n\n                const hasAck = responseListener.ack;\n\n                if (hasAck) {\n                    if (resTimeout === -1) {\n                        return;\n                    }\n\n                    cycleTime = Math.min(resTimeout, 2000);\n\n                } else if (ackTimeout === 0) {\n                    return promise.reject(new Error(`No ack for postMessage ${ name } in ${ getDomain() } in ${ totalAckTimeout }ms`));\n\n                } else if (resTimeout === 0) {\n                    return promise.reject(new Error(`No response for postMessage ${ name } in ${ getDomain() } in ${ totalResTimeout }ms`));\n                }\n\n                setTimeout(cycle, cycleTime);\n            };\n\n            setTimeout(cycle, cycleTime);\n\n            return promise;\n        });\n\n        reqPromises.push(requestPromise);\n        return requestPromise;\n    });\n\n    return prom;\n}\n","/* @flow */\n\nimport type { CrossDomainWindowType, DomainMatcher } from 'cross-domain-utils/src';\n\nimport { initHello } from './lib';\nimport { listenForMessages, receiveMessage, setupGlobalReceiveMessage } from './drivers';\nimport { getGlobal } from './global';\nimport { on, send } from './public';\nimport { setupBridge } from './bridge';\nimport { serializeMessage as internalSerializeMessage, deserializeMessage as internalDeserializeMessage, ProxyWindow } from './serialize';\n\nexport function serializeMessage<T>(destination : CrossDomainWindowType | ProxyWindow, domain : DomainMatcher, obj : T) : string {\n    return internalSerializeMessage(destination, domain, obj, { on, send });\n}\n\nexport function deserializeMessage<T : mixed>(source : CrossDomainWindowType | ProxyWindow, origin : string, message : string) : T {\n    return internalDeserializeMessage(source, origin, message, { on, send });\n}\n\nexport function toProxyWindow(win : CrossDomainWindowType | ProxyWindow) : ProxyWindow {\n    return ProxyWindow.toProxyWindow(win, { send });\n}\n\nexport function setup() {\n    if (!getGlobal().initialized) {\n        getGlobal().initialized = true;\n    \n        listenForMessages({ on, send });\n    \n        if (__POST_ROBOT__.__IE_POPUP_SUPPORT__) {\n            setupBridge({ on, send, receiveMessage });\n        }\n\n        initHello({ on, send });\n        setupGlobalReceiveMessage({ on, send });\n    }\n}\n","/* @flow */\n\nimport { type CrossDomainWindowType } from 'cross-domain-utils/src';\nimport { noop } from 'belter/src';\n\nimport { windowStore } from './global';\n\nexport function cleanUpWindow(win : CrossDomainWindowType) {\n    const requestPromises = windowStore('requestPromises');\n    for (const promise of requestPromises.get(win, [])) {\n        promise.reject(new Error(`Window cleaned up before response`)).catch(noop);\n    }\n}\n","/* @flow */\n\nimport { isSameDomain, type CrossDomainWindowType } from 'cross-domain-utils/src';\n\nexport function globalFor(win : CrossDomainWindowType) : Object {\n\n    if (!isSameDomain(win)) {\n        throw new Error(`Can not get global for window on different domain`);\n    }\n\n    if (!win[__ZOID__.__GLOBAL_KEY__]) {\n        win[__ZOID__.__GLOBAL_KEY__] = {};\n    }\n\n    return win[__ZOID__.__GLOBAL_KEY__];\n}\n","/* @flow */\n\nimport { ZalgoPromise } from 'zalgo-promise/src';\nimport { toCSS } from 'belter/src';\n\nexport type ProxyElement<T : HTMLElement> = {|\n    resize : ({ width : ?number, height : ?number }) => void,\n    getElement : () => ZalgoPromise<T>\n|};\n\nexport function getProxyElement<T : HTMLElement>(element : T) : ProxyElement<T> {\n    return {\n        resize({ width, height } : { width : ?number, height : ?number }) {\n            if (typeof width === 'number') {\n                element.style.width = toCSS(width);\n            }\n    \n            if (typeof height === 'number') {\n                element.style.height = toCSS(height);\n            }\n        },\n\n        getElement() : ZalgoPromise<T> {\n            return ZalgoPromise.try(() => {\n                if (this.source && this.source !== window) {\n                    throw new Error(`Can not call getElement from a remote window`);\n                }\n    \n                return element;\n            });\n        }\n    };\n}\n","/* @flow */\n\nimport { WINDOW_TYPE } from 'cross-domain-utils/src';\n\nexport const ZOID = `zoid`;\n\nexport const POST_MESSAGE = {\n    DELEGATE:       `${ ZOID }_delegate`,\n    ALLOW_DELEGATE: `${ ZOID }_allow_delegate`\n};\n\nexport const PROP_TYPE = {\n    STRING:   `string`,\n    OBJECT:   `object`,\n    FUNCTION: `function`,\n    BOOLEAN:  `boolean`,\n    NUMBER:   `number`,\n    ARRAY:    `array`\n};\n\nexport const INITIAL_PROPS = {\n    RAW: 'raw',\n    UID: 'uid'\n};\n\nexport const WINDOW_REFERENCES = {\n    OPENER: `opener`,\n    TOP:    `top`,\n    PARENT: `parent`,\n    GLOBAL: `global`\n};\n\nexport const PROP_SERIALIZATION = {\n    JSON:   ('json' : 'json'),\n    DOTIFY: ('dotify' : 'dotify'),\n    BASE64: ('base64' : 'base64')\n};\n\nexport const CONTEXT = WINDOW_TYPE;\n\nexport const WILDCARD = '*';\n\nexport const DEFAULT_DIMENSIONS = {\n    WIDTH:  '300px',\n    HEIGHT: '150px'\n};\n\nexport const EVENT = {\n    RENDER:   'zoid-render',\n    RENDERED: 'zoid-rendered',\n    DISPLAY:  'zoid-display',\n    ERROR:    'zoid-error',\n    CLOSE:    'zoid-close',\n    PROPS:    'zoid-props'\n};\n","/* @flow */\n\nimport { getDomain, isSameDomain, type CrossDomainWindowType } from 'cross-domain-utils/src';\n\nimport type { Component } from '../component';\nimport type { PropsType, MixedPropDefinitionType } from '../component/props';\n\nimport type { ChildHelpers } from './index';\n\nexport function normalizeChildProp<T, P>(component : Component<P>, props : (PropsType<P>), key : string, value : T, helpers : ChildHelpers<P>) : ?T  {\n\n    // $FlowFixMe\n    const prop : MixedPropDefinitionType<P> = component.getPropDefinition(key);\n\n    if (!prop) {\n        return value;\n    }\n\n    if (typeof prop.childDecorate === 'function') {\n        return prop.childDecorate({ value, ...helpers });\n    }\n\n    return value;\n}\n\n// eslint-disable-next-line max-params\nexport function normalizeChildProps<P>(parentComponentWindow : CrossDomainWindowType, component : Component<P>, props : (PropsType<P>), origin : string, helpers : ChildHelpers<P>, isUpdate : boolean = false) : (PropsType<P>) {\n\n    const result = {};\n\n    // $FlowFixMe\n    for (const key of Object.keys(props)) {\n        const prop = component.getPropDefinition(key);\n\n        if (prop && prop.sameDomain && (origin !== getDomain(window) || !isSameDomain(parentComponentWindow))) {\n            continue;\n        }\n\n        const value = normalizeChildProp(component, props, key, props[key], helpers);\n\n        result[key] = value;\n        if (prop && prop.alias && !result[prop.alias]) {\n            result[prop.alias] = value;\n        }\n    }\n\n    if (!isUpdate) {\n        for (const key of component.getPropNames()) {\n            if (!props.hasOwnProperty(key)) {\n                result[key] = normalizeChildProp(component, props, key, props[key], helpers);\n            }\n        }\n    }\n\n    // $FlowFixMe\n    return result;\n}\n","/* @flow */\n\nimport { inlineMemoize, stringifyError, base64decode } from 'belter/src';\n\nimport { ZOID } from '../constants';\nimport type { ChildPayload } from '../parent';\n\nfunction parseChildWindowName(windowName : string) : ChildPayload {\n    return inlineMemoize(parseChildWindowName, () => {\n        if (!windowName) {\n            throw new Error(`No window name`);\n        }\n    \n        const [ , zoidcomp, name, encodedPayload ] = windowName.split('__');\n    \n        if (zoidcomp !== ZOID) {\n            throw new Error(`Window not rendered by zoid - got ${ zoidcomp }`);\n        }\n    \n        if (!name) {\n            throw new Error(`Expected component name`);\n        }\n    \n        if (!encodedPayload) {\n            throw new Error(`Expected encoded payload`);\n        }\n    \n        try {\n            return JSON.parse(base64decode(encodedPayload));\n        } catch (err) {\n            throw new Error(`Can not decode window name payload: ${ encodedPayload }: ${ stringifyError(err) }`);\n        }\n    }, [ windowName ]);\n}\n\nexport function getChildPayload() : ?ChildPayload {\n    try {\n        return parseChildWindowName(window.name);\n    } catch (err) {\n        // pass\n    }\n}\n","/* @flow */\n/* eslint max-lines: 0 */\n\nimport { isSameDomain, matchDomain, getDomain, getOpener,\n    getNthParentFromTop, getAncestor, getAllFramesInWindow,\n    type CrossDomainWindowType, onCloseWindow } from 'cross-domain-utils/src';\nimport { markWindowKnown, deserializeMessage } from 'post-robot/src';\nimport { ZalgoPromise } from 'zalgo-promise/src';\nimport { extend, waitForDocumentBody, onResize, getElementSafe, assertExists } from 'belter/src';\n\nimport { globalFor } from '../lib';\nimport { CONTEXT, INITIAL_PROPS, WINDOW_REFERENCES } from '../constants';\nimport type { Component } from '../component';\nimport type { PropsType } from '../component/props';\nimport type { WindowRef, PropRef, ParentExportsType } from '../parent';\n\nimport { normalizeChildProps } from './props';\nimport { getChildPayload } from './window';\n\nexport * from './window';\n\nexport type ChildExportsType<P> = {|\n    updateProps : (props : (PropsType<P>)) => ZalgoPromise<void>,\n    close : () => ZalgoPromise<void>\n|};\n\nexport type ChildHelpers<P> = {|\n    close : () => ZalgoPromise<void>,\n    focus : () => ZalgoPromise<void>,\n    resize : ({ width : ?number, height : ?number }) => ZalgoPromise<void>,\n    onError : (mixed) => ZalgoPromise<void>,\n    onProps : ((PropsType<P>) => void) => void\n|};\n\n/*  Child Component\n    ---------------\n\n    This is the portion of code which runs inside the frame or popup window containing the component's implementation.\n\n    When the component author calls myComponent.attach(), it creates a new instance of ChildComponent, which is then\n    responsible for managing the state and messaging back up to the parent, and providing props for the component to\n    utilize.\n*/\n\nexport class ChildComponent<P> {\n\n    component : Component<P>\n    props : PropsType<P>\n    context : string\n    parent : ParentExportsType<P>\n    parentComponentWindow : CrossDomainWindowType\n\n    onPropHandlers : Array<(PropsType<P>) => void> // eslint-disable-line flowtype/no-mutable-array\n    autoResize : { width : boolean, height : boolean, element? : string }\n\n    constructor(component : Component<P>) {\n        ZalgoPromise.try(() => {\n            this.component = component;\n            this.onPropHandlers = [];\n            \n            const childPayload = getChildPayload();\n\n            if (!childPayload) {\n                throw new Error(`No child payload found`);\n            }\n\n            const { parent, domain, exports, context, props } = childPayload;\n\n            this.context = context;\n            this.parentComponentWindow = this.getParentComponentWindow(parent);\n            this.parent = deserializeMessage(this.parentComponentWindow, domain, exports);\n\n            this.checkParentDomain(domain);\n\n            const initialProps = this.getPropsByRef(this.parentComponentWindow, domain, props);\n            this.setProps(initialProps, domain);\n            markWindowKnown(this.parentComponentWindow);\n            \n            this.watchForClose();\n\n            return this.parent.init(this.buildExports());\n\n        }).then(() => {\n            return this.watchForResize();\n\n        }).catch(err => {\n            this.onError(err);\n        });\n    }\n\n    getHelpers() : ChildHelpers<P> {\n        return {\n            focus:         () => this.focus(),\n            close:         () => this.close(),\n            resize:        ({ width, height }) => this.resize({ width, height }),\n            onError:       (err) => this.onError(err),\n            onProps: (handler) => this.onProps(handler)\n        };\n    }\n\n    checkParentDomain(domain : string) {\n        if (!matchDomain(this.component.allowedParentDomains, domain)) {\n            throw new Error(`Can not be rendered by domain: ${ domain }`);\n        }\n    }\n\n    onProps(handler : Function) {\n        this.onPropHandlers.push(handler);\n    }\n\n    getPropsByRef(parentComponentWindow : CrossDomainWindowType, domain : string, { type, value, uid } : PropRef) : (PropsType<P>) {\n        let props;\n\n        if (type === INITIAL_PROPS.RAW) {\n            props = value;\n        } else if (type === INITIAL_PROPS.UID) {\n            if (!isSameDomain(parentComponentWindow)) {\n                throw new Error(`Parent component window is on a different domain - expected ${ getDomain() } - can not retrieve props`);\n            }\n\n            const global = globalFor(parentComponentWindow);\n            props = assertExists('props', global && global.props[uid]);\n        }\n\n        if (!props) {\n            throw new Error(`Could not find props`);\n        }\n\n        return deserializeMessage(parentComponentWindow, domain, props);\n    }\n\n    getParentComponentWindow(ref : WindowRef) : CrossDomainWindowType {\n        const { type } = ref;\n    \n        if (type === WINDOW_REFERENCES.OPENER) {\n            return assertExists('opener', getOpener(window));\n    \n        } else if (type === WINDOW_REFERENCES.PARENT) {\n            // $FlowFixMe\n            const distance = ref.distance;\n            return assertExists('parent', getNthParentFromTop(window, distance));\n\n        } else if (type === WINDOW_REFERENCES.GLOBAL) {\n            // $FlowFixMe\n            const { uid } = ref;\n            const ancestor = getAncestor(window);\n\n            if (!ancestor) {\n                throw new Error(`Can not find ancestor window`);\n            }\n\n            for (const frame of getAllFramesInWindow(ancestor)) {\n                if (isSameDomain(frame)) {\n                    const global = globalFor(frame);\n\n                    if (global && global.windows && global.windows[uid]) {\n                        return global.windows[uid];\n                    }\n                }\n            }\n        }\n    \n        throw new Error(`Unable to find ${ type } parent component window`);\n    }\n\n    getProps() : PropsType<P> {\n        // $FlowFixMe\n        this.props = this.props || {};\n        return this.props;\n    }\n\n\n    setProps(props : PropsType<P>, origin : string, isUpdate : boolean = false) {\n        const helpers = this.getHelpers();\n        const existingProps = this.getProps();\n        const normalizedProps = normalizeChildProps(this.parentComponentWindow, this.component, props, origin, helpers, isUpdate);\n\n        extend(existingProps, normalizedProps);\n\n        for (const handler of this.onPropHandlers) {\n            handler.call(this, existingProps);\n        }\n    }\n\n    watchForClose() {\n        window.addEventListener('beforeunload', () => {\n            this.parent.checkClose.fireAndForget();\n        });\n\n        window.addEventListener('unload', () => {\n            this.parent.checkClose.fireAndForget();\n        });\n\n        onCloseWindow(this.parentComponentWindow, () => {\n            this.destroy();\n        });\n    }\n\n    getAutoResize() : { width : boolean, height : boolean, element : ?HTMLElement } {\n        let { width = false, height = false, element = 'body' } = this.autoResize || this.component.autoResize || {};\n        element = getElementSafe(element);\n        return { width, height, element };\n    }\n\n    watchForResize() : ?ZalgoPromise<void> {\n        return waitForDocumentBody().then(() => {\n            const { width, height, element } = this.getAutoResize();\n\n            if (!element || (!width && !height) || this.context === CONTEXT.POPUP) {\n                return;\n            }\n\n            onResize(element, ({ width: newWidth, height: newHeight }) => {\n                this.resize({\n                    width:  width ? newWidth : undefined,\n                    height: height ? newHeight : undefined\n                });\n            }, { width, height });\n        });\n    }\n\n    buildExports() : ChildExportsType<P> {\n\n        const self = this;\n\n        return {\n            updateProps(props : (PropsType<P>)) : ZalgoPromise<void> {\n                return ZalgoPromise.try(() => self.setProps(props, this.__origin__, true));\n            },\n\n            close() : ZalgoPromise<void> {\n                return ZalgoPromise.try(() => self.destroy());\n            }\n        };\n    }\n\n    resize({ width, height } : { width : ?number, height : ?number }) : ZalgoPromise<void> {\n        return this.parent.resize.fireAndForget({ width, height });\n    }\n\n    close() : ZalgoPromise<void> {\n        return this.parent.close();\n    }\n    \n    destroy() : ZalgoPromise<void> {\n        return ZalgoPromise.try(() => {\n            window.close();\n        });\n    }\n\n    focus() : ZalgoPromise<void> {\n        return ZalgoPromise.try(() => {\n            window.focus();\n        });\n    }\n\n    onError(err : mixed) : ZalgoPromise<void> {\n        return ZalgoPromise.try(() => {\n            if (this.parent && this.parent.onError) {\n                return this.parent.onError(err);\n            } else {\n                throw err;\n            }\n        });\n    }\n}\n","/* @flow */\n\nimport { ZalgoPromise } from 'zalgo-promise/src';\nimport { cleanUpWindow, ProxyWindow, toProxyWindow } from 'post-robot/src';\nimport { assertSameDomain } from 'cross-domain-utils/src';\nimport { iframe, popup, destroyElement, normalizeDimension, watchElementForClose,\n    awaitFrameWindow, uniqueID } from 'belter/src';\n\nimport { CONTEXT } from '../constants';\nimport { getProxyElement, type ProxyElement } from '../lib';\n\n\nexport type ContextDriverType = {|\n    openOnClick : boolean,\n    openFrame? : () => ProxyElement<HTMLIFrameElement>,\n    open : (?ProxyElement<HTMLIFrameElement>) => ZalgoPromise<ProxyWindow>,\n    openPrerenderFrame? : () => ProxyElement<HTMLIFrameElement>,\n    openPrerender : (ProxyWindow, ?ProxyElement<HTMLIFrameElement>) => ZalgoPromise<ProxyWindow>,\n    resize? : ({ width : ?number, height : ?number }) => void,\n    delegate : $ReadOnlyArray<string>\n|};\n\nexport const RENDER_DRIVERS : { [string] : ContextDriverType } = {};\n\nRENDER_DRIVERS[CONTEXT.IFRAME] = {\n    openOnClick: false,\n\n    openFrame() : ProxyElement<HTMLIFrameElement> {\n        return getProxyElement(iframe({\n            attributes: {\n                title: this.component.name,\n                ...this.component.attributes.iframe\n            }\n        }));\n    },\n\n    open(proxyFrame : ?ProxyElement<HTMLIFrameElement>) : ZalgoPromise<ProxyWindow> {\n        if (!proxyFrame) {\n            throw new Error(`Expected proxy frame to be passed`);\n        }\n\n        return proxyFrame.getElement().then(frame => {\n            return awaitFrameWindow(frame).then(win => {\n\n                const frameWatcher = watchElementForClose(frame, () => this.close());\n                this.clean.register(() => frameWatcher.cancel());\n                this.clean.register(() => destroyElement(frame));\n                this.clean.register(() => cleanUpWindow(win));\n\n                return toProxyWindow(win);\n            });\n        });\n    },\n\n    openPrerenderFrame() : ProxyElement<HTMLIFrameElement> {\n        return getProxyElement(iframe({\n            attributes: {\n                name:  `__zoid_prerender_frame__${ this.component.name }_${ uniqueID() }__`,\n                title: `prerender__${ this.component.name }`,\n                ...this.component.attributes.iframe\n            }\n        }));\n    },\n\n    openPrerender(proxyWin : ProxyWindow, proxyPrerenderFrame : ?ProxyElement<HTMLIFrameElement>) : ZalgoPromise<ProxyWindow> {\n        if (!proxyPrerenderFrame) {\n            throw new Error(`Expected proxy frame to be passed`);\n        }\n        \n        return proxyPrerenderFrame.getElement().then(prerenderFrame => {\n            this.clean.register(() => destroyElement(prerenderFrame));\n\n            return awaitFrameWindow(prerenderFrame).then(prerenderFrameWindow => {\n                return assertSameDomain(prerenderFrameWindow);\n            }).then(win => {\n                return toProxyWindow(win);\n            });\n        });\n    },\n\n    delegate: [\n        'getProxyContainer',\n        'renderContainer',\n        'openFrame',\n        'openPrerenderFrame',\n        'prerender',\n        'open',\n        'openPrerender'\n    ],\n\n    resize({ width, height } : { width : ?number, height : ?number }) {\n        if (this.proxyContainer) {\n            this.proxyContainer.resize({ width, height });\n        }\n    }\n};\n\nif (__ZOID__.__POPUP_SUPPORT__) {\n    RENDER_DRIVERS[CONTEXT.POPUP] = {\n        openOnClick: true,\n\n        open() : ZalgoPromise<ProxyWindow> {\n            return ZalgoPromise.try(() => {\n                let { width, height } = this.component.dimensions;\n\n                width = normalizeDimension(width, window.outerWidth);\n                height = normalizeDimension(height, window.outerWidth);\n\n                const win = popup('', {\n                    width,\n                    height,\n                    ...this.component.attributes.popup\n                });\n\n                this.clean.register(() => {\n                    win.close();\n                    cleanUpWindow(win);\n                });\n\n                return toProxyWindow(win);\n            });\n        },\n\n        openPrerender(proxyWin : ProxyWindow) : ZalgoPromise<ProxyWindow> {\n            return ZalgoPromise.try(() => {\n                return proxyWin;\n            });\n        },\n\n        delegate: [\n            'getProxyContainer',\n            'renderContainer',\n            'setProxyWin'\n        ]\n    };\n}\n","/* @flow */\n\nimport { ZalgoPromise } from 'zalgo-promise/src';\nimport { dotify, isDefined } from 'belter/src';\n\nimport type { Component } from '../component';\nimport type { BuiltInPropsDefinitionType, PropsInputType, PropsType, MixedPropDefinitionType } from '../component/props';\nimport { PROP_SERIALIZATION } from '../constants';\n\nimport type { ParentComponent, ParentHelpers } from './index';\n\n/*  Normalize Props\n    ---------------\n\n    Turn props into normalized values, using defaults, function options, etc.\n*/\n\nexport function normalizeProps<P>(component : Component<P>, instance : ParentComponent<P>, props : PropsInputType<P>, helpers : ParentHelpers<P>, isUpdate : boolean = false) : (PropsType<P>) { // eslint-disable-line complexity\n\n    // $FlowFixMe\n    props = props || {};\n    const result : $Shape<P> = { ...props }; // eslint-disable-line no-undef\n\n    const propNames = isUpdate\n        ? []\n        : [ ...component.getPropNames() ];\n\n    // $FlowFixMe\n    for (const key of Object.keys(props)) {\n        if (propNames.indexOf(key) === -1) {\n            propNames.push(key);\n        }\n    }\n\n    const aliases = [];\n\n    const { state, close, focus, onError } = helpers;\n\n    for (const key of propNames) {\n        const propDef = component.getPropDefinition(key);\n        // $FlowFixMe\n        let value = props[key];\n\n        if (!propDef) {\n            continue;\n        }\n\n        const alias = propDef.alias;\n        if (alias) {\n            if (!isDefined(value) && isDefined(props[alias])) {\n                value = props[alias];\n            }\n            aliases.push(alias);\n        }\n\n        if (propDef.value) {\n            value = propDef.value({ props: result, state, close, focus, onError });\n        }\n\n        if (!isDefined(value) && propDef.default) {\n            value = propDef.default({ props: result, state, close, focus, onError });\n        }\n\n        if (isDefined(value)) {\n            if (propDef.type === 'array' ? !Array.isArray(value) : (typeof value !== propDef.type)) {\n                throw new TypeError(`Prop is not of type ${ propDef.type }: ${ key }`);\n            }\n        }\n        \n        // $FlowFixMe\n        result[key] = value;\n    }\n\n    for (const alias of aliases) {\n        // $FlowFixMe\n        delete result[alias];\n    }\n\n    // $FlowFixMe\n    for (const key of Object.keys(result)) {\n        const propDef = component.getPropDefinition(key);\n        // $FlowFixMe\n        const value = result[key];\n\n        if (!propDef) {\n            continue;\n        }\n\n        if (isDefined(value) && propDef.validate) {\n            // $FlowFixMe\n            propDef.validate({ value, props: result });\n        }\n\n        if (isDefined(value) && propDef.decorate) {\n            // $FlowFixMe\n            result[key] = propDef.decorate({ value, props: result, state, close, focus, onError });\n        }\n    }\n\n    // $FlowFixMe\n    return result;\n}\n\n// $FlowFixMe\nfunction getQueryParam<T, P>(prop : MixedPropDefinitionType<P>, key : string, value : T) : ZalgoPromise<string> {\n    return ZalgoPromise.try(() => {\n        if (typeof prop.queryParam === 'function') {\n            return prop.queryParam({ value });\n        } else if (typeof prop.queryParam === 'string') {\n            return prop.queryParam;\n        } else {\n            return key;\n        }\n    });\n}\n\n// $FlowFixMe\nfunction getQueryValue<T, P>(prop : MixedPropDefinitionType<P>, key : string, value : T) : ZalgoPromise<mixed> {\n    return ZalgoPromise.try(() => {\n        if (typeof prop.queryValue === 'function' && isDefined(value)) {\n            return prop.queryValue({ value });\n        } else {\n            return value;\n        }\n    });\n}\n\nexport function propsToQuery<P>(propsDef : BuiltInPropsDefinitionType<P>, props : (PropsType<P>)) : ZalgoPromise<{ [string] : string }> {\n\n    const params = {};\n\n    return ZalgoPromise.all(Object.keys(props).map(key => {\n\n        const prop = propsDef[key];\n\n        if (!prop) {\n            return; // eslint-disable-line array-callback-return\n        }\n\n        return ZalgoPromise.resolve().then(() => {\n\n            const value = props[key];\n\n            if (!value) {\n                return;\n            }\n\n            if (!prop.queryParam) {\n                return;\n            }\n\n            return value;\n\n        }).then(value => {\n\n            if (value === null || typeof value === 'undefined') {\n                return;\n            }\n\n            return ZalgoPromise.all([\n                // $FlowFixMe\n                getQueryParam(prop, key, value),\n                // $FlowFixMe\n                getQueryValue(prop, key, value)\n            ]).then(([ queryParam, queryValue ]) => {\n\n                let result;\n\n                if (typeof queryValue === 'boolean') {\n                    result = queryValue.toString();\n                } else if (typeof queryValue === 'string') {\n                    result = queryValue.toString();\n                } else if (typeof queryValue === 'object' && queryValue !== null) {\n\n                    if (prop.serialization === PROP_SERIALIZATION.JSON) {\n                        result = JSON.stringify(queryValue);\n                    } else if (prop.serialization === PROP_SERIALIZATION.BASE64) {\n                        result = btoa(JSON.stringify(queryValue));\n                    } else if (prop.serialization === PROP_SERIALIZATION.DOTIFY || !prop.serialization) {\n                        result = dotify(queryValue, key);\n\n                        for (const dotkey of Object.keys(result)) {\n                            params[dotkey] = result[dotkey];\n                        }\n\n                        return;\n                    }\n\n                } else if (typeof queryValue === 'number') {\n                    result = queryValue.toString();\n                }\n\n                params[queryParam] = result;\n            });\n        });\n\n    })).then(() => {\n        return params;\n    });\n}\n","/* @flow */\n/* eslint max-lines: 0 */\n\nimport { send, bridge, serializeMessage, ProxyWindow, toProxyWindow } from 'post-robot/src';\nimport { isSameDomain, matchDomain, getDomainFromUrl, isBlankDomain,\n    onCloseWindow, getDomain, type CrossDomainWindowType,\n    getDistanceFromTop, normalizeMockUrl, assertSameDomain } from 'cross-domain-utils/src';\nimport { ZalgoPromise } from 'zalgo-promise/src';\nimport { addEventListener, uniqueID, elementReady, writeElementToWindow, eventEmitter, type EventEmitterType,\n    noop, onResize, extend, extendUrl, appendChild, cleanup, type CleanupType, base64encode,\n    once, stringifyError, destroyElement, isDefined, getElementSafe } from 'belter/src';\n\nimport { ZOID, POST_MESSAGE, CONTEXT, EVENT,\n    INITIAL_PROPS, WINDOW_REFERENCES } from '../constants';\nimport type { Component, onErrorPropType } from '../component';\nimport { globalFor, getProxyElement, type ProxyElement } from '../lib';\nimport type { PropsInputType, PropsType } from '../component/props';\nimport type { ChildExportsType } from '../child';\nimport type { DimensionsType } from '../types';\n\nimport { RENDER_DRIVERS, type ContextDriverType } from './drivers';\nimport { propsToQuery, normalizeProps } from './props';\n\nexport type RenderOptionsType<P> = {|\n    uid : string,\n    props : PropsInputType<P>,\n    tag : string,\n    context : string,\n    close : (?string) => ZalgoPromise<void>,\n    focus : () => ZalgoPromise<ProxyWindow>,\n    doc : Document,\n    container? : HTMLElement,\n    dimensions : DimensionsType,\n    state : Object,\n    event : EventEmitterType,\n    frame : ?HTMLIFrameElement,\n    prerenderFrame : ?HTMLIFrameElement\n|};\n\nexport type ParentExportsType<P> = {|\n    init : (ChildExportsType<P>) => ZalgoPromise<void>,\n    close : () => ZalgoPromise<void>,\n    checkClose : () => ZalgoPromise<void>,\n    resize : ({ width? : ?number, height? : ?number }) => ZalgoPromise<void>,\n    onError : (mixed) => ZalgoPromise<void>\n|};\n\nexport type PropRef =\n    {| type : typeof INITIAL_PROPS.RAW, uid? : string, value? : string |};\n\nexport type WindowRef =\n    {| type : typeof WINDOW_REFERENCES.OPENER |} |\n    {| type : typeof WINDOW_REFERENCES.PARENT, distance : number |} |\n    {| type : typeof WINDOW_REFERENCES.GLOBAL, uid : string |};\n\nexport type ChildPayload = {|\n    uid : string,\n    tag : string,\n    context : $Values<typeof CONTEXT>,\n    domain : string,\n    parent : WindowRef,\n    props : PropRef,\n    exports : string\n|};\n\nexport type StateType = Object;\n\nexport type ParentHelpers<P> = {|\n    state : StateType,\n    close : () => ZalgoPromise<void>,\n    focus : () => ZalgoPromise<void>,\n    resize : ({ width : ?number, height : ?number }) => ZalgoPromise<void>,\n    onError : (mixed) => ZalgoPromise<void>,\n    updateProps : PropsInputType<P> => ZalgoPromise<void>,\n    event : EventEmitterType\n|};\n\nexport class ParentComponent<P> {\n\n    component : Component<P>\n    driver : ContextDriverType\n    clean : CleanupType\n    event : EventEmitterType\n\n    initPromise : ZalgoPromise<void>\n    \n    props : PropsType<P>\n    state : StateType\n    child : ?ChildExportsType<P>\n\n    proxyWin : ?ProxyWindow\n    proxyContainer : ?ProxyElement<HTMLElement>\n\n    constructor(component : Component<P>, props : PropsInputType<P>) {\n        try {\n            this.initPromise = new ZalgoPromise();\n\n            this.clean = cleanup(this);\n            this.state = {};\n\n            this.component = component;\n    \n            this.setupEvents(props.onError);\n            this.setProps(props);\n            this.component.registerActiveComponent(this);\n            this.clean.register(() => this.component.destroyActiveComponent(this));\n            this.watchForUnload();\n\n        } catch (err) {\n            this.onError(err).catch(noop);\n            throw err;\n        }\n    }\n\n    setupEvents(onError : ?onErrorPropType) {\n        this.event = eventEmitter();\n        \n        this.event.on(EVENT.RENDER,   () => this.props.onRender());\n        this.event.on(EVENT.DISPLAY,  () => this.props.onDisplay());\n        this.event.on(EVENT.RENDERED, () => this.props.onRendered());\n        this.event.on(EVENT.CLOSE,    () => this.props.onClose());\n        this.event.on(EVENT.PROPS,    (props) => this.props.onProps(props));\n\n        this.event.on(EVENT.ERROR, err => {\n            if (this.props && this.props.onError) {\n                return this.props.onError(err);\n            } else if (onError) {\n                return onError(err);\n            } else {\n                throw err;\n            }\n        });\n    }\n\n    render(target : CrossDomainWindowType, container : string | HTMLElement, context : $Values<typeof CONTEXT>) : ZalgoPromise<void> {\n        return ZalgoPromise.try(() => {\n            this.component.log(`render`);\n\n            this.driver = RENDER_DRIVERS[context];\n            const uid = `${ ZOID }-${ this.component.tag }-${ uniqueID() }`;\n            const domain = this.getDomain();\n            const initialDomain = this.getInitialDomain();\n            \n            this.component.checkAllowRender(target, domain, container);\n\n            if (target !== window) {\n                this.delegate(context, target);\n            }\n\n            const tasks = {};\n\n            tasks.init = this.initPromise;\n            tasks.buildUrl = this.buildUrl();\n            tasks.onRender = this.event.trigger(EVENT.RENDER);\n\n            tasks.getProxyContainer = this.getProxyContainer(container);\n\n            tasks.openFrame = this.openFrame();\n            tasks.openPrerenderFrame = this.openPrerenderFrame();\n\n            tasks.renderContainer = ZalgoPromise.all([ tasks.getProxyContainer, tasks.openFrame, tasks.openPrerenderFrame ]).then(([ proxyContainer, proxyFrame, proxyPrerenderFrame ]) => {\n                return this.renderContainer(proxyContainer, { context, uid, proxyFrame, proxyPrerenderFrame });\n            });\n\n            tasks.open = this.driver.openOnClick\n                ? this.open()\n                : tasks.openFrame.then(proxyFrame => this.open(proxyFrame));\n\n            tasks.openPrerender = ZalgoPromise.all([ tasks.open, tasks.openPrerenderFrame ]).then(([ proxyWin, proxyPrerenderFrame ]) => {\n                return this.openPrerender(proxyWin, proxyPrerenderFrame);\n            });\n\n            tasks.setState = ZalgoPromise.all([\n                tasks.open.then(proxyWin => {\n                    this.proxyWin = proxyWin;\n                    return this.setProxyWin(proxyWin);\n                }),\n                tasks.renderContainer.then(proxyContainer => {\n                    this.proxyContainer = proxyContainer;\n                })\n            ]);\n            \n            tasks.prerender = ZalgoPromise.all([ tasks.openPrerender, tasks.setState ]).then(([ proxyPrerenderWin ]) => {\n                return this.prerender(proxyPrerenderWin, { context, uid });\n            });\n\n            tasks.loadUrl = ZalgoPromise.all([ tasks.open, tasks.buildUrl, tasks.setWindowName, tasks.prerender ]).then(([ proxyWin, url ]) => {\n                return proxyWin.setLocation(url);\n            });\n\n            tasks.buildWindowName = tasks.open.then(proxyWin => {\n                return this.buildWindowName({ proxyWin, initialDomain, domain, target, context, uid });\n            });\n\n            tasks.setWindowName =  ZalgoPromise.all([ tasks.open, tasks.buildWindowName ]).then(([ proxyWin, windowName ]) => {\n                return proxyWin.setName(windowName);\n            });\n\n            tasks.watchForClose = tasks.open.then(proxyWin => {\n                return this.watchForClose(proxyWin);\n            });\n\n            tasks.onDisplay = tasks.prerender.then(() => {\n                return this.event.trigger(EVENT.DISPLAY);\n            });\n\n            tasks.openBridge = tasks.open.then(proxyWin => {\n                return this.openBridge(proxyWin, initialDomain, context);\n            });\n\n            tasks.runTimeout = tasks.loadUrl.then(() => {\n                return this.runTimeout();\n            });\n\n            tasks.onRender = tasks.init.then(() => {\n                return this.event.trigger(EVENT.RENDERED);\n            });\n\n            return ZalgoPromise.hash(tasks);\n            \n        }).catch(err => {\n            return ZalgoPromise.all([\n                this.onError(err),\n                this.destroy(err)\n            ]);\n        }).then(noop);\n    }\n\n    getProxyContainer(container : string | HTMLElement) : ZalgoPromise<ProxyElement<HTMLElement>> {\n        return ZalgoPromise.try(() => {\n            return elementReady(container);\n        }).then(containerElement => {\n            return getProxyElement(containerElement);\n        });\n    }\n\n    buildWindowName({ proxyWin, initialDomain, domain, target, uid, context } : { proxyWin : ProxyWindow, initialDomain : string, domain : string | RegExp, target : CrossDomainWindowType, context : $Values<typeof CONTEXT>, uid : string }) : string {\n        const childPayload = this.buildChildPayload({ proxyWin, initialDomain, domain, target, context, uid });\n        return `__${ ZOID }__${ this.component.name }__${ base64encode(JSON.stringify(childPayload)) }__`;\n    }\n\n    getPropsRef(proxyWin : ProxyWindow, target : CrossDomainWindowType, domain : string | RegExp, uid : string) : PropRef {\n        const value = serializeMessage(proxyWin, domain, this.getPropsForChild(domain));\n\n        const propRef = isSameDomain(target)\n            ? { type: INITIAL_PROPS.RAW, value }\n            : { type: INITIAL_PROPS.UID, uid };\n\n        if (propRef.type === INITIAL_PROPS.UID) {\n            const global = globalFor(window);\n            global.props = global.props || {};\n            global.props[uid] = value;\n\n            this.clean.register(() => {\n                delete global.props[uid];\n            });\n        }\n\n        return propRef;\n    }\n\n    buildChildPayload({ proxyWin, initialDomain, domain, target = window, context, uid } : { proxyWin : ProxyWindow, initialDomain : string, domain : string | RegExp, target : CrossDomainWindowType, context : $Values<typeof CONTEXT>, uid : string } = {}) : ChildPayload {\n        return {\n            uid,\n            context,\n            domain:  getDomain(window),\n            tag:     this.component.tag,\n            parent:  this.getWindowRef(target, initialDomain, uid, context),\n            props:   this.getPropsRef(proxyWin, target, domain, uid),\n            exports: serializeMessage(proxyWin, domain, this.buildParentExports(proxyWin))\n        };\n    }\n\n    setProxyWin(proxyWin : ProxyWindow) : ZalgoPromise<void> {\n        return ZalgoPromise.try(() => {\n            this.proxyWin = proxyWin;\n        });\n    }\n\n    getHelpers() : ParentHelpers<P> {\n        return {\n            state:       this.state,\n            event:       this.event,\n            close:       () => this.close(),\n            focus:       () => this.focus(),\n            resize:      ({ width, height }) => this.resize({ width, height }),\n            onError:     (err) => this.onError(err),\n            updateProps: (props) => this.updateProps(props)\n        };\n    }\n\n    setProps(props : PropsInputType<P>, isUpdate : boolean = false) {\n        if (this.component.validate) {\n            this.component.validate({ props });\n        }\n\n        const helpers = this.getHelpers();\n\n        // $FlowFixMe\n        this.props = this.props || {};\n        extend(this.props, normalizeProps(this.component, this, props, helpers, isUpdate));\n\n        for (const key of this.component.getPropNames()) {\n            const propDef = this.component.getPropDefinition(key);\n            if (propDef.required !== false && !isDefined(this.props[key])) {\n                throw new Error(`Expected prop \"${ key }\" to be defined`);\n            }\n        }\n    }\n\n    buildUrl() : ZalgoPromise<string> {\n        return propsToQuery({ ...this.component.props, ...this.component.builtinProps }, this.props).then(query => {\n            return extendUrl(normalizeMockUrl(this.component.getUrl(this.props)), { query });\n        });\n    }\n\n    getDomain() : string | RegExp {\n        return this.component.getDomain(this.props);\n    }\n\n    getInitialDomain() : string {\n        return this.component.getInitialDomain(this.props);\n    }\n\n    getPropsForChild(domain : string | RegExp) : (PropsType<P>) {\n        const result = {};\n\n        for (const key of Object.keys(this.props)) {\n            const prop = this.component.getPropDefinition(key);\n\n            if (prop && prop.sendToChild === false) {\n                continue;\n            }\n\n            if (prop && prop.sameDomain && !matchDomain(domain, getDomain(window))) {\n                continue;\n            }\n\n            // $FlowFixMe\n            result[key] = this.props[key];\n        }\n\n        // $FlowFixMe\n        return result;\n    }\n\n    updateProps(props : PropsInputType<P>) : ZalgoPromise<void> {\n        this.setProps(props, true);\n\n        return this.initPromise.then(() => {\n            if (this.child) {\n                return this.child.updateProps(this.getPropsForChild(this.getDomain()));\n            }\n        });\n    }\n\n    openFrame() : ZalgoPromise<?ProxyElement<HTMLIFrameElement>> {\n        return ZalgoPromise.try(() => {\n            if (this.driver.openFrame) {\n                return this.driver.openFrame.call(this);\n            }\n        });\n    }\n\n    openPrerenderFrame() : ZalgoPromise<?ProxyElement<HTMLIFrameElement>> {\n        return ZalgoPromise.try(() => {\n            if (this.driver.openPrerenderFrame) {\n                return this.driver.openPrerenderFrame.call(this);\n            }\n        });\n    }\n    \n    open(proxyFrame : ?ProxyElement<HTMLIFrameElement>) : ZalgoPromise<ProxyWindow> {\n        return ZalgoPromise.try(() => {\n            this.component.log(`open`);\n\n            const windowProp = this.props.window;\n\n            if (windowProp) {\n                this.clean.register(() => windowProp.close());\n                return toProxyWindow(windowProp);\n            }\n\n            return this.driver.open.call(this, proxyFrame);\n\n        }).then(proxyWin => {\n            this.proxyWin = proxyWin;\n            return proxyWin;\n        });\n    }\n\n    openPrerender(proxyWin : ProxyWindow, proxyPrerenderFrame : ?ProxyElement<HTMLIFrameElement>) : ZalgoPromise<ProxyWindow> {\n        return ZalgoPromise.try(() => {\n            return this.driver.openPrerender.call(this, proxyWin, proxyPrerenderFrame);\n        });\n    }\n\n    focus() : ZalgoPromise<void> {\n        return ZalgoPromise.try(() => {\n            if (this.proxyWin) {\n                return this.proxyWin.focus().then(noop);\n            }\n        });\n    }\n\n    delegate(context : $Values<typeof CONTEXT>, target : CrossDomainWindowType) {\n        this.component.log(`delegate`);\n\n        const props = {};\n        for (const propName of this.component.getPropNames()) {\n            if (this.component.getPropDefinition(propName).allowDelegate) {\n                props[propName] = this.props[propName];\n            }\n        }\n\n        const overridesPromise = send(target, `${ POST_MESSAGE.DELEGATE }_${ this.component.name }`, {\n            context,\n            props,\n            overrides: {\n                event:   this.event,\n                close:   () => this.close(),\n                onError: (err) => this.onError(err)\n            }\n\n        }).then(({ data }) => {\n            this.clean.register(data.destroy);\n            return data.overrides;\n\n        }).catch(err => {\n            throw new Error(`Unable to delegate rendering. Possibly the component is not loaded in the target window.\\n\\n${ stringifyError(err) }`);\n        });\n\n        for (const key of this.driver.delegate) {\n            // $FlowFixMe\n            this[key] = function overriddenFunction() : ZalgoPromise<mixed> {\n                return overridesPromise.then(overrides => {\n                    return overrides[key].apply(this, arguments);\n                });\n            };\n        }\n    }\n\n    getWindowRef(target : CrossDomainWindowType, domain : string, uid : string, context : $Values<typeof CONTEXT>) : WindowRef {\n        \n        if (domain === getDomain(window)) {\n            const global = globalFor(window);\n            global.windows = global.windows || {};\n            global.windows[uid] = window;\n            this.clean.register(() => {\n                delete global.windows[uid];\n            });\n    \n            return { type: WINDOW_REFERENCES.GLOBAL, uid };\n        }\n\n        if (context === CONTEXT.POPUP) {\n            return { type: WINDOW_REFERENCES.OPENER };\n        }\n\n        return { type: WINDOW_REFERENCES.PARENT, distance: getDistanceFromTop(window) };\n    }\n\n    watchForClose(proxyWin : ProxyWindow) : ZalgoPromise<void> {\n        return proxyWin.awaitWindow().then(win => {\n            const closeWindowListener = onCloseWindow(win, () => {\n                this.component.log(`detect_close_child`);\n                return this.close();\n            }, 2000);\n\n            this.clean.register(closeWindowListener.cancel);\n        });\n    }\n\n    watchForUnload() {\n        const unloadWindowListener = addEventListener(window, 'unload', once(() => {\n            this.component.log(`navigate_away`);\n            this.destroy(new Error(`Window navigated away`));\n        }));\n\n        this.clean.register(unloadWindowListener.cancel);\n    }\n\n    runTimeout() : ZalgoPromise<void> {\n        return ZalgoPromise.try(() => {\n            const timeout = this.props.timeout;\n\n            if (timeout) {\n                return this.initPromise.timeout(timeout, new Error(`Loading component timed out after ${ timeout } milliseconds`));\n            }\n        });\n    }\n\n    initChild(child : ChildExportsType<P>) : ZalgoPromise<void> {\n        return ZalgoPromise.try(() => {\n            this.clean.set('child', child);\n            this.initPromise.resolve();\n        });\n    }\n\n    buildParentExports(win : ProxyWindow) : ParentExportsType<P> {\n        const onError    = (err) => this.onError(err);\n        const init       = (child) => this.initChild(child);\n        const close      = () => this.close();\n        const checkClose = () => this.checkClose(win);\n        const resize     = ({ width, height }) => this.resize({ width, height });\n\n        init.onError = onError;\n\n        return { init, close, checkClose, resize, onError };\n    }\n\n    resize({ width, height } : { width? : ?number, height? : ?number }) : ZalgoPromise<void> {\n        return ZalgoPromise.try(() => {\n            if (this.driver.resize) {\n                return this.driver.resize.call(this, { width, height });\n            }\n        });\n    }\n\n    checkClose(win : ProxyWindow) : ZalgoPromise<void> {\n        return win.isClosed().then(closed => {\n            if (closed) {\n                return this.close();\n            }\n\n            return ZalgoPromise.delay(200)\n                .then(() => win.isClosed())\n                .then(secondClosed => {\n                    if (secondClosed) {\n                        return this.close();\n                    }\n                });\n        });\n    }\n\n    close() : ZalgoPromise<void> {\n        return ZalgoPromise.try(() => {\n            this.component.log(`close`);\n            return this.event.trigger(EVENT.CLOSE);\n\n        }).then(() => {\n            if (this.child) {\n                this.child.close.fireAndForget().catch(noop);\n            }\n\n            return this.destroy(new Error(`Window closed`));\n        });\n    }\n\n    prerender(proxyPrerenderWin : ProxyWindow, { context, uid } : { context : $Values<typeof CONTEXT>, uid : string }) : ZalgoPromise<void> {\n        return ZalgoPromise.try(() => {\n            const prerenderTemplate = this.component.prerenderTemplate;\n\n            if (!prerenderTemplate) {\n                return;\n            }\n\n            let prerenderWindow = proxyPrerenderWin.getWindow();\n\n            if (!prerenderWindow || !isSameDomain(prerenderWindow) || !isBlankDomain(prerenderWindow)) {\n                return;\n            }\n\n            prerenderWindow = assertSameDomain(prerenderWindow);\n    \n            const doc = prerenderWindow.document;\n            const el = this.renderTemplate(prerenderTemplate, { context, uid, doc });\n\n            if (!el) {\n                return;\n            }\n\n            if (el.ownerDocument !== doc) {\n                throw new Error(`Expected prerender template to have been created with document from child window`);\n            }\n\n            writeElementToWindow(prerenderWindow, el);\n\n            let { width = false, height = false, element = 'body' } = this.component.autoResize || {};\n            element = getElementSafe(element, doc);\n            \n            if (element && (width || height)) {\n                onResize(element, ({ width: newWidth, height: newHeight }) => {\n                    this.resize({\n                        width:  width ? newWidth : undefined,\n                        height: height ? newHeight : undefined\n                    });\n                }, { width, height, win: prerenderWindow });\n            }\n        });\n    }\n\n    renderTemplate(renderer : (RenderOptionsType<P>) => ?HTMLElement, { context, uid, container, doc, frame, prerenderFrame } : { context : $Values<typeof CONTEXT>, uid : string, container? : HTMLElement, doc : Document, frame? : ?HTMLIFrameElement, prerenderFrame? : ?HTMLIFrameElement }) : ?HTMLElement {\n        // $FlowFixMe\n        return renderer.call(this, {\n            container,\n            context,\n            uid,\n            doc,\n            frame,\n            prerenderFrame,\n            focus:      () => this.focus(),\n            close:      () => this.close(),\n            state:      this.state,\n            props:      this.props,\n            tag:        this.component.tag,\n            dimensions: this.component.dimensions,\n            event:      this.event\n        });\n    }\n\n    renderContainer(proxyContainer : ProxyElement<HTMLElement>, { proxyFrame, proxyPrerenderFrame, context, uid } : { context : $Values<typeof CONTEXT>, uid : string, proxyFrame : ?ProxyElement<HTMLIFrameElement>, proxyPrerenderFrame : ?ProxyElement<HTMLIFrameElement> }) : ZalgoPromise<?ProxyElement<HTMLElement>> {\n        return ZalgoPromise.all([\n            proxyContainer.getElement().then(elementReady),\n            // $FlowFixMe\n            proxyFrame ? proxyFrame.getElement() : null,\n            // $FlowFixMe\n            proxyPrerenderFrame ? proxyPrerenderFrame.getElement() : null\n        ]).then(([ container, frame, prerenderFrame ]) => {\n            const innerContainer = this.renderTemplate(this.component.containerTemplate, { context, uid, container, frame, prerenderFrame, doc: document });\n            if (innerContainer) {\n                appendChild(container, innerContainer);\n                this.clean.register(() => destroyElement(innerContainer));\n                this.proxyContainer = getProxyElement(innerContainer);\n                return this.proxyContainer;\n            }\n        });\n    }\n\n    destroy(err : mixed = new Error(`Component destroyed before render complete`)) : ZalgoPromise<void> {\n        return ZalgoPromise.try(() => {\n            this.component.log(`destroy`);\n            this.initPromise.asyncReject(err);\n            return this.clean.all();\n        });\n    }\n\n    onError(err : mixed) : ZalgoPromise<void> {\n        // eslint-disable-next-line promise/no-promise-in-callback\n        return ZalgoPromise.try(() => {\n            this.initPromise.asyncReject(err);\n            return this.event.trigger(EVENT.ERROR, err);\n\n        }).then(() => {\n            return this.initPromise;\n            \n        }).then(() => {\n            throw err;\n        });\n    }\n\n    openBridge(proxyWin : ProxyWindow, domain : string, context : $Values<typeof CONTEXT>) : ?ZalgoPromise<?CrossDomainWindowType> {\n        if (__POST_ROBOT__.__IE_POPUP_SUPPORT__) {\n            return ZalgoPromise.try(() => {\n                return proxyWin.awaitWindow();\n                \n            }).then(win => {\n                if (!bridge || !bridge.needsBridge({ win, domain }) || bridge.hasBridge(domain, domain)) {\n                    return;\n                }\n\n                const bridgeUrl = this.component.getBridgeUrl();\n\n                if (!bridgeUrl) {\n                    throw new Error(`Bridge needed to render ${ context }`);\n                }\n\n                const bridgeDomain = getDomainFromUrl(bridgeUrl);\n                bridge.linkUrl(win, domain);\n                return bridge.openBridge(normalizeMockUrl(bridgeUrl), bridgeDomain);\n            });\n        }\n    }\n}\n","/* @flow */\n\nimport { onCloseWindow, type CrossDomainWindowType } from 'cross-domain-utils/src';\nimport { ZalgoPromise } from 'zalgo-promise/src';\nimport { ProxyWindow } from 'post-robot/src';\nimport { cleanup, type CleanupType, type EventEmitterType } from 'belter/src';\n\nimport { ParentComponent } from '../parent';\nimport { RENDER_DRIVERS, type ContextDriverType } from '../parent/drivers';\nimport type { Component } from '../component';\n\nexport type DelegatePropsType = {|\n    onClose : () => ?ZalgoPromise<void>,\n    onDisplay : () => ?ZalgoPromise<void>,\n    window : ?ProxyWindow\n|};\n\nexport type DelegateOptionsType = {|\n    context : string,\n    props : DelegatePropsType,\n    overrides : {\n        close : () => ZalgoPromise<void>,\n        onError : (mixed) => ZalgoPromise<void>,\n        event : EventEmitterType\n    }\n|};\n\nexport type DelegateReturnType = {|\n    overrides : Object,\n    destroy : () => ZalgoPromise<void>\n|};\n\nexport class DelegateComponent<P>  {\n\n    component : Component<P>\n    source : CrossDomainWindowType\n    context : string\n    driver : ContextDriverType\n    props : DelegatePropsType\n    clean : CleanupType\n\n    focus : () => ZalgoPromise<void>\n    resize : ({ width? : ?number, height? : ?number }) => ZalgoPromise<void>\n    renderTemplate : Function\n\n    close : () => ZalgoPromise<void>\n    onError : (mixed) => ZalgoPromise<void>\n    event : EventEmitterType\n\n    constructor(component : Component<P>, source : CrossDomainWindowType, options : DelegateOptionsType) {\n        this.component = component;\n        this.context = options.context;\n        this.driver = RENDER_DRIVERS[options.context];\n        this.clean = cleanup(this);\n        \n        this.focus = ParentComponent.prototype.focus;\n        this.resize = ParentComponent.prototype.resize;\n        this.renderTemplate = ParentComponent.prototype.renderTemplate;\n\n        // $FlowFixMe\n        this.props = {};\n        for (const propName of Object.keys(options.props)) {\n            const propDef = this.component.getPropDefinition(propName);\n            if (propDef && propDef.allowDelegate && options.props[propName]) {\n                // $FlowFixMe\n                this.props[propName] = options.props[propName];\n            }\n        }\n\n        this.close   = options.overrides.close;\n        this.onError = options.overrides.onError;\n        this.event   = options.overrides.event;\n\n        this.component.registerActiveComponent(this);\n        this.clean.register(() => this.component.destroyActiveComponent(this));\n\n        this.watchForSourceClose(source);\n    }\n\n    getDelegate() : DelegateReturnType {\n        return {\n            overrides: this.getOverrides(),\n            destroy:   () => this.destroy()\n        };\n    }\n\n    watchForSourceClose(source : CrossDomainWindowType) {\n        const closeSourceWindowListener = onCloseWindow(source, () => this.destroy(), 3000);\n        this.clean.register(closeSourceWindowListener.cancel);\n    }\n\n    getOverrides() : { [string] : mixed } {\n        const overrides = {};\n        const self = this;\n\n        for (const key of this.driver.delegate) {\n            overrides[key] = function delegateOverride() : mixed {\n                // $FlowFixMe\n                return ParentComponent.prototype[key].apply(self, arguments);\n            };\n            overrides[key].__name__ = key;\n        }\n\n        return overrides;\n    }\n\n    destroy() : ZalgoPromise<void> {\n        return this.clean.all();\n    }\n}\n","export default function _inheritsLoose(subClass, superClass) {\n  subClass.prototype = Object.create(superClass.prototype);\n  subClass.prototype.constructor = subClass;\n  subClass.__proto__ = superClass;\n}","/* @flow */\n\nexport type NodePropsType = { [string] : mixed };\n// eslint-disable-next-line no-use-before-define\nexport type NodeType = ElementNode | TextNode | FragmentNode;\n// eslint-disable-next-line no-use-before-define\nexport type NodeChildrenType = $ReadOnlyArray<ElementNode | TextNode>;\nexport type NodeRenderer<T> = (string, NodePropsType, NodeChildrenType) => T;\nexport type NodeRendererFactory<T, O = Object> = (O | void) => NodeRenderer<T>;\n\nclass Node {\n    isElementNode() : boolean {\n        return false;\n    }\n\n    isTextNode() : boolean {\n        return false;\n    }\n\n    isFragmentNode() : boolean {\n        return false;\n    }\n}\n\nexport class ElementNode extends Node {\n    name : string\n    props : NodePropsType\n    children : NodeChildrenType\n    onRender : ?<T>(T) => void // eslint-disable-line no-undef\n\n    constructor(name : string, props : NodePropsType, children : NodeChildrenType) {\n        super();\n        this.name = name;\n        this.props = props;\n        this.children = children;\n\n        if (typeof props.onRender === 'function') {\n            this.onRender = props.onRender;\n            delete props.onRender;\n        }\n    }\n\n    getTag() : string {\n        return this.name;\n    }\n\n    isTag(name : string) : boolean {\n        return name === this.name;\n    }\n\n    isElementNode() : boolean {\n        return true;\n    }\n\n    render<T>(renderer : NodeRenderer<T>) : T {\n        const element = renderer(this.name, this.props, this.children);\n        if (this.onRender) {\n            this.onRender(element);\n        }\n        return element;\n    }\n\n    getText() : string {\n        throw new Error(`Can not get text of an element node`);\n    }\n}\n\nexport class TextNode extends Node {\n    text : string\n\n    constructor(text : string) {\n        super();\n        this.text = text;\n    }\n\n    getTag() : string {\n        throw new Error(`Can not get tag of text node`);\n    }\n\n    isTag(name : string) : boolean { // eslint-disable-line no-unused-vars\n        throw new Error(`Can not check tag of text node`);\n    }\n\n    isTextNode() : boolean {\n        return true;\n    }\n\n    render<T>(renderer : NodeRenderer<T>) : T { // eslint-disable-line no-unused-vars\n        throw new Error(`Can not render a text node`);\n    }\n\n    getText() : string {\n        return this.text;\n    }\n}\n\nexport class FragmentNode extends Node {\n    children : NodeChildrenType\n\n    constructor(children : NodeChildrenType) {\n        super();\n        this.children = children;\n    }\n\n    getTag() : string {\n        throw new Error(`Can not get tag of fragment node`);\n    }\n\n    isTag(name : string) : boolean { // eslint-disable-line no-unused-vars\n        throw new Error(`Can not check tag of fragment node`);\n    }\n\n    isFragmentNode() : boolean {\n        return true;\n    }\n\n    render<T>(renderer : NodeRenderer<T>) : $ReadOnlyArray<T> { // eslint-disable-line no-unused-vars\n        throw new Error(`Can not render a fragment node`);\n    }\n\n    getText() : string {\n        throw new Error(`Can not get text of a fragment node`);\n    }\n}\n\ntype JsxChildType = $ReadOnlyArray<JsxChildType> | NodeType | string;\ntype NullableJsxChildType = $ReadOnlyArray<NullableJsxChildType> | NodeType | string | null | void;\n\nfunction normalizeChild(child : NullableJsxChildType) : NodeType | void {\n    if (typeof child === 'string') {\n        return new TextNode(child);\n\n    } else if (child instanceof ElementNode || child instanceof TextNode || child instanceof FragmentNode) {\n        return child;\n\n    } else if (Array.isArray(child)) {\n        return new FragmentNode(normalizeChildren(child)); // eslint-disable-line no-use-before-define\n\n    } else if (child === null || typeof child === 'undefined') {\n        return; // eslint-disable-line no-useless-return\n\n    } else {\n        throw new Error(`Child node must be string or instance of jsx-pragmatic node; got ${ typeof child }`);\n    }\n}\n\nfunction normalizeChildren(children : $ReadOnlyArray<NullableJsxChildType>) : NodeChildrenType {\n    const result = [];\n\n    for (const child of children) {\n        const normalizedChild = normalizeChild(child);\n\n        if (!normalizedChild) {\n            continue;\n        }\n\n        if (normalizedChild instanceof FragmentNode) {\n            for (const subchild of normalizedChild.children) {\n                result.push(subchild);\n            }\n        } else {\n            result.push(normalizedChild);\n        }\n    }\n\n    return result;\n}\n\ntype JSXElementBuilder<P : NodePropsType> = (\n    element : string,\n    props : P | null,\n    ...children : $ReadOnlyArray<NullableJsxChildType>\n) => ElementNode;\n\ntype JSXElementFunctionBuilder<P : NodePropsType> = (\n    element : (P, $ReadOnlyArray<JsxChildType>) => ElementNode,\n    props : P | null,\n    ...children : $ReadOnlyArray<NullableJsxChildType>\n) => ElementNode;\n\ntype JSXTextFunctionBuilder<P : NodePropsType> = (\n    element : (P, $ReadOnlyArray<JsxChildType>) => string | TextNode,\n    props : P | null,\n    ...children : $ReadOnlyArray<NullableJsxChildType>\n) => TextNode;\n\ntype JSXFragmentFunctionBuilder<P : NodePropsType> = (\n    element : (P, $ReadOnlyArray<JsxChildType>) => FragmentNode | $ReadOnlyArray<NullableJsxChildType>,\n    props : P | null,\n    ...children : $ReadOnlyArray<NullableJsxChildType>\n) => FragmentNode;\n\ntype JSXEmptyFunctionBuilder<P : NodePropsType> = (\n    element : (P, $ReadOnlyArray<JsxChildType>) => null | void,\n    props : P | null,\n    ...children : $ReadOnlyArray<NullableJsxChildType>\n) => void;\n\ntype JSXBuilder<P : NodePropsType> = JSXElementBuilder<P> & JSXElementFunctionBuilder<P> & JSXTextFunctionBuilder<P> & JSXFragmentFunctionBuilder<P> & JSXEmptyFunctionBuilder<P>;\n\nexport const node : JSXBuilder<*> = <P : NodePropsType>(element, props : P | null, ...children) => {\n    if (typeof element === 'string') {\n        return new ElementNode(element, props || {}, normalizeChildren(children));\n    }\n\n    if (typeof element === 'function') {\n        // $FlowFixMe\n        return normalizeChild(element(props || {}, normalizeChildren(children)));\n    }\n    \n    throw new TypeError(`Expected jsx Element to be a string or a function`);\n};\n\nexport function Fragment(props : NodePropsType, ...children : $ReadOnlyArray<JsxChildType>) : FragmentNode {\n    \n    if (props && Object.keys(props).length) {\n        throw new Error(`Do not pass props to Fragment`);\n    }\n\n    return new FragmentNode(normalizeChildren(children));\n}\n","/* @flow */\n\nimport type { NodeChildrenType, NodePropsType, NodeRendererFactory, NodeRenderer } from '../node';\n\nconst ELEMENT_TAG = {\n    HTML:    'html',\n    IFRAME:  'iframe',\n    SCRIPT:  'script',\n    NODE:    'node',\n    DEFAULT: 'default'\n};\n\nconst ELEMENT_PROP = {\n    INNER_HTML: 'innerHTML',\n    EL:         'el'\n};\n\nfunction fixScripts(el : HTMLElement, doc : Document = window.document) {\n    for (const script of el.querySelectorAll('script')) {\n        const parentNode = script.parentNode;\n\n        if (!parentNode) {\n            continue;\n        }\n\n        const newScript = doc.createElement('script');\n        // $FlowFixMe\n        newScript.text = script.textContent;\n        parentNode.replaceChild(newScript, script);\n    }\n}\n\ntype CreateElementOptions = {|\n    doc : Document,\n    name : string,\n    props : NodePropsType\n|};\n\nconst CREATE_ELEMENT : { [string] : (CreateElementOptions) => HTMLElement } = {\n\n    [ ELEMENT_TAG.NODE ]: ({ props } : CreateElementOptions) => {\n        if (!props[ELEMENT_PROP.EL]) {\n            throw new Error(`Must pass ${ ELEMENT_PROP.EL } prop to ${ ELEMENT_TAG.NODE } element`);\n        }\n\n        if (Object.keys(props).length > 1) {\n            throw new Error(`Must not pass any prop other than ${ ELEMENT_PROP.EL } to ${ ELEMENT_TAG.NODE } element`);\n        }\n\n        // $FlowFixMe\n        return props[ELEMENT_PROP.EL];\n    },\n\n    [ ELEMENT_TAG.DEFAULT ]: ({ name, doc } : CreateElementOptions) => {\n        return doc.createElement(name);\n    }\n};\n\nfunction createElement({ doc, name, props } : CreateElementOptions) : HTMLElement {\n    const elementCreator = CREATE_ELEMENT[name] || CREATE_ELEMENT[ELEMENT_TAG.DEFAULT];\n    return elementCreator({ name, props, doc });\n}\n\ntype AddPropsOptions = {|\n    el : HTMLElement,\n    props : NodePropsType\n|};\n\nfunction addProps({ el, props } : AddPropsOptions) {\n    for (const prop of Object.keys(props)) {\n        const val = props[prop];\n\n        if (val === null || typeof val === 'undefined' || prop === ELEMENT_PROP.EL || prop === ELEMENT_PROP.INNER_HTML) {\n            continue;\n        }\n\n        if (prop.match(/^on[A-Z][a-z]/) && typeof val === 'function') {\n            el.addEventListener(prop.slice(2).toLowerCase(), val);\n        } else if (typeof val === 'string' || typeof val === 'number') {\n            el.setAttribute(prop, val.toString());\n\n        } else if (typeof val === 'boolean') {\n            if (val === true) {\n                el.setAttribute(prop, '');\n            }\n\n        } else {\n            throw new TypeError(`Can not render prop ${ prop } of type ${ typeof val }`);\n        }\n    }\n}\n\ntype AddChildrenOptions = {|\n    el : HTMLElement,\n    name : string,\n    children : NodeChildrenType,\n    doc : Document,\n    props : NodePropsType,\n    domRenderer : NodeRenderer<HTMLElement>\n|};\n\nconst ADD_CHILDREN : { [string] : (AddChildrenOptions) => void } = {\n\n    [ ELEMENT_TAG.IFRAME ]: ({ el, children } : AddChildrenOptions) => {\n        const firstChild = children[0];\n\n        if (children.length > 1 || !firstChild.isElementNode()) {\n            throw new Error(`Expected only single element node as child of ${ ELEMENT_TAG.IFRAME } element`);\n        }\n\n        if (!firstChild.isTag(ELEMENT_TAG.HTML)) {\n            throw new Error(`Expected element to be inserted into frame to be html, got ${ firstChild.getTag() }`);\n        }\n    \n        el.addEventListener('load', () => {\n\n            // $FlowFixMe\n            const win = el.contentWindow;\n    \n            if (!win) {\n                throw new Error(`Expected frame to have contentWindow`);\n            }\n\n            const doc = win.document;\n            const docElement = doc.documentElement;\n\n            while (docElement.children && docElement.children.length) {\n                docElement.removeChild(docElement.children[0]);\n            }\n\n            // eslint-disable-next-line no-use-before-define\n            const child = firstChild.render(dom({ doc }));\n        \n            while (child.children.length) {\n                docElement.appendChild(child.children[0]);\n            }\n        });\n    },\n\n    [ ELEMENT_TAG.SCRIPT ]: ({ el, children } : AddChildrenOptions) => {\n        const firstChild = children[0];\n\n        if (children.length !== 1 || !firstChild.isTextNode()) {\n            throw new Error(`Expected only single text node as child of ${ ELEMENT_TAG.SCRIPT } element`);\n        }\n        \n        // $FlowFixMe\n        el.text = firstChild.getText();\n    },\n\n    [ ELEMENT_TAG.DEFAULT ]: ({ el, children, doc, domRenderer } : AddChildrenOptions) => {\n        for (const child of children) {\n            if (child.isTextNode()) {\n                el.appendChild(doc.createTextNode(child.getText()));\n            } else {\n                el.appendChild(child.render(domRenderer));\n            }\n        }\n    }\n};\n\nfunction addChildren({ el, name, props, children, doc, domRenderer } : AddChildrenOptions) {\n    if (props.hasOwnProperty(ELEMENT_PROP.INNER_HTML)) {\n\n        if (children.length >= 1) {\n            throw new Error(`Expected no children to be passed when ${ ELEMENT_PROP.INNER_HTML } prop is set`);\n        }\n\n        const html = props[ELEMENT_PROP.INNER_HTML];\n\n        if (typeof html !== 'string') {\n            throw new TypeError(`${ ELEMENT_PROP.INNER_HTML } prop must be string`);\n        }\n\n        if (name === ELEMENT_TAG.SCRIPT) {\n            // $FlowFixMe\n            el.text = html;\n        } else {\n            el.innerHTML = html;\n            fixScripts(el, doc);\n        }\n\n    } else {\n        const addChildrenToElement = ADD_CHILDREN[name] || ADD_CHILDREN[ELEMENT_TAG.DEFAULT];\n        addChildrenToElement({ el, name, props, children, doc, domRenderer });\n    }\n}\n\n\nexport const dom : NodeRendererFactory<HTMLElement> = ({ doc = document } : { doc? : Document } = {}) => {\n    const domRenderer = (name, props, children) => {\n        const el = createElement({ name, props, doc });\n        addProps({ el, props });\n        addChildren({ el, name, props, children, doc, domRenderer });\n        return el;\n    };\n\n    return domRenderer;\n};\n","/* @flow */\n/* @jsx node */\n/* eslint react/react-in-jsx-scope: off */\n\nimport { node, dom } from 'jsx-pragmatic/src';\nimport { destroyElement } from 'belter/src';\n\nimport { type RenderOptionsType } from '../../parent';\nimport { EVENT } from '../../constants';\n\nconst CLASS = {\n    VISIBLE:   'visible',\n    INVISIBLE: 'invisible'\n};\n\nexport function defaultContainerTemplate<P>({ uid, frame, prerenderFrame, doc, event, dimensions : { width, height } } : RenderOptionsType<P>) : ?HTMLElement {\n\n    if (!frame || !prerenderFrame) {\n        return;\n    }\n\n    prerenderFrame.classList.add(CLASS.VISIBLE);\n    frame.classList.add(CLASS.INVISIBLE);\n\n    event.on(EVENT.RENDERED, () => {\n        prerenderFrame.classList.remove(CLASS.VISIBLE);\n        prerenderFrame.classList.add(CLASS.INVISIBLE);\n\n        frame.classList.remove(CLASS.INVISIBLE);\n        frame.classList.add(CLASS.VISIBLE);\n\n        setTimeout(() => {\n            destroyElement(prerenderFrame);\n        }, 1);\n    });\n\n    return (\n        <div id={ uid }>\n            <style>\n                {`\n                    #${ uid } {\n                        display: inline-block;\n                        position: relative;\n                        width: ${ width };\n                        height: ${ height };\n                    }\n\n                    #${ uid } > iframe {\n                        display: inline-block;\n                        position: absolute;\n                        width: 100%;\n                        height: 100%;\n                        top: 0;\n                        left: 0;\n                        transition: opacity .2s ease-in-out;\n                    }\n\n                    #${ uid } > iframe.${ CLASS.INVISIBLE } {\n                        opacity: 0;\n                    }\n\n                    #${ uid } > iframe.${ CLASS.VISIBLE } {\n                        opacity: 1;\n                    }\n                `}\n            </style>\n\n            <node el={ frame } />\n            <node el={ prerenderFrame } />\n        </div>\n    ).render(dom({ doc }));\n}\n","/* @flow */\n/** @jsx node */\n/* eslint react/react-in-jsx-scope: off */\n\nimport { node, dom } from 'jsx-pragmatic/src';\n\nimport { type RenderOptionsType } from '../../parent';\n\nexport function defaultPrerenderTemplate<P>({ doc } : RenderOptionsType<P>) : HTMLElement {\n    return (\n        <html>\n            <body>\n                <style>\n                    {`\n                        .spinner {\n                            position: fixed;\n                            max-height: 60vmin;\n                            max-width: 60vmin;\n                            height: 40px;\n                            width: 40px;\n                            top: 50%;\n                            left: 50%;\n                            box-sizing: border-box;\n                            border: 3px solid rgba(0, 0, 0, .2);\n                            border-top-color: rgba(33, 128, 192, 0.8);\n                            border-radius: 100%;\n                            animation: rotation .7s infinite linear;\n                        }\n\n                        @keyframes rotation {\n                            from {\n                                transform: translateX(-50%) translateY(-50%) rotate(0deg);\n                            }\n                            to {\n                                transform: translateX(-50%) translateY(-50%) rotate(359deg);\n                            }\n                        }\n                    `}\n                </style>\n                <div class=\"spinner\" />\n            </body>\n        </html>\n    ).render(dom({ doc }));\n}\n","/* @flow */\n\nimport { ZalgoPromise } from 'zalgo-promise/src';\nimport { once, noop } from 'belter/src';\nimport { isWindow, type CrossDomainWindowType } from 'cross-domain-utils/src';\nimport { ProxyWindow, toProxyWindow } from 'post-robot/src';\n\nimport { PROP_SERIALIZATION } from '../constants';\n\nexport type EventHandlerType<T> = (T) => void | ZalgoPromise<void>;\n\nexport type timeoutPropType = number;\nexport type windowPropType = CrossDomainWindowType | ProxyWindow;\nexport type closePropType = () => ZalgoPromise<void>;\nexport type focusPropType = () => ZalgoPromise<void>;\nexport type resizePropType = ({ width : ?number, height : ?number }) => ZalgoPromise<void>;\n\nexport type onDisplayPropType = EventHandlerType<void>;\nexport type onRenderedPropType = EventHandlerType<void>;\nexport type onRenderPropType = EventHandlerType<void>;\nexport type onClosePropType = EventHandlerType<void>;\nexport type onErrorPropType = EventHandlerType<mixed>;\nexport type onPropsPropType<P> = ((PropsType<P>) => void) => void; // eslint-disable-line no-use-before-define\n\nexport type PropsInputType<P> = {\n    timeout? : timeoutPropType,\n    window? : windowPropType,\n\n    onDisplay? : onDisplayPropType,\n    onRendered? : onRenderedPropType,\n    onRender? : onRenderPropType,\n    onClose? : onClosePropType,\n    onError? : onErrorPropType,\n    onProps? : onPropsPropType<P>\n} & P;\n\nexport type PropsType<P> = {|\n    timeout? : timeoutPropType,\n    window? : ?windowPropType,\n    close? : ?closePropType,\n    focus? : ?focusPropType,\n    resize? : ?resizePropType,\n\n    onDisplay : onDisplayPropType,\n    onRendered : onRenderedPropType,\n    onRender : onRenderPropType,\n    onClose : onClosePropType,\n    onError : onErrorPropType,\n    onProps : onPropsPropType<P>\n|} & P;\n\ntype PropDefinitionType<T, P, S : string> = {|\n    type : S,\n    alias? : string,\n    value? : ({ props : P, state : Object, close : () => ZalgoPromise<void>, focus : () => ZalgoPromise<void>, onError : (mixed) => ZalgoPromise<void> }) => ?T,\n    required? : boolean,\n    queryParam? : boolean | string | ({ value : T }) => (string | ZalgoPromise<string>),\n    queryValue? : ({ value : T }) => (ZalgoPromise<mixed> | mixed),\n    sendToChild? : boolean,\n    allowDelegate? : boolean,\n    validate? : ({ value : T, props : PropsInputType<P> }) => void,\n    decorate? : ({ value : T, props : PropsType<P>, state : Object, close : () => ZalgoPromise<void>, focus : () => ZalgoPromise<void>, onError : (mixed) => ZalgoPromise<void> }) => T,\n    default? : ({ props : P, state : Object }) => ?T,\n    sameDomain? : boolean,\n    serialization? : $Values<typeof PROP_SERIALIZATION>,\n    childDecorate? : ({ value : T, close : () => ZalgoPromise<void>, focus : () => ZalgoPromise<void>, onError : (mixed) => ZalgoPromise<void>, onProps : ((PropsType<P>) => void) => void, resize : ({ width : ?number, height : ?number }) => ZalgoPromise<void> }) => ?T\n|};\n\nexport type BooleanPropDefinitionType<T : boolean, P> = PropDefinitionType<T, P, 'boolean'>;\nexport type StringPropDefinitionType<T : string, P> = PropDefinitionType<T, P, 'string'>;\nexport type NumberPropDefinitionType<T : number, P> = PropDefinitionType<T, P, 'number'>;\nexport type FunctionPropDefinitionType<T : Function, P> = PropDefinitionType<T, P, 'function'>;\nexport type ArrayPropDefinitionType<T : Array<*>, P> = PropDefinitionType<T, P, 'array'>; // eslint-disable-line flowtype/no-mutable-array\nexport type ObjectPropDefinitionType<T : Object, P> = PropDefinitionType<T, P, 'object'>;\n\nexport type MixedPropDefinitionType<P> = BooleanPropDefinitionType<*, P> | StringPropDefinitionType<*, P> | NumberPropDefinitionType<*, P> | FunctionPropDefinitionType<*, P> | ObjectPropDefinitionType<*, P> | ArrayPropDefinitionType<*, P>;\n\nexport type UserPropsDefinitionType<P> = {\n    [string] : MixedPropDefinitionType<P>\n};\n\n// eslint-disable-next-line flowtype/require-exact-type\nexport type BuiltInPropsDefinitionType<P> = {\n    timeout : NumberPropDefinitionType<timeoutPropType, P>,\n    window : ObjectPropDefinitionType<windowPropType, P>,\n    close : FunctionPropDefinitionType<closePropType, P>,\n    focus : FunctionPropDefinitionType<focusPropType, P>,\n    resize : FunctionPropDefinitionType<resizePropType, P>,\n\n    onDisplay : FunctionPropDefinitionType<onDisplayPropType, P>,\n    onRendered : FunctionPropDefinitionType<onRenderedPropType, P>,\n    onRender : FunctionPropDefinitionType<onRenderPropType, P>,\n    onClose : FunctionPropDefinitionType<onClosePropType, P>,\n    onError : FunctionPropDefinitionType<onErrorPropType, P>,\n    onProps : FunctionPropDefinitionType<onPropsPropType<P>, P>\n};\n\nconst defaultNoop = () => noop;\nconst decorateOnce = ({ value }) => once(value);\n\nexport function getBuiltInProps<P>() : BuiltInPropsDefinitionType<P> {\n    return {\n        window: {\n            type:          'object',\n            sendToChild:   false,\n            required:      false,\n            allowDelegate: true,\n            validate({ value } : { value : CrossDomainWindowType | ProxyWindow }) {\n                if (!isWindow(value) && !ProxyWindow.isProxyWindow(value)) {\n                    throw new Error(`Expected Window or ProxyWindow`);\n                }\n            },\n            decorate({ value } : { value : CrossDomainWindowType | ProxyWindow }) : ProxyWindow {\n                return toProxyWindow(value);\n            }\n        },\n\n        timeout: {\n            type:        'number',\n            required:    false,\n            sendToChild: false\n        },\n\n        close: {\n            type:          'function',\n            required:      false,\n            sendToChild:   false,\n            childDecorate: ({ close }) => close\n        },\n\n        focus: {\n            type:          'function',\n            required:      false,\n            sendToChild:   false,\n            childDecorate: ({ focus }) => focus\n        },\n\n        resize: {\n            type:          'function',\n            required:      false,\n            sendToChild:   false,\n            childDecorate: ({ resize }) => resize\n        },\n\n        onDisplay: {\n            type:          'function',\n            required:      false,\n            sendToChild:   false,\n            allowDelegate: true,\n            default:       defaultNoop,\n            decorate:      decorateOnce\n        },\n\n        onRendered: {\n            type:        'function',\n            required:    false,\n            sendToChild: false,\n            default:     defaultNoop,\n            decorate:    decorateOnce\n        },\n\n        onRender: {\n            type:        'function',\n            required:    false,\n            sendToChild: false,\n            default:     defaultNoop,\n            decorate:    decorateOnce\n        },\n\n        onClose: {\n            type:          'function',\n            required:      false,\n            sendToChild:   false,\n            allowDelegate: true,\n            default:       defaultNoop,\n            decorate:      decorateOnce\n        },\n\n        onError: {\n            type:          'function',\n            required:      false,\n            sendToChild:   false,\n            childDecorate: ({ onError }) => onError\n        },\n\n        onProps: {\n            type:          'function',\n            required:      false,\n            sendToChild:   false,\n            default:       defaultNoop,\n            childDecorate: ({ onProps }) => onProps\n        }\n    };\n}\n","/* @flow */\n/* eslint max-lines: 0 */\n\nimport { on, send, bridge, toProxyWindow } from 'post-robot/src';\nimport { ZalgoPromise } from 'zalgo-promise/src';\nimport { isWindow, getDomainFromUrl, type CrossDomainWindowType, isSameTopWindow, getDomain, matchDomain, isSameDomain } from 'cross-domain-utils/src';\nimport { isRegex, noop, isElement } from 'belter/src';\n\nimport { ChildComponent, getChildPayload } from '../child';\nimport { ParentComponent, type RenderOptionsType, type ParentHelpers } from '../parent';\nimport { DelegateComponent } from '../delegate';\nimport { CONTEXT, POST_MESSAGE, WILDCARD, DEFAULT_DIMENSIONS } from '../constants';\nimport { react, angular, vue, angular2 } from '../drivers';\nimport type { CssDimensionsType, StringMatcherType } from '../types';\n\nimport { validate } from './validate';\nimport { defaultContainerTemplate, defaultPrerenderTemplate } from './templates';\nimport { getBuiltInProps, type UserPropsDefinitionType, type BuiltInPropsDefinitionType, type PropsInputType, type PropsType, type MixedPropDefinitionType } from './props';\n\ntype LoggerPayload = { [string] : ?string };\n\n// eslint-disable-next-line flowtype/require-exact-type\ntype Logger = {\n    debug : (event : string, payload? : LoggerPayload) => void,\n    info : (event : string, payload? : LoggerPayload) => void,\n    warn : (event : string, payload? : LoggerPayload) => void,\n    error : (event : string, payload? : LoggerPayload) => void\n};\n\n/*  Component\n    ---------\n\n    This is the spec for the component. The idea is, when I call zoid.create(), it will create a new instance\n    of Component with the blueprint needed to set up ParentComponents and ChildComponents.\n\n    This is the one portion of code which is required by -- and shared to -- both the parent and child windows, and\n    contains all of the configuration needed for them to set themselves up.\n*/\n\nexport type ComponentOptionsType<P> = {|\n\n    tag : string,\n\n    url : string | ({ props : PropsType<P> }) => string,\n    domain? : string | RegExp,\n    bridgeUrl? : string,\n\n    props? : UserPropsDefinitionType<P>,\n\n    dimensions? : CssDimensionsType,\n    autoResize? : { width? : boolean, height? : boolean, element? : string },\n\n    allowedParentDomains? : StringMatcherType,\n\n    attributes? : {\n        iframe? : { [string] : string },\n        popup? : { [string] : string }\n    },\n\n    defaultContext? : $Values<typeof CONTEXT>,\n\n    containerTemplate? : (RenderOptionsType<P>) => ?HTMLElement,\n    prerenderTemplate? : (RenderOptionsType<P>) => ?HTMLElement,\n\n    validate? : ({ props : PropsInputType<P> }) => void,\n\n    logger? : Logger\n|};\n\ntype ZoidRenderer = {|\n    render : (container? : string | HTMLElement, context? : $Values<typeof CONTEXT>) => ZalgoPromise<void>,\n    renderTo : (target : CrossDomainWindowType, container? : string, context? : $Values<typeof CONTEXT>) => ZalgoPromise<void>\n|};\n\nexport type ZoidComponentInstance<P> = {| ...ParentHelpers<P>, ...ZoidRenderer |};\n\nexport type ZoidComponent<P> = {|\n    (PropsInputType<P>) : ZoidComponentInstance<P>,\n    driver : (string, mixed) => mixed,\n    isChild : () => boolean,\n    xprops? : PropsType<P>,\n    canRenderTo : (CrossDomainWindowType) => ZalgoPromise<boolean>\n|};\n\nexport class Component<P> {\n\n    tag : string\n    name : string\n    \n    url : string | ({ props : PropsType<P> }) => string\n    domain : void | string | RegExp\n    bridgeUrl : void | string\n\n    props : UserPropsDefinitionType<P>\n    builtinProps : BuiltInPropsDefinitionType<P>\n\n    dimensions : CssDimensionsType\n    autoResize : void | { width? : boolean, height? : boolean, element? : string }\n\n    allowedParentDomains : StringMatcherType\n\n    defaultContext : $Values<typeof CONTEXT>\n    \n    attributes : {\n        iframe? : { [string] : string },\n        popup? : { [string] : string }\n    }\n\n    containerTemplate : (RenderOptionsType<P>) => ?HTMLElement\n    prerenderTemplate : ?(RenderOptionsType<P>) => ?HTMLElement\n\n    validate : void | ({ props : PropsInputType<P> }) => void\n\n    driverCache : { [string] : mixed }\n\n    xprops : ?PropsType<P>\n\n    logger : Logger\n\n    propNames : $ReadOnlyArray<string>\n\n    constructor(options : ComponentOptionsType<P>) {\n        validate(options);\n\n        // The tag name of the component. Used by some drivers (e.g. angular) to turn the component into an html element,\n        // e.g. <my-component>\n\n        this.tag = options.tag;\n        this.name = this.tag.replace(/-/g, '_');\n\n        this.allowedParentDomains = options.allowedParentDomains || WILDCARD;\n\n        if (Component.components[this.tag]) {\n            throw new Error(`Can not register multiple components with the same tag: ${ this.tag }`);\n        }\n\n        // A json based spec describing what kind of props the component accepts. This is used to validate any props before\n        // they are passed down to the child.\n\n        this.builtinProps = getBuiltInProps();\n        this.props = options.props || {};\n\n        // The dimensions of the component, e.g. { width: '300px', height: '150px' }\n\n        const { width = DEFAULT_DIMENSIONS.WIDTH, height = DEFAULT_DIMENSIONS.HEIGHT } = options.dimensions || {};\n        this.dimensions = { width, height };\n\n        this.url = options.url;\n        this.domain = options.domain;\n        this.bridgeUrl = options.bridgeUrl;\n\n        this.attributes = options.attributes || {};\n        this.attributes.iframe = this.attributes.iframe || {};\n        this.attributes.popup = this.attributes.popup || {};\n\n        this.defaultContext = options.defaultContext || CONTEXT.IFRAME;\n\n        this.autoResize = options.autoResize;\n\n        // $FlowFixMe\n        this.containerTemplate = options.containerTemplate || (__ZOID__.__DEFAULT_CONTAINER__ ? defaultContainerTemplate : null);\n        this.prerenderTemplate = options.prerenderTemplate || (__ZOID__.__DEFAULT_PRERENDER__ ? defaultPrerenderTemplate : null);\n\n        this.validate = options.validate;\n\n        this.logger = options.logger || {\n            debug: noop,\n            info:  noop,\n            warn:  noop,\n            error: noop\n        };\n\n        this.registerChild();\n        this.listenDelegate();\n\n        Component.components[this.tag] = this;\n    }\n\n    getPropNames() : $ReadOnlyArray<string> {\n        if (this.propNames) {\n            return this.propNames;\n        }\n\n        const propNames = Object.keys(this.props);\n        for (const key of Object.keys(this.builtinProps)) {\n            if (propNames.indexOf(key) === -1) {\n                propNames.push(key);\n            }\n        }\n\n        this.propNames = propNames;\n        return propNames;\n    }\n\n    // $FlowFixMe\n    getPropDefinition(name : string) : MixedPropDefinitionType<P> {\n        // $FlowFixMe\n        return this.props[name] || this.builtinProps[name];\n    }\n\n    driver(name : string, dep : mixed) : mixed {\n        if (__ZOID__.__FRAMEWORK_SUPPORT__) {\n            const drivers = { react, angular, vue, angular2 };\n\n            if (!drivers[name]) {\n                throw new Error(`Could not find driver for framework: ${ name }`);\n            }\n    \n            this.driverCache = this.driverCache || {};\n    \n            if (!this.driverCache[name]) {\n                this.driverCache[name] = drivers[name].register(this, dep);\n            }\n    \n            return this.driverCache[name];\n        } else {\n            throw new Error(`Driver support not enabled`);\n        }\n    }\n\n    registerChild() {\n        if (this.isChild()) {\n            if (window.xprops) {\n                throw new Error(`Can not register ${ this.name } as child - can not attach multiple components to the same window`);\n            }\n\n            const child = new ChildComponent(this);\n            window.xprops = this.xprops = child.getProps();\n        }\n    }\n\n    listenDelegate() {\n        on(`${ POST_MESSAGE.ALLOW_DELEGATE }_${ this.name }`, () => {\n            return true;\n        });\n\n        on(`${ POST_MESSAGE.DELEGATE }_${ this.name }`, ({ source, data: { context, props, overrides } }) => {\n            const delegate = new DelegateComponent(this, source, { context, props, overrides });\n            return delegate.getDelegate();\n        });\n    }\n\n    canRenderTo(win : CrossDomainWindowType) : ZalgoPromise<boolean> {\n        return send(win, `${ POST_MESSAGE.ALLOW_DELEGATE }_${ this.name }`).then(({ data }) => {\n            return data;\n        }).catch(() => {\n            return false;\n        });\n    }\n\n    getUrl(props : PropsType<P>) : string {\n        if (typeof this.url === 'function') {\n            return this.url({ props });\n        }\n\n        return this.url;\n    }\n\n    getInitialDomain(props : PropsType<P>) : string {\n        if (this.domain && typeof this.domain === 'string') {\n            return this.domain;\n        }\n\n        return getDomainFromUrl(this.getUrl(props));\n    }\n\n    getDomain(props : PropsType<P>) : string | RegExp {\n        if (isRegex(this.domain)) {\n            // $FlowFixMe\n            return this.domain;\n        }\n\n        return this.getInitialDomain(props);\n    }\n\n    getBridgeUrl() : ?string {\n        if (this.bridgeUrl) {\n            return this.bridgeUrl;\n        }\n    }\n\n    isChild() : boolean {\n        const payload = getChildPayload();\n        return Boolean(payload && payload.tag === this.tag);\n    }\n\n    getDefaultContainer<T : (string | HTMLElement)>(context : $Values<typeof CONTEXT>, container? : T) : T {\n        if (container) {\n            if (typeof container !== 'string' && !isElement(container)) {\n                throw new TypeError(`Expected string or element selector to be passed`);\n            }\n\n            return container;\n        }\n\n        if (context === CONTEXT.POPUP) {\n            // $FlowFixMe\n            return 'body';\n        }\n\n        throw new Error(`Expected element to be passed to render iframe`);\n    }\n\n    getDefaultContext(context : ?$Values<typeof CONTEXT>, props : PropsInputType<P>) : $Values<typeof CONTEXT> {\n        if (props.window) {\n            return toProxyWindow(props.window).getType();\n        }\n\n        if (context) {\n            if (context !== CONTEXT.IFRAME && context !== CONTEXT.POPUP) {\n                throw new Error(`Unrecognized context: ${ context }`);\n            }\n            \n            return context;\n        }\n\n        return this.defaultContext;\n    }\n\n    init(props : PropsInputType<P>) : ZoidComponentInstance<P> {\n\n        // $FlowFixMe\n        props = props || {};\n        \n        const parent = new ParentComponent(this, props);\n\n        const render = (target, container, context) => ZalgoPromise.try(() => {\n            if (!isWindow(target)) {\n                throw new Error(`Must pass window to renderTo`);\n            }\n\n            context = this.getDefaultContext(context, props);\n            container = this.getDefaultContainer(context, container);\n            return parent.render(target, container, context);\n        });\n\n        return {\n            ...parent.getHelpers(),\n            render:   (container, context) => render(window, container, context),\n            renderTo: (target, container, context) => render(target, container, context)\n        };\n    }\n\n    checkAllowRender(target : CrossDomainWindowType, domain : string | RegExp, container : string | HTMLElement) {\n        if (target === window) {\n            return;\n        }\n\n        if (!isSameTopWindow(window, target)) {\n            throw new Error(`Can only renderTo an adjacent frame`);\n        }\n\n        const origin = getDomain();\n\n        if (!matchDomain(domain, origin) && !isSameDomain(target)) {\n            throw new Error(`Can not render remotely to ${ domain.toString() } - can only render to ${ origin }`);\n        }\n\n        if (container && typeof container !== 'string') {\n            throw new Error(`Container passed to renderTo must be a string selector, got ${ typeof container } }`);\n        }\n    }\n\n    log(event : string, payload? : LoggerPayload) {\n        this.logger.info(`${ this.name }_${ event }`, payload);\n    }\n\n    static components : { [string] : Component<*> } = {}\n    static activeComponents : Array<ParentComponent<*> | DelegateComponent<*>> = [] // eslint-disable-line flowtype/no-mutable-array\n\n    registerActiveComponent<Q>(instance : ParentComponent<Q> | DelegateComponent<Q>) {\n        Component.activeComponents.push(instance);\n    }\n\n    destroyActiveComponent<Q>(instance : ParentComponent<Q> | DelegateComponent<Q>) {\n        Component.activeComponents.splice(Component.activeComponents.indexOf(instance), 1);\n    }\n\n    static destroyAll() : ZalgoPromise<void> {\n        if (bridge) {\n            bridge.destroyBridges();\n        }\n\n        const results = [];\n\n        while (Component.activeComponents.length) {\n            results.push(Component.activeComponents[0].destroy());\n        }\n\n        return ZalgoPromise.all(results).then(noop);\n    }\n}\n\nexport type ComponentDriverType<P, T : mixed> = {|\n    register : (Component<P>, T) => mixed\n|};\n\nexport function create<P>(options : ComponentOptionsType<P>) : ZoidComponent<P> {\n    const component : Component<P> = new Component(options);\n\n    const init = (props) => component.init(props);\n    init.driver = (name, dep) => component.driver(name, dep);\n    init.isChild = () => component.isChild();\n    init.canRenderTo = (win) => component.canRenderTo(win);\n    init.xprops = component.xprops;\n\n    // $FlowFixMe\n    return init;\n}\n\nexport function destroyAll() : ZalgoPromise<void> {\n    return Component.destroyAll();\n}\n","/* @flow */\n\nimport { isPerc, isPx, values } from 'belter/src';\n\nimport { CONTEXT, PROP_TYPE } from '../constants';\n\nimport type { ComponentOptionsType } from './index';\n\nfunction validatePropDefinitions<P>(options : ComponentOptionsType<P>) {\n\n    if (options.props && !(typeof options.props === 'object')) {\n        throw new Error(`Expected options.props to be an object`);\n    }\n\n    const PROP_TYPE_LIST = values(PROP_TYPE);\n\n    if (options.props) {\n        for (const key of Object.keys(options.props)) {\n\n            // $FlowFixMe\n            const prop = options.props[key];\n\n            if (!prop || !(typeof prop === 'object')) {\n                throw new Error(`Expected options.props.${ key } to be an object`);\n            }\n\n            if (!prop.type) {\n                throw new Error(`Expected prop.type`);\n            }\n\n            if (PROP_TYPE_LIST.indexOf(prop.type) === -1) {\n                throw new Error(`Expected prop.type to be one of ${ PROP_TYPE_LIST.join(', ') }`);\n            }\n\n            if (prop.required && prop.default) {\n                throw new Error(`Required prop can not have a default value`);\n            }\n\n            if (prop.type === PROP_TYPE.FUNCTION && prop.queryParam && !prop.queryValue) {\n                throw new Error(`Do not pass queryParam for function prop`);\n            }\n        }\n    }\n}\n\n// eslint-disable-next-line complexity\nexport function validate<P>(options : ?ComponentOptionsType<P>) { // eslint-ignore-line\n\n    if (!options) {\n        throw new Error(`Expected options to be passed`);\n    }\n\n    // eslint-disable-next-line security/detect-unsafe-regex, unicorn/no-unsafe-regex\n    if (!options.tag || !options.tag.match(/^([a-z0-9]+-)+[a-z0-9]+$/)) {\n        throw new Error(`Invalid options.tag: ${ options.tag }`);\n    }\n\n    validatePropDefinitions(options);\n\n    if (options.dimensions) {\n        if (options.dimensions && !isPx(options.dimensions.width) && !isPerc(options.dimensions.width)) {\n            throw new Error(`Expected options.dimensions.width to be a px or % string value`);\n        }\n\n        if (options.dimensions && !isPx(options.dimensions.height) && !isPerc(options.dimensions.height)) {\n            throw new Error(`Expected options.dimensions.height to be a px or % string value`);\n        }\n    }\n\n    if (options.defaultContext) {\n        if (options.defaultContext !== CONTEXT.IFRAME && options.defaultContext !== CONTEXT.POPUP) {\n            throw new Error(`Unsupported context type: ${ options.defaultContext || 'unknown' }`);\n        }\n    }\n\n    if (!options.url) {\n        throw new Error(`Must pass url`);\n    }\n\n    if (typeof options.url !== 'string' && typeof options.url !== 'function') {\n        throw new TypeError(`Expected url to be string or function`);\n    }\n\n    if (options.prerenderTemplate && typeof options.prerenderTemplate !== 'function') {\n        throw new Error(`Expected options.prerenderTemplate to be a function`);\n    }\n\n    if ((options.containerTemplate || !__ZOID__.__DEFAULT_CONTAINER__) && typeof options.containerTemplate !== 'function') {\n        throw new Error(`Expected options.containerTemplate to be a function`);\n    }\n}\n","/* @flow */\n\nexport { PopupOpenError } from 'belter/src';\nexport { create, destroyAll, Component } from './component';\nexport type { ZoidComponent, ZoidComponentInstance } from './component';\nexport { PROP_TYPE, PROP_SERIALIZATION, CONTEXT, EVENT } from './constants';\n"],"sourceRoot":""}